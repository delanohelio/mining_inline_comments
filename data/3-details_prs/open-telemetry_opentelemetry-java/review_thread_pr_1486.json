{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5MjM1Mzk2", "number": 1486, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDo1MDo0OFrOETtuXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDozNzo1NVrOEUFOZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MTA3NTUxOnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/export/ExporterConstants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDo1MDo0OFrOG5mmNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDo1MDo0OFrOG5mmNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA1NDM5MQ==", "bodyText": "Start with uppercase for all javadoc", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1486#discussion_r463054391", "createdAt": "2020-07-30T14:50:48Z", "author": {"login": "anuraaga"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/export/ExporterConstants.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2019, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.trace.export;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+/** Provides constants for all exporter default configuration values. */\n+public class ExporterConstants {\n+\n+  private ExporterConstants() {}\n+\n+  /** common unknown constant. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a9eaafa492ccb97b0bb63c16dd89c99e21db9c8"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MTA4OTIyOnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/export/ExporterConstants.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDo1Mzo0OVrOG5mu3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNjo0OToyNFrOG5reXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA1NjYwNw==", "bodyText": "This seems like a too generic constant, we'd generally expect the default configuration value to be empty. Translating that to unknown may be an exporter-specific implementation detail.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1486#discussion_r463056607", "createdAt": "2020-07-30T14:53:49Z", "author": {"login": "anuraaga"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/export/ExporterConstants.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2019, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.trace.export;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+/** Provides constants for all exporter default configuration values. */\n+public class ExporterConstants {\n+\n+  private ExporterConstants() {}\n+\n+  /** common unknown constant. */\n+  public static final String UNKNOWN = \"unknown\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a9eaafa492ccb97b0bb63c16dd89c99e21db9c8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEzNDMwMQ==", "bodyText": "thx. fixed at lastest commit.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1486#discussion_r463134301", "createdAt": "2020-07-30T16:49:24Z", "author": {"login": "dengliming"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/export/ExporterConstants.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2019, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.trace.export;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+/** Provides constants for all exporter default configuration values. */\n+public class ExporterConstants {\n+\n+  private ExporterConstants() {}\n+\n+  /** common unknown constant. */\n+  public static final String UNKNOWN = \"unknown\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA1NjYwNw=="}, "originalCommit": {"oid": "7a9eaafa492ccb97b0bb63c16dd89c99e21db9c8"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MTYwMDk4OnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/export/ExporterConstants.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNjo1NToxN1rOG5rsbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzo0OToxMlrOG5tjQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEzNzkwMw==", "bodyText": "This should not be an exporter constant.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1486#discussion_r463137903", "createdAt": "2020-07-30T16:55:17Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/export/ExporterConstants.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2019, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.trace.export;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+/** Provides constants for all exporter default configuration values. */\n+public class ExporterConstants {\n+\n+  private ExporterConstants() {}\n+\n+  /** Common default host name. */\n+  public static final String DEFAULT_HOST_NAME = \"unknown\";\n+  /** Common default service name. */\n+  public static final String DEFAULT_SERVICE_NAME = DEFAULT_HOST_NAME;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b910b31fc4e89c67dc9fb69e52dd2d6f82266e22"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE2ODMyMA==", "bodyText": "This can be reconsidered. If it doesn't make sense we can remove it.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1486#discussion_r463168320", "createdAt": "2020-07-30T17:49:12Z", "author": {"login": "dengliming"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/export/ExporterConstants.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2019, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.trace.export;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+/** Provides constants for all exporter default configuration values. */\n+public class ExporterConstants {\n+\n+  private ExporterConstants() {}\n+\n+  /** Common default host name. */\n+  public static final String DEFAULT_HOST_NAME = \"unknown\";\n+  /** Common default service name. */\n+  public static final String DEFAULT_SERVICE_NAME = DEFAULT_HOST_NAME;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEzNzkwMw=="}, "originalCommit": {"oid": "b910b31fc4e89c67dc9fb69e52dd2d6f82266e22"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MTYwMzE5OnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/export/ExporterConstants.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNjo1NTo1MVrOG5rtyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzo0ODo0OFrOG5tiZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEzODI0OA==", "bodyText": "Why unknown default?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1486#discussion_r463138248", "createdAt": "2020-07-30T16:55:51Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/export/ExporterConstants.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2019, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.trace.export;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+/** Provides constants for all exporter default configuration values. */\n+public class ExporterConstants {\n+\n+  private ExporterConstants() {}\n+\n+  /** Common default host name. */\n+  public static final String DEFAULT_HOST_NAME = \"unknown\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b910b31fc4e89c67dc9fb69e52dd2d6f82266e22"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE2ODEwMA==", "bodyText": "The default value used now is unknown. see \n  \n    \n      opentelemetry-java/exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java\n    \n    \n         Line 170\n      in\n      78ed649\n    \n    \n    \n    \n\n        \n          \n           private String serviceName = UNKNOWN; \n        \n    \n  \n\n\n\n  \n    \n      opentelemetry-java/exporters/zipkin/src/main/java/io/opentelemetry/exporters/zipkin/ZipkinSpanExporter.java\n    \n    \n         Line 282\n      in\n      78ed649\n    \n    \n    \n    \n\n        \n          \n           private static final String DEFAULT_SERVICE_NAME = \"unknown\";", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1486#discussion_r463168100", "createdAt": "2020-07-30T17:48:48Z", "author": {"login": "dengliming"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/export/ExporterConstants.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2019, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.trace.export;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+/** Provides constants for all exporter default configuration values. */\n+public class ExporterConstants {\n+\n+  private ExporterConstants() {}\n+\n+  /** Common default host name. */\n+  public static final String DEFAULT_HOST_NAME = \"unknown\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEzODI0OA=="}, "originalCommit": {"oid": "b910b31fc4e89c67dc9fb69e52dd2d6f82266e22"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjM0MzAzOnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/export/ExporterConstants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDozNjowOVrOG5y6Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDozNjowOVrOG5y6Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1NjEwNw==", "bodyText": "I don't think it's a good idea to centralize these constants that are only used by the specific exporters. Keep the knowledge close to the place that needs it.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1486#discussion_r463256107", "createdAt": "2020-07-30T20:36:09Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/export/ExporterConstants.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2019, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.trace.export;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+/** Provides constants for all exporter default configuration values. */\n+public class ExporterConstants {\n+\n+  private ExporterConstants() {}\n+\n+  /** Common default host name. */\n+  public static final String DEFAULT_HOST_NAME = \"unknown\";\n+  /** Common default service name. */\n+  public static final String DEFAULT_SERVICE_NAME = DEFAULT_HOST_NAME;\n+\n+  public static final long DEFAULT_DEADLINE_MS = TimeUnit.SECONDS.toMillis(1); // 1 second\n+\n+  /** Default endpoint for otlp. */\n+  public static final String OTLP_DEFAULT_ENDPOINT = \"localhost:55680\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b910b31fc4e89c67dc9fb69e52dd2d6f82266e22"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDc4NjMyOnYy", "diffSide": "RIGHT", "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMzo1ODozMlrOG6Jlnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMzo1ODozMlrOG6Jlnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYyNzY3OQ==", "bodyText": "The obsessive in me would love to have the public constants next to each other ;)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1486#discussion_r463627679", "createdAt": "2020-07-31T13:58:32Z", "author": {"login": "carlosalberto"}, "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "diffHunk": "@@ -39,11 +39,13 @@\n   private static final Logger logger = Logger.getLogger(JaegerGrpcSpanExporter.class.getName());\n   private static final String CLIENT_VERSION_KEY = \"jaeger.version\";\n   private static final String CLIENT_VERSION_VALUE = \"opentelemetry-java\";\n-  private static final String DEFAULT_JAEGER_ENDPOINT = \"localhost:14250\";\n+  public static final String DEFAULT_ENDPOINT = \"localhost:14250\";\n   private static final String HOSTNAME_KEY = \"hostname\";\n-  private static final String UNKNOWN = \"unknown\";\n+  private static final String DEFAULT_HOST_NAME = \"unknown\";\n   private static final String IP_KEY = \"ip\";\n   private static final String IP_DEFAULT = \"0.0.0.0\";\n+  public static final String DEFAULT_SERVICE_NAME = DEFAULT_HOST_NAME;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "675c76c4d84cd4ed3e4b499c10f53836b00c155b"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDkxOTA5OnYy", "diffSide": "RIGHT", "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDozNjowOFrOG6K3rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDozNjowOFrOG6K3rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY0ODY4NA==", "bodyText": "Comment is not needed anymore", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1486#discussion_r463648684", "createdAt": "2020-07-31T14:36:08Z", "author": {"login": "iNikem"}, "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "diffHunk": "@@ -167,10 +168,10 @@ public void shutdown() {\n     private static final String KEY_SERVICE_NAME = \"otel.jaeger.service.name\";\n     private static final String KEY_ENDPOINT = \"otel.jaeger.endpoint\";\n \n-    private String serviceName = UNKNOWN;\n-    private String endpoint = DEFAULT_JAEGER_ENDPOINT;\n+    private String serviceName = DEFAULT_SERVICE_NAME;\n+    private String endpoint = DEFAULT_ENDPOINT;\n     private ManagedChannel channel;\n-    private long deadlineMs = 1_000; // 1 second\n+    private long deadlineMs = DEFAULT_DEADLINE_MS; // 1 second", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc30adcc9ea39f3c77953cfe598d7f3488d74acd"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDkyMzM5OnYy", "diffSide": "RIGHT", "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDozNzoxN1rOG6K6SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTowODoyMVrOG6MAAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY0OTM1Mg==", "bodyText": "Usually public static final fields are on the top, no?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1486#discussion_r463649352", "createdAt": "2020-07-31T14:37:17Z", "author": {"login": "iNikem"}, "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "diffHunk": "@@ -39,16 +39,17 @@\n   private static final Logger logger = Logger.getLogger(JaegerGrpcSpanExporter.class.getName());\n   private static final String CLIENT_VERSION_KEY = \"jaeger.version\";\n   private static final String CLIENT_VERSION_VALUE = \"opentelemetry-java\";\n-  private static final String DEFAULT_JAEGER_ENDPOINT = \"localhost:14250\";\n   private static final String HOSTNAME_KEY = \"hostname\";\n-  private static final String UNKNOWN = \"unknown\";\n+  private static final String DEFAULT_HOST_NAME = \"unknown\";\n   private static final String IP_KEY = \"ip\";\n   private static final String IP_DEFAULT = \"0.0.0.0\";\n-\n   private final CollectorServiceGrpc.CollectorServiceBlockingStub blockingStub;\n   private final Model.Process process;\n   private final ManagedChannel managedChannel;\n   private final long deadlineMs;\n+  public static final String DEFAULT_ENDPOINT = \"localhost:14250\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc30adcc9ea39f3c77953cfe598d7f3488d74acd"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2NzIwMg==", "bodyText": "agree. thx.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1486#discussion_r463667202", "createdAt": "2020-07-31T15:08:21Z", "author": {"login": "dengliming"}, "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "diffHunk": "@@ -39,16 +39,17 @@\n   private static final Logger logger = Logger.getLogger(JaegerGrpcSpanExporter.class.getName());\n   private static final String CLIENT_VERSION_KEY = \"jaeger.version\";\n   private static final String CLIENT_VERSION_VALUE = \"opentelemetry-java\";\n-  private static final String DEFAULT_JAEGER_ENDPOINT = \"localhost:14250\";\n   private static final String HOSTNAME_KEY = \"hostname\";\n-  private static final String UNKNOWN = \"unknown\";\n+  private static final String DEFAULT_HOST_NAME = \"unknown\";\n   private static final String IP_KEY = \"ip\";\n   private static final String IP_DEFAULT = \"0.0.0.0\";\n-\n   private final CollectorServiceGrpc.CollectorServiceBlockingStub blockingStub;\n   private final Model.Process process;\n   private final ManagedChannel managedChannel;\n   private final long deadlineMs;\n+  public static final String DEFAULT_ENDPOINT = \"localhost:14250\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY0OTM1Mg=="}, "originalCommit": {"oid": "bc30adcc9ea39f3c77953cfe598d7f3488d74acd"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDkyNTMzOnYy", "diffSide": "RIGHT", "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcMetricExporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDozNzo0N1rOG6K7fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDozNzo0N1rOG6K7fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY0OTY2MQ==", "bodyText": "Comment not needed", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1486#discussion_r463649661", "createdAt": "2020-07-31T14:37:47Z", "author": {"login": "iNikem"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcMetricExporter.java", "diffHunk": "@@ -158,8 +160,8 @@ public void shutdown() {\n     private static final String KEY_USE_TLS = \"otel.otlp.use.tls\";\n     private static final String KEY_METADATA = \"otel.otlp.metadata\";\n     private ManagedChannel channel;\n-    private long deadlineMs = 1_000; // 1 second\n-    private String endpoint = \"localhost:55680\";\n+    private long deadlineMs = DEFAULT_DEADLINE_MS; // 1 second", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc30adcc9ea39f3c77953cfe598d7f3488d74acd"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDkyNTgzOnYy", "diffSide": "RIGHT", "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDozNzo1NVrOG6K7yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDozNzo1NVrOG6K7yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY0OTczOA==", "bodyText": "Comment not needed", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1486#discussion_r463649738", "createdAt": "2020-07-31T14:37:55Z", "author": {"login": "iNikem"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -166,8 +168,8 @@ public void shutdown() {\n     private static final String KEY_USE_TLS = \"otel.otlp.use.tls\";\n     private static final String KEY_METADATA = \"otel.otlp.metadata\";\n     private ManagedChannel channel;\n-    private long deadlineMs = 1_000; // 1 second\n-    private String endpoint = \"localhost:55680\";\n+    private long deadlineMs = DEFAULT_DEADLINE_MS; // 1 second", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc30adcc9ea39f3c77953cfe598d7f3488d74acd"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1293, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}