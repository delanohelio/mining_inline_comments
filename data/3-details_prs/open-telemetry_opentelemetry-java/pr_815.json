{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwODAzMDkw", "number": 815, "title": "Http trace context benchmark", "bodyText": "Extract and inject benchmarks for http context #792", "createdAt": "2020-02-04T12:11:26Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/815", "merged": true, "mergeCommit": {"oid": "1fced4898fd82a7c9e237c65de4dc235e7085758"}, "closed": true, "closedAt": "2020-02-18T22:36:07Z", "author": {"login": "DotSpy"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcAZUxkAH2gAyMzcwODAzMDkwOjkxMjM3NTQyOTc1YjE5YThlYWVkMmRjNGVhNTZiNTZhNDE5NDliMWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcFpxgSgFqTM2MDcyNDQ3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "91237542975b19a8eaed2dc4ea56b56a41949b1c", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/91237542975b19a8eaed2dc4ea56b56a41949b1c", "committedDate": "2020-02-02T14:36:24Z", "message": "Merge pull request #1 from open-telemetry/master\n\nmerge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a712829fa8853c9d09370ca209436084295b73b", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9a712829fa8853c9d09370ca209436084295b73b", "committedDate": "2020-02-04T11:56:39Z", "message": "test: add benchmarks for http trace context extract and inject"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd256fded0a934912dc00654a1752589737a2e84", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/fd256fded0a934912dc00654a1752589737a2e84", "committedDate": "2020-02-04T12:08:51Z", "message": "test: add benchmarks for http trace context extract and inject"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22d1601be038e1269d4fb015df999269e5a051ae", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/22d1601be038e1269d4fb015df999269e5a051ae", "committedDate": "2020-02-04T12:33:39Z", "message": "docs: add docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad5de141cba53cb97161c1fa7e5573d165cc12ef", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ad5de141cba53cb97161c1fa7e5573d165cc12ef", "committedDate": "2020-02-04T12:37:36Z", "message": "style: apply google code style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMjkyMTc1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/815#pullrequestreview-353292175", "createdAt": "2020-02-04T20:51:56Z", "commit": {"oid": "ad5de141cba53cb97161c1fa7e5573d165cc12ef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMDo1MTo1NlrOFljCaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMDo1MTo1NlrOFljCaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkxNTY4OA==", "bodyText": "any idea why all these reformats happened?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/815#discussion_r374915688", "createdAt": "2020-02-04T20:51:56Z", "author": {"login": "jkwatson"}, "path": "jmh.gradle", "diffHunk": "@@ -52,10 +52,10 @@\n \n sourceSets {\n     jmh {\n-\tjava.srcDir 'src/jmh/java'\n-\tresources.srcDir 'src/jmh/resources'\n-\tcompileClasspath += main.output\n-\truntimeClasspath += main.output\n+        java.srcDir 'src/jmh/java'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5de141cba53cb97161c1fa7e5573d165cc12ef"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMzI5NTUw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/815#pullrequestreview-353329550", "createdAt": "2020-02-04T21:54:50Z", "commit": {"oid": "ad5de141cba53cb97161c1fa7e5573d165cc12ef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMTo1NDo1MVrOFlk0rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMTo1NDo1MVrOFlk0rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk0NDk0MA==", "bodyText": "Wondering if it would be useful to use more 'complex' ids.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/815#discussion_r374944940", "createdAt": "2020-02-04T21:54:51Z", "author": {"login": "carlosalberto"}, "path": "api/src/jmh/java/io/opentelemetry/trace/propagation/HttpTraceContextExtractBenchmark.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.trace.propagation;\n+\n+import io.opentelemetry.context.propagation.HttpTextFormat.Getter;\n+import io.opentelemetry.trace.SpanContext;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.concurrent.TimeUnit;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Level;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.TearDown;\n+import org.openjdk.jmh.annotations.Warmup;\n+\n+@State(Scope.Thread)\n+public class HttpTraceContextExtractBenchmark {\n+\n+  private String traceIdBase16 = \"ff000000000000000000000000000041\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5de141cba53cb97161c1fa7e5573d165cc12ef"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47da1efd8546d8032b0ff1fd1f24726939afe8a3", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/47da1efd8546d8032b0ff1fd1f24726939afe8a3", "committedDate": "2020-02-05T19:27:11Z", "message": "style: format jmh.gradle, use not deprecated archiveFileName"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a6b82104ca39e34eed9da7384f3a2c83acb2e58", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/3a6b82104ca39e34eed9da7384f3a2c83acb2e58", "committedDate": "2020-02-07T20:06:06Z", "message": "Merge branch 'master' into spancontext_benchmark"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1177d260b884bfe229400ad3ff136c73bd885a0", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/f1177d260b884bfe229400ad3ff136c73bd885a0", "committedDate": "2020-02-07T20:07:16Z", "message": "test: add params for trace id and span id"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc5cfb7cbc473986f1be680c4c0bb653dfd3a41f", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/dc5cfb7cbc473986f1be680c4c0bb653dfd3a41f", "committedDate": "2020-02-07T20:38:14Z", "message": "Merge remote-tracking branch 'upstream/master'\nMerge upstream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55ae4d291b39be5265ccfef57a839e468efc9393", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/55ae4d291b39be5265ccfef57a839e468efc9393", "committedDate": "2020-02-07T20:41:12Z", "message": "Merge branch 'master' into spancontext_benchmark"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb518d0f5bb285fcd4bc185cd9f2d14b60c4afd9", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/fb518d0f5bb285fcd4bc185cd9f2d14b60c4afd9", "committedDate": "2020-02-07T20:42:19Z", "message": "fix: fix merge conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NDQxODcx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/815#pullrequestreview-355441871", "createdAt": "2020-02-07T21:16:43Z", "commit": {"oid": "fb518d0f5bb285fcd4bc185cd9f2d14b60c4afd9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMToxNjo0NFrOFnKiiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMToxNjo0NFrOFnKiiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxMTQ2NQ==", "bodyText": "Curious about the usage of a Linked hashmap here. Why not just a plain HashMap?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/815#discussion_r376611465", "createdAt": "2020-02-07T21:16:44Z", "author": {"login": "jkwatson"}, "path": "api/src/jmh/java/io/opentelemetry/trace/propagation/HttpTraceContextInjectBenchmark.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.trace.propagation;\n+\n+import io.opentelemetry.context.propagation.HttpTextFormat.Setter;\n+import io.opentelemetry.trace.SpanContext;\n+import io.opentelemetry.trace.SpanId;\n+import io.opentelemetry.trace.TraceFlags;\n+import io.opentelemetry.trace.TraceId;\n+import io.opentelemetry.trace.TraceState;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.concurrent.TimeUnit;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Level;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.Param;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.TearDown;\n+import org.openjdk.jmh.annotations.Warmup;\n+\n+@State(Scope.Thread)\n+public class HttpTraceContextInjectBenchmark {\n+\n+  @Param({\n+    \"905734c59b913b4a905734c59b913b4a\",\n+    \"21196a77f299580e21196a77f299580e\",\n+    \"2e7d0ad2390617702e7d0ad239061770\",\n+    \"905734c59b913b4a905734c59b913b4a\",\n+    \"68ec932c33b3f2ee68ec932c33b3f2ee\"\n+  })\n+  public static String traceIdBase16;\n+\n+  @Param({\n+    \"9909983295041501\",\n+    \"993a97ee3691eb26\",\n+    \"d49582a2de984b86\",\n+    \"776ff807b787538a\",\n+    \"68ec932c33b3f2ee\"\n+  })\n+  public static String spanIdBase16;\n+\n+  private byte sampledTraceOptionsBytes = 1;\n+  private TraceFlags sampledTraceOptions = TraceFlags.fromByte(sampledTraceOptionsBytes);\n+  private TraceState traceStateDefault = TraceState.builder().build();\n+\n+  private HttpTraceContext httpTraceContext;\n+  private Map<String, String> carrier;\n+  private Setter<Map<String, String>> setter =\n+      new Setter<Map<String, String>>() {\n+        @Override\n+        public void set(Map<String, String> carrier, String key, String value) {\n+          carrier.put(key, value);\n+        }\n+      };\n+\n+  @State(Scope.Thread)\n+  public static class HttpTraceContextInjectState {\n+\n+    public TraceId traceId;\n+    public SpanId spanId;\n+\n+    @Setup\n+    public void setup() {\n+      this.traceId = TraceId.fromLowerBase16(traceIdBase16, 0);\n+      this.spanId = SpanId.fromLowerBase16(spanIdBase16, 0);\n+    }\n+  }\n+\n+  @Setup\n+  public void setup() {\n+    this.httpTraceContext = new HttpTraceContext();\n+    this.carrier = new LinkedHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb518d0f5bb285fcd4bc185cd9f2d14b60c4afd9"}, "originalPosition": 92}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbeb6bfbcc2f15d7f952159dcb090582713c1962", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/fbeb6bfbcc2f15d7f952159dcb090582713c1962", "committedDate": "2020-02-07T21:47:55Z", "message": "feat: use HashMap move params to inner state"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ace58035ae8cc784ea6034346e2986d27d2d2d2", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/4ace58035ae8cc784ea6034346e2986d27d2d2d2", "committedDate": "2020-02-07T21:56:24Z", "message": "feat: use same measurement params"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76b3f5d65eba6e1ec66dfa3eb591d8e3aa192b23", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/76b3f5d65eba6e1ec66dfa3eb591d8e3aa192b23", "committedDate": "2020-02-07T22:01:48Z", "message": "fix: apply google code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6294048e91653ee5df33d470e4c63a447c90b3d0", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/6294048e91653ee5df33d470e4c63a447c90b3d0", "committedDate": "2020-02-08T18:49:29Z", "message": "fix: extract span creation for more clear benchmark"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MTU0NTY3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/815#pullrequestreview-356154567", "createdAt": "2020-02-10T18:15:28Z", "commit": {"oid": "6294048e91653ee5df33d470e4c63a447c90b3d0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74b1734d356267eb2e6137086499531aa7704fc1", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/74b1734d356267eb2e6137086499531aa7704fc1", "committedDate": "2020-02-14T16:20:52Z", "message": "test: use vector of traceparents, increase iterations to 50k"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9f61a674642e2a140e049e23052e1908d120b9b", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c9f61a674642e2a140e049e23052e1908d120b9b", "committedDate": "2020-02-14T16:23:34Z", "message": "style: apply google code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c984f505652d8ca789794a5bf17677739eb9978", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7c984f505652d8ca789794a5bf17677739eb9978", "committedDate": "2020-02-14T17:29:26Z", "message": "Merge remote-tracking branch 'upstream/master' into spancontext_benchmark"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da76a061df6bc2de15c4524af89b3daa11cb2e3c", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/da76a061df6bc2de15c4524af89b3daa11cb2e3c", "committedDate": "2020-02-14T17:50:10Z", "message": "feat: use vector of traceparents in inject benchmark"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MzU2MTA2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/815#pullrequestreview-359356106", "createdAt": "2020-02-15T17:22:30Z", "commit": {"oid": "da76a061df6bc2de15c4524af89b3daa11cb2e3c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7ed32dfb18f4b1d7e54f6b78bc8fa776a74105c", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d7ed32dfb18f4b1d7e54f6b78bc8fa776a74105c", "committedDate": "2020-02-16T13:20:50Z", "message": "Merge remote-tracking branch 'upstream/master' into spancontext_benchmark"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9d35bba2c61694b696f3652ee6a2fb50c6f814a", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c9d35bba2c61694b696f3652ee6a2fb50c6f814a", "committedDate": "2020-02-17T17:22:40Z", "message": "Merge remote-tracking branch 'upstream/master' into spancontext_benchmark"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76c2a54ae41f682ea77929eab6ded6dddfb9c7c2", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/76c2a54ae41f682ea77929eab6ded6dddfb9c7c2", "committedDate": "2020-02-18T21:30:39Z", "message": "Merge remote-tracking branch 'upstream/master' into spancontext_benchmark"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNzI0NDc3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/815#pullrequestreview-360724477", "createdAt": "2020-02-18T22:35:53Z", "commit": {"oid": "76c2a54ae41f682ea77929eab6ded6dddfb9c7c2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3303, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}