{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MzgyNDYx", "number": 1516, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMDowNTo0MlrOEW8WKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMDowNTo0MlrOEW8WKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDkyODQwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMDowNTo0MlrOG-drQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMDoyNDozMlrOG-eibA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE1MTEwNQ==", "bodyText": "Would be good to keep the Labels in sync and add similar functionality there?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1516#discussion_r468151105", "createdAt": "2020-08-10T20:05:42Z", "author": {"login": "bogdandrutu"}, "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "diffHunk": "@@ -44,6 +44,11 @@\n \n     @Override\n     abstract List<Object> data();\n+\n+    @Override\n+    public Builder toBuilder() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f178edc94d3e052c9e83f6328d6297f25332240f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE2NTIyOA==", "bodyText": "Labels actually got it implemented first.  :). \n  \n    \n      opentelemetry-java/api/src/main/java/io/opentelemetry/common/Labels.java\n    \n    \n         Line 114\n      in\n      7ca698f\n    \n    \n    \n    \n\n        \n          \n           public Builder toBuilder() {", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1516#discussion_r468165228", "createdAt": "2020-08-10T20:24:32Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "diffHunk": "@@ -44,6 +44,11 @@\n \n     @Override\n     abstract List<Object> data();\n+\n+    @Override\n+    public Builder toBuilder() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE1MTEwNQ=="}, "originalCommit": {"oid": "f178edc94d3e052c9e83f6328d6297f25332240f"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1313, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}