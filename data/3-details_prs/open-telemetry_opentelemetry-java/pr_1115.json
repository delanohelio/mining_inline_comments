{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzOTIxMzQ3", "number": 1115, "title": "Provides a way to enable/disable the docker integration tests via a gradle property", "bodyText": "Resolves #1067", "createdAt": "2020-04-15T18:32:01Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115", "merged": true, "mergeCommit": {"oid": "c32c776a70007760aac9e410bae63ecf6f282081"}, "closed": true, "closedAt": "2020-04-16T22:12:31Z", "author": {"login": "jkwatson"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcX8cAVAH2gAyNDAzOTIxMzQ3OjM0YzE4NWM1MDY1NjkwNzQ3ZDA5Y2M4MmU3MjZhZDhlNDMwOWQwNWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYQaasAFqTM5NDg2NDEzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "34c185c5065690747d09cc82e726ad8e4309d05c", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/34c185c5065690747d09cc82e726ad8e4309d05c", "committedDate": "2020-04-15T18:31:14Z", "message": "Provides a way to disable the docker integration tests via a gradle property."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDM5MTc3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#pullrequestreview-394039177", "createdAt": "2020-04-15T18:42:49Z", "commit": {"oid": "34c185c5065690747d09cc82e726ad8e4309d05c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODo0Mjo0OVrOGGGzGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODo0Mjo0OVrOGGGzGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NjAyNw==", "bodyText": "I would do the opposite and disable by default, what do you think?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409056027", "createdAt": "2020-04-15T18:42:49Z", "author": {"login": "bogdandrutu"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -72,7 +72,10 @@ $ git commit -m \"Update javadoc for API.\"\n Continuous integration builds the project, runs the tests, and runs multiple\n types of static analysis.\n \n-1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon.\n+1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon. If\n+you cannot run the docker daemon, you can disable the docker tests by setting a gradle property of\n+``\"disable.docker.tests\"`` to true. See the gradle.properties file in the root of the project", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34c185c5065690747d09cc82e726ad8e4309d05c"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecf20cd2f0134390fcd9f818edbd4c012ed8de1d", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ecf20cd2f0134390fcd9f818edbd4c012ed8de1d", "committedDate": "2020-04-15T20:15:17Z", "message": "switch the property to be the opposite"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/90c7ae26dfe871a4a2fec2db6376c5d223cdb021", "committedDate": "2020-04-15T20:30:14Z", "message": "add a new make target and let CI use it."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NTQ0NTA5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#pullrequestreview-394544509", "createdAt": "2020-04-16T11:33:56Z", "commit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NjkzNDM1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#pullrequestreview-394693435", "createdAt": "2020-04-16T14:31:30Z", "commit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDozMTozMVrOGGoQRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDozNTowNlrOGGobJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNDE2NQ==", "bodyText": "I don't think this is needed, correct? Not present means false. Up to you.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409604165", "createdAt": "2020-04-16T14:31:31Z", "author": {"login": "bogdandrutu"}, "path": "gradle.properties", "diffHunk": "@@ -1,3 +1,8 @@\n org.gradle.parallel=true\n org.gradle.workers.max=4\n org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=512m\n+\n+### Override this property to 'true' to enable the end-to-end tests that use docker.\n+### This can be done via -Penable.docker.tests=true on the command line, or by\n+### setting this property to true in the gradle.properties in your home directory.\n+enable.docker.tests=false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNDk3Mw==", "bodyText": "s/jaeger/jaegerBackend? (or jaegerContainer?)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409604973", "createdAt": "2020-04-16T14:32:35Z", "author": {"login": "bogdandrutu"}, "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "diffHunk": "@@ -53,13 +55,22 @@\n \n   @SuppressWarnings(\"rawtypes\")\n   @ClassRule\n-  public static GenericContainer jaeger =\n-      new GenericContainer(\"jaegertracing/all-in-one:\" + JAEGER_VERSION)\n-          .withExposedPorts(COLLECTOR_PORT, QUERY_PORT)\n-          .waitingFor(new HttpWaitStrategy().forPath(\"/\"));\n+  @Nullable\n+  public static GenericContainer jaeger = null;\n+\n+  static {\n+    // make sure that the user has enabled the docker-based tests\n+    if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {\n+      jaeger =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNjk1MA==", "bodyText": "It is confusing to have this in Before, and probably before is not needed since only one test. I would remove Before from this method and explicitly call it in the only test we have. Then the Assume is only in the test method.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409606950", "createdAt": "2020-04-16T14:35:06Z", "author": {"login": "bogdandrutu"}, "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "diffHunk": "@@ -53,13 +55,22 @@\n \n   @SuppressWarnings(\"rawtypes\")\n   @ClassRule\n-  public static GenericContainer jaeger =\n-      new GenericContainer(\"jaegertracing/all-in-one:\" + JAEGER_VERSION)\n-          .withExposedPorts(COLLECTOR_PORT, QUERY_PORT)\n-          .waitingFor(new HttpWaitStrategy().forPath(\"/\"));\n+  @Nullable\n+  public static GenericContainer jaeger = null;\n+\n+  static {\n+    // make sure that the user has enabled the docker-based tests\n+    if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {\n+      jaeger =\n+          new GenericContainer<>(\"jaegertracing/all-in-one:\" + JAEGER_VERSION)\n+              .withExposedPorts(COLLECTOR_PORT, QUERY_PORT)\n+              .waitingFor(new HttpWaitStrategy().forPath(\"/\"));\n+    }\n+  }\n \n   @Before\n   public void setupJaegerExporter() {\n+    Assume.assumeNotNull(jaeger);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NzIyOTQ5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#pullrequestreview-394722949", "createdAt": "2020-04-16T15:00:23Z", "commit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NzczMTkz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#pullrequestreview-394773193", "createdAt": "2020-04-16T15:53:54Z", "commit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo1Mzo1NFrOGGsEDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo1OTozNFrOGGsTfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2NjU3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            enable.docker.tests=false\n          \n          \n            \n            enable.docker.tests=false", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409666574", "createdAt": "2020-04-16T15:53:54Z", "author": {"login": "arminru"}, "path": "gradle.properties", "diffHunk": "@@ -1,3 +1,8 @@\n org.gradle.parallel=true\n org.gradle.workers.max=4\n org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=512m\n+\n+### Override this property to 'true' to enable the end-to-end tests that use docker.\n+### This can be done via -Penable.docker.tests=true on the command line, or by\n+### setting this property to true in the gradle.properties in your home directory.\n+enable.docker.tests=false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY3MDEyMg==", "bodyText": "could be shortened to\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {\n          \n          \n            \n                if (Boolean.getBoolean(\"enable.docker.tests\")) {", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409670122", "createdAt": "2020-04-16T15:58:57Z", "author": {"login": "arminru"}, "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "diffHunk": "@@ -53,13 +55,22 @@\n \n   @SuppressWarnings(\"rawtypes\")\n   @ClassRule\n-  public static GenericContainer jaeger =\n-      new GenericContainer(\"jaegertracing/all-in-one:\" + JAEGER_VERSION)\n-          .withExposedPorts(COLLECTOR_PORT, QUERY_PORT)\n-          .waitingFor(new HttpWaitStrategy().forPath(\"/\"));\n+  @Nullable\n+  public static GenericContainer jaeger = null;\n+\n+  static {\n+    // make sure that the user has enabled the docker-based tests\n+    if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY3MDUyNQ==", "bodyText": "The property name looks a bit odd to me, I'd actually expect it to be the other way round since the periods usually resemble some kind of hierarchy but that's just a nitpick \ud83d\ude42", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409670525", "createdAt": "2020-04-16T15:59:34Z", "author": {"login": "arminru"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -73,6 +73,10 @@ Continuous integration builds the project, runs the tests, and runs multiple\n types of static analysis.\n \n 1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon.\n+The tests that require docker are disabled by default. If you wish to run them,\n+you can enable the docker tests by setting a gradle property of\n+``\"enable.docker.tests\"`` to true. See the gradle.properties file in the root of the project", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43a5dc0ebada0f89bd1c93b26ee5e471444f44ff", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/43a5dc0ebada0f89bd1c93b26ee5e471444f44ff", "committedDate": "2020-04-16T16:09:49Z", "message": "Update gradle.properties\n\nCo-Authored-By: Armin Ruech <armin.ruech@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c5935a3d2794d1409714d4048afdff20c548753", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/8c5935a3d2794d1409714d4048afdff20c548753", "committedDate": "2020-04-16T16:11:04Z", "message": "Update exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java\n\nCo-Authored-By: Armin Ruech <armin.ruech@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0Nzk0NzM0", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#pullrequestreview-394794734", "createdAt": "2020-04-16T16:18:56Z", "commit": {"oid": "8c5935a3d2794d1409714d4048afdff20c548753"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNjoxODo1NlrOGGtGwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNjoxODo1NlrOGGtGwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4MzY0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (Boolean.getBoolean(\"enable.docker.tests\"))) {\n          \n          \n            \n                if (Boolean.getBoolean(\"enable.docker.tests\")) {\n          \n      \n    \n    \n  \n\nsorry, my bad :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409683649", "createdAt": "2020-04-16T16:18:56Z", "author": {"login": "arminru"}, "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "diffHunk": "@@ -60,7 +60,7 @@\n \n   static {\n     // make sure that the user has enabled the docker-based tests\n-    if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {\n+    if (Boolean.getBoolean(\"enable.docker.tests\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c5935a3d2794d1409714d4048afdff20c548753"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9f8e8fe5b6537af1c87ee697078e75307974496", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c9f8e8fe5b6537af1c87ee697078e75307974496", "committedDate": "2020-04-16T16:24:01Z", "message": "Update exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java\n\nCo-Authored-By: Armin Ruech <armin.ruech@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1672fbbc9fddeb75c441880846ae1c05b9d30a8c", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1672fbbc9fddeb75c441880846ae1c05b9d30a8c", "committedDate": "2020-04-16T17:14:45Z", "message": "simplify the test flow"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0ODY0MTM1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#pullrequestreview-394864135", "createdAt": "2020-04-16T17:47:36Z", "commit": {"oid": "1672fbbc9fddeb75c441880846ae1c05b9d30a8c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2970, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}