{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNjQ5MzY4", "number": 763, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNjowODowNVrODYjpyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNjowODowNVrODYjpyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDc2NTU0OnYy", "diffSide": "RIGHT", "path": "sdk/src/test/java/io/opentelemetry/sdk/trace/export/BatchSpansProcessorTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNjowODowNVrOFee3Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNzoxNDozMVrOFehNNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUwNzI5NA==", "bodyText": "I would expect this to be smaller than 1000 (thread sleep) to prove that the timeout occur", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/763#discussion_r367507294", "createdAt": "2020-01-16T16:08:05Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/test/java/io/opentelemetry/sdk/trace/export/BatchSpansProcessorTest.java", "diffHunk": "@@ -230,7 +230,7 @@ public void serviceHandlerThrowsException() {\n     assertThat(exported).containsExactly(span2.toSpanData());\n   }\n \n-  @Test\n+  @Test(timeout = 5000)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f909dc1fac9153f77157b9351eee30a297080e2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUzMTg2OQ==", "bodyText": "yeah, this needs to be shorter than the timeout or we won't be testing anything.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/763#discussion_r367531869", "createdAt": "2020-01-16T16:49:10Z", "author": {"login": "jkwatson"}, "path": "sdk/src/test/java/io/opentelemetry/sdk/trace/export/BatchSpansProcessorTest.java", "diffHunk": "@@ -230,7 +230,7 @@ public void serviceHandlerThrowsException() {\n     assertThat(exported).containsExactly(span2.toSpanData());\n   }\n \n-  @Test\n+  @Test(timeout = 5000)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUwNzI5NA=="}, "originalCommit": {"oid": "1f909dc1fac9153f77157b9351eee30a297080e2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUzOTA2Mg==", "bodyText": "We test that an InterruptedException is thrown in the exporter, otherwise the await will never return?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/763#discussion_r367539062", "createdAt": "2020-01-16T17:01:41Z", "author": {"login": "Oberon00"}, "path": "sdk/src/test/java/io/opentelemetry/sdk/trace/export/BatchSpansProcessorTest.java", "diffHunk": "@@ -230,7 +230,7 @@ public void serviceHandlerThrowsException() {\n     assertThat(exported).containsExactly(span2.toSpanData());\n   }\n \n-  @Test\n+  @Test(timeout = 5000)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUwNzI5NA=="}, "originalCommit": {"oid": "1f909dc1fac9153f77157b9351eee30a297080e2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU0NTY1NA==", "bodyText": "oh you're totally right. the no-timeout version on the latch makes this work. sorry for the brain-fart.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/763#discussion_r367545654", "createdAt": "2020-01-16T17:14:31Z", "author": {"login": "jkwatson"}, "path": "sdk/src/test/java/io/opentelemetry/sdk/trace/export/BatchSpansProcessorTest.java", "diffHunk": "@@ -230,7 +230,7 @@ public void serviceHandlerThrowsException() {\n     assertThat(exported).containsExactly(span2.toSpanData());\n   }\n \n-  @Test\n+  @Test(timeout = 5000)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUwNzI5NA=="}, "originalCommit": {"oid": "1f909dc1fac9153f77157b9351eee30a297080e2"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1008, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}