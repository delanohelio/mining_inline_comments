{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5NzI2MDg4", "number": 2301, "title": "CONTRIBUTING.md update with some more best practices.", "bodyText": "Adds a section about class member ordering, since it's not covered in the google style guide, seemed like a good idea to document it, so we don't need to argue about it.\nAlso adds a line about the instability of toString() methods.", "createdAt": "2020-12-14T18:47:28Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2301", "merged": true, "mergeCommit": {"oid": "76e10c5102cb8438ef31289398ade1a6cdf4f0e5"}, "closed": true, "closedAt": "2020-12-16T02:21:17Z", "author": {"login": "jkwatson"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmKSZRAH2gAyNTM5NzI2MDg4OmMxZDVmMmNmZjAwNTA1OTM0ODIyOTFjNzY2YzAwM2VmMGI4MGY2MzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmi51ZAFqTU1MzA4MjYyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c1d5f2cff0050593482291c766c003ef0b80f635", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c1d5f2cff0050593482291c766c003ef0b80f635", "committedDate": "2020-12-14T18:45:30Z", "message": "add a section on class member ordering, since it's not covered in the google style guide"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f65f4ceb84255f65a832216caf6eee6d93dc0517", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/f65f4ceb84255f65a832216caf6eee6d93dc0517", "committedDate": "2020-12-14T20:22:32Z", "message": "add an item about toString methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMDEzMjI0", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2301#pullrequestreview-552013224", "createdAt": "2020-12-15T00:27:27Z", "commit": {"oid": "f65f4ceb84255f65a832216caf6eee6d93dc0517"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMDEzMzQx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2301#pullrequestreview-552013341", "createdAt": "2020-12-15T00:27:46Z", "commit": {"oid": "f65f4ceb84255f65a832216caf6eee6d93dc0517"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwMDoyNzo0NlrOIFzKfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwMDoyNzo0NlrOIFzKfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk1MjA2MQ==", "bodyText": "Oh - also should we call out final before non-final?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2301#discussion_r542952061", "createdAt": "2020-12-15T00:27:46Z", "author": {"login": "anuraaga"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -67,6 +67,15 @@ which uses [google-java-format](https://github.com/google/google-java-format) li\n * By default, all arguments/members are treated as non-null. Every argument/member that can be `null` must be annotated with `@Nullable`.\n * The project aims to provide a consistent experience across all the public APIs. It is important to ensure consistency (same look and feel) across different public packages.\n * Use `final` for public classes everywhere it is possible, this ensures that these classes cannot be extended when the API does not intend to offer that functionality.\n+* In general, we use the following ordering of class members:\n+    * static fields", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f65f4ceb84255f65a832216caf6eee6d93dc0517"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4578e1089b603b33ce9e26657a8412805fa096d", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e4578e1089b603b33ce9e26657a8412805fa096d", "committedDate": "2020-12-15T21:24:05Z", "message": "add a note about final fields coming before non-final"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyOTg2OTQ1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2301#pullrequestreview-552986945", "createdAt": "2020-12-15T22:20:45Z", "commit": {"oid": "e4578e1089b603b33ce9e26657a8412805fa096d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyOTg3ODkz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2301#pullrequestreview-552987893", "createdAt": "2020-12-15T22:21:24Z", "commit": {"oid": "e4578e1089b603b33ce9e26657a8412805fa096d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoyMToyNFrOIGinjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoyMToyNFrOIGinjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyOTU0OA==", "bodyText": "This is not very visible for the users of the API. Consider to add similar statement in the API readme? Or package info?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2301#discussion_r543729548", "createdAt": "2020-12-15T22:21:24Z", "author": {"login": "bogdandrutu"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -67,6 +67,15 @@ which uses [google-java-format](https://github.com/google/google-java-format) li\n * By default, all arguments/members are treated as non-null. Every argument/member that can be `null` must be annotated with `@Nullable`.\n * The project aims to provide a consistent experience across all the public APIs. It is important to ensure consistency (same look and feel) across different public packages.\n * Use `final` for public classes everywhere it is possible, this ensures that these classes cannot be extended when the API does not intend to offer that functionality.\n+* In general, we use the following ordering of class members:\n+    * static fields (final before non-final)\n+    * non-static fields (final before non-final)\n+    * constructors\n+    * static methods\n+    * instance methods\n+    * inner classes\n+* Adding `toString()` overrides on classes is encouraged, but we only use `toString()` to provide debugging assistance. The implementations\n+of all `toString()` methods should be considered to be unstable unless explicitly documented otherwise.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4578e1089b603b33ce9e26657a8412805fa096d"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMDgyNjIw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2301#pullrequestreview-553082620", "createdAt": "2020-12-15T23:26:18Z", "commit": {"oid": "e4578e1089b603b33ce9e26657a8412805fa096d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3670, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}