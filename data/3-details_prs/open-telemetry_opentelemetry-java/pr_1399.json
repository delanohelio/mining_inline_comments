{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NDEzNTk2", "number": 1399, "title": "Add a toBuilder method to Labels", "bodyText": "While writing some manual instrumentation, I found it very useful to keep a constant Labels instance, but then append to them when actually recording metrics (to add Span status, for instance). This method will help do that more efficiently than having to manually copy the labels from one instance to a new builder.", "createdAt": "2020-07-08T18:30:23Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1399", "merged": true, "mergeCommit": {"oid": "7ca698f8452260c8b8da067149444bb01a04da29"}, "closed": true, "closedAt": "2020-07-09T15:36:24Z", "author": {"login": "jkwatson"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcy-vXqgH2gAyNDQ2NDEzNTk2OjA0ZDlhNDBlYWNlMzYwYjZjNGIxNDNhYmMxYmM3ZDJlNWU3NmI2NmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczQkEjAH2gAyNDQ2NDEzNTk2OmQzMDBhOGM1M2JmMjNlZTY4NjcyMTg0OTlhNjViY2E1OWE1MWU4NDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "04d9a40eace360b6c4b143abc1bc7d2e5e76b66e", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/04d9a40eace360b6c4b143abc1bc7d2e5e76b66e", "committedDate": "2020-07-08T18:28:09Z", "message": "Add a toBuilder method to Labels"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjIzMDEw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1399#pullrequestreview-445223010", "createdAt": "2020-07-09T01:01:07Z", "commit": {"oid": "04d9a40eace360b6c4b143abc1bc7d2e5e76b66e"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMTowMTowN1rOGu-Gjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMTowMjozMVrOGu-H6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkwNTE2Nw==", "bodyText": "Looks like we don't really need the size assertions", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1399#discussion_r451905167", "createdAt": "2020-07-09T01:01:07Z", "author": {"login": "anuraaga"}, "path": "api/src/test/java/io/opentelemetry/common/LabelsTest.java", "diffHunk": "@@ -124,4 +124,14 @@ public void builder() {\n                 \"key1\", \"value1\",\n                 \"key2\", \"value2\"));\n   }\n+\n+  @Test\n+  public void toBuilder() {\n+    Labels initial = Labels.of(\"one\", \"a\");\n+    Labels second = initial.toBuilder().setLabel(\"two\", \"b\").build();\n+    assertThat(initial.size()).isEqualTo(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04d9a40eace360b6c4b143abc1bc7d2e5e76b66e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkwNTUxMg==", "bodyText": "Well maybe they help - don't think I can find a toString for the key value pair classes which would be important for the equals assertions when they fail.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1399#discussion_r451905512", "createdAt": "2020-07-09T01:02:31Z", "author": {"login": "anuraaga"}, "path": "api/src/test/java/io/opentelemetry/common/LabelsTest.java", "diffHunk": "@@ -124,4 +124,14 @@ public void builder() {\n                 \"key1\", \"value1\",\n                 \"key2\", \"value2\"));\n   }\n+\n+  @Test\n+  public void toBuilder() {\n+    Labels initial = Labels.of(\"one\", \"a\");\n+    Labels second = initial.toBuilder().setLabel(\"two\", \"b\").build();\n+    assertThat(initial.size()).isEqualTo(1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkwNTE2Nw=="}, "originalCommit": {"oid": "04d9a40eace360b6c4b143abc1bc7d2e5e76b66e"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c608ce4517eb4b43cb4ef2cb63e8c16a75940aa8", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c608ce4517eb4b43cb4ef2cb63e8c16a75940aa8", "committedDate": "2020-07-09T03:57:08Z", "message": "add a toString to the pairs, for debugging/testing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjgwMjAz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1399#pullrequestreview-445280203", "createdAt": "2020-07-09T04:23:19Z", "commit": {"oid": "c608ce4517eb4b43cb4ef2cb63e8c16a75940aa8"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNDoyMzoxOVrOGvBLsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNDoyNDozN1rOGvBMpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk1NTYzNQ==", "bodyText": "Usually see sb.setLength(sb.length() - 1) for dealing with pesky commas. Checked deleteCharAt and it doesn't seem to avoid System.arrayCopy even for this simple case", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1399#discussion_r451955635", "createdAt": "2020-07-09T04:23:19Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/common/ImmutableKeyValuePairs.java", "diffHunk": "@@ -128,4 +128,22 @@ private static void swap(Object[] data, int a, int b) {\n     data[b] = keyA;\n     data[b + 1] = valueA;\n   }\n+\n+  @Override\n+  public String toString() {\n+    final StringBuilder sb = new StringBuilder(\"{\");\n+    forEach(\n+        new KeyValueConsumer<V>() {\n+          @Override\n+          public void consume(String key, V value) {\n+            sb.append(key).append(\":\").append(value).append(\",\");\n+          }\n+        });\n+    // get rid of that last pesky comma\n+    if (sb.length() > 1) {\n+      sb.deleteCharAt(sb.length() - 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c608ce4517eb4b43cb4ef2cb63e8c16a75940aa8"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk1NTg3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        sb.append(key).append(\":\").append(value).append(\",\");\n          \n          \n            \n                        sb.append(key).append(\"=\").append(value).append(\", \");\n          \n      \n    \n    \n  \n\nNit but maybe we should go ahead and match Map? https://github.com/openjdk/jdk/blob/master/test/jdk/java/util/AbstractMap/ToString.java#L46", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1399#discussion_r451955876", "createdAt": "2020-07-09T04:24:37Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/common/ImmutableKeyValuePairs.java", "diffHunk": "@@ -128,4 +128,22 @@ private static void swap(Object[] data, int a, int b) {\n     data[b] = keyA;\n     data[b + 1] = valueA;\n   }\n+\n+  @Override\n+  public String toString() {\n+    final StringBuilder sb = new StringBuilder(\"{\");\n+    forEach(\n+        new KeyValueConsumer<V>() {\n+          @Override\n+          public void consume(String key, V value) {\n+            sb.append(key).append(\":\").append(value).append(\",\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c608ce4517eb4b43cb4ef2cb63e8c16a75940aa8"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1Njc0NDEx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1399#pullrequestreview-445674411", "createdAt": "2020-07-09T14:31:04Z", "commit": {"oid": "c608ce4517eb4b43cb4ef2cb63e8c16a75940aa8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d300a8c53bf23ee6867218499a65bca59a51e843", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d300a8c53bf23ee6867218499a65bca59a51e843", "committedDate": "2020-07-09T15:14:06Z", "message": "tweak the toString implementation to match that of Map"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2531, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}