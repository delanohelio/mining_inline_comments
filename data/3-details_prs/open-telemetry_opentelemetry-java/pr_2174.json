{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNzA4OTM0", "number": 2174, "title": "Replace AttributeConsumer with BiConsumer", "bodyText": "Our current interface has a wildcard type parameter - it seems to provide no real benefit in almost all cases, but prevents using lambdas with Attributes.forEach. For the cases it helped a bit, putAll works fine.", "createdAt": "2020-12-02T03:05:48Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2174", "merged": true, "mergeCommit": {"oid": "cf5b582c5b763027893a1675f426f4c442d38f05"}, "closed": true, "closedAt": "2020-12-02T07:52:07Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiFpA3gH2gAyNTMwNzA4OTM0OmY5YWQzMGUzN2M1ODU2ZGE5N2YwZTk5NzVmYWI0YTE0ZTJlMzk4NTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiIDzHgFqTU0MjUxNzcwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f9ad30e37c5856da97f0e9975fab4a14e2e39851", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/f9ad30e37c5856da97f0e9975fab4a14e2e39851", "committedDate": "2020-12-02T03:04:59Z", "message": "Replace AttributeConsumer with BiConsumer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNDY0NzU3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2174#pullrequestreview-542464757", "createdAt": "2020-12-02T03:07:20Z", "commit": {"oid": "f9ad30e37c5856da97f0e9975fab4a14e2e39851"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMzowNzoyMFrOH9ImDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMzowNzoyMFrOH9ImDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg2NTk5OA==", "bodyText": "Populating another attributes is basically the only time <T> helped - but we can manage that ourselves without sacrificing the ability to lambda", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2174#discussion_r533865998", "createdAt": "2020-12-02T03:07:20Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/api/common/ArrayBackedAttributesBuilder.java", "diffHunk": "@@ -90,8 +90,11 @@ public AttributesBuilder put(String key, boolean... value) {\n   }\n \n   @Override\n-  public AttributesBuilder putAll(Attributes attributes) {\n-    attributes.forEach(this::put);\n+  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n+  public AttributesBuilder putAll(ReadableAttributes attributes) {\n+    // Attributes must iterate over their entries with matching types for key / value, so this\n+    // downcast to the raw type is safe.\n+    attributes.forEach((key, value) -> put((AttributeKey) key, value));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ad30e37c5856da97f0e9975fab4a14e2e39851"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3190ce13f622b1a6a11f68299da6fdce861b06f4", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/3190ce13f622b1a6a11f68299da6fdce861b06f4", "committedDate": "2020-12-02T04:03:51Z", "message": "Forgot to delete"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNTE3NzAz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2174#pullrequestreview-542517703", "createdAt": "2020-12-02T05:54:03Z", "commit": {"oid": "3190ce13f622b1a6a11f68299da6fdce861b06f4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3833, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}