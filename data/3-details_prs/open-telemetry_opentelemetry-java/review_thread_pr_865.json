{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NzYzMDM4", "number": 865, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMTozMzozNFrODgPGYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMTozMzozNFrODgPGYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTI4NDE3OnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/AbstractInstrument.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMTozMzozNFrOFqVZsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxOTo1MjoyN1rOFr1Zvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNTE1NA==", "bodyText": "should this include the library info, so two libraries could have the same instrument descriptor, and not collide?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/865#discussion_r379935154", "createdAt": "2020-02-16T21:33:34Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/AbstractInstrument.java", "diffHunk": "@@ -92,21 +62,12 @@ public boolean equals(Object o) {\n \n     AbstractInstrument that = (AbstractInstrument) o;\n \n-    return name.equals(that.name)\n-        && description.equals(that.description)\n-        && unit.equals(that.unit)\n-        && constantLabels.equals(that.constantLabels)\n-        && labelKeys.equals(that.labelKeys);\n+    return descriptor.equals(that.descriptor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c93bafac2ddc9c3ef74eb7c8fbaf35ac3c62062"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ5MTE0Mw==", "bodyText": "The instrument descriptor has to be unique inside a MeterSdk which is uniquely identified by the LibraryInfo, so I don't think we should include the LibraryInfo", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/865#discussion_r381491143", "createdAt": "2020-02-19T19:21:25Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/AbstractInstrument.java", "diffHunk": "@@ -92,21 +62,12 @@ public boolean equals(Object o) {\n \n     AbstractInstrument that = (AbstractInstrument) o;\n \n-    return name.equals(that.name)\n-        && description.equals(that.description)\n-        && unit.equals(that.unit)\n-        && constantLabels.equals(that.constantLabels)\n-        && labelKeys.equals(that.labelKeys);\n+    return descriptor.equals(that.descriptor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNTE1NA=="}, "originalCommit": {"oid": "1c93bafac2ddc9c3ef74eb7c8fbaf35ac3c62062"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUwODAzMA==", "bodyText": "ah, yes. that makes sense.  \ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/865#discussion_r381508030", "createdAt": "2020-02-19T19:52:27Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/AbstractInstrument.java", "diffHunk": "@@ -92,21 +62,12 @@ public boolean equals(Object o) {\n \n     AbstractInstrument that = (AbstractInstrument) o;\n \n-    return name.equals(that.name)\n-        && description.equals(that.description)\n-        && unit.equals(that.unit)\n-        && constantLabels.equals(that.constantLabels)\n-        && labelKeys.equals(that.labelKeys);\n+    return descriptor.equals(that.descriptor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNTE1NA=="}, "originalCommit": {"oid": "1c93bafac2ddc9c3ef74eb7c8fbaf35ac3c62062"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1106, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}