{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MTI4Njcx", "number": 1809, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNDowMjoyMlrOEuAsvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNDowMjoyMlrOEuAsvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjgxNDA3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/trace/TracingContextUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNDowMjoyMlrOHiJcCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNDowMzoxM1rOHiJesg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU2ODI2NQ==", "bodyText": "Need to remove this, no longer supported :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1809#discussion_r505568265", "createdAt": "2020-10-15T14:02:22Z", "author": {"login": "bogdandrutu"}, "path": "api/src/main/java/io/opentelemetry/trace/TracingContextUtils.java", "diffHunk": "@@ -66,9 +67,46 @@ public static Span getSpanWithoutDefault(Context context) {\n    * Returns a new {@link Scope} encapsulating the provided {@link Span} added to the current {@code\n    * Context}.\n    *\n+   * <p>Example of usage:\n+   *\n+   * <pre>{@code\n+   * private static Tracer tracer = OpenTelemetry.getTracer();\n+   * void doWork() {\n+   *   // Create a Span as a child of the current Span.\n+   *   Span span = tracer.spanBuilder(\"my span\").startSpan();\n+   *   try (Scope ws = TracingContextUtils.currentContextWith(span)) {\n+   *     TracingContextUtils.getCurrentSpan().addEvent(\"my event\");\n+   *     doSomeOtherWork();  // Here \"span\" is the current Span.\n+   *   }\n+   *   span.end();\n+   * }\n+   * }</pre>\n+   *\n+   * <p>Prior to Java SE 7, you can use a finally block to ensure that a resource is closed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b02949a09e8dbef9974b44240ce4f90b9660add"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU2ODk0Ng==", "bodyText": "Done :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1809#discussion_r505568946", "createdAt": "2020-10-15T14:03:13Z", "author": {"login": "bogdandrutu"}, "path": "api/src/main/java/io/opentelemetry/trace/TracingContextUtils.java", "diffHunk": "@@ -66,9 +67,46 @@ public static Span getSpanWithoutDefault(Context context) {\n    * Returns a new {@link Scope} encapsulating the provided {@link Span} added to the current {@code\n    * Context}.\n    *\n+   * <p>Example of usage:\n+   *\n+   * <pre>{@code\n+   * private static Tracer tracer = OpenTelemetry.getTracer();\n+   * void doWork() {\n+   *   // Create a Span as a child of the current Span.\n+   *   Span span = tracer.spanBuilder(\"my span\").startSpan();\n+   *   try (Scope ws = TracingContextUtils.currentContextWith(span)) {\n+   *     TracingContextUtils.getCurrentSpan().addEvent(\"my event\");\n+   *     doSomeOtherWork();  // Here \"span\" is the current Span.\n+   *   }\n+   *   span.end();\n+   * }\n+   * }</pre>\n+   *\n+   * <p>Prior to Java SE 7, you can use a finally block to ensure that a resource is closed", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU2ODI2NQ=="}, "originalCommit": {"oid": "8b02949a09e8dbef9974b44240ce4f90b9660add"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2094, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}