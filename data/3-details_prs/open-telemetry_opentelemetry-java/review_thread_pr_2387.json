{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzODU3OTc0", "number": 2387, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxODoyMTowMVrOFIQSvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxODoyMTowMVrOFIQSvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MTk5ODcwOnYy", "diffSide": "RIGHT", "path": "sdk/all/src/main/java/io/opentelemetry/sdk/OpenTelemetrySdkBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxODoyMTowMVrOIKEotA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNToxMTozMFrOIK-waQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQzMjYyOA==", "bodyText": "I still think that just calling this build() would be fine. If you're looking at your auto-complete options, it should be obvious that the one that has AndRegisterGlobal() on the end of it would do what it says, and, hence, this one wouldn't.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2387#discussion_r547432628", "createdAt": "2020-12-22T18:21:01Z", "author": {"login": "jkwatson"}, "path": "sdk/all/src/main/java/io/opentelemetry/sdk/OpenTelemetrySdkBuilder.java", "diffHunk": "@@ -51,19 +49,31 @@ public OpenTelemetrySdkBuilder setPropagators(ContextPropagators propagators) {\n \n   /**\n    * Returns a new {@link OpenTelemetrySdk} built with the configuration of this {@link\n-   * OpenTelemetrySdkBuilder}.\n+   * OpenTelemetrySdkBuilder} and registers it as the global {@link\n+   * io.opentelemetry.api.OpenTelemetry}.\n+   *\n+   * @see GlobalOpenTelemetry\n+   */\n+  public OpenTelemetrySdk buildAndRegisterGlobal() {\n+    OpenTelemetrySdk sdk = buildWithoutRegisteringGlobal();\n+    GlobalOpenTelemetry.set(sdk);\n+    return sdk;\n+  }\n+\n+  /**\n+   * Returns a new {@link OpenTelemetrySdk} built with the configuration of this {@link\n+   * OpenTelemetrySdkBuilder}. This SDK is not registered as the global {@link\n+   * io.opentelemetry.api.OpenTelemetry}. It is recommended that you register one SDK using {@link\n+   * OpenTelemetrySdkBuilder#buildAndRegisterGlobal()} for use by instrumentation that requires\n+   * access to a global instance of {@link io.opentelemetry.api.OpenTelemetry}.\n+   *\n+   * @see GlobalOpenTelemetry\n    */\n-  public OpenTelemetrySdk build() {\n+  public OpenTelemetrySdk buildWithoutRegisteringGlobal() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da1feb7bdf62c2249db29257688f1b816d66f734"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM4NDg3Mw==", "bodyText": "Ok :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2387#discussion_r548384873", "createdAt": "2020-12-24T05:11:30Z", "author": {"login": "anuraaga"}, "path": "sdk/all/src/main/java/io/opentelemetry/sdk/OpenTelemetrySdkBuilder.java", "diffHunk": "@@ -51,19 +49,31 @@ public OpenTelemetrySdkBuilder setPropagators(ContextPropagators propagators) {\n \n   /**\n    * Returns a new {@link OpenTelemetrySdk} built with the configuration of this {@link\n-   * OpenTelemetrySdkBuilder}.\n+   * OpenTelemetrySdkBuilder} and registers it as the global {@link\n+   * io.opentelemetry.api.OpenTelemetry}.\n+   *\n+   * @see GlobalOpenTelemetry\n+   */\n+  public OpenTelemetrySdk buildAndRegisterGlobal() {\n+    OpenTelemetrySdk sdk = buildWithoutRegisteringGlobal();\n+    GlobalOpenTelemetry.set(sdk);\n+    return sdk;\n+  }\n+\n+  /**\n+   * Returns a new {@link OpenTelemetrySdk} built with the configuration of this {@link\n+   * OpenTelemetrySdkBuilder}. This SDK is not registered as the global {@link\n+   * io.opentelemetry.api.OpenTelemetry}. It is recommended that you register one SDK using {@link\n+   * OpenTelemetrySdkBuilder#buildAndRegisterGlobal()} for use by instrumentation that requires\n+   * access to a global instance of {@link io.opentelemetry.api.OpenTelemetry}.\n+   *\n+   * @see GlobalOpenTelemetry\n    */\n-  public OpenTelemetrySdk build() {\n+  public OpenTelemetrySdk buildWithoutRegisteringGlobal() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQzMjYyOA=="}, "originalCommit": {"oid": "da1feb7bdf62c2249db29257688f1b816d66f734"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1615, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}