{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NjkwNzE3", "number": 870, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNTo0NTo0OVrODgvwpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNTo0NzowM1rODgvy0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NjYzNTI2OnYy", "diffSide": "LEFT", "path": "api/src/main/java/io/opentelemetry/metrics/MeterProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNTo0NTo1MFrOFrHlRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNTo0NTo1MFrOFrHlRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc1NzMxOQ==", "bodyText": "Please comment that this is called Provider for consistency with other languages but it is not loaded using reflection (ServiceLoader)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/870#discussion_r380757319", "createdAt": "2020-02-18T15:45:50Z", "author": {"login": "bogdandrutu"}, "path": "api/src/main/java/io/opentelemetry/metrics/MeterProvider.java", "diffHunk": "@@ -26,7 +26,7 @@\n  * @since 0.1.0\n  */\n @ThreadSafe\n-public interface MeterRegistry {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ff100a0044081d03b9e978a62fbb8737e0fae44"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NjY0MDgzOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/io/opentelemetry/metrics/DefaultMeterTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNTo0NzowM1rOFrHouA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNTo0OTowOVrOFrHu0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc1ODIwMA==", "bodyText": "Add an issue about this, I don't think we should accept empty name, but we can address this separately.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/870#discussion_r380758200", "createdAt": "2020-02-18T15:47:03Z", "author": {"login": "bogdandrutu"}, "path": "api/src/test/java/io/opentelemetry/metrics/DefaultMeterTest.java", "diffHunk": "@@ -56,6 +56,11 @@ public void noopAddMeasureLong_NullName() {\n     defaultMeter.longMeasureBuilder(null);\n   }\n \n+  @Test\n+  public void noopAddMeasureLong_EmptyName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ff100a0044081d03b9e978a62fbb8737e0fae44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc1OTc2MQ==", "bodyText": "I was about to create the issue \ud83d\ude09", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/870#discussion_r380759761", "createdAt": "2020-02-18T15:49:09Z", "author": {"login": "thisthat"}, "path": "api/src/test/java/io/opentelemetry/metrics/DefaultMeterTest.java", "diffHunk": "@@ -56,6 +56,11 @@ public void noopAddMeasureLong_NullName() {\n     defaultMeter.longMeasureBuilder(null);\n   }\n \n+  @Test\n+  public void noopAddMeasureLong_EmptyName() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc1ODIwMA=="}, "originalCommit": {"oid": "2ff100a0044081d03b9e978a62fbb8737e0fae44"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1121, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}