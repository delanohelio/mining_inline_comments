{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMDU3NDE4", "number": 1916, "title": "Have Baggage context interaction API mirror Span.", "bodyText": "", "createdAt": "2020-10-29T06:46:19Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1916", "merged": true, "mergeCommit": {"oid": "604aee25fa582d14f7b8a61ebe63aa88eede8e16"}, "closed": true, "closedAt": "2020-10-29T19:49:55Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXMbKCgH2gAyNTEyMDU3NDE4OmNiYTA1NWM2YjcyMjE2MTBmZjdmYWY4YjE2M2Y4ODExZjc1ZThiMTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXT142gFqTUxOTc4NTAzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cba055c6b7221610ff7faf8b163f8811f75e8b19", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/cba055c6b7221610ff7faf8b163f8811f75e8b19", "committedDate": "2020-10-29T06:46:01Z", "message": "Have Baggage context interaction API mirror Span."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NjYyNzA4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1916#pullrequestreview-519662708", "createdAt": "2020-10-29T13:28:26Z", "commit": {"oid": "cba055c6b7221610ff7faf8b163f8811f75e8b19"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NzUwNjEz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1916#pullrequestreview-519750613", "createdAt": "2020-10-29T14:52:20Z", "commit": {"oid": "cba055c6b7221610ff7faf8b163f8811f75e8b19"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo1MjoyMFrOHqfqbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo1MjoyMFrOHqfqbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMyMTAwNA==", "bodyText": "oh, good catch! good thing it's just a name. :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1916#discussion_r514321004", "createdAt": "2020-10-29T14:52:20Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/api/baggage/BaggageUtils.java", "diffHunk": "@@ -5,18 +5,16 @@\n \n package io.opentelemetry.api.baggage;\n \n-import com.google.errorprone.annotations.MustBeClosed;\n import io.opentelemetry.context.Context;\n import io.opentelemetry.context.ContextKey;\n-import io.opentelemetry.context.Scope;\n import javax.annotation.Nullable;\n import javax.annotation.concurrent.Immutable;\n \n /** Utility methods for accessing the {@link Baggage} contained in the {@link Context}. */\n @Immutable\n public final class BaggageUtils {\n-  private static final ContextKey<Baggage> CORR_CONTEXT_KEY =\n-      ContextKey.named(\"opentelemetry-corr-context-key\");\n+  private static final ContextKey<Baggage> BAGGAGE_KEY =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba055c6b7221610ff7faf8b163f8811f75e8b19"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NzUxMTAy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1916#pullrequestreview-519751102", "createdAt": "2020-10-29T14:52:45Z", "commit": {"oid": "cba055c6b7221610ff7faf8b163f8811f75e8b19"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo1Mjo0NlrOHqfrxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo1Mjo0NlrOHqfrxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMyMTM1MQ==", "bodyText": "do we still need the class to be public?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1916#discussion_r514321351", "createdAt": "2020-10-29T14:52:46Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/api/baggage/BaggageUtils.java", "diffHunk": "@@ -5,18 +5,16 @@\n \n package io.opentelemetry.api.baggage;\n \n-import com.google.errorprone.annotations.MustBeClosed;\n import io.opentelemetry.context.Context;\n import io.opentelemetry.context.ContextKey;\n-import io.opentelemetry.context.Scope;\n import javax.annotation.Nullable;\n import javax.annotation.concurrent.Immutable;\n \n /** Utility methods for accessing the {@link Baggage} contained in the {@link Context}. */\n @Immutable\n public final class BaggageUtils {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba055c6b7221610ff7faf8b163f8811f75e8b19"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NzYxMjIw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1916#pullrequestreview-519761220", "createdAt": "2020-10-29T15:01:48Z", "commit": {"oid": "cba055c6b7221610ff7faf8b163f8811f75e8b19"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5Nzg1MDM2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1916#pullrequestreview-519785036", "createdAt": "2020-10-29T15:24:04Z", "commit": {"oid": "cba055c6b7221610ff7faf8b163f8811f75e8b19"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNToyNDowNFrOHqhNVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNToyNDoyNlrOHqhOkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0NjMyNg==", "bodyText": "Do we need this? People can compare with empty or can check for size of entries.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1916#discussion_r514346326", "createdAt": "2020-10-29T15:24:04Z", "author": {"login": "bogdandrutu"}, "path": "api/src/main/java/io/opentelemetry/api/baggage/Baggage.java", "diffHunk": "@@ -39,6 +39,23 @@ static Baggage current() {\n     return BaggageUtils.getCurrentBaggage();\n   }\n \n+  /**\n+   * Returns the {@link Baggage} from the specified {@link Context}, falling back to a empty {@link\n+   * Baggage} if there is no baggage in the context.\n+   */\n+  static Baggage fromContext(Context context) {\n+    return BaggageUtils.getBaggage(context);\n+  }\n+\n+  /**\n+   * Returns the {@link Baggage} from the specified {@link Context}, or {@code null} if there is no\n+   * baggage in the context.\n+   */\n+  @Nullable\n+  static Baggage fromContextOrNull(Context context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba055c6b7221610ff7faf8b163f8811f75e8b19"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0NjY0MQ==", "bodyText": "May be in a separate PR.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1916#discussion_r514346641", "createdAt": "2020-10-29T15:24:26Z", "author": {"login": "bogdandrutu"}, "path": "api/src/main/java/io/opentelemetry/api/baggage/Baggage.java", "diffHunk": "@@ -39,6 +39,23 @@ static Baggage current() {\n     return BaggageUtils.getCurrentBaggage();\n   }\n \n+  /**\n+   * Returns the {@link Baggage} from the specified {@link Context}, falling back to a empty {@link\n+   * Baggage} if there is no baggage in the context.\n+   */\n+  static Baggage fromContext(Context context) {\n+    return BaggageUtils.getBaggage(context);\n+  }\n+\n+  /**\n+   * Returns the {@link Baggage} from the specified {@link Context}, or {@code null} if there is no\n+   * baggage in the context.\n+   */\n+  @Nullable\n+  static Baggage fromContextOrNull(Context context) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0NjMyNg=="}, "originalCommit": {"oid": "cba055c6b7221610ff7faf8b163f8811f75e8b19"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4179, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}