{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMDcyNjY0", "number": 1101, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwMToxNTo1OFrODw5YBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwMToxNTo1OFrODw5YBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTk4Mjc4OnYy", "diffSide": "RIGHT", "path": "sdk/src/test/java/io/opentelemetry/sdk/trace/TracerSdkTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwMToxNTo1OFrOGEJOOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQyMDoxMzo1NFrOGEYYQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk5ODU4Ng==", "bodyText": "I would add the batchsp as well and count the num spans in the exporter. Since it is most likely that batchsp will be almost everywhere.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1101#discussion_r406998586", "createdAt": "2020-04-11T01:15:58Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/test/java/io/opentelemetry/sdk/trace/TracerSdkTest.java", "diffHunk": "@@ -106,4 +110,78 @@ public void propagatesInstrumentationLibraryInfoToSpan() {\n     ReadableSpan readableSpan = (ReadableSpan) tracer.spanBuilder(\"spanName\").startSpan();\n     assertThat(readableSpan.getInstrumentationLibraryInfo()).isEqualTo(instrumentationLibraryInfo);\n   }\n+\n+  @Test\n+  public void stressTest() {\n+    CountingSpanProcessor spanProcessor = new CountingSpanProcessor();\n+    TracerSdkProvider tracerSdkProvider = TracerSdkProvider.builder().build();\n+    tracerSdkProvider.addSpanProcessor(spanProcessor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b76fca7f0ae1bb23413eab7d4f3ae87702512946"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEyMjgwMA==", "bodyText": "yep. easy to add; i'll make it happen", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1101#discussion_r407122800", "createdAt": "2020-04-11T23:31:34Z", "author": {"login": "jkwatson"}, "path": "sdk/src/test/java/io/opentelemetry/sdk/trace/TracerSdkTest.java", "diffHunk": "@@ -106,4 +110,78 @@ public void propagatesInstrumentationLibraryInfoToSpan() {\n     ReadableSpan readableSpan = (ReadableSpan) tracer.spanBuilder(\"spanName\").startSpan();\n     assertThat(readableSpan.getInstrumentationLibraryInfo()).isEqualTo(instrumentationLibraryInfo);\n   }\n+\n+  @Test\n+  public void stressTest() {\n+    CountingSpanProcessor spanProcessor = new CountingSpanProcessor();\n+    TracerSdkProvider tracerSdkProvider = TracerSdkProvider.builder().build();\n+    tracerSdkProvider.addSpanProcessor(spanProcessor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk5ODU4Ng=="}, "originalCommit": {"oid": "b76fca7f0ae1bb23413eab7d4f3ae87702512946"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI0NjkxMg==", "bodyText": "done, as an additional stress test.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1101#discussion_r407246912", "createdAt": "2020-04-12T20:13:54Z", "author": {"login": "jkwatson"}, "path": "sdk/src/test/java/io/opentelemetry/sdk/trace/TracerSdkTest.java", "diffHunk": "@@ -106,4 +110,78 @@ public void propagatesInstrumentationLibraryInfoToSpan() {\n     ReadableSpan readableSpan = (ReadableSpan) tracer.spanBuilder(\"spanName\").startSpan();\n     assertThat(readableSpan.getInstrumentationLibraryInfo()).isEqualTo(instrumentationLibraryInfo);\n   }\n+\n+  @Test\n+  public void stressTest() {\n+    CountingSpanProcessor spanProcessor = new CountingSpanProcessor();\n+    TracerSdkProvider tracerSdkProvider = TracerSdkProvider.builder().build();\n+    tracerSdkProvider.addSpanProcessor(spanProcessor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk5ODU4Ng=="}, "originalCommit": {"oid": "b76fca7f0ae1bb23413eab7d4f3ae87702512946"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 836, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}