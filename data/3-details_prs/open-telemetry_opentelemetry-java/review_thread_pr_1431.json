{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxNTg2ODI2", "number": 1431, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMTo1NDowOFrOEQYnog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMzoxNTo1OFrOEQZ4JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NjE2MDM0OnYy", "diffSide": "RIGHT", "path": "sdk_extensions/zpages/src/main/java/io/opentelemetry/sdk/extensions/zpages/TracezZPageHandler.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMTo1NDowOFrOG0gmkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMzoxNzoxMlrOG0ifsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzcxMzI5Ng==", "bodyText": "I think you can use StandardCharsets.UTF-8 here, and avoid the exception that could result.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1431#discussion_r457713296", "createdAt": "2020-07-20T21:54:08Z", "author": {"login": "jkwatson"}, "path": "sdk_extensions/zpages/src/main/java/io/opentelemetry/sdk/extensions/zpages/TracezZPageHandler.java", "diffHunk": "@@ -186,7 +187,10 @@ private static void emitSummaryTableCell(\n     // If numOfSamples is smaller than 0, print the text \"N/A\", otherwise print the text \"0\"\n     if (numOfSamples > 0) {\n       out.print(\"<td class=\\\"align-center border-left-dark\\\"><a href=\\\"?\");\n-      out.print(PARAM_SPAN_NAME + \"=\" + URLEncoder.encode(spanName, \"UTF-8\"));\n+      out.print(\n+          PARAM_SPAN_NAME\n+              + \"=\"\n+              + URLEncoder.encode(spanName.replace(\"+\", /* Unicode for + */ \"%2B\"), \"UTF-8\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9db8e7e6edd7b8188fe3b4deda6b091cf2f92a66"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzcyNjExOA==", "bodyText": "Using StandardCharsets.UTF_8.toString() seems to still require the exception.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1431#discussion_r457726118", "createdAt": "2020-07-20T22:25:23Z", "author": {"login": "williamhu99"}, "path": "sdk_extensions/zpages/src/main/java/io/opentelemetry/sdk/extensions/zpages/TracezZPageHandler.java", "diffHunk": "@@ -186,7 +187,10 @@ private static void emitSummaryTableCell(\n     // If numOfSamples is smaller than 0, print the text \"N/A\", otherwise print the text \"0\"\n     if (numOfSamples > 0) {\n       out.print(\"<td class=\\\"align-center border-left-dark\\\"><a href=\\\"?\");\n-      out.print(PARAM_SPAN_NAME + \"=\" + URLEncoder.encode(spanName, \"UTF-8\"));\n+      out.print(\n+          PARAM_SPAN_NAME\n+              + \"=\"\n+              + URLEncoder.encode(spanName.replace(\"+\", /* Unicode for + */ \"%2B\"), \"UTF-8\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzcxMzI5Ng=="}, "originalCommit": {"oid": "9db8e7e6edd7b8188fe3b4deda6b091cf2f92a66"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzcyNzg1Nw==", "bodyText": "oh shoot. the API that takes a CharSet is too new to use here.  never mind!", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1431#discussion_r457727857", "createdAt": "2020-07-20T22:30:11Z", "author": {"login": "jkwatson"}, "path": "sdk_extensions/zpages/src/main/java/io/opentelemetry/sdk/extensions/zpages/TracezZPageHandler.java", "diffHunk": "@@ -186,7 +187,10 @@ private static void emitSummaryTableCell(\n     // If numOfSamples is smaller than 0, print the text \"N/A\", otherwise print the text \"0\"\n     if (numOfSamples > 0) {\n       out.print(\"<td class=\\\"align-center border-left-dark\\\"><a href=\\\"?\");\n-      out.print(PARAM_SPAN_NAME + \"=\" + URLEncoder.encode(spanName, \"UTF-8\"));\n+      out.print(\n+          PARAM_SPAN_NAME\n+              + \"=\"\n+              + URLEncoder.encode(spanName.replace(\"+\", /* Unicode for + */ \"%2B\"), \"UTF-8\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzcxMzI5Ng=="}, "originalCommit": {"oid": "9db8e7e6edd7b8188fe3b4deda6b091cf2f92a66"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc0MjQ3Mg==", "bodyText": "Ah didn't know this behavior of urlencoder. In that case may want to use guava which I don't think has this problem\nhttps://guava.dev/releases/19.0/api/docs/com/google/common/net/UrlEscapers.html#urlFormParameterEscaper()", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1431#discussion_r457742472", "createdAt": "2020-07-20T23:11:14Z", "author": {"login": "anuraaga"}, "path": "sdk_extensions/zpages/src/main/java/io/opentelemetry/sdk/extensions/zpages/TracezZPageHandler.java", "diffHunk": "@@ -186,7 +187,10 @@ private static void emitSummaryTableCell(\n     // If numOfSamples is smaller than 0, print the text \"N/A\", otherwise print the text \"0\"\n     if (numOfSamples > 0) {\n       out.print(\"<td class=\\\"align-center border-left-dark\\\"><a href=\\\"?\");\n-      out.print(PARAM_SPAN_NAME + \"=\" + URLEncoder.encode(spanName, \"UTF-8\"));\n+      out.print(\n+          PARAM_SPAN_NAME\n+              + \"=\"\n+              + URLEncoder.encode(spanName.replace(\"+\", /* Unicode for + */ \"%2B\"), \"UTF-8\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzcxMzI5Ng=="}, "originalCommit": {"oid": "9db8e7e6edd7b8188fe3b4deda6b091cf2f92a66"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc0NDMwNg==", "bodyText": "Ah sorry by \"this behavior\" I meant the inability to round trip space and plus reliably.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1431#discussion_r457744306", "createdAt": "2020-07-20T23:17:12Z", "author": {"login": "anuraaga"}, "path": "sdk_extensions/zpages/src/main/java/io/opentelemetry/sdk/extensions/zpages/TracezZPageHandler.java", "diffHunk": "@@ -186,7 +187,10 @@ private static void emitSummaryTableCell(\n     // If numOfSamples is smaller than 0, print the text \"N/A\", otherwise print the text \"0\"\n     if (numOfSamples > 0) {\n       out.print(\"<td class=\\\"align-center border-left-dark\\\"><a href=\\\"?\");\n-      out.print(PARAM_SPAN_NAME + \"=\" + URLEncoder.encode(spanName, \"UTF-8\"));\n+      out.print(\n+          PARAM_SPAN_NAME\n+              + \"=\"\n+              + URLEncoder.encode(spanName.replace(\"+\", /* Unicode for + */ \"%2B\"), \"UTF-8\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzcxMzI5Ng=="}, "originalCommit": {"oid": "9db8e7e6edd7b8188fe3b4deda6b091cf2f92a66"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NjM2NjQ1OnYy", "diffSide": "LEFT", "path": "sdk_extensions/zpages/src/main/java/io/opentelemetry/sdk/extensions/zpages/TracezZPageHandler.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMzoxNTo1OFrOG0ieSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMDowNjoyNlrOG0jaHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc0Mzk0NQ==", "bodyText": "It's the \"job\" of parseQueryMap to do URL encoding, not this business logic do it there. This is important\n\nif we add more parameters\nif someone uses this in their own server instead of the default sun http", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1431#discussion_r457743945", "createdAt": "2020-07-20T23:15:58Z", "author": {"login": "anuraaga"}, "path": "sdk_extensions/zpages/src/main/java/io/opentelemetry/sdk/extensions/zpages/TracezZPageHandler.java", "diffHunk": "@@ -475,7 +479,7 @@ private void emitHtmlBody(Map<String, String> queryMap, PrintStream out)\n     String spanName = queryMap.get(PARAM_SPAN_NAME);\n     if (spanName != null) {\n       // Convert spanName with URL encoding\n-      spanName = URLEncoder.encode(spanName, \"UTF-8\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9db8e7e6edd7b8188fe3b4deda6b091cf2f92a66"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc1NzQ2Nw==", "bodyText": "Ah yeah, that encode is redundant.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1431#discussion_r457757467", "createdAt": "2020-07-21T00:00:20Z", "author": {"login": "williamhu99"}, "path": "sdk_extensions/zpages/src/main/java/io/opentelemetry/sdk/extensions/zpages/TracezZPageHandler.java", "diffHunk": "@@ -475,7 +479,7 @@ private void emitHtmlBody(Map<String, String> queryMap, PrintStream out)\n     String spanName = queryMap.get(PARAM_SPAN_NAME);\n     if (spanName != null) {\n       // Convert spanName with URL encoding\n-      spanName = URLEncoder.encode(spanName, \"UTF-8\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc0Mzk0NQ=="}, "originalCommit": {"oid": "9db8e7e6edd7b8188fe3b4deda6b091cf2f92a66"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc1ODM1MQ==", "bodyText": "Oh wait, the code didn't update (?). The encode should be replaced with a decode.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1431#discussion_r457758351", "createdAt": "2020-07-21T00:03:14Z", "author": {"login": "williamhu99"}, "path": "sdk_extensions/zpages/src/main/java/io/opentelemetry/sdk/extensions/zpages/TracezZPageHandler.java", "diffHunk": "@@ -475,7 +479,7 @@ private void emitHtmlBody(Map<String, String> queryMap, PrintStream out)\n     String spanName = queryMap.get(PARAM_SPAN_NAME);\n     if (spanName != null) {\n       // Convert spanName with URL encoding\n-      spanName = URLEncoder.encode(spanName, \"UTF-8\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc0Mzk0NQ=="}, "originalCommit": {"oid": "9db8e7e6edd7b8188fe3b4deda6b091cf2f92a66"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc1OTI2Mw==", "bodyText": "Sorry I accidentally commented on the wrong line. I meant the line below - moving decode to parseQueryMap with related unit tests", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1431#discussion_r457759263", "createdAt": "2020-07-21T00:06:26Z", "author": {"login": "anuraaga"}, "path": "sdk_extensions/zpages/src/main/java/io/opentelemetry/sdk/extensions/zpages/TracezZPageHandler.java", "diffHunk": "@@ -475,7 +479,7 @@ private void emitHtmlBody(Map<String, String> queryMap, PrintStream out)\n     String spanName = queryMap.get(PARAM_SPAN_NAME);\n     if (spanName != null) {\n       // Convert spanName with URL encoding\n-      spanName = URLEncoder.encode(spanName, \"UTF-8\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc0Mzk0NQ=="}, "originalCommit": {"oid": "9db8e7e6edd7b8188fe3b4deda6b091cf2f92a66"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1496, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}