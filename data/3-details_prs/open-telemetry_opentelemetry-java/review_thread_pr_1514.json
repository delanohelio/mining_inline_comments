{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzODI3MDUw", "number": 1514, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNzowMTo0NVrOEVsXjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNzoyMDo1OFrOEVsvGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTgyNDc2OnYy", "diffSide": "RIGHT", "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporterTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNzowMTo0NVrOG8l0sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNzowMTo0NVrOG8l0sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE4NzQ0MA==", "bodyText": "Hopefully, this will be less flaky \ud83d\ude04", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1514#discussion_r466187440", "createdAt": "2020-08-06T07:01:45Z", "author": {"login": "thisthat"}, "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporterTest.java", "diffHunk": "@@ -44,39 +45,44 @@\n import java.util.HashMap;\n import java.util.Map;\n import java.util.concurrent.TimeUnit;\n-import org.junit.Rule;\n-import org.junit.Test;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.Test;\n import org.mockito.ArgumentCaptor;\n import org.mockito.ArgumentMatchers;\n import org.mockito.Mockito;\n \n-/** Unit tests for {@link JaegerGrpcSpanExporter}. */\n-public class JaegerGrpcSpanExporterTest {\n+class JaegerGrpcSpanExporterTest {\n   private static final String TRACE_ID = \"00000000000000000000000000abc123\";\n   private static final String SPAN_ID = \"0000000000def456\";\n \n-  @Rule public final GrpcCleanupRule grpcCleanup = new GrpcCleanupRule();\n+  private final Closer closer = Closer.create();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "739dfca04a5185efe21043d5e6cc404c62e399a2"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTg4NTA3OnYy", "diffSide": "RIGHT", "path": "sdk_extensions/jaeger_remote_sampler/src/test/java/io/opentelemetry/sdk/extensions/trace/jaeger/sampler/JaegerRemoteSamplerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNzoyMDo1OFrOG8mYqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNzoyODoyOVrOG8moaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE5NjY0OQ==", "bodyText": "These should be changed to use assertThat().isInstanceOf, the error message we would get from assertTrue would be very unhelpful.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1514#discussion_r466196649", "createdAt": "2020-08-06T07:20:58Z", "author": {"login": "Oberon00"}, "path": "sdk_extensions/jaeger_remote_sampler/src/test/java/io/opentelemetry/sdk/extensions/trace/jaeger/sampler/JaegerRemoteSamplerTest.java", "diffHunk": "@@ -106,20 +112,20 @@ public void connectionWorks() {\n \n     // verify\n     verify(service).getSamplingStrategy(requestCaptor.capture(), ArgumentMatchers.any());\n-    Assert.assertEquals(SERVICE_NAME, requestCaptor.getValue().getServiceName());\n-    Assert.assertTrue(sampler.getSampler() instanceof RateLimitingSampler);\n-    Assert.assertEquals(\n+    Assertions.assertEquals(SERVICE_NAME, requestCaptor.getValue().getServiceName());\n+    Assertions.assertTrue(sampler.getSampler() instanceof RateLimitingSampler);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2e14efb62b1defbd8f3f7907e2b1b0f00a02433"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIwMDY4Mw==", "bodyText": "Yeah - there are still quite a few places that use legacy junit assertions. Eventually want to migrate those too - but I don't mind doing partial migration when pointed out :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1514#discussion_r466200683", "createdAt": "2020-08-06T07:28:29Z", "author": {"login": "anuraaga"}, "path": "sdk_extensions/jaeger_remote_sampler/src/test/java/io/opentelemetry/sdk/extensions/trace/jaeger/sampler/JaegerRemoteSamplerTest.java", "diffHunk": "@@ -106,20 +112,20 @@ public void connectionWorks() {\n \n     // verify\n     verify(service).getSamplingStrategy(requestCaptor.capture(), ArgumentMatchers.any());\n-    Assert.assertEquals(SERVICE_NAME, requestCaptor.getValue().getServiceName());\n-    Assert.assertTrue(sampler.getSampler() instanceof RateLimitingSampler);\n-    Assert.assertEquals(\n+    Assertions.assertEquals(SERVICE_NAME, requestCaptor.getValue().getServiceName());\n+    Assertions.assertTrue(sampler.getSampler() instanceof RateLimitingSampler);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE5NjY0OQ=="}, "originalCommit": {"oid": "e2e14efb62b1defbd8f3f7907e2b1b0f00a02433"}, "originalPosition": 89}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1307, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}