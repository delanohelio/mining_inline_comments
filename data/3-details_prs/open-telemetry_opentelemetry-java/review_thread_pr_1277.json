{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMzg1MDcw", "number": 1277, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTo0NzoxNlrOD_0s-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTo0NzoxNlrOD_0s-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjUwMzYyOnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTo0NzoxNlrOGat0Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDowNDoxNFrOGauYzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY2NjgzNQ==", "bodyText": "Instances of RawTimedEventWithEvent should be transformed into RawTimedEvent to avoid holding references to memory from the api.Event that we store.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1277#discussion_r430666835", "createdAt": "2020-05-26T19:47:16Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -505,13 +505,7 @@ int getTotalRecordedLinks() {\n     if (events.isEmpty()) {\n       return Collections.emptyList();\n     }\n-    List<Event> result = new ArrayList<>(events.size());\n-    for (io.opentelemetry.sdk.trace.TimedEvent sourceEvent : events) {\n-      result.add(\n-          Event.create(\n-              sourceEvent.getEpochNanos(), sourceEvent.getName(), sourceEvent.getAttributes()));\n-    }\n-    return Collections.unmodifiableList(result);\n+    return Collections.unmodifiableList(new ArrayList<Event>(events));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cba5501c55b1929350db77e4303fda924e6a7b2"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY2ODU0NA==", "bodyText": "ah, yes, you are correct. I'll write a unit test that verifies this, as well, since we don't have one at the moment.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1277#discussion_r430668544", "createdAt": "2020-05-26T19:50:14Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -505,13 +505,7 @@ int getTotalRecordedLinks() {\n     if (events.isEmpty()) {\n       return Collections.emptyList();\n     }\n-    List<Event> result = new ArrayList<>(events.size());\n-    for (io.opentelemetry.sdk.trace.TimedEvent sourceEvent : events) {\n-      result.add(\n-          Event.create(\n-              sourceEvent.getEpochNanos(), sourceEvent.getName(), sourceEvent.getAttributes()));\n-    }\n-    return Collections.unmodifiableList(result);\n+    return Collections.unmodifiableList(new ArrayList<Event>(events));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY2NjgzNQ=="}, "originalCommit": {"oid": "1cba5501c55b1929350db77e4303fda924e6a7b2"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY3NjE3Mg==", "bodyText": "done. will re-run the benchmarks", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1277#discussion_r430676172", "createdAt": "2020-05-26T20:04:14Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -505,13 +505,7 @@ int getTotalRecordedLinks() {\n     if (events.isEmpty()) {\n       return Collections.emptyList();\n     }\n-    List<Event> result = new ArrayList<>(events.size());\n-    for (io.opentelemetry.sdk.trace.TimedEvent sourceEvent : events) {\n-      result.add(\n-          Event.create(\n-              sourceEvent.getEpochNanos(), sourceEvent.getName(), sourceEvent.getAttributes()));\n-    }\n-    return Collections.unmodifiableList(result);\n+    return Collections.unmodifiableList(new ArrayList<Event>(events));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY2NjgzNQ=="}, "originalCommit": {"oid": "1cba5501c55b1929350db77e4303fda924e6a7b2"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 729, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}