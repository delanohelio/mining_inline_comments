{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MTYwMTg3", "number": 1974, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjoxNTowMlrOE0clOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNzoyNDoyNFrOE0rtUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNDI5Njg5OnYy", "diffSide": "RIGHT", "path": "context/src/main/java/io/opentelemetry/context/ThreadLocalContextStorage.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjoxNTowMlrOHsLUjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxODo1OTozNlrOHsRyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA4NDg3Ng==", "bodyText": "I think we can simply remove this line, we check for null in the Context and this is not necessarily.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1974#discussion_r516084876", "createdAt": "2020-11-02T16:15:02Z", "author": {"login": "bogdandrutu"}, "path": "context/src/main/java/io/opentelemetry/context/ThreadLocalContextStorage.java", "diffHunk": "@@ -45,7 +41,8 @@ public Scope attach(Context toAttach) {\n \n   @Override\n   public Context current() {\n-    return THREAD_LOCAL_STORAGE.get();\n+    Context threadContext = THREAD_LOCAL_STORAGE.get();\n+    return threadContext != null ? threadContext : Context.root();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1512fa1d754644b0c2de3f30a6039c848bfc1c03"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA5MjQ0OA==", "bodyText": "And add to the javadoc this behavior.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1974#discussion_r516092448", "createdAt": "2020-11-02T16:25:49Z", "author": {"login": "bogdandrutu"}, "path": "context/src/main/java/io/opentelemetry/context/ThreadLocalContextStorage.java", "diffHunk": "@@ -45,7 +41,8 @@ public Scope attach(Context toAttach) {\n \n   @Override\n   public Context current() {\n-    return THREAD_LOCAL_STORAGE.get();\n+    Context threadContext = THREAD_LOCAL_STORAGE.get();\n+    return threadContext != null ? threadContext : Context.root();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA4NDg3Ng=="}, "originalCommit": {"oid": "1512fa1d754644b0c2de3f30a6039c848bfc1c03"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE0ODk4NQ==", "bodyText": "Ok, if it's expected that ContextStorage#current can return null it feels like I should also add the @Nullable annotation so that developers can expect this.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1974#discussion_r516148985", "createdAt": "2020-11-02T17:43:59Z", "author": {"login": "HaloFour"}, "path": "context/src/main/java/io/opentelemetry/context/ThreadLocalContextStorage.java", "diffHunk": "@@ -45,7 +41,8 @@ public Scope attach(Context toAttach) {\n \n   @Override\n   public Context current() {\n-    return THREAD_LOCAL_STORAGE.get();\n+    Context threadContext = THREAD_LOCAL_STORAGE.get();\n+    return threadContext != null ? threadContext : Context.root();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA4NDg3Ng=="}, "originalCommit": {"oid": "1512fa1d754644b0c2de3f30a6039c848bfc1c03"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE1OTMwOA==", "bodyText": "Are you suggesting to change this Javadoc on ContextStorage#current?  It implies that this method will never return null:\n  /**\n   * Returns the current {@link DefaultContext}. If no {@link DefaultContext} has been attached yet,\n   * this will be the {@linkplain Context#root()} root context}.\n   */\n\nAlso feels weird that it calls out DefaultContext given that's a package-private class.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1974#discussion_r516159308", "createdAt": "2020-11-02T18:01:10Z", "author": {"login": "HaloFour"}, "path": "context/src/main/java/io/opentelemetry/context/ThreadLocalContextStorage.java", "diffHunk": "@@ -45,7 +41,8 @@ public Scope attach(Context toAttach) {\n \n   @Override\n   public Context current() {\n-    return THREAD_LOCAL_STORAGE.get();\n+    Context threadContext = THREAD_LOCAL_STORAGE.get();\n+    return threadContext != null ? threadContext : Context.root();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA4NDg3Ng=="}, "originalCommit": {"oid": "1512fa1d754644b0c2de3f30a6039c848bfc1c03"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE4MTU4MA==", "bodyText": "See here: https://github.com/HaloFour/opentelemetry-java/blob/1512fa1d754644b0c2de3f30a6039c848bfc1c03/context/src/main/java/io/opentelemetry/context/Context.java#L72", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1974#discussion_r516181580", "createdAt": "2020-11-02T18:42:17Z", "author": {"login": "Oberon00"}, "path": "context/src/main/java/io/opentelemetry/context/ThreadLocalContextStorage.java", "diffHunk": "@@ -45,7 +41,8 @@ public Scope attach(Context toAttach) {\n \n   @Override\n   public Context current() {\n-    return THREAD_LOCAL_STORAGE.get();\n+    Context threadContext = THREAD_LOCAL_STORAGE.get();\n+    return threadContext != null ? threadContext : Context.root();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA4NDg3Ng=="}, "originalCommit": {"oid": "1512fa1d754644b0c2de3f30a6039c848bfc1c03"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE4NDAyOQ==", "bodyText": "That's why I'm asking for clarity, because if it's expected that ContextStorage#current can return null then the Javadocs on that method should be updated to reflect this, and the method should be marked as @Nullable.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1974#discussion_r516184029", "createdAt": "2020-11-02T18:46:55Z", "author": {"login": "HaloFour"}, "path": "context/src/main/java/io/opentelemetry/context/ThreadLocalContextStorage.java", "diffHunk": "@@ -45,7 +41,8 @@ public Scope attach(Context toAttach) {\n \n   @Override\n   public Context current() {\n-    return THREAD_LOCAL_STORAGE.get();\n+    Context threadContext = THREAD_LOCAL_STORAGE.get();\n+    return threadContext != null ? threadContext : Context.root();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA4NDg3Ng=="}, "originalCommit": {"oid": "1512fa1d754644b0c2de3f30a6039c848bfc1c03"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE4NTIwNA==", "bodyText": "What is more\n\nThreadLocalContextStorage sets the ThreadLocal to Context.root() within the static constructor\n\nthis seems to be useless then and could be removed.\nCC @anuraaga", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1974#discussion_r516185204", "createdAt": "2020-11-02T18:49:00Z", "author": {"login": "Oberon00"}, "path": "context/src/main/java/io/opentelemetry/context/ThreadLocalContextStorage.java", "diffHunk": "@@ -45,7 +41,8 @@ public Scope attach(Context toAttach) {\n \n   @Override\n   public Context current() {\n-    return THREAD_LOCAL_STORAGE.get();\n+    Context threadContext = THREAD_LOCAL_STORAGE.get();\n+    return threadContext != null ? threadContext : Context.root();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA4NDg3Ng=="}, "originalCommit": {"oid": "1512fa1d754644b0c2de3f30a6039c848bfc1c03"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE5MDc3NA==", "bodyText": "I've committed the suggested changes, which more or less reverses what the PR was intended to do so I've changed the description of the PR (if that's ok).", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1974#discussion_r516190774", "createdAt": "2020-11-02T18:59:36Z", "author": {"login": "HaloFour"}, "path": "context/src/main/java/io/opentelemetry/context/ThreadLocalContextStorage.java", "diffHunk": "@@ -45,7 +41,8 @@ public Scope attach(Context toAttach) {\n \n   @Override\n   public Context current() {\n-    return THREAD_LOCAL_STORAGE.get();\n+    Context threadContext = THREAD_LOCAL_STORAGE.get();\n+    return threadContext != null ? threadContext : Context.root();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA4NDg3Ng=="}, "originalCommit": {"oid": "1512fa1d754644b0c2de3f30a6039c848bfc1c03"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjc3NTIxOnYy", "diffSide": "LEFT", "path": "context/src/main/java/io/opentelemetry/context/ThreadLocalContextStorage.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNzoyNDoyNFrOHsifPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNzoyNDoyNFrOHsifPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ2NDQ0NQ==", "bodyText": "Thanks for fixing my silliness :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1974#discussion_r516464445", "createdAt": "2020-11-03T07:24:24Z", "author": {"login": "anuraaga"}, "path": "context/src/main/java/io/opentelemetry/context/ThreadLocalContextStorage.java", "diffHunk": "@@ -15,10 +16,6 @@\n \n   private static final ThreadLocal<Context> THREAD_LOCAL_STORAGE = new ThreadLocal<>();\n \n-  static {\n-    THREAD_LOCAL_STORAGE.set(Context.root());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31f1dddab70a6a3d8f99ba32114edaf7e62df463"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1868, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}