{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4NDkwOTA3", "number": 1411, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjo0OTozNFrOEOPlOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjo0OTozNFrOEOPlOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzcwODA5OnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/Batchers.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjo0OTozNFrOGxSLtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNToxMjo1M1rOGxYVxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMzMTMxNw==", "bodyText": "Were these ones left empty on purpose?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1411#discussion_r454331317", "createdAt": "2020-07-14T12:49:34Z", "author": {"login": "carlosalberto"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/Batchers.java", "diffHunk": "@@ -34,36 +34,38 @@\n import java.util.Map;\n \n /** A collection of available Batchers. */\n-final class Batchers {\n+public final class Batchers {\n \n-  static Batcher getNoop() {\n+  public static Batcher getNoop() {\n     return Noop.INSTANCE;\n   }\n \n-  static Batcher getCumulativeAllLabels(\n+  /** TODO: javadoc me. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8b1a237ac911b9115d2a3de98dec130b69750a4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQyNDUwNQ==", "bodyText": "nope! I'll fix that before merging.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1411#discussion_r454424505", "createdAt": "2020-07-14T15:02:21Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/Batchers.java", "diffHunk": "@@ -34,36 +34,38 @@\n import java.util.Map;\n \n /** A collection of available Batchers. */\n-final class Batchers {\n+public final class Batchers {\n \n-  static Batcher getNoop() {\n+  public static Batcher getNoop() {\n     return Noop.INSTANCE;\n   }\n \n-  static Batcher getCumulativeAllLabels(\n+  /** TODO: javadoc me. */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMzMTMxNw=="}, "originalCommit": {"oid": "d8b1a237ac911b9115d2a3de98dec130b69750a4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQzMjE5Ng==", "bodyText": "done!", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1411#discussion_r454432196", "createdAt": "2020-07-14T15:12:53Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/Batchers.java", "diffHunk": "@@ -34,36 +34,38 @@\n import java.util.Map;\n \n /** A collection of available Batchers. */\n-final class Batchers {\n+public final class Batchers {\n \n-  static Batcher getNoop() {\n+  public static Batcher getNoop() {\n     return Noop.INSTANCE;\n   }\n \n-  static Batcher getCumulativeAllLabels(\n+  /** TODO: javadoc me. */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMzMTMxNw=="}, "originalCommit": {"oid": "d8b1a237ac911b9115d2a3de98dec130b69750a4"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1479, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}