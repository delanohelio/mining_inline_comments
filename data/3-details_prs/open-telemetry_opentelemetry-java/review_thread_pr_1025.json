{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NzQyNTE3", "number": 1025, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMjoyNDozNVrODosryg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNToyODo0NVrODoxRxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MDAxNzM4OnYy", "diffSide": "RIGHT", "path": "QUICKSTART.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMjoyNDozNVrOF3Z5Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMjoyNDozNVrOF3Z5Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY0MDIwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // your use case\n          \n          \n            \n            ...\n          \n          \n            \n            \t// your use case\n          \n          \n            \n            \t...", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393640207", "createdAt": "2020-03-17T12:24:35Z", "author": {"login": "arminru"}, "path": "QUICKSTART.md", "diffHunk": "@@ -47,9 +47,11 @@ Tracer tracer =\n To create a basic span, you only need to specify the name of the span.\n The start and end time of the span is automatically set by the OpenTelemetry SDK.\n ```java\n-Span span = tracer.spanBuilder(\"SpanName\").startSpan();\n+Span span = tracer.spanBuilder(\"my span\").startSpan();\n+try (Scope scope = tracer.withSpan(span)) {\n // your use case\n ...", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a18704dbea9ec22d690500500844dd3f52869d44"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MDAxODkwOnYy", "diffSide": "RIGHT", "path": "QUICKSTART.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMjoyNTowNVrOF3Z59w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMjoyNTowNVrOF3Z59w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY0MDQzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            span.end();\n          \n          \n            \n            span.end(); // closing the scope does not end the span, this has to be done manually", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393640439", "createdAt": "2020-03-17T12:25:05Z", "author": {"login": "arminru"}, "path": "QUICKSTART.md", "diffHunk": "@@ -47,9 +47,11 @@ Tracer tracer =\n To create a basic span, you only need to specify the name of the span.\n The start and end time of the span is automatically set by the OpenTelemetry SDK.\n ```java\n-Span span = tracer.spanBuilder(\"SpanName\").startSpan();\n+Span span = tracer.spanBuilder(\"my span\").startSpan();\n+try (Scope scope = tracer.withSpan(span)) {\n // your use case\n ...\n+}\n span.end();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a18704dbea9ec22d690500500844dd3f52869d44"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MDY0ODk5OnYy", "diffSide": "RIGHT", "path": "QUICKSTART.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNTowMTowN1rOF3gQAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNToyNjo0NlrOF3hYxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc0NDM4Nw==", "bodyText": "I would put this in a finally block to ensure always called. Also we may have a catch block where we set a status", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393744387", "createdAt": "2020-03-17T15:01:07Z", "author": {"login": "bogdandrutu"}, "path": "QUICKSTART.md", "diffHunk": "@@ -47,10 +47,12 @@ Tracer tracer =\n To create a basic span, you only need to specify the name of the span.\n The start and end time of the span is automatically set by the OpenTelemetry SDK.\n ```java\n-Span span = tracer.spanBuilder(\"SpanName\").startSpan();\n-// your use case\n-...\n-span.end();\n+Span span = tracer.spanBuilder(\"my span\").startSpan();\n+try (Scope scope = tracer.withSpan(span)) {\n+\t// your use case\n+\t...\n+}\n+span.end(); // closing the scope does not end the span, this has to be done manually", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "410c31e99458b88a738714ce02a6e78cb72fc163"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2MzAxMw==", "bodyText": "I wanted to do it at start, but name of section (### Create basic Span) confused me", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393763013", "createdAt": "2020-03-17T15:26:46Z", "author": {"login": "DotSpy"}, "path": "QUICKSTART.md", "diffHunk": "@@ -47,10 +47,12 @@ Tracer tracer =\n To create a basic span, you only need to specify the name of the span.\n The start and end time of the span is automatically set by the OpenTelemetry SDK.\n ```java\n-Span span = tracer.spanBuilder(\"SpanName\").startSpan();\n-// your use case\n-...\n-span.end();\n+Span span = tracer.spanBuilder(\"my span\").startSpan();\n+try (Scope scope = tracer.withSpan(span)) {\n+\t// your use case\n+\t...\n+}\n+span.end(); // closing the scope does not end the span, this has to be done manually", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc0NDM4Nw=="}, "originalCommit": {"oid": "410c31e99458b88a738714ce02a6e78cb72fc163"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MDc2NDEzOnYy", "diffSide": "RIGHT", "path": "QUICKSTART.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNToyNzoyOVrOF3ha5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNTozNDo1NlrOF3hxGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2MzU1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Status status = Status.UNKNOWN.withDescription(\"Change it to your error message\");\n          \n          \n            \n                Status status = Status.UNKNOWN.withDescription(t.getMessage());", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393763557", "createdAt": "2020-03-17T15:27:29Z", "author": {"login": "arminru"}, "path": "QUICKSTART.md", "diffHunk": "@@ -47,10 +47,16 @@ Tracer tracer =\n To create a basic span, you only need to specify the name of the span.\n The start and end time of the span is automatically set by the OpenTelemetry SDK.\n ```java\n-Span span = tracer.spanBuilder(\"SpanName\").startSpan();\n-// your use case\n-...\n-span.end();\n+Span span = tracer.spanBuilder(\"my span\").startSpan();\n+try (Scope scope = tracer.withSpan(span)) {\n+\t// your use case\n+\t...\n+} catch (Throwable t) {\n+    Status status = Status.UNKNOWN.withDescription(\"Change it to your error message\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb081320a37d998c699c12d04fd15aee532693d9"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2ODU1Mg==", "bodyText": "@arminru i'm not sure about it, t.getMessage() can provide a little explanation and user may want to change this to custom string including or excluding t.getMessage or even not exposing inner error", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393768552", "createdAt": "2020-03-17T15:34:01Z", "author": {"login": "DotSpy"}, "path": "QUICKSTART.md", "diffHunk": "@@ -47,10 +47,16 @@ Tracer tracer =\n To create a basic span, you only need to specify the name of the span.\n The start and end time of the span is automatically set by the OpenTelemetry SDK.\n ```java\n-Span span = tracer.spanBuilder(\"SpanName\").startSpan();\n-// your use case\n-...\n-span.end();\n+Span span = tracer.spanBuilder(\"my span\").startSpan();\n+try (Scope scope = tracer.withSpan(span)) {\n+\t// your use case\n+\t...\n+} catch (Throwable t) {\n+    Status status = Status.UNKNOWN.withDescription(\"Change it to your error message\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2MzU1Nw=="}, "originalCommit": {"oid": "bb081320a37d998c699c12d04fd15aee532693d9"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2OTI0Mw==", "bodyText": "Alright, I'm fine either way.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393769243", "createdAt": "2020-03-17T15:34:56Z", "author": {"login": "arminru"}, "path": "QUICKSTART.md", "diffHunk": "@@ -47,10 +47,16 @@ Tracer tracer =\n To create a basic span, you only need to specify the name of the span.\n The start and end time of the span is automatically set by the OpenTelemetry SDK.\n ```java\n-Span span = tracer.spanBuilder(\"SpanName\").startSpan();\n-// your use case\n-...\n-span.end();\n+Span span = tracer.spanBuilder(\"my span\").startSpan();\n+try (Scope scope = tracer.withSpan(span)) {\n+\t// your use case\n+\t...\n+} catch (Throwable t) {\n+    Status status = Status.UNKNOWN.withDescription(\"Change it to your error message\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2MzU1Nw=="}, "originalCommit": {"oid": "bb081320a37d998c699c12d04fd15aee532693d9"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MDc2OTk3OnYy", "diffSide": "RIGHT", "path": "QUICKSTART.md", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNToyODo0NVrOF3herQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNTozNjoxNVrOF3h1EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2NDUyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t...\n          \n          \n            \n            \t...\n          \n          \n            \n            \tspan.setStatus(Status.OK);\n          \n      \n    \n    \n  \n\nMaybe add also this so the reader does not get confused and think status is set only on error.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393764525", "createdAt": "2020-03-17T15:28:45Z", "author": {"login": "thisthat"}, "path": "QUICKSTART.md", "diffHunk": "@@ -51,8 +51,12 @@ Span span = tracer.spanBuilder(\"my span\").startSpan();\n try (Scope scope = tracer.withSpan(span)) {\n \t// your use case\n \t...", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb081320a37d998c699c12d04fd15aee532693d9"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2NTM0Mw==", "bodyText": "@thisthat isn't it default when we end?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393765343", "createdAt": "2020-03-17T15:29:48Z", "author": {"login": "DotSpy"}, "path": "QUICKSTART.md", "diffHunk": "@@ -51,8 +51,12 @@ Span span = tracer.spanBuilder(\"my span\").startSpan();\n try (Scope scope = tracer.withSpan(span)) {\n \t// your use case\n \t...", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2NDUyNQ=="}, "originalCommit": {"oid": "bb081320a37d998c699c12d04fd15aee532693d9"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2ODUyNw==", "bodyText": "You only have to call setStatus if you want to override the default, which already is OK.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393768527", "createdAt": "2020-03-17T15:33:59Z", "author": {"login": "arminru"}, "path": "QUICKSTART.md", "diffHunk": "@@ -51,8 +51,12 @@ Span span = tracer.spanBuilder(\"my span\").startSpan();\n try (Scope scope = tracer.withSpan(span)) {\n \t// your use case\n \t...", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2NDUyNQ=="}, "originalCommit": {"oid": "bb081320a37d998c699c12d04fd15aee532693d9"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc3MDI1Ng==", "bodyText": "Oh, you are right!", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393770256", "createdAt": "2020-03-17T15:36:15Z", "author": {"login": "thisthat"}, "path": "QUICKSTART.md", "diffHunk": "@@ -51,8 +51,12 @@ Span span = tracer.spanBuilder(\"my span\").startSpan();\n try (Scope scope = tracer.withSpan(span)) {\n \t// your use case\n \t...", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2NDUyNQ=="}, "originalCommit": {"oid": "bb081320a37d998c699c12d04fd15aee532693d9"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 994, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}