{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NTI3NTYy", "number": 1464, "title": "Set default endpoint for OTLP exporters", "bodyText": "I also went ahead and sync'd up the configuration settings between OTLP span and metrics exporters.\nA common base class might be nice for those two builders in the future.\nCloses #1463", "createdAt": "2020-07-24T23:21:53Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1464", "merged": true, "mergeCommit": {"oid": "0b8858205b0bdbb6a7e1c7ed13c97d385ccd9591"}, "closed": true, "closedAt": "2020-07-25T20:45:48Z", "author": {"login": "trask"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4MfVwAH2gAyNDU2NTI3NTYyOjI5NzkwNjAxMGE0MTc1NzdmNzhhNTdjNjQ3N2VlNDZmOGJlNDk5ZDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4e496gFqTQ1NTMxNDkyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "297906010a417577f78a57c6477ee46f8be499d7", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/297906010a417577f78a57c6477ee46f8be499d7", "committedDate": "2020-07-24T23:18:56Z", "message": "Set default endpoint for OTLP exporters"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjUyNTA3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1464#pullrequestreview-455252507", "createdAt": "2020-07-25T02:05:05Z", "commit": {"oid": "297906010a417577f78a57c6477ee46f8be499d7"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwMjowNTowNVrOG3BmUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwMjowOTozOFrOG3Bn-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MTA1OQ==", "bodyText": "It might be more readable to have a constant defined, DEFAULT_ENDPOINT, DEFAULT_DEADLINE_MS", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1464#discussion_r460351059", "createdAt": "2020-07-25T02:05:05Z", "author": {"login": "anuraaga"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcMetricExporter.java", "diffHunk": "@@ -146,12 +154,18 @@ public void shutdown() {\n   /** Builder utility for this exporter. */\n   public static class Builder extends ConfigBuilder<Builder> {\n     private static final String KEY_METRIC_TIMEOUT = \"otel.otlp.metric.timeout\";\n-\n+    private static final String KEY_ENDPOINT = \"otel.otlp.endpoint\";\n+    private static final String KEY_USE_TLS = \"otel.otlp.use.tls\";\n+    private static final String KEY_METADATA = \"otel.otlp.metadata\";\n     private ManagedChannel channel;\n     private long deadlineMs = 1_000; // 1 second\n+    private String endpoint = \"localhost:55680\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "297906010a417577f78a57c6477ee46f8be499d7"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MTExMA==", "bodyText": "If you end up extracting constants for the defaults can remove the comment by using TimeUnit.SECONDS.toMillis(1)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1464#discussion_r460351110", "createdAt": "2020-07-25T02:05:43Z", "author": {"login": "anuraaga"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcMetricExporter.java", "diffHunk": "@@ -146,12 +154,18 @@ public void shutdown() {\n   /** Builder utility for this exporter. */\n   public static class Builder extends ConfigBuilder<Builder> {\n     private static final String KEY_METRIC_TIMEOUT = \"otel.otlp.metric.timeout\";\n-\n+    private static final String KEY_ENDPOINT = \"otel.otlp.endpoint\";\n+    private static final String KEY_USE_TLS = \"otel.otlp.use.tls\";\n+    private static final String KEY_METADATA = \"otel.otlp.metadata\";\n     private ManagedChannel channel;\n     private long deadlineMs = 1_000; // 1 second", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "297906010a417577f78a57c6477ee46f8be499d7"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MTMyMg==", "bodyText": "Optional, defaults to {@value #DEFAULT_ENDPOINT}", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1464#discussion_r460351322", "createdAt": "2020-07-25T02:07:59Z", "author": {"login": "anuraaga"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcMetricExporter.java", "diffHunk": "@@ -172,12 +186,67 @@ public Builder setDeadlineMs(long deadlineMs) {\n       return this;\n     }\n \n+    /**\n+     * Sets the OTLP endpoint to connect to. Optional.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "297906010a417577f78a57c6477ee46f8be499d7"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MTQ4MQ==", "bodyText": "Provide good error message if channel is null here", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1464#discussion_r460351481", "createdAt": "2020-07-25T02:09:38Z", "author": {"login": "anuraaga"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcMetricExporter.java", "diffHunk": "@@ -172,12 +186,67 @@ public Builder setDeadlineMs(long deadlineMs) {\n       return this;\n     }\n \n+    /**\n+     * Sets the OTLP endpoint to connect to. Optional.\n+     *\n+     * @param endpoint endpoint to connect to\n+     * @return this builder's instance\n+     */\n+    public Builder setEndpoint(String endpoint) {\n+      this.endpoint = endpoint;\n+      return this;\n+    }\n+\n+    /**\n+     * Sets use or not TLS, default is false. Optional. Applicable only if {@link Builder#endpoint}\n+     * is set to build channel.\n+     *\n+     * @param useTls use TLS or not\n+     * @return this builder's instance\n+     */\n+    public Builder setUseTls(boolean useTls) {\n+      this.useTls = useTls;\n+      return this;\n+    }\n+\n+    /**\n+     * Add header to request. Optional. Applicable only if {@link Builder#endpoint} is set to build\n+     * channel.\n+     *\n+     * @param key header key\n+     * @param value header value\n+     * @return this builder's instance\n+     */\n+    public Builder addHeader(String key, String value) {\n+      if (metadata == null) {\n+        metadata = new Metadata();\n+      }\n+      metadata.put(Metadata.Key.of(key, ASCII_STRING_MARSHALLER), value);\n+      return this;\n+    }\n+\n     /**\n      * Constructs a new instance of the exporter based on the builder's values.\n      *\n      * @return a new exporter's instance\n      */\n     public OtlpGrpcMetricExporter build() {\n+      if (endpoint != null) {\n+        final ManagedChannelBuilder<?> managedChannelBuilder =\n+            ManagedChannelBuilder.forTarget(endpoint);\n+\n+        if (useTls) {\n+          managedChannelBuilder.useTransportSecurity();\n+        } else {\n+          managedChannelBuilder.usePlaintext();\n+        }\n+\n+        if (metadata != null) {\n+          managedChannelBuilder.intercept(MetadataUtils.newAttachHeadersInterceptor(metadata));\n+        }\n+\n+        channel = managedChannelBuilder.build();\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "297906010a417577f78a57c6477ee46f8be499d7"}, "originalPosition": 111}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d063890e49cb30bdb283c61a12c40c3e38b7842a", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d063890e49cb30bdb283c61a12c40c3e38b7842a", "committedDate": "2020-07-25T05:01:42Z", "message": "feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3b160998e5f10fa4ec9c189760b71698d5b893b", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d3b160998e5f10fa4ec9c189760b71698d5b893b", "committedDate": "2020-07-25T05:12:38Z", "message": "javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzE0OTI5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1464#pullrequestreview-455314929", "createdAt": "2020-07-25T20:45:13Z", "commit": {"oid": "d3b160998e5f10fa4ec9c189760b71698d5b893b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2640, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}