{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0Nzk5ODUy", "number": 1286, "title": "Remove SpanID from sampling parameters", "bodyText": "Update code per latest spec, see:\nopen-telemetry/opentelemetry-specification#621\nThe goal is to avoid any SDK implementation from taking a dependency on it.", "createdAt": "2020-05-28T23:39:49Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1286", "merged": true, "mergeCommit": {"oid": "7fb0d4da985ed9dbfdb22f25bfff84571b89b77a"}, "closed": true, "closedAt": "2020-05-29T15:52:47Z", "author": {"login": "pjanotti"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcl2iEdAH2gAyNDI0Nzk5ODUyOmM5MGFlOWE2OWQ1NzI4MGFlYTY2NWIzN2UwNmY4YTRhMTdiOGVhMzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcmEidmAFqTQyMTA3OTY1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c90ae9a69d57280aea665b37e06f8a4a17b8ea38", "author": {"user": {"login": "pjanotti", "name": "Paulo Janotti"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c90ae9a69d57280aea665b37e06f8a4a17b8ea38", "committedDate": "2020-05-28T23:33:22Z", "message": "Remove SpanID from sampling parameters"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNTk2Njc4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1286#pullrequestreview-420596678", "createdAt": "2020-05-29T01:29:54Z", "commit": {"oid": "c90ae9a69d57280aea665b37e06f8a4a17b8ea38"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMToyOTo1NFrOGcL-Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMToyOTo1NFrOGcL-Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIwOTQ4Mg==", "bodyText": "One of the goals of this change in the spec was to enable deferring the generation of a span id when one wasn't needed. Is it possible to defer the spanId creation, and if not, why not?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1286#discussion_r432209482", "createdAt": "2020-05-29T01:29:54Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -223,13 +223,7 @@ public Span startSpan() {\n         traceConfig\n             .getSampler()\n             .shouldSample(\n-                parentContext,\n-                traceId,\n-                spanId,\n-                spanName,\n-                spanKind,\n-                immutableAttributes,\n-                immutableLinks);\n+                parentContext, traceId, spanName, spanKind, immutableAttributes, immutableLinks);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c90ae9a69d57280aea665b37e06f8a4a17b8ea38"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwODgxNzUz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1286#pullrequestreview-420881753", "createdAt": "2020-05-29T11:51:00Z", "commit": {"oid": "c90ae9a69d57280aea665b37e06f8a4a17b8ea38"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMDI4NTkw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1286#pullrequestreview-421028590", "createdAt": "2020-05-29T14:52:02Z", "commit": {"oid": "c90ae9a69d57280aea665b37e06f8a4a17b8ea38"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMDMzOTMx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1286#pullrequestreview-421033931", "createdAt": "2020-05-29T14:57:59Z", "commit": {"oid": "c90ae9a69d57280aea665b37e06f8a4a17b8ea38"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b51eaed887db21e4b6c68987b5859794b9e4cdc", "author": {"user": {"login": "pjanotti", "name": "Paulo Janotti"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/5b51eaed887db21e4b6c68987b5859794b9e4cdc", "committedDate": "2020-05-29T15:06:11Z", "message": "Generate SpanId only for sampled spans"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMDQxOTQ2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1286#pullrequestreview-421041946", "createdAt": "2020-05-29T15:07:40Z", "commit": {"oid": "c90ae9a69d57280aea665b37e06f8a4a17b8ea38"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMDU3MzI3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1286#pullrequestreview-421057327", "createdAt": "2020-05-29T15:26:15Z", "commit": {"oid": "5b51eaed887db21e4b6c68987b5859794b9e4cdc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNToyNjoxNVrOGchfNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNToyNjoxNVrOGchfNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU2MTk3NQ==", "bodyText": "Please revert the last commit, and don't do the optimization now.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1286#discussion_r432561975", "createdAt": "2020-05-29T15:26:15Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -223,13 +223,7 @@ public Span startSpan() {\n         traceConfig\n             .getSampler()\n             .shouldSample(\n-                parentContext,\n-                traceId,\n-                spanId,\n-                spanName,\n-                spanKind,\n-                immutableAttributes,\n-                immutableLinks);\n+                parentContext, traceId, spanName, spanKind, immutableAttributes, immutableLinks);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIwOTQ4Mg=="}, "originalCommit": {"oid": "c90ae9a69d57280aea665b37e06f8a4a17b8ea38"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffdc6f0c682102cd2bce9e835f0e78d257040367", "author": {"user": {"login": "pjanotti", "name": "Paulo Janotti"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ffdc6f0c682102cd2bce9e835f0e78d257040367", "committedDate": "2020-05-29T15:33:36Z", "message": "Revert \"Generate SpanId only for sampled spans\"\n\nThis reverts commit 5b51eaed887db21e4b6c68987b5859794b9e4cdc."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMDc5NjUy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1286#pullrequestreview-421079652", "createdAt": "2020-05-29T15:52:28Z", "commit": {"oid": "ffdc6f0c682102cd2bce9e835f0e78d257040367"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2810, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}