{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzMjQ2NjE4", "number": 2373, "title": "Remove most addspanprocessor mutator invocations.", "bodyText": "What's left is ZPages which will be a small API change there so will do it separately.", "createdAt": "2020-12-21T06:04:06Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2373", "merged": true, "mergeCommit": {"oid": "68b939faab5ef00d025f14db8f2c8eb356a6dbc9"}, "closed": true, "closedAt": "2020-12-22T02:28:20Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdoOsgCgH2gAyNTQzMjQ2NjE4OjFiZmFiNmRmZjViOTk1NjlhMWVhZGU5YTRiMWVhZmFmNjAyOWJjOWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdog9algH2gAyNTQzMjQ2NjE4OmM4MjA3ZGQ0NzQ1NjA4YWRlM2ZkMmE5NGQxZGJjZTI0MzVlMWZhZTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1bfab6dff5b99569a1eade9a4b1eafaf6029bc9a", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1bfab6dff5b99569a1eade9a4b1eafaf6029bc9a", "committedDate": "2020-12-21T05:01:29Z", "message": "Remove more addSpanProcessor mutations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c4c8f507643288eddbaecb0eab1095e69212543", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1c4c8f507643288eddbaecb0eab1095e69212543", "committedDate": "2020-12-21T05:37:03Z", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into remove-more-addspanprocessor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df1153af95ea9b74747c5192b2acab653295d20a", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/df1153af95ea9b74747c5192b2acab653295d20a", "committedDate": "2020-12-21T06:03:31Z", "message": "Merge"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MTQ3MTk4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2373#pullrequestreview-556147198", "createdAt": "2020-12-21T06:04:59Z", "commit": {"oid": "df1153af95ea9b74747c5192b2acab653295d20a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjowNDo1OVrOIJNNDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjowNDo1OVrOIJNNDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUyNDQyOA==", "bodyText": "span processor leak fixed :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2373#discussion_r546524428", "createdAt": "2020-12-21T06:04:59Z", "author": {"login": "anuraaga"}, "path": "opencensus-shim/src/test/java/io/opentelemetry/opencensusshim/TraceInteroperabilityTest.java", "diffHunk": "@@ -56,20 +59,32 @@\n \n   private static final String NULL_SPAN_ID = \"0000000000000000\";\n \n-  @Captor private ArgumentCaptor<Collection<SpanData>> spanDataCaptor;\n-\n-  @Spy private SpanExporter spanExporter;\n+  // Initialize OpenTelemetry statically because OpenCensus is.\n+  private static final SpanExporter spanExporter;\n+  private static final OpenTelemetry openTelemetry;\n \n-  @BeforeEach\n-  public void init() {\n+  static {\n+    spanExporter = spy(SpanExporter.class);\n     when(spanExporter.export(anyList())).thenReturn(CompletableResultCode.ofSuccess());\n+\n     SpanProcessor spanProcessor = SimpleSpanProcessor.builder(spanExporter).build();\n-    OpenTelemetrySdk.getGlobalTracerManagement().addSpanProcessor(spanProcessor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df1153af95ea9b74747c5192b2acab653295d20a"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NDc1NTgw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2373#pullrequestreview-556475580", "createdAt": "2020-12-21T15:46:59Z", "commit": {"oid": "df1153af95ea9b74747c5192b2acab653295d20a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTo0Njo1OVrOIJcyxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTo0Njo1OVrOIJcyxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3OTg0NQ==", "bodyText": "I don't think Simple processor needs this, but it is a good pattern to follow and shutdown the sdk/processor all the time.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2373#discussion_r546779845", "createdAt": "2020-12-21T15:46:59Z", "author": {"login": "bogdandrutu"}, "path": "sdk/testing/src/test/java/io/opentelemetry/sdk/testing/exporter/InMemorySpanExporterTest.java", "diffHunk": "@@ -23,13 +23,17 @@\n \n /** Unit tests for {@link InMemorySpanExporter}. */\n class InMemorySpanExporterTest {\n-  private final SdkTracerProvider sdkTracerProvider = SdkTracerProvider.builder().build();\n-  private final Tracer tracer = sdkTracerProvider.get(\"InMemorySpanExporterTest\");\n   private final InMemorySpanExporter exporter = InMemorySpanExporter.create();\n \n+  private Tracer tracer;\n+\n   @BeforeEach\n   void setup() {\n-    sdkTracerProvider.addSpanProcessor(SimpleSpanProcessor.builder(exporter).build());\n+    tracer =\n+        SdkTracerProvider.builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df1153af95ea9b74747c5192b2acab653295d20a"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NTMzMzYw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2373#pullrequestreview-556533360", "createdAt": "2020-12-21T17:10:05Z", "commit": {"oid": "df1153af95ea9b74747c5192b2acab653295d20a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNzoxMDowNVrOIJfj-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNzoxMDowNVrOIJfj-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgyNTIxMQ==", "bodyText": "it's a little odd to use this class name to call a static method on itself, but it's not a deal breaker.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2373#discussion_r546825211", "createdAt": "2020-12-21T17:10:05Z", "author": {"login": "jkwatson"}, "path": "integration-tests/src/main/java/io/opentelemetry/SendTraceToJaeger.java", "diffHunk": "@@ -78,8 +83,8 @@ public static void main(String[] args) {\n \n     // Start the example\n     SendTraceToJaeger example = new SendTraceToJaeger(ip, port);\n-    example.setupJaegerExporter();\n-    example.myWonderfulUseCase();\n+    OpenTelemetry openTelemetry = example.initOpenTelemetry();\n+    SendTraceToJaeger.myWonderfulUseCase(openTelemetry);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df1153af95ea9b74747c5192b2acab653295d20a"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NTM0MTgx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2373#pullrequestreview-556534181", "createdAt": "2020-12-21T17:11:22Z", "commit": {"oid": "df1153af95ea9b74747c5192b2acab653295d20a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8207dd4745608ade3fd2a94d1dbce2435e1fae6", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c8207dd4745608ade3fd2a94d1dbce2435e1fae6", "committedDate": "2020-12-22T02:18:15Z", "message": "Cleanup"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3495, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}