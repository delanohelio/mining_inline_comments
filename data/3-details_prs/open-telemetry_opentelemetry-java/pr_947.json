{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMTQzNDY2", "number": 947, "title": "Update InMemoryTracing to use builder, and limit the public API.", "bodyText": "", "createdAt": "2020-02-28T00:39:37Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/947", "merged": true, "mergeCommit": {"oid": "56719f02b6237133e9bcb4b0d909526724ebd8e8"}, "closed": true, "closedAt": "2020-02-28T20:44:50Z", "author": {"login": "bogdandrutu"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIk7o4AH2gAyMzgxMTQzNDY2OmM2ODBkZWEwOTczNGM2ZTNiNWE2ZGEyZWViNzRjNGIxNjA0OWIzMzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcI1Bl3gFqTM2NjYzMDYxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c680dea09734c6e3b5a6da2eeb74c4b16049b334", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c680dea09734c6e3b5a6da2eeb74c4b16049b334", "committedDate": "2020-02-28T00:39:12Z", "message": "Update InMemoryTracing to use builder, and limit the public API.\n\nSigned-off-by: Bogdan Cristian Drutu <bogdandrutu@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDk2Mzcy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/947#pullrequestreview-366096372", "createdAt": "2020-02-28T00:40:49Z", "commit": {"oid": "c680dea09734c6e3b5a6da2eeb74c4b16049b334"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDo0MDo0OVrOFvmEhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDo0MDo0OVrOFvmEhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ1MTE0MA==", "bodyText": "@jkwatson I need your brain to help me name this class :) Idea is that probably I will have an equivalent for Metrics as well, also every exporter should offer this helper to configure the span exporter class.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/947#discussion_r385451140", "createdAt": "2020-02-28T00:40:49Z", "author": {"login": "bogdandrutu"}, "path": "exporters/inmemory/src/main/java/io/opentelemetry/exporters/inmemory/InMemoryTracing.java", "diffHunk": "@@ -43,71 +45,59 @@\n  *\n  * @since 0.1.0\n  */\n-public final class InMemoryTracing {\n-  private final TracerSdkProvider tracerSdkProvider;\n-  private final InMemorySpanExporter exporter;\n-\n+@AutoValue\n+@Immutable\n+public abstract class InMemoryTracing {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c680dea09734c6e3b5a6da2eeb74c4b16049b334"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NDg2NzY4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/947#pullrequestreview-366486768", "createdAt": "2020-02-28T15:36:47Z", "commit": {"oid": "c680dea09734c6e3b5a6da2eeb74c4b16049b334"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NjMwNjEy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/947#pullrequestreview-366630612", "createdAt": "2020-02-28T19:24:10Z", "commit": {"oid": "c680dea09734c6e3b5a6da2eeb74c4b16049b334"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOToyNDoxMFrOFwAKLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOToyNDoxMFrOFwAKLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg3ODU3Mg==", "bodyText": "Autovalue seems like a little bit of overkill for this, since we don't really care about equals/hashcode/tostring, but I'm not opposed to it if people like standardizing on it for simple immutable classes.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/947#discussion_r385878572", "createdAt": "2020-02-28T19:24:10Z", "author": {"login": "jkwatson"}, "path": "exporters/inmemory/src/main/java/io/opentelemetry/exporters/inmemory/InMemoryTracing.java", "diffHunk": "@@ -43,71 +45,59 @@\n  *\n  * @since 0.1.0\n  */\n-public final class InMemoryTracing {\n-  private final TracerSdkProvider tracerSdkProvider;\n-  private final InMemorySpanExporter exporter;\n-\n+@AutoValue", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c680dea09734c6e3b5a6da2eeb74c4b16049b334"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3127, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}