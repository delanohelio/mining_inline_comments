{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzMjY0MzI4", "number": 2375, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwODozODo1MVrOFHtTDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTozNzo1MVrOFH1eQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNjI2NTEwOnYy", "diffSide": "RIGHT", "path": "sdk/trace/src/main/java/io/opentelemetry/sdk/trace/SdkTracerProviderBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwODozODo1MVrOIJQT_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwOToxMjoyNFrOIJRPZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3NTM1OA==", "bodyText": "Intentional change?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2375#discussion_r546575358", "createdAt": "2020-12-21T08:38:51Z", "author": {"login": "Oberon00"}, "path": "sdk/trace/src/main/java/io/opentelemetry/sdk/trace/SdkTracerProviderBuilder.java", "diffHunk": "@@ -5,13 +5,14 @@\n \n package io.opentelemetry.sdk.trace;\n \n+import static java.util.Objects.requireNonNull;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c2c46cb599423604379172b850fbd798527f288"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU5MDU2Nw==", "bodyText": "I needed to add \"traceConfig\" to the requireNonNull check for it and used my normal static import style. If it was 100 lines of drift I'd probably revert it but hoping just four is ok :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2375#discussion_r546590567", "createdAt": "2020-12-21T09:12:24Z", "author": {"login": "anuraaga"}, "path": "sdk/trace/src/main/java/io/opentelemetry/sdk/trace/SdkTracerProviderBuilder.java", "diffHunk": "@@ -5,13 +5,14 @@\n \n package io.opentelemetry.sdk.trace;\n \n+import static java.util.Objects.requireNonNull;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3NTM1OA=="}, "originalCommit": {"oid": "4c2c46cb599423604379172b850fbd798527f288"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNzYwNDUwOnYy", "diffSide": "RIGHT", "path": "api/all/src/test/java/io/opentelemetry/api/OpenTelemetryTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTozNzo1MVrOIJcdrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTo0MzoxNFrOIJcpKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3NDQ0Nw==", "bodyText": "Is there no equivalent in jupiter? I liked the fact that we always use the jupiter imports.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2375#discussion_r546774447", "createdAt": "2020-12-21T15:37:51Z", "author": {"login": "bogdandrutu"}, "path": "api/all/src/test/java/io/opentelemetry/api/OpenTelemetryTest.java", "diffHunk": "@@ -6,7 +6,7 @@\n package io.opentelemetry.api;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c2c46cb599423604379172b850fbd798527f288"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3NzM4NA==", "bodyText": "The jupiter equivalent would be using assertThat() around the return value of the asserThrows which is the exception. But we use asserj for all other assertions, so I think either way is equally consistent.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2375#discussion_r546777384", "createdAt": "2020-12-21T15:43:14Z", "author": {"login": "Oberon00"}, "path": "api/all/src/test/java/io/opentelemetry/api/OpenTelemetryTest.java", "diffHunk": "@@ -6,7 +6,7 @@\n package io.opentelemetry.api;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3NDQ0Nw=="}, "originalCommit": {"oid": "4c2c46cb599423604379172b850fbd798527f288"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1601, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}