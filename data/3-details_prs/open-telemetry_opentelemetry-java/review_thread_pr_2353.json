{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMjQzOTA5", "number": 2353, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMzoyMDoxNFrOFHAFEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMzoyMDoxNFrOFHAFEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyODg1NjQ5OnYy", "diffSide": "LEFT", "path": "sdk/metrics/src/test/java/io/opentelemetry/sdk/metrics/export/IntervalMetricReaderTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMzoyMDoxNFrOIIRmEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNzoxMTowM1rOIIrYSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU0Nzc5Mg==", "bodyText": "IIUC, the problem was that exportedMetrics could have more than the expected number of exports returned? Anyways, blockingqueue always better than monitors!", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2353#discussion_r545547792", "createdAt": "2020-12-18T03:20:14Z", "author": {"login": "anuraaga"}, "path": "sdk/metrics/src/test/java/io/opentelemetry/sdk/metrics/export/IntervalMetricReaderTest.java", "diffHunk": "@@ -176,20 +173,12 @@ public CompletableResultCode shutdown() {\n      * metrics.\n      */\n     @Nullable\n-    List<List<MetricData>> waitForNumberOfExports(int numberOfExports) {\n-      List<List<MetricData>> result;\n-      synchronized (monitor) {\n-        while (exportedMetrics.size() < numberOfExports) {\n-          try {\n-            monitor.wait();\n-          } catch (InterruptedException e) {\n-            // Preserve the interruption status as per guidance.\n-            Thread.currentThread().interrupt();\n-            return null;\n-          }\n-        }\n-        result = exportedMetrics;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "faf51bb9f71002de811d7d6a004cc89298353b80"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTk3MDI0OA==", "bodyText": "Yeah, in some circumstances export() was entered a second time before the released wait() in the other thread could continue on with its work of adding to the result.  By the time it got around to doing that, there would occasionally be more data than expected.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2353#discussion_r545970248", "createdAt": "2020-12-18T17:11:03Z", "author": {"login": "breedx-splk"}, "path": "sdk/metrics/src/test/java/io/opentelemetry/sdk/metrics/export/IntervalMetricReaderTest.java", "diffHunk": "@@ -176,20 +173,12 @@ public CompletableResultCode shutdown() {\n      * metrics.\n      */\n     @Nullable\n-    List<List<MetricData>> waitForNumberOfExports(int numberOfExports) {\n-      List<List<MetricData>> result;\n-      synchronized (monitor) {\n-        while (exportedMetrics.size() < numberOfExports) {\n-          try {\n-            monitor.wait();\n-          } catch (InterruptedException e) {\n-            // Preserve the interruption status as per guidance.\n-            Thread.currentThread().interrupt();\n-            return null;\n-          }\n-        }\n-        result = exportedMetrics;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU0Nzc5Mg=="}, "originalCommit": {"oid": "faf51bb9f71002de811d7d6a004cc89298353b80"}, "originalPosition": 83}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1568, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}