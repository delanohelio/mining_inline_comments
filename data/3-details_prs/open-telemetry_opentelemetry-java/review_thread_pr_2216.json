{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0MDE3MzM0", "number": 2216, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMjoyMjoyN1rOFCFlKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMjoyMjoyN1rOFCFlKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NzMyOTA0OnYy", "diffSide": "RIGHT", "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/AbstractAsynchronousInstrument.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMjoyMjoyN1rOIBD23Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMjo0MjowOVrOIBESlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk4MjY4NQ==", "bodyText": "yes, this was always in my head as a thing that needed to be done. Thanks!", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2216#discussion_r537982685", "createdAt": "2020-12-08T02:22:27Z", "author": {"login": "jkwatson"}, "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/AbstractAsynchronousInstrument.java", "diffHunk": "@@ -11,45 +11,39 @@\n import io.opentelemetry.sdk.metrics.data.MetricData;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Objects;\n import java.util.concurrent.locks.ReentrantLock;\n import javax.annotation.Nullable;\n \n abstract class AbstractAsynchronousInstrument<T extends AsynchronousInstrument.Result>\n     extends AbstractInstrument implements AsynchronousInstrument<T> {\n-  @Nullable private volatile Callback<T> metricUpdater = null;\n+  @Nullable private final Callback<T> metricUpdater;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4af60ca54f80c0da76f5d38784b43e8204656cda"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk4OTc4MA==", "bodyText": "That's why I separated from the previous PR, because I wanted to fix this deeper", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2216#discussion_r537989780", "createdAt": "2020-12-08T02:42:09Z", "author": {"login": "bogdandrutu"}, "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/AbstractAsynchronousInstrument.java", "diffHunk": "@@ -11,45 +11,39 @@\n import io.opentelemetry.sdk.metrics.data.MetricData;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Objects;\n import java.util.concurrent.locks.ReentrantLock;\n import javax.annotation.Nullable;\n \n abstract class AbstractAsynchronousInstrument<T extends AsynchronousInstrument.Result>\n     extends AbstractInstrument implements AsynchronousInstrument<T> {\n-  @Nullable private volatile Callback<T> metricUpdater = null;\n+  @Nullable private final Callback<T> metricUpdater;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk4MjY4NQ=="}, "originalCommit": {"oid": "4af60ca54f80c0da76f5d38784b43e8204656cda"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1844, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}