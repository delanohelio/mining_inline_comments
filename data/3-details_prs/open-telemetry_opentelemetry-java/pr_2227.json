{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0MzI5OTQ1", "number": 2227, "title": "Detect invalid use of makeCurrent in Kotlin coroutine.", "bodyText": "Since this reflects Kotlin runtime internals, naturally there may be some cat/mouse involved in checking this across Kotlin versions. But I think a best effort is still significantly better than nothing.", "createdAt": "2020-12-08T09:57:45Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2227", "merged": true, "mergeCommit": {"oid": "e802b8ab355d5fc8675a9ed75358e740382f6655"}, "closed": true, "closedAt": "2020-12-15T06:09:35Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkHISnAH2gAyNTM0MzI5OTQ1OmU5NzFiNjMyMmZmZGY1NjllMWQ1ZjEwNDdjMTdiYzc0NTFlZjZmMmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmT6IfgH2gAyNTM0MzI5OTQ1OmYyYTJjYWZkMWIzZjRiZGE3YmFkYzg2MzNjZDM0ZjI1OTAzOTgxY2U=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e971b6322ffdf569e1d5f1047c17bc7451ef6f2f", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e971b6322ffdf569e1d5f1047c17bc7451ef6f2f", "committedDate": "2020-12-08T09:56:54Z", "message": "Detect invalid use of makeCurrent in Kotlin coroutine."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NDg2NjA5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2227#pullrequestreview-547486609", "createdAt": "2020-12-08T17:56:45Z", "commit": {"oid": "e971b6322ffdf569e1d5f1047c17bc7451ef6f2f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNzo1Njo0NVrOIBtgAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNzo1Njo0NVrOIBtgAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY2NDk2MQ==", "bodyText": "urgh. Any thoughts on how to keep this up-to-date if kotlin renames or changes their continuation implementation? Do we know what versions of kotlin this will work for, at this point?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2227#discussion_r538664961", "createdAt": "2020-12-08T17:56:45Z", "author": {"login": "jkwatson"}, "path": "api/context/src/main/java/io/opentelemetry/context/StrictContextStorage.java", "diffHunk": "@@ -92,6 +92,17 @@ public Scope attach(Context context) {\n     CallerStackTrace caller = new CallerStackTrace(context);\n     StackTraceElement[] stackTrace = caller.getStackTrace();\n \n+    // Detect invalid use from kotlin.\n+    for (StackTraceElement element : stackTrace) {\n+      if (element.getClassName().equals(\"kotlin.coroutines.jvm.internal.BaseContinuationImpl\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e971b6322ffdf569e1d5f1047c17bc7451ef6f2f"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NjAwNTMw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2227#pullrequestreview-547600530", "createdAt": "2020-12-08T20:24:22Z", "commit": {"oid": "e971b6322ffdf569e1d5f1047c17bc7451ef6f2f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0b78413930a798522ba79cb0c43c13dbdb6ac31", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d0b78413930a798522ba79cb0c43c13dbdb6ac31", "committedDate": "2020-12-12T05:58:39Z", "message": "Fix and check suspending function too."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec83c1dfa3818d1aff99730e27b4d3da578042b4", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ec83c1dfa3818d1aff99730e27b4d3da578042b4", "committedDate": "2020-12-12T05:59:37Z", "message": "Newline"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "762c9d7914a382408bde65d2a642717bd8307b20", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/762c9d7914a382408bde65d2a642717bd8307b20", "committedDate": "2020-12-12T06:02:27Z", "message": "Doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26e8def5ed63757cf068daa8f9c292dd4b5e9b08", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/26e8def5ed63757cf068daa8f9c292dd4b5e9b08", "committedDate": "2020-12-12T06:06:23Z", "message": "Some comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNTg1NjY5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2227#pullrequestreview-551585669", "createdAt": "2020-12-14T16:42:58Z", "commit": {"oid": "26e8def5ed63757cf068daa8f9c292dd4b5e9b08"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNjo0Mjo1OFrOIFZnww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNjo0Mjo1OFrOIFZnww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjUzMzU3MQ==", "bodyText": "is this comment explaining why we're not re-asserting? If so, can you just add that bit to the comment? Otherwise, explain what it is for. :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2227#discussion_r542533571", "createdAt": "2020-12-14T16:42:58Z", "author": {"login": "jkwatson"}, "path": "extensions/kotlin/src/test/kotlin/io/opentelemetry/extension/kotlin/StrictContextWithCoroutinesTest.kt", "diffHunk": "@@ -141,20 +141,23 @@ class StrictContextWithCoroutinesTest {\n         Context.current().with(ANIMAL, animal).makeCurrent().use {\n             assertThat(Context.current().get(ANIMAL)).isEqualTo(animal)\n             delay(10)\n+            // May be on a different thread, in which case ANIMAL != animal!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26e8def5ed63757cf068daa8f9c292dd4b5e9b08"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNTg2MTc2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2227#pullrequestreview-551586176", "createdAt": "2020-12-14T16:43:13Z", "commit": {"oid": "26e8def5ed63757cf068daa8f9c292dd4b5e9b08"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNjo0MzoxM1rOIFZoaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNjo0MzoxM1rOIFZoaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjUzMzczOQ==", "bodyText": "ditto on more explanatory comment", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2227#discussion_r542533739", "createdAt": "2020-12-14T16:43:13Z", "author": {"login": "jkwatson"}, "path": "extensions/kotlin/src/test/kotlin/io/opentelemetry/extension/kotlin/StrictContextWithCoroutinesTest.kt", "diffHunk": "@@ -141,20 +141,23 @@ class StrictContextWithCoroutinesTest {\n         Context.current().with(ANIMAL, animal).makeCurrent().use {\n             assertThat(Context.current().get(ANIMAL)).isEqualTo(animal)\n             delay(10)\n+            // May be on a different thread, in which case ANIMAL != animal!\n         }\n     }\n \n     suspend fun suspendingFunctionMakeCurrentWithManualClose(animal: String) {\n         val scope = Context.current().with(ANIMAL, animal).makeCurrent()\n         assertThat(Context.current().get(ANIMAL)).isEqualTo(animal)\n         delay(10)\n+        // May be on a different thread, in which case ANIMAL != animal!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26e8def5ed63757cf068daa8f9c292dd4b5e9b08"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNTg3NzY1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2227#pullrequestreview-551587765", "createdAt": "2020-12-14T16:43:59Z", "commit": {"oid": "26e8def5ed63757cf068daa8f9c292dd4b5e9b08"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2a2cafd1b3f4bda7badc8633cd34f25903981ce", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/f2a2cafd1b3f4bda7badc8633cd34f25903981ce", "committedDate": "2020-12-15T05:58:03Z", "message": "teency"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3587, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}