{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNTExNTQ4", "number": 1088, "title": "Let the carrier be null on the inject methods, to support possible lambda usages", "bodyText": "I think this should resolve #916 , but if we want to have no-op implementations if the other two parameters are null, I can amend this PR with that.", "createdAt": "2020-04-07T21:27:42Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1088", "merged": true, "mergeCommit": {"oid": "73858ccf7b3d2664431d5ff0273a362fe5a79332"}, "closed": true, "closedAt": "2020-04-09T20:23:28Z", "author": {"login": "jkwatson"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVaJtrAH2gAyNDAwNTExNTQ4OmQxMzExMmNhMzQ3ZmY0MTVjMGQ0MzFkNmY2N2RiNjQwNGU3MjFhYTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcV_EnQgFqTM5MDk0NzI0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d13112ca347ff415c0d431d6f67db6404e721aa8", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d13112ca347ff415c0d431d6f67db6404e721aa8", "committedDate": "2020-04-07T21:26:38Z", "message": "Let the carrier be null on the inject methods, to support possible lambda usages."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMjQyOTE4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1088#pullrequestreview-390242918", "createdAt": "2020-04-08T18:51:54Z", "commit": {"oid": "d13112ca347ff415c0d431d6f67db6404e721aa8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwODg2NTMz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1088#pullrequestreview-390886533", "createdAt": "2020-04-09T15:14:31Z", "commit": {"oid": "d13112ca347ff415c0d431d6f67db6404e721aa8"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17e188bdedb41b95a578601787ec1ef0a7710af9", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/17e188bdedb41b95a578601787ec1ef0a7710af9", "committedDate": "2020-04-09T15:54:32Z", "message": "update the javadoc/annotations to make the nullability clear."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwOTMxMDc0", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1088#pullrequestreview-390931074", "createdAt": "2020-04-09T16:06:44Z", "commit": {"oid": "17e188bdedb41b95a578601787ec1ef0a7710af9"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNjowNjo0NVrOGDfaog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNjowODo0NVrOGDffRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMxMzYzNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Injects the value downstream. For example, as http headers. The carrier may be null to\n          \n          \n            \n               * Injects the value downstream, for example as HTTP headers. The carrier may be null to", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1088#discussion_r406313634", "createdAt": "2020-04-09T16:06:45Z", "author": {"login": "Oberon00"}, "path": "context_prop/src/main/java/io/opentelemetry/context/propagation/HttpTextFormat.java", "diffHunk": "@@ -69,15 +69,17 @@\n   List<String> fields();\n \n   /**\n-   * Injects the value downstream. For example, as http headers.\n+   * Injects the value downstream. For example, as http headers. The carrier may be null to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17e188bdedb41b95a578601787ec1ef0a7710af9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMxMzkzOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * facilitate calling this method with a java lambda for the {@link Setter}, in which case that\n          \n          \n            \n               * facilitate calling this method with a lambda for the {@link Setter}, in which case that\n          \n      \n    \n    \n  \n\nJava is redundant in a Javadoc, IMHO.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1088#discussion_r406313939", "createdAt": "2020-04-09T16:07:20Z", "author": {"login": "Oberon00"}, "path": "context_prop/src/main/java/io/opentelemetry/context/propagation/HttpTextFormat.java", "diffHunk": "@@ -69,15 +69,17 @@\n   List<String> fields();\n \n   /**\n-   * Injects the value downstream. For example, as http headers.\n+   * Injects the value downstream. For example, as http headers. The carrier may be null to\n+   * facilitate calling this method with a java lambda for the {@link Setter}, in which case that", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17e188bdedb41b95a578601787ec1ef0a7710af9"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMxNDE5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * null will be passed to your {@link Setter} implementation.\n          \n          \n            \n               * null will be passed to the {@link Setter} implementation.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1088#discussion_r406314192", "createdAt": "2020-04-09T16:07:45Z", "author": {"login": "Oberon00"}, "path": "context_prop/src/main/java/io/opentelemetry/context/propagation/HttpTextFormat.java", "diffHunk": "@@ -69,15 +69,17 @@\n   List<String> fields();\n \n   /**\n-   * Injects the value downstream. For example, as http headers.\n+   * Injects the value downstream. For example, as http headers. The carrier may be null to\n+   * facilitate calling this method with a java lambda for the {@link Setter}, in which case that\n+   * null will be passed to your {@link Setter} implementation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17e188bdedb41b95a578601787ec1ef0a7710af9"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMxNDgyMg==", "bodyText": "While at it, you could also add @Nonnull.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1088#discussion_r406314822", "createdAt": "2020-04-09T16:08:45Z", "author": {"login": "Oberon00"}, "path": "context_prop/src/main/java/io/opentelemetry/context/propagation/HttpTextFormat.java", "diffHunk": "@@ -69,15 +69,17 @@\n   List<String> fields();\n \n   /**\n-   * Injects the value downstream. For example, as http headers.\n+   * Injects the value downstream. For example, as http headers. The carrier may be null to\n+   * facilitate calling this method with a java lambda for the {@link Setter}, in which case that\n+   * null will be passed to your {@link Setter} implementation.\n    *\n    * @param context the {@code Context} containing the value to be injected.\n    * @param carrier holds propagation fields. For example, an outgoing message or http request.\n    * @param setter invoked for each propagation key to add or remove.\n    * @param <C> carrier of propagation fields, such as an http request\n    * @since 0.1.0\n    */\n-  <C> void inject(Context context, C carrier, Setter<C> setter);\n+  <C> void inject(Context context, @Nullable C carrier, Setter<C> setter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17e188bdedb41b95a578601787ec1ef0a7710af9"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "358111ea573d0d9631df4323a513688116ba33c4", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/358111ea573d0d9631df4323a513688116ba33c4", "committedDate": "2020-04-09T16:09:53Z", "message": "Update context_prop/src/main/java/io/opentelemetry/context/propagation/HttpTextFormat.java\n\nCo-Authored-By: Christian Neum\u00fcller <christian+github@neumueller.me>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed31642c391809c9e0b63da34e7bcb5e205ed3e5", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ed31642c391809c9e0b63da34e7bcb5e205ed3e5", "committedDate": "2020-04-09T16:10:25Z", "message": "Update context_prop/src/main/java/io/opentelemetry/context/propagation/HttpTextFormat.java\n\nCo-Authored-By: Christian Neum\u00fcller <christian+github@neumueller.me>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "655e0822bcef0baf65da26d0d1b62abb81bad583", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/655e0822bcef0baf65da26d0d1b62abb81bad583", "committedDate": "2020-04-09T16:10:36Z", "message": "Update context_prop/src/main/java/io/opentelemetry/context/propagation/HttpTextFormat.java\n\nCo-Authored-By: Christian Neum\u00fcller <christian+github@neumueller.me>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "388f5cdd04d0da7f337b2a8c2af58e05e9da4c5b", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/388f5cdd04d0da7f337b2a8c2af58e05e9da4c5b", "committedDate": "2020-04-09T16:16:42Z", "message": "update formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwOTQ3MjQy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1088#pullrequestreview-390947242", "createdAt": "2020-04-09T16:27:33Z", "commit": {"oid": "388f5cdd04d0da7f337b2a8c2af58e05e9da4c5b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2931, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}