{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0Mjk3NDI4", "number": 771, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMTo1NjoxMlrODY8ryQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMjowNDozM1rODY8yUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NDg2NjY1OnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMTo1NjoxMlrOFfGQjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMjowNTowMlrOFfGbfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1MjcxNw==", "bodyText": "Do we want to count this as dropped or we simply ignore?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/771#discussion_r368152717", "createdAt": "2020-01-17T21:56:12Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -137,6 +138,9 @@\n \n   @Override\n   public Span.Builder setAttribute(String key, String value) {\n+    if (StringUtils.isNullOrBlank(value)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71b9b77da949061995cb35e24fd90b3f05fcc903"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1MzI4Mg==", "bodyText": "it's definitely a different kind of \"dropping\" than the \"too many attributes\" kind. I think ignoring it is fine..it's not really an attribute at all without a value.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/771#discussion_r368153282", "createdAt": "2020-01-17T21:58:02Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -137,6 +138,9 @@\n \n   @Override\n   public Span.Builder setAttribute(String key, String value) {\n+    if (StringUtils.isNullOrBlank(value)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1MjcxNw=="}, "originalCommit": {"oid": "71b9b77da949061995cb35e24fd90b3f05fcc903"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1NTUxNg==", "bodyText": "Fine with this for the moment, may be unexpected for users especially for empty.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/771#discussion_r368155516", "createdAt": "2020-01-17T22:05:02Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -137,6 +138,9 @@\n \n   @Override\n   public Span.Builder setAttribute(String key, String value) {\n+    if (StringUtils.isNullOrBlank(value)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1MjcxNw=="}, "originalCommit": {"oid": "71b9b77da949061995cb35e24fd90b3f05fcc903"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NDg4MzM2OnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMjowNDozM1rOFfGa8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMjozMDo1NVrOFfG5RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1NTM3Ng==", "bodyText": "What is the behavior for AttributeValue.stringAttributeValue(value) in case a null string is passed?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/771#discussion_r368155376", "createdAt": "2020-01-17T22:04:33Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -137,6 +138,9 @@\n \n   @Override\n   public Span.Builder setAttribute(String key, String value) {\n+    if (StringUtils.isNullOrBlank(value)) {\n+      return this;\n+    }\n     return setAttribute(key, AttributeValue.stringAttributeValue(value));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71b9b77da949061995cb35e24fd90b3f05fcc903"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1NzM2OA==", "bodyText": "that remains the same. If you're trying to create an AttributeValue with a null, you'll get the usual NPE.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/771#discussion_r368157368", "createdAt": "2020-01-17T22:11:07Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -137,6 +138,9 @@\n \n   @Override\n   public Span.Builder setAttribute(String key, String value) {\n+    if (StringUtils.isNullOrBlank(value)) {\n+      return this;\n+    }\n     return setAttribute(key, AttributeValue.stringAttributeValue(value));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1NTM3Ng=="}, "originalCommit": {"oid": "71b9b77da949061995cb35e24fd90b3f05fcc903"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1ODI2Ng==", "bodyText": "k", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/771#discussion_r368158266", "createdAt": "2020-01-17T22:14:06Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -137,6 +138,9 @@\n \n   @Override\n   public Span.Builder setAttribute(String key, String value) {\n+    if (StringUtils.isNullOrBlank(value)) {\n+      return this;\n+    }\n     return setAttribute(key, AttributeValue.stringAttributeValue(value));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1NTM3Ng=="}, "originalCommit": {"oid": "71b9b77da949061995cb35e24fd90b3f05fcc903"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1ODQ3Ng==", "bodyText": "I think this is unexpected result and inconsistent, maybe we should try to see how we can offer the same behavior.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/771#discussion_r368158476", "createdAt": "2020-01-17T22:14:58Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -137,6 +138,9 @@\n \n   @Override\n   public Span.Builder setAttribute(String key, String value) {\n+    if (StringUtils.isNullOrBlank(value)) {\n+      return this;\n+    }\n     return setAttribute(key, AttributeValue.stringAttributeValue(value));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1NTM3Ng=="}, "originalCommit": {"oid": "71b9b77da949061995cb35e24fd90b3f05fcc903"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1OTk0NQ==", "bodyText": "that's a fair comment. I think we can do this by allowing null/empty in the AttributeValue, and then ignoring when we try to add. I'll change this PR to do it that way.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/771#discussion_r368159945", "createdAt": "2020-01-17T22:20:02Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -137,6 +138,9 @@\n \n   @Override\n   public Span.Builder setAttribute(String key, String value) {\n+    if (StringUtils.isNullOrBlank(value)) {\n+      return this;\n+    }\n     return setAttribute(key, AttributeValue.stringAttributeValue(value));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1NTM3Ng=="}, "originalCommit": {"oid": "71b9b77da949061995cb35e24fd90b3f05fcc903"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE2MzE0MA==", "bodyText": "ok, changed", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/771#discussion_r368163140", "createdAt": "2020-01-17T22:30:55Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -137,6 +138,9 @@\n \n   @Override\n   public Span.Builder setAttribute(String key, String value) {\n+    if (StringUtils.isNullOrBlank(value)) {\n+      return this;\n+    }\n     return setAttribute(key, AttributeValue.stringAttributeValue(value));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1NTM3Ng=="}, "originalCommit": {"oid": "71b9b77da949061995cb35e24fd90b3f05fcc903"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1013, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}