{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MDQ5MTI4", "number": 1342, "title": "Extension packages should not use \"internal\" API package", "bodyText": "Fixes #1125, second attempt.\nThis PR adds InternalApiProtectionTest which uses ArchUnit to enforce architectural constraints. It only verifies that classes in contrib packages do not use classes in internal package of API module.\nTest was added into opentelemetry-all module because the latter depends on all other submodules and therefore sees all classes in the project.\nAll found violations were fixed.\nStringUtils was copied from Guava, so its original copyright notice was preserved with slight formatting changes. Even then I had to change our checkstyle configuration to make it pass.", "createdAt": "2020-06-17T19:24:08Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1342", "merged": true, "mergeCommit": {"oid": "46f0c5f0b7b5044029fb55b105bf00576665316b"}, "closed": true, "closedAt": "2020-06-18T16:10:19Z", "author": {"login": "iNikem"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsO7QugH2gAyNDM2MDQ5MTI4OjBiZDIyNmY5YTM2Zjc2MDBiYWUxNTZjNGEwZTFkNGMwZGU5ZDM3Mzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsgx6nAFqTQzMzQzNzU2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0bd226f9a36f7600bae156c4a0e1d4c0de9d3737", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0bd226f9a36f7600bae156c4a0e1d4c0de9d3737", "committedDate": "2020-06-17T19:22:09Z", "message": "Extension packages should not use \"internal\" API package\n\nAdd InternalApiProtectionTest which uses ArchUnit to enforce architectural constraints.\nThis change only verifies that classes in `extensions` packages do not use classes in `internal` package of API module.\n\nTest was added into `opentelemetry-all` module because the latter depends on all other submodules\nand therefore sees all classes in the project."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNzEwMjI2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1342#pullrequestreview-432710226", "createdAt": "2020-06-17T19:29:28Z", "commit": {"oid": "0bd226f9a36f7600bae156c4a0e1d4c0de9d3737"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOToyOToyOFrOGlUU-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOToyOTo1NVrOGlUV3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4MzU0NA==", "bodyText": "Use truth for this", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1342#discussion_r441783544", "createdAt": "2020-06-17T19:29:28Z", "author": {"login": "bogdandrutu"}, "path": "extensions/trace_propagators/src/test/java/io/opentelemetry/extensions/trace/propagation/StringUtilsTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.extensions.trace.propagation;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static org.junit.Assert.assertEquals;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bd226f9a36f7600bae156c4a0e1d4c0de9d3737"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4Mzc3NA==", "bodyText": "Use assertThat", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1342#discussion_r441783774", "createdAt": "2020-06-17T19:29:55Z", "author": {"login": "bogdandrutu"}, "path": "extensions/trace_propagators/src/test/java/io/opentelemetry/extensions/trace/propagation/StringUtilsTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.extensions.trace.propagation;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+\n+import org.junit.Test;\n+\n+public class StringUtilsTest {\n+\n+  @Test\n+  public void isNullOrEmpty() {\n+    assertThat(StringUtils.isNullOrEmpty(\"\")).isTrue();\n+    assertThat(StringUtils.isNullOrEmpty(null)).isTrue();\n+    assertThat(StringUtils.isNullOrEmpty(\"hello\")).isFalse();\n+    assertThat(StringUtils.isNullOrEmpty(\" \")).isFalse();\n+  }\n+\n+  @Test\n+  public void padLeft() {\n+    assertEquals(StringUtils.padLeft(\"value\", 10), \"00000value\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bd226f9a36f7600bae156c4a0e1d4c0de9d3737"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNzU1MzUx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1342#pullrequestreview-432755351", "createdAt": "2020-06-17T20:34:14Z", "commit": {"oid": "0bd226f9a36f7600bae156c4a0e1d4c0de9d3737"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMDozNDoxNFrOGlWXCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMDozNDoxNFrOGlWXCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgxNjg0MA==", "bodyText": "we should use the junit ExpectedException for this, rather than try/fail", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1342#discussion_r441816840", "createdAt": "2020-06-17T20:34:14Z", "author": {"login": "jkwatson"}, "path": "extensions/trace_propagators/src/test/java/io/opentelemetry/extensions/trace/propagation/StringUtilsTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.extensions.trace.propagation;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+\n+import org.junit.Test;\n+\n+public class StringUtilsTest {\n+\n+  @Test\n+  public void isNullOrEmpty() {\n+    assertThat(StringUtils.isNullOrEmpty(\"\")).isTrue();\n+    assertThat(StringUtils.isNullOrEmpty(null)).isTrue();\n+    assertThat(StringUtils.isNullOrEmpty(\"hello\")).isFalse();\n+    assertThat(StringUtils.isNullOrEmpty(\" \")).isFalse();\n+  }\n+\n+  @Test\n+  public void padLeft() {\n+    assertEquals(StringUtils.padLeft(\"value\", 10), \"00000value\");\n+  }\n+\n+  @Test\n+  public void padLeft_throws_for_null_value() {\n+    try {\n+      StringUtils.padLeft(null, 10);\n+      fail(\"Expected exception not\");\n+    } catch (NullPointerException expected) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bd226f9a36f7600bae156c4a0e1d4c0de9d3737"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyODQwODM5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1342#pullrequestreview-432840839", "createdAt": "2020-06-17T23:22:30Z", "commit": {"oid": "0bd226f9a36f7600bae156c4a0e1d4c0de9d3737"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMjE4ODI2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1342#pullrequestreview-433218826", "createdAt": "2020-06-18T12:11:55Z", "commit": {"oid": "0bd226f9a36f7600bae156c4a0e1d4c0de9d3737"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8da60127d5e0730e0872c6235c6d8ffe668096fa", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/8da60127d5e0730e0872c6235c6d8ffe668096fa", "committedDate": "2020-06-18T15:34:04Z", "message": "Polish"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19495768d8696646c2aa247c2fa0595488e2fd82", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/19495768d8696646c2aa247c2fa0595488e2fd82", "committedDate": "2020-06-18T15:58:02Z", "message": "Polish"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNDM3NTYx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1342#pullrequestreview-433437561", "createdAt": "2020-06-18T16:10:14Z", "commit": {"oid": "19495768d8696646c2aa247c2fa0595488e2fd82"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2471, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}