{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzMTk0OTc0", "number": 2368, "title": "Avoid spying the class under test.", "bodyText": "", "createdAt": "2020-12-21T03:25:41Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2368", "merged": true, "mergeCommit": {"oid": "94d469b71de2a7d5a34d98c211a58315a2c36ed8"}, "closed": true, "closedAt": "2020-12-22T17:58:28Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdoNUjIgH2gAyNTQzMTk0OTc0OjE5MTFiZGU2NjE1YTM2YzIwMmNhMWEwOTJiZjAzN2ZkMmVmOGFiZTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdouXkdgFqTU1NzI2MDMxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1911bde6615a36c202ca1a092bf037fd2ef8abe9", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1911bde6615a36c202ca1a092bf037fd2ef8abe9", "committedDate": "2020-12-21T03:25:25Z", "message": "Avoid spying the class under test."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MjQyOTc1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2368#pullrequestreview-556242975", "createdAt": "2020-12-21T09:30:59Z", "commit": {"oid": "1911bde6615a36c202ca1a092bf037fd2ef8abe9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwOTozMDo1OVrOIJRylw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwOTozMDo1OVrOIJRylw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU5OTU3NQ==", "bodyText": "I like to use a prefix such as test_ for methods that are not only visible for testing but exist solely for testing.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2368#discussion_r546599575", "createdAt": "2020-12-21T09:30:59Z", "author": {"login": "Oberon00"}, "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/export/IntervalMetricReader.java", "diffHunk": "@@ -159,6 +159,11 @@ protected Builder fromConfigMap(\n       }\n       return this;\n     }\n+\n+    // Visible for testing\n+    long getExportIntervalMillis() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1911bde6615a36c202ca1a092bf037fd2ef8abe9"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NTA2ODMz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2368#pullrequestreview-556506833", "createdAt": "2020-12-21T16:31:15Z", "commit": {"oid": "1911bde6615a36c202ca1a092bf037fd2ef8abe9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNjozMToxNlrOIJeTqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNjozMToxNlrOIJeTqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgwNDY0OA==", "bodyText": "rather than exposing a method, we can dig into the internals and keep the production code a bit cleaner. I can't say which is better or worse, but at least if we just dig into the internals, we've reduced a couple lines of production code and a discussion about naming those methods. ;)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2368#discussion_r546804648", "createdAt": "2020-12-21T16:31:16Z", "author": {"login": "jkwatson"}, "path": "exporters/otlp/metrics/src/test/java/io/opentelemetry/exporter/otlp/metrics/OtlpGrpcMetricExporterTest.java", "diffHunk": "@@ -70,11 +68,9 @@ void configTest() {\n     Properties options = new Properties();\n     options.put(\"otel.exporter.otlp.metric.timeout\", \"12\");\n     options.put(\"otel.exporter.otlp.insecure\", \"true\");\n-    OtlpGrpcMetricExporterBuilder config = OtlpGrpcMetricExporter.builder();\n-    OtlpGrpcMetricExporterBuilder spy = Mockito.spy(config);\n-    spy.readProperties(options);\n-    verify(spy).setDeadlineMs(12);\n-    verify(spy).setUseTls(false);\n+    OtlpGrpcMetricExporterBuilder config = OtlpGrpcMetricExporter.builder().readProperties(options);\n+    assertThat(config.getUseTls()).isFalse();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1911bde6615a36c202ca1a092bf037fd2ef8abe9"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28b65242ffb53b3c52c6448fd66f28e11b755357", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/28b65242ffb53b3c52c6448fd66f28e11b755357", "committedDate": "2020-12-22T02:27:36Z", "message": "Less methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MjYwMzE0", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2368#pullrequestreview-557260314", "createdAt": "2020-12-22T17:55:35Z", "commit": {"oid": "28b65242ffb53b3c52c6448fd66f28e11b755357"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3486, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}