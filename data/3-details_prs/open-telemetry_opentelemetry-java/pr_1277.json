{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMzg1MDcw", "number": 1277, "title": "Convert the exportable Event to an interface", "bodyText": "And, make the internal TimedEvent implement that interface, so we don't need to copy the data in the Span pipeline.\nThis is continuing work towards #1191\nBenchmark results before this change:\nSpanPipelineBenchmark.runThePipeline_05Threads                                   thrpt    5  4004.539 \u00b1 255.354  ops/ms\nSpanPipelineBenchmark.runThePipeline_05Threads:\u00b7gc.alloc.rate                    thrpt    5  7670.084 \u00b1 495.608  MB/sec\nSpanPipelineBenchmark.runThePipeline_05Threads:\u00b7gc.alloc.rate.norm               thrpt    5  3016.001 \u00b1   0.001    B/op\nSpanPipelineBenchmark.runThePipeline_05Threads:\u00b7gc.churn.PS_Eden_Space           thrpt    5  7677.574 \u00b1 530.403  MB/sec\nSpanPipelineBenchmark.runThePipeline_05Threads:\u00b7gc.churn.PS_Eden_Space.norm      thrpt    5  3019.633 \u00b1 288.382    B/op\nSpanPipelineBenchmark.runThePipeline_05Threads:\u00b7gc.churn.PS_Survivor_Space       thrpt    5     0.203 \u00b1   0.296  MB/sec\nSpanPipelineBenchmark.runThePipeline_05Threads:\u00b7gc.churn.PS_Survivor_Space.norm  thrpt    5     0.080 \u00b1   0.119    B/op\nSpanPipelineBenchmark.runThePipeline_05Threads:\u00b7gc.count                         thrpt    5    74.000            counts\nSpanPipelineBenchmark.runThePipeline_05Threads:\u00b7gc.time                          thrpt    5    48.000                ms\n\nBenchmark results after this change:\nSpanPipelineBenchmark.runThePipeline_05Threads                                   thrpt    5  3972.373 \u00b1  112.536  ops/ms\nSpanPipelineBenchmark.runThePipeline_05Threads:\u00b7gc.alloc.rate                    thrpt    5  7441.701 \u00b1  250.148  MB/sec\nSpanPipelineBenchmark.runThePipeline_05Threads:\u00b7gc.alloc.rate.norm               thrpt    5  2952.001 \u00b1    0.001    B/op\nSpanPipelineBenchmark.runThePipeline_05Threads:\u00b7gc.churn.PS_Eden_Space           thrpt    5  7470.590 \u00b1 1733.367  MB/sec\nSpanPipelineBenchmark.runThePipeline_05Threads:\u00b7gc.churn.PS_Eden_Space.norm      thrpt    5  2962.492 \u00b1  599.333    B/op\nSpanPipelineBenchmark.runThePipeline_05Threads:\u00b7gc.churn.PS_Survivor_Space       thrpt    5     0.245 \u00b1    0.380  MB/sec\nSpanPipelineBenchmark.runThePipeline_05Threads:\u00b7gc.churn.PS_Survivor_Space.norm  thrpt    5     0.097 \u00b1    0.148    B/op\nSpanPipelineBenchmark.runThePipeline_05Threads:\u00b7gc.count                         thrpt    5    76.000             counts\nSpanPipelineBenchmark.runThePipeline_05Threads:\u00b7gc.time                          thrpt    5    47.000                 ms```", "createdAt": "2020-05-26T18:41:56Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1277", "merged": true, "mergeCommit": {"oid": "192137e7759a6aec6c4e17bf378ba6a535463dd5"}, "closed": true, "closedAt": "2020-05-26T20:55:34Z", "author": {"login": "jkwatson"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclIrNZgH2gAyNDIzMzg1MDcwOjQ4NmIyYjg4NTUxNzM2MDlkMDM1OTU0ZDgxMjg4M2I5ZDFjYTI4ZmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclLDxEgFqTQxODY3MTU1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "486b2b8855173609d035954d812883b9d1ca28ff", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/486b2b8855173609d035954d812883b9d1ca28ff", "committedDate": "2020-05-26T18:07:43Z", "message": "change Event to an interface with an impl to match"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf8ab863ee433c112bf3c2ab063d2710b43427fb", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/bf8ab863ee433c112bf3c2ab063d2710b43427fb", "committedDate": "2020-05-26T18:18:55Z", "message": "make TimedEvent implement the Event interface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cba5501c55b1929350db77e4303fda924e6a7b2", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1cba5501c55b1929350db77e4303fda924e6a7b2", "committedDate": "2020-05-26T18:30:36Z", "message": "don't make copies of already immutable event data"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NjI3MTQ2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1277#pullrequestreview-418627146", "createdAt": "2020-05-26T19:47:16Z", "commit": {"oid": "1cba5501c55b1929350db77e4303fda924e6a7b2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTo0NzoxNlrOGat0Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTo0NzoxNlrOGat0Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY2NjgzNQ==", "bodyText": "Instances of RawTimedEventWithEvent should be transformed into RawTimedEvent to avoid holding references to memory from the api.Event that we store.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1277#discussion_r430666835", "createdAt": "2020-05-26T19:47:16Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -505,13 +505,7 @@ int getTotalRecordedLinks() {\n     if (events.isEmpty()) {\n       return Collections.emptyList();\n     }\n-    List<Event> result = new ArrayList<>(events.size());\n-    for (io.opentelemetry.sdk.trace.TimedEvent sourceEvent : events) {\n-      result.add(\n-          Event.create(\n-              sourceEvent.getEpochNanos(), sourceEvent.getName(), sourceEvent.getAttributes()));\n-    }\n-    return Collections.unmodifiableList(result);\n+    return Collections.unmodifiableList(new ArrayList<Event>(events));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cba5501c55b1929350db77e4303fda924e6a7b2"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b606108499c2c9acce165029785d423d078aeae2", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b606108499c2c9acce165029785d423d078aeae2", "committedDate": "2020-05-26T20:03:21Z", "message": "copy the wrapped event, so as not to hold to user's data"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NjcxNTU5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1277#pullrequestreview-418671559", "createdAt": "2020-05-26T20:54:21Z", "commit": {"oid": "b606108499c2c9acce165029785d423d078aeae2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2790, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}