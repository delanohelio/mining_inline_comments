{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxMjE2MDQ2", "number": 1682, "title": "Make the getKey method on AttributeKey non-nullable", "bodyText": "This was done by tricking AutoValue with a separate field for the storage.\nresolves #1678", "createdAt": "2020-09-22T21:56:25Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1682", "merged": true, "mergeCommit": {"oid": "136d5b9b7fd3c0ed30e88bb43a31c73f389dcd84"}, "closed": true, "closedAt": "2020-09-23T04:30:24Z", "author": {"login": "jkwatson"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLfQcMgH2gAyNDkxMjE2MDQ2OjE0YzhlM2MxOGMyZGY3MTliNmU0MGUyNDMyNDA3MDIzMjc1M2ZmOWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLkSXtgFqTQ5NDAwODg4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "14c8e3c18c2df719b6e40e24324070232753ff9b", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/14c8e3c18c2df719b6e40e24324070232753ff9b", "committedDate": "2020-09-22T21:55:25Z", "message": "Make the getKey method non-nullable\nThis was done by tricking AutoValue with a separate field for the storage."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzOTQwNDk4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1682#pullrequestreview-493940498", "createdAt": "2020-09-23T00:57:28Z", "commit": {"oid": "14c8e3c18c2df719b6e40e24324070232753ff9b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMDo1NzoyOVrOHWRSPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMDo1NzoyOVrOHWRSPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzExMzkxNw==", "bodyText": "But can't key() return null?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1682#discussion_r493113917", "createdAt": "2020-09-23T00:57:29Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/common/AttributeKeyImpl.java", "diffHunk": "@@ -17,15 +17,24 @@\n package io.opentelemetry.common;\n \n import com.google.auto.value.AutoValue;\n+import javax.annotation.Nullable;\n \n @SuppressWarnings(\"rawtypes\")\n @AutoValue\n abstract class AttributeKeyImpl<T> implements AttributeKey<T> {\n \n   static <T> AttributeKeyImpl<T> create(String key, AttributeType type) {\n-    return new AutoValue_AttributeKeyImpl<>(key, type);\n+    return new AutoValue_AttributeKeyImpl<>(type, key);\n   }\n \n+  @Override\n+  public String getKey() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14c8e3c18c2df719b6e40e24324070232753ff9b"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0MDA4ODgw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1682#pullrequestreview-494008880", "createdAt": "2020-09-23T03:46:30Z", "commit": {"oid": "14c8e3c18c2df719b6e40e24324070232753ff9b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMzo0NjozMFrOHWVTCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMzo0NjozMFrOHWVTCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE3OTY1Nw==", "bodyText": "Got it - yeah that's a corner case I've ran into before too. I wasn't sure that was the intention but makes sense to me. If we ever add nullness checking (want to!) we'll need some \"nullness casts\" for these cases, just as a future food for thought.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1682#discussion_r493179657", "createdAt": "2020-09-23T03:46:30Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/common/AttributeKeyImpl.java", "diffHunk": "@@ -17,15 +17,24 @@\n package io.opentelemetry.common;\n \n import com.google.auto.value.AutoValue;\n+import javax.annotation.Nullable;\n \n @SuppressWarnings(\"rawtypes\")\n @AutoValue\n abstract class AttributeKeyImpl<T> implements AttributeKey<T> {\n \n   static <T> AttributeKeyImpl<T> create(String key, AttributeType type) {\n-    return new AutoValue_AttributeKeyImpl<>(key, type);\n+    return new AutoValue_AttributeKeyImpl<>(type, key);\n   }\n \n+  @Override\n+  public String getKey() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzExMzkxNw=="}, "originalCommit": {"oid": "14c8e3c18c2df719b6e40e24324070232753ff9b"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3473, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}