{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNzc4OTg0", "number": 1113, "title": "Add flush method to [Span|Metric] Exporters", "bodyText": "Resolves #1017", "createdAt": "2020-04-15T14:02:03Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1113", "merged": true, "mergeCommit": {"oid": "c723e675930ce24980096a2917bd4b55091c52b5"}, "closed": true, "closedAt": "2020-04-17T22:28:28Z", "author": {"login": "thisthat"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcX1ppgAH2gAyNDAzNzc4OTg0OjZmMTg3OTA1YmU3ZWQwNDRhZWJjYmYwMWVlOGQwNjkxZTk1YTY5MTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYieDoAFqTM5NTUyMjI3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6f187905be7ed044aebcbf01ee8d0691e95a6918", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/6f187905be7ed044aebcbf01ee8d0691e95a6918", "committedDate": "2020-04-15T10:36:48Z", "message": "Add flush to exporters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "793364fa562f7f8e843b94f7c65eca0b32563d47", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/793364fa562f7f8e843b94f7c65eca0b32563d47", "committedDate": "2020-04-15T14:01:03Z", "message": "Add javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "954bb24f75472f963ce1f400c58463d7f6702149", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/954bb24f75472f963ce1f400c58463d7f6702149", "committedDate": "2020-04-15T14:20:14Z", "message": "format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzODgwOTE4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1113#pullrequestreview-393880918", "createdAt": "2020-04-15T15:21:02Z", "commit": {"oid": "954bb24f75472f963ce1f400c58463d7f6702149"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNToyMTowMlrOGF-7pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNToyMTowMlrOGF-7pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkyNzE0Mw==", "bodyText": "you can use an AtomicBoolean for this, and it reads a little bit cleaner.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1113#discussion_r408927143", "createdAt": "2020-04-15T15:21:02Z", "author": {"login": "jkwatson"}, "path": "exporters/logging/src/test/java/io/opentelemetry/exporters/logging/LoggingMetricExporterTest.java", "diffHunk": "@@ -96,4 +114,19 @@ public void testExport() {\n                         ImmutableMap.of(\"1\", \"2\", \"3\", \"4\"),\n                         33.7767)))));\n   }\n+\n+  @Test\n+  public void testFlush() {\n+    final boolean[] flushed = {false};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "954bb24f75472f963ce1f400c58463d7f6702149"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzODgxNjg4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1113#pullrequestreview-393881688", "createdAt": "2020-04-15T15:21:53Z", "commit": {"oid": "954bb24f75472f963ce1f400c58463d7f6702149"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNToyMTo1M1rOGF--BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNToyMTo1M1rOGF--BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkyNzc0OA==", "bodyText": "I'd use the word \"export\" in here, rather than \"Process\"", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1113#discussion_r408927748", "createdAt": "2020-04-15T15:21:53Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/export/MetricExporter.java", "diffHunk": "@@ -52,6 +52,14 @@\n    */\n   ResultCode export(Collection<MetricData> metrics);\n \n+  /**\n+   * Processes the collection of {@link MetricData} that have not yet been processed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "954bb24f75472f963ce1f400c58463d7f6702149"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzODg0MDY3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1113#pullrequestreview-393884067", "createdAt": "2020-04-15T15:24:23Z", "commit": {"oid": "954bb24f75472f963ce1f400c58463d7f6702149"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNToyNDoyM1rOGF_FbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNToyNDoyM1rOGF_FbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkyOTY0NA==", "bodyText": "Same comment about using the word \"Export\", rather than \"Process\"", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1113#discussion_r408929644", "createdAt": "2020-04-15T15:24:23Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/export/SpanExporter.java", "diffHunk": "@@ -46,6 +46,14 @@\n    */\n   ResultCode export(Collection<SpanData> spans);\n \n+  /**\n+   * Processes the collection of sampled {@code Span}s that have not yet been processed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "954bb24f75472f963ce1f400c58463d7f6702149"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "053485b25e1193d27c29622fa96ca205b98e881e", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/053485b25e1193d27c29622fa96ca205b98e881e", "committedDate": "2020-04-16T05:42:07Z", "message": "Wording and tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0Njk4Njcw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1113#pullrequestreview-394698670", "createdAt": "2020-04-16T14:36:48Z", "commit": {"oid": "053485b25e1193d27c29622fa96ca205b98e881e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NzQzODU1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1113#pullrequestreview-394743855", "createdAt": "2020-04-16T15:22:19Z", "commit": {"oid": "053485b25e1193d27c29622fa96ca205b98e881e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNToyMjoxOVrOGGqp0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNToyMjoxOVrOGGqp0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY0MzQ3Mw==", "bodyText": "Should it continue trying to flush others?\nShould it log the exception?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1113#discussion_r409643473", "createdAt": "2020-04-16T15:22:19Z", "author": {"login": "Oberon00"}, "path": "exporters/logging/src/main/java/io/opentelemetry/exporters/logging/LoggingMetricExporter.java", "diffHunk": "@@ -34,6 +35,23 @@ public ResultCode export(Collection<MetricData> metrics) {\n     return ResultCode.SUCCESS;\n   }\n \n+  /**\n+   * Flushes the data.\n+   *\n+   * @return the result of the operation\n+   */\n+  @Override\n+  public ResultCode flush() {\n+    for (Handler handler : logger.getHandlers()) {\n+      try {\n+        handler.flush();\n+      } catch (Throwable t) {\n+        return ResultCode.FAILURE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "053485b25e1193d27c29622fa96ca205b98e881e"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NzQ0NjE2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1113#pullrequestreview-394744616", "createdAt": "2020-04-16T15:23:11Z", "commit": {"oid": "053485b25e1193d27c29622fa96ca205b98e881e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNToyMzoxMVrOGGqsLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNToyMzoxMVrOGGqsLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY0NDA3Nw==", "bodyText": "This should probably call flush.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1113#discussion_r409644077", "createdAt": "2020-04-16T15:23:11Z", "author": {"login": "Oberon00"}, "path": "exporters/logging/src/main/java/io/opentelemetry/exporters/logging/LoggingMetricExporter.java", "diffHunk": "@@ -34,6 +35,23 @@ public ResultCode export(Collection<MetricData> metrics) {\n     return ResultCode.SUCCESS;\n   }\n \n+  /**\n+   * Flushes the data.\n+   *\n+   * @return the result of the operation\n+   */\n+  @Override\n+  public ResultCode flush() {\n+    for (Handler handler : logger.getHandlers()) {\n+      try {\n+        handler.flush();\n+      } catch (Throwable t) {\n+        return ResultCode.FAILURE;\n+      }\n+    }\n+    return ResultCode.SUCCESS;\n+  }\n+\n   @Override\n   public void shutdown() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "053485b25e1193d27c29622fa96ca205b98e881e"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0OTgwNjM2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1113#pullrequestreview-394980636", "createdAt": "2020-04-16T20:37:23Z", "commit": {"oid": "053485b25e1193d27c29622fa96ca205b98e881e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b9e940a6f59d7895b1722dfa90ce2059a959226", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1b9e940a6f59d7895b1722dfa90ce2059a959226", "committedDate": "2020-04-17T13:40:59Z", "message": "Flush all handler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0410e09f25c686e238b53861db64f08d89bfb632", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0410e09f25c686e238b53861db64f08d89bfb632", "committedDate": "2020-04-17T13:52:37Z", "message": "formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NTIyMjc1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1113#pullrequestreview-395522275", "createdAt": "2020-04-17T14:49:52Z", "commit": {"oid": "0410e09f25c686e238b53861db64f08d89bfb632"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2966, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}