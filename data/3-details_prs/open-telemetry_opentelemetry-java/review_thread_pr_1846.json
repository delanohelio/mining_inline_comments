{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3NTUwNDE0", "number": 1846, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMzo0OToyMFrOEwQr2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMToxNjoxM1rOEwfWCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MDQwNDc0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributesV2.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMzo0OToyMFrOHltSnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMzo0OToyMFrOHltSnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMwMTQwNw==", "bodyText": "I think it should be relatively straightforward to generate this in gradle using e.g. https://docs.gradle.org/current/dsl/org.gradle.api.tasks.Exec.html. Then we would not have to check in this file.\nOn the minus side, we would then require contributors to have a recent Python 3 installed (actually Docker currently which makes it un-buildable on Windows \ud83e\udd14).\nIf we don't auto-generate the file, we should check during build that the file matches the generated output (does the tool support that for any generator currently or only markdown?)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1846#discussion_r509301407", "createdAt": "2020-10-21T13:49:20Z", "author": {"login": "Oberon00"}, "path": "api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributesV2.java", "diffHunk": "@@ -0,0 +1,1006 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.trace.attributes;\n+\n+import static io.opentelemetry.common.AttributeKey.booleanKey;\n+import static io.opentelemetry.common.AttributeKey.longKey;\n+import static io.opentelemetry.common.AttributeKey.stringKey;\n+\n+import io.opentelemetry.common.AttributeKey;\n+\n+// DO NOT EDIT, this is an Auto-generated file from /templates/SemanticAttributesV2.java.j2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b230108cc8405f6135f2bac508c2f9dbd1fe826"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MDQyNDk2OnYy", "diffSide": "RIGHT", "path": "semantic_convention/generate.sh", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMzo1MTo1OFrOHltfdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMzo1MTo1OFrOHltfdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMwNDY5Mw==", "bodyText": "We should pin this to a certain commit, or check out a release branch to have a latest 0.x version at least.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1846#discussion_r509304693", "createdAt": "2020-10-21T13:51:58Z", "author": {"login": "Oberon00"}, "path": "semantic_convention/generate.sh", "diffHunk": "@@ -0,0 +1,22 @@\n+#!/bin/bash\n+\n+DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n+\n+rm -rf opentelemetry-specification || true\n+git clone https://github.com/open-telemetry/opentelemetry-specification.git --depth 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b230108cc8405f6135f2bac508c2f9dbd1fe826"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MjgwNjQ5OnYy", "diffSide": "RIGHT", "path": "semantic_convention/templates/SemanticAttributesV2.java.j2", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMToxNjoxM1rOHmF5aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNzo0MzoyN1rOHmUrEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcwNDU1NQ==", "bodyText": "double?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1846#discussion_r509704555", "createdAt": "2020-10-21T21:16:13Z", "author": {"login": "Oberon00"}, "path": "semantic_convention/templates/SemanticAttributesV2.java.j2", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+\n+{%- macro to_java_type(type) -%}\n+  {%- if type == \"string\" -%}\n+    String\n+  {%- elif type == \"boolean\" -%}\n+    boolean\n+  {%- elif type == \"number\" -%}\n+    long", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b230108cc8405f6135f2bac508c2f9dbd1fe826"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk0NjY0MA==", "bodyText": "Please see open-telemetry/build-tools#13", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1846#discussion_r509946640", "createdAt": "2020-10-22T07:43:27Z", "author": {"login": "thisthat"}, "path": "semantic_convention/templates/SemanticAttributesV2.java.j2", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+\n+{%- macro to_java_type(type) -%}\n+  {%- if type == \"string\" -%}\n+    String\n+  {%- elif type == \"boolean\" -%}\n+    boolean\n+  {%- elif type == \"number\" -%}\n+    long", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcwNDU1NQ=="}, "originalCommit": {"oid": "8b230108cc8405f6135f2bac508c2f9dbd1fe826"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1982, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}