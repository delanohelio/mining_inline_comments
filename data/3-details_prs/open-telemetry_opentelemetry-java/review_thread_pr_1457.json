{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1OTk5NDk4", "number": 1457, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNjoxNDozOFrOERtUnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNjoxNjo0MVrOERtWBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDAzODA3OnYy", "diffSide": "RIGHT", "path": "extensions/trace_propagators/src/main/java/io/opentelemetry/extensions/trace/propagation/B3PropagatorExtractor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNjoxNDozOFrOG2kMpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNjoxNzowOVrOG2kPGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2OTM1MA==", "bodyText": "I am somewhat concerned about creating one extra object every time we want to check if traceId or spanId are valid", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1457#discussion_r459869350", "createdAt": "2020-07-24T06:14:38Z", "author": {"login": "iNikem"}, "path": "extensions/trace_propagators/src/main/java/io/opentelemetry/extensions/trace/propagation/B3PropagatorExtractor.java", "diffHunk": "@@ -63,12 +65,25 @@ static SpanContext buildSpanContext(String traceId, String spanId, String sample\n       }\n     }\n \n+    private static boolean isHex(String value) {\n+      try {\n+        new BigInteger(value, 16);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63f52d6a4f62b07e561c07e935a12d425858929a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2OTk3Nw==", "bodyText": "Agree, looping through and checking the character range shouldn't be too much more complex.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1457#discussion_r459869977", "createdAt": "2020-07-24T06:17:09Z", "author": {"login": "anuraaga"}, "path": "extensions/trace_propagators/src/main/java/io/opentelemetry/extensions/trace/propagation/B3PropagatorExtractor.java", "diffHunk": "@@ -63,12 +65,25 @@ static SpanContext buildSpanContext(String traceId, String spanId, String sample\n       }\n     }\n \n+    private static boolean isHex(String value) {\n+      try {\n+        new BigInteger(value, 16);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2OTM1MA=="}, "originalCommit": {"oid": "63f52d6a4f62b07e561c07e935a12d425858929a"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDA0MTY0OnYy", "diffSide": "RIGHT", "path": "extensions/trace_propagators/src/main/java/io/opentelemetry/extensions/trace/propagation/B3PropagatorExtractor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNjoxNjo0MVrOG2kOqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNjoxNjo0MVrOG2kOqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2OTg2Ng==", "bodyText": "Let's check length before hex since it's a simpler check", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1457#discussion_r459869866", "createdAt": "2020-07-24T06:16:41Z", "author": {"login": "anuraaga"}, "path": "extensions/trace_propagators/src/main/java/io/opentelemetry/extensions/trace/propagation/B3PropagatorExtractor.java", "diffHunk": "@@ -63,12 +65,25 @@ static SpanContext buildSpanContext(String traceId, String spanId, String sample\n       }\n     }\n \n+    private static boolean isHex(String value) {\n+      try {\n+        new BigInteger(value, 16);\n+        return true;\n+      } catch (NumberFormatException e) {\n+        return false;\n+      }\n+    }\n+\n     static boolean isTraceIdValid(String value) {\n-      return !(StringUtils.isNullOrEmpty(value) || value.length() > MAX_TRACE_ID_LENGTH);\n+      return !(StringUtils.isNullOrEmpty(value)\n+          || !isHex(value)\n+          || (value.length() != MIN_TRACE_ID_LENGTH && value.length() != MAX_TRACE_ID_LENGTH));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63f52d6a4f62b07e561c07e935a12d425858929a"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1530, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}