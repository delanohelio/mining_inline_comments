{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0MTMwMjg0", "number": 2221, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNTo1NToxOFrOFCbftA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNTo1NToxOFrOFCbftA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MDkxOTU2OnYy", "diffSide": "RIGHT", "path": "sdk/all/src/main/java/io/opentelemetry/sdk/OpenTelemetrySdk.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNTo1NToxOFrOIBlOqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNTo1NToxOFrOIBlOqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUyOTQ0OA==", "bodyText": "This is not an interface.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2221#discussion_r538529448", "createdAt": "2020-12-08T15:55:18Z", "author": {"login": "bogdandrutu"}, "path": "sdk/all/src/main/java/io/opentelemetry/sdk/OpenTelemetrySdk.java", "diffHunk": "@@ -271,14 +271,15 @@ private MeterProvider buildMeterProvider() {\n   }\n \n   /**\n-   * A {@link TracerProvider} wrapper that forces users to access the SDK specific implementation\n-   * via the SDK, instead of via the API and casting it to the SDK specific implementation.\n+   * This interface allows the SDK to unobfuscate an obfuscated static global provider.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24b5ef03f17183f2e10a206e5d7b5736f897c2a7"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1849, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}