{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MzE4MjQ4", "number": 1741, "title": "Remove Status object from API, keep StatusCanonicalCode", "bodyText": "Signed-off-by: Bogdan Drutu bogdandrutu@gmail.com", "createdAt": "2020-10-03T18:24:14Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1741", "merged": true, "mergeCommit": {"oid": "eb4a18febcfa508b1cc8ae60156160dbccadc0d8"}, "closed": true, "closedAt": "2020-10-05T02:33:41Z", "author": {"login": "bogdandrutu"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPCsfHAFqTUwMTU3ODgyMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPabbBgFqTUwMTY5MjkyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTc4ODIy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1741#pullrequestreview-501578822", "createdAt": "2020-10-03T22:54:29Z", "commit": {"oid": "84894bc416f2c7b42cad7ecd1fd7ba24eff12777"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMjo1NDozMFrOHcECYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMjo1NDozMFrOHcECYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4ODMyMg==", "bodyText": "this could just delegate to createInternal, so we don't have to keep two autovalue constructor calls in synch.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1741#discussion_r499188322", "createdAt": "2020-10-03T22:54:30Z", "author": {"login": "jkwatson"}, "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/data/ImmutableStatus.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.sdk.trace.data;\n+\n+import com.google.auto.value.AutoValue;\n+import io.opentelemetry.trace.Span;\n+import io.opentelemetry.trace.StatusCanonicalCode;\n+import java.util.Objects;\n+import javax.annotation.Nullable;\n+import javax.annotation.concurrent.Immutable;\n+\n+/**\n+ * Defines the status of a {@link Span} by providing a standard {@link StatusCanonicalCode} in\n+ * conjunction with an optional descriptive message. Instances of {@code Status} are created by\n+ * starting with the template for the appropriate {@link StatusCanonicalCode} and supplementing it\n+ * with additional information: {@code Status.NOT_FOUND.withDescription(\"Could not find\n+ * 'important_file.txt'\");}\n+ */\n+@AutoValue\n+@Immutable\n+public abstract class ImmutableStatus implements SpanData.Status {\n+  /**\n+   * The operation has been validated by an Application developers or Operator to have completed\n+   * successfully.\n+   */\n+  public static final ImmutableStatus OK = createInternal(StatusCanonicalCode.OK, null);\n+\n+  /** The default status. */\n+  public static final ImmutableStatus UNSET = createInternal(StatusCanonicalCode.UNSET, null);\n+\n+  /** The operation contains an error. */\n+  public static final ImmutableStatus ERROR = createInternal(StatusCanonicalCode.ERROR, null);\n+\n+  /**\n+   * Creates a derived instance of {@code Status} with the given description.\n+   *\n+   * @param description the new description of the {@code Status}.\n+   * @return The newly created {@code Status} with the given description.\n+   * @since 0.1.0\n+   */\n+  public static SpanData.Status create(\n+      StatusCanonicalCode canonicalCode, @Nullable String description) {\n+    return new AutoValue_ImmutableStatus(canonicalCode, description);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84894bc416f2c7b42cad7ecd1fd7ba24eff12777"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTg3NTQw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1741#pullrequestreview-501587540", "createdAt": "2020-10-04T03:15:44Z", "commit": {"oid": "84894bc416f2c7b42cad7ecd1fd7ba24eff12777"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQwMzoxNTo0NFrOHcE0bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQwMzoxOToyOFrOHcE1Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIwMTEzNQ==", "bodyText": "The spec doesn't seem to define numeric values for the codes, do we need these?\nhttps://www.github.com/open-telemetry/opentelemetry-specification/tree/master/specification%2Ftrace%2Fapi.md", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1741#discussion_r499201135", "createdAt": "2020-10-04T03:15:44Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/trace/StatusCanonicalCode.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.trace;\n+\n+/**\n+ * The set of canonical status codes. If new codes are added over time they must choose a numerical\n+ * value that does not collide with any previously used value.\n+ *\n+ * @since 0.1.0\n+ */\n+public enum StatusCanonicalCode {\n+\n+  /**\n+   * The operation has been validated by an Application developers or Operator to have completed\n+   * successfully.\n+   */\n+  OK(0),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84894bc416f2c7b42cad7ecd1fd7ba24eff12777"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIwMTE2NQ==", "bodyText": "I would use two methods instead of requiring null when no description, similar to how we handle exception / link attributes.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1741#discussion_r499201165", "createdAt": "2020-10-04T03:16:37Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/trace/DefaultSpan.java", "diffHunk": "@@ -77,7 +78,7 @@ public void addEvent(String name, Attributes attributes) {}\n   public void addEvent(String name, Attributes attributes, long timestamp) {}\n \n   @Override\n-  public void setStatus(Status status) {}\n+  public void setStatus(StatusCanonicalCode canonicalCode, @Nullable String description) {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84894bc416f2c7b42cad7ecd1fd7ba24eff12777"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIwMTMwNw==", "bodyText": "Since we are on Java 8 now we shouldn't have to expose this class. Can you add ok(), etc static methods on the interface which return the values here that can be made package private?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1741#discussion_r499201307", "createdAt": "2020-10-04T03:19:28Z", "author": {"login": "anuraaga"}, "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/data/ImmutableStatus.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.sdk.trace.data;\n+\n+import com.google.auto.value.AutoValue;\n+import io.opentelemetry.trace.Span;\n+import io.opentelemetry.trace.StatusCanonicalCode;\n+import java.util.Objects;\n+import javax.annotation.Nullable;\n+import javax.annotation.concurrent.Immutable;\n+\n+/**\n+ * Defines the status of a {@link Span} by providing a standard {@link StatusCanonicalCode} in\n+ * conjunction with an optional descriptive message. Instances of {@code Status} are created by\n+ * starting with the template for the appropriate {@link StatusCanonicalCode} and supplementing it\n+ * with additional information: {@code Status.NOT_FOUND.withDescription(\"Could not find\n+ * 'important_file.txt'\");}\n+ */\n+@AutoValue\n+@Immutable\n+public abstract class ImmutableStatus implements SpanData.Status {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84894bc416f2c7b42cad7ecd1fd7ba24eff12777"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjM2NzMy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1741#pullrequestreview-501636732", "createdAt": "2020-10-04T16:04:34Z", "commit": {"oid": "59a846292e467ca6d4767bcc4d2b33fc0746f174"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b78a670bf863dc9583ba494cef5ea2d83ec18bf", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0b78a670bf863dc9583ba494cef5ea2d83ec18bf", "committedDate": "2020-10-04T17:03:02Z", "message": "Remove Status object from API, keep StatusCanonicalCode\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce2294b47669d0856c1819f9b2bc9f4108b8656e", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ce2294b47669d0856c1819f9b2bc9f4108b8656e", "committedDate": "2020-10-04T17:03:04Z", "message": "Respond to comments, change more old usages\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67d7e1a38f75e6d56adb623cf2964c5f001ccd7c", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/67d7e1a38f75e6d56adb623cf2964c5f001ccd7c", "committedDate": "2020-10-04T17:03:04Z", "message": "Fix build, run gojf\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "59a846292e467ca6d4767bcc4d2b33fc0746f174", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/59a846292e467ca6d4767bcc4d2b33fc0746f174", "committedDate": "2020-10-04T15:00:18Z", "message": "Fix build, run gojf\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}, "afterCommit": {"oid": "67d7e1a38f75e6d56adb623cf2964c5f001ccd7c", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/67d7e1a38f75e6d56adb623cf2964c5f001ccd7c", "committedDate": "2020-10-04T17:03:04Z", "message": "Fix build, run gojf\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjkyOTI1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1741#pullrequestreview-501692925", "createdAt": "2020-10-05T02:33:35Z", "commit": {"oid": "67d7e1a38f75e6d56adb623cf2964c5f001ccd7c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3553, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}