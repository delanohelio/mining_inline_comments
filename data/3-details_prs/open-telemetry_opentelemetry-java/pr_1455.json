{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1OTIwNjA0", "number": 1455, "title": "Added preliminary documentation for the zPages contrib module", "bodyText": "The README.md file contains instructions on how to setup and start running the zPages module. This is entirely preliminary, as I don't think our module has been released yet.\nThe DESIGN.md file is a rehash of @wtyanan and my design docs, as requested in Issue #1397 and in this comment. It's specific to the /tracez and /traceconfigz zPages.", "createdAt": "2020-07-23T19:54:32Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1455", "merged": true, "mergeCommit": {"oid": "09c8c9ed943fd0f58c688a250e2cd18aecf155f1"}, "closed": true, "closedAt": "2020-07-29T19:19:16Z", "author": {"login": "williamhu99"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc19SBrAH2gAyNDU1OTIwNjA0OmVjMzFlM2U5Y2IwMjEyYzc1MTMzMzMxMjkwMjQ2YjI1OGY0NDViMTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5J3ypgFqTQ1NjE4Nzc2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ec31e3e9cb0212c75133331290246b258f445b13", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ec31e3e9cb0212c75133331290246b258f445b13", "committedDate": "2020-07-18T00:27:58Z", "message": "Removed URLEncoder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0fe0ede7bbd0e660feab6b0eac647f972224a12", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e0fe0ede7bbd0e660feab6b0eac647f972224a12", "committedDate": "2020-07-18T00:44:15Z", "message": "Fixed typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf7f5c8f7890ffb19aabcd675ca4bcc7f4a5739a", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/cf7f5c8f7890ffb19aabcd675ca4bcc7f4a5739a", "committedDate": "2020-07-20T21:20:21Z", "message": "Added URLDecoding"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9db8e7e6edd7b8188fe3b4deda6b091cf2f92a66", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9db8e7e6edd7b8188fe3b4deda6b091cf2f92a66", "committedDate": "2020-07-20T21:29:32Z", "message": "Included comment for string replacement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "412797843fe71d406538cd0173d414afd3872019", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/412797843fe71d406538cd0173d414afd3872019", "committedDate": "2020-07-20T23:50:41Z", "message": "Added unit tests for special characters in span names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e17c337050a0c57947eea07b53c36393805fc3e3", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e17c337050a0c57947eea07b53c36393805fc3e3", "committedDate": "2020-07-21T20:34:47Z", "message": "Resolved URL decoding issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb58b26018ed710133ff0493894b58d70b977640", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/bb58b26018ed710133ff0493894b58d70b977640", "committedDate": "2020-07-21T22:08:18Z", "message": "Moved url decoding to parseQueryMap and updated the corresponding unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80a5ccf2b19dbdb2cd3fad4a968962318131883f", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/80a5ccf2b19dbdb2cd3fad4a968962318131883f", "committedDate": "2020-07-22T20:39:04Z", "message": "Added a README file for zPage quickstart"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcbd9aa23db84e85639a17f02f25d2e54d5b5f4b", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/dcbd9aa23db84e85639a17f02f25d2e54d5b5f4b", "committedDate": "2020-07-22T20:42:13Z", "message": "Add images for README"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24ffce2bb7b6a24ba3ad8e86e476710be7ccd76a", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/24ffce2bb7b6a24ba3ad8e86e476710be7ccd76a", "committedDate": "2020-07-22T21:02:18Z", "message": "Updated README"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5047849b2843b486649d3a286cc36ab627f76901", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/5047849b2843b486649d3a286cc36ab627f76901", "committedDate": "2020-07-22T21:52:04Z", "message": "Add frontend images"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85a539ed8b5539985017b3a96e9539dd11f70aa1", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/85a539ed8b5539985017b3a96e9539dd11f70aa1", "committedDate": "2020-07-22T22:05:05Z", "message": "Add backend images"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4156123799670059e9ea44cb1a0174b8a65c9aed", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/4156123799670059e9ea44cb1a0174b8a65c9aed", "committedDate": "2020-07-22T23:32:06Z", "message": "Added our design doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "265cf27c704f368c0b28c04c555568f1be926e9a", "author": {"user": {"login": "wtyanan", "name": "Terry (Tianyu) Wang"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/265cf27c704f368c0b28c04c555568f1be926e9a", "committedDate": "2020-07-23T17:19:22Z", "message": "Added details on package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c102e45b016ccb12458c3f657fe8cf64c0cc5d2a", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c102e45b016ccb12458c3f657fe8cf64c0cc5d2a", "committedDate": "2020-07-23T19:17:16Z", "message": "Reworded a few lines"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e977dcf1146700915bbe6d1a2d095aaa79ed131f", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e977dcf1146700915bbe6d1a2d095aaa79ed131f", "committedDate": "2020-07-23T19:26:44Z", "message": "Merge branch 'master' of https://github.com/open-telemetry/opentelemetry-java into master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NjYwNjIz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1455#pullrequestreview-454660623", "createdAt": "2020-07-24T06:36:32Z", "commit": {"oid": "e977dcf1146700915bbe6d1a2d095aaa79ed131f"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNjozNjozM1rOG2kjfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNjozOToyOVrOG2knWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg3NTE5Nw==", "bodyText": "There is a proposal for a docs folder here\n#1397 (comment)\nI think for historical reference docs like design docs it could be nice to separate it away from the code. What do you think about moving it there?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1455#discussion_r459875197", "createdAt": "2020-07-24T06:36:33Z", "author": {"login": "anuraaga"}, "path": "sdk_extensions/zpages/DESIGN.md", "diffHunk": "@@ -0,0 +1,175 @@\n+# OpenTelemetry SDK Contrib - /tracez and /traceconfigz Design Doc", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e977dcf1146700915bbe6d1a2d095aaa79ed131f"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg3NTQzMw==", "bodyText": "Let's stick with implementation for all of them", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1455#discussion_r459875433", "createdAt": "2020-07-24T06:37:27Z", "author": {"login": "anuraaga"}, "path": "sdk_extensions/zpages/README.md", "diffHunk": "@@ -2,8 +2,100 @@\n \n [![Javadocs][javadoc-image]][javadoc-url]\n \n-This module contains code for OpenTelemetry's Java zPages.\n+This module contains code for OpenTelemetry's Java zPages, which are a collection of dynamic HTML\n+web pages that display stats and trace data.\n+\n+* Java 7 compatible.\n \n <!--- TODO: Update javadoc -->\n [javadoc-image]: https://www.javadoc.io/badge/io.opentelemetry/opentelemetry-sdk-contrib-auto-config.svg\n [javadoc-url]: https://www.javadoc.io/doc/io.opentelemetry/opentelemetry-sdk-contrib-auto-config\n+\n+## Quickstart\n+\n+### Add the dependencies to your project\n+\n+For Maven, add the following to your `pom.xml`:\n+```xml\n+<dependencies>\n+  <dependency>\n+        <groupId>io.opentelemetry</groupId>\n+        <artifactId>opentelemetry-api</artifactId>\n+        <version>0.7.0</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>io.opentelemetry</groupId>\n+        <artifactId>opentelemetry-sdk</artifactId>\n+        <version>0.7.0</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>io.opentelemetry</groupId>\n+        <artifactId>opentelemetry-sdk-extension-zpages</artifactId>\n+        <version>0.7.0</version>\n+      </dependency>\n+</dependencies>\n+```\n+\n+<!--- TODO: Verify gradle configuration -->\n+For Gradle, add the following to your dependencies:\n+```groovy\n+api 'io.opentelemetry:opentelemetry-api:0.7.0'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e977dcf1146700915bbe6d1a2d095aaa79ed131f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg3NjE4Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            **Note:** The package `com.sun.net.httpserver` is required to use zPages. Please make sure your\n          \n          \n            \n            **Note:** The package `com.sun.net.httpserver` is required to use the default zPages setup. Please make sure your\n          \n      \n    \n    \n  \n\nIt's technically not required if users mount the pages to their own server, which hopefully will be fairly common.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1455#discussion_r459876186", "createdAt": "2020-07-24T06:39:29Z", "author": {"login": "anuraaga"}, "path": "sdk_extensions/zpages/README.md", "diffHunk": "@@ -2,8 +2,100 @@\n \n [![Javadocs][javadoc-image]][javadoc-url]\n \n-This module contains code for OpenTelemetry's Java zPages.\n+This module contains code for OpenTelemetry's Java zPages, which are a collection of dynamic HTML\n+web pages that display stats and trace data.\n+\n+* Java 7 compatible.\n \n <!--- TODO: Update javadoc -->\n [javadoc-image]: https://www.javadoc.io/badge/io.opentelemetry/opentelemetry-sdk-contrib-auto-config.svg\n [javadoc-url]: https://www.javadoc.io/doc/io.opentelemetry/opentelemetry-sdk-contrib-auto-config\n+\n+## Quickstart\n+\n+### Add the dependencies to your project\n+\n+For Maven, add the following to your `pom.xml`:\n+```xml\n+<dependencies>\n+  <dependency>\n+        <groupId>io.opentelemetry</groupId>\n+        <artifactId>opentelemetry-api</artifactId>\n+        <version>0.7.0</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>io.opentelemetry</groupId>\n+        <artifactId>opentelemetry-sdk</artifactId>\n+        <version>0.7.0</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>io.opentelemetry</groupId>\n+        <artifactId>opentelemetry-sdk-extension-zpages</artifactId>\n+        <version>0.7.0</version>\n+      </dependency>\n+</dependencies>\n+```\n+\n+<!--- TODO: Verify gradle configuration -->\n+For Gradle, add the following to your dependencies:\n+```groovy\n+api 'io.opentelemetry:opentelemetry-api:0.7.0'\n+api 'io.opentelemetry:opentelemetry-sdk:0.7.0'\n+implementation 'io.opentelemetry:opentelemetry-sdk-extension-zpages:0.7.0'\n+```\n+\n+### Register the zPages\n+\n+**Note:** The package `com.sun.net.httpserver` is required to use zPages. Please make sure your", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e977dcf1146700915bbe6d1a2d095aaa79ed131f"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed8ef33353ece317374cb46b29209c030781460c", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ed8ef33353ece317374cb46b29209c030781460c", "committedDate": "2020-07-24T17:09:38Z", "message": "Moved DESIGN.md to a docs folder and changed gradle config to implementation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjUyMDI4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1455#pullrequestreview-455252028", "createdAt": "2020-07-25T01:58:36Z", "commit": {"oid": "ed8ef33353ece317374cb46b29209c030781460c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwMTo1ODozNlrOG3Bj0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwMTo1OToyOFrOG3BkNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDQxNw==", "bodyText": "Yeah I think if we separate initialization of span processors to a separate class, the hard dependency on sun server can be avoided. But that can be a follow-up for after this PR.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1455#discussion_r460350417", "createdAt": "2020-07-25T01:58:36Z", "author": {"login": "anuraaga"}, "path": "sdk_extensions/zpages/README.md", "diffHunk": "@@ -2,8 +2,100 @@\n \n [![Javadocs][javadoc-image]][javadoc-url]\n \n-This module contains code for OpenTelemetry's Java zPages.\n+This module contains code for OpenTelemetry's Java zPages, which are a collection of dynamic HTML\n+web pages that display stats and trace data.\n+\n+* Java 7 compatible.\n \n <!--- TODO: Update javadoc -->\n [javadoc-image]: https://www.javadoc.io/badge/io.opentelemetry/opentelemetry-sdk-contrib-auto-config.svg\n [javadoc-url]: https://www.javadoc.io/doc/io.opentelemetry/opentelemetry-sdk-contrib-auto-config\n+\n+## Quickstart\n+\n+### Add the dependencies to your project\n+\n+For Maven, add the following to your `pom.xml`:\n+```xml\n+<dependencies>\n+  <dependency>\n+        <groupId>io.opentelemetry</groupId>\n+        <artifactId>opentelemetry-api</artifactId>\n+        <version>0.7.0</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>io.opentelemetry</groupId>\n+        <artifactId>opentelemetry-sdk</artifactId>\n+        <version>0.7.0</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>io.opentelemetry</groupId>\n+        <artifactId>opentelemetry-sdk-extension-zpages</artifactId>\n+        <version>0.7.0</version>\n+      </dependency>\n+</dependencies>\n+```\n+\n+<!--- TODO: Verify gradle configuration -->\n+For Gradle, add the following to your dependencies:\n+```groovy\n+api 'io.opentelemetry:opentelemetry-api:0.7.0'\n+api 'io.opentelemetry:opentelemetry-sdk:0.7.0'\n+implementation 'io.opentelemetry:opentelemetry-sdk-extension-zpages:0.7.0'\n+```\n+\n+### Register the zPages\n+\n+**Note:** The package `com.sun.net.httpserver` is required to use zPages. Please make sure your", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg3NjE4Ng=="}, "originalCommit": {"oid": "e977dcf1146700915bbe6d1a2d095aaa79ed131f"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDUxOQ==", "bodyText": "Make a folder for zpages and put this and all the images inside it.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1455#discussion_r460350519", "createdAt": "2020-07-25T01:59:28Z", "author": {"login": "anuraaga"}, "path": "docs/TRACEZ_DESIGN.md", "diffHunk": "@@ -0,0 +1,175 @@\n+# OpenTelemetry SDK Contrib - /tracez and /traceconfigz Design Doc", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed8ef33353ece317374cb46b29209c030781460c"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NzA4NDAx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1455#pullrequestreview-455708401", "createdAt": "2020-07-27T11:48:29Z", "commit": {"oid": "ed8ef33353ece317374cb46b29209c030781460c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f595909769797804702ce7ccca807df9b177e197", "author": {"user": {"login": "wtyanan", "name": "Terry (Tianyu) Wang"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/f595909769797804702ce7ccca807df9b177e197", "committedDate": "2020-07-27T14:34:34Z", "message": "Changed wording regarding HttpServer requirement"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1ODMxMDQy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1455#pullrequestreview-455831042", "createdAt": "2020-07-27T14:23:27Z", "commit": {"oid": "ed8ef33353ece317374cb46b29209c030781460c"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNDoyMzoyN1rOG3kymw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNDozODo1NFrOG3lhHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkyNzY0Mw==", "bodyText": "Suggested edit:\nThe OpenTelemetry zPages are a set of dynamically generated HTML pages that display trace and\nmetrics data for a running process: the /tracez zPage displays\ntrace information about running spans, sample span latencies, and sample error spans, while the /traceconfigz zPage is a web page that allows the users to change tracing parameters, such\nas sampling probability and max number of attributes.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1455#discussion_r460927643", "createdAt": "2020-07-27T14:23:27Z", "author": {"login": "v-y-l"}, "path": "docs/TRACEZ_DESIGN.md", "diffHunk": "@@ -0,0 +1,175 @@\n+# OpenTelemetry SDK Contrib - /tracez and /traceconfigz Design Doc\n+\n+This file contains information about the design choices for the OpenTelemetry /tracez and\n+/traceconfigz zPages.\n+\n+## Introduction\n+\n+The OpenTelemetry zPages are a set of dynamically generated HTML pages that display trace and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed8ef33353ece317374cb46b29209c030781460c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkyODQ5Mw==", "bodyText": "This link seems to be broken.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1455#discussion_r460928493", "createdAt": "2020-07-27T14:24:32Z", "author": {"login": "v-y-l"}, "path": "docs/TRACEZ_DESIGN.md", "diffHunk": "@@ -0,0 +1,175 @@\n+# OpenTelemetry SDK Contrib - /tracez and /traceconfigz Design Doc\n+\n+This file contains information about the design choices for the OpenTelemetry /tracez and\n+/traceconfigz zPages.\n+\n+## Introduction\n+\n+The OpenTelemetry zPages are a set of dynamically generated HTML pages that display trace and\n+metrics data for a running process. Within this set, the /tracez zPage is a web page that displays\n+trace information about running spans, sample span latencies, and sample error spans. On the other\n+hand, the /traceconfigz zPage is a web page that allows the users to change tracing parameters, such\n+as sampling probability and max number of attributes.\n+\n+### /tracez zPage\n+\n+The /tracez zPage displays information on running spans, sample span latencies, and sample error\n+spans. The data is aggregated into a summary-level table:\n+\n+![tracez-table](img/tracez-table.png)\n+\n+In addition, you can click on each of the counts in the table cells to access the corresponding span\n+details. For example, here are the details of the `ChildSpan` latency sample (row 1, col 4):\n+\n+![tracez-details](img/tracez-details.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed8ef33353ece317374cb46b29209c030781460c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkzMDA5OA==", "bodyText": "Nit: Leave out in addition", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1455#discussion_r460930098", "createdAt": "2020-07-27T14:26:35Z", "author": {"login": "v-y-l"}, "path": "docs/TRACEZ_DESIGN.md", "diffHunk": "@@ -0,0 +1,175 @@\n+# OpenTelemetry SDK Contrib - /tracez and /traceconfigz Design Doc\n+\n+This file contains information about the design choices for the OpenTelemetry /tracez and\n+/traceconfigz zPages.\n+\n+## Introduction\n+\n+The OpenTelemetry zPages are a set of dynamically generated HTML pages that display trace and\n+metrics data for a running process. Within this set, the /tracez zPage is a web page that displays\n+trace information about running spans, sample span latencies, and sample error spans. On the other\n+hand, the /traceconfigz zPage is a web page that allows the users to change tracing parameters, such\n+as sampling probability and max number of attributes.\n+\n+### /tracez zPage\n+\n+The /tracez zPage displays information on running spans, sample span latencies, and sample error\n+spans. The data is aggregated into a summary-level table:\n+\n+![tracez-table](img/tracez-table.png)\n+\n+In addition, you can click on each of the counts in the table cells to access the corresponding span", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed8ef33353ece317374cb46b29209c030781460c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkzMTUwOA==", "bodyText": "Would this serve as the README.md page or is this something else? My personal take here is to keep this doc scoped to just a how-to guide and maybe a brief description of the different classes and what they do.\nSince we are publishing an entry to Google's Open Source blog, I think a deep explanation of design decisions would be more appropriate there. We could even link to the blog entry from here once it's published.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1455#discussion_r460931508", "createdAt": "2020-07-27T14:28:18Z", "author": {"login": "v-y-l"}, "path": "docs/TRACEZ_DESIGN.md", "diffHunk": "@@ -0,0 +1,175 @@\n+# OpenTelemetry SDK Contrib - /tracez and /traceconfigz Design Doc\n+\n+This file contains information about the design choices for the OpenTelemetry /tracez and\n+/traceconfigz zPages.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed8ef33353ece317374cb46b29209c030781460c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkzNDA2OA==", "bodyText": "I think we can shrink this to a single sentence: We want to create a tool that lets users troubleshoot OpenTelemetry instrumentation that can also be used as a lightweight application performance monitoring tool.\nThe other stuff seems like it could become outdated. \"In addition, the implementation of the Java zPages can pave the way for future implementations in other languages, such as Python, which have yet to be built.\"", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1455#discussion_r460934068", "createdAt": "2020-07-27T14:31:37Z", "author": {"login": "v-y-l"}, "path": "docs/TRACEZ_DESIGN.md", "diffHunk": "@@ -0,0 +1,175 @@\n+# OpenTelemetry SDK Contrib - /tracez and /traceconfigz Design Doc\n+\n+This file contains information about the design choices for the OpenTelemetry /tracez and\n+/traceconfigz zPages.\n+\n+## Introduction\n+\n+The OpenTelemetry zPages are a set of dynamically generated HTML pages that display trace and\n+metrics data for a running process. Within this set, the /tracez zPage is a web page that displays\n+trace information about running spans, sample span latencies, and sample error spans. On the other\n+hand, the /traceconfigz zPage is a web page that allows the users to change tracing parameters, such\n+as sampling probability and max number of attributes.\n+\n+### /tracez zPage\n+\n+The /tracez zPage displays information on running spans, sample span latencies, and sample error\n+spans. The data is aggregated into a summary-level table:\n+\n+![tracez-table](img/tracez-table.png)\n+\n+In addition, you can click on each of the counts in the table cells to access the corresponding span\n+details. For example, here are the details of the `ChildSpan` latency sample (row 1, col 4):\n+\n+![tracez-details](img/tracez-details.png)\n+\n+### /traceconfigz zPage\n+\n+The /traceconfigz zPage displays information about the currently active tracing configuration and \n+provides an interface for users to modify relevant parameters:\n+\n+![traceconfigz](img/traceconfigz.png)\n+\n+## Motivation\n+\n+At the moment, there are no zPages for the Java implementation of OpenTelemetry. The goal of this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed8ef33353ece317374cb46b29209c030781460c"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkzODI1Mw==", "bodyText": "Not sure if this qualifier is necessary. I think the frontend + backend section are self-explanatory.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1455#discussion_r460938253", "createdAt": "2020-07-27T14:37:10Z", "author": {"login": "v-y-l"}, "path": "docs/TRACEZ_DESIGN.md", "diffHunk": "@@ -0,0 +1,175 @@\n+# OpenTelemetry SDK Contrib - /tracez and /traceconfigz Design Doc\n+\n+This file contains information about the design choices for the OpenTelemetry /tracez and\n+/traceconfigz zPages.\n+\n+## Introduction\n+\n+The OpenTelemetry zPages are a set of dynamically generated HTML pages that display trace and\n+metrics data for a running process. Within this set, the /tracez zPage is a web page that displays\n+trace information about running spans, sample span latencies, and sample error spans. On the other\n+hand, the /traceconfigz zPage is a web page that allows the users to change tracing parameters, such\n+as sampling probability and max number of attributes.\n+\n+### /tracez zPage\n+\n+The /tracez zPage displays information on running spans, sample span latencies, and sample error\n+spans. The data is aggregated into a summary-level table:\n+\n+![tracez-table](img/tracez-table.png)\n+\n+In addition, you can click on each of the counts in the table cells to access the corresponding span\n+details. For example, here are the details of the `ChildSpan` latency sample (row 1, col 4):\n+\n+![tracez-details](img/tracez-details.png)\n+\n+### /traceconfigz zPage\n+\n+The /traceconfigz zPage displays information about the currently active tracing configuration and \n+provides an interface for users to modify relevant parameters:\n+\n+![traceconfigz](img/traceconfigz.png)\n+\n+## Motivation\n+\n+At the moment, there are no zPages for the Java implementation of OpenTelemetry. The goal of this\n+project, as suggested by the title, is to create the TraceZ zPage for the Java SDK. The motivation\n+for this stems from the usefulness of zPages. Because of how they aggregate and display data, zPages\n+are great development tools for OpenTelemetry instrumentation and lightweight monitoring. In\n+addition, the implementation of the Java zPages can pave the way for future implementations in other\n+languages, such as Python, which have yet to be built.\n+\n+## Proposed Design\n+\n+We have divided the implementation of the /tracez and /traceconfigz zPages into two frontend-centric", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed8ef33353ece317374cb46b29209c030781460c"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkzOTU0OQ==", "bodyText": "The information under the \"proposed design\" sections I think would make for good OSS blog post material. I will leave it to the maintainers to decide if they want to include design choices directly in this doc or elsewhere.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1455#discussion_r460939549", "createdAt": "2020-07-27T14:38:54Z", "author": {"login": "v-y-l"}, "path": "docs/TRACEZ_DESIGN.md", "diffHunk": "@@ -0,0 +1,175 @@\n+# OpenTelemetry SDK Contrib - /tracez and /traceconfigz Design Doc\n+\n+This file contains information about the design choices for the OpenTelemetry /tracez and\n+/traceconfigz zPages.\n+\n+## Introduction\n+\n+The OpenTelemetry zPages are a set of dynamically generated HTML pages that display trace and\n+metrics data for a running process. Within this set, the /tracez zPage is a web page that displays\n+trace information about running spans, sample span latencies, and sample error spans. On the other\n+hand, the /traceconfigz zPage is a web page that allows the users to change tracing parameters, such\n+as sampling probability and max number of attributes.\n+\n+### /tracez zPage\n+\n+The /tracez zPage displays information on running spans, sample span latencies, and sample error\n+spans. The data is aggregated into a summary-level table:\n+\n+![tracez-table](img/tracez-table.png)\n+\n+In addition, you can click on each of the counts in the table cells to access the corresponding span\n+details. For example, here are the details of the `ChildSpan` latency sample (row 1, col 4):\n+\n+![tracez-details](img/tracez-details.png)\n+\n+### /traceconfigz zPage\n+\n+The /traceconfigz zPage displays information about the currently active tracing configuration and \n+provides an interface for users to modify relevant parameters:\n+\n+![traceconfigz](img/traceconfigz.png)\n+\n+## Motivation\n+\n+At the moment, there are no zPages for the Java implementation of OpenTelemetry. The goal of this\n+project, as suggested by the title, is to create the TraceZ zPage for the Java SDK. The motivation\n+for this stems from the usefulness of zPages. Because of how they aggregate and display data, zPages\n+are great development tools for OpenTelemetry instrumentation and lightweight monitoring. In\n+addition, the implementation of the Java zPages can pave the way for future implementations in other\n+languages, such as Python, which have yet to be built.\n+\n+## Proposed Design\n+\n+We have divided the implementation of the /tracez and /traceconfigz zPages into two frontend-centric\n+and backend-centric components.\n+\n+### Frontend\n+\n+#### HttpHandler\n+\n+The `HttpHandler` is responsible for rendering corresponding HTML content. An abstract base class,\n+`ZPageHandler` (OpenCensus implementation), is implemented to standardize handlers for different\n+zPages. Each page will implement their own `ZPageHandler`, extending the base class, to generate the\n+corresponding HTML content for that page.\n+\n+![httphandler](img/httphandler.png)\n+\n+##### TraceZ Handler\n+\n+For the `TracezZPageHandler` class, the span data from `TracezDataAggregator` will be passed in when\n+an instance of the class is created. It will later be used to retrieve span information and display\n+the data in a table.\n+\n+##### TraceConfigZ Handler\n+\n+For the `TraceConfigzZPageHandler` class, the `TraceConfig` class will be used to change sampling\n+rate and tracing parameters.\n+\n+#### HttpServer\n+The `HttpServer` is responsible for listening to incoming requests, obtaining requested data, and\n+rendering corresponding HTML content. The `HttpServer` class from `com.sun.net` will be used to\n+handle http requests and responses on different routes (users need to ensure that they are using a\n+version of JDK that includes the `HttpServer` class; this requirement will be added to the README).\n+Once a request is received by the `HttpServer`, it will invoke the handle function which in turn\n+invokes the `emitHtml` function to render the HTML content.\n+\n+The `HttpServer` class utilizes `com.sun.net.httpserver` to create servers. Users need to ensure\n+that they are using a version of JDK that comes with the package.\n+\n+##### Handling Requests\n+\n+![requests-flowchart](img/requests-flowchart.png)\n+\n+### Backend\n+\n+#### Overview\n+\n+The proposed structure is encompassed by the following diagram:\n+\n+![span-lifecycle](img/span-lifecycle.png)\n+\n+Spans, which are the units of tracing, are monitored by a `SpanProcessor`. The `SpanProcessor` is\n+exposed to a `DataAggregator`, which can retrieve information about the spans through API calls.\n+Lastly, the frontend calls functions in the `DataAggregator` to obtain information needed for the\n+web page.\n+\n+#### SpanProcessor\n+\n+A `SpanProcessor` watches the lifecycle of each span, and its functions are called every time a span\n+starts or ends. For the /tracez zPage, I have implemented a `TracezSpanProcessor`, which will\n+maintain two data structures: a running span cache and a completed span cache.\n+\n+##### Visual Diagram\n+\n+Below is a visual diagram of the `TracezSpanProcessor` class:\n+\n+![span-processor-flowchart](img/span-processor-flowchart.png)\n+\n+When a span starts, it is first added to the `runningSpanCache`. Once that span ends, it is removed\n+from the `runningSpanCache` and added to the `completedSpanCache` as either a latency sample if\n+there are no errors or an error sample if there are.\n+\n+##### Initial Design", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed8ef33353ece317374cb46b29209c030781460c"}, "originalPosition": 113}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "806b6322ef2e6440c0569e255ffa954cf97da42d", "author": {"user": {"login": "wtyanan", "name": "Terry (Tianyu) Wang"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/806b6322ef2e6440c0569e255ffa954cf97da42d", "committedDate": "2020-07-27T15:12:53Z", "message": "Added zpages folder under docs, resolved broken image links"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e4dde8cdcae5bcd69322b04d30fd4b3d85887c2", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9e4dde8cdcae5bcd69322b04d30fd4b3d85887c2", "committedDate": "2020-07-27T18:00:10Z", "message": "Resolved comments for the design md file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86c2a517f201cc217acf5f747a62dd55078cafa1", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/86c2a517f201cc217acf5f747a62dd55078cafa1", "committedDate": "2020-07-27T20:40:52Z", "message": "Made a few wording changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTg3NzY4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1455#pullrequestreview-456187768", "createdAt": "2020-07-27T22:49:51Z", "commit": {"oid": "86c2a517f201cc217acf5f747a62dd55078cafa1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2622, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}