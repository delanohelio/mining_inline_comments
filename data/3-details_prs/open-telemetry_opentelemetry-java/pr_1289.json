{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0OTQwODQz", "number": 1289, "title": "Directly fetch AWS resource metadata without depending on heavyweight\u2026", "bodyText": "\u2026 AWS SDK and allow extension for non-EC2 resources like ECS.\nThe AWS SDK is pretty large, and especially for apps that live in AWS but don't actually use the AWS SDK, it is wasteful to require it for instrumentation. As an added bonus, we can drop the JDK floor raise to Java 8 without that dependency.\nThis migrates to fetching and parsing the metadata directly using the JDK and jackson-core.\nThere are also several different resource types for AWS corresponding to plugins here so this provides an interface to allow adding more of them.\nI didn't keep the setting of ResourceConstraints.HOST_NAME to the private IP, this didn't seem like the intent of the field. But let me know if it does make sense to keep it.\nThe v1 in the module doesn't make sense anymore since we don't use the v1 SDK here. Let me know if I should rename the module now and/or what sort of deprecation process we should do.\n/cc @kbrockhoff @willarmiros", "createdAt": "2020-05-29T07:41:46Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1289", "merged": true, "mergeCommit": {"oid": "9c56905bf62667d3b58ef4ab8bc0c5a0e10ec981"}, "closed": true, "closedAt": "2020-06-01T18:32:46Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcl9dy5AH2gAyNDI0OTQwODQzOjIzZDc0M2UzYzEzNjIzYzQ1OTU3NTM0MGM2ZmMwYTdiYTE2YmRmNjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnEoKYgFqTQyMjA4MzE3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "23d743e3c13623c459575340c6fc0a7ba16bdf62", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/23d743e3c13623c459575340c6fc0a7ba16bdf62", "committedDate": "2020-05-29T07:38:02Z", "message": "Directly fetch AWS resource metadata without depending on heavyweight AWS SDK and allow extension for non-EC2 resources like ECS."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNzUwNjYw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1289#pullrequestreview-420750660", "createdAt": "2020-05-29T08:25:34Z", "commit": {"oid": "23d743e3c13623c459575340c6fc0a7ba16bdf62"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwODQ1MTAz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1289#pullrequestreview-420845103", "createdAt": "2020-05-29T10:46:18Z", "commit": {"oid": "23d743e3c13623c459575340c6fc0a7ba16bdf62"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b895f0f00782536b43cbf1005ecdd5ccfeb6b45", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/5b895f0f00782536b43cbf1005ecdd5ccfeb6b45", "committedDate": "2020-05-29T11:11:44Z", "message": "Set HOST_NAME too"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMTM3MTAx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1289#pullrequestreview-421137101", "createdAt": "2020-05-29T17:09:21Z", "commit": {"oid": "5b895f0f00782536b43cbf1005ecdd5ccfeb6b45"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzowOToyMVrOGclN7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzowOToyMVrOGclN7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYyMzA4NA==", "bodyText": "since we're pre-1.0, I think we can just delete this if it's not the recommended way to do the work.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1289#discussion_r432623084", "createdAt": "2020-05-29T17:09:21Z", "author": {"login": "jkwatson"}, "path": "sdk_contrib/aws_v1_support/src/main/java/io/opentelemetry/sdk/contrib/trace/aws/Ec2Resource.java", "diffHunk": "@@ -16,16 +16,16 @@\n \n package io.opentelemetry.sdk.contrib.trace.aws;\n \n-import com.amazonaws.util.EC2MetadataUtils;\n-import com.amazonaws.util.EC2MetadataUtils.InstanceInfo;\n import io.opentelemetry.common.AttributeValue;\n+import io.opentelemetry.sdk.contrib.trace.aws.resource.AwsResourcePopulator;\n import io.opentelemetry.sdk.resources.Resource;\n-import io.opentelemetry.sdk.resources.ResourceConstants;\n-import java.util.HashMap;\n-import java.util.Map;\n-import javax.annotation.Nullable;\n \n-/** Provides for lookup and population of {@link Resource} labels when running on AWS EC2. */\n+/**\n+ * Provides for lookup and population of {@link Resource} labels when running on AWS EC2.\n+ *\n+ * @deprecated Use {@link AwsResourcePopulator}.\n+ */\n+@Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b895f0f00782536b43cbf1005ecdd5ccfeb6b45"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMTM5MDYz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1289#pullrequestreview-421139063", "createdAt": "2020-05-29T17:12:25Z", "commit": {"oid": "5b895f0f00782536b43cbf1005ecdd5ccfeb6b45"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzoxMjoyNVrOGclT2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzoxMjoyNVrOGclT2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYyNDYwMQ==", "bodyText": "Rather than having a side-effect driven API for this, how about having the populator just return the map, and then do an putAll with the result each time?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1289#discussion_r432624601", "createdAt": "2020-05-29T17:12:25Z", "author": {"login": "jkwatson"}, "path": "sdk_contrib/aws_v1_support/src/main/java/io/opentelemetry/sdk/contrib/trace/aws/resource/AwsResourcePopulator.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.contrib.trace.aws.resource;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import io.opentelemetry.common.AttributeValue;\n+import io.opentelemetry.sdk.resources.Resource;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+/** Populates the attributes for creating a {@link Resource} that is running in AWS. */\n+public abstract class AwsResourcePopulator {\n+\n+  /**\n+   * Returns a {@link Resource} which is filled with attributes describing the current AWS\n+   * environment, e.g., metadata for the instance if the app is running on EC2.\n+   */\n+  public static Resource createResource() {\n+    return createResource(new Ec2ResourcePopulator());\n+  }\n+\n+  @VisibleForTesting\n+  static Resource createResource(AwsResourcePopulator... populators) {\n+    Map<String, AttributeValue> resourceAttributes = new LinkedHashMap<>();\n+\n+    for (AwsResourcePopulator populator : populators) {\n+      populator.populate(resourceAttributes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b895f0f00782536b43cbf1005ecdd5ccfeb6b45"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fbadd4f5ae56d57a6ee9bedcd20219b88f3b966", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7fbadd4f5ae56d57a6ee9bedcd20219b88f3b966", "committedDate": "2020-06-01T00:32:29Z", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into remove-aws-sdk-dependency"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ac3a296571119020c007f1bb59f18797175f82c", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/4ac3a296571119020c007f1bb59f18797175f82c", "committedDate": "2020-06-01T00:47:31Z", "message": "Cleanups"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f32697c215c34ccf1ea234526b11b6ea8898a4a7", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/f32697c215c34ccf1ea234526b11b6ea8898a4a7", "committedDate": "2020-06-01T00:49:30Z", "message": "Not public"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6b0d9e79a5c748a8a936acec7cd96b15a664587", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/f6b0d9e79a5c748a8a936acec7cd96b15a664587", "committedDate": "2020-06-01T01:39:15Z", "message": "Update test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxOTM0OTk5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1289#pullrequestreview-421934999", "createdAt": "2020-06-01T15:19:02Z", "commit": {"oid": "f6b0d9e79a5c748a8a936acec7cd96b15a664587"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNToxOTowMlrOGdOang==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNToxOTowMlrOGdOang==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI5ODA3OA==", "bodyText": "Is it important that we use an ordered-key map implementation here? If so, please add some documentation as to why.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1289#discussion_r433298078", "createdAt": "2020-06-01T15:19:02Z", "author": {"login": "jkwatson"}, "path": "sdk_contrib/aws_v1_support/src/main/java/io/opentelemetry/sdk/contrib/trace/aws/resource/AwsResource.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.contrib.trace.aws.resource;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import io.opentelemetry.common.AttributeValue;\n+import io.opentelemetry.sdk.resources.Resource;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+/** Populates the attributes for creating a {@link Resource} that is running in AWS. */\n+public abstract class AwsResource {\n+\n+  /**\n+   * Returns a {@link Resource} which is filled with attributes describing the current AWS\n+   * environment, e.g., metadata for the instance if the app is running on EC2.\n+   */\n+  public static Resource create() {\n+    return create(new Ec2ResourcePopulator());\n+  }\n+\n+  @VisibleForTesting\n+  static Resource create(AwsResource... populators) {\n+    Map<String, AttributeValue> resourceAttributes = new LinkedHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6b0d9e79a5c748a8a936acec7cd96b15a664587"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxOTQ3Mjcx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1289#pullrequestreview-421947271", "createdAt": "2020-06-01T15:26:38Z", "commit": {"oid": "f6b0d9e79a5c748a8a936acec7cd96b15a664587"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMDgzMTcx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1289#pullrequestreview-422083171", "createdAt": "2020-06-01T18:32:37Z", "commit": {"oid": "f6b0d9e79a5c748a8a936acec7cd96b15a664587"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2819, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}