{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NjcyMDU2", "number": 1869, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMzoxMzowM1rOExM0TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNDo1Mjo0MlrOExPYFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMDI1Njc3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/trace/Span.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMzoxMzowM1rOHnNRrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMzoxNTozMVrOHnNXfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg3NDAyOA==", "bodyText": "Maybe I'm kind of obsessive - but I don't want to encourage users to do something with a Span after end() ;)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1869#discussion_r510874028", "createdAt": "2020-10-23T13:13:03Z", "author": {"login": "carlosalberto"}, "path": "api/src/main/java/io/opentelemetry/trace/Span.java", "diffHunk": "@@ -274,16 +289,19 @@ default void setAttribute(AttributeKey<Long> key, int value) {\n    * implementation.\n    *\n    * @param name the {@code Span} name.\n+   * @return this.\n    */\n-  void updateName(String name);\n+  Span updateName(String name);\n \n   /**\n    * Marks the end of {@code Span} execution.\n    *\n    * <p>Only the timing of the first end call for a given {@code Span} will be recorded, and\n    * implementations are free to ignore all further calls.\n+   *\n+   * @return this.\n    */\n-  void end();\n+  Span end();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db2f9d4112e48a405c28a1aead76f0156f535e92"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg3NTUxOA==", "bodyText": "Oh, that's true! Please keep the void here, @dengliming", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1869#discussion_r510875518", "createdAt": "2020-10-23T13:15:31Z", "author": {"login": "Oberon00"}, "path": "api/src/main/java/io/opentelemetry/trace/Span.java", "diffHunk": "@@ -274,16 +289,19 @@ default void setAttribute(AttributeKey<Long> key, int value) {\n    * implementation.\n    *\n    * @param name the {@code Span} name.\n+   * @return this.\n    */\n-  void updateName(String name);\n+  Span updateName(String name);\n \n   /**\n    * Marks the end of {@code Span} execution.\n    *\n    * <p>Only the timing of the first end call for a given {@code Span} will be recorded, and\n    * implementations are free to ignore all further calls.\n+   *\n+   * @return this.\n    */\n-  void end();\n+  Span end();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg3NDAyOA=="}, "originalCommit": {"oid": "db2f9d4112e48a405c28a1aead76f0156f535e92"}, "originalPosition": 172}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMDI2OTM4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/trace/Span.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMzoxNjoyNFrOHnNZaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMzoxNjoyNFrOHnNZaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg3NjAwOQ==", "bodyText": "Same here (#1869 (comment))", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1869#discussion_r510876009", "createdAt": "2020-10-23T13:16:24Z", "author": {"login": "Oberon00"}, "path": "api/src/main/java/io/opentelemetry/trace/Span.java", "diffHunk": "@@ -295,8 +313,9 @@ default void setAttribute(AttributeKey<Long> key, int value) {\n    * explicit values are required, use {@link #end()}.\n    *\n    * @param endOptions the explicit {@link EndSpanOptions} for this {@code Span}.\n+   * @return this.\n    */\n-  void end(EndSpanOptions endOptions);\n+  Span end(EndSpanOptions endOptions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db2f9d4112e48a405c28a1aead76f0156f535e92"}, "originalPosition": 183}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMDY3NjA1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/trace/PropagatedSpan.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNDo1Mjo0MlrOHnRUNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNTowMjo0NVrOHnRvQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0MDIxNA==", "bodyText": "blocking the PR until the end methods return void again.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1869#discussion_r510940214", "createdAt": "2020-10-23T14:52:42Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/trace/PropagatedSpan.java", "diffHunk": "@@ -31,52 +31,84 @@ private PropagatedSpan(SpanContext spanContext) {\n   }\n \n   @Override\n-  public void setAttribute(String key, String value) {}\n+  public Span setAttribute(String key, String value) {\n+    return this;\n+  }\n \n   @Override\n-  public void setAttribute(String key, long value) {}\n+  public Span setAttribute(String key, long value) {\n+    return this;\n+  }\n \n   @Override\n-  public void setAttribute(String key, double value) {}\n+  public Span setAttribute(String key, double value) {\n+    return this;\n+  }\n \n   @Override\n-  public void setAttribute(String key, boolean value) {}\n+  public Span setAttribute(String key, boolean value) {\n+    return this;\n+  }\n \n   @Override\n-  public <T> void setAttribute(AttributeKey<T> key, T value) {}\n+  public <T> Span setAttribute(AttributeKey<T> key, T value) {\n+    return this;\n+  }\n \n   @Override\n-  public void addEvent(String name) {}\n+  public Span addEvent(String name) {\n+    return this;\n+  }\n \n   @Override\n-  public void addEvent(String name, long timestamp) {}\n+  public Span addEvent(String name, long timestamp) {\n+    return this;\n+  }\n \n   @Override\n-  public void addEvent(String name, Attributes attributes) {}\n+  public Span addEvent(String name, Attributes attributes) {\n+    return this;\n+  }\n \n   @Override\n-  public void addEvent(String name, Attributes attributes, long timestamp) {}\n+  public Span addEvent(String name, Attributes attributes, long timestamp) {\n+    return this;\n+  }\n \n   @Override\n-  public void setStatus(StatusCode canonicalCode) {}\n+  public Span setStatus(StatusCode canonicalCode) {\n+    return this;\n+  }\n \n   @Override\n-  public void setStatus(StatusCode canonicalCode, String description) {}\n+  public Span setStatus(StatusCode canonicalCode, String description) {\n+    return this;\n+  }\n \n   @Override\n-  public void recordException(Throwable exception) {}\n+  public Span recordException(Throwable exception) {\n+    return this;\n+  }\n \n   @Override\n-  public void recordException(Throwable exception, Attributes additionalAttributes) {}\n+  public Span recordException(Throwable exception, Attributes additionalAttributes) {\n+    return this;\n+  }\n \n   @Override\n-  public void updateName(String name) {}\n+  public Span updateName(String name) {\n+    return this;\n+  }\n \n   @Override\n-  public void end() {}\n+  public Span end() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db2f9d4112e48a405c28a1aead76f0156f535e92"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0MTQzMA==", "bodyText": "both of them \ud83d\ude03", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1869#discussion_r510941430", "createdAt": "2020-10-23T14:54:31Z", "author": {"login": "Oberon00"}, "path": "api/src/main/java/io/opentelemetry/trace/PropagatedSpan.java", "diffHunk": "@@ -31,52 +31,84 @@ private PropagatedSpan(SpanContext spanContext) {\n   }\n \n   @Override\n-  public void setAttribute(String key, String value) {}\n+  public Span setAttribute(String key, String value) {\n+    return this;\n+  }\n \n   @Override\n-  public void setAttribute(String key, long value) {}\n+  public Span setAttribute(String key, long value) {\n+    return this;\n+  }\n \n   @Override\n-  public void setAttribute(String key, double value) {}\n+  public Span setAttribute(String key, double value) {\n+    return this;\n+  }\n \n   @Override\n-  public void setAttribute(String key, boolean value) {}\n+  public Span setAttribute(String key, boolean value) {\n+    return this;\n+  }\n \n   @Override\n-  public <T> void setAttribute(AttributeKey<T> key, T value) {}\n+  public <T> Span setAttribute(AttributeKey<T> key, T value) {\n+    return this;\n+  }\n \n   @Override\n-  public void addEvent(String name) {}\n+  public Span addEvent(String name) {\n+    return this;\n+  }\n \n   @Override\n-  public void addEvent(String name, long timestamp) {}\n+  public Span addEvent(String name, long timestamp) {\n+    return this;\n+  }\n \n   @Override\n-  public void addEvent(String name, Attributes attributes) {}\n+  public Span addEvent(String name, Attributes attributes) {\n+    return this;\n+  }\n \n   @Override\n-  public void addEvent(String name, Attributes attributes, long timestamp) {}\n+  public Span addEvent(String name, Attributes attributes, long timestamp) {\n+    return this;\n+  }\n \n   @Override\n-  public void setStatus(StatusCode canonicalCode) {}\n+  public Span setStatus(StatusCode canonicalCode) {\n+    return this;\n+  }\n \n   @Override\n-  public void setStatus(StatusCode canonicalCode, String description) {}\n+  public Span setStatus(StatusCode canonicalCode, String description) {\n+    return this;\n+  }\n \n   @Override\n-  public void recordException(Throwable exception) {}\n+  public Span recordException(Throwable exception) {\n+    return this;\n+  }\n \n   @Override\n-  public void recordException(Throwable exception, Attributes additionalAttributes) {}\n+  public Span recordException(Throwable exception, Attributes additionalAttributes) {\n+    return this;\n+  }\n \n   @Override\n-  public void updateName(String name) {}\n+  public Span updateName(String name) {\n+    return this;\n+  }\n \n   @Override\n-  public void end() {}\n+  public Span end() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0MDIxNA=="}, "originalCommit": {"oid": "db2f9d4112e48a405c28a1aead76f0156f535e92"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0NzEzOA==", "bodyText": "yes. didn't feel the need to beat the dead horse any more. :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1869#discussion_r510947138", "createdAt": "2020-10-23T15:02:45Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/trace/PropagatedSpan.java", "diffHunk": "@@ -31,52 +31,84 @@ private PropagatedSpan(SpanContext spanContext) {\n   }\n \n   @Override\n-  public void setAttribute(String key, String value) {}\n+  public Span setAttribute(String key, String value) {\n+    return this;\n+  }\n \n   @Override\n-  public void setAttribute(String key, long value) {}\n+  public Span setAttribute(String key, long value) {\n+    return this;\n+  }\n \n   @Override\n-  public void setAttribute(String key, double value) {}\n+  public Span setAttribute(String key, double value) {\n+    return this;\n+  }\n \n   @Override\n-  public void setAttribute(String key, boolean value) {}\n+  public Span setAttribute(String key, boolean value) {\n+    return this;\n+  }\n \n   @Override\n-  public <T> void setAttribute(AttributeKey<T> key, T value) {}\n+  public <T> Span setAttribute(AttributeKey<T> key, T value) {\n+    return this;\n+  }\n \n   @Override\n-  public void addEvent(String name) {}\n+  public Span addEvent(String name) {\n+    return this;\n+  }\n \n   @Override\n-  public void addEvent(String name, long timestamp) {}\n+  public Span addEvent(String name, long timestamp) {\n+    return this;\n+  }\n \n   @Override\n-  public void addEvent(String name, Attributes attributes) {}\n+  public Span addEvent(String name, Attributes attributes) {\n+    return this;\n+  }\n \n   @Override\n-  public void addEvent(String name, Attributes attributes, long timestamp) {}\n+  public Span addEvent(String name, Attributes attributes, long timestamp) {\n+    return this;\n+  }\n \n   @Override\n-  public void setStatus(StatusCode canonicalCode) {}\n+  public Span setStatus(StatusCode canonicalCode) {\n+    return this;\n+  }\n \n   @Override\n-  public void setStatus(StatusCode canonicalCode, String description) {}\n+  public Span setStatus(StatusCode canonicalCode, String description) {\n+    return this;\n+  }\n \n   @Override\n-  public void recordException(Throwable exception) {}\n+  public Span recordException(Throwable exception) {\n+    return this;\n+  }\n \n   @Override\n-  public void recordException(Throwable exception, Attributes additionalAttributes) {}\n+  public Span recordException(Throwable exception, Attributes additionalAttributes) {\n+    return this;\n+  }\n \n   @Override\n-  public void updateName(String name) {}\n+  public Span updateName(String name) {\n+    return this;\n+  }\n \n   @Override\n-  public void end() {}\n+  public Span end() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0MDIxNA=="}, "originalCommit": {"oid": "db2f9d4112e48a405c28a1aead76f0156f535e92"}, "originalPosition": 89}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2004, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}