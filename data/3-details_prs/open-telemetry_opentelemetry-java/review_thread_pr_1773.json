{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMDIyNzgy", "number": 1773, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMzoyODowM1rOEr1KTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMzoyODowM1rOEr1KTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Mzk1MjEzOnYy", "diffSide": "RIGHT", "path": "sdk/all/src/jmh/java/io/opentelemetry/sdk/metrics/MetricsTestOperationBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMzoyODowM1rOHe0VQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNjowNzowMVrOHfQJJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA3NjczOA==", "bodyText": "While we're addressing IDE warnings, what about the IDE suggestion of removing return too? Up to you though", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1773#discussion_r502076738", "createdAt": "2020-10-08T23:28:03Z", "author": {"login": "anuraaga"}, "path": "sdk/all/src/jmh/java/io/opentelemetry/sdk/metrics/MetricsTestOperationBuilder.java", "diffHunk": "@@ -23,102 +23,90 @@\n  */\n public enum MetricsTestOperationBuilder {\n   LongCounterAdd(\n-      new OperationBuilder() {\n-        @Override\n-        public Operation build(final Meter meter) {\n-          return new Operation() {\n-            LongCounter metric = meter.longCounterBuilder(\"long_counter\").build();\n-            LongCounter.BoundLongCounter boundMetric =\n-                meter\n-                    .longCounterBuilder(\"bound_long_counter\")\n-                    .build()\n-                    .bind(Labels.of(\"KEY\", \"VALUE\"));\n-\n-            @Override\n-            public void perform(Labels labels) {\n-              metric.add(5L, labels);\n-            }\n-\n-            @Override\n-            public void performBound() {\n-              boundMetric.add(5L);\n-            }\n-          };\n-        }\n+      meter -> {\n+        return new Operation() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bfc334c041f1955c88e14298e9de63702b05774"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUzMjM4OA==", "bodyText": "Did not find that, but I will follow-up", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1773#discussion_r502532388", "createdAt": "2020-10-09T16:07:01Z", "author": {"login": "bogdandrutu"}, "path": "sdk/all/src/jmh/java/io/opentelemetry/sdk/metrics/MetricsTestOperationBuilder.java", "diffHunk": "@@ -23,102 +23,90 @@\n  */\n public enum MetricsTestOperationBuilder {\n   LongCounterAdd(\n-      new OperationBuilder() {\n-        @Override\n-        public Operation build(final Meter meter) {\n-          return new Operation() {\n-            LongCounter metric = meter.longCounterBuilder(\"long_counter\").build();\n-            LongCounter.BoundLongCounter boundMetric =\n-                meter\n-                    .longCounterBuilder(\"bound_long_counter\")\n-                    .build()\n-                    .bind(Labels.of(\"KEY\", \"VALUE\"));\n-\n-            @Override\n-            public void perform(Labels labels) {\n-              metric.add(5L, labels);\n-            }\n-\n-            @Override\n-            public void performBound() {\n-              boundMetric.add(5L);\n-            }\n-          };\n-        }\n+      meter -> {\n+        return new Operation() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA3NjczOA=="}, "originalCommit": {"oid": "2bfc334c041f1955c88e14298e9de63702b05774"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1282, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}