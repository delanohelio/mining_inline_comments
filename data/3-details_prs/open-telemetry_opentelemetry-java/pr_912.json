{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NjI2NjYx", "number": 912, "title": "Added SpanExporterFactory and Config", "bodyText": "Added interfaces for creating SpanExporters from auto instrumentation agents according to discussion in  #849.", "createdAt": "2020-02-22T20:05:36Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/912", "merged": true, "mergeCommit": {"oid": "bce734c2bdc894e5404ae8b5270761238f1d2311"}, "closed": true, "closedAt": "2020-02-27T19:33:06Z", "author": {"login": "prydin"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcG5-HmAH2gAyMzc4NjI2NjYxOjgwMTdlMGQ2ZGU5ZGE2MjFjYTcyY2U4NzE5NGUyODRmMWMyYzVjZjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIgiFWAFqTM2NTkzOTI4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8017e0d6de9da621ca72ce87194e284f1c2c5cf2", "author": {"user": {"login": "prydin", "name": "Pontus Rydin"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/8017e0d6de9da621ca72ce87194e284f1c2c5cf2", "committedDate": "2020-02-22T20:02:04Z", "message": "Added SpanExporterFactory and Config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMjM0NjMy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/912#pullrequestreview-363234632", "createdAt": "2020-02-24T08:56:18Z", "commit": {"oid": "8017e0d6de9da621ca72ce87194e284f1c2c5cf2"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwODo1NjoxOFrOFtY-2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwOTowMjoyMVrOFtZI3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEzOTU0NA==", "bodyText": "Nit: 2020", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/912#discussion_r383139544", "createdAt": "2020-02-24T08:56:18Z", "author": {"login": "thisthat"}, "path": "sdk_contrib/auto_config/src/main/java/io/opentelemetry/sdk/contrib/auto/config/Config.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2019, OpenTelemetry Authors", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8017e0d6de9da621ca72ce87194e284f1c2c5cf2"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEzOTk2OA==", "bodyText": "nit: I only saw {@code ...} style in Javadoc sections", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/912#discussion_r383139968", "createdAt": "2020-02-24T08:57:11Z", "author": {"login": "thisthat"}, "path": "sdk_contrib/auto_config/src/main/java/io/opentelemetry/sdk/contrib/auto/config/Config.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2019, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.contrib.auto.config;\n+\n+/**\n+ * An interface used to provide configuration information to {@link SpanExporterFactory}\n+ * implementations. Callers (such as the Java Auto Instrumenter) typically provide an implementation\n+ * mapping directly to their native configuration framework.\n+ *\n+ * <p>This interface is intentionally kept very simple since the underlying implementations may only\n+ * have access to very basic configuration mechanisms such as system properties and environment\n+ * variables.\n+ */\n+public interface Config {\n+  /**\n+   * Returns the string configuration property corresponding to a key. If the underlying\n+   * implementation cannot find a property for the key, <code>defaultValue</code> is returned.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8017e0d6de9da621ca72ce87194e284f1c2c5cf2"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE0MjEwOA==", "bodyText": "I am not sure about the SPI framework. In my understanding, the implementation should register the exporter via the API offered by the SDK.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/912#discussion_r383142108", "createdAt": "2020-02-24T09:02:21Z", "author": {"login": "thisthat"}, "path": "sdk_contrib/auto_config/src/main/java/io/opentelemetry/sdk/contrib/auto/config/SpanExporterFactory.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2019, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.contrib.auto.config;\n+\n+import io.opentelemetry.sdk.trace.export.SpanExporter;\n+\n+/**\n+ * A {@link SpanExporterFactory} acts as the bootstrap for a {@link SpanExporter} implementation. An\n+ * exporter must register its implementation of a {@link SpanExporterFactory} through the Java SPI", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8017e0d6de9da621ca72ce87194e284f1c2c5cf2"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91c2103f55fd6f806034f18bf003fd8531dcbdd6", "author": {"user": {"login": "prydin", "name": "Pontus Rydin"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/91c2103f55fd6f806034f18bf003fd8531dcbdd6", "committedDate": "2020-02-24T13:24:42Z", "message": "Minor javadoc fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1OTA4ODAy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/912#pullrequestreview-365908802", "createdAt": "2020-02-27T18:46:36Z", "commit": {"oid": "91c2103f55fd6f806034f18bf003fd8531dcbdd6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1OTIwMDI1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/912#pullrequestreview-365920025", "createdAt": "2020-02-27T19:02:48Z", "commit": {"oid": "91c2103f55fd6f806034f18bf003fd8531dcbdd6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1OTM5Mjgx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/912#pullrequestreview-365939281", "createdAt": "2020-02-27T19:31:40Z", "commit": {"oid": "91c2103f55fd6f806034f18bf003fd8531dcbdd6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3081, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}