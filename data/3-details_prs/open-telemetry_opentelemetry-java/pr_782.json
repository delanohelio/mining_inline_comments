{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MDUzNjAw", "number": 782, "title": "Solves #767 HttpTraceContext should not throw exceptions for non-fatal cases", "bodyText": "", "createdAt": "2020-01-22T20:42:35Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/782", "merged": true, "mergeCommit": {"oid": "8b4c1488e936f42783396ebb9c44092364f7a339"}, "closed": true, "closedAt": "2020-01-29T21:38:24Z", "author": {"login": "DotSpy"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb877gjgH2gAyMzY2MDUzNjAwOjZmN2VlYjQwZWMyMTRkNWYwMmU2YmQyNzAxM2M1M2NjYjQ5OGU0NTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_M9mRAFqTM1MDQ0MjMwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6f7eeb40ec214d5f02e6bd27013c53ccb498e459", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/6f7eeb40ec214d5f02e6bd27013c53ccb498e459", "committedDate": "2020-01-22T20:39:47Z", "message": "fix: HttpTraceContext::extract() fails on traceparent == null (#767)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3387089d59008158d14b619518af96dc35ece2a", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c3387089d59008158d14b619518af96dc35ece2a", "committedDate": "2020-01-22T21:01:25Z", "message": "fix: HttpTraceContext::extract() fails on traceparent == null (#767)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ec24c0298a1df0109e6f22e18d88abd4e6f207e", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/5ec24c0298a1df0109e6f22e18d88abd4e6f207e", "committedDate": "2020-01-22T21:02:14Z", "message": "fix: HttpTraceContext::extract() fails on traceparent == null (#767)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2OTM4NDky", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/782#pullrequestreview-346938492", "createdAt": "2020-01-22T22:09:17Z", "commit": {"oid": "5ec24c0298a1df0109e6f22e18d88abd4e6f207e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMjowOToxN1rOFgst-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMjowOToxN1rOFgst-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgzMTQxOA==", "bodyText": "Is this the right answer here, or are we pushing the problem one level up the stack?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/782#discussion_r369831418", "createdAt": "2020-01-22T22:09:17Z", "author": {"login": "jkwatson"}, "path": "opentracing_shim/src/main/java/io/opentelemetry/opentracingshim/Propagation.java", "diffHunk": "@@ -48,7 +49,9 @@ public SpanContextShim extractTextFormat(TextMapExtract carrier) {\n         tracer().getHttpTextFormat().extract(carrierMap, TextMapGetter.INSTANCE);\n     io.opentelemetry.correlationcontext.CorrelationContext distContext =\n         contextManager().getHttpTextFormat().extract(carrierMap, TextMapGetter.INSTANCE);\n-\n+    if (context == SpanContext.getInvalid()) {\n+      throw new IllegalArgumentException(\"Extracted span context is invalid\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ec24c0298a1df0109e6f22e18d88abd4e6f207e"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2OTY4NjA1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/782#pullrequestreview-346968605", "createdAt": "2020-01-22T23:10:58Z", "commit": {"oid": "5ec24c0298a1df0109e6f22e18d88abd4e6f207e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMzoxMDo1OVrOFguOeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMzoxMDo1OVrOFguOeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg1NjEyMg==", "bodyText": "I remember we didn't want to expose the SpanContext.getInvalid() instance, in order to prevent users abusing it. So we either lift that restriction or we use, for the TraceContext propagator, our own INVALID instance (build out from invalid ids).\ncc @yurishkuro", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/782#discussion_r369856122", "createdAt": "2020-01-22T23:10:59Z", "author": {"login": "carlosalberto"}, "path": "api/src/main/java/io/opentelemetry/trace/SpanContext.java", "diffHunk": "@@ -44,7 +44,7 @@\n    *\n    * @return the invalid {@code SpanContext}.\n    */\n-  static SpanContext getInvalid() {\n+  public static SpanContext getInvalid() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ec24c0298a1df0109e6f22e18d88abd4e6f207e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2OTczMDUy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/782#pullrequestreview-346973052", "createdAt": "2020-01-22T23:21:59Z", "commit": {"oid": "5ec24c0298a1df0109e6f22e18d88abd4e6f207e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMzoyMTo1OVrOFgudRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMzoyMTo1OVrOFgudRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg1OTkwOA==", "bodyText": "*the extracted value or an invalid span context if the getter", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/782#discussion_r369859908", "createdAt": "2020-01-22T23:21:59Z", "author": {"login": "carlosalberto"}, "path": "context_prop/src/main/java/io/opentelemetry/context/propagation/HttpTextFormat.java", "diffHunk": "@@ -95,7 +95,8 @@\n    * @param carrier holds propagation fields. For example, an outgoing message or http request.\n    * @param getter invoked for each propagation key to get.\n    * @param <C> carrier of propagation fields, such as an http request.\n-   * @return the extracted value, never {@code null}.\n+   * @return the extracted value or invalid span context if getter returned {@code null}, never", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ec24c0298a1df0109e6f22e18d88abd4e6f207e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a581bac749127cdc8a4292dec815b83d6e1fc66f", "author": {"user": {"login": "vladislav-kiva", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/a581bac749127cdc8a4292dec815b83d6e1fc66f", "committedDate": "2020-01-23T10:08:30Z", "message": "docs: add an"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "043f5d8b8ac78103c967f8f48c774f9b67c44fae", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/043f5d8b8ac78103c967f8f48c774f9b67c44fae", "committedDate": "2020-01-24T16:30:26Z", "message": "refactor: use invalid span context from HttpTraceContext"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ca82bc3e2404e5b0e37f844d4a9c79be2e2208c", "author": {"user": {"login": "DotSpy", "name": "Uladzislau Kiva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/3ca82bc3e2404e5b0e37f844d4a9c79be2e2208c", "committedDate": "2020-01-24T16:34:18Z", "message": "style: apply google code style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NDY4NzMz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/782#pullrequestreview-349468733", "createdAt": "2020-01-28T15:31:04Z", "commit": {"oid": "3ca82bc3e2404e5b0e37f844d4a9c79be2e2208c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NzI0ODE3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/782#pullrequestreview-349724817", "createdAt": "2020-01-28T21:43:13Z", "commit": {"oid": "3ca82bc3e2404e5b0e37f844d4a9c79be2e2208c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNDQyMzAy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/782#pullrequestreview-350442302", "createdAt": "2020-01-29T21:38:18Z", "commit": {"oid": "3ca82bc3e2404e5b0e37f844d4a9c79be2e2208c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3267, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}