{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NDc5NTM2", "number": 12001, "title": "(CDAP-16353) Make ProperitesResolver use PreferencesFetcher to get properties", "bodyText": "Motivation:\nAt the moment, ProperitesResolver directly accesses local preferences store.\nChange that to use PreferencesFetcher allows us to fetch properties either from\nlocal storage or from a remote service via REST calls. This paves the path for\nsupport per service local level DB.\nAdditional changes:\n\nMake PreferencesHttpHandler to return empty properties instead of fail if the\nrequested entity (e.g. program, or application) doesn't exist, for 2 reasons\n\nconsistent with the behavior of preferences store\nuser may request resolved properties for a program, which will include\nproperties from parents (e.g. application, namespace and instance). Even\nthrough the program doesn't exist, it would be good to return resolved\nproperties from its parent and above.", "createdAt": "2020-03-26T23:53:47Z", "url": "https://github.com/cdapio/cdap/pull/12001", "merged": true, "mergeCommit": {"oid": "024a0af996c49a2074b81e9579c44f22da2f1cf1"}, "closed": true, "closedAt": "2020-03-28T21:28:55Z", "author": {"login": "wyzhang"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRmEa-gFqTM4MjUxNzg4Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSLbnHABqjMxNzUzMDkxMzE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNTE3ODgz", "url": "https://github.com/cdapio/cdap/pull/12001#pullrequestreview-382517883", "createdAt": "2020-03-27T00:59:41Z", "commit": {"oid": "97651f545ba62f7f0b9a44ae65c820309871b43f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMDo1OTo0MVrOF8fsQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMTowMzo1NVrOF8fwPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3ODExMg==", "bodyText": "I think preview should use remote?", "url": "https://github.com/cdapio/cdap/pull/12001#discussion_r398978112", "createdAt": "2020-03-27T00:59:41Z", "author": {"login": "yaojiefeng"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/DefaultPreviewRunnerModule.java", "diffHunk": "@@ -162,6 +164,8 @@ protected void configure() {\n     expose(OwnerAdmin.class);\n \n     bind(PreviewRequest.class).toInstance(previewRequest);\n+\n+    bind(PreferencesFetcher.class).to(LocalPreferencesFetcherInternal.class).in(Scopes.SINGLETON);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97651f545ba62f7f0b9a44ae65c820309871b43f"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3OTEzNA==", "bodyText": "Better not changing the behavior, these existence check is fairly common in our http handler. The pref store is only responsible for fetch/put data, it is handler's responsibility to validate the existence of entity. If an entity doesn't exist, it is no point to return the preferences since we delete the preferences whenever a program is deleted.", "url": "https://github.com/cdapio/cdap/pull/12001#discussion_r398979134", "createdAt": "2020-03-27T01:03:55Z", "author": {"login": "yaojiefeng"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/PreferencesHttpHandlerInternal.java", "diffHunk": "@@ -77,9 +72,7 @@ public void getNamespacePreferences(HttpRequest request, HttpResponder responder\n                                       @PathParam(\"namespace-id\") String namespace,\n                                       @QueryParam(\"resolved\") boolean resolved) throws Exception {\n     NamespaceId namespaceId = new NamespaceId(namespace);\n-    if (!namespaceQueryAdmin.exists(namespaceId)) {\n-      throw new NamespaceNotFoundException(namespaceId);\n-    }\n+    // No need to check if namespace exists. PreferencesService returns an empty PreferencesDetail when that happens.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97651f545ba62f7f0b9a44ae65c820309871b43f"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMzMxOTgz", "url": "https://github.com/cdapio/cdap/pull/12001#pullrequestreview-383331983", "createdAt": "2020-03-28T17:24:21Z", "commit": {"oid": "97651f545ba62f7f0b9a44ae65c820309871b43f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNzoyNDoyMVrOF9K9yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNzoyNDoyMVrOF9K9yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY4NzExNQ==", "bodyText": "I agree that the remote and local implementations should have the same behavior. Failing on namespace not exists would actually be the backwards incompatible behavior in this case. Have we made sure the other internal endpoints would behave the same as their local counterparts?\nCan you add some javadocs for the method that explain the contract? Otherwise it is very easy to look at this class and think it should be checking for existence like all the other handlers.", "url": "https://github.com/cdapio/cdap/pull/12001#discussion_r399687115", "createdAt": "2020-03-28T17:24:21Z", "author": {"login": "albertshau"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/PreferencesHttpHandlerInternal.java", "diffHunk": "@@ -77,9 +72,7 @@ public void getNamespacePreferences(HttpRequest request, HttpResponder responder\n                                       @PathParam(\"namespace-id\") String namespace,\n                                       @QueryParam(\"resolved\") boolean resolved) throws Exception {\n     NamespaceId namespaceId = new NamespaceId(namespace);\n-    if (!namespaceQueryAdmin.exists(namespaceId)) {\n-      throw new NamespaceNotFoundException(namespaceId);\n-    }\n+    // No need to check if namespace exists. PreferencesService returns an empty PreferencesDetail when that happens.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3OTEzNA=="}, "originalCommit": {"oid": "97651f545ba62f7f0b9a44ae65c820309871b43f"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b729b77281d712fc35a6955a3cf4091f22531221", "author": {"user": {"login": "wyzhang", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/b729b77281d712fc35a6955a3cf4091f22531221", "committedDate": "2020-03-28T20:34:57Z", "message": "(CDAP-16353) Make ProperitesResolver using PreferencesFetcher to get preference properites.\n\nMotivation:\nAt the moment, ProperitesResolver directly accesses local preferences store.\nChange that to use PreferencesFetcher allows us to fetch properties either from\nlocal storage or from a remote service via REST calls. This paves the path for\nsupport per service local level DB.\n\nAdditional changes:\n- Make PreferencesHttpHandler to return empty properties instead of fail if the\n  requested entity (e.g. program, or applciation) doesn't exist, for 2 reasons\n  1) consistent with the behavior of preferences store\n  2) user may request resolved properties for a program, which will include\n     properites from parents (e.g. application, namespace and instance). Even\n     through the program doesn't exist, it would be good to return resolved\n     properties from its parent and above."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3c7bcd4dae5810d4069cccd0443c0e1c2a1b7cda", "author": {"user": {"login": "wyzhang", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/3c7bcd4dae5810d4069cccd0443c0e1c2a1b7cda", "committedDate": "2020-03-28T20:29:23Z", "message": "address comments"}, "afterCommit": {"oid": "b729b77281d712fc35a6955a3cf4091f22531221", "author": {"user": {"login": "wyzhang", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/b729b77281d712fc35a6955a3cf4091f22531221", "committedDate": "2020-03-28T20:34:57Z", "message": "(CDAP-16353) Make ProperitesResolver using PreferencesFetcher to get preference properites.\n\nMotivation:\nAt the moment, ProperitesResolver directly accesses local preferences store.\nChange that to use PreferencesFetcher allows us to fetch properties either from\nlocal storage or from a remote service via REST calls. This paves the path for\nsupport per service local level DB.\n\nAdditional changes:\n- Make PreferencesHttpHandler to return empty properties instead of fail if the\n  requested entity (e.g. program, or applciation) doesn't exist, for 2 reasons\n  1) consistent with the behavior of preferences store\n  2) user may request resolved properties for a program, which will include\n     properites from parents (e.g. application, namespace and instance). Even\n     through the program doesn't exist, it would be good to return resolved\n     properties from its parent and above."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1200, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}