{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2NDE3MzM5", "number": 12817, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNDozNzoyNFrOEvmE5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNToxMjoyOVrOEvmdpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzQyMzc0OnYy", "diffSide": "RIGHT", "path": "cdap-api/src/main/java/io/cdap/cdap/api/annotation/Requirements.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNDozNzoyNFrOHkqUWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwMDo0OTozMVrOHmMtNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIwNDEyMQ==", "bodyText": "Use the javadoc style for writing doc for public method:\n/**\n * Description\n * @return \n */", "url": "https://github.com/cdapio/cdap/pull/12817#discussion_r508204121", "createdAt": "2020-10-20T04:37:24Z", "author": {"login": "chtyim"}, "path": "cdap-api/src/main/java/io/cdap/cdap/api/annotation/Requirements.java", "diffHunk": "@@ -69,4 +69,7 @@\n public @interface Requirements {\n \n   String[] datasetTypes() default {};\n+\n+  //Name of associated add-ons or accelerators", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2af5b202f3401d3d2b7d72f5af02fc23642200ac"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxNjExOQ==", "bodyText": "Done.", "url": "https://github.com/cdapio/cdap/pull/12817#discussion_r509816119", "createdAt": "2020-10-22T00:49:31Z", "author": {"login": "greeshmaswaminathan"}, "path": "cdap-api/src/main/java/io/cdap/cdap/api/annotation/Requirements.java", "diffHunk": "@@ -69,4 +69,7 @@\n public @interface Requirements {\n \n   String[] datasetTypes() default {};\n+\n+  //Name of associated add-ons or accelerators", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIwNDEyMQ=="}, "originalCommit": {"oid": "2af5b202f3401d3d2b7d72f5af02fc23642200ac"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzQ0NzU2OnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNDo1MTowNVrOHkqh7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwMDo0OTo0MlrOHmMtaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIwNzU5Ng==", "bodyText": "Don't use super generic method name unless this method is really that generic. This method is more like getAnnotationValues?", "url": "https://github.com/cdapio/cdap/pull/12817#discussion_r508207596", "createdAt": "2020-10-20T04:51:05Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java", "diffHunk": "@@ -381,14 +381,18 @@ private String getPluginName(Class<?> cls) {\n    * not specify any {@link io.cdap.cdap.api.annotation.Requirements} then the {@link Requirements} will be empty.\n    */\n   @VisibleForTesting\n-  Requirements getPluginRequirements(Class<?> cls) {\n+  Requirements getRequirementsAnnotation(Class<?> cls) {\n     io.cdap.cdap.api.annotation.Requirements annotation =\n       cls.getAnnotation(io.cdap.cdap.api.annotation.Requirements.class);\n     if (annotation == null) {\n       return Requirements.EMPTY;\n     }\n-    return new Requirements(Arrays.stream(annotation.datasetTypes()).map(s -> s.trim().toLowerCase())\n-                              .filter(s -> !Strings.isNullOrEmpty(s)).collect(Collectors.toSet()));\n+    return new Requirements(collect(annotation.datasetTypes()), collect(annotation.accelerators()));\n+  }\n+\n+  private Set<String> collect(String[] field) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2af5b202f3401d3d2b7d72f5af02fc23642200ac"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxNjE3MQ==", "bodyText": "changed.", "url": "https://github.com/cdapio/cdap/pull/12817#discussion_r509816171", "createdAt": "2020-10-22T00:49:42Z", "author": {"login": "greeshmaswaminathan"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java", "diffHunk": "@@ -381,14 +381,18 @@ private String getPluginName(Class<?> cls) {\n    * not specify any {@link io.cdap.cdap.api.annotation.Requirements} then the {@link Requirements} will be empty.\n    */\n   @VisibleForTesting\n-  Requirements getPluginRequirements(Class<?> cls) {\n+  Requirements getRequirementsAnnotation(Class<?> cls) {\n     io.cdap.cdap.api.annotation.Requirements annotation =\n       cls.getAnnotation(io.cdap.cdap.api.annotation.Requirements.class);\n     if (annotation == null) {\n       return Requirements.EMPTY;\n     }\n-    return new Requirements(Arrays.stream(annotation.datasetTypes()).map(s -> s.trim().toLowerCase())\n-                              .filter(s -> !Strings.isNullOrEmpty(s)).collect(Collectors.toSet()));\n+    return new Requirements(collect(annotation.datasetTypes()), collect(annotation.accelerators()));\n+  }\n+\n+  private Set<String> collect(String[] field) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIwNzU5Ng=="}, "originalCommit": {"oid": "2af5b202f3401d3d2b7d72f5af02fc23642200ac"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzQ1OTU0OnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNDo1NzoyMFrOHkqo1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwMDo0OTo1MVrOHmMtlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIwOTM2Ng==", "bodyText": "A more idiomatic way to use stream (or functional style in general) is to only do one thing per function, since that layout the logic better.\nArrays.stream(fields)\n  .map(String::trim)\n  .map(String::toLowerCase) \n  .filter(Object::nonNull)\n  .filter(s -> !s.isEmpty())\n  .collect(Collectors.toSet());", "url": "https://github.com/cdapio/cdap/pull/12817#discussion_r508209366", "createdAt": "2020-10-20T04:57:20Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java", "diffHunk": "@@ -381,14 +381,18 @@ private String getPluginName(Class<?> cls) {\n    * not specify any {@link io.cdap.cdap.api.annotation.Requirements} then the {@link Requirements} will be empty.\n    */\n   @VisibleForTesting\n-  Requirements getPluginRequirements(Class<?> cls) {\n+  Requirements getRequirementsAnnotation(Class<?> cls) {\n     io.cdap.cdap.api.annotation.Requirements annotation =\n       cls.getAnnotation(io.cdap.cdap.api.annotation.Requirements.class);\n     if (annotation == null) {\n       return Requirements.EMPTY;\n     }\n-    return new Requirements(Arrays.stream(annotation.datasetTypes()).map(s -> s.trim().toLowerCase())\n-                              .filter(s -> !Strings.isNullOrEmpty(s)).collect(Collectors.toSet()));\n+    return new Requirements(collect(annotation.datasetTypes()), collect(annotation.accelerators()));\n+  }\n+\n+  private Set<String> collect(String[] field) {\n+    return Arrays.stream(field).map(s -> s.trim().toLowerCase())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2af5b202f3401d3d2b7d72f5af02fc23642200ac"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxNjIxMw==", "bodyText": "Done.", "url": "https://github.com/cdapio/cdap/pull/12817#discussion_r509816213", "createdAt": "2020-10-22T00:49:51Z", "author": {"login": "greeshmaswaminathan"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java", "diffHunk": "@@ -381,14 +381,18 @@ private String getPluginName(Class<?> cls) {\n    * not specify any {@link io.cdap.cdap.api.annotation.Requirements} then the {@link Requirements} will be empty.\n    */\n   @VisibleForTesting\n-  Requirements getPluginRequirements(Class<?> cls) {\n+  Requirements getRequirementsAnnotation(Class<?> cls) {\n     io.cdap.cdap.api.annotation.Requirements annotation =\n       cls.getAnnotation(io.cdap.cdap.api.annotation.Requirements.class);\n     if (annotation == null) {\n       return Requirements.EMPTY;\n     }\n-    return new Requirements(Arrays.stream(annotation.datasetTypes()).map(s -> s.trim().toLowerCase())\n-                              .filter(s -> !Strings.isNullOrEmpty(s)).collect(Collectors.toSet()));\n+    return new Requirements(collect(annotation.datasetTypes()), collect(annotation.accelerators()));\n+  }\n+\n+  private Set<String> collect(String[] field) {\n+    return Arrays.stream(field).map(s -> s.trim().toLowerCase())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIwOTM2Ng=="}, "originalCommit": {"oid": "2af5b202f3401d3d2b7d72f5af02fc23642200ac"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzQ4NzA4OnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNToxMjoyOVrOHkq46w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwMDo1MDowMFrOHmMt2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIxMzQ4Mw==", "bodyText": "This method actually returns the Requirements class, not the annotation, so better call it getArtifactRequirements()", "url": "https://github.com/cdapio/cdap/pull/12817#discussion_r508213483", "createdAt": "2020-10-20T05:12:29Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java", "diffHunk": "@@ -381,14 +381,18 @@ private String getPluginName(Class<?> cls) {\n    * not specify any {@link io.cdap.cdap.api.annotation.Requirements} then the {@link Requirements} will be empty.\n    */\n   @VisibleForTesting\n-  Requirements getPluginRequirements(Class<?> cls) {\n+  Requirements getRequirementsAnnotation(Class<?> cls) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2af5b202f3401d3d2b7d72f5af02fc23642200ac"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxNjI4MA==", "bodyText": "done.", "url": "https://github.com/cdapio/cdap/pull/12817#discussion_r509816280", "createdAt": "2020-10-22T00:50:00Z", "author": {"login": "greeshmaswaminathan"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java", "diffHunk": "@@ -381,14 +381,18 @@ private String getPluginName(Class<?> cls) {\n    * not specify any {@link io.cdap.cdap.api.annotation.Requirements} then the {@link Requirements} will be empty.\n    */\n   @VisibleForTesting\n-  Requirements getPluginRequirements(Class<?> cls) {\n+  Requirements getRequirementsAnnotation(Class<?> cls) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIxMzQ4Mw=="}, "originalCommit": {"oid": "2af5b202f3401d3d2b7d72f5af02fc23642200ac"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3079, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}