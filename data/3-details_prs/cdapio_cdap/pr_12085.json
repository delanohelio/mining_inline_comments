{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NjM3OTg5", "number": 12085, "title": "(CDAP-16606) Limit total number of records in preview run", "bodyText": "", "createdAt": "2020-04-19T10:07:08Z", "url": "https://github.com/cdapio/cdap/pull/12085", "merged": true, "mergeCommit": {"oid": "c9456ce7e9d16dc73689db8e1d22eb9d61ee75a3"}, "closed": true, "closedAt": "2020-04-21T00:27:09Z", "author": {"login": "chtyim"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZMeUdABqjMyNDkxODc3Mjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZnpQcgFqTM5Njg4Mjk4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4550838e0ae1bf0c693dff56551609f9d108a815", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/4550838e0ae1bf0c693dff56551609f9d108a815", "committedDate": "2020-04-19T10:06:52Z", "message": "(CDAP-16606) Limit total number of records in preview run"}, "afterCommit": {"oid": "0d0bca4af96318b807165c7c79c9c75f64904080", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/0d0bca4af96318b807165c7c79c9c75f64904080", "committedDate": "2020-04-19T15:45:59Z", "message": "(CDAP-16606) Limit total number of records in preview run"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0d0bca4af96318b807165c7c79c9c75f64904080", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/0d0bca4af96318b807165c7c79c9c75f64904080", "committedDate": "2020-04-19T15:45:59Z", "message": "(CDAP-16606) Limit total number of records in preview run"}, "afterCommit": {"oid": "639e13c85216c8df09a627e089cba1c36d046abd", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/639e13c85216c8df09a627e089cba1c36d046abd", "committedDate": "2020-04-20T08:14:47Z", "message": "(CDAP-16606) Limit total number of records in preview run"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "639e13c85216c8df09a627e089cba1c36d046abd", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/639e13c85216c8df09a627e089cba1c36d046abd", "committedDate": "2020-04-20T08:14:47Z", "message": "(CDAP-16606) Limit total number of records in preview run"}, "afterCommit": {"oid": "3c4b83dd84df56a2537616f5bff23cd4dce5cc3a", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/3c4b83dd84df56a2537616f5bff23cd4dce5cc3a", "committedDate": "2020-04-20T08:44:13Z", "message": "(CDAP-16606) Limit total number of records in preview run"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3c4b83dd84df56a2537616f5bff23cd4dce5cc3a", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/3c4b83dd84df56a2537616f5bff23cd4dce5cc3a", "committedDate": "2020-04-20T08:44:13Z", "message": "(CDAP-16606) Limit total number of records in preview run"}, "afterCommit": {"oid": "336bf32b84cafb7907e12bc67ef68dac25e7f43c", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/336bf32b84cafb7907e12bc67ef68dac25e7f43c", "committedDate": "2020-04-20T08:45:10Z", "message": "(CDAP-16606) Limit total number of records in preview run"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "336bf32b84cafb7907e12bc67ef68dac25e7f43c", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/336bf32b84cafb7907e12bc67ef68dac25e7f43c", "committedDate": "2020-04-20T08:45:10Z", "message": "(CDAP-16606) Limit total number of records in preview run"}, "afterCommit": {"oid": "ab1d4b9accce76b09b7e4c7061536028dff7b62e", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/ab1d4b9accce76b09b7e4c7061536028dff7b62e", "committedDate": "2020-04-20T08:49:45Z", "message": "(CDAP-16606) Limit total number of records in preview run"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NjMxNzA1", "url": "https://github.com/cdapio/cdap/pull/12085#pullrequestreview-396631705", "createdAt": "2020-04-20T16:46:14Z", "commit": {"oid": "ab1d4b9accce76b09b7e4c7061536028dff7b62e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjo0NjoxNFrOGId4HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjo0NjoxNFrOGId4HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUzMTI5Mw==", "bodyText": "instead of reading data here, another possibility is to create one combined split that contains all the original splits, and have the record reader iterate through the splits later.\nSeems like it would be better, since the data is only read once, and protects against weird behavior in certain types of input formats (for example, if there's a pubsub source where the message is acked in the reader).", "url": "https://github.com/cdapio/cdap/pull/12085#discussion_r411531293", "createdAt": "2020-04-20T16:46:14Z", "author": {"login": "albertshau"}, "path": "cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java", "diffHunk": "@@ -34,25 +44,100 @@\n  * @param <V> type of value to read\n  */\n public class LimitingInputFormat<K, V> extends InputFormat<K, V> implements Configurable {\n-  public static final String DELEGATE_CLASS_NAME = \"io.cdap.pipeline.preview.input.classname\";\n-  public static final String MAX_RECORDS = \"io.cdap.pipeline.preview.max.records\";\n+\n+  static final String DELEGATE_CLASS_NAME = \"io.cdap.pipeline.preview.input.classname\";\n+  static final String MAX_RECORDS = \"io.cdap.pipeline.preview.max.records\";\n \n   private InputFormat<K, V> delegateFormat;\n   private Configuration conf;\n \n   @Override\n   public List<InputSplit> getSplits(JobContext context) throws IOException, InterruptedException {\n     Configuration conf = context.getConfiguration();\n-    return createDelegate(conf).getSplits(context);\n+    int maxRecords = conf.getInt(MAX_RECORDS, 100);\n+\n+    List<InputSplit> splits = createDelegate(conf).getSplits(context);\n+    if (splits.size() <= 1) {\n+      int limit = maxRecords;\n+      return splits.stream().map(s -> new LimitingInputSplit(conf, s, limit)).collect(Collectors.toList());\n+    }\n+\n+    // If there are more than one splits, try to read records from each split to determine what's the actual split\n+    // limit per split.\n+    Map<InputSplit, Integer> recordLimits = new IdentityHashMap<>();\n+    TaskID taskId = new TaskID(context.getJobID(), TaskType.JOB_SETUP, 0);\n+    TaskAttemptContext taskContext = new TaskAttemptContextImpl(conf, new TaskAttemptID(taskId, 0));\n+    List<InputSplit> activeSplits = new LinkedList<>(splits);\n+    while (maxRecords > 0 && !activeSplits.isEmpty()) {\n+      int recordPerSplit = Math.max(1, maxRecords / activeSplits.size());\n+\n+      Iterator<InputSplit> iterator = activeSplits.iterator();\n+      while (iterator.hasNext()) {\n+        InputSplit split = iterator.next();\n+\n+        // We close the record reader in each iteration to avoid keeping all of them open to preserve memory\n+        // in case there are a lot of partitions.\n+        try (RecordReader<K, V> reader = createRecordReader(split, taskContext)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab1d4b9accce76b09b7e4c7061536028dff7b62e"}, "originalPosition": 60}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ab1d4b9accce76b09b7e4c7061536028dff7b62e", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/ab1d4b9accce76b09b7e4c7061536028dff7b62e", "committedDate": "2020-04-20T08:49:45Z", "message": "(CDAP-16606) Limit total number of records in preview run"}, "afterCommit": {"oid": "503dce5ab382710d042d0b7600c67561cf4ac809", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/503dce5ab382710d042d0b7600c67561cf4ac809", "committedDate": "2020-04-20T20:13:48Z", "message": "(CDAP-16606) Limit total number of records in preview run"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7963d5fc6c44bfb75192e661e2babdd75ba533a4", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/7963d5fc6c44bfb75192e661e2babdd75ba533a4", "committedDate": "2020-04-20T20:26:11Z", "message": "(CDAP-16606) Limit total number of records in preview run"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "503dce5ab382710d042d0b7600c67561cf4ac809", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/503dce5ab382710d042d0b7600c67561cf4ac809", "committedDate": "2020-04-20T20:13:48Z", "message": "(CDAP-16606) Limit total number of records in preview run"}, "afterCommit": {"oid": "7963d5fc6c44bfb75192e661e2babdd75ba533a4", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/7963d5fc6c44bfb75192e661e2babdd75ba533a4", "committedDate": "2020-04-20T20:26:11Z", "message": "(CDAP-16606) Limit total number of records in preview run"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2Nzk4NTI4", "url": "https://github.com/cdapio/cdap/pull/12085#pullrequestreview-396798528", "createdAt": "2020-04-20T20:44:51Z", "commit": {"oid": "7963d5fc6c44bfb75192e661e2babdd75ba533a4"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMDo0NDo1MVrOGIm7DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMDo1MToxMVrOGInJ3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY3OTUwMA==", "bodyText": "since InputSplit is writable, can this just delegate to the split? Or do we need the classname and to use Serializer for some other reason?", "url": "https://github.com/cdapio/cdap/pull/12085#discussion_r411679500", "createdAt": "2020-04-20T20:44:51Z", "author": {"login": "albertshau"}, "path": "cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputSplit.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.etl.batch.preview;\n+\n+import org.apache.hadoop.conf.Configurable;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.io.Text;\n+import org.apache.hadoop.io.Writable;\n+import org.apache.hadoop.io.serializer.Deserializer;\n+import org.apache.hadoop.io.serializer.SerializationFactory;\n+import org.apache.hadoop.io.serializer.Serializer;\n+import org.apache.hadoop.mapreduce.InputSplit;\n+\n+import java.io.DataInput;\n+import java.io.DataOutput;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * An {@link InputSplit} that delegates to another {@link InputSplit} and also carries record limit information.\n+ */\n+public class LimitingInputSplit extends InputSplit implements Writable, Configurable {\n+\n+  private List<InputSplit> inputSplits;\n+  private int recordLimit;\n+  private Configuration conf;\n+  private long length;\n+  private String[] locations;\n+\n+  @SuppressWarnings(\"unused\")\n+  public LimitingInputSplit() {\n+    // no-op, for deserialization\n+  }\n+\n+  LimitingInputSplit(Configuration conf, List<InputSplit> inputSplits, int recordLimit) throws IOException {\n+    this.conf = conf;\n+    this.inputSplits = inputSplits;\n+    this.recordLimit = recordLimit;\n+    initialize();\n+  }\n+\n+  private void initialize() throws IOException {\n+    try {\n+      long length = 0L;\n+      Set<String> locations = new LinkedHashSet<>();\n+      for (InputSplit split : inputSplits) {\n+        length += split.getLength();\n+        String[] splitLocations = split.getLocations();\n+        if (splitLocations != null) {\n+          locations.addAll(Arrays.asList(splitLocations));\n+        }\n+      }\n+      this.length = length;\n+      this.locations = locations.toArray(new String[0]);\n+    } catch (InterruptedException e) {\n+      throw new IOException(\"Interrupted during initialization\", e);\n+    }\n+  }\n+\n+  List<InputSplit> getInputSplits() {\n+    return inputSplits;\n+  }\n+\n+  int getRecordLimit() {\n+    return recordLimit;\n+  }\n+\n+  @Override\n+  public long getLength() {\n+    return length;\n+  }\n+\n+  @Override\n+  public String[] getLocations() {\n+    return locations;\n+  }\n+\n+  @Override\n+  public void write(DataOutput out) throws IOException {\n+    out.writeInt(recordLimit);\n+    out.writeInt(inputSplits.size());\n+    for (InputSplit split : inputSplits) {\n+      Text.writeString(out, split.getClass().getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7963d5fc6c44bfb75192e661e2babdd75ba533a4"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY4MTE4OA==", "bodyText": "nevermind, was looking at mapred.InputSplit. Don't know why they didn't make it part of the InputSplit contract, seems like it would always be needed...", "url": "https://github.com/cdapio/cdap/pull/12085#discussion_r411681188", "createdAt": "2020-04-20T20:47:47Z", "author": {"login": "albertshau"}, "path": "cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputSplit.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.etl.batch.preview;\n+\n+import org.apache.hadoop.conf.Configurable;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.io.Text;\n+import org.apache.hadoop.io.Writable;\n+import org.apache.hadoop.io.serializer.Deserializer;\n+import org.apache.hadoop.io.serializer.SerializationFactory;\n+import org.apache.hadoop.io.serializer.Serializer;\n+import org.apache.hadoop.mapreduce.InputSplit;\n+\n+import java.io.DataInput;\n+import java.io.DataOutput;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * An {@link InputSplit} that delegates to another {@link InputSplit} and also carries record limit information.\n+ */\n+public class LimitingInputSplit extends InputSplit implements Writable, Configurable {\n+\n+  private List<InputSplit> inputSplits;\n+  private int recordLimit;\n+  private Configuration conf;\n+  private long length;\n+  private String[] locations;\n+\n+  @SuppressWarnings(\"unused\")\n+  public LimitingInputSplit() {\n+    // no-op, for deserialization\n+  }\n+\n+  LimitingInputSplit(Configuration conf, List<InputSplit> inputSplits, int recordLimit) throws IOException {\n+    this.conf = conf;\n+    this.inputSplits = inputSplits;\n+    this.recordLimit = recordLimit;\n+    initialize();\n+  }\n+\n+  private void initialize() throws IOException {\n+    try {\n+      long length = 0L;\n+      Set<String> locations = new LinkedHashSet<>();\n+      for (InputSplit split : inputSplits) {\n+        length += split.getLength();\n+        String[] splitLocations = split.getLocations();\n+        if (splitLocations != null) {\n+          locations.addAll(Arrays.asList(splitLocations));\n+        }\n+      }\n+      this.length = length;\n+      this.locations = locations.toArray(new String[0]);\n+    } catch (InterruptedException e) {\n+      throw new IOException(\"Interrupted during initialization\", e);\n+    }\n+  }\n+\n+  List<InputSplit> getInputSplits() {\n+    return inputSplits;\n+  }\n+\n+  int getRecordLimit() {\n+    return recordLimit;\n+  }\n+\n+  @Override\n+  public long getLength() {\n+    return length;\n+  }\n+\n+  @Override\n+  public String[] getLocations() {\n+    return locations;\n+  }\n+\n+  @Override\n+  public void write(DataOutput out) throws IOException {\n+    out.writeInt(recordLimit);\n+    out.writeInt(inputSplits.size());\n+    for (InputSplit split : inputSplits) {\n+      Text.writeString(out, split.getClass().getName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY3OTUwMA=="}, "originalCommit": {"oid": "7963d5fc6c44bfb75192e661e2babdd75ba533a4"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY4MzI5NA==", "bodyText": "Though the current behavior is a limit per split, don't we actually want the limit to be applied overall?", "url": "https://github.com/cdapio/cdap/pull/12085#discussion_r411683294", "createdAt": "2020-04-20T20:51:11Z", "author": {"login": "albertshau"}, "path": "cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingRecordReader.java", "diffHunk": "@@ -29,47 +31,77 @@\n  * @param <V> type of value to read\n  */\n public class LimitingRecordReader<K, V> extends RecordReader<K, V> {\n-  private final RecordReader<K, V> delegate;\n-  private final int maxToRead;\n+\n+  private final InputFormat<K, V> delegateFormat;\n+  private TaskAttemptContext context;\n+  private LimitingInputSplit inputSplit;\n+  private int perSplitLimit;\n   private int numRead;\n+  private Iterator<InputSplit> splitIterator;\n+  private RecordReader<K, V> currentReader;\n \n-  public LimitingRecordReader(RecordReader<K, V> delegate, int maxToRead) {\n-    this.delegate = delegate;\n-    this.maxToRead = maxToRead;\n+  LimitingRecordReader(InputFormat<K, V> delegateFormat) {\n+    this.delegateFormat = delegateFormat;\n   }\n \n   @Override\n   public void initialize(InputSplit split, TaskAttemptContext context) throws IOException, InterruptedException {\n-    delegate.initialize(split, context);\n+    if (!(split instanceof LimitingInputSplit)) {\n+      throw new IOException(\"Expected input split class \" + LimitingInputSplit.class.getName()\n+                              + \", but got \" + split.getClass().getName());\n+    }\n+    this.context = context;\n+    this.inputSplit = (LimitingInputSplit) split;\n+    this.splitIterator = inputSplit.getInputSplits().iterator();\n+\n+    // Round up the per split limit so that each reader at most is opened once\n+    int numberOfSplits = inputSplit.getInputSplits().size();\n+    int perSplitLimit = (inputSplit.getRecordLimit() + numberOfSplits - 1) / numberOfSplits;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7963d5fc6c44bfb75192e661e2babdd75ba533a4"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2ODgyOTgx", "url": "https://github.com/cdapio/cdap/pull/12085#pullrequestreview-396882981", "createdAt": "2020-04-20T23:25:33Z", "commit": {"oid": "7963d5fc6c44bfb75192e661e2babdd75ba533a4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2173, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}