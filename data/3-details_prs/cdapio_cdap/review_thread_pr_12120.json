{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NzIxOTg5", "number": 12120, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxOTo0Nzo0MlrOD3WprA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxOTo1MDo1NlrOD3WuLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MzY5Mzg4OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/AbstractWidget/SqlSelectorWidget/SchemaContainer.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxOTo0Nzo0MlrOGNkOZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxOTo0Nzo0MlrOGNkOZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg3ODE4MQ==", "bodyText": "I assume the 50 here is coming from DEFAULT_FIELD_WINDOW_SIZE? If yes, can we use the variable here instead?", "url": "https://github.com/cdapio/cdap/pull/12120#discussion_r416878181", "createdAt": "2020-04-28T19:47:42Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/SqlSelectorWidget/SchemaContainer.tsx", "diffHunk": "@@ -171,6 +188,105 @@ class SchemaContainer extends React.Component<ISchemaContainerProps, ISchemaCont\n     return validationError;\n   }\n \n+  private componentID = `sql-fields-${uuidV4()}`;\n+\n+  private io = new IntersectionObserver(\n+    (entries) => {\n+      let lastVisibleElement = this.state.fieldWindowSize;\n+      for (const entry of entries) {\n+        let id = entry.target.getAttribute('id');\n+        id = id.split('-').pop();\n+        const idInt = parseInt(id, 10);\n+        if (entry.isIntersecting) {\n+          lastVisibleElement =\n+            idInt + 50 > this.state.fieldWindowSize ? idInt + DEFAULT_FIELD_WINDOW_SIZE : idInt;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04068ba68052e106ca503e12b0601e18881c65d"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MzY5NjQyOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/directives/complex-schema/complex-schema.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxOTo0ODoyOFrOGNkQCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMToxMDo1NVrOGNsmVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg3ODYwMA==", "bodyText": "Where is 100 coming from here?", "url": "https://github.com/cdapio/cdap/pull/12120#discussion_r416878600", "createdAt": "2020-04-28T19:48:28Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/directives/complex-schema/complex-schema.js", "diffHunk": "@@ -25,6 +25,74 @@ function ComplexSchemaController (avsc, SCHEMA_TYPES, $scope, uuid, $timeout, Sc\n   let timeout;\n   let addFieldTimeout;\n   vm.emptySchema = false;\n+  // lazy loading parameters\n+  $scope.id = uuid.v4();\n+  $scope.lazyLoadedParsedSchema = [];\n+  vm.windowSize = 50;\n+  vm.DEFAULT_WINDOW_SIZE = 50;\n+  vm.lazyloading = false;\n+\n+  $scope.$watch('domLoaded', () => {\n+    /*\n+      Wait for the dom to be loaded\n+      Equivalent of componentDidMount :sigh:\n+    */\n+    if (!$scope.domLoaded) {\n+      return;\n+    }\n+    /*\n+      For some reason if the dom is loaded but none of the fields are\n+      rendered we don't need to do anything.\n+    */\n+    const fields = document.querySelectorAll(`#schema-container-${$scope.id} .field-row`);\n+    if (!fields.length) {\n+      return;\n+    }\n+    vm.io = new IntersectionObserver(\n+      (entries) => {\n+        let lastVisibleElement = vm.windowSize;\n+        for (const entry of entries) {\n+          const id = entry.target.getAttribute('lazyload-id');\n+          const numID = parseInt(id, 10);\n+          if (entry.isIntersecting) {\n+            lastVisibleElement = numID + 100 > vm.windowSize ? numID + vm.DEFAULT_WINDOW_SIZE : numID;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04068ba68052e106ca503e12b0601e18881c65d"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAxNTM4Mw==", "bodyText": "Have replaced it with valid const", "url": "https://github.com/cdapio/cdap/pull/12120#discussion_r417015383", "createdAt": "2020-04-29T01:10:55Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/directives/complex-schema/complex-schema.js", "diffHunk": "@@ -25,6 +25,74 @@ function ComplexSchemaController (avsc, SCHEMA_TYPES, $scope, uuid, $timeout, Sc\n   let timeout;\n   let addFieldTimeout;\n   vm.emptySchema = false;\n+  // lazy loading parameters\n+  $scope.id = uuid.v4();\n+  $scope.lazyLoadedParsedSchema = [];\n+  vm.windowSize = 50;\n+  vm.DEFAULT_WINDOW_SIZE = 50;\n+  vm.lazyloading = false;\n+\n+  $scope.$watch('domLoaded', () => {\n+    /*\n+      Wait for the dom to be loaded\n+      Equivalent of componentDidMount :sigh:\n+    */\n+    if (!$scope.domLoaded) {\n+      return;\n+    }\n+    /*\n+      For some reason if the dom is loaded but none of the fields are\n+      rendered we don't need to do anything.\n+    */\n+    const fields = document.querySelectorAll(`#schema-container-${$scope.id} .field-row`);\n+    if (!fields.length) {\n+      return;\n+    }\n+    vm.io = new IntersectionObserver(\n+      (entries) => {\n+        let lastVisibleElement = vm.windowSize;\n+        for (const entry of entries) {\n+          const id = entry.target.getAttribute('lazyload-id');\n+          const numID = parseInt(id, 10);\n+          if (entry.isIntersecting) {\n+            lastVisibleElement = numID + 100 > vm.windowSize ? numID + vm.DEFAULT_WINDOW_SIZE : numID;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg3ODYwMA=="}, "originalCommit": {"oid": "b04068ba68052e106ca503e12b0601e18881c65d"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MzcwNTQxOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/directives/complex-schema/embedded-schema-selector/embedded-schema-selector.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxOTo1MDo1NlrOGNkVjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxOTo1MDo1NlrOGNkVjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg4MDAxNQ==", "bodyText": "maybe say !vm.initCollapse instead for conciseness?", "url": "https://github.com/cdapio/cdap/pull/12120#discussion_r416880015", "createdAt": "2020-04-28T19:50:56Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/directives/complex-schema/embedded-schema-selector/embedded-schema-selector.js", "diffHunk": "@@ -24,13 +24,14 @@ angular.module(PKG.name+'.commons')\n       displayType: '=',\n       index: '=',\n       parentFormatOutput: '&',\n-      isDisabled: '='\n+      isDisabled: '=',\n+      initCollapse: '='\n     },\n     bindToController: true,\n     controller: function (SchemaHelper) {\n       var vm = this;\n       vm.checkComplexType = SchemaHelper.checkComplexType;\n-      vm.expanded = true;\n+      vm.expanded = vm.initCollapse === true ? false : true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04068ba68052e106ca503e12b0601e18881c65d"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2785, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}