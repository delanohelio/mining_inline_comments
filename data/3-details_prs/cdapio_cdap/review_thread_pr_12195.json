{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwOTgyNDQ4", "number": 12195, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxOTo1MToyMlrOD-Xm-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxOTo1MToyMlrOD-Xm-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzI1MTEyOnYy", "diffSide": "RIGHT", "path": "cdap-spark-core-base/src/test/java/io/cdap/cdap/app/runtime/spark/serializer/KryoSerializerTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxOTo1MToyMlrOGYbeEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjozNTo0NFrOGYgMZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI2OTA3Mw==", "bodyText": "Would it make sense to add a unit test that checks the size of the serialized object to make sure we dont regress later on?", "url": "https://github.com/cdapio/cdap/pull/12195#discussion_r428269073", "createdAt": "2020-05-20T19:51:22Z", "author": {"login": "MEseifan"}, "path": "cdap-spark-core-base/src/test/java/io/cdap/cdap/app/runtime/spark/serializer/KryoSerializerTest.java", "diffHunk": "@@ -65,10 +65,13 @@ public void testStructuredRecordSerializer() throws IOException {\n       .set(\"double\", 2.25d)\n       .set(\"string\", \"Hello World\")\n       .set(\"bytes\", \"Hello Bytes\".getBytes(StandardCharsets.UTF_8))\n+      .set(\"ts\", System.currentTimeMillis())\n       .set(\"enum\", \"a\")\n       .set(\"array\", new int[]{1, 2, 3})\n       .set(\"map\", ImmutableMap.of(\"1\", 1, \"2\", 2, \"3\", 3))\n-      .set(\"union\", null).build();\n+      .set(\"union\", null)\n+      .set(\"node\", StructuredRecord.builder(schema.getField(\"node\").getSchema()).build())\n+      .build();\n \n     Kryo kryo = new Kryo();\n     kryo.addDefaultSerializer(Schema.class, SchemaSerializer.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92124c6aed5bf439479e47e65308a90dd4f8ebf0"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI3NDg2MA==", "bodyText": "It would be kind of flaky though (e.g. if kryo version upgrade, the size might be different).", "url": "https://github.com/cdapio/cdap/pull/12195#discussion_r428274860", "createdAt": "2020-05-20T20:02:27Z", "author": {"login": "chtyim"}, "path": "cdap-spark-core-base/src/test/java/io/cdap/cdap/app/runtime/spark/serializer/KryoSerializerTest.java", "diffHunk": "@@ -65,10 +65,13 @@ public void testStructuredRecordSerializer() throws IOException {\n       .set(\"double\", 2.25d)\n       .set(\"string\", \"Hello World\")\n       .set(\"bytes\", \"Hello Bytes\".getBytes(StandardCharsets.UTF_8))\n+      .set(\"ts\", System.currentTimeMillis())\n       .set(\"enum\", \"a\")\n       .set(\"array\", new int[]{1, 2, 3})\n       .set(\"map\", ImmutableMap.of(\"1\", 1, \"2\", 2, \"3\", 3))\n-      .set(\"union\", null).build();\n+      .set(\"union\", null)\n+      .set(\"node\", StructuredRecord.builder(schema.getField(\"node\").getSchema()).build())\n+      .build();\n \n     Kryo kryo = new Kryo();\n     kryo.addDefaultSerializer(Schema.class, SchemaSerializer.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI2OTA3Mw=="}, "originalCommit": {"oid": "92124c6aed5bf439479e47e65308a90dd4f8ebf0"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0NjQ2OA==", "bodyText": "We could make it a bit fuzzy, like >10% change would cause a failure. But it might eventually become flaky anyway, so we can omit that for now", "url": "https://github.com/cdapio/cdap/pull/12195#discussion_r428346468", "createdAt": "2020-05-20T22:35:44Z", "author": {"login": "MEseifan"}, "path": "cdap-spark-core-base/src/test/java/io/cdap/cdap/app/runtime/spark/serializer/KryoSerializerTest.java", "diffHunk": "@@ -65,10 +65,13 @@ public void testStructuredRecordSerializer() throws IOException {\n       .set(\"double\", 2.25d)\n       .set(\"string\", \"Hello World\")\n       .set(\"bytes\", \"Hello Bytes\".getBytes(StandardCharsets.UTF_8))\n+      .set(\"ts\", System.currentTimeMillis())\n       .set(\"enum\", \"a\")\n       .set(\"array\", new int[]{1, 2, 3})\n       .set(\"map\", ImmutableMap.of(\"1\", 1, \"2\", 2, \"3\", 3))\n-      .set(\"union\", null).build();\n+      .set(\"union\", null)\n+      .set(\"node\", StructuredRecord.builder(schema.getField(\"node\").getSchema()).build())\n+      .build();\n \n     Kryo kryo = new Kryo();\n     kryo.addDefaultSerializer(Schema.class, SchemaSerializer.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI2OTA3Mw=="}, "originalCommit": {"oid": "92124c6aed5bf439479e47e65308a90dd4f8ebf0"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2644, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}