{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMTM1NDAz", "number": 12826, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMjozNDoxM1rOEylH1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMjozNDoxM1rOEylH1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDcyNDcwOnYy", "diffSide": "RIGHT", "path": "cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormatProvider.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMjozNDoxM1rOHpTfGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMjo1MzozM1rOHpT50Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3MjkyMQ==", "bodyText": "I am wondering if we can use something like ImmutableMap.Builder here. It would immediately tell us if we have duplicate keys.", "url": "https://github.com/cdapio/cdap/pull/12826#discussion_r513072921", "createdAt": "2020-10-27T22:34:13Z", "author": {"login": "tivv"}, "path": "cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormatProvider.java", "diffHunk": "@@ -34,7 +33,7 @@ public LimitingInputFormatProvider(InputFormatProvider delegate, int maxRecords)\n \n   private static Map<String, String> getConfiguration(InputFormatProvider delegate, int maxRecords) {\n     Map<String, String> config = new HashMap<>(delegate.getInputFormatConfiguration());\n-    config.put(DelegatingInputFormat.DELEGATE_CLASS_NAME, delegate.getInputFormatClassName());\n+    config.put(LimitingInputFormat.DELEGATE_CLASS_NAME, delegate.getInputFormatClassName());\n     config.put(LimitingInputFormat.MAX_RECORDS, String.valueOf(maxRecords));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2027cd4c08044af9d67565b6ba7f9f9b28ce92a4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3NDI0MA==", "bodyText": "We actually want to overwrite here (e.g. the MAX_RECORDS).", "url": "https://github.com/cdapio/cdap/pull/12826#discussion_r513074240", "createdAt": "2020-10-27T22:37:43Z", "author": {"login": "chtyim"}, "path": "cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormatProvider.java", "diffHunk": "@@ -34,7 +33,7 @@ public LimitingInputFormatProvider(InputFormatProvider delegate, int maxRecords)\n \n   private static Map<String, String> getConfiguration(InputFormatProvider delegate, int maxRecords) {\n     Map<String, String> config = new HashMap<>(delegate.getInputFormatConfiguration());\n-    config.put(DelegatingInputFormat.DELEGATE_CLASS_NAME, delegate.getInputFormatClassName());\n+    config.put(LimitingInputFormat.DELEGATE_CLASS_NAME, delegate.getInputFormatClassName());\n     config.put(LimitingInputFormat.MAX_RECORDS, String.valueOf(maxRecords));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3MjkyMQ=="}, "originalCommit": {"oid": "2027cd4c08044af9d67565b6ba7f9f9b28ce92a4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3OTc2MQ==", "bodyText": "OK, then", "url": "https://github.com/cdapio/cdap/pull/12826#discussion_r513079761", "createdAt": "2020-10-27T22:53:33Z", "author": {"login": "tivv"}, "path": "cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormatProvider.java", "diffHunk": "@@ -34,7 +33,7 @@ public LimitingInputFormatProvider(InputFormatProvider delegate, int maxRecords)\n \n   private static Map<String, String> getConfiguration(InputFormatProvider delegate, int maxRecords) {\n     Map<String, String> config = new HashMap<>(delegate.getInputFormatConfiguration());\n-    config.put(DelegatingInputFormat.DELEGATE_CLASS_NAME, delegate.getInputFormatClassName());\n+    config.put(LimitingInputFormat.DELEGATE_CLASS_NAME, delegate.getInputFormatClassName());\n     config.put(LimitingInputFormat.MAX_RECORDS, String.valueOf(maxRecords));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3MjkyMQ=="}, "originalCommit": {"oid": "2027cd4c08044af9d67565b6ba7f9f9b28ce92a4"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3103, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}