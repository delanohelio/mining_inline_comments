{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MDMxMTE4", "number": 12342, "title": "[CDAP-16975][CDAP-16976] Select latest version as default when choosing a plugin in UI + reset default plugins post upgrade", "bodyText": "JIRAs:\nhttps://issues.cask.co/browse/CDAP-16975\nhttps://issues.cask.co/browse/CDAP-16976\nContext:\n\nThe Current behavior of UI is to default to a specific version of the plugin once chosen by the user forever.\nThis will be a problem when the user upgrades their CDAP instance\nWe want them to use the latest version of the plugin upon upgrade.\nAs part of this we do two things,\n\n\nMake sure if there is no default version for a plugin in the user store, choose the latest version among the list of available versions of the plugin\nIf the user, for some reason chooses an older version of the plugin, then default to that particular plugin.\nOnce the user upgrades the CDAP instance we then reset the default plugin versions in the user store.\nThis will help the user choose the latest version of the plugin when they upgrade. And after this if the user chooses to use an older version they can do so and that will be defaulted to from then on.", "createdAt": "2020-06-16T07:37:25Z", "url": "https://github.com/cdapio/cdap/pull/12342", "merged": true, "mergeCommit": {"oid": "d8a47cb97282e409eaf92d91a198493fee0940b9"}, "closed": true, "closedAt": "2020-06-16T21:46:26Z", "author": {"login": "ajainarayanan"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcrwUebABqjM0NDc2NTcxMDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcr7H0hABqjM0NTA3MDUyMTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d7ef33d323a5b926928fc6ea964df70628dfbad", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/4d7ef33d323a5b926928fc6ea964df70628dfbad", "committedDate": "2020-06-16T07:31:27Z", "message": "[CDAP-16976] Reset the default plugin store post CDAP upgrade\n\nThis is to ensure we have the following behavior,\n\n1. Pre-upgrade - When the user chooses a plugin from side panel in studio we\nchoose the latest version and set that as default.\n\n2. Pre-upgrade - When the user consciously changes to a older version of the plugin we\ndefault to that specific version after that.\n\n3. Post-upgrade - Once the user upgrades the CDAP platform, we no longer want them to use\nthe default plugin version they were using in the previous version of CDAP. So we reset\nthe default plugins and start afresh\n\n4. Post-upgrade, Post-reset - After reset post upgrade we then follow the pre-upgrade behavior\nwhere from then on we choose the latest version of the plugin for the first time and default\nto that for subsequent usage.\n\nAs part of that we now store the current version of CDAP in the user store. Post upgrade\nthere will be a mis-match between the cdap version in the user store and the current cdap\nversion the user is running, indicating that there was an upgrade upon which we then reset."}, "afterCommit": {"oid": "ade72ce92c3a515f8122f2a3fa9e9d6c53e36802", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/ade72ce92c3a515f8122f2a3fa9e9d6c53e36802", "committedDate": "2020-06-16T07:42:29Z", "message": "[CDAP-16976] Reset the default plugin store post CDAP upgrade\n\nThis is to ensure we have the following behavior,\n\n1. Pre-upgrade - When the user chooses a plugin from side panel in studio we\nchoose the latest version and set that as default.\n\n2. Pre-upgrade - When the user consciously changes to a older version of the plugin we\ndefault to that specific version after that.\n\n3. Post-upgrade - Once the user upgrades the CDAP platform, we no longer want them to use\nthe default plugin version they were using in the previous version of CDAP. So we reset\nthe default plugins and start afresh\n\n4. Post-upgrade, Post-reset - After reset post upgrade we then follow the pre-upgrade behavior\nwhere from then on we choose the latest version of the plugin for the first time and default\nto that for subsequent usage.\n\nAs part of that we now store the current version of CDAP in the user store. Post upgrade\nthere will be a mis-match between the cdap version in the user store and the current cdap\nversion the user is running, indicating that there was an upgrade upon which we then reset."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aa40701504fc1fd140009848edab8eae2ec354c6", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/aa40701504fc1fd140009848edab8eae2ec354c6", "committedDate": "2020-06-16T07:45:50Z", "message": "Fixes jshint errors in gulp build"}, "afterCommit": {"oid": "b4836ba39f6eec853bc06e1bdbbbc0ded55358b0", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/b4836ba39f6eec853bc06e1bdbbbc0ded55358b0", "committedDate": "2020-06-16T07:54:27Z", "message": "Fixes jshint errors in gulp build"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNzEzNzE2", "url": "https://github.com/cdapio/cdap/pull/12342#pullrequestreview-431713716", "createdAt": "2020-06-16T17:01:28Z", "commit": {"oid": "b4836ba39f6eec853bc06e1bdbbbc0ded55358b0"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzowMToyOVrOGkk2HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzowNTowNFrOGkk-Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAwNTU5Nw==", "bodyText": "I think all these promises need to be chained since they could overwrite each other?", "url": "https://github.com/cdapio/cdap/pull/12342#discussion_r441005597", "createdAt": "2020-06-16T17:01:29Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/hydrator/controllers/create/leftpanel-ctrl.js", "diffHunk": "@@ -96,7 +96,15 @@ class HydratorPlusPlusLeftPanelCtrl {\n         type: this.LEFTPANELSTORE_ACTIONS.PLUGIN_DEFAULT_VERSION_CHECK_AND_UPDATE\n       });\n       const defaultVersionMap = this.leftpanelStore.getState().plugins.pluginToVersionMap;\n-      this.mySettings.set('plugin-default-version', defaultVersionMap);\n+      this.mySettings.get('CURRENT_CDAP_VERSION')\n+      .then((defaultCDAPVersion) => {\n+        if (this.rVersion.version !== defaultCDAPVersion) {\n+          this.mySettings.set('plugin-default-version', {});\n+          this.mySettings.set('CURRENT_CDAP_VERSION', this.rVersion.version);\n+          return;\n+        }\n+        this.mySettings.set('plugin-default-version', defaultVersionMap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4836ba39f6eec853bc06e1bdbbbc0ded55358b0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAwNzYxOQ==", "bodyText": "why do we need to do this twice in line 158 and 167?", "url": "https://github.com/cdapio/cdap/pull/12342#discussion_r441007619", "createdAt": "2020-06-16T17:05:04Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/hydrator/services/hydrator-node-service.js", "diffHunk": "@@ -140,6 +140,37 @@ class HydratorPlusPlusNodeService {\n \n     return true;\n   }\n+\n+  getPluginToArtifactMap(plugins = []) {\n+    let typeMap = {};\n+    plugins.forEach( plugin => {\n+      typeMap[plugin.name] = typeMap[plugin.name] || [];\n+      typeMap[plugin.name].push(plugin);\n+    });\n+    return typeMap;\n+  }\n+\n+  getDefaultVersionForPlugin(plugin = {}, defaultVersionMap = {}) {\n+    if (!Object.keys(plugin).length) {\n+      return {};\n+    }\n+    if (Object.keys(defaultVersionMap).length) {\n+      const highestVersion = window.CaskCommon.VersionUtilities.findHighestVersion(plugin.allArtifacts.map((plugin) => plugin.artifact.version), true);\n+      return plugin.allArtifacts.find((plugin) => plugin.artifact.version === highestVersion);\n+    }\n+    let defaultVersionsList = Object.keys(defaultVersionMap);\n+    let key = `${plugin.name}-${plugin.type}-${plugin.artifact.name}`;\n+    let isDefaultVersionExists = defaultVersionsList.indexOf(key) !== -1;\n+\n+    let isArtifactExistsInBackend = (plugin.allArtifacts || []).filter(plug => angular.equals(plug.artifact, defaultVersionMap[key]));\n+    if (!isDefaultVersionExists || !isArtifactExistsInBackend.length) {\n+      const highestVersion = window.CaskCommon.VersionUtilities.findHighestVersion(plugin.allArtifacts.map((plugin) => plugin.artifact.version), true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4836ba39f6eec853bc06e1bdbbbc0ded55358b0"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxODA4OTYy", "url": "https://github.com/cdapio/cdap/pull/12342#pullrequestreview-431808962", "createdAt": "2020-06-16T19:03:13Z", "commit": {"oid": "71266939aedba28fce6e89952ed6ee0311770d61"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10e8ef7a04f746e9a6416704644619699516eef9", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/10e8ef7a04f746e9a6416704644619699516eef9", "committedDate": "2020-06-16T20:17:31Z", "message": "[CDAP-16975] Default to latest version while adding plugin from left panel +  [CDAP-16976] Reset the default plugin store post CDAP upgrade\n\nThis is to ensure we have the following behavior,\n\n1. Pre-upgrade - When the user chooses a plugin from side panel in studio we\nchoose the latest version and set that as default.\n\n2. Pre-upgrade - When the user consciously changes to a older version of the plugin we\ndefault to that specific version after that.\n\n3. Post-upgrade - Once the user upgrades the CDAP platform, we no longer want them to use\nthe default plugin version they were using in the previous version of CDAP. So we reset\nthe default plugins and start afresh\n\n4. Post-upgrade, Post-reset - After reset post upgrade we then follow the pre-upgrade behavior\nwhere from then on we choose the latest version of the plugin for the first time and default\nto that for subsequent usage.\n\nAs part of that we now store the current version of CDAP in the user store. Post upgrade\nthere will be a mis-match between the cdap version in the user store and the current cdap\nversion the user is running, indicating that there was an upgrade upon which we then reset."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "71266939aedba28fce6e89952ed6ee0311770d61", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/71266939aedba28fce6e89952ed6ee0311770d61", "committedDate": "2020-06-16T18:57:45Z", "message": "Addresses review comments"}, "afterCommit": {"oid": "10e8ef7a04f746e9a6416704644619699516eef9", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/10e8ef7a04f746e9a6416704644619699516eef9", "committedDate": "2020-06-16T20:17:31Z", "message": "[CDAP-16975] Default to latest version while adding plugin from left panel +  [CDAP-16976] Reset the default plugin store post CDAP upgrade\n\nThis is to ensure we have the following behavior,\n\n1. Pre-upgrade - When the user chooses a plugin from side panel in studio we\nchoose the latest version and set that as default.\n\n2. Pre-upgrade - When the user consciously changes to a older version of the plugin we\ndefault to that specific version after that.\n\n3. Post-upgrade - Once the user upgrades the CDAP platform, we no longer want them to use\nthe default plugin version they were using in the previous version of CDAP. So we reset\nthe default plugins and start afresh\n\n4. Post-upgrade, Post-reset - After reset post upgrade we then follow the pre-upgrade behavior\nwhere from then on we choose the latest version of the plugin for the first time and default\nto that for subsequent usage.\n\nAs part of that we now store the current version of CDAP in the user store. Post upgrade\nthere will be a mis-match between the cdap version in the user store and the current cdap\nversion the user is running, indicating that there was an upgrade upon which we then reset."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2033, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}