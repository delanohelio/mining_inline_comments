{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MDIyNTI4", "number": 11866, "title": "[CDAP-16230][CDAP-16231] Replicator Review and Assessment", "bodyText": "JIRAs:\n\nhttps://issues.cask.co/browse/CDAP-16230\nhttps://issues.cask.co/browse/CDAP-16231", "createdAt": "2020-02-13T18:29:09Z", "url": "https://github.com/cdapio/cdap/pull/11866", "merged": true, "mergeCommit": {"oid": "aa8b3d85126b147750b1fd54c5199e097fb0015f"}, "closed": true, "closedAt": "2020-03-02T19:02:38Z", "author": {"login": "elfenheart"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcD_RS_AH2gAyMzc1MDIyNTI4OmQyMjkzZGRlNjI1ZWE1OGI1ZTI4ZjA1YmFjNzA4ZDAxMTk0OGQ3NTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJyfqJAH2gAyMzc1MDIyNTI4Ojk4YWE4NzI4ZTQ5YTliYTg2ZDYwNjc2MjNlNzIzYjIyZTY5N2VlZTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d2293dde625ea58b5e28f05bac708d011948d750", "author": {"user": {"login": "elfenheart", "name": "Edwin Elia"}}, "url": "https://github.com/cdapio/cdap/commit/d2293dde625ea58b5e28f05bac708d011948d750", "committedDate": "2020-02-13T18:30:46Z", "message": "[CDAP-16231] replicator add review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3990b9c9a0855491270180978b684cb2e980a985", "author": {"user": {"login": "elfenheart", "name": "Edwin Elia"}}, "url": "https://github.com/cdapio/cdap/commit/3990b9c9a0855491270180978b684cb2e980a985", "committedDate": "2020-02-13T00:43:05Z", "message": "add Assessments and DML events filtering"}, "afterCommit": {"oid": "90a063c4f6fc90375158db4ac570d1aaeca493bd", "author": {"user": {"login": "elfenheart", "name": "Edwin Elia"}}, "url": "https://github.com/cdapio/cdap/commit/90a063c4f6fc90375158db4ac570d1aaeca493bd", "committedDate": "2020-02-13T18:31:10Z", "message": "[CDAP-16231] replicator add assessment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be574fb743d7a36b7f900bb8a23b7b238686998d", "author": {"user": {"login": "elfenheart", "name": "Edwin Elia"}}, "url": "https://github.com/cdapio/cdap/commit/be574fb743d7a36b7f900bb8a23b7b238686998d", "committedDate": "2020-02-13T18:31:55Z", "message": "[CDAP-16230] replicator add assessment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "90a063c4f6fc90375158db4ac570d1aaeca493bd", "author": {"user": {"login": "elfenheart", "name": "Edwin Elia"}}, "url": "https://github.com/cdapio/cdap/commit/90a063c4f6fc90375158db4ac570d1aaeca493bd", "committedDate": "2020-02-13T18:31:10Z", "message": "[CDAP-16231] replicator add assessment"}, "afterCommit": {"oid": "be574fb743d7a36b7f900bb8a23b7b238686998d", "author": {"user": {"login": "elfenheart", "name": "Edwin Elia"}}, "url": "https://github.com/cdapio/cdap/commit/be574fb743d7a36b7f900bb8a23b7b238686998d", "committedDate": "2020-02-13T18:31:55Z", "message": "[CDAP-16230] replicator add assessment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDk1MjM4", "url": "https://github.com/cdapio/cdap/pull/11866#pullrequestreview-361495238", "createdAt": "2020-02-19T22:45:51Z", "commit": {"oid": "be574fb743d7a36b7f900bb8a23b7b238686998d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMjo0NTo1MVrOFr6eHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMjo0NTo1MVrOFr6eHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU5MTA3MQ==", "bodyText": "Why any? (same question for features below)", "url": "https://github.com/cdapio/cdap/pull/11866#discussion_r381591071", "createdAt": "2020-02-19T22:45:51Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/Assessment/ConnectivityAssessment/index.tsx", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    gridWrapper: {\n+      height: '100%',\n+\n+      '& .grid.grid-container.grid-compact': {\n+        maxHeight: '100%',\n+\n+        '& .grid-row': {\n+          gridTemplateColumns: '1fr 2fr 1fr 1fr',\n+          gridColumnGap: '50px',\n+        },\n+      },\n+    },\n+  };\n+};\n+\n+interface IConnectivityAssessmentProps extends WithStyles<typeof styles> {\n+  connectivity: any;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be574fb743d7a36b7f900bb8a23b7b238686998d"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDk4NTc0", "url": "https://github.com/cdapio/cdap/pull/11866#pullrequestreview-361498574", "createdAt": "2020-02-19T22:52:32Z", "commit": {"oid": "be574fb743d7a36b7f900bb8a23b7b238686998d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMjo1MjozMlrOFr6pPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMjo1MjozMlrOFr6pPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU5MzkxNw==", "bodyText": "Can we use the heading component here, and for the other headings?", "url": "https://github.com/cdapio/cdap/pull/11866#discussion_r381593917", "createdAt": "2020-02-19T22:52:32Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/Assessment/TablesAssessment/Mappings/index.tsx", "diffHunk": "@@ -0,0 +1,236 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import { createContextConnect, ICreateContext } from 'components/Replicator/Create';\n+import Button from '@material-ui/core/Button';\n+import { MyReplicatorApi } from 'api/replicator';\n+import { getCurrentNamespace } from 'services/NamespaceStore';\n+import If from 'components/If';\n+import LoadingSVG from 'components/LoadingSVG';\n+import capitalize from 'lodash/capitalize';\n+import IconSVG from 'components/IconSVG';\n+import classnames from 'classnames';\n+\n+function convertHexToRGB(color) {\n+  function parseHex(hex) {\n+    return parseInt(hex, 16);\n+  }\n+\n+  const red = color.substring(1, 3);\n+  const green = color.substring(3, 5);\n+  const blue = color.substring(5, 7);\n+\n+  return `${parseHex(red)}, ${parseHex(green)}, ${parseHex(blue)}`;\n+}\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    root: {\n+      position: 'absolute',\n+      top: '50px',\n+      bottom: '54px',\n+      left: 0,\n+      right: 0,\n+      background: theme.palette.white[50],\n+      zIndex: 10,\n+    },\n+    header: {\n+      display: 'grid',\n+      gridTemplateColumns: '70% 30%',\n+      height: '60px',\n+      backgroundColor: theme.palette.grey[700],\n+      borderBottom: `1px solid ${theme.palette.grey[400]}`,\n+      alignContent: 'center',\n+      '& > div': {\n+        padding: '0 15px',\n+      },\n+    },\n+    actionButtons: {\n+      textAlign: 'right',\n+    },\n+    mappings: {\n+      '& .grid-wrapper': {\n+        '& .grid.grid-container.grid-compact': {\n+          '& .grid-row': {\n+            gridTemplateColumns: '120px 2fr 1fr 2fr 1fr',\n+            '& > div': {\n+              '&:nth-child(3)': {\n+                borderRight: `1px solid ${theme.palette.grey[400]}`,\n+              },\n+            },\n+          },\n+\n+          '& .grid-body .grid-row > div': {\n+            '&:first-child': {\n+              borderLeft: `7px solid`,\n+            },\n+          },\n+        },\n+      },\n+    },\n+    supportContainer: {\n+      '& > span': {\n+        marginLeft: '5px',\n+      },\n+    },\n+    source: {\n+      gridColumn: '1 / span 3',\n+      borderRight: `1px solid ${theme.palette.grey[400]}`,\n+    },\n+    target: {\n+      gridColumn: '4 / span 2',\n+    },\n+    green: {\n+      color: theme.palette.green[50],\n+    },\n+    red: {\n+      color: theme.palette.red[100],\n+    },\n+    greenBox: {\n+      borderLeftColor: `rgba(${convertHexToRGB(theme.palette.green[50])}, 0.6) !important`,\n+    },\n+    redBox: {\n+      borderLeftColor: `rgba(${convertHexToRGB(theme.palette.red[100])}, 0.3) !important`,\n+    },\n+    supportIcon: {\n+      marginTop: '-2px',\n+    },\n+  };\n+};\n+\n+interface IMappingsProps extends ICreateContext, WithStyles<typeof styles> {\n+  tableInfo: {\n+    database: string;\n+    table: string;\n+  };\n+  onClose: () => void;\n+}\n+\n+const MappingsView: React.FC<IMappingsProps> = ({ classes, tableInfo, onClose, draftId }) => {\n+  const [columns, setColumns] = React.useState([]);\n+  const [error, setError] = React.useState(null);\n+  const [loading, setLoading] = React.useState(true);\n+\n+  React.useEffect(() => {\n+    const params = {\n+      namespace: getCurrentNamespace(),\n+      draftId,\n+    };\n+\n+    const body = {\n+      database: tableInfo.database,\n+      table: tableInfo.table,\n+    };\n+\n+    MyReplicatorApi.assessTable(params, body).subscribe(\n+      (res) => {\n+        setColumns(res.columns);\n+        setLoading(false);\n+      },\n+      (err) => {\n+        setError(err);\n+        setLoading(false);\n+      }\n+    );\n+  }, []);\n+\n+  return (\n+    <div className={classes.root}>\n+      <div className={classes.header}>\n+        <div>\n+          <h4>{tableInfo.table}</h4>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be574fb743d7a36b7f900bb8a23b7b238686998d"}, "originalPosition": 156}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNTAwODM5", "url": "https://github.com/cdapio/cdap/pull/11866#pullrequestreview-361500839", "createdAt": "2020-02-19T22:57:19Z", "commit": {"oid": "be574fb743d7a36b7f900bb8a23b7b238686998d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMjo1NzoxOVrOFr6wZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMjo1NzoxOVrOFr6wZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU5NTc1MA==", "bodyText": "Doesn't look like this is needed", "url": "https://github.com/cdapio/cdap/pull/11866#discussion_r381595750", "createdAt": "2020-02-19T22:57:19Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/Replicator/Create/index.tsx", "diffHunk": "@@ -313,9 +381,16 @@ class CreateView extends React.PureComponent<ICreateProps, ICreateContext> {\n         description: this.state.description,\n         connections,\n         stages,\n+        tables: constructTablesSelection(\n+          this.state.tables,\n+          this.state.columns,\n+          this.state.dmlBlacklist\n+        ),\n       },\n     };\n \n+    // tslint:disable-next-line: no-console\n+    console.log('body', body);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be574fb743d7a36b7f900bb8a23b7b238686998d"}, "originalPosition": 184}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1OTE3Nzcy", "url": "https://github.com/cdapio/cdap/pull/11866#pullrequestreview-365917772", "createdAt": "2020-02-27T18:59:33Z", "commit": {"oid": "be574fb743d7a36b7f900bb8a23b7b238686998d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODo1OTozM1rOFvdXKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODo1OTozM1rOFvdXKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMwODQ1OQ==", "bodyText": "This naming is a little bit confusing to me and doesn't sound like it would be a boolean value. It looks like if viewMore is false, that means they are not viewing the full config (i.e. they are not viewing more currently). Maybe \"viewingMore\"?", "url": "https://github.com/cdapio/cdap/pull/11866#discussion_r385308459", "createdAt": "2020-02-27T18:59:33Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/Replicator/ConfigDisplay/index.tsx", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import PluginConfigDisplay from 'components/Replicator/ConfigDisplay/PluginConfigDisplay';\n+import classnames from 'classnames';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    gridContainer: {\n+      display: 'grid',\n+      gridTemplateColumns: '45% 45%',\n+      gridColumnGap: '10%',\n+    },\n+    container: {\n+      padding: '15px 0',\n+      maxHeight: '300px',\n+      overflow: 'hidden',\n+    },\n+    expanded: {\n+      maxHeight: 'initial',\n+    },\n+    sectionTitle: {\n+      marginBottom: '5px',\n+    },\n+    viewMoreContainer: {\n+      padding: '5px',\n+      backgroundColor: theme.palette.white[50],\n+      '& > div > span': {\n+        color: theme.palette.blue[100],\n+        cursor: 'pointer',\n+        '&:hover': {\n+          textDecoration: 'underline',\n+        },\n+      },\n+    },\n+  };\n+};\n+\n+interface IConfigDisplayProps extends WithStyles<typeof styles> {\n+  sourcePluginInfo: any;\n+  targetPluginInfo: any;\n+  sourcePluginWidget: any;\n+  targetPluginWidget: any;\n+  sourceConfig: Record<string, string>;\n+  targetConfig: Record<string, string>;\n+}\n+\n+const ConfigDisplayView: React.FC<IConfigDisplayProps> = ({\n+  classes,\n+  sourcePluginInfo,\n+  targetPluginInfo,\n+  sourcePluginWidget,\n+  targetPluginWidget,\n+  sourceConfig,\n+  targetConfig,\n+}) => {\n+  const [viewMore, setViewMore] = React.useState(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be574fb743d7a36b7f900bb8a23b7b238686998d"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1OTE5OTk4", "url": "https://github.com/cdapio/cdap/pull/11866#pullrequestreview-365919998", "createdAt": "2020-02-27T19:02:45Z", "commit": {"oid": "be574fb743d7a36b7f900bb8a23b7b238686998d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTowMjo0NlrOFvdd4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTowMjo0NlrOFvdd4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMxMDE3Nw==", "bodyText": "This wording sounds incomplete - maybe \"See more/less configuration properties\"?", "url": "https://github.com/cdapio/cdap/pull/11866#discussion_r385310177", "createdAt": "2020-02-27T19:02:46Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/Replicator/ConfigDisplay/index.tsx", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import PluginConfigDisplay from 'components/Replicator/ConfigDisplay/PluginConfigDisplay';\n+import classnames from 'classnames';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    gridContainer: {\n+      display: 'grid',\n+      gridTemplateColumns: '45% 45%',\n+      gridColumnGap: '10%',\n+    },\n+    container: {\n+      padding: '15px 0',\n+      maxHeight: '300px',\n+      overflow: 'hidden',\n+    },\n+    expanded: {\n+      maxHeight: 'initial',\n+    },\n+    sectionTitle: {\n+      marginBottom: '5px',\n+    },\n+    viewMoreContainer: {\n+      padding: '5px',\n+      backgroundColor: theme.palette.white[50],\n+      '& > div > span': {\n+        color: theme.palette.blue[100],\n+        cursor: 'pointer',\n+        '&:hover': {\n+          textDecoration: 'underline',\n+        },\n+      },\n+    },\n+  };\n+};\n+\n+interface IConfigDisplayProps extends WithStyles<typeof styles> {\n+  sourcePluginInfo: any;\n+  targetPluginInfo: any;\n+  sourcePluginWidget: any;\n+  targetPluginWidget: any;\n+  sourceConfig: Record<string, string>;\n+  targetConfig: Record<string, string>;\n+}\n+\n+const ConfigDisplayView: React.FC<IConfigDisplayProps> = ({\n+  classes,\n+  sourcePluginInfo,\n+  targetPluginInfo,\n+  sourcePluginWidget,\n+  targetPluginWidget,\n+  sourceConfig,\n+  targetConfig,\n+}) => {\n+  const [viewMore, setViewMore] = React.useState(false);\n+\n+  function toggleViewMore() {\n+    setViewMore(!viewMore);\n+  }\n+\n+  return (\n+    <div className={classes.root}>\n+      <div\n+        className={classnames(classes.container, classes.gridContainer, {\n+          [classes.expanded]: viewMore,\n+        })}\n+      >\n+        <div>\n+          <h5 className={classes.sectionTitle}>SOURCE</h5>\n+          <PluginConfigDisplay\n+            pluginInfo={sourcePluginInfo}\n+            pluginWidget={sourcePluginWidget}\n+            pluginConfig={sourceConfig}\n+          />\n+        </div>\n+\n+        <div>\n+          <h5 className={classes.sectionTitle}>TARGET</h5>\n+          <PluginConfigDisplay\n+            pluginInfo={targetPluginInfo}\n+            pluginWidget={targetPluginWidget}\n+            pluginConfig={targetConfig}\n+          />\n+        </div>\n+      </div>\n+      <div className={`${classes.gridContainer} ${classes.viewMoreContainer}`}>\n+        <div>\n+          <span onClick={toggleViewMore}>View {!viewMore ? 'more' : 'less'} configuration</span>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be574fb743d7a36b7f900bb8a23b7b238686998d"}, "originalPosition": 105}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1OTI0Mzcx", "url": "https://github.com/cdapio/cdap/pull/11866#pullrequestreview-365924371", "createdAt": "2020-02-27T19:09:32Z", "commit": {"oid": "be574fb743d7a36b7f900bb8a23b7b238686998d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTowOTozMlrOFvdrXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTowOTozMlrOFvdrXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMxMzYzMA==", "bodyText": "Comment about where/which components this is coming from?", "url": "https://github.com/cdapio/cdap/pull/11866#discussion_r385313630", "createdAt": "2020-02-27T19:09:32Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/Assessment/index.tsx", "diffHunk": "@@ -0,0 +1,155 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import { createContextConnect, ICreateContext } from 'components/Replicator/Create';\n+import { getCurrentNamespace } from 'services/NamespaceStore';\n+import { MyReplicatorApi } from 'api/replicator';\n+import TablesAssessment from 'components/Replicator/Create/Content/Assessment/TablesAssessment';\n+import If from 'components/If';\n+import classnames from 'classnames';\n+import LoadingSVGCentered from 'components/LoadingSVGCentered';\n+import ConnectivityAssessment from 'components/Replicator/Create/Content/Assessment/ConnectivityAssessment';\n+import FeaturesAssessment from 'components/Replicator/Create/Content/Assessment//FeaturesAssessment';\n+import StepButtons from 'components/Replicator/Create/Content/StepButtons';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    root: {\n+      padding: '25px 40px',\n+    },\n+    headerLinks: {\n+      marginBottom: '20px',\n+      marginTop: '30px',\n+    },\n+    link: {\n+      fontSize: '18px',\n+      marginRight: '75px',\n+      cursor: 'pointer',\n+      '&:hover': {\n+        borderBottom: `3px solid ${theme.palette.grey[300]}`,\n+      },\n+    },\n+    active: {\n+      fontWeight: 600,\n+      borderBottom: `3px solid ${theme.palette.grey[300]}`,\n+    },\n+    contentContainer: {\n+      height: 'calc(100% - 27px - 77px - 110px)',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be574fb743d7a36b7f900bb8a23b7b238686998d"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab7053da26997249c60bc622ea6bb27afe372bc8", "author": {"user": {"login": "elfenheart", "name": "Edwin Elia"}}, "url": "https://github.com/cdapio/cdap/commit/ab7053da26997249c60bc622ea6bb27afe372bc8", "committedDate": "2020-02-28T21:35:52Z", "message": "fix heading component"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1276ae5fd23cad80d8be9b48029f68a4f0b886cf", "author": {"user": {"login": "elfenheart", "name": "Edwin Elia"}}, "url": "https://github.com/cdapio/cdap/commit/1276ae5fd23cad80d8be9b48029f68a4f0b886cf", "committedDate": "2020-02-28T21:36:32Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f40d67163aa7157210c3b0f14768e694ced85bc2", "author": {"user": {"login": "elfenheart", "name": "Edwin Elia"}}, "url": "https://github.com/cdapio/cdap/commit/f40d67163aa7157210c3b0f14768e694ced85bc2", "committedDate": "2020-02-28T21:46:19Z", "message": "cleanups"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MDcwMDEy", "url": "https://github.com/cdapio/cdap/pull/11866#pullrequestreview-367070012", "createdAt": "2020-03-02T09:55:25Z", "commit": {"oid": "f40d67163aa7157210c3b0f14768e694ced85bc2"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwOTo1NToyNVrOFwZbgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwOTo1Nzo0NFrOFwZg8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI5MjYwOA==", "bodyText": "nit: Heading type", "url": "https://github.com/cdapio/cdap/pull/11866#discussion_r386292608", "createdAt": "2020-03-02T09:55:25Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/Replicator/ConfigDisplay/PluginConfigDisplay/index.tsx", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import { objectQuery } from 'services/helpers';\n+import difference from 'lodash/difference';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    configRow: {\n+      display: 'grid',\n+      gridTemplateColumns: '30% 60%',\n+      borderTop: `1px solid ${theme.palette.grey[300]}`,\n+      padding: `5px 10px`,\n+      '&:last-child': {\n+        borderBottom: `1px solid ${theme.palette.grey[300]}`,\n+      },\n+      '& > div': {\n+        wordBreak: 'break-word',\n+      },\n+    },\n+  };\n+};\n+\n+interface IPluginConfigProps extends WithStyles<typeof styles> {\n+  pluginInfo: any;\n+  pluginWidget: any;\n+  pluginConfig: any;\n+}\n+\n+const PluginConfigDisplayView: React.FC<IPluginConfigProps> = ({\n+  classes,\n+  pluginInfo,\n+  pluginWidget,\n+  pluginConfig,\n+}) => {\n+  const [config, setConfig] = React.useState([]);\n+\n+  React.useEffect(() => {\n+    const finalConfig = [];\n+    // get order and label name from widget\n+    // fill in values from config\n+    // remove empty\n+    const widgetProperties = [];\n+    (objectQuery(pluginWidget, 'configuration-groups') || []).forEach((groups) => {\n+      groups.properties.forEach((property) => {\n+        widgetProperties.push({\n+          name: property.name,\n+          label: property.label,\n+          type: property['widget-type'],\n+        });\n+      });\n+    });\n+\n+    widgetProperties.forEach((property) => {\n+      if (!pluginConfig[property.name]) {\n+        return;\n+      }\n+\n+      finalConfig.push({\n+        ...property,\n+        value: pluginConfig[property.name],\n+      });\n+    });\n+\n+    // add missing config group properties\n+    const configProperties = Object.keys(pluginConfig || {});\n+    const widgetNames = widgetProperties.map((property) => property.name);\n+\n+    difference(configProperties, widgetNames).forEach((propertyName) => {\n+      finalConfig.push({\n+        name: propertyName,\n+        label: propertyName,\n+        type: 'textbox',\n+        value: pluginConfig[propertyName],\n+      });\n+    });\n+\n+    setConfig(finalConfig);\n+  }, [pluginInfo, pluginWidget, pluginConfig]);\n+\n+  const displayName = objectQuery(pluginWidget, 'display-name') || objectQuery(pluginInfo, 'name');\n+\n+  return (\n+    <div>\n+      <h3>{displayName}</h3>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f40d67163aa7157210c3b0f14768e694ced85bc2"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI5Mjg5OQ==", "bodyText": "Same here.", "url": "https://github.com/cdapio/cdap/pull/11866#discussion_r386292899", "createdAt": "2020-03-02T09:55:54Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/Replicator/ConfigDisplay/index.tsx", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import PluginConfigDisplay from 'components/Replicator/ConfigDisplay/PluginConfigDisplay';\n+import classnames from 'classnames';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    gridContainer: {\n+      display: 'grid',\n+      gridTemplateColumns: '45% 45%',\n+      gridColumnGap: '10%',\n+    },\n+    container: {\n+      padding: '15px 0',\n+      maxHeight: '300px',\n+      overflow: 'hidden',\n+    },\n+    expanded: {\n+      maxHeight: 'initial',\n+    },\n+    sectionTitle: {\n+      marginBottom: '5px',\n+    },\n+    viewMoreContainer: {\n+      padding: '5px',\n+      backgroundColor: theme.palette.white[50],\n+      '& > div > span': {\n+        color: theme.palette.blue[100],\n+        cursor: 'pointer',\n+        '&:hover': {\n+          textDecoration: 'underline',\n+        },\n+      },\n+    },\n+  };\n+};\n+\n+interface IConfigDisplayProps extends WithStyles<typeof styles> {\n+  sourcePluginInfo: any;\n+  targetPluginInfo: any;\n+  sourcePluginWidget: any;\n+  targetPluginWidget: any;\n+  sourceConfig: Record<string, string>;\n+  targetConfig: Record<string, string>;\n+}\n+\n+const ConfigDisplayView: React.FC<IConfigDisplayProps> = ({\n+  classes,\n+  sourcePluginInfo,\n+  targetPluginInfo,\n+  sourcePluginWidget,\n+  targetPluginWidget,\n+  sourceConfig,\n+  targetConfig,\n+}) => {\n+  const [viewingMore, setViewingMore] = React.useState(false);\n+\n+  function toggleViewMore() {\n+    setViewingMore(!viewingMore);\n+  }\n+\n+  return (\n+    <div className={classes.root}>\n+      <div\n+        className={classnames(classes.container, classes.gridContainer, {\n+          [classes.expanded]: viewingMore,\n+        })}\n+      >\n+        <div>\n+          <h5 className={classes.sectionTitle}>SOURCE</h5>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f40d67163aa7157210c3b0f14768e694ced85bc2"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI5NDAwMQ==", "bodyText": "Any specific reason why we use !important? Can you add a comment?", "url": "https://github.com/cdapio/cdap/pull/11866#discussion_r386294001", "createdAt": "2020-03-02T09:57:44Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/Assessment/TablesAssessment/Mappings/index.tsx", "diffHunk": "@@ -0,0 +1,237 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import { createContextConnect, ICreateContext } from 'components/Replicator/Create';\n+import Button from '@material-ui/core/Button';\n+import { MyReplicatorApi } from 'api/replicator';\n+import { getCurrentNamespace } from 'services/NamespaceStore';\n+import If from 'components/If';\n+import LoadingSVG from 'components/LoadingSVG';\n+import capitalize from 'lodash/capitalize';\n+import IconSVG from 'components/IconSVG';\n+import classnames from 'classnames';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+\n+function convertHexToRGB(color) {\n+  function parseHex(hex) {\n+    return parseInt(hex, 16);\n+  }\n+\n+  const red = color.substring(1, 3);\n+  const green = color.substring(3, 5);\n+  const blue = color.substring(5, 7);\n+\n+  return `${parseHex(red)}, ${parseHex(green)}, ${parseHex(blue)}`;\n+}\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    root: {\n+      position: 'absolute',\n+      top: '50px',\n+      bottom: '54px',\n+      left: 0,\n+      right: 0,\n+      background: theme.palette.white[50],\n+      zIndex: 10,\n+    },\n+    header: {\n+      display: 'grid',\n+      gridTemplateColumns: '70% 30%',\n+      height: '60px',\n+      backgroundColor: theme.palette.grey[700],\n+      borderBottom: `1px solid ${theme.palette.grey[400]}`,\n+      alignContent: 'center',\n+      '& > div': {\n+        padding: '0 15px',\n+      },\n+    },\n+    actionButtons: {\n+      textAlign: 'right',\n+    },\n+    mappings: {\n+      '& .grid-wrapper': {\n+        '& .grid.grid-container.grid-compact': {\n+          '& .grid-row': {\n+            gridTemplateColumns: '120px 2fr 1fr 2fr 1fr',\n+            '& > div': {\n+              '&:nth-child(3)': {\n+                borderRight: `1px solid ${theme.palette.grey[400]}`,\n+              },\n+            },\n+          },\n+\n+          '& .grid-body .grid-row > div': {\n+            '&:first-child': {\n+              borderLeft: `7px solid`,\n+            },\n+          },\n+        },\n+      },\n+    },\n+    supportContainer: {\n+      '& > span': {\n+        marginLeft: '5px',\n+      },\n+    },\n+    source: {\n+      gridColumn: '1 / span 3',\n+      borderRight: `1px solid ${theme.palette.grey[400]}`,\n+    },\n+    target: {\n+      gridColumn: '4 / span 2',\n+    },\n+    green: {\n+      color: theme.palette.green[50],\n+    },\n+    red: {\n+      color: theme.palette.red[100],\n+    },\n+    greenBox: {\n+      borderLeftColor: `rgba(${convertHexToRGB(theme.palette.green[50])}, 0.6) !important`,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f40d67163aa7157210c3b0f14768e694ced85bc2"}, "originalPosition": 106}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98aa8728e49a9ba86d6067623e723b22e697eee3", "author": {"user": {"login": "elfenheart", "name": "Edwin Elia"}}, "url": "https://github.com/cdapio/cdap/commit/98aa8728e49a9ba86d6067623e723b22e697eee3", "committedDate": "2020-03-02T19:01:14Z", "message": "convert headings"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1259, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}