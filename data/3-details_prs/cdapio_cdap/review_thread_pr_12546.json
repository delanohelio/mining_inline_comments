{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5NjQ5MDE5", "number": 12546, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNzo0MDo0OVrOEUsqZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNzo0MzowOVrOEUsu7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTM4NzI3OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/hydrator/controllers/create/toppanel-ctrl.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNzo0MDo0OVrOG7Cv4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOTowOTowM1rOG8W7Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU2NDE5NA==", "bodyText": "Could we define enum for status type if it also has other status such as failure?", "url": "https://github.com/cdapio/cdap/pull/12546#discussion_r464564194", "createdAt": "2020-08-03T17:40:49Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/hydrator/controllers/create/toppanel-ctrl.js", "diffHunk": "@@ -678,15 +678,31 @@ class HydratorPlusPlusTopPanelCtrl {\n     };\n     this.previewLoading = true;\n     this.loadingLabel = 'Stopping';\n-    this.stopTimer();\n-    this.updateTimerLabelAndTitle();\n     this.myPipelineApi\n         .stopPreview(params, {})\n         .$promise\n         .then(\n-          (err) => {\n+          () => {\n+            this.stopTimer();\n+            this.updateTimerLabelAndTitle();\n             this.previewLoading = false;\n             this.previewRunning = false;\n+            this.dataSrc.stopPoll(this.pollId);\n+            this.pollId = null;\n+\n+            let pipelinePreviewPlaceholder = 'The preview of the pipeline';\n+            let pipelineName = this.HydratorPlusPlusConfigStore.getName();\n+            if (pipelineName.length > 0) {\n+              pipelinePreviewPlaceholder += ` \"${pipelineName}\"`;\n+            }\n+            this.myAlertOnValium.show({\n+              type: 'success',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdf0e17f117fdd08434e56611a7d855ee7c930c4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk0MzM2Nw==", "bodyText": "I believe these types are coming from an external library (ngStrap's alert) which we want to deprecate. I don't think it makes sense to add an enum for the status here, since the bigger to do is to replace this alert entirely.", "url": "https://github.com/cdapio/cdap/pull/12546#discussion_r465943367", "createdAt": "2020-08-05T19:09:03Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/hydrator/controllers/create/toppanel-ctrl.js", "diffHunk": "@@ -678,15 +678,31 @@ class HydratorPlusPlusTopPanelCtrl {\n     };\n     this.previewLoading = true;\n     this.loadingLabel = 'Stopping';\n-    this.stopTimer();\n-    this.updateTimerLabelAndTitle();\n     this.myPipelineApi\n         .stopPreview(params, {})\n         .$promise\n         .then(\n-          (err) => {\n+          () => {\n+            this.stopTimer();\n+            this.updateTimerLabelAndTitle();\n             this.previewLoading = false;\n             this.previewRunning = false;\n+            this.dataSrc.stopPoll(this.pollId);\n+            this.pollId = null;\n+\n+            let pipelinePreviewPlaceholder = 'The preview of the pipeline';\n+            let pipelineName = this.HydratorPlusPlusConfigStore.getName();\n+            if (pipelineName.length > 0) {\n+              pipelinePreviewPlaceholder += ` \"${pipelineName}\"`;\n+            }\n+            this.myAlertOnValium.show({\n+              type: 'success',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU2NDE5NA=="}, "originalCommit": {"oid": "fdf0e17f117fdd08434e56611a7d855ee7c930c4"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTM5MzgxOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/services/cask-angular-socket-datasource/datasource.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNzo0MTo1OVrOG7C0DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOToxNDowNlrOG8XFrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU2NTI2MA==", "bodyText": "Should we also check the nullness of bindings?\nconst resource = bindings && bindings[resourceId]? bindings[resourceId].resource : undefined;", "url": "https://github.com/cdapio/cdap/pull/12546#discussion_r464565260", "createdAt": "2020-08-03T17:41:59Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/services/cask-angular-socket-datasource/datasource.js", "diffHunk": "@@ -172,7 +172,7 @@ var socketDataSource = angular.module(PKG.name+'.services');\n \n       function startClientPoll(resourceId, bindings, interval) {\n         const intervalTimer = setTimeout(() => {\n-          const resource = bindings[resourceId].resource;\n+          const resource = bindings[resourceId]? bindings[resourceId].resource : undefined;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdf0e17f117fdd08434e56611a7d855ee7c930c4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk0NjAzMA==", "bodyText": "Good question - we check for the nullness of bindings before we call startClientPoll, so we don't need to do it here. Also, I don't think bindings can ever be null because we initialize it as an empty object anyway.", "url": "https://github.com/cdapio/cdap/pull/12546#discussion_r465946030", "createdAt": "2020-08-05T19:14:06Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/services/cask-angular-socket-datasource/datasource.js", "diffHunk": "@@ -172,7 +172,7 @@ var socketDataSource = angular.module(PKG.name+'.services');\n \n       function startClientPoll(resourceId, bindings, interval) {\n         const intervalTimer = setTimeout(() => {\n-          const resource = bindings[resourceId].resource;\n+          const resource = bindings[resourceId]? bindings[resourceId].resource : undefined;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU2NTI2MA=="}, "originalCommit": {"oid": "fdf0e17f117fdd08434e56611a7d855ee7c930c4"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTM5ODg3OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/hydrator/controllers/create/toppanel-ctrl.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNzo0MzowOVrOG7C3HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOToxNDozMVrOG8XGsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU2NjA0NQ==", "bodyText": "Can we use const for pipelineName, since its values are not changed?", "url": "https://github.com/cdapio/cdap/pull/12546#discussion_r464566045", "createdAt": "2020-08-03T17:43:09Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/hydrator/controllers/create/toppanel-ctrl.js", "diffHunk": "@@ -678,15 +678,31 @@ class HydratorPlusPlusTopPanelCtrl {\n     };\n     this.previewLoading = true;\n     this.loadingLabel = 'Stopping';\n-    this.stopTimer();\n-    this.updateTimerLabelAndTitle();\n     this.myPipelineApi\n         .stopPreview(params, {})\n         .$promise\n         .then(\n-          (err) => {\n+          () => {\n+            this.stopTimer();\n+            this.updateTimerLabelAndTitle();\n             this.previewLoading = false;\n             this.previewRunning = false;\n+            this.dataSrc.stopPoll(this.pollId);\n+            this.pollId = null;\n+\n+            let pipelinePreviewPlaceholder = 'The preview of the pipeline';\n+            let pipelineName = this.HydratorPlusPlusConfigStore.getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdf0e17f117fdd08434e56611a7d855ee7c930c4"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk0NjI5MA==", "bodyText": "Fixed!", "url": "https://github.com/cdapio/cdap/pull/12546#discussion_r465946290", "createdAt": "2020-08-05T19:14:31Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/hydrator/controllers/create/toppanel-ctrl.js", "diffHunk": "@@ -678,15 +678,31 @@ class HydratorPlusPlusTopPanelCtrl {\n     };\n     this.previewLoading = true;\n     this.loadingLabel = 'Stopping';\n-    this.stopTimer();\n-    this.updateTimerLabelAndTitle();\n     this.myPipelineApi\n         .stopPreview(params, {})\n         .$promise\n         .then(\n-          (err) => {\n+          () => {\n+            this.stopTimer();\n+            this.updateTimerLabelAndTitle();\n             this.previewLoading = false;\n             this.previewRunning = false;\n+            this.dataSrc.stopPoll(this.pollId);\n+            this.pollId = null;\n+\n+            let pipelinePreviewPlaceholder = 'The preview of the pipeline';\n+            let pipelineName = this.HydratorPlusPlusConfigStore.getName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU2NjA0NQ=="}, "originalCommit": {"oid": "fdf0e17f117fdd08434e56611a7d855ee7c930c4"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3141, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}