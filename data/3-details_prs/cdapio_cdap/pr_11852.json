{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNjgwNzU5", "number": 11852, "title": "[CDAP-16626][CDAP-16627] Replicator Source and Target List", "bodyText": "JIRAs:\n\nhttps://issues.cask.co/browse/CDAP-16226\nhttps://issues.cask.co/browse/CDAP-16227", "createdAt": "2020-02-06T02:45:23Z", "url": "https://github.com/cdapio/cdap/pull/11852", "merged": true, "mergeCommit": {"oid": "daeb088b9aaa0724ef80ad692f740ee6614169f6"}, "closed": true, "closedAt": "2020-03-02T18:31:11Z", "author": {"login": "elfenheart"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBhh8cgH2gAyMzcxNjgwNzU5OmFmNzAxMTFmNTllYWVhMWU5N2I4MGI3ZWVlMTYzMTY3ODFlNGYzNGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJqnJFAFqTM2NzA2NjM3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "af70111f59eaea1e97b80b7eee16316781e4f34c", "author": {"user": {"login": "elfenheart", "name": "Edwin Elia"}}, "url": "https://github.com/cdapio/cdap/commit/af70111f59eaea1e97b80b7eee16316781e4f34c", "committedDate": "2020-02-06T02:43:57Z", "message": "[CDAP-16626] Replicator source list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2a2833a0f3b5b4a8a08effdee2fb1db9cd41a1e", "author": {"user": {"login": "elfenheart", "name": "Edwin Elia"}}, "url": "https://github.com/cdapio/cdap/commit/c2a2833a0f3b5b4a8a08effdee2fb1db9cd41a1e", "committedDate": "2020-02-06T02:44:10Z", "message": "[CDAP-16227] Replicator target list"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MjMwNzg3", "url": "https://github.com/cdapio/cdap/pull/11852#pullrequestreview-365230787", "createdAt": "2020-02-26T20:49:17Z", "commit": {"oid": "c2a2833a0f3b5b4a8a08effdee2fb1db9cd41a1e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDo0OToxOFrOFu7rNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDo0OToxOFrOFu7rNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1NjUzNQ==", "bodyText": "Why do we need this?", "url": "https://github.com/cdapio/cdap/pull/11852#discussion_r384756535", "createdAt": "2020-02-26T20:49:18Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/HorizontalCarousel/index.tsx", "diffHunk": "@@ -0,0 +1,198 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import IconButton from '@material-ui/core/IconButton';\n+import KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n+import KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\n+import throttle from 'lodash/throttle';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    contentContainer: {\n+      paddingLeft: '60px',\n+      paddingRight: '60px',\n+      whiteSpace: 'nowrap',\n+      overflowX: 'scroll',\n+      scrollSnapType: 'x proximity',\n+      scrollPadding: '60px',\n+      display: 'flex',\n+      scrollBehavior: 'smooth',\n+      '-ms-overflow-style': 'none',\n+      '&::-webkit-scrollbar': {\n+        display: 'none',\n+      },\n+      '&:after': {\n+        content: '\"\"',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2a2833a0f3b5b4a8a08effdee2fb1db9cd41a1e"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MjQ0MDY2", "url": "https://github.com/cdapio/cdap/pull/11852#pullrequestreview-365244066", "createdAt": "2020-02-26T21:10:08Z", "commit": {"oid": "c2a2833a0f3b5b4a8a08effdee2fb1db9cd41a1e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToxMDowOFrOFu8Ufg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToxMDowOFrOFu8Ufg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc2NzEwMg==", "bodyText": "Should it be plural, i.e. \"search sources...\"?", "url": "https://github.com/cdapio/cdap/pull/11852#discussion_r384767102", "createdAt": "2020-02-26T21:10:08Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/TargetConfig/TargetList/index.tsx", "diffHunk": "@@ -0,0 +1,163 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import HorizontalCarousel from 'components/HorizontalCarousel';\n+import { fetchPluginsAndWidgets } from 'components/Replicator/utilities';\n+import { PluginType } from 'components/Replicator/constants';\n+import { objectQuery } from 'services/helpers';\n+import TextField from '@material-ui/core/TextField';\n+import InputAdornment from '@material-ui/core/InputAdornment';\n+import Search from '@material-ui/icons/Search';\n+import PluginCard from 'components/Replicator/List/PluginCard';\n+import classnames from 'classnames';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    header: {\n+      display: 'grid',\n+      gridTemplateColumns: '1fr 400px',\n+    },\n+    searchSection: {\n+      display: 'flex',\n+      alignItems: 'center',\n+      justifyContent: 'flex-end',\n+    },\n+    targetItem: {\n+      marginRight: '25px',\n+      cursor: 'pointer',\n+    },\n+    selected: {\n+      backgroundColor: theme.palette.grey[700],\n+    },\n+    search: {\n+      width: '200px',\n+      marginLeft: '20px',\n+    },\n+    listContainer: {\n+      marginTop: '15px',\n+      marginBottom: '15px',\n+    },\n+  };\n+};\n+\n+interface ITargetListProps extends WithStyles<typeof styles> {\n+  onSelect: (target) => void;\n+  currentSelection: any;\n+}\n+\n+const TargetListView: React.FC<ITargetListProps> = ({ classes, onSelect, currentSelection }) => {\n+  const [targets, setTargets] = React.useState([]);\n+  const [widgetMap, setWidgetMap] = React.useState({});\n+  const [search, setSearch] = React.useState('');\n+\n+  React.useEffect(() => {\n+    fetchPluginsAndWidgets(PluginType.target).subscribe((res) => {\n+      if (res.plugins.length === 1 && !currentSelection) {\n+        onSelect(res.plugins[0]);\n+      }\n+\n+      setTargets(res.plugins);\n+      setWidgetMap(res.widgetMap);\n+    });\n+  }, []);\n+\n+  function handleSearch(e) {\n+    const value = e.target.value;\n+    setSearch(value);\n+  }\n+\n+  if (targets.length === 1) {\n+    return null;\n+  }\n+\n+  let filteredTarget = targets;\n+  if (search.length > 0) {\n+    filteredTarget = targets.filter((target) => {\n+      const pluginKey = `${target.name}-${target.type}`;\n+      const displayName = objectQuery(widgetMap, pluginKey, 'display-name');\n+\n+      const normalizedSearch = search.toLowerCase();\n+\n+      if (target.name.toLowerCase().indexOf(normalizedSearch) !== -1) {\n+        return true;\n+      }\n+\n+      return displayName && displayName.toLowerCase().indexOf(normalizedSearch) !== -1;\n+    });\n+  }\n+\n+  return (\n+    <div>\n+      <div className={classes.header}>\n+        <div>\n+          <h4>Select target</h4>\n+        </div>\n+        <div className={classes.searchSection}>\n+          <div>\n+            {targets.length} {targets.length === 1 ? 'source' : 'sources'} available\n+          </div>\n+          <TextField\n+            className={classes.search}\n+            value={search}\n+            onChange={handleSearch}\n+            size=\"small\"\n+            variant=\"outlined\"\n+            placeholder=\"Search source by name\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2a2833a0f3b5b4a8a08effdee2fb1db9cd41a1e"}, "originalPosition": 120}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MjQ1MDA4", "url": "https://github.com/cdapio/cdap/pull/11852#pullrequestreview-365245008", "createdAt": "2020-02-26T21:11:39Z", "commit": {"oid": "c2a2833a0f3b5b4a8a08effdee2fb1db9cd41a1e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToxMTozOVrOFu8XXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToxMTozOVrOFu8XXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc2NzgzNw==", "bodyText": "I only see this twice, but might be nice to have a helper function for generating the plugin keys", "url": "https://github.com/cdapio/cdap/pull/11852#discussion_r384767837", "createdAt": "2020-02-26T21:11:39Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/TargetConfig/TargetList/index.tsx", "diffHunk": "@@ -0,0 +1,163 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import HorizontalCarousel from 'components/HorizontalCarousel';\n+import { fetchPluginsAndWidgets } from 'components/Replicator/utilities';\n+import { PluginType } from 'components/Replicator/constants';\n+import { objectQuery } from 'services/helpers';\n+import TextField from '@material-ui/core/TextField';\n+import InputAdornment from '@material-ui/core/InputAdornment';\n+import Search from '@material-ui/icons/Search';\n+import PluginCard from 'components/Replicator/List/PluginCard';\n+import classnames from 'classnames';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    header: {\n+      display: 'grid',\n+      gridTemplateColumns: '1fr 400px',\n+    },\n+    searchSection: {\n+      display: 'flex',\n+      alignItems: 'center',\n+      justifyContent: 'flex-end',\n+    },\n+    targetItem: {\n+      marginRight: '25px',\n+      cursor: 'pointer',\n+    },\n+    selected: {\n+      backgroundColor: theme.palette.grey[700],\n+    },\n+    search: {\n+      width: '200px',\n+      marginLeft: '20px',\n+    },\n+    listContainer: {\n+      marginTop: '15px',\n+      marginBottom: '15px',\n+    },\n+  };\n+};\n+\n+interface ITargetListProps extends WithStyles<typeof styles> {\n+  onSelect: (target) => void;\n+  currentSelection: any;\n+}\n+\n+const TargetListView: React.FC<ITargetListProps> = ({ classes, onSelect, currentSelection }) => {\n+  const [targets, setTargets] = React.useState([]);\n+  const [widgetMap, setWidgetMap] = React.useState({});\n+  const [search, setSearch] = React.useState('');\n+\n+  React.useEffect(() => {\n+    fetchPluginsAndWidgets(PluginType.target).subscribe((res) => {\n+      if (res.plugins.length === 1 && !currentSelection) {\n+        onSelect(res.plugins[0]);\n+      }\n+\n+      setTargets(res.plugins);\n+      setWidgetMap(res.widgetMap);\n+    });\n+  }, []);\n+\n+  function handleSearch(e) {\n+    const value = e.target.value;\n+    setSearch(value);\n+  }\n+\n+  if (targets.length === 1) {\n+    return null;\n+  }\n+\n+  let filteredTarget = targets;\n+  if (search.length > 0) {\n+    filteredTarget = targets.filter((target) => {\n+      const pluginKey = `${target.name}-${target.type}`;\n+      const displayName = objectQuery(widgetMap, pluginKey, 'display-name');\n+\n+      const normalizedSearch = search.toLowerCase();\n+\n+      if (target.name.toLowerCase().indexOf(normalizedSearch) !== -1) {\n+        return true;\n+      }\n+\n+      return displayName && displayName.toLowerCase().indexOf(normalizedSearch) !== -1;\n+    });\n+  }\n+\n+  return (\n+    <div>\n+      <div className={classes.header}>\n+        <div>\n+          <h4>Select target</h4>\n+        </div>\n+        <div className={classes.searchSection}>\n+          <div>\n+            {targets.length} {targets.length === 1 ? 'source' : 'sources'} available\n+          </div>\n+          <TextField\n+            className={classes.search}\n+            value={search}\n+            onChange={handleSearch}\n+            size=\"small\"\n+            variant=\"outlined\"\n+            placeholder=\"Search source by name\"\n+            InputProps={{\n+              startAdornment: (\n+                <InputAdornment position=\"start\">\n+                  <Search />\n+                </InputAdornment>\n+              ),\n+            }}\n+          />\n+        </div>\n+      </div>\n+\n+      <div className={classes.listContainer}>\n+        <HorizontalCarousel scrollAmount={150}>\n+          {filteredTarget.map((target) => {\n+            const pluginKey = `${target.name}-${target.type}`;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2a2833a0f3b5b4a8a08effdee2fb1db9cd41a1e"}, "originalPosition": 135}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MjUwMjA0", "url": "https://github.com/cdapio/cdap/pull/11852#pullrequestreview-365250204", "createdAt": "2020-02-26T21:19:52Z", "commit": {"oid": "c2a2833a0f3b5b4a8a08effdee2fb1db9cd41a1e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToxOTo1MlrOFu8pYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToxOTo1MlrOFu8pYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3MjQ0OQ==", "bodyText": "Are there any types we already have or could add for artifacts and plugins?", "url": "https://github.com/cdapio/cdap/pull/11852#discussion_r384772449", "createdAt": "2020-02-26T21:19:52Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/TargetConfig/index.tsx", "diffHunk": "@@ -42,15 +44,33 @@ const TargetConfigView: React.FC<ICreateContext & WithStyles<typeof styles>> = (\n   setTargetConfig,\n }) => {\n   const [values, setValues] = React.useState(targetConfig);\n+  const [loading, setLoading] = React.useState(false);\n \n-  // Fetch Target\n   React.useEffect(() => {\n-    // TODO: replace with data from Target List\n-    const artifactName = 'delta-bigquery-plugins';\n-    const artifactScope = 'SYSTEM';\n-    const pluginName = 'bigquery';\n+    if (targetPluginWidget || !targetPluginInfo) {\n+      return;\n+    }\n+\n+    const artifact = targetPluginInfo.artifact;\n+\n+    fetchPluginWidget(\n+      artifact.name,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2a2833a0f3b5b4a8a08effdee2fb1db9cd41a1e"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MjUxNjY5", "url": "https://github.com/cdapio/cdap/pull/11852#pullrequestreview-365251669", "createdAt": "2020-02-26T21:22:12Z", "commit": {"oid": "c2a2833a0f3b5b4a8a08effdee2fb1db9cd41a1e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToyMjoxMlrOFu8uWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToyMjoxMlrOFu8uWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3MzcyMA==", "bodyText": "Maybe add a comment about where the scroll amount is coming from?", "url": "https://github.com/cdapio/cdap/pull/11852#discussion_r384773720", "createdAt": "2020-02-26T21:22:12Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/Replicator/List/SourceList/index.tsx", "diffHunk": "@@ -15,49 +15,153 @@\n  */\n \n import * as React from 'react';\n-import { MyReplicatorApi } from 'api/replicator';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n import { getCurrentNamespace } from 'services/NamespaceStore';\n-import { PluginType } from 'components/Replicator/constants';\n import { Link } from 'react-router-dom';\n+import PluginCard from 'components/Replicator/List/PluginCard';\n+import HorizontalCarousel from 'components/HorizontalCarousel';\n+import { fetchPluginsAndWidgets } from 'components/Replicator/utilities';\n+import { PluginType } from 'components/Replicator/constants';\n+import TextField from '@material-ui/core/TextField';\n+import InputAdornment from '@material-ui/core/InputAdornment';\n+import Search from '@material-ui/icons/Search';\n+import { objectQuery } from 'services/helpers';\n+import If from 'components/If';\n+import LoadingSVG from 'components/LoadingSVG';\n \n-const SourceList: React.FC = () => {\n+const styles = (): StyleRules => {\n+  return {\n+    header: {\n+      display: 'grid',\n+      gridTemplateColumns: '1fr 400px',\n+    },\n+    searchSection: {\n+      display: 'flex',\n+      alignItems: 'center',\n+      justifyContent: 'flex-end',\n+    },\n+    link: {\n+      marginRight: '25px',\n+\n+      '&:hover': {\n+        textDecoration: 'none',\n+      },\n+    },\n+    search: {\n+      width: '200px',\n+      marginLeft: '20px',\n+    },\n+    listContainer: {\n+      marginTop: '15px',\n+      height: '100px',\n+    },\n+    loadingContainer: {\n+      width: '100%',\n+      height: '100%',\n+      display: 'flex',\n+      alignItems: 'center',\n+      justifyContent: 'center',\n+    },\n+  };\n+};\n+\n+const SourceListView: React.FC<WithStyles<typeof styles>> = ({ classes }) => {\n   const [sources, setSources] = React.useState([]);\n+  const [widgetMap, setWidgetMap] = React.useState({});\n+  const [search, setSearch] = React.useState('');\n+  const [loading, setLoading] = React.useState(true);\n \n   React.useEffect(() => {\n-    const params = {\n-      namespace: getCurrentNamespace(),\n-      pluginType: PluginType.source,\n-    };\n-\n-    MyReplicatorApi.getPlugins(params).subscribe((res) => {\n-      // TODO: aggregate versions\n-      setSources(res);\n+    fetchPluginsAndWidgets(PluginType.source).subscribe((res) => {\n+      setSources(res.plugins);\n+      setWidgetMap(res.widgetMap);\n+      setLoading(false);\n     });\n   }, []);\n \n+  function handleSearch(e) {\n+    const value = e.target.value;\n+    setSearch(value);\n+  }\n+\n+  let filteredSources = sources;\n+  if (search.length > 0) {\n+    filteredSources = sources.filter((source) => {\n+      const pluginKey = `${source.name}-${source.type}`;\n+      const displayName = objectQuery(widgetMap, pluginKey, 'display-name');\n+\n+      const normalizedSearch = search.toLowerCase();\n+\n+      if (source.name.toLowerCase().indexOf(normalizedSearch) !== -1) {\n+        return true;\n+      }\n+\n+      return displayName && displayName.toLowerCase().indexOf(normalizedSearch) !== -1;\n+    });\n+  }\n+\n   return (\n     <div>\n-      <h2>Sources</h2>\n-\n-      <ul>\n-        {sources.map((source) => {\n-          const { name: artifactName, version, scope } = source.artifact;\n-\n-          return (\n-            <li key={source.name}>\n-              <Link\n-                to={`/ns/${getCurrentNamespace()}/replicator/create/${artifactName}/${version}/${scope}/${\n-                  source.name\n-                }`}\n-              >\n-                {source.name}\n-              </Link>\n-            </li>\n-          );\n-        })}\n-      </ul>\n+      <div className={classes.header}>\n+        <div>\n+          <h4>Create new delta replicator</h4>\n+          <div>Start by selecting the source from where you want to replicate your data</div>\n+        </div>\n+        <div className={classes.searchSection}>\n+          <div>\n+            {sources.length} {sources.length === 1 ? 'source' : 'sources'} available\n+          </div>\n+          <TextField\n+            className={classes.search}\n+            value={search}\n+            onChange={handleSearch}\n+            size=\"small\"\n+            variant=\"outlined\"\n+            placeholder=\"Search source by name\"\n+            InputProps={{\n+              startAdornment: (\n+                <InputAdornment position=\"start\">\n+                  <Search />\n+                </InputAdornment>\n+              ),\n+            }}\n+          />\n+        </div>\n+      </div>\n+\n+      <div className={classes.listContainer}>\n+        <If condition={loading}>\n+          <div className={classes.loadingContainer}>\n+            <LoadingSVG />\n+          </div>\n+        </If>\n+        <If condition={!loading}>\n+          <HorizontalCarousel scrollAmount={150}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2a2833a0f3b5b4a8a08effdee2fb1db9cd41a1e"}, "originalPosition": 155}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b056cb2f0efc7140d693700276db0d76efbbb893", "author": {"user": {"login": "elfenheart", "name": "Edwin Elia"}}, "url": "https://github.com/cdapio/cdap/commit/b056cb2f0efc7140d693700276db0d76efbbb893", "committedDate": "2020-02-28T21:54:33Z", "message": "addressing comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MDY2Mzc4", "url": "https://github.com/cdapio/cdap/pull/11852#pullrequestreview-367066378", "createdAt": "2020-03-02T09:50:10Z", "commit": {"oid": "b056cb2f0efc7140d693700276db0d76efbbb893"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1236, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}