{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NjA1ODU3", "number": 12255, "title": "(CDAP-16669) New Dataproc provisioner for existing cluster", "bodyText": "This PR has two commits.\n\nRefactor the existing Dataproc provisioner code to extract common implementation for the ephemeral and existing clusters.\n\nIn the process, also clean some clumsy code around private cluster logic\n\n\nAdded a new provisioner for existing Dataproc cluster", "createdAt": "2020-06-04T05:54:03Z", "url": "https://github.com/cdapio/cdap/pull/12255", "merged": true, "mergeCommit": {"oid": "4d3fccccac6f6563b717a41b0d2a6ac3e497f72d"}, "closed": true, "closedAt": "2020-06-04T20:01:05Z", "author": {"login": "chtyim"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcn3T2FgH2gAyNDI3NjA1ODU3OmQwOGE2ZGRjNDBjNDcxMWUxNGEyMzlkMGU5Y2MzY2NhMzNmODJkMWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoBjYMABqjM0MDc5NzIyNTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d08a6ddc40c4711e14a239d0e9cc3cca33f82d1f", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/d08a6ddc40c4711e14a239d0e9cc3cca33f82d1f", "committedDate": "2020-06-04T05:35:35Z", "message": "(CDAP-16669) Refactor Dataproc Provisioner\n\n- Cleanup private instance logic. Delay private instance network check to create cluster call instead of from the create() method\n- Create abstract base Dataproc provisioner for different types of Dataproc based provisioner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc050313e3c1ae54fea42ea1fd6df603bcfd430b", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/dc050313e3c1ae54fea42ea1fd6df603bcfd430b", "committedDate": "2020-06-04T09:28:07Z", "message": "(CDAP-16669) Refactor Dataproc Provisioner\n\n- Cleanup private instance logic. Delay private instance network check to create cluster call instead of from the create() method\n- Create abstract base Dataproc provisioner for different types of Dataproc based provisioner"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f092bb877aaeae7de6953079a9319599220c3e60", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/f092bb877aaeae7de6953079a9319599220c3e60", "committedDate": "2020-06-04T05:49:17Z", "message": "(CDAP-16669) Added a new Dataproc provisioner for existing cluster"}, "afterCommit": {"oid": "599aaa8887ecc692163d6bd0ccecc7276668390d", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/599aaa8887ecc692163d6bd0ccecc7276668390d", "committedDate": "2020-06-04T09:28:35Z", "message": "(CDAP-16669) Added a new Dataproc provisioner for existing cluster"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NjU4NDg5", "url": "https://github.com/cdapio/cdap/pull/12255#pullrequestreview-424658489", "createdAt": "2020-06-04T17:10:13Z", "commit": {"oid": "599aaa8887ecc692163d6bd0ccecc7276668390d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNzoxMDoxM1rOGfPsGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNzoxMDoxM1rOGfPsGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxNjA4OA==", "bodyText": "nit: can use CLUSTER_NAME instead", "url": "https://github.com/cdapio/cdap/pull/12255#discussion_r435416088", "createdAt": "2020-06-04T17:10:13Z", "author": {"login": "CuriousVini"}, "path": "cdap-runtime-ext-dataproc/src/main/java/io/cdap/cdap/runtime/spi/provisioner/dataproc/ExistingDataprocProvisioner.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.runtime.spi.provisioner.dataproc;\n+\n+import com.google.common.base.Strings;\n+import io.cdap.cdap.runtime.spi.RuntimeMonitorType;\n+import io.cdap.cdap.runtime.spi.provisioner.Cluster;\n+import io.cdap.cdap.runtime.spi.provisioner.ClusterStatus;\n+import io.cdap.cdap.runtime.spi.provisioner.PollingStrategies;\n+import io.cdap.cdap.runtime.spi.provisioner.PollingStrategy;\n+import io.cdap.cdap.runtime.spi.provisioner.ProvisionerContext;\n+import io.cdap.cdap.runtime.spi.provisioner.ProvisionerSpecification;\n+import io.cdap.cdap.runtime.spi.ssh.SSHKeyPair;\n+import io.cdap.cdap.runtime.spi.ssh.SSHPublicKey;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.concurrent.TimeUnit;\n+\n+/**\n+ * Provisioner for connecting an existing Dataproc cluster.\n+ */\n+public class ExistingDataprocProvisioner extends AbstractDataprocProvisioner {\n+\n+  private static final ProvisionerSpecification SPEC = new ProvisionerSpecification(\n+    \"gcp-existing-dataproc\", \"Existing Dataproc\",\n+    \"Connect and Execute jobs on existing Dataproc cluster.\");\n+  // Keys for looking up system properties\n+\n+  private static final String CLUSTER_NAME = \"clusterName\";\n+  private static final String SSH_USER = \"sshUser\";\n+  private static final String SSH_KEY = \"sshKey\";\n+\n+  public ExistingDataprocProvisioner() {\n+    super(SPEC);\n+  }\n+\n+  @Override\n+  public void validateProperties(Map<String, String> properties) {\n+    // Creates the DataprocConf for validation\n+    DataprocConf.create(properties);\n+\n+    String clusterName = properties.get(\"clusterName\");\n+    if (Strings.isNullOrEmpty(clusterName)) {\n+      throw new IllegalArgumentException(\"Dataproc cluster name is missing\");\n+    }\n+  }\n+\n+  @Override\n+  protected String getClusterName(ProvisionerContext context) {\n+    return context.getProperties().get(\"clusterName\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "599aaa8887ecc692163d6bd0ccecc7276668390d"}, "originalPosition": 66}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f655c17dfd40eeb2d1f5663f0ecdcf05915e7d21", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/f655c17dfd40eeb2d1f5663f0ecdcf05915e7d21", "committedDate": "2020-06-04T17:31:22Z", "message": "(CDAP-16669) Added a new Dataproc provisioner for existing cluster"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "599aaa8887ecc692163d6bd0ccecc7276668390d", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/599aaa8887ecc692163d6bd0ccecc7276668390d", "committedDate": "2020-06-04T09:28:35Z", "message": "(CDAP-16669) Added a new Dataproc provisioner for existing cluster"}, "afterCommit": {"oid": "f655c17dfd40eeb2d1f5663f0ecdcf05915e7d21", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/f655c17dfd40eeb2d1f5663f0ecdcf05915e7d21", "committedDate": "2020-06-04T17:31:22Z", "message": "(CDAP-16669) Added a new Dataproc provisioner for existing cluster"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1975, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}