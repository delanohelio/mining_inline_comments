{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyOTc1OTkz", "number": 11859, "title": "[UI][Pipelines] Lazyload runs & runscount for only viewed pipelines", "bodyText": "Problem\n\nWe right now fetch runs & total runs for all the pipelines while displaying only 25 of them to start with\nThis is because we allow users to sort by runs (last start time) and the total runs in the pipeline list view\nIf we remove the option to sort by runs & total runs we could save making batch calls with all the pipelines (say 25 instead of 200)\n\nSolution\n\nRemove sorting by anything other than name of the pipeline (since we have to get all the pipelines for now until we actually get pagination from backend)\nModify graphql to sort(natural-sort) by pipeline name & query runs & total runs for only the first 25 pipelines\nThis way the initial call UI makes to get the pipelines list will have the first 25 pipelines with all the information (using the same sort done in grapqhl).\nThen lazy load runs & total runs only for pipelines currently in view based on pagination.\nAs part of this change,\n\nMoved pipelines and the filteredPipelines to store\nAny modifications done to the current viewed pipelines is always saved to store\nThis way we can determine currently viewed pipeline for which we need to fetch the runs\nUpon fetch we save the runs and runscount to both the filtered pipelines & the full list.\nThis way we avoid refetching them multiple times\n\n\n\nUPDATE\n- Disabling polling entirely in nodejs server. We need to rethink how we pause and resume polling in a consistent way across all inactive tabs across all UI. CDAP-16284 Coming as separate PR", "createdAt": "2020-02-10T07:17:13Z", "url": "https://github.com/cdapio/cdap/pull/11859", "merged": true, "mergeCommit": {"oid": "08252a5847b4e5a465299e879a6314df1d5d3966"}, "closed": true, "closedAt": "2020-02-19T00:13:43Z", "author": {"login": "ajainarayanan"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDIAR2AFqTM1NjM4NDM2MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcFq6GxgBqjMwNDk1MjQxODM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2Mzg0MzYw", "url": "https://github.com/cdapio/cdap/pull/11859#pullrequestreview-356384360", "createdAt": "2020-02-11T01:58:18Z", "commit": {"oid": "908e4e9aded7f9584ffe02c43f93c4f7441ecefa"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo1ODoxOFrOFn7taQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMjowNDozM1rOFn7yOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxNzA2NQ==", "bodyText": "should this be > 25?", "url": "https://github.com/cdapio/cdap/pull/11859#discussion_r377417065", "createdAt": "2020-02-11T01:58:18Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/PipelineList/DeployedPipelineView/Pagination/index.tsx", "diffHunk": "@@ -15,27 +15,20 @@\n  */\n \n import { connect } from 'react-redux';\n-import { Actions } from 'components/PipelineList/DeployedPipelineView/store';\n import PaginationView from 'components/PipelineList/PaginationView';\n-\n+import { setPage } from 'components/PipelineList/DeployedPipelineView/store/ActionCreator';\n const mapStateToProps = (state) => {\n   return {\n     currentPage: state.deployed.currentPage,\n     pageLimit: state.deployed.pageLimit,\n-    shouldDisplay: state.deployed.search.length === 0,\n+    shouldDisplay: state.deployed.filteredPipelines.length > 24,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "908e4e9aded7f9584ffe02c43f93c4f7441ecefa"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxODI5Ng==", "bodyText": "so where is the reset happening now?", "url": "https://github.com/cdapio/cdap/pull/11859#discussion_r377418296", "createdAt": "2020-02-11T02:04:33Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/PipelineList/DeployedPipelineView/index.tsx", "diffHunk": "@@ -50,7 +53,11 @@ const DeployedPipeline: React.FC = () => {\n   // on unmount\n   React.useEffect(() => {\n     return () => {\n-      reset();\n+      // (TODO): This is right now problematic.\n+      // React unmounts component everytime when incoming props change\n+      // Because this is FC there is no way to know if the parent component\n+      // changed the props or really unmounted.\n+      // reset();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "908e4e9aded7f9584ffe02c43f93c4f7441ecefa"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "908e4e9aded7f9584ffe02c43f93c4f7441ecefa", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/908e4e9aded7f9584ffe02c43f93c4f7441ecefa", "committedDate": "2020-02-11T01:53:41Z", "message": "[CDAP-16284] Completely disables polling in aggregator"}, "afterCommit": {"oid": "6d6cf89dc0af77b60537a1cd7905b5441a2f901b", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/6d6cf89dc0af77b60537a1cd7905b5441a2f901b", "committedDate": "2020-02-11T21:20:03Z", "message": "Correctly reset store on unmount in pipeline list"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "41ee2849bd822ff063a19878133e052875fdf654", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/41ee2849bd822ff063a19878133e052875fdf654", "committedDate": "2020-02-18T20:39:39Z", "message": "Fixes the way we update search in store"}, "afterCommit": {"oid": "89f645f175884e26e11ba1264ac04cf27e70e5ed", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/89f645f175884e26e11ba1264ac04cf27e70e5ed", "committedDate": "2020-02-18T23:33:54Z", "message": "Fixes the way we update search in store"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "89f645f175884e26e11ba1264ac04cf27e70e5ed", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/89f645f175884e26e11ba1264ac04cf27e70e5ed", "committedDate": "2020-02-18T23:33:54Z", "message": "Fixes the way we update search in store"}, "afterCommit": {"oid": "494807c7f6fe6ffe34d9374e69e175d3f20c8659", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/494807c7f6fe6ffe34d9374e69e175d3f20c8659", "committedDate": "2020-02-18T23:38:54Z", "message": "Fixes the way we update search in store"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "494807c7f6fe6ffe34d9374e69e175d3f20c8659", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/494807c7f6fe6ffe34d9374e69e175d3f20c8659", "committedDate": "2020-02-18T23:38:54Z", "message": "Fixes the way we update search in store"}, "afterCommit": {"oid": "5389547421abd2799356f61976bd86f7a84f1896", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/5389547421abd2799356f61976bd86f7a84f1896", "committedDate": "2020-02-18T23:44:48Z", "message": "Fixes the way we update search in store"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNzU1MDA3", "url": "https://github.com/cdapio/cdap/pull/11859#pullrequestreview-360755007", "createdAt": "2020-02-18T23:46:54Z", "commit": {"oid": "494807c7f6fe6ffe34d9374e69e175d3f20c8659"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "925a10889156839fe0d546182ae24bf13933fc6f", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/925a10889156839fe0d546182ae24bf13933fc6f", "committedDate": "2020-02-18T23:53:14Z", "message": "[UI][Pipelines] Lazyload runs & runscount for only viewed pipelines\n\n  - Adds natural-sort to sort pipelines by name in graphql resolver\n  - Fixes graphql server to fetch runs & total runs count for only first 25 pipelines\n  - Disables sorting by columns other than pipeline name\n  - Lazy load runs & runscount only for pipelines currently in view\n\n    As part of this change the following have been changed,\n\n      1. Moved pipelines and the filteredPipelines to store\n      2. Any modifications done to the current viewed pipelines is always saved to store\n      3. This way we can determine currently viewed pipeline for which we need to fetch the runs\n      4. Upon fetch we save the runs and runscount to both the filtered pipelines & the full list.\n   This way we avoid refetching them multiple times\n\n  - Fixes the property we check while pausing & resuming polling in datasource"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5389547421abd2799356f61976bd86f7a84f1896", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/5389547421abd2799356f61976bd86f7a84f1896", "committedDate": "2020-02-18T23:44:48Z", "message": "Fixes the way we update search in store"}, "afterCommit": {"oid": "925a10889156839fe0d546182ae24bf13933fc6f", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/925a10889156839fe0d546182ae24bf13933fc6f", "committedDate": "2020-02-18T23:53:14Z", "message": "[UI][Pipelines] Lazyload runs & runscount for only viewed pipelines\n\n  - Adds natural-sort to sort pipelines by name in graphql resolver\n  - Fixes graphql server to fetch runs & total runs count for only first 25 pipelines\n  - Disables sorting by columns other than pipeline name\n  - Lazy load runs & runscount only for pipelines currently in view\n\n    As part of this change the following have been changed,\n\n      1. Moved pipelines and the filteredPipelines to store\n      2. Any modifications done to the current viewed pipelines is always saved to store\n      3. This way we can determine currently viewed pipeline for which we need to fetch the runs\n      4. Upon fetch we save the runs and runscount to both the filtered pipelines & the full list.\n   This way we avoid refetching them multiple times\n\n  - Fixes the property we check while pausing & resuming polling in datasource"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1246, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}