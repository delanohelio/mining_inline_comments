{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1MDI1MTMw", "number": 12866, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMTo0ODowNVrOE8aO1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMTo0ODowNVrOE8aO1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNzc5Nzk5OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/AbstractWidget/MultiStageSelector/index.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMTo0ODowNVrOH4grBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxODowOToyNlrOH_cLzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTAxNzYwNA==", "bodyText": "Is there some store where this should be validated? Seems odd to call back when rendering.", "url": "https://github.com/cdapio/cdap/pull/12866#discussion_r529017604", "createdAt": "2020-11-23T21:48:05Z", "author": {"login": "njbriggs"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/MultiStageSelector/index.tsx", "diffHunk": "@@ -72,13 +72,36 @@ const MultiStageSelectorBase: React.FC<IMultiStageSelectorProps> = ({\n       </div>\n     );\n   }\n+  const validatedValue = value\n+    .toString()\n+    .split(',')\n+    .filter((stage) => {\n+      return inputStages.find((s) => s.id === stage);\n+    })\n+    .join(',');\n+  if (validatedValue !== value) {\n+    /**\n+     * This will happen when the user configured the plugin (say joiner)\n+     * with initial two stages and then later drop one of those stages.\n+     *\n+     * Now the previously selected input stages are no longer valid.\n+     * The validatedValue will only have stages that are still input to joiner\n+     * and will update the value of the plugin automatically.\n+     *\n+     * If not for this we will show only valid stages but the actual plugin property\n+     * will have all the stages.\n+     */\n+    onChange(validatedValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3607ab09e971f098cf0b44171dfefec48b3a87ad"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI4NDExMA==", "bodyText": "@njbriggs The validation happens couple of lines above. The validation is nothing but checking if the input stages specified in the value still present as input.\nSay,\n\nThe user connects a File and a GCS source to joiner\nConfigures joiner and chooses the two sources in the multistageselector\nCloses the joiner and renames or removes one of the input stages, say File source\n\nUpon opening the joiner the MultiStageSelector should not include the removed source as it is not longer valid. Previously the select widget used to remove it from rendering (as it is not present in the list).\nNow we are removing it from the list and updating the value of plugin property to have only valid input stages.", "url": "https://github.com/cdapio/cdap/pull/12866#discussion_r536284110", "createdAt": "2020-12-04T18:09:26Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/MultiStageSelector/index.tsx", "diffHunk": "@@ -72,13 +72,36 @@ const MultiStageSelectorBase: React.FC<IMultiStageSelectorProps> = ({\n       </div>\n     );\n   }\n+  const validatedValue = value\n+    .toString()\n+    .split(',')\n+    .filter((stage) => {\n+      return inputStages.find((s) => s.id === stage);\n+    })\n+    .join(',');\n+  if (validatedValue !== value) {\n+    /**\n+     * This will happen when the user configured the plugin (say joiner)\n+     * with initial two stages and then later drop one of those stages.\n+     *\n+     * Now the previously selected input stages are no longer valid.\n+     * The validatedValue will only have stages that are still input to joiner\n+     * and will update the value of the plugin automatically.\n+     *\n+     * If not for this we will show only valid stages but the actual plugin property\n+     * will have all the stages.\n+     */\n+    onChange(validatedValue);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTAxNzYwNA=="}, "originalCommit": {"oid": "3607ab09e971f098cf0b44171dfefec48b3a87ad"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2609, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}