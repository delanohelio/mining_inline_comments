{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwODE4NTc5", "number": 11984, "title": "(CDAP-16353) Introduce ArtifactRepositoryReader interface and implement local and remote versions", "bodyText": "Goal:\n\nSupport ArtifactRepository impl to get artifact detail from either local or remote\n\nSpecially this change does:\n\nCreate a new interface ArtifactRepositoryReader and move getArtifact method over from ArtifactRepository\nImplement local and remote version of ArtifactRepositoryReader\nUse local version in all places (e.g. Preview and AppFabric).\nRemote version is unused at the moment. Will switch preview to use it later when storage is set to NOSQL", "createdAt": "2020-03-19T06:17:11Z", "url": "https://github.com/cdapio/cdap/pull/11984", "merged": true, "mergeCommit": {"oid": "03197973053d3052b6b6b113e38262b8a4029e3e"}, "closed": true, "closedAt": "2020-03-27T06:36:11Z", "author": {"login": "wyzhang"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPPq9rgBqjMxNDY2Mzg4MjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRowwRgBqjMxNzA5MDM5MDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a8fffa2a29ec6d5a69a3f86e03bae36f0d5681c", "author": {"user": {"login": "wyzhang", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/6a8fffa2a29ec6d5a69a3f86e03bae36f0d5681c", "committedDate": "2020-03-19T06:07:40Z", "message": "(CDAP-16353) Introduce ArtifactRepositoryReader interface and implement local and remote versions\n\nGoal:\n- Support ArtifactRepository impl to get artifact detail from either local or remote\n\nSpecially this change does:\n- Create a new interface ArtifactRepositoryReader and move getArtifact method over from ArtifactRepository\n- Implement local and remote version of ArtifactRepositoryReader\n- Use local version in all places (e.g. Preview and AppFabric).\n- Remote version is unused at the moment. Will switch preview to use it later when storage is set to NOSQL"}, "afterCommit": {"oid": "f36b7bce93caaaba0fd312bfa21188f0c7bf443d", "author": {"user": {"login": "wyzhang", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/f36b7bce93caaaba0fd312bfa21188f0c7bf443d", "committedDate": "2020-03-19T17:48:18Z", "message": "(CDAP-16353) Introduce ArtifactRepositoryReader interface and implement local and remote versions\n\nGoal:\n- Support ArtifactRepository impl to get artifact detail from either local store or remote Appfabric\n\nSpecially this change includes:\n- Create a new interface ArtifactRepositoryReader and move getArtifact method over from ArtifactRepository\n- Implement local and remote version of ArtifactRepositoryReader\n- Use local version in all places (e.g. Preview and AppFabric).\n- Remote version is unused at the moment. Will switch preview to use it later when storage is NOSQL"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f36b7bce93caaaba0fd312bfa21188f0c7bf443d", "author": {"user": {"login": "wyzhang", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/f36b7bce93caaaba0fd312bfa21188f0c7bf443d", "committedDate": "2020-03-19T17:48:18Z", "message": "(CDAP-16353) Introduce ArtifactRepositoryReader interface and implement local and remote versions\n\nGoal:\n- Support ArtifactRepository impl to get artifact detail from either local store or remote Appfabric\n\nSpecially this change includes:\n- Create a new interface ArtifactRepositoryReader and move getArtifact method over from ArtifactRepository\n- Implement local and remote version of ArtifactRepositoryReader\n- Use local version in all places (e.g. Preview and AppFabric).\n- Remote version is unused at the moment. Will switch preview to use it later when storage is NOSQL"}, "afterCommit": {"oid": "bd68eecb5b1d8ca861c49d29421856f2e3162780", "author": {"user": {"login": "wyzhang", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/bd68eecb5b1d8ca861c49d29421856f2e3162780", "committedDate": "2020-03-19T23:04:51Z", "message": "(CDAP-16353) Introduce ArtifactRepositoryReader interface and implement local and remote versions\n\nGoal:\n- Support ArtifactRepository impl to get artifact detail from either local store or remote Appfabric\n\nSpecially this change includes:\n- Create a new interface ArtifactRepositoryReader and move getArtifact method over from ArtifactRepository\n- Implement local and remote version of ArtifactRepositoryReader\n- Use local version in all places (e.g. Preview and AppFabric).\n- Remote version is unused at the moment. Will switch preview to use it later when storage is NOSQL"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMjkxNzk3", "url": "https://github.com/cdapio/cdap/pull/11984#pullrequestreview-382291797", "createdAt": "2020-03-26T18:22:58Z", "commit": {"oid": "bd68eecb5b1d8ca861c49d29421856f2e3162780"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODoyMjo1OFrOF8UifQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODoyNzoxOFrOF8UtuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc5NTM4OQ==", "bodyText": "you are anyway exposing these bindings, then you don't need to remove these in private module, in the private module, you can just have the ArtifactRepositoryReader binding.", "url": "https://github.com/cdapio/cdap/pull/11984#discussion_r398795389", "createdAt": "2020-03-26T18:22:58Z", "author": {"login": "yaojiefeng"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/guice/AppFabricServiceRuntimeModule.java", "diffHunk": "@@ -294,11 +297,23 @@ protected void configure() {\n       bind(OwnerAdmin.class).to(DefaultOwnerAdmin.class);\n       bind(CoreSchedulerService.class).in(Scopes.SINGLETON);\n       bind(Scheduler.class).to(CoreSchedulerService.class);\n-      bind(ArtifactRepository.class)\n-        .annotatedWith(Names.named(NOAUTH_ARTIFACT_REPO))\n-        .to(DefaultArtifactRepository.class)\n-        .in(Scopes.SINGLETON);\n-      bind(ArtifactRepository.class).to(AuthorizationArtifactRepository.class).in(Scopes.SINGLETON);\n+      install(new PrivateModule() {\n+        @Override\n+        protected void configure() {\n+          // ArtifactRepositoryReader is required by DefaultArtifactRepository.\n+          // Keep ArtifactRepositoryReader private to minimize the scope of the binding visibility.\n+          bind(ArtifactRepositoryReader.class).to(LocalArtifactRepositoryReader.class).in(Scopes.SINGLETON);\n+\n+          bind(ArtifactRepository.class)\n+            .annotatedWith(Names.named(NOAUTH_ARTIFACT_REPO))\n+            .to(DefaultArtifactRepository.class)\n+            .in(Scopes.SINGLETON);\n+          expose(ArtifactRepository.class).annotatedWith(Names.named(NOAUTH_ARTIFACT_REPO));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd68eecb5b1d8ca861c49d29421856f2e3162780"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc5NTUyNA==", "bodyText": "nit - unused imports?", "url": "https://github.com/cdapio/cdap/pull/11984#discussion_r398795524", "createdAt": "2020-03-26T18:23:11Z", "author": {"login": "yaojiefeng"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/guice/InMemoryProgramRunnerModule.java", "diffHunk": "@@ -32,7 +33,11 @@\n import io.cdap.cdap.common.discovery.ResolvingDiscoverable;\n import io.cdap.cdap.internal.app.runtime.artifact.ArtifactFinder;\n import io.cdap.cdap.internal.app.runtime.artifact.ArtifactManagerFactory;\n+import io.cdap.cdap.internal.app.runtime.artifact.ArtifactRepository;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd68eecb5b1d8ca861c49d29421856f2e3162780"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc5NjMyMQ==", "bodyText": "also is ArtifactRepositoryReader only used by ArtifactRepository? If some other classes wants to use it, will it fail to inject because it is private?", "url": "https://github.com/cdapio/cdap/pull/11984#discussion_r398796321", "createdAt": "2020-03-26T18:24:17Z", "author": {"login": "yaojiefeng"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/guice/AppFabricServiceRuntimeModule.java", "diffHunk": "@@ -294,11 +297,23 @@ protected void configure() {\n       bind(OwnerAdmin.class).to(DefaultOwnerAdmin.class);\n       bind(CoreSchedulerService.class).in(Scopes.SINGLETON);\n       bind(Scheduler.class).to(CoreSchedulerService.class);\n-      bind(ArtifactRepository.class)\n-        .annotatedWith(Names.named(NOAUTH_ARTIFACT_REPO))\n-        .to(DefaultArtifactRepository.class)\n-        .in(Scopes.SINGLETON);\n-      bind(ArtifactRepository.class).to(AuthorizationArtifactRepository.class).in(Scopes.SINGLETON);\n+      install(new PrivateModule() {\n+        @Override\n+        protected void configure() {\n+          // ArtifactRepositoryReader is required by DefaultArtifactRepository.\n+          // Keep ArtifactRepositoryReader private to minimize the scope of the binding visibility.\n+          bind(ArtifactRepositoryReader.class).to(LocalArtifactRepositoryReader.class).in(Scopes.SINGLETON);\n+\n+          bind(ArtifactRepository.class)\n+            .annotatedWith(Names.named(NOAUTH_ARTIFACT_REPO))\n+            .to(DefaultArtifactRepository.class)\n+            .in(Scopes.SINGLETON);\n+          expose(ArtifactRepository.class).annotatedWith(Names.named(NOAUTH_ARTIFACT_REPO));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc5NTM4OQ=="}, "originalCommit": {"oid": "bd68eecb5b1d8ca861c49d29421856f2e3162780"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc5NjU3NA==", "bodyText": "Same here, you are exposing this binding anyway, why make it private", "url": "https://github.com/cdapio/cdap/pull/11984#discussion_r398796574", "createdAt": "2020-03-26T18:24:42Z", "author": {"login": "yaojiefeng"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewManager.java", "diffHunk": "@@ -345,25 +348,35 @@ protected void configure() {\n         }\n       }),\n       new ProvisionerModule(),\n-      new AbstractModule() {\n+      new PrivateModule() {\n         @Override\n         protected void configure() {\n+          // ArtifactRepositoryReader is required by DefaultArtifactRepository.\n+          // Keep ArtifactRepositoryReader private to minimize the scope of the binding visibility.\n+          bind(ArtifactRepositoryReader.class).to(LocalArtifactRepositoryReader.class).in(Scopes.SINGLETON);\n           bind(ArtifactRepository.class)\n             .annotatedWith(Names.named(AppFabricServiceRuntimeModule.NOAUTH_ARTIFACT_REPO))\n             .to(DefaultArtifactRepository.class)\n             .in(Scopes.SINGLETON);\n+          expose(ArtifactRepository.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd68eecb5b1d8ca861c49d29421856f2e3162780"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc5NzI2MA==", "bodyText": "why do we make this change? Is this class used anywhere in the response? If so, this is changing the API behavior", "url": "https://github.com/cdapio/cdap/pull/11984#discussion_r398797260", "createdAt": "2020-03-26T18:25:41Z", "author": {"login": "yaojiefeng"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactDescriptor.java", "diffHunk": "@@ -19,17 +19,27 @@\n import io.cdap.cdap.api.artifact.ArtifactId;\n import org.apache.twill.filesystem.Location;\n \n+import java.net.URI;\n+\n /**\n  * Uniquely describes an artifact. Artifact descriptors are ordered by scope,\n  * then by name, and finally by version.\n  */\n public final class ArtifactDescriptor implements Comparable<ArtifactDescriptor> {\n   private final ArtifactId artifactId;\n-  private final Location location;\n+\n+  /**\n+   * Mark with transient to not serialize it. Store the location URI in separate field \"locationURI\" that\n+   * gets serialized when this object needs to be transferred through the network.\n+   * The recipient should instantiate a {@link Location} based on the received \"locationURI\"\n+   */\n+  private final transient Location location;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd68eecb5b1d8ca861c49d29421856f2e3162780"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc5ODI2NA==", "bodyText": "I don't see this class is binded in anywhere, where should it get bind?", "url": "https://github.com/cdapio/cdap/pull/11984#discussion_r398798264", "createdAt": "2020-03-26T18:27:18Z", "author": {"login": "yaojiefeng"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/RemoteArtifactRepositoryReader.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.internal.app.runtime.artifact;\n+\n+import com.google.common.reflect.TypeToken;\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+import com.google.inject.Inject;\n+import io.cdap.cdap.api.data.schema.Schema;\n+import io.cdap.cdap.common.NotFoundException;\n+import io.cdap.cdap.common.conf.Constants;\n+import io.cdap.cdap.common.http.DefaultHttpRequestConfig;\n+import io.cdap.cdap.common.id.Id;\n+import io.cdap.cdap.common.internal.remote.RemoteClient;\n+import io.cdap.cdap.common.io.Locations;\n+import io.cdap.cdap.gateway.handlers.ArtifactHttpHandlerInternal;\n+import io.cdap.cdap.internal.io.SchemaTypeAdapter;\n+import io.cdap.common.http.HttpMethod;\n+import io.cdap.common.http.HttpRequest;\n+import io.cdap.common.http.HttpResponse;\n+import org.apache.twill.discovery.DiscoveryServiceClient;\n+import org.apache.twill.filesystem.Location;\n+import org.apache.twill.filesystem.LocationFactory;\n+import sun.net.www.protocol.http.HttpURLConnection;\n+\n+import java.io.IOException;\n+import java.lang.reflect.Type;\n+\n+\n+/**\n+ * Implementation for fetching artifact metadata from remote {@link ArtifactHttpHandlerInternal}\n+ */\n+public class RemoteArtifactRepositoryReader implements ArtifactRepositoryReader {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd68eecb5b1d8ca861c49d29421856f2e3162780"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNTE2OTkw", "url": "https://github.com/cdapio/cdap/pull/11984#pullrequestreview-382516990", "createdAt": "2020-03-27T00:56:29Z", "commit": {"oid": "eae2938c1df416de6014c9036fe7d1a8ee2decf7"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNTE3MDk5", "url": "https://github.com/cdapio/cdap/pull/11984#pullrequestreview-382517099", "createdAt": "2020-03-27T00:56:51Z", "commit": {"oid": "eae2938c1df416de6014c9036fe7d1a8ee2decf7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f24f7cb4a4ca4597520248ce72fb98ff042f6087", "author": {"user": {"login": "wyzhang", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/f24f7cb4a4ca4597520248ce72fb98ff042f6087", "committedDate": "2020-03-27T01:12:31Z", "message": "fixing build breakage"}, "afterCommit": {"oid": "9744be1cf86df1d3723f72975cc4781cdbc149e8", "author": {"user": {"login": "wyzhang", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/9744be1cf86df1d3723f72975cc4781cdbc149e8", "committedDate": "2020-03-27T02:13:55Z", "message": "(CDAP-16353) Introduce ArtifactRepositoryReader interface and implement local and remote versions\n\nGoal:\n- Support ArtifactRepository impl to get artifact detail from either local store or remote Appfabric\n\nSpecially this change includes:\n- Create a new interface ArtifactRepositoryReader and move getArtifact method over from ArtifactRepository\n- Implement local and remote version of ArtifactRepositoryReader\n- Use local version in all places (e.g. Preview and AppFabric).\n- Remote version is unused at the moment. Will switch preview to use it later when storage is NOSQL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "301fad4715338b63a9c61d091bb591fdb44bf926", "author": {"user": {"login": "wyzhang", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/301fad4715338b63a9c61d091bb591fdb44bf926", "committedDate": "2020-03-27T04:11:06Z", "message": "(CDAP-16353) Introduce ArtifactRepositoryReader interface and implement local and remote versions\n\nGoal:\n- Support ArtifactRepository impl to get artifact detail from either local store or remote Appfabric\n\nSpecially this change includes:\n- Create a new interface ArtifactRepositoryReader and move getArtifact method over from ArtifactRepository\n- Implement local and remote version of ArtifactRepositoryReader\n- Use local version in all places (e.g. Preview and AppFabric).\n- Remote version is unused at the moment. Will switch preview to use it later when storage is NOSQL"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9744be1cf86df1d3723f72975cc4781cdbc149e8", "author": {"user": {"login": "wyzhang", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/9744be1cf86df1d3723f72975cc4781cdbc149e8", "committedDate": "2020-03-27T02:13:55Z", "message": "(CDAP-16353) Introduce ArtifactRepositoryReader interface and implement local and remote versions\n\nGoal:\n- Support ArtifactRepository impl to get artifact detail from either local store or remote Appfabric\n\nSpecially this change includes:\n- Create a new interface ArtifactRepositoryReader and move getArtifact method over from ArtifactRepository\n- Implement local and remote version of ArtifactRepositoryReader\n- Use local version in all places (e.g. Preview and AppFabric).\n- Remote version is unused at the moment. Will switch preview to use it later when storage is NOSQL"}, "afterCommit": {"oid": "301fad4715338b63a9c61d091bb591fdb44bf926", "author": {"user": {"login": "wyzhang", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/301fad4715338b63a9c61d091bb591fdb44bf926", "committedDate": "2020-03-27T04:11:06Z", "message": "(CDAP-16353) Introduce ArtifactRepositoryReader interface and implement local and remote versions\n\nGoal:\n- Support ArtifactRepository impl to get artifact detail from either local store or remote Appfabric\n\nSpecially this change includes:\n- Create a new interface ArtifactRepositoryReader and move getArtifact method over from ArtifactRepository\n- Implement local and remote version of ArtifactRepositoryReader\n- Use local version in all places (e.g. Preview and AppFabric).\n- Remote version is unused at the moment. Will switch preview to use it later when storage is NOSQL"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1177, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}