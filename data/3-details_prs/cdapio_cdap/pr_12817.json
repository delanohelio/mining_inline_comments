{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2NDE3MzM5", "number": 12817, "title": "Dynamic accelerator framework - Annotation for accelerator", "bodyText": "Add accelerators to Requirements annotation.\nEnable Requirements annotation for ApplicationClass.\nRead accelerators from annotation and populate in PluginClass and ApplicationClass while inspecting the artifact\nUnit tests", "createdAt": "2020-10-20T02:45:02Z", "url": "https://github.com/cdapio/cdap/pull/12817", "merged": true, "mergeCommit": {"oid": "5ee1c35a20170ee677854b0b159b2241fe4d7f79"}, "closed": true, "closedAt": "2020-10-22T01:06:59Z", "author": {"login": "greeshmaswaminathan"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdURweJgFqTUxMjMyNDY5OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdU3PD6gFqTUxNDI4OTI4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMzI0Njk4", "url": "https://github.com/cdapio/cdap/pull/12817#pullrequestreview-512324698", "createdAt": "2020-10-20T04:37:24Z", "commit": {"oid": "2af5b202f3401d3d2b7d72f5af02fc23642200ac"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNDozNzoyNFrOHkqUWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNToxMjoyOVrOHkq46w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIwNDEyMQ==", "bodyText": "Use the javadoc style for writing doc for public method:\n/**\n * Description\n * @return \n */", "url": "https://github.com/cdapio/cdap/pull/12817#discussion_r508204121", "createdAt": "2020-10-20T04:37:24Z", "author": {"login": "chtyim"}, "path": "cdap-api/src/main/java/io/cdap/cdap/api/annotation/Requirements.java", "diffHunk": "@@ -69,4 +69,7 @@\n public @interface Requirements {\n \n   String[] datasetTypes() default {};\n+\n+  //Name of associated add-ons or accelerators", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2af5b202f3401d3d2b7d72f5af02fc23642200ac"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIwNzU5Ng==", "bodyText": "Don't use super generic method name unless this method is really that generic. This method is more like getAnnotationValues?", "url": "https://github.com/cdapio/cdap/pull/12817#discussion_r508207596", "createdAt": "2020-10-20T04:51:05Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java", "diffHunk": "@@ -381,14 +381,18 @@ private String getPluginName(Class<?> cls) {\n    * not specify any {@link io.cdap.cdap.api.annotation.Requirements} then the {@link Requirements} will be empty.\n    */\n   @VisibleForTesting\n-  Requirements getPluginRequirements(Class<?> cls) {\n+  Requirements getRequirementsAnnotation(Class<?> cls) {\n     io.cdap.cdap.api.annotation.Requirements annotation =\n       cls.getAnnotation(io.cdap.cdap.api.annotation.Requirements.class);\n     if (annotation == null) {\n       return Requirements.EMPTY;\n     }\n-    return new Requirements(Arrays.stream(annotation.datasetTypes()).map(s -> s.trim().toLowerCase())\n-                              .filter(s -> !Strings.isNullOrEmpty(s)).collect(Collectors.toSet()));\n+    return new Requirements(collect(annotation.datasetTypes()), collect(annotation.accelerators()));\n+  }\n+\n+  private Set<String> collect(String[] field) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2af5b202f3401d3d2b7d72f5af02fc23642200ac"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIwOTM2Ng==", "bodyText": "A more idiomatic way to use stream (or functional style in general) is to only do one thing per function, since that layout the logic better.\nArrays.stream(fields)\n  .map(String::trim)\n  .map(String::toLowerCase) \n  .filter(Object::nonNull)\n  .filter(s -> !s.isEmpty())\n  .collect(Collectors.toSet());", "url": "https://github.com/cdapio/cdap/pull/12817#discussion_r508209366", "createdAt": "2020-10-20T04:57:20Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java", "diffHunk": "@@ -381,14 +381,18 @@ private String getPluginName(Class<?> cls) {\n    * not specify any {@link io.cdap.cdap.api.annotation.Requirements} then the {@link Requirements} will be empty.\n    */\n   @VisibleForTesting\n-  Requirements getPluginRequirements(Class<?> cls) {\n+  Requirements getRequirementsAnnotation(Class<?> cls) {\n     io.cdap.cdap.api.annotation.Requirements annotation =\n       cls.getAnnotation(io.cdap.cdap.api.annotation.Requirements.class);\n     if (annotation == null) {\n       return Requirements.EMPTY;\n     }\n-    return new Requirements(Arrays.stream(annotation.datasetTypes()).map(s -> s.trim().toLowerCase())\n-                              .filter(s -> !Strings.isNullOrEmpty(s)).collect(Collectors.toSet()));\n+    return new Requirements(collect(annotation.datasetTypes()), collect(annotation.accelerators()));\n+  }\n+\n+  private Set<String> collect(String[] field) {\n+    return Arrays.stream(field).map(s -> s.trim().toLowerCase())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2af5b202f3401d3d2b7d72f5af02fc23642200ac"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIxMzQ4Mw==", "bodyText": "This method actually returns the Requirements class, not the annotation, so better call it getArtifactRequirements()", "url": "https://github.com/cdapio/cdap/pull/12817#discussion_r508213483", "createdAt": "2020-10-20T05:12:29Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java", "diffHunk": "@@ -381,14 +381,18 @@ private String getPluginName(Class<?> cls) {\n    * not specify any {@link io.cdap.cdap.api.annotation.Requirements} then the {@link Requirements} will be empty.\n    */\n   @VisibleForTesting\n-  Requirements getPluginRequirements(Class<?> cls) {\n+  Requirements getRequirementsAnnotation(Class<?> cls) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2af5b202f3401d3d2b7d72f5af02fc23642200ac"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79812780457fc997304d59d6315a3a2813fee3ea", "author": {"user": {"login": "greeshmaswaminathan", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/79812780457fc997304d59d6315a3a2813fee3ea", "committedDate": "2020-10-22T00:35:30Z", "message": "(CDAP-17270) Add accelerators to Requirements annotation. Enable Requirements annotation for ApplicationClass."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2af5b202f3401d3d2b7d72f5af02fc23642200ac", "author": {"user": {"login": "greeshmaswaminathan", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/2af5b202f3401d3d2b7d72f5af02fc23642200ac", "committedDate": "2020-10-19T21:33:41Z", "message": "Add accelerators to Requirements annotation. Enable Requirements annotation for ApplicationClass."}, "afterCommit": {"oid": "79812780457fc997304d59d6315a3a2813fee3ea", "author": {"user": {"login": "greeshmaswaminathan", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/79812780457fc997304d59d6315a3a2813fee3ea", "committedDate": "2020-10-22T00:35:30Z", "message": "(CDAP-17270) Add accelerators to Requirements annotation. Enable Requirements annotation for ApplicationClass."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0Mjg5Mjgw", "url": "https://github.com/cdapio/cdap/pull/12817#pullrequestreview-514289280", "createdAt": "2020-10-22T00:56:57Z", "commit": {"oid": "79812780457fc997304d59d6315a3a2813fee3ea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1697, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}