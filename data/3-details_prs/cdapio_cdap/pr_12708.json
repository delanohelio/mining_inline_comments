{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxODY3NDMw", "number": 12708, "title": "CDAP-17098 Add widget for Window Aggregation configuration", "bodyText": "https://issues.cask.co/browse/CDAP-17098\nOriginally #12548. That was for 6.1; this feature might or might not go to the 6.1 branch.\nThis adds a new widget to support the Window Aggregation plugin. It builds on the widget used by Group By and adds an optional arguments field and an \"ignore nulls\" checkbox.\n\nAlso includes unit tests for parsing and serializing the row configuration.", "createdAt": "2020-08-21T21:43:31Z", "url": "https://github.com/cdapio/cdap/pull/12708", "merged": true, "mergeCommit": {"oid": "fda24674d60cc9566b9a2ed24108c50364ccdf8e"}, "closed": true, "closedAt": "2020-12-02T18:27:46Z", "author": {"login": "njbriggs"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCEno4AFqTQ3MzYyOTI1OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdhu7TwgBqjQwNTQ1NjQ4Mzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNjI5MjU4", "url": "https://github.com/cdapio/cdap/pull/12708#pullrequestreview-473629258", "createdAt": "2020-08-24T15:47:59Z", "commit": {"oid": "c8979e089763c10343f0b382fba1224f1fc0cd63"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNTo0Nzo1OVrOHFrPvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNTo0Nzo1OVrOHFrPvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcxMzQ3MA==", "bodyText": "This should probably get added to the widget attributes as well.  (Same goes for other widgets).", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r475713470", "createdAt": "2020-08-24T15:47:59Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/FormInputs/TextBox/index.tsx", "diffHunk": "@@ -23,6 +24,7 @@ import { objectQuery } from 'services/helpers';\n interface ITextBoxWidgetProps {\n   placeholder?: string;\n   default?: string;\n+  enableUnderline?: boolean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8979e089763c10343f0b382fba1224f1fc0cd63"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NzE0NzM1", "url": "https://github.com/cdapio/cdap/pull/12708#pullrequestreview-475714735", "createdAt": "2020-08-26T17:39:54Z", "commit": {"oid": "c8979e089763c10343f0b382fba1224f1fc0cd63"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNzozOTo1NFrOHHWxHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNzozOTo1NFrOHHWxHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ3NTEwMg==", "bodyText": "Is there a comma missing after field?", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r477475102", "createdAt": "2020-08-26T17:39:54Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/FunctionDropdownArgumentsWidget/parser.ts", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+export function parse(value) {\n+  const colonIndex = value.indexOf(':');\n+  // const [alias, fn] = value.split(':');\n+  const alias = value.substring(0, colonIndex);\n+  const fn = value.substring(colonIndex + 1);\n+\n+  const defaultResponse = {\n+    alias,\n+    func: '',\n+    field: '',\n+    ignoreNulls: true,\n+    arguments: '',\n+  };\n+\n+  if (!fn) {\n+    return defaultResponse;\n+  }\n+\n+  const openBracketIndex = fn.indexOf('(');\n+  const closeBracketIndex = fn.indexOf(')');\n+\n+  if (openBracketIndex === -1 || closeBracketIndex === -1) {\n+    return defaultResponse;\n+  }\n+\n+  const params = fn.substring(openBracketIndex + 1, closeBracketIndex).split(',');\n+  const field = params[0];\n+  const ignoreNulls = params[params.length - 1] !== 'false';\n+\n+  let args = '';\n+  if (params.length > 2) {\n+    args = decodeURIComponent(params.slice(1, params.length - 1).join(','));\n+  }\n+\n+  return {\n+    alias,\n+    func: fn.substring(0, openBracketIndex),\n+    field,\n+    ignoreNulls,\n+    arguments: args,\n+  };\n+}\n+\n+export function serialize(fields) {\n+  const { field, func, alias, arguments: args, ignoreNulls } = fields;\n+\n+  if (field.length === 0 || func.length === 0 || alias.length === 0) {\n+    return '';\n+  }\n+\n+  const trimmedArgs = args && args.trim();\n+  const argumentString =\n+    trimmedArgs && trimmedArgs.length > 0 ? `,${encodeURIComponent(trimmedArgs)}` : '';\n+\n+  const updatedValue = `${alias}:${func}(${field}${argumentString},${!!ignoreNulls})`;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8979e089763c10343f0b382fba1224f1fc0cd63"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NzE2NzAx", "url": "https://github.com/cdapio/cdap/pull/12708#pullrequestreview-475716701", "createdAt": "2020-08-26T17:42:35Z", "commit": {"oid": "291e2e340babeda4347f498a01acb067ad994e97"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNzo0MjozNlrOHHW3EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNzo0MjozNlrOHHW3EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ3NjYyNQ==", "bodyText": "Is it possible for an argument to include parentheses?", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r477476625", "createdAt": "2020-08-26T17:42:36Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/FunctionDropdownArgumentsWidget/__tests__/parser.tests.ts", "diffHunk": "@@ -0,0 +1,213 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { parse, serialize } from 'components/AbstractWidget/FunctionDropdownArgumentsWidget/parser';\n+\n+describe('FunctionDropdownArgumentsRow', () => {\n+  describe('parser', () => {\n+    describe('parse', () => {\n+      it('should parse a string with no arguments', () => {\n+        expect(parse('myAlias:myFunc(field1,true)')).toEqual({\n+          alias: 'myAlias',\n+          func: 'myFunc',\n+          field: 'field1',\n+          ignoreNulls: true,\n+          arguments: '',\n+        });\n+      });\n+\n+      it('should parse a string with ignoreNulls false', () => {\n+        expect(parse('myAlias:myFunc(field1,false)')).toEqual({\n+          alias: 'myAlias',\n+          func: 'myFunc',\n+          field: 'field1',\n+          ignoreNulls: false,\n+          arguments: '',\n+        });\n+      });\n+\n+      it('should parse a string with one argument', () => {\n+        expect(parse(`myAlias:myFunc(field1,${encodeURIComponent('a')},true)`)).toEqual({\n+          alias: 'myAlias',\n+          func: 'myFunc',\n+          field: 'field1',\n+          ignoreNulls: true,\n+          arguments: 'a',\n+        });\n+      });\n+\n+      it('should parse a string with multiple arguments', () => {\n+        expect(parse(`myAlias:myFunc(field1,${encodeURIComponent('a,b,c')},true)`)).toEqual({\n+          alias: 'myAlias',\n+          func: 'myFunc',\n+          field: 'field1',\n+          ignoreNulls: true,\n+          arguments: 'a,b,c',\n+        });\n+      });\n+\n+      it('should parse an argument with a colon', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "291e2e340babeda4347f498a01acb067ad994e97"}, "originalPosition": 62}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "291e2e340babeda4347f498a01acb067ad994e97", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/291e2e340babeda4347f498a01acb067ad994e97", "committedDate": "2020-08-26T17:32:53Z", "message": "Add comment requested in #12708"}, "afterCommit": {"oid": "ec2c1518abd19928f02265333867283f014a6503", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/ec2c1518abd19928f02265333867283f014a6503", "committedDate": "2020-11-04T22:55:52Z", "message": "Add comment requested in #12708"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ec2c1518abd19928f02265333867283f014a6503", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/ec2c1518abd19928f02265333867283f014a6503", "committedDate": "2020-11-04T22:55:52Z", "message": "Add comment requested in #12708"}, "afterCommit": {"oid": "2edf9a7823e849579917611defe3583d9f6aad0c", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/2edf9a7823e849579917611defe3583d9f6aad0c", "committedDate": "2020-11-13T20:47:57Z", "message": "Add comment requested in #12708"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2edf9a7823e849579917611defe3583d9f6aad0c", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/2edf9a7823e849579917611defe3583d9f6aad0c", "committedDate": "2020-11-13T20:47:57Z", "message": "Add comment requested in #12708"}, "afterCommit": {"oid": "8650cbbb2ce2377f3b16b26d3d0840542a1167c9", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/8650cbbb2ce2377f3b16b26d3d0840542a1167c9", "committedDate": "2020-11-16T23:25:43Z", "message": "Add comment requested in #12708"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3ODY2OTA3", "url": "https://github.com/cdapio/cdap/pull/12708#pullrequestreview-537866907", "createdAt": "2020-11-24T20:10:28Z", "commit": {"oid": "8650cbbb2ce2377f3b16b26d3d0840542a1167c9"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMDoxMDoyOVrOH5TZyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMDoxNTo0N1rOH5TkJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg0ODc3Ng==", "bodyText": "nit: I believe the theme object gets passed to withStyles? Like here", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r529848776", "createdAt": "2020-11-24T20:10:29Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/FormInputs/Select/index.tsx", "diffHunk": "@@ -49,6 +49,18 @@ const CustomizedInput = withStyles(() => {\n   };\n })(InputBase);\n \n+const CustomizedInput = withStyles(() => {\n+  return {\n+    input: {\n+      padding: '7px 18px 7px 12px',\n+      '&:focus': {\n+        backgroundColor: 'transparent',\n+        outline: `1px solid ${blue[100]}`,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8650cbbb2ce2377f3b16b26d3d0840542a1167c9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg0OTA3Mg==", "bodyText": "nit: Can we have a JIRA for this TODO with a fix version? Otherwise we will seldom revisit this issue.", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r529849072", "createdAt": "2020-11-24T20:11:06Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/FormInputs/TextBox/index.tsx", "diffHunk": "@@ -23,6 +24,7 @@ import { objectQuery } from 'services/helpers';\n interface ITextBoxWidgetProps {\n   placeholder?: string;\n   default?: string;\n+  enableUnderline?: boolean; // TODO Add to all widgets", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8650cbbb2ce2377f3b16b26d3d0840542a1167c9"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg0OTg2OQ==", "bodyText": "Can we standardize this to id, value. Right now this is scattered and there is no standardization (Reference JIRA https://cdap.atlassian.net/browse/CDAP-17108)", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r529849869", "createdAt": "2020-11-24T20:12:41Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/FunctionDropdownArgumentsWidget/FunctionDropdownArgumentsRow.tsx", "diffHunk": "@@ -0,0 +1,232 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import TextBox from 'components/AbstractWidget/FormInputs/TextBox';\n+import Checkbox from '@material-ui/core/Checkbox';\n+import FormControlLabel from '@material-ui/core/FormControlLabel';\n+import withStyles, { StyleRules } from '@material-ui/core/styles/withStyles';\n+import Select from 'components/AbstractWidget/FormInputs/Select';\n+import MenuItem from '@material-ui/core/MenuItem';\n+import AbstractRow, {\n+  IAbstractRowProps,\n+  AbstractRowStyles,\n+} from 'components/AbstractWidget/AbstractMultiRowWidget/AbstractRow';\n+import { parse, serialize } from 'components/AbstractWidget/FunctionDropdownArgumentsWidget/parser';\n+import InputFieldDropdown from 'components/AbstractWidget/InputFieldDropdown';\n+import If from 'components/If';\n+import { IWidgetExtraConfig } from 'components/AbstractWidget';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    ...AbstractRowStyles(theme),\n+    inputContainer: {\n+      display: 'grid',\n+      gridTemplateColumns: '1fr 1fr 1fr 1fr 30px 1fr',\n+      gridGap: '10px',\n+    },\n+    disabled: {\n+      color: `${theme.palette.grey['50']}`,\n+    },\n+    // Align with surrounding controls\n+    separator: {\n+      paddingTop: '10px',\n+      textAlign: 'center',\n+    },\n+  };\n+};\n+\n+interface IComplexDropdown {\n+  value: string | number;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8650cbbb2ce2377f3b16b26d3d0840542a1167c9"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg1MTQzMA==", "bodyText": "nit: We right now manually type in the keys of IKeyValueState in different places (say field or ignoreNull). Can we have the keys as enum and use that in both IkeyValueState and in handleWidgetChange function invocation?", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r529851430", "createdAt": "2020-11-24T20:15:47Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/FunctionDropdownArgumentsWidget/FunctionDropdownArgumentsRow.tsx", "diffHunk": "@@ -0,0 +1,232 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import TextBox from 'components/AbstractWidget/FormInputs/TextBox';\n+import Checkbox from '@material-ui/core/Checkbox';\n+import FormControlLabel from '@material-ui/core/FormControlLabel';\n+import withStyles, { StyleRules } from '@material-ui/core/styles/withStyles';\n+import Select from 'components/AbstractWidget/FormInputs/Select';\n+import MenuItem from '@material-ui/core/MenuItem';\n+import AbstractRow, {\n+  IAbstractRowProps,\n+  AbstractRowStyles,\n+} from 'components/AbstractWidget/AbstractMultiRowWidget/AbstractRow';\n+import { parse, serialize } from 'components/AbstractWidget/FunctionDropdownArgumentsWidget/parser';\n+import InputFieldDropdown from 'components/AbstractWidget/InputFieldDropdown';\n+import If from 'components/If';\n+import { IWidgetExtraConfig } from 'components/AbstractWidget';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    ...AbstractRowStyles(theme),\n+    inputContainer: {\n+      display: 'grid',\n+      gridTemplateColumns: '1fr 1fr 1fr 1fr 30px 1fr',\n+      gridGap: '10px',\n+    },\n+    disabled: {\n+      color: `${theme.palette.grey['50']}`,\n+    },\n+    // Align with surrounding controls\n+    separator: {\n+      paddingTop: '10px',\n+      textAlign: 'center',\n+    },\n+  };\n+};\n+\n+interface IComplexDropdown {\n+  value: string | number;\n+  label: string;\n+}\n+\n+export type IDropdownOption = string | number | IComplexDropdown;\n+\n+interface IFunctionDropdownArgumentsRowProps extends IAbstractRowProps<typeof styles> {\n+  placeholders: Record<string, string>;\n+  dropdownOptions: IDropdownOption[];\n+  extraConfig?: IWidgetExtraConfig;\n+}\n+\n+interface IKeyValueState {\n+  field: string;\n+  func: string;\n+  alias: string;\n+  arguments: string;\n+  ignoreNulls: boolean;\n+}\n+\n+type StateKeys = keyof IKeyValueState;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8650cbbb2ce2377f3b16b26d3d0840542a1167c9"}, "originalPosition": 73}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8650cbbb2ce2377f3b16b26d3d0840542a1167c9", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/8650cbbb2ce2377f3b16b26d3d0840542a1167c9", "committedDate": "2020-11-16T23:25:43Z", "message": "Add comment requested in #12708"}, "afterCommit": {"oid": "a4e73a6fa7d873174693dbdfc6124bfad044d823", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/a4e73a6fa7d873174693dbdfc6124bfad044d823", "committedDate": "2020-11-24T22:37:44Z", "message": "Address feedback from #12708\n* Set blue from theme correctly\n* Update dropdown options for FunctionDropdownArgumentsWidget\nAlso, add FunctionDropdownArgumentsWidget to Storybook."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa9215aeabacbe4ec0651395f1a4f7b143c072b8", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/aa9215aeabacbe4ec0651395f1a4f7b143c072b8", "committedDate": "2020-12-01T00:20:20Z", "message": "CDAP-17098 Begin adding new widget for window aggregation configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8136f29946a1ce6cc8ec848e8661be3cd7e3593", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/d8136f29946a1ce6cc8ec848e8661be3cd7e3593", "committedDate": "2020-12-01T00:20:20Z", "message": "Clean up new widget in React. Remove Angular version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e16a239f990e2b30f40794774d10a3f9ceae5e0", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/0e16a239f990e2b30f40794774d10a3f9ceae5e0", "committedDate": "2020-12-01T00:20:20Z", "message": "Rename FunctionDropdownOptionsWidget to FunctionDropdownArgumentsWidget. Begin separate parser module for unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "629f8d36bbb4610e005a44e26701524176cf1050", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/629f8d36bbb4610e005a44e26701524176cf1050", "committedDate": "2020-12-01T00:20:20Z", "message": "Add unit tests for arguments widget parsing and serialization CDAP-17098"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6746686b9390c8ddcce50a2ce0b0f20bd2c44c61", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/6746686b9390c8ddcce50a2ce0b0f20bd2c44c61", "committedDate": "2020-12-01T00:20:20Z", "message": "Fix onChange handlers for FunctionDropdownArgumentsRow.\nSwitch fields input to InputFieldDropdown.\nAlign \"as\" text with alias input."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e94351888919463ad3ddae1084c5240a63a073d7", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/e94351888919463ad3ddae1084c5240a63a073d7", "committedDate": "2020-12-01T00:20:20Z", "message": "Convert FunctionDropdownArgumentsRows to use FormInputs components only"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0839810d60b1a23bdd5c847cfae0919c77b0520", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/e0839810d60b1a23bdd5c847cfae0919c77b0520", "committedDate": "2020-12-01T00:20:20Z", "message": "Remove unused code from FunctionDropdownArgumentsRow"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb3de2fdd9a79d1936971be530090c4752fd8a29", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/fb3de2fdd9a79d1936971be530090c4752fd8a29", "committedDate": "2020-12-01T00:20:20Z", "message": "Update FunctionDropdownArguments widget to encode optional arguments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ffb06d9f46240e73ff063eac00a9c036f74a41e", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/4ffb06d9f46240e73ff063eac00a9c036f74a41e", "committedDate": "2020-12-01T00:20:20Z", "message": "Add optional underline to Select and TextBox form inputs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42ca7acff750bff787b01285979eb329831ef147", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/42ca7acff750bff787b01285979eb329831ef147", "committedDate": "2020-12-01T00:20:21Z", "message": "Style Select FormInput component to look like other instances when underline is enabled"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15ab3daf717cceabde8efcb75a0ef99eb6c24958", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/15ab3daf717cceabde8efcb75a0ef99eb6c24958", "committedDate": "2020-12-01T00:20:21Z", "message": "Remove unneeded directive change for FunctionDropdownArgumentsWidget"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f9f8ca859d03b843f3b893e2c3d254a67fa290b", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/6f9f8ca859d03b843f3b893e2c3d254a67fa290b", "committedDate": "2020-12-01T00:20:21Z", "message": "Add comment requested in #12708"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3672c842799469a400d2f0feba1760b826f41797", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/3672c842799469a400d2f0feba1760b826f41797", "committedDate": "2020-12-01T00:20:21Z", "message": "Address feedback from #12708\n* Set blue from theme correctly\n* Update dropdown options for FunctionDropdownArgumentsWidget\nAlso, add FunctionDropdownArgumentsWidget to Storybook."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a4e73a6fa7d873174693dbdfc6124bfad044d823", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/a4e73a6fa7d873174693dbdfc6124bfad044d823", "committedDate": "2020-11-24T22:37:44Z", "message": "Address feedback from #12708\n* Set blue from theme correctly\n* Update dropdown options for FunctionDropdownArgumentsWidget\nAlso, add FunctionDropdownArgumentsWidget to Storybook."}, "afterCommit": {"oid": "3672c842799469a400d2f0feba1760b826f41797", "author": {"user": {"login": "njbriggs", "name": "Nick Briggs"}}, "url": "https://github.com/cdapio/cdap/commit/3672c842799469a400d2f0feba1760b826f41797", "committedDate": "2020-12-01T00:20:21Z", "message": "Address feedback from #12708\n* Set blue from theme correctly\n* Update dropdown options for FunctionDropdownArgumentsWidget\nAlso, add FunctionDropdownArgumentsWidget to Storybook."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1735, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}