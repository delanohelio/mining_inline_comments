{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NjAyMzgz", "number": 12853, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNjowMzoxNFrOE4Ov_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNjowMzoxNFrOE4Ov_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3Mzk3Mzc0OnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/store/AppMetadataStore.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNjowMzoxNFrOHyB1Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNjowMzoxNFrOHyB1Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjIyMDg0Mg==", "bodyText": "Can the table.count method actually take a collection of ranges such that one query is generated instead of two?", "url": "https://github.com/cdapio/cdap/pull/12853#discussion_r522220842", "createdAt": "2020-11-12T16:03:14Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/store/AppMetadataStore.java", "diffHunk": "@@ -270,7 +270,14 @@ public void scanApplications(Cursor cursor,\n   }\n \n   public long getApplicationCount() throws IOException {\n-    return getApplicationSpecificationTable().count(Range.all());\n+    // Get number of applications where namespace != SYSTEM (exclude system applications)\n+    Collection<Field<?>> fields = ImmutableList.of(Fields.stringField(StoreDefinition.AppMetadataStore.NAMESPACE_FIELD,\n+                                                                      NamespaceId.SYSTEM.getNamespace()));\n+    // Return sum of ranges [empty, SYSTEM) and (SYSTEM, empty)\n+    return getApplicationSpecificationTable().count(Range.create(null, Range.Bound.INCLUSIVE, fields,\n+                                                                 Range.Bound.EXCLUSIVE)) +\n+      getApplicationSpecificationTable().count(Range.create(fields, Range.Bound.EXCLUSIVE, null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "112740e0fa9cb552739d8fc674f0c9be1e1c63d9"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2594, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}