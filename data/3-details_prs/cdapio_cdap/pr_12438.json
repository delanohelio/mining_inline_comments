{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NDY1Njgy", "number": 12438, "title": "[CDAP-17057] Fix preference modal not resetting after error", "bodyText": "JIRA: https://issues.cask.co/browse/CDAP-17057\nBuild: https://builds.cask.co/browse/CDAP-UDUT718\nAddressed bug by resetting \"saving\" state when user clicks \"Save. Also made a few other fixes including:\n\nClear error when user clicks \"Reset\"\nMake \"Save\" button disabled only when a field is empty but not when there is an error\n\nLast but not least, added basic e2e test that checks that user can see error if they try to set system.profile.name at instance level, and they are also able to clear that error and save a valid preference.", "createdAt": "2020-07-07T14:51:18Z", "url": "https://github.com/cdapio/cdap/pull/12438", "merged": true, "mergeCommit": {"oid": "a476b98a568e2c27981cf7b2b407326fecd25769"}, "closed": true, "closedAt": "2020-07-16T16:45:00Z", "author": {"login": "yukiej"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0mjr_gFqTQ0NzUzNDg2Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1hV_GgBqjM1NTM5NDM0NDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NTM0ODY3", "url": "https://github.com/cdapio/cdap/pull/12438#pullrequestreview-447534867", "createdAt": "2020-07-13T19:24:03Z", "commit": {"oid": "437ba43dec91c05fdedf537fd331efb63edd32cb"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToyNDowM1rOGw2jEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToyNDo1N1rOGw2k-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3ODU0NA==", "bodyText": "nit: typo accordion", "url": "https://github.com/cdapio/cdap/pull/12438#discussion_r453878544", "createdAt": "2020-07-13T19:24:03Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/Administration/AdminConfigTabContent/SystemPrefsAccordion/index.js", "diffHunk": "@@ -215,6 +219,7 @@ export default class SystemPrefsAccordion extends Component {\n         className={classnames('admin-config-container system-prefs-container', {\n           expanded: this.props.expanded,\n         })}\n+        data-cy=\"system-prefs-accordian\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "437ba43dec91c05fdedf537fd331efb63edd32cb"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3OTAzNQ==", "bodyText": "does null work? It's better to set to null than undefined. Undefined can imply that the property doesn't exist", "url": "https://github.com/cdapio/cdap/pull/12438#discussion_r453879035", "createdAt": "2020-07-13T19:24:57Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/FastAction/SetPreferenceAction/SetPreferenceModal.js", "diffHunk": "@@ -258,6 +259,7 @@ export default class SetPreferenceModal extends Component {\n     event.preventDefault();\n     this.setState({\n       showResetMessage: true,\n+      error: undefined,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "437ba43dec91c05fdedf537fd331efb63edd32cb"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4Mjg1NzUz", "url": "https://github.com/cdapio/cdap/pull/12438#pullrequestreview-448285753", "createdAt": "2020-07-14T16:48:31Z", "commit": {"oid": "c7df8191918913991c3789efe6a1450345ea5159"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5OTQxNTQ4", "url": "https://github.com/cdapio/cdap/pull/12438#pullrequestreview-449941548", "createdAt": "2020-07-16T15:06:20Z", "commit": {"oid": "d286109a3279fd3120e3751c0bdb3b9ced238d33"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTowNjoyMFrOGyvYsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTowOTo1M1rOGyvi9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1ODM1NA==", "bodyText": "Could we use If component instead of ternary operator?", "url": "https://github.com/cdapio/cdap/pull/12438#discussion_r455858354", "createdAt": "2020-07-16T15:06:20Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/FastAction/SetPreferenceAction/SetPreferenceModal.js", "diffHunk": "@@ -469,9 +472,7 @@ export default class SetPreferenceModal extends Component {\n                 ) : null}\n               </div>\n               <div className=\"preferences-error\">\n-                {this.state.error ? (\n-                  <div className=\"bg-danger text-white\">{this.state.error}</div>\n-                ) : null}\n+                {this.state.error ? <div className=\"text-danger\">{this.state.error}</div> : null}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d286109a3279fd3120e3751c0bdb3b9ced238d33"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1OTA4NQ==", "bodyText": "Can we have a blank space between it blocks?", "url": "https://github.com/cdapio/cdap/pull/12438#discussion_r455859085", "createdAt": "2020-07-16T15:07:20Z", "author": {"login": "jennac3"}, "path": "cdap-ui/cypress/integration/admin.spec.ts", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the 'License'); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as Helpers from '../helpers';\n+\n+let headers = {};\n+\n+describe('Setting and saving preferences', () => {\n+  before(() => {\n+    Helpers.loginIfRequired().then(() => {\n+      cy.getCookie('CDAP_Auth_Token').then((cookie) => {\n+        if (!cookie) {\n+          return;\n+        }\n+        headers = {\n+          Authorization: 'Bearer ' + cookie.value,\n+        };\n+      });\n+    });\n+  });\n+  it('Should show error message if user tries to set profile at the instance level', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d286109a3279fd3120e3751c0bdb3b9ced238d33"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1OTQxNg==", "bodyText": "nit: We can also use dataCy('key-value-pair-0') for referring to data-cy.", "url": "https://github.com/cdapio/cdap/pull/12438#discussion_r455859416", "createdAt": "2020-07-16T15:07:44Z", "author": {"login": "jennac3"}, "path": "cdap-ui/cypress/integration/admin.spec.ts", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the 'License'); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as Helpers from '../helpers';\n+\n+let headers = {};\n+\n+describe('Setting and saving preferences', () => {\n+  before(() => {\n+    Helpers.loginIfRequired().then(() => {\n+      cy.getCookie('CDAP_Auth_Token').then((cookie) => {\n+        if (!cookie) {\n+          return;\n+        }\n+        headers = {\n+          Authorization: 'Bearer ' + cookie.value,\n+        };\n+      });\n+    });\n+  });\n+  it('Should show error message if user tries to set profile at the instance level', () => {\n+    cy.visit('cdap/administration/configuration');\n+\n+    cy.get('[data-cy=\"system-prefs-accordion\"]').click();\n+    cy.get('[data-cy=\"edit-system-prefs-btn\"]').click();\n+    cy.get('[data-cy=\"key-value-pair-0\"]').within(() => {\n+      cy.get('input[placeholder=\"key\"]')\n+        .clear()\n+        .type('system.profile.name');\n+      cy.get('input[placeholder=\"value\"]')\n+        .clear()\n+        .type('hello');\n+    });\n+    cy.get('[data-cy=\"save-prefs-btn\"]').click();\n+    cy.get('.preferences-error').should('exist');\n+  });\n+  it('Should allow user to save valid preference at instance level after fixing error', () => {\n+    cy.get('[data-cy=\"key-value-pair-0\"]').within(() => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d286109a3279fd3120e3751c0bdb3b9ced238d33"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg2MDk4MQ==", "bodyText": "nit: Is it possible to save name and hello into a constant variable since we use it across it blocks?", "url": "https://github.com/cdapio/cdap/pull/12438#discussion_r455860981", "createdAt": "2020-07-16T15:09:53Z", "author": {"login": "jennac3"}, "path": "cdap-ui/cypress/integration/admin.spec.ts", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the 'License'); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as Helpers from '../helpers';\n+\n+let headers = {};\n+\n+describe('Setting and saving preferences', () => {\n+  before(() => {\n+    Helpers.loginIfRequired().then(() => {\n+      cy.getCookie('CDAP_Auth_Token').then((cookie) => {\n+        if (!cookie) {\n+          return;\n+        }\n+        headers = {\n+          Authorization: 'Bearer ' + cookie.value,\n+        };\n+      });\n+    });\n+  });\n+  it('Should show error message if user tries to set profile at the instance level', () => {\n+    cy.visit('cdap/administration/configuration');\n+\n+    cy.get('[data-cy=\"system-prefs-accordion\"]').click();\n+    cy.get('[data-cy=\"edit-system-prefs-btn\"]').click();\n+    cy.get('[data-cy=\"key-value-pair-0\"]').within(() => {\n+      cy.get('input[placeholder=\"key\"]')\n+        .clear()\n+        .type('system.profile.name');\n+      cy.get('input[placeholder=\"value\"]')\n+        .clear()\n+        .type('hello');\n+    });\n+    cy.get('[data-cy=\"save-prefs-btn\"]').click();\n+    cy.get('.preferences-error').should('exist');\n+  });\n+  it('Should allow user to save valid preference at instance level after fixing error', () => {\n+    cy.get('[data-cy=\"key-value-pair-0\"]').within(() => {\n+      cy.get('input[placeholder=\"key\"]')\n+        .clear()\n+        .type('name');\n+    });\n+    cy.get('[data-cy=\"save-prefs-btn\"]').click();\n+    cy.get('.grid-row').within(() => {\n+      cy.contains('name').should('be.visible');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d286109a3279fd3120e3751c0bdb3b9ced238d33"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "737b89544fc1edeefee65b17fb5513dc28a292b1", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/737b89544fc1edeefee65b17fb5513dc28a292b1", "committedDate": "2020-07-16T15:54:22Z", "message": "Reset save button on error and add preferences e2e test\n\nClear error on reset\n\nDon't disable save unless a field is missing"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d286109a3279fd3120e3751c0bdb3b9ced238d33", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/d286109a3279fd3120e3751c0bdb3b9ced238d33", "committedDate": "2020-07-16T14:48:45Z", "message": "Make text color red for error message in preferences modal and add padding"}, "afterCommit": {"oid": "737b89544fc1edeefee65b17fb5513dc28a292b1", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/737b89544fc1edeefee65b17fb5513dc28a292b1", "committedDate": "2020-07-16T15:54:22Z", "message": "Reset save button on error and add preferences e2e test\n\nClear error on reset\n\nDon't disable save unless a field is missing"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1954, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}