{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NDc5NTM2", "number": 12001, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMDo1OTo0MVrODr40Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMTowMzo1NVrODr423g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MzQ2MjExOnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/DefaultPreviewRunnerModule.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMDo1OTo0MVrOF8fsQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMTo1NjozNVrOF8gmBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3ODExMg==", "bodyText": "I think preview should use remote?", "url": "https://github.com/cdapio/cdap/pull/12001#discussion_r398978112", "createdAt": "2020-03-27T00:59:41Z", "author": {"login": "yaojiefeng"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/DefaultPreviewRunnerModule.java", "diffHunk": "@@ -162,6 +164,8 @@ protected void configure() {\n     expose(OwnerAdmin.class);\n \n     bind(PreviewRequest.class).toInstance(previewRequest);\n+\n+    bind(PreferencesFetcher.class).to(LocalPreferencesFetcherInternal.class).in(Scopes.SINGLETON);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97651f545ba62f7f0b9a44ae65c820309871b43f"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk5MjkwMw==", "bodyText": "That change comes in the next PR :), this PR ensure there is no behavior change.\nThe plan is\nif cloudsql => bind to local, so same as today\nif nosql => bind to remote", "url": "https://github.com/cdapio/cdap/pull/12001#discussion_r398992903", "createdAt": "2020-03-27T01:56:35Z", "author": {"login": "wyzhang"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/DefaultPreviewRunnerModule.java", "diffHunk": "@@ -162,6 +164,8 @@ protected void configure() {\n     expose(OwnerAdmin.class);\n \n     bind(PreviewRequest.class).toInstance(previewRequest);\n+\n+    bind(PreferencesFetcher.class).to(LocalPreferencesFetcherInternal.class).in(Scopes.SINGLETON);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3ODExMg=="}, "originalCommit": {"oid": "97651f545ba62f7f0b9a44ae65c820309871b43f"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MzQ2OTEwOnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/PreferencesHttpHandlerInternal.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMTowMzo1NVrOF8fwPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQyMzoyNToyMFrOF9NFLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3OTEzNA==", "bodyText": "Better not changing the behavior, these existence check is fairly common in our http handler. The pref store is only responsible for fetch/put data, it is handler's responsibility to validate the existence of entity. If an entity doesn't exist, it is no point to return the preferences since we delete the preferences whenever a program is deleted.", "url": "https://github.com/cdapio/cdap/pull/12001#discussion_r398979134", "createdAt": "2020-03-27T01:03:55Z", "author": {"login": "yaojiefeng"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/PreferencesHttpHandlerInternal.java", "diffHunk": "@@ -77,9 +72,7 @@ public void getNamespacePreferences(HttpRequest request, HttpResponder responder\n                                       @PathParam(\"namespace-id\") String namespace,\n                                       @QueryParam(\"resolved\") boolean resolved) throws Exception {\n     NamespaceId namespaceId = new NamespaceId(namespace);\n-    if (!namespaceQueryAdmin.exists(namespaceId)) {\n-      throw new NamespaceNotFoundException(namespaceId);\n-    }\n+    // No need to check if namespace exists. PreferencesService returns an empty PreferencesDetail when that happens.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97651f545ba62f7f0b9a44ae65c820309871b43f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk5NjAxOA==", "bodyText": "Context is:\nThis preferences http handler was recently introduced to support per-service local levelDB and it is currently not used anywhere. So changing the behavior will not cause any regression.\nAs for validating entity existence, in general I agree with failing if entity doesn't exist. But I think it might make sense for preferences for 2 reasons:\n\npreferences support \"resolve\", so if the app doesn't exist, caller might want get resolved properties from parents.\npreview deploys apps locally and fetch resolved preferences before run the preview. I think that fetch returns properties from parent as the app is not deployed to appfabric. To achieve the same effect, remote preferences fetch have to handle the entity non-existence case", "url": "https://github.com/cdapio/cdap/pull/12001#discussion_r398996018", "createdAt": "2020-03-27T02:09:03Z", "author": {"login": "wyzhang"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/PreferencesHttpHandlerInternal.java", "diffHunk": "@@ -77,9 +72,7 @@ public void getNamespacePreferences(HttpRequest request, HttpResponder responder\n                                       @PathParam(\"namespace-id\") String namespace,\n                                       @QueryParam(\"resolved\") boolean resolved) throws Exception {\n     NamespaceId namespaceId = new NamespaceId(namespace);\n-    if (!namespaceQueryAdmin.exists(namespaceId)) {\n-      throw new NamespaceNotFoundException(namespaceId);\n-    }\n+    // No need to check if namespace exists. PreferencesService returns an empty PreferencesDetail when that happens.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3OTEzNA=="}, "originalCommit": {"oid": "97651f545ba62f7f0b9a44ae65c820309871b43f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY4NzExNQ==", "bodyText": "I agree that the remote and local implementations should have the same behavior. Failing on namespace not exists would actually be the backwards incompatible behavior in this case. Have we made sure the other internal endpoints would behave the same as their local counterparts?\nCan you add some javadocs for the method that explain the contract? Otherwise it is very easy to look at this class and think it should be checking for existence like all the other handlers.", "url": "https://github.com/cdapio/cdap/pull/12001#discussion_r399687115", "createdAt": "2020-03-28T17:24:21Z", "author": {"login": "albertshau"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/PreferencesHttpHandlerInternal.java", "diffHunk": "@@ -77,9 +72,7 @@ public void getNamespacePreferences(HttpRequest request, HttpResponder responder\n                                       @PathParam(\"namespace-id\") String namespace,\n                                       @QueryParam(\"resolved\") boolean resolved) throws Exception {\n     NamespaceId namespaceId = new NamespaceId(namespace);\n-    if (!namespaceQueryAdmin.exists(namespaceId)) {\n-      throw new NamespaceNotFoundException(namespaceId);\n-    }\n+    // No need to check if namespace exists. PreferencesService returns an empty PreferencesDetail when that happens.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3OTEzNA=="}, "originalCommit": {"oid": "97651f545ba62f7f0b9a44ae65c820309871b43f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcwNjMyMQ==", "bodyText": "Done.\nAdded javadoc to call it out that request won't fail in the case of non-existing entity.\nLet me refactor the test for local and remote in the next PR to have a parameterized test to ensure local vs remote goes through exact same test cases to validate the same behavior (i.e. similar to what I did in #12007 for testing local vs remote ScheduleFetcher)", "url": "https://github.com/cdapio/cdap/pull/12001#discussion_r399706321", "createdAt": "2020-03-28T20:32:34Z", "author": {"login": "wyzhang"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/PreferencesHttpHandlerInternal.java", "diffHunk": "@@ -77,9 +72,7 @@ public void getNamespacePreferences(HttpRequest request, HttpResponder responder\n                                       @PathParam(\"namespace-id\") String namespace,\n                                       @QueryParam(\"resolved\") boolean resolved) throws Exception {\n     NamespaceId namespaceId = new NamespaceId(namespace);\n-    if (!namespaceQueryAdmin.exists(namespaceId)) {\n-      throw new NamespaceNotFoundException(namespaceId);\n-    }\n+    // No need to check if namespace exists. PreferencesService returns an empty PreferencesDetail when that happens.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3OTEzNA=="}, "originalCommit": {"oid": "97651f545ba62f7f0b9a44ae65c820309871b43f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcwODg2OQ==", "bodyText": "@albertshau the problem is in local http handler we do check the existence of the entity, it is not in PreferencesService but in the actually handler. I don't think we should remove it here since it will cause confusion in the future in case there is some step involving getting preferences.\nPreview actually deploys app first and then call the run program method, I believe we get preferences when we actually run the program, at this step, all the entities should already be there. If the check of existence fails there, it means a bug in the app deploy or preview.", "url": "https://github.com/cdapio/cdap/pull/12001#discussion_r399708869", "createdAt": "2020-03-28T20:59:05Z", "author": {"login": "yaojiefeng"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/PreferencesHttpHandlerInternal.java", "diffHunk": "@@ -77,9 +72,7 @@ public void getNamespacePreferences(HttpRequest request, HttpResponder responder\n                                       @PathParam(\"namespace-id\") String namespace,\n                                       @QueryParam(\"resolved\") boolean resolved) throws Exception {\n     NamespaceId namespaceId = new NamespaceId(namespace);\n-    if (!namespaceQueryAdmin.exists(namespaceId)) {\n-      throw new NamespaceNotFoundException(namespaceId);\n-    }\n+    // No need to check if namespace exists. PreferencesService returns an empty PreferencesDetail when that happens.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3OTEzNA=="}, "originalCommit": {"oid": "97651f545ba62f7f0b9a44ae65c820309871b43f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcxMDE5Nw==", "bodyText": "Ah, I see the changes in PropertiesResolver, seems like this is only used there? Then it is fine to remove the existence check to keep the functionality same. Please ignore my previous comment", "url": "https://github.com/cdapio/cdap/pull/12001#discussion_r399710197", "createdAt": "2020-03-28T21:13:11Z", "author": {"login": "yaojiefeng"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/PreferencesHttpHandlerInternal.java", "diffHunk": "@@ -77,9 +72,7 @@ public void getNamespacePreferences(HttpRequest request, HttpResponder responder\n                                       @PathParam(\"namespace-id\") String namespace,\n                                       @QueryParam(\"resolved\") boolean resolved) throws Exception {\n     NamespaceId namespaceId = new NamespaceId(namespace);\n-    if (!namespaceQueryAdmin.exists(namespaceId)) {\n-      throw new NamespaceNotFoundException(namespaceId);\n-    }\n+    // No need to check if namespace exists. PreferencesService returns an empty PreferencesDetail when that happens.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3OTEzNA=="}, "originalCommit": {"oid": "97651f545ba62f7f0b9a44ae65c820309871b43f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyMTc3NQ==", "bodyText": "Yes. PreferencesFetcher is used in propertiesResolver only at the moment. But metadata service will use it as well in the future (to switch from local store access to REST calls)\n@yaojiefeng \"in local http handler we do check the existence of the entity\", I think you are referring to public http handler for preference. Also note that public endpoints return property map while internal ones return PreferencesDetail.", "url": "https://github.com/cdapio/cdap/pull/12001#discussion_r399721775", "createdAt": "2020-03-28T23:25:20Z", "author": {"login": "wyzhang"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/PreferencesHttpHandlerInternal.java", "diffHunk": "@@ -77,9 +72,7 @@ public void getNamespacePreferences(HttpRequest request, HttpResponder responder\n                                       @PathParam(\"namespace-id\") String namespace,\n                                       @QueryParam(\"resolved\") boolean resolved) throws Exception {\n     NamespaceId namespaceId = new NamespaceId(namespace);\n-    if (!namespaceQueryAdmin.exists(namespaceId)) {\n-      throw new NamespaceNotFoundException(namespaceId);\n-    }\n+    // No need to check if namespace exists. PreferencesService returns an empty PreferencesDetail when that happens.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3OTEzNA=="}, "originalCommit": {"oid": "97651f545ba62f7f0b9a44ae65c820309871b43f"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2882, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}