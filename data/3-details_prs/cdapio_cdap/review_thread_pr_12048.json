{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNzQ0NTU5", "number": 12048, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOTo1ODowMVrODw2FeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxODoxODo1OFrODxVdOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTQ0Mzc3OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/SelectTables/ManualSelectTable/ColumnsMultiRow/ColumnRow.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOTo1ODowMVrOGEETKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOTo1ODowMVrOGEETKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxNzkzMA==", "bodyText": "2020?", "url": "https://github.com/cdapio/cdap/pull/12048#discussion_r406917930", "createdAt": "2020-04-10T19:58:01Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/SelectTables/ManualSelectTable/ColumnsMultiRow/ColumnRow.tsx", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright \u00a9 2019 Cask Data, Inc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b33a30e0788b3414b3fdef304381f02a09578c3"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTU3NjI3OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/Advanced/index.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMDo1MDozN1rOGEFkfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMDo1MDozN1rOGEFkfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzODc0OQ==", "bodyText": "this seems like it is for offsetBasePath?", "url": "https://github.com/cdapio/cdap/pull/12048#discussion_r406938749", "createdAt": "2020-04-10T20:50:37Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/Advanced/index.tsx", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import { createContextConnect, ICreateContext } from 'components/Replicator/Create';\n+import StepButtons from 'components/Replicator/Create/Content/StepButtons';\n+import WidgetWrapper from 'components/ConfigurationGroup/WidgetWrapper';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    root: {\n+      padding: '30px 40px',\n+    },\n+    numInstances: {\n+      width: '200px',\n+    },\n+  };\n+};\n+\n+const OffsetBasePath = ({ onChange, value }) => {\n+  const widget = {\n+    label: 'Offset base path',\n+    name: 'offset',\n+    'widget-type': 'textbox',\n+    'widget-attributes': {\n+      min: 1,\n+    },\n+  };\n+\n+  const property = {\n+    required: false,\n+    name: 'offset',\n+  };\n+\n+  return (\n+    <WidgetWrapper\n+      widgetProperty={widget}\n+      pluginProperty={property}\n+      value={value}\n+      onChange={onChange}\n+    />\n+  );\n+};\n+\n+const NumInstances = ({ onChange, value }) => {\n+  const widget = {\n+    label: 'Number of instances',\n+    name: 'numInstance',\n+    'widget-type': 'number',\n+    'widget-attributes': {\n+      placeholder: 'Path for offset storage location',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad9ef61daf7927291ea0dd1b74518db19e8384d5"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTYwMDY1OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/Advanced/index.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMTowMDoyNVrOGEFzZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMTowMDoyNVrOGEFzZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MjU2NQ==", "bodyText": "nit: It's a little confusing to me (and potentially prone to errors when ppl have typos) to have both OffsetBasePath and offsetBasePath - maybe this one and NumInstances could be named in a way to make it more clear that they are returning a widget/component?", "url": "https://github.com/cdapio/cdap/pull/12048#discussion_r406942565", "createdAt": "2020-04-10T21:00:25Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/Advanced/index.tsx", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import { createContextConnect, ICreateContext } from 'components/Replicator/Create';\n+import StepButtons from 'components/Replicator/Create/Content/StepButtons';\n+import WidgetWrapper from 'components/ConfigurationGroup/WidgetWrapper';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    root: {\n+      padding: '30px 40px',\n+    },\n+    numInstances: {\n+      width: '200px',\n+    },\n+  };\n+};\n+\n+const OffsetBasePath = ({ onChange, value }) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad9ef61daf7927291ea0dd1b74518db19e8384d5"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDU4MzYzOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/SelectTables/ManualSelectTable/ColumnsMultiRow/index.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxODoxODo1OFrOGEv4fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxODozNTo0N1rOGEwcXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYzMTk5Nw==", "bodyText": "why do we use props.value.size here instead of length? (same question for tablemultirow)", "url": "https://github.com/cdapio/cdap/pull/12048#discussion_r407631997", "createdAt": "2020-04-13T18:18:58Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/SelectTables/ManualSelectTable/ColumnsMultiRow/index.tsx", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import AbstractMultiRowWidget, {\n+  IMultiRowProps,\n+} from 'components/AbstractWidget/AbstractMultiRowWidget';\n+import ColumnRow from 'components/Replicator/Create/Content/SelectTables/ManualSelectTable/ColumnsMultiRow/ColumnRow';\n+\n+interface IColumnsMultiRowProps extends IMultiRowProps<{}> {\n+  value: any;\n+}\n+\n+class ColumnsMultiRow extends AbstractMultiRowWidget<IColumnsMultiRowProps> {\n+  public componentWillReceiveProps() {\n+    // overwrite\n+    // no-op\n+  }\n+\n+  public deconstructValues = (props) => {\n+    if (!props.value || props.value.size === 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01639c99b2788de4f355ee2238e4c0a1c3ab0c2a"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY0MTE4Mg==", "bodyText": "good catch. Left over from when I was using immutableJS here", "url": "https://github.com/cdapio/cdap/pull/12048#discussion_r407641182", "createdAt": "2020-04-13T18:35:47Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/SelectTables/ManualSelectTable/ColumnsMultiRow/index.tsx", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import AbstractMultiRowWidget, {\n+  IMultiRowProps,\n+} from 'components/AbstractWidget/AbstractMultiRowWidget';\n+import ColumnRow from 'components/Replicator/Create/Content/SelectTables/ManualSelectTable/ColumnsMultiRow/ColumnRow';\n+\n+interface IColumnsMultiRowProps extends IMultiRowProps<{}> {\n+  value: any;\n+}\n+\n+class ColumnsMultiRow extends AbstractMultiRowWidget<IColumnsMultiRowProps> {\n+  public componentWillReceiveProps() {\n+    // overwrite\n+    // no-op\n+  }\n+\n+  public deconstructValues = (props) => {\n+    if (!props.value || props.value.size === 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYzMTk5Nw=="}, "originalCommit": {"oid": "01639c99b2788de4f355ee2238e4c0a1c3ab0c2a"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2728, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}