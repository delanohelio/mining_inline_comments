{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1ODE5NTc1", "number": 12488, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxODoxNzowMlrOERkBqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzo1NjowM1rOESfuVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODUxNDk4OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/services/helpers.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxODoxNzowMlrOG2WL0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxODozNDo1NlrOG2Wyjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYzOTc2Mg==", "bodyText": "Is the condition above correct? If I'm reading the condition correctly, errorsByOrigin['network'] will always be undefined here.", "url": "https://github.com/cdapio/cdap/pull/12488#discussion_r459639762", "createdAt": "2020-07-23T18:17:02Z", "author": {"login": "njbriggs"}, "path": "cdap-ui/app/cdap/services/helpers.js", "diffHunk": "@@ -489,6 +489,37 @@ function connectWithStore(store, WrappedComponent, ...args) {\n     return <ConnectedWrappedComponent {...props} store={store} />;\n   };\n }\n+/**\n+ * This function formats the graphQl errors by error type\n+ * { errorType: ['message1', 'message2'] ....} will be\n+ * the format of categorized errors.\n+ */\n+function categorizeGraphQlErrors(error) {\n+  const GENERIC_ERROR_ORIGIN = 'generic';\n+  const graphQLErrors = objectQuery(error, 'graphQLErrors') || [];\n+  const networkErrors = objectQuery(error, 'networkError') || [];\n+  const errorsByOrigin = {};\n+  if (graphQLErrors.length === 0 && networkErrors.length === 0 && error) {\n+    errorsByOrigin[GENERIC_ERROR_ORIGIN] = error.message;\n+  }\n+  graphQLErrors.forEach(error => {\n+    const errorOrigin = objectQuery(error, 'extensions', 'exception', 'errorOrigin') || GENERIC_ERROR_ORIGIN;\n+    if (errorsByOrigin.hasOwnProperty(errorOrigin)) {\n+      errorsByOrigin[errorOrigin] = [error.message];\n+    }\n+    else {\n+      errorsByOrigin[errorOrigin].push([error.message]);\n+    }\n+  });\n+  networkErrors.forEach(error => {\n+    if (errorsByOrigin.hasOwnProperty('network')) {\n+      errorsByOrigin['network'] = [error.message];\n+    } else {\n+      errorsByOrigin['network'].push([error.message]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e45ac92e04fbc8683d31ec73b0da6c4b95860caf"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY0OTY3OQ==", "bodyText": "Fixed the condition", "url": "https://github.com/cdapio/cdap/pull/12488#discussion_r459649679", "createdAt": "2020-07-23T18:34:56Z", "author": {"login": "itsanudeep"}, "path": "cdap-ui/app/cdap/services/helpers.js", "diffHunk": "@@ -489,6 +489,37 @@ function connectWithStore(store, WrappedComponent, ...args) {\n     return <ConnectedWrappedComponent {...props} store={store} />;\n   };\n }\n+/**\n+ * This function formats the graphQl errors by error type\n+ * { errorType: ['message1', 'message2'] ....} will be\n+ * the format of categorized errors.\n+ */\n+function categorizeGraphQlErrors(error) {\n+  const GENERIC_ERROR_ORIGIN = 'generic';\n+  const graphQLErrors = objectQuery(error, 'graphQLErrors') || [];\n+  const networkErrors = objectQuery(error, 'networkError') || [];\n+  const errorsByOrigin = {};\n+  if (graphQLErrors.length === 0 && networkErrors.length === 0 && error) {\n+    errorsByOrigin[GENERIC_ERROR_ORIGIN] = error.message;\n+  }\n+  graphQLErrors.forEach(error => {\n+    const errorOrigin = objectQuery(error, 'extensions', 'exception', 'errorOrigin') || GENERIC_ERROR_ORIGIN;\n+    if (errorsByOrigin.hasOwnProperty(errorOrigin)) {\n+      errorsByOrigin[errorOrigin] = [error.message];\n+    }\n+    else {\n+      errorsByOrigin[errorOrigin].push([error.message]);\n+    }\n+  });\n+  networkErrors.forEach(error => {\n+    if (errorsByOrigin.hasOwnProperty('network')) {\n+      errorsByOrigin['network'] = [error.message];\n+    } else {\n+      errorsByOrigin['network'].push([error.message]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYzOTc2Mg=="}, "originalCommit": {"oid": "e45ac92e04fbc8683d31ec73b0da6c4b95860caf"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODE4MDg2OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/text/text-en.yaml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzoyNDo0MVrOG3sPtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMDoxMjoyMFrOG4c_rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0OTc4MQ==", "bodyText": "nit: can you validate this message with @leacd ?\nI think its a bit better to say Multiple services encountered some issues retrieving pipelines.....", "url": "https://github.com/cdapio/cdap/pull/12488#discussion_r461049781", "createdAt": "2020-07-27T17:24:41Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/text/text-en.yaml", "diffHunk": "@@ -2145,6 +2145,7 @@ features:\n         1: \"pipeline \"\n         _: \"pipelines \"\n     DeployedPipelineView:\n+      graphQLMultipleServicesDown: Multiple services ran into issues when trying to retrieve list of pipelines. Please try again later.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15d5de7a88a63fa5837f0d694077c637f5cdeb18"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcwNjkyNA==", "bodyText": "Reached out to Lea, waiting on her suggestion", "url": "https://github.com/cdapio/cdap/pull/12488#discussion_r461706924", "createdAt": "2020-07-28T16:18:01Z", "author": {"login": "itsanudeep"}, "path": "cdap-ui/app/cdap/text/text-en.yaml", "diffHunk": "@@ -2145,6 +2145,7 @@ features:\n         1: \"pipeline \"\n         _: \"pipelines \"\n     DeployedPipelineView:\n+      graphQLMultipleServicesDown: Multiple services ran into issues when trying to retrieve list of pipelines. Please try again later.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0OTc4MQ=="}, "originalCommit": {"oid": "15d5de7a88a63fa5837f0d694077c637f5cdeb18"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg0ODQ5Mg==", "bodyText": "updated the message", "url": "https://github.com/cdapio/cdap/pull/12488#discussion_r461848492", "createdAt": "2020-07-28T20:12:20Z", "author": {"login": "itsanudeep"}, "path": "cdap-ui/app/cdap/text/text-en.yaml", "diffHunk": "@@ -2145,6 +2145,7 @@ features:\n         1: \"pipeline \"\n         _: \"pipelines \"\n     DeployedPipelineView:\n+      graphQLMultipleServicesDown: Multiple services ran into issues when trying to retrieve list of pipelines. Please try again later.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0OTc4MQ=="}, "originalCommit": {"oid": "15d5de7a88a63fa5837f0d694077c637f5cdeb18"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODI5NTkxOnYy", "diffSide": "RIGHT", "path": "cdap-ui/graphql/resolvers-common.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzo1NjowM1rOG3tWfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNjoxNzo0OFrOG4UWFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NzkwMQ==", "bodyText": "Don't think we should hardcode 500 here. We might have 403 or 401 errors tomorrow which should not converted. Can we get the status code from the request response?", "url": "https://github.com/cdapio/cdap/pull/12488#discussion_r461067901", "createdAt": "2020-07-27T17:56:03Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/graphql/resolvers-common.js", "diffHunk": "@@ -41,14 +41,24 @@ export function requestPromiseWrapper(options, token, bodyModifiersFn) {\n   return new Promise((resolve, reject) => {\n     request(options, (err, response, body) => {\n       if (err) {\n-        const error =  new ApolloError(err, '500');\n-        return reject(error);\n+        let exception;\n+        if (typeof errorModifiersFn === 'function') {\n+          exception = errorModifiersFn(err, '500');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15d5de7a88a63fa5837f0d694077c637f5cdeb18"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcwNjc3NA==", "bodyText": "done", "url": "https://github.com/cdapio/cdap/pull/12488#discussion_r461706774", "createdAt": "2020-07-28T16:17:48Z", "author": {"login": "itsanudeep"}, "path": "cdap-ui/graphql/resolvers-common.js", "diffHunk": "@@ -41,14 +41,24 @@ export function requestPromiseWrapper(options, token, bodyModifiersFn) {\n   return new Promise((resolve, reject) => {\n     request(options, (err, response, body) => {\n       if (err) {\n-        const error =  new ApolloError(err, '500');\n-        return reject(error);\n+        let exception;\n+        if (typeof errorModifiersFn === 'function') {\n+          exception = errorModifiersFn(err, '500');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NzkwMQ=="}, "originalCommit": {"oid": "15d5de7a88a63fa5837f0d694077c637f5cdeb18"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3238, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}