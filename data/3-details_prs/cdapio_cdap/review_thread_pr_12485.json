{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1Mzc4MjYx", "number": 12485, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNDo0Mzo0M1rOERe2NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNDo0Mzo0M1rOERe2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzY2NjQ0OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/LogViewer/TopPanel.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNDo0Mzo0M1rOG2N3og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjowOTozMFrOG2Rluw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUwMzUyMg==", "bodyText": "Should this be !isPolling?", "url": "https://github.com/cdapio/cdap/pull/12485#discussion_r459503522", "createdAt": "2020-07-23T14:43:43Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/LogViewer/TopPanel.tsx", "diffHunk": "@@ -0,0 +1,154 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import DataFetcher from 'components/LogViewer/DataFetcher';\n+import Button from '@material-ui/core/Button';\n+import FormControlLabel from '@material-ui/core/FormControlLabel';\n+import Checkbox from '@material-ui/core/Checkbox';\n+import classnames from 'classnames';\n+\n+export const TOP_PANEL_HEIGHT = '50px';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    root: {\n+      backgroundColor: theme.palette.grey[100],\n+      color: theme.palette.white[50],\n+      display: 'flex',\n+      justifyContent: 'flex-end',\n+      alignItems: 'center',\n+      height: TOP_PANEL_HEIGHT,\n+      paddingLeft: '20px',\n+      paddingRight: '20px',\n+      position: 'relative',\n+    },\n+    actionButton: {\n+      margin: theme.spacing(1),\n+\n+      '&:hover': {\n+        color: theme.palette.white[50],\n+        borderColor: theme.palette.white[50],\n+        backgroundColor: theme.palette.grey[200],\n+      },\n+\n+      '&$disabled': {\n+        // needed to beat specificity\n+        color: theme.palette.grey[50],\n+        cursor: 'not-allowed',\n+        backgroundColor: theme.palette.white[50],\n+      },\n+    },\n+    disabled: {},\n+    checkboxContainer: {\n+      margin: '0 40px',\n+      userSelect: 'none',\n+    },\n+    checkbox: {\n+      color: theme.palette.white[50],\n+    },\n+  };\n+};\n+\n+interface ITopPanelProps extends WithStyles<typeof styles> {\n+  dataFetcher: DataFetcher;\n+  isPolling: boolean;\n+  getLatestLogs: () => void;\n+  setSystemLogs: (includeSystemLogs: boolean) => void;\n+}\n+\n+const TopPanelView: React.FC<ITopPanelProps> = ({\n+  classes,\n+  dataFetcher,\n+  isPolling,\n+  getLatestLogs,\n+  setSystemLogs,\n+}) => {\n+  const [includeSystemLogs, setLocalIncludeSystemLogs] = React.useState(\n+    dataFetcher.getIncludeSystemLogs()\n+  );\n+\n+  function getRawLogsBasePath() {\n+    const backendUrl = dataFetcher.getRawLogsUrl();\n+    const encodedBackendUrl = encodeURIComponent(backendUrl);\n+\n+    const url = `/downloadLogs?backendPath=${encodedBackendUrl}`;\n+    return url;\n+  }\n+\n+  function getRawLogsUrl() {\n+    return `${getRawLogsBasePath()}&type=raw`;\n+  }\n+\n+  function getDownloadLogsUrl() {\n+    const fileName = dataFetcher.getDownloadFileName();\n+    return `${getRawLogsBasePath()}&type=download&filename=${fileName}.log`;\n+  }\n+\n+  function handleToggleSystemLogs() {\n+    const newState = !includeSystemLogs;\n+    setLocalIncludeSystemLogs(newState);\n+    setSystemLogs(newState);\n+  }\n+\n+  return (\n+    <div className={classes.root}>\n+      <FormControlLabel\n+        control={\n+          <Checkbox\n+            checked={includeSystemLogs}\n+            onChange={handleToggleSystemLogs}\n+            color=\"default\"\n+            className={classes.checkbox}\n+          />\n+        }\n+        label=\"Include System Logs\"\n+        className={classes.checkboxContainer}\n+      />\n+\n+      <Button\n+        variant=\"outlined\"\n+        color=\"inherit\"\n+        className={classnames(classes.actionButton, { [classes.disabled]: isPolling })}\n+        disabled={isPolling}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ca8d115d8b7e67c77dd8f451c5724bb39704ae4"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU2NDQ3NQ==", "bodyText": "we want to disable the Get Latest Logs when it is currently polling, since Get Latest Logs is the mechanism where the user can restart the poll.", "url": "https://github.com/cdapio/cdap/pull/12485#discussion_r459564475", "createdAt": "2020-07-23T16:09:30Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/LogViewer/TopPanel.tsx", "diffHunk": "@@ -0,0 +1,154 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import DataFetcher from 'components/LogViewer/DataFetcher';\n+import Button from '@material-ui/core/Button';\n+import FormControlLabel from '@material-ui/core/FormControlLabel';\n+import Checkbox from '@material-ui/core/Checkbox';\n+import classnames from 'classnames';\n+\n+export const TOP_PANEL_HEIGHT = '50px';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    root: {\n+      backgroundColor: theme.palette.grey[100],\n+      color: theme.palette.white[50],\n+      display: 'flex',\n+      justifyContent: 'flex-end',\n+      alignItems: 'center',\n+      height: TOP_PANEL_HEIGHT,\n+      paddingLeft: '20px',\n+      paddingRight: '20px',\n+      position: 'relative',\n+    },\n+    actionButton: {\n+      margin: theme.spacing(1),\n+\n+      '&:hover': {\n+        color: theme.palette.white[50],\n+        borderColor: theme.palette.white[50],\n+        backgroundColor: theme.palette.grey[200],\n+      },\n+\n+      '&$disabled': {\n+        // needed to beat specificity\n+        color: theme.palette.grey[50],\n+        cursor: 'not-allowed',\n+        backgroundColor: theme.palette.white[50],\n+      },\n+    },\n+    disabled: {},\n+    checkboxContainer: {\n+      margin: '0 40px',\n+      userSelect: 'none',\n+    },\n+    checkbox: {\n+      color: theme.palette.white[50],\n+    },\n+  };\n+};\n+\n+interface ITopPanelProps extends WithStyles<typeof styles> {\n+  dataFetcher: DataFetcher;\n+  isPolling: boolean;\n+  getLatestLogs: () => void;\n+  setSystemLogs: (includeSystemLogs: boolean) => void;\n+}\n+\n+const TopPanelView: React.FC<ITopPanelProps> = ({\n+  classes,\n+  dataFetcher,\n+  isPolling,\n+  getLatestLogs,\n+  setSystemLogs,\n+}) => {\n+  const [includeSystemLogs, setLocalIncludeSystemLogs] = React.useState(\n+    dataFetcher.getIncludeSystemLogs()\n+  );\n+\n+  function getRawLogsBasePath() {\n+    const backendUrl = dataFetcher.getRawLogsUrl();\n+    const encodedBackendUrl = encodeURIComponent(backendUrl);\n+\n+    const url = `/downloadLogs?backendPath=${encodedBackendUrl}`;\n+    return url;\n+  }\n+\n+  function getRawLogsUrl() {\n+    return `${getRawLogsBasePath()}&type=raw`;\n+  }\n+\n+  function getDownloadLogsUrl() {\n+    const fileName = dataFetcher.getDownloadFileName();\n+    return `${getRawLogsBasePath()}&type=download&filename=${fileName}.log`;\n+  }\n+\n+  function handleToggleSystemLogs() {\n+    const newState = !includeSystemLogs;\n+    setLocalIncludeSystemLogs(newState);\n+    setSystemLogs(newState);\n+  }\n+\n+  return (\n+    <div className={classes.root}>\n+      <FormControlLabel\n+        control={\n+          <Checkbox\n+            checked={includeSystemLogs}\n+            onChange={handleToggleSystemLogs}\n+            color=\"default\"\n+            className={classes.checkbox}\n+          />\n+        }\n+        label=\"Include System Logs\"\n+        className={classes.checkboxContainer}\n+      />\n+\n+      <Button\n+        variant=\"outlined\"\n+        color=\"inherit\"\n+        className={classnames(classes.actionButton, { [classes.disabled]: isPolling })}\n+        disabled={isPolling}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUwMzUyMg=="}, "originalCommit": {"oid": "9ca8d115d8b7e67c77dd8f451c5724bb39704ae4"}, "originalPosition": 127}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3236, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}