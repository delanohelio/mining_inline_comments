{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMjQyNDQy", "number": 12304, "title": "[CDAP-16784] Add Kryo serializers for unmodifiable class types", "bodyText": "Kryo serializer was causing unit test failures when enabled as the default serializer for spark. The failures were caused by Kryo's incorrect handling of the Unmodifiable classes within java.util.Collections. Custom serializers were added to correctly handle these types", "createdAt": "2020-06-11T17:48:14Z", "url": "https://github.com/cdapio/cdap/pull/12304", "merged": true, "mergeCommit": {"oid": "8b23da93ea3d3c1969a7cedac77ebb2e2f12f8cd"}, "closed": true, "closedAt": "2020-06-12T17:36:01Z", "author": {"login": "MEseifan"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqSLucAFqTQyOTE1ODM0MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcql4f5ABqjM0MzkyNDIwODE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MTU4MzQw", "url": "https://github.com/cdapio/cdap/pull/12304#pullrequestreview-429158340", "createdAt": "2020-06-11T17:56:54Z", "commit": {"oid": "4436d764009ec37a459e3f75e774798f789fd237"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzo1Njo1NVrOGiosZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODowMDozM1rOGio0nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3MTQ5NA==", "bodyText": "Seems unnecessary?", "url": "https://github.com/cdapio/cdap/pull/12304#discussion_r438971494", "createdAt": "2020-06-11T17:56:55Z", "author": {"login": "chtyim"}, "path": "cdap-app-templates/cdap-etl/cdap-data-streams/src/main/java/io/cdap/cdap/datastreams/DataStreamsSparkLauncher.java", "diffHunk": "@@ -98,6 +98,7 @@ public void initialize() throws Exception {\n \n     SparkConf sparkConf = new SparkConf();\n     sparkConf.set(\"spark.streaming.backpressure.enabled\", \"true\");\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4436d764009ec37a459e3f75e774798f789fd237"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3MTYzNg==", "bodyText": "Unused import?", "url": "https://github.com/cdapio/cdap/pull/12304#discussion_r438971636", "createdAt": "2020-06-11T17:57:04Z", "author": {"login": "chtyim"}, "path": "cdap-app-templates/cdap-etl/hydrator-spark-core-base/src/main/java/io/cdap/cdap/etl/spark/batch/ETLSpark.java", "diffHunk": "@@ -39,6 +39,7 @@\n import io.cdap.cdap.etl.common.submit.Finisher;\n import io.cdap.cdap.internal.io.SchemaTypeAdapter;\n import org.apache.spark.SparkConf;\n+import org.apache.spark.storage.StorageLevel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4436d764009ec37a459e3f75e774798f789fd237"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3MjA0OA==", "bodyText": "Add this after all the Type constant. Make it easier for eyes", "url": "https://github.com/cdapio/cdap/pull/12304#discussion_r438972048", "createdAt": "2020-06-11T17:57:44Z", "author": {"login": "chtyim"}, "path": "cdap-spark-core-base/src/main/java/io/cdap/cdap/app/runtime/spark/classloader/SparkClassRewriter.java", "diffHunk": "@@ -104,6 +112,8 @@\n     Type.getObjectType(\"io/cdap/cdap/app/runtime/spark/serializer/SchemaSerializer\");\n   private static final Type STRUCTURED_RECORD_SERIALIZER_TYPE =\n     Type.getObjectType(\"io/cdap/cdap/app/runtime/spark/serializer/StructuredRecordSerializer\");\n+  private static final String UNMODIFIABLE_SERIALIZERS_TYPE_FORMAT =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4436d764009ec37a459e3f75e774798f789fd237"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3MjI4Mw==", "bodyText": "Unnecessary new line", "url": "https://github.com/cdapio/cdap/pull/12304#discussion_r438972283", "createdAt": "2020-06-11T17:58:07Z", "author": {"login": "chtyim"}, "path": "cdap-spark-core-base/src/main/java/io/cdap/cdap/app/runtime/spark/classloader/SparkClassRewriter.java", "diffHunk": "@@ -351,11 +361,12 @@ void onMethodExit(String name, String desc, GeneratorAdapter generatorAdapter) {\n     // Map from getResource* methods to the method signature\n     // (can be null, since only method that has generic has signature)\n     final Map<Method, String> resourceMethods = new HashMap<>();\n-    Method method = new Method(\"getResource\", Type.getType(URL.class), new Type[]{Type.getType(String.class)});\n+    Method method = new Method(\"getResource\", Type.getType(URL.class), new Type[] { Type.getType(String.class) });\n     resourceMethods.put(method, null);\n \n     method = new Method(\"getResources\", Type.getType(Enumeration.class), new Type[] { Type.getType(String.class) });\n-    resourceMethods.put(method, Signatures.getMethodSignature(method, new TypeToken<Enumeration<URL>>() { },\n+    resourceMethods.put(method, Signatures.getMethodSignature(method, new TypeToken<Enumeration<URL>>() {\n+                                                              },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4436d764009ec37a459e3f75e774798f789fd237"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3MjUzMw==", "bodyText": "Pull this out as a private static class.", "url": "https://github.com/cdapio/cdap/pull/12304#discussion_r438972533", "createdAt": "2020-06-11T17:58:36Z", "author": {"login": "chtyim"}, "path": "cdap-spark-core-base/src/main/java/io/cdap/cdap/app/runtime/spark/classloader/SparkClassRewriter.java", "diffHunk": "@@ -450,6 +461,24 @@ public void visitEnd() {\n    */\n   private byte[] rewriteKryo(InputStream byteCodeStream) throws IOException {\n     return rewriteConstructor(KRYO_TYPE, byteCodeStream, new ConstructorRewriter() {\n+      class UnmodifiableData {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4436d764009ec37a459e3f75e774798f789fd237"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3MzIyMg==", "bodyText": "Suggest to use LinkedHashMap to maintain order", "url": "https://github.com/cdapio/cdap/pull/12304#discussion_r438973222", "createdAt": "2020-06-11T17:59:54Z", "author": {"login": "chtyim"}, "path": "cdap-spark-core-base/src/main/java/io/cdap/cdap/app/runtime/spark/classloader/SparkClassRewriter.java", "diffHunk": "@@ -468,17 +497,46 @@ public void onMethodExit(String name, String desc, GeneratorAdapter generatorAda\n         generatorAdapter.push(STRUCTURED_RECORD_SERIALIZER_TYPE);\n         generatorAdapter.invokeVirtual(KRYO_TYPE,\n                                        new Method(\"addDefaultSerializer\", Type.VOID_TYPE,\n-                                                  new Type[] { Type.getType(Class.class), Type.getType(Class.class)}));\n+                                                  new Type[] { Type.getType(Class.class), Type.getType(Class.class) }));\n+\n+        // Register serializer for all Unmodifiable classes within Collections. Ex:\n+        // addDefaultSerializer(Collections.unmodifiableMap(new HashMap<>()).getClass(),\n+        //                      UnmodifiableMapSerializer.class);\n+        List<UnmodifiableData> unmodifableTypesData = new ArrayList<>();\n+        unmodifableTypesData.add(new UnmodifiableData(\"Collection\", Collection.class, LinkedList.class));\n+        unmodifableTypesData.add(new UnmodifiableData(\"List\", List.class, LinkedList.class));\n+        unmodifableTypesData.add(new UnmodifiableData(\"Set\", Set.class, LinkedHashSet.class));\n+        unmodifableTypesData.add(new UnmodifiableData(\"SortedSet\", SortedSet.class, TreeSet.class));\n+        unmodifableTypesData.add(new UnmodifiableData(\"Map\", Map.class, HashMap.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4436d764009ec37a459e3f75e774798f789fd237"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3MzU5Nw==", "bodyText": "Unnecessary indentation.", "url": "https://github.com/cdapio/cdap/pull/12304#discussion_r438973597", "createdAt": "2020-06-11T18:00:33Z", "author": {"login": "chtyim"}, "path": "cdap-spark-core-base/src/main/java/io/cdap/cdap/app/runtime/spark/classloader/SparkClassRewriter.java", "diffHunk": "@@ -507,9 +565,9 @@ public MethodVisitor visitMethod(int access, final String name,\n           public void visitMethodInsn(int opcode, String owner, String name, String desc, boolean itf) {\n             // See if in this constructor it is calling other constructor (this(..)).\n             calledThis = calledThis || (opcode == Opcodes.INVOKESPECIAL\n-              && Type.getObjectType(owner).equals(classType)\n-              && name.equals(\"<init>\")\n-              && Type.getReturnType(desc).equals(Type.VOID_TYPE));\n+                                        && Type.getObjectType(owner).equals(classType)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4436d764009ec37a459e3f75e774798f789fd237"}, "originalPosition": 146}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f3081ee71685d633d61568aff6337672263684bd", "author": {"user": {"login": "MEseifan", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/f3081ee71685d633d61568aff6337672263684bd", "committedDate": "2020-06-11T18:20:20Z", "message": "Addressed comments"}, "afterCommit": {"oid": "08743441634c5f00a070494ffef0bae2a4aeb8c6", "author": {"user": {"login": "MEseifan", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/08743441634c5f00a070494ffef0bae2a4aeb8c6", "committedDate": "2020-06-11T18:27:30Z", "message": "Addressed comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NDA3ODIy", "url": "https://github.com/cdapio/cdap/pull/12304#pullrequestreview-429407822", "createdAt": "2020-06-12T01:38:29Z", "commit": {"oid": "08743441634c5f00a070494ffef0bae2a4aeb8c6"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTozODoyOVrOGi0VBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo0MTo1OFrOGi0YKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2MjExOQ==", "bodyText": "Move private class to the end of the file. Not to interrupt the code flow. Also, add a javadoc for the class.", "url": "https://github.com/cdapio/cdap/pull/12304#discussion_r439162119", "createdAt": "2020-06-12T01:38:29Z", "author": {"login": "chtyim"}, "path": "cdap-spark-core-base/src/main/java/io/cdap/cdap/app/runtime/spark/classloader/SparkClassRewriter.java", "diffHunk": "@@ -442,6 +453,24 @@ public void visitEnd() {\n     return cw.toByteArray();\n   }\n \n+  private static class UnmodifiableData {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08743441634c5f00a070494ffef0bae2a4aeb8c6"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2MjE3Mg==", "bodyText": "final all fields", "url": "https://github.com/cdapio/cdap/pull/12304#discussion_r439162172", "createdAt": "2020-06-12T01:38:41Z", "author": {"login": "chtyim"}, "path": "cdap-spark-core-base/src/main/java/io/cdap/cdap/app/runtime/spark/classloader/SparkClassRewriter.java", "diffHunk": "@@ -442,6 +453,24 @@ public void visitEnd() {\n     return cw.toByteArray();\n   }\n \n+  private static class UnmodifiableData {\n+    Class<?> unmodifiableClass;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08743441634c5f00a070494ffef0bae2a4aeb8c6"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2MjkyMw==", "bodyText": "Use Arrays.asList to make the code simpler\nList<UnmodifiableData> unmodiableTypes = Arrays.asList(\n  new UnmodifiableData(\"Collection\", Collection.class, LinkedList.class),\n  new UnmodifiableData(\"List\", List.class, LinkedList.class),\n  ...\n);", "url": "https://github.com/cdapio/cdap/pull/12304#discussion_r439162923", "createdAt": "2020-06-12T01:41:58Z", "author": {"login": "chtyim"}, "path": "cdap-spark-core-base/src/main/java/io/cdap/cdap/app/runtime/spark/classloader/SparkClassRewriter.java", "diffHunk": "@@ -468,17 +497,46 @@ public void onMethodExit(String name, String desc, GeneratorAdapter generatorAda\n         generatorAdapter.push(STRUCTURED_RECORD_SERIALIZER_TYPE);\n         generatorAdapter.invokeVirtual(KRYO_TYPE,\n                                        new Method(\"addDefaultSerializer\", Type.VOID_TYPE,\n-                                                  new Type[] { Type.getType(Class.class), Type.getType(Class.class)}));\n+                                                  new Type[] { Type.getType(Class.class), Type.getType(Class.class) }));\n+\n+        // Register serializer for all Unmodifiable classes within Collections. Ex:\n+        // addDefaultSerializer(Collections.unmodifiableMap(new HashMap<>()).getClass(),\n+        //                      UnmodifiableMapSerializer.class);\n+        List<UnmodifiableData> unmodifableTypesData = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08743441634c5f00a070494ffef0bae2a4aeb8c6"}, "originalPosition": 98}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e38a04de10534fc3d0bfbb427191b1527e6c69a5", "author": {"user": {"login": "MEseifan", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/e38a04de10534fc3d0bfbb427191b1527e6c69a5", "committedDate": "2020-06-12T16:58:30Z", "message": "Added kryo serializers for unmodifiable types"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "08743441634c5f00a070494ffef0bae2a4aeb8c6", "author": {"user": {"login": "MEseifan", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/08743441634c5f00a070494ffef0bae2a4aeb8c6", "committedDate": "2020-06-11T18:27:30Z", "message": "Addressed comments"}, "afterCommit": {"oid": "e38a04de10534fc3d0bfbb427191b1527e6c69a5", "author": {"user": {"login": "MEseifan", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/e38a04de10534fc3d0bfbb427191b1527e6c69a5", "committedDate": "2020-06-12T16:58:30Z", "message": "Added kryo serializers for unmodifiable types"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2010, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}