{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1MDU0Njg0", "number": 12437, "title": "[CDAP-16873] Pass MetricsWriterContext to metrics writers.", "bodyText": "MetricsWriterContext has the metrics writer configuration file path.", "createdAt": "2020-07-06T23:38:26Z", "url": "https://github.com/cdapio/cdap/pull/12437", "merged": true, "mergeCommit": {"oid": "5106487e9cc14616c3cb35e83caf312f59aa19bb"}, "closed": true, "closedAt": "2020-07-14T22:27:43Z", "author": {"login": "rmstar"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcys2aUgFqTQ0NDI2ODMyNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc09ktbgFqTQ0ODUwMzU3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MjY4MzI1", "url": "https://github.com/cdapio/cdap/pull/12437#pullrequestreview-444268325", "createdAt": "2020-07-07T21:37:30Z", "commit": {"oid": "43e3754184666685aca0e8fd8094563c9aeaf3c3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMTozNzozMFrOGuQhMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMTozNzozMFrOGuQhMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE1ODMyMQ==", "bodyText": "Can we have the MetricsWriterContext contains the MetricsContext getMetricsContext() method so that we only need to pass in one context object?", "url": "https://github.com/cdapio/cdap/pull/12437#discussion_r451158321", "createdAt": "2020-07-07T21:37:30Z", "author": {"login": "chtyim"}, "path": "cdap-watchdog-api/src/main/java/io/cdap/cdap/api/metrics/MetricsWriter.java", "diffHunk": "@@ -37,7 +37,7 @@\n    *\n    * @param metricsContext metricsContext to be used for the MetricsWriter\n    */\n-  void initialize(MetricsContext metricsContext);\n+  void initialize(MetricsContext metricsContext, MetricsWriterContext metricsWriterContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43e3754184666685aca0e8fd8094563c9aeaf3c3"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MzgxMzI1", "url": "https://github.com/cdapio/cdap/pull/12437#pullrequestreview-444381325", "createdAt": "2020-07-08T03:05:34Z", "commit": {"oid": "6c4b1cd21c99bd83b66fa3636b414205a0207012"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMzowNTozNFrOGuWdOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMzowNjowN1rOGuWdtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NTYwOQ==", "bodyText": "Remove extra space. Also, since this is an API object, please add javadoc for all methods. Also, it is better for this to be an interface and have the implementation separated out in the non-api module.", "url": "https://github.com/cdapio/cdap/pull/12437#discussion_r451255609", "createdAt": "2020-07-08T03:05:34Z", "author": {"login": "chtyim"}, "path": "cdap-watchdog-api/src/main/java/io/cdap/cdap/api/metrics/MetricsWriterContext.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.api.metrics;\n+\n+/**\n+ * Context passed to {@link MetricsWriter#initialize(MetricsContext, MetricsWriterContext)}.\n+ */\n+public final class MetricsWriterContext {\n+  private final String metricsWriterFilePath;\n+  private final MetricsContext metricsContext;\n+\n+  public MetricsWriterContext(MetricsContext metricsContext, String metricsWriterFilePath) {\n+    this.metricsWriterFilePath = metricsWriterFilePath;\n+    this.metricsContext = metricsContext;\n+  }\n+\n+  public  String getMetricsWriterFilePath() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c4b1cd21c99bd83b66fa3636b414205a0207012"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NTczNA==", "bodyText": "and why is a file path needs to be available at the context object? Is it generic?", "url": "https://github.com/cdapio/cdap/pull/12437#discussion_r451255734", "createdAt": "2020-07-08T03:06:07Z", "author": {"login": "chtyim"}, "path": "cdap-watchdog-api/src/main/java/io/cdap/cdap/api/metrics/MetricsWriterContext.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.api.metrics;\n+\n+/**\n+ * Context passed to {@link MetricsWriter#initialize(MetricsContext, MetricsWriterContext)}.\n+ */\n+public final class MetricsWriterContext {\n+  private final String metricsWriterFilePath;\n+  private final MetricsContext metricsContext;\n+\n+  public MetricsWriterContext(MetricsContext metricsContext, String metricsWriterFilePath) {\n+    this.metricsWriterFilePath = metricsWriterFilePath;\n+    this.metricsContext = metricsContext;\n+  }\n+\n+  public  String getMetricsWriterFilePath() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NTYwOQ=="}, "originalCommit": {"oid": "6c4b1cd21c99bd83b66fa3636b414205a0207012"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NzY2MjU3", "url": "https://github.com/cdapio/cdap/pull/12437#pullrequestreview-446766257", "createdAt": "2020-07-11T01:28:20Z", "commit": {"oid": "f7fccc75a4d434d79393dce9a61e655e34c37bcd"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMToyODoyMFrOGwJXwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMToyOToxMVrOGwJYCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEzODM2OQ==", "bodyText": "This belongs to the extension? Shouldn't be defined in CDAP", "url": "https://github.com/cdapio/cdap/pull/12437#discussion_r453138369", "createdAt": "2020-07-11T01:28:20Z", "author": {"login": "chtyim"}, "path": "cdap-common/src/main/java/io/cdap/cdap/common/conf/Constants.java", "diffHunk": "@@ -639,6 +639,9 @@\n \n     public static final String METRICS_WRITER_EXTENSIONS_DIR = \"metrics.writer.extensions.dir\";\n \n+    // Metrics writer configuration file path.\n+    public static final String METRICS_WRITER_CONFIG_PATH = \"metrics.writer.config.path\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7fccc75a4d434d79393dce9a61e655e34c37bcd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEzODQxMA==", "bodyText": "Why have this??", "url": "https://github.com/cdapio/cdap/pull/12437#discussion_r453138410", "createdAt": "2020-07-11T01:28:49Z", "author": {"login": "chtyim"}, "path": "cdap-watchdog/src/main/java/io/cdap/cdap/metrics/process/DefaultMetricsWriterContext.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.metrics.process;\n+\n+import io.cdap.cdap.api.metrics.MetricsContext;\n+import io.cdap.cdap.api.metrics.MetricsWriterContext;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Default implementation of {@link MetricsWriterContext}.\n+ */\n+public final class DefaultMetricsWriterContext implements MetricsWriterContext {\n+\n+  private static final String metricsFilePathKey = \"metricsFilePath\";\n+  private final String metricsWriterFilePath;\n+  private final MetricsContext metricsContext;\n+\n+  public DefaultMetricsWriterContext(MetricsContext metricsContext, String metricsWriterFilePath) {\n+    this.metricsWriterFilePath = metricsWriterFilePath;\n+    this.metricsContext = metricsContext;\n+  }\n+\n+  public MetricsContext getMetricsContext() {\n+    return metricsContext;\n+  }\n+\n+  public Map<String, String> getProperties() {\n+    Map<String, String> properties = new HashMap<>();\n+    properties.put(metricsFilePathKey, metricsWriterFilePath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7fccc75a4d434d79393dce9a61e655e34c37bcd"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEzODQ0MA==", "bodyText": "The set of properties for a given metrics writer should be configurable and coming from CConfiguration", "url": "https://github.com/cdapio/cdap/pull/12437#discussion_r453138440", "createdAt": "2020-07-11T01:29:11Z", "author": {"login": "chtyim"}, "path": "cdap-watchdog/src/main/java/io/cdap/cdap/metrics/process/DefaultMetricsWriterContext.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.metrics.process;\n+\n+import io.cdap.cdap.api.metrics.MetricsContext;\n+import io.cdap.cdap.api.metrics.MetricsWriterContext;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Default implementation of {@link MetricsWriterContext}.\n+ */\n+public final class DefaultMetricsWriterContext implements MetricsWriterContext {\n+\n+  private static final String metricsFilePathKey = \"metricsFilePath\";\n+  private final String metricsWriterFilePath;\n+  private final MetricsContext metricsContext;\n+\n+  public DefaultMetricsWriterContext(MetricsContext metricsContext, String metricsWriterFilePath) {\n+    this.metricsWriterFilePath = metricsWriterFilePath;\n+    this.metricsContext = metricsContext;\n+  }\n+\n+  public MetricsContext getMetricsContext() {\n+    return metricsContext;\n+  }\n+\n+  public Map<String, String> getProperties() {\n+    Map<String, String> properties = new HashMap<>();\n+    properties.put(metricsFilePathKey, metricsWriterFilePath);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEzODQxMA=="}, "originalCommit": {"oid": "f7fccc75a4d434d79393dce9a61e655e34c37bcd"}, "originalPosition": 45}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2c6739e3447b00b27b0c17f5ec3ac3af7b2e0d74", "author": {"user": {"login": "rmstar", "name": "Prashant Jaikumar"}}, "url": "https://github.com/cdapio/cdap/commit/2c6739e3447b00b27b0c17f5ec3ac3af7b2e0d74", "committedDate": "2020-07-13T07:38:41Z", "message": "addressed reviewer comments"}, "afterCommit": {"oid": "e09373b3dab13dfbed655eacf80aedf703d085c7", "author": {"user": {"login": "rmstar", "name": "Prashant Jaikumar"}}, "url": "https://github.com/cdapio/cdap/commit/e09373b3dab13dfbed655eacf80aedf703d085c7", "committedDate": "2020-07-13T08:20:07Z", "message": "[CDAP-16873] Pass MetricsWriterContext to metrics writers.\n\nMetricsWriterContext has the metrics writer configuration file path."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a2c9923a856058a5e4206f3f749da1a5216247a", "author": {"user": {"login": "rmstar", "name": "Prashant Jaikumar"}}, "url": "https://github.com/cdapio/cdap/commit/9a2c9923a856058a5e4206f3f749da1a5216247a", "committedDate": "2020-07-14T21:33:13Z", "message": "[CDAP-16873] Pass MetricsWriterContext to metrics writers.\n\nMetricsWriterContext has the metrics writer configuration file path."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e09373b3dab13dfbed655eacf80aedf703d085c7", "author": {"user": {"login": "rmstar", "name": "Prashant Jaikumar"}}, "url": "https://github.com/cdapio/cdap/commit/e09373b3dab13dfbed655eacf80aedf703d085c7", "committedDate": "2020-07-13T08:20:07Z", "message": "[CDAP-16873] Pass MetricsWriterContext to metrics writers.\n\nMetricsWriterContext has the metrics writer configuration file path."}, "afterCommit": {"oid": "9a2c9923a856058a5e4206f3f749da1a5216247a", "author": {"user": {"login": "rmstar", "name": "Prashant Jaikumar"}}, "url": "https://github.com/cdapio/cdap/commit/9a2c9923a856058a5e4206f3f749da1a5216247a", "committedDate": "2020-07-14T21:33:13Z", "message": "[CDAP-16873] Pass MetricsWriterContext to metrics writers.\n\nMetricsWriterContext has the metrics writer configuration file path."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NTAzNTc2", "url": "https://github.com/cdapio/cdap/pull/12437#pullrequestreview-448503576", "createdAt": "2020-07-14T22:14:27Z", "commit": {"oid": "9a2c9923a856058a5e4206f3f749da1a5216247a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1951, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}