{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMTA0NTM1", "number": 11914, "title": "Add local/remote program run record fetcher for LogHttpHandler", "bodyText": "LogHttpRequest currently accesses local program store directly.\nThis change is to introduce local/remote run record fetcher to use in standalone vs distributed mode.", "createdAt": "2020-03-03T18:23:04Z", "url": "https://github.com/cdapio/cdap/pull/11914", "merged": true, "mergeCommit": {"oid": "3f05ab170925ce9eaa0fcc45663d264f8522f5fd"}, "closed": true, "closedAt": "2020-03-06T05:47:49Z", "author": {"login": "wyzhang"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKPu2AAFqTM2ODMzMjMxMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcK0vTDgBqjMxMDMzNjk1NTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MzMyMzEx", "url": "https://github.com/cdapio/cdap/pull/11914#pullrequestreview-368332311", "createdAt": "2020-03-03T21:20:00Z", "commit": {"oid": "a42af52c66577714fe1a0add88e79848cfda8a4a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMToyMDowMVrOFxW6CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMToyMjowNFrOFxW9_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5OTg0OQ==", "bodyText": "each todo should have associated jira", "url": "https://github.com/cdapio/cdap/pull/11914#discussion_r387299849", "createdAt": "2020-03-03T21:20:01Z", "author": {"login": "CuriousVini"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/ProgramLifecycleService.java", "diffHunk": "@@ -241,6 +241,11 @@ public long getProgramRunCount(ProgramId programId) throws Exception {\n    * @throws NotFoundException if the given program or program run doesn't exist\n    * @throws Exception if authorization failed\n    */\n+  public RunRecordMeta getRunRecordMeta(ProgramRunId programRunId) throws Exception {\n+    return getRun(programRunId);\n+  }\n+\n+  // TODO: change the return type to RunRecord and migrate the callers to use getRunRecordMeta", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a42af52c66577714fe1a0add88e79848cfda8a4a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMwMDg2Mw==", "bodyText": "why do we need to add IOException now?", "url": "https://github.com/cdapio/cdap/pull/11914#discussion_r387300863", "createdAt": "2020-03-03T21:22:04Z", "author": {"login": "CuriousVini"}, "path": "cdap-watchdog/src/main/java/io/cdap/cdap/logging/gateway/handlers/LogHttpHandler.java", "diffHunk": "@@ -215,11 +217,11 @@ public void sysPrev(HttpRequest request, HttpResponder responder, @PathParam(\"co\n     doPrev(logReader, responder, loggingContext, maxEvents, fromOffsetStr, escape, filterStr, null, format, suppress);\n   }\n \n-  private RunRecordMeta getRunRecordMeta(ProgramRunId programRunId) throws NotFoundException {\n-    RunRecordMeta runRecord = programStore.getRun(programRunId);\n-    if (runRecord == null) {\n+  private RunRecordMeta getRunRecordMeta(ProgramRunId programRunId) throws IOException, NotFoundException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a42af52c66577714fe1a0add88e79848cfda8a4a"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NTQzNjAz", "url": "https://github.com/cdapio/cdap/pull/11914#pullrequestreview-368543603", "createdAt": "2020-03-04T07:05:55Z", "commit": {"oid": "a42af52c66577714fe1a0add88e79848cfda8a4a"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNzowNTo1NVrOFxh9pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNzoxMzo1NlrOFxiHWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ4MDk5Nw==", "bodyText": "You don't need this function. You can just do:\nProgramType.valueOfCategoryName(programType, BadRequestException::new)", "url": "https://github.com/cdapio/cdap/pull/11914#discussion_r387480997", "createdAt": "2020-03-04T07:05:55Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/ProgramLifecycleHttpHandlerInternal.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.gateway.handlers;\n+\n+import com.google.gson.Gson;\n+import com.google.inject.Inject;\n+import io.cdap.cdap.common.BadRequestException;\n+import io.cdap.cdap.common.conf.Constants;\n+import io.cdap.cdap.gateway.handlers.util.AbstractAppFabricHttpHandler;\n+import io.cdap.cdap.internal.app.services.ProgramLifecycleService;\n+import io.cdap.cdap.internal.app.store.RunRecordMeta;\n+import io.cdap.cdap.proto.ProgramType;\n+import io.cdap.cdap.proto.id.ApplicationId;\n+import io.cdap.cdap.proto.id.ProgramId;\n+import io.cdap.http.HttpHandler;\n+import io.cdap.http.HttpResponder;\n+import io.netty.handler.codec.http.HttpRequest;\n+import io.netty.handler.codec.http.HttpResponse;\n+import io.netty.handler.codec.http.HttpResponseStatus;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+\n+/**\n+ * {@link HttpHandler} for serving internal program lifecycle REST API requests\n+ */\n+@Path(Constants.Gateway.INTERNAL_API_VERSION_3 + \"/namespaces/{namespace-id}\")\n+public class ProgramLifecycleHttpHandlerInternal extends AbstractAppFabricHttpHandler {\n+  private static final Gson GSON = new Gson();\n+\n+  private final ProgramLifecycleService programLifecycleService;\n+\n+  @Inject\n+  ProgramLifecycleHttpHandlerInternal(ProgramLifecycleService programLifecycleService) {\n+    this.programLifecycleService = programLifecycleService;\n+  }\n+\n+  /**\n+   * Return {@link RunRecordMeta} for the given program run id\n+   *\n+   * @param request {@link HttpRequest}\n+   * @param responder {@link HttpResponse}\n+   * @param namespaceId namespace of the program\n+   * @param appName name of the application\n+   * @param appVersion version of the application\n+   * @param type type of the program\n+   * @param programName name of the program\n+   * @param runid for which {@link RunRecordMeta} will be returned\n+   * @throws Exception if failed to to get {@link RunRecordMeta}\n+   */\n+  @GET\n+  @Path(\"/apps/{app-name}/versions/{app-version}/{program-type}/{program-name}/runs/{run-id}\")\n+  public void getProgramRunRecordMeta(HttpRequest request, HttpResponder responder,\n+                                      @PathParam(\"namespace-id\") String namespaceId,\n+                                      @PathParam(\"app-name\") String appName,\n+                                      @PathParam(\"app-version\") String appVersion,\n+                                      @PathParam(\"program-type\") String type,\n+                                      @PathParam(\"program-name\") String programName,\n+                                      @PathParam(\"run-id\") String runid) throws Exception {\n+    ProgramType programType = getProgramType(type);\n+    ProgramId programId = new ApplicationId(namespaceId, appName, appVersion).program(programType, programName);\n+    RunRecordMeta runRecordMeta = programLifecycleService.getRun(programId.run(runid));\n+    responder.sendJson(HttpResponseStatus.OK, GSON.toJson(runRecordMeta));\n+  }\n+\n+  /**\n+   * Parses the give program type into {@link ProgramType} object.\n+   *\n+   * @param programType the program type to parse.\n+   * @throws BadRequestException if the given program type is not a valid {@link ProgramType}.\n+   */\n+  private ProgramType getProgramType(String programType) throws BadRequestException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a42af52c66577714fe1a0add88e79848cfda8a4a"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ4Mjk1Mg==", "bodyText": "Why the rename? Is it just a refactoring to have better naming? If it is, just use the refactor rename feature in IntelliJ, it will update all callsite for you. No need to have a pending TODO", "url": "https://github.com/cdapio/cdap/pull/11914#discussion_r387482952", "createdAt": "2020-03-04T07:12:17Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/ProgramLifecycleService.java", "diffHunk": "@@ -241,6 +241,11 @@ public long getProgramRunCount(ProgramId programId) throws Exception {\n    * @throws NotFoundException if the given program or program run doesn't exist\n    * @throws Exception if authorization failed\n    */\n+  public RunRecordMeta getRunRecordMeta(ProgramRunId programRunId) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a42af52c66577714fe1a0add88e79848cfda8a4a"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ4MzEwMw==", "bodyText": "Same here. If it is just a rename, do a refactor to update all callsite.", "url": "https://github.com/cdapio/cdap/pull/11914#discussion_r387483103", "createdAt": "2020-03-04T07:12:48Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/ProgramLifecycleService.java", "diffHunk": "@@ -269,14 +274,19 @@ public RunRecordMeta getRun(ProgramRunId programRunId) throws Exception {\n    * @throws UnauthorizedException if the principal does not have access to the program\n    * @throws Exception if there was some other exception performing authorization checks\n    */\n-  public List<RunRecord> getRuns(ProgramId programId, ProgramRunStatus programRunStatus,\n-                                 long start, long end, int limit) throws Exception {\n+  public List<RunRecord> getRunRecordMetas(ProgramId programId, ProgramRunStatus programRunStatus,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a42af52c66577714fe1a0add88e79848cfda8a4a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ4MzI0NQ==", "bodyText": "Also, if you rename the method like this, the return type should be List<RunRecordMeta>", "url": "https://github.com/cdapio/cdap/pull/11914#discussion_r387483245", "createdAt": "2020-03-04T07:13:15Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/ProgramLifecycleService.java", "diffHunk": "@@ -269,14 +274,19 @@ public RunRecordMeta getRun(ProgramRunId programRunId) throws Exception {\n    * @throws UnauthorizedException if the principal does not have access to the program\n    * @throws Exception if there was some other exception performing authorization checks\n    */\n-  public List<RunRecord> getRuns(ProgramId programId, ProgramRunStatus programRunStatus,\n-                                 long start, long end, int limit) throws Exception {\n+  public List<RunRecord> getRunRecordMetas(ProgramId programId, ProgramRunStatus programRunStatus,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ4MzEwMw=="}, "originalCommit": {"oid": "a42af52c66577714fe1a0add88e79848cfda8a4a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ4MzQ4MA==", "bodyText": "Why?", "url": "https://github.com/cdapio/cdap/pull/11914#discussion_r387483480", "createdAt": "2020-03-04T07:13:56Z", "author": {"login": "chtyim"}, "path": "cdap-common/src/main/java/io/cdap/cdap/internal/app/store/RunRecordMeta.java", "diffHunk": "@@ -37,6 +37,7 @@\n  * includes information that should not be exposed to users. {@link RunRecord} contains fields that are exposed\n  * to users, so everything else like the Twill runid should go here.\n  */\n+// TODO: rename RunRecordMeta to RunRecordDetail", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a42af52c66577714fe1a0add88e79848cfda8a4a"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5OTk0NzEw", "url": "https://github.com/cdapio/cdap/pull/11914#pullrequestreview-369994710", "createdAt": "2020-03-05T23:55:57Z", "commit": {"oid": "a8ce5322c7aa748239d5553e7653883ddd556c3f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8ce5322c7aa748239d5553e7653883ddd556c3f", "author": {"user": {"login": "wyzhang", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/a8ce5322c7aa748239d5553e7653883ddd556c3f", "committedDate": "2020-03-05T06:05:43Z", "message": "Fixing style complains"}, "afterCommit": {"oid": "c4dd8fd0e6ff68dc807554e8542a1ab83c46bd38", "author": {"user": {"login": "wyzhang", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/c4dd8fd0e6ff68dc807554e8542a1ab83c46bd38", "committedDate": "2020-03-06T00:03:51Z", "message": "(CDAP-16353) Add local/remote program run record fetcher for LogHttpHandler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cb1bcf5b6103ac2e8f99793e3adf9bfad4bf558", "author": {"user": {"login": "wyzhang", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/6cb1bcf5b6103ac2e8f99793e3adf9bfad4bf558", "committedDate": "2020-03-06T00:11:48Z", "message": "(CDAP-16353) Add local/remote program run record fetcher for LogHttpHandler"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c4dd8fd0e6ff68dc807554e8542a1ab83c46bd38", "author": {"user": {"login": "wyzhang", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/c4dd8fd0e6ff68dc807554e8542a1ab83c46bd38", "committedDate": "2020-03-06T00:03:51Z", "message": "(CDAP-16353) Add local/remote program run record fetcher for LogHttpHandler"}, "afterCommit": {"oid": "6cb1bcf5b6103ac2e8f99793e3adf9bfad4bf558", "author": {"user": {"login": "wyzhang", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/6cb1bcf5b6103ac2e8f99793e3adf9bfad4bf558", "committedDate": "2020-03-06T00:11:48Z", "message": "(CDAP-16353) Add local/remote program run record fetcher for LogHttpHandler"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1321, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}