{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1Njk1MDUx", "number": 12086, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjo0MTo0OVrOD0U0JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNzoxMjo1MlrOD0VzQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTkzNTcyOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/hydrator/controllers/create/toppanel-ctrl.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjo0MTo0OVrOGJNvrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjo0MTo0OVrOGJNvrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMxNTU2Ng==", "bodyText": "nit: Can we name this something more appropriate? Having empty values is still valid to start a preview, it's just we don't want to 'Run' the preview right away without opening the modeless.", "url": "https://github.com/cdapio/cdap/pull/12086#discussion_r412315566", "createdAt": "2020-04-21T16:41:49Z", "author": {"login": "itsanudeep"}, "path": "cdap-ui/app/hydrator/controllers/create/toppanel-ctrl.js", "diffHunk": "@@ -502,6 +511,11 @@ class HydratorPlusPlusTopPanelCtrl {\n     this.previewStore.dispatch(\n       this.previewActions.setRuntimeArgsForDisplay(_.cloneDeep(this.runtimeArguments))\n     );\n+    this.validToStartPreview = this.isValidToStartPreview();\n+  }\n+\n+  isValidToStartPreview() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bca67625f280eee9cf47a475d691e14da0b6d6f6"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MjAwOTUwOnYy", "diffSide": "RIGHT", "path": "cdap-ui/cypress/integration/pipeline.runtimeargs.spec.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjo1NTowNVrOGJOY0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjo1NTowNVrOGJOY0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMyNjA5Ng==", "bodyText": "Can we add a TODO to clean this up when we have preview enabled in bamboo?", "url": "https://github.com/cdapio/cdap/pull/12086#discussion_r412326096", "createdAt": "2020-04-21T16:55:05Z", "author": {"login": "itsanudeep"}, "path": "cdap-ui/cypress/integration/pipeline.runtimeargs.spec.ts", "diffHunk": "@@ -29,16 +33,23 @@ const PREVIEW_SUCCESS_BANNER_MSG =\n const SINK_PATH_VAL = '/tmp/cdap-ui-integration-fixtures';\n const SOURCE_PATH_VAL = 'file:/tmp/cdap-ui-integration-fixtures/airports.csv';\n \n-/* Disabling preview tests for now because our E2E tests don't have preview enabled\n- describe('Creating pipeline with macros ', () => {\n+let skipPreviewTests = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bca67625f280eee9cf47a475d691e14da0b6d6f6"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MjA5NzI4OnYy", "diffSide": "RIGHT", "path": "cdap-ui/cypress/integration/pipeline.runtimeargs.spec.ts", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNzoxMjo1MlrOGJPMJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxOToxODozMVrOGJUd4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzOTIzNg==", "bodyText": "We were trying to avoid explicit wait statements like these, right? You can use cy.get('[title=\"Airport_source\"').should('exist'); to check if the pipeline is deployed like we do in other tests?", "url": "https://github.com/cdapio/cdap/pull/12086#discussion_r412339236", "createdAt": "2020-04-21T17:12:52Z", "author": {"login": "itsanudeep"}, "path": "cdap-ui/cypress/integration/pipeline.runtimeargs.spec.ts", "diffHunk": "@@ -48,21 +59,22 @@ const SOURCE_PATH_VAL = 'file:/tmp/cdap-ui-integration-fixtures/airports.csv';\n     getArtifactsPoll(headers);\n   });\n \n-  it('should be successful for preview', () => {\n+  it('and providing wrong runtime arguments should fail the pipeline preview.', () => {\n     // Go to Pipelines studio\n     cy.visit('/pipelines/ns/default/studio');\n-    cy.url().should('include', '/studio');\n+    cy.window().then((window) => {\n+      skipPreviewTests = window.CDAP_CONFIG.hydrator.previewEnabled !== true;\n+    });\n+    if (skipPreviewTests) {\n+      skip();\n+    }\n     cy.upload_pipeline(\n       'pipeline_with_macros.json',\n       '#pipeline-import-config-link > input[type=\"file\"]'\n-    ).then(subject => {\n-      expect(subject.length).to.be.eq(1);\n-    });\n-  });\n-\n-  it('and providing wrong runtime arguments should fail the pipeline preview.', () => {\n+    );\n+    cy.wait(10000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bca67625f280eee9cf47a475d691e14da0b6d6f6"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQxMTM3Nw==", "bodyText": "I agree we need to avoid the wait times but this is uploading a json in pipeline studio and we don't have a fail-proof way to find if its complete.", "url": "https://github.com/cdapio/cdap/pull/12086#discussion_r412411377", "createdAt": "2020-04-21T18:56:25Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/cypress/integration/pipeline.runtimeargs.spec.ts", "diffHunk": "@@ -48,21 +59,22 @@ const SOURCE_PATH_VAL = 'file:/tmp/cdap-ui-integration-fixtures/airports.csv';\n     getArtifactsPoll(headers);\n   });\n \n-  it('should be successful for preview', () => {\n+  it('and providing wrong runtime arguments should fail the pipeline preview.', () => {\n     // Go to Pipelines studio\n     cy.visit('/pipelines/ns/default/studio');\n-    cy.url().should('include', '/studio');\n+    cy.window().then((window) => {\n+      skipPreviewTests = window.CDAP_CONFIG.hydrator.previewEnabled !== true;\n+    });\n+    if (skipPreviewTests) {\n+      skip();\n+    }\n     cy.upload_pipeline(\n       'pipeline_with_macros.json',\n       '#pipeline-import-config-link > input[type=\"file\"]'\n-    ).then(subject => {\n-      expect(subject.length).to.be.eq(1);\n-    });\n-  });\n-\n-  it('and providing wrong runtime arguments should fail the pipeline preview.', () => {\n+    );\n+    cy.wait(10000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzOTIzNg=="}, "originalCommit": {"oid": "bca67625f280eee9cf47a475d691e14da0b6d6f6"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQyNTY5Nw==", "bodyText": "Won't cy.get('[title=\"Airport_source\"').should('exist');  do this? We're testing if title in source node is present, which we only see after the pipeline is uploaded and ready in studio?", "url": "https://github.com/cdapio/cdap/pull/12086#discussion_r412425697", "createdAt": "2020-04-21T19:18:31Z", "author": {"login": "itsanudeep"}, "path": "cdap-ui/cypress/integration/pipeline.runtimeargs.spec.ts", "diffHunk": "@@ -48,21 +59,22 @@ const SOURCE_PATH_VAL = 'file:/tmp/cdap-ui-integration-fixtures/airports.csv';\n     getArtifactsPoll(headers);\n   });\n \n-  it('should be successful for preview', () => {\n+  it('and providing wrong runtime arguments should fail the pipeline preview.', () => {\n     // Go to Pipelines studio\n     cy.visit('/pipelines/ns/default/studio');\n-    cy.url().should('include', '/studio');\n+    cy.window().then((window) => {\n+      skipPreviewTests = window.CDAP_CONFIG.hydrator.previewEnabled !== true;\n+    });\n+    if (skipPreviewTests) {\n+      skip();\n+    }\n     cy.upload_pipeline(\n       'pipeline_with_macros.json',\n       '#pipeline-import-config-link > input[type=\"file\"]'\n-    ).then(subject => {\n-      expect(subject.length).to.be.eq(1);\n-    });\n-  });\n-\n-  it('and providing wrong runtime arguments should fail the pipeline preview.', () => {\n+    );\n+    cy.wait(10000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzOTIzNg=="}, "originalCommit": {"oid": "bca67625f280eee9cf47a475d691e14da0b6d6f6"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2763, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}