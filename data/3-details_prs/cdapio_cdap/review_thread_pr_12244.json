{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2NzA3NDk4", "number": 12244, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDozMzo0N1rOEEthMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzoxOToxNVrOEGoOQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzc1NTM2OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDozMzo0N1rOGigMJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMjo1OTo1N1rOGlEj-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzMjE2Nw==", "bodyText": "Total nit: 2020?", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r438832167", "createdAt": "2020-06-11T14:33:47Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright \u00a9 2018 Cask Data, Inc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUyNTI0MQ==", "bodyText": "Resolved!", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r441525241", "createdAt": "2020-06-17T12:59:57Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright \u00a9 2018 Cask Data, Inc.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzMjE2Nw=="}, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDcyOTk0OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/BasicPluginInfo/index.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMjoxODowMlrOGkI5BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMjo0ODo0MlrOGlEIYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0NzU4OQ==", "bodyText": "We should probably think about putting all these in a single object and passing the object. As a component I don't know if it makes sense to have this much props. The component says JsonMenu .. The first thing I would expect when using the component would be a json which is kind of hidden under all these props..", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440547589", "createdAt": "2020-06-16T02:18:02Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/BasicPluginInfo/index.tsx", "diffHunk": "@@ -95,6 +100,11 @@ const BasicPluginInfoView: React.FC<ICreateContext & WithStyles<typeof styles>>\n         setPluginState={setPluginState}\n         JSONStatus={JSONStatus}\n         setJSONStatus={setJSONStatus}\n+        filters={filters}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0Nzk5OA==", "bodyText": "If we move it to an object then we define a type for the object and then ts can validate changes that can happen tomorrow if the contract (props to the component) changes.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440547998", "createdAt": "2020-06-16T02:19:48Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/BasicPluginInfo/index.tsx", "diffHunk": "@@ -95,6 +100,11 @@ const BasicPluginInfoView: React.FC<ICreateContext & WithStyles<typeof styles>>\n         setPluginState={setPluginState}\n         JSONStatus={JSONStatus}\n         setJSONStatus={setJSONStatus}\n+        filters={filters}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0NzU4OQ=="}, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUxODE3OA==", "bodyText": "After future PR #12310 and PR #12291  where we refactor and optimize performance for the Plugin JSON Creator, this issue has been resolved.\nWe no longer pass a lot of states to the JsonMenu, and the component is only initialized once so that we don't have to pass these many props from each page.\n\n  \n    \n      cdap/cdap-ui/app/cdap/components/PluginJSONCreator/Create/index.tsx\n    \n    \n         Line 271\n      in\n      882eb81\n    \n    \n    \n    \n\n        \n          \n           <PluginJSONMenu />", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r441518178", "createdAt": "2020-06-17T12:48:42Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/BasicPluginInfo/index.tsx", "diffHunk": "@@ -95,6 +100,11 @@ const BasicPluginInfoView: React.FC<ICreateContext & WithStyles<typeof styles>>\n         setPluginState={setPluginState}\n         JSONStatus={JSONStatus}\n         setJSONStatus={setJSONStatus}\n+        filters={filters}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0NzU4OQ=="}, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDczMTI1OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMjoxODo1NFrOGkI5yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzowNjowNlrOGlEzeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0Nzc4Nw==", "bodyText": "We should avoid this.. If this component will have child component this basically affects all. This defeats the purpose of using css-in-js.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440547787", "createdAt": "2020-06-16T02:18:54Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright \u00a9 2018 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { StyleRules, withStyles, WithStyles } from '@material-ui/core/styles';\n+import { CustomOperator } from 'components/ConfigurationGroup/types';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { OPERATOR_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    filterConditionInput: {\n+      '& > *': {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUyNTQzOQ==", "bodyText": "Resolved", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r441525439", "createdAt": "2020-06-17T13:00:16Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright \u00a9 2018 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { StyleRules, withStyles, WithStyles } from '@material-ui/core/styles';\n+import { CustomOperator } from 'components/ConfigurationGroup/types';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { OPERATOR_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    filterConditionInput: {\n+      '& > *': {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0Nzc4Nw=="}, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUyOTIwOQ==", "bodyText": "My bad! I made these changes in later PRs but I must have missed it in this PR.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r441529209", "createdAt": "2020-06-17T13:06:06Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright \u00a9 2018 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { StyleRules, withStyles, WithStyles } from '@material-ui/core/styles';\n+import { CustomOperator } from 'components/ConfigurationGroup/types';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { OPERATOR_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    filterConditionInput: {\n+      '& > *': {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0Nzc4Nw=="}, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDczMzg5OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMjoyMDozNlrOGkI7aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzowMDoyMVrOGlElBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0ODIwMA==", "bodyText": "nit: there is a isNil from lodash that we can use.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440548200", "createdAt": "2020-06-16T02:20:36Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright \u00a9 2018 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { StyleRules, withStyles, WithStyles } from '@material-ui/core/styles';\n+import { CustomOperator } from 'components/ConfigurationGroup/types';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { OPERATOR_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    filterConditionInput: {\n+      '& > *': {\n+        marginTop: '10px',\n+        marginBottom: '10px',\n+      },\n+    },\n+  };\n+};\n+\n+export enum FilterConditionMode {\n+  Operator = 'operator',\n+  Expression = 'expression',\n+}\n+\n+interface IFilterConditionInputProps extends WithStyles<typeof styles>, ICreateContext {\n+  filterID: string;\n+}\n+\n+const FilterConditionInputview: React.FC<IFilterConditionInputProps> = ({\n+  classes,\n+  filterID,\n+  filterToCondition,\n+  setFilterToCondition,\n+  widgetInfo,\n+}) => {\n+  const existingCondition = filterToCondition[filterID];\n+\n+  const [conditionMode, setConditionMode] = React.useState(\n+    existingCondition.expression ? FilterConditionMode.Expression : FilterConditionMode.Operator\n+  );\n+\n+  const allWidgetNames = widgetInfo\n+    ? Object.values(widgetInfo)\n+        .map((info: IWidgetInfo) => info.name)\n+        .filter((widgetName) => widgetName !== undefined && widgetName !== null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUyNTUwOA==", "bodyText": "Resolved", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r441525508", "createdAt": "2020-06-17T13:00:21Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright \u00a9 2018 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { StyleRules, withStyles, WithStyles } from '@material-ui/core/styles';\n+import { CustomOperator } from 'components/ConfigurationGroup/types';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { OPERATOR_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    filterConditionInput: {\n+      '& > *': {\n+        marginTop: '10px',\n+        marginBottom: '10px',\n+      },\n+    },\n+  };\n+};\n+\n+export enum FilterConditionMode {\n+  Operator = 'operator',\n+  Expression = 'expression',\n+}\n+\n+interface IFilterConditionInputProps extends WithStyles<typeof styles>, ICreateContext {\n+  filterID: string;\n+}\n+\n+const FilterConditionInputview: React.FC<IFilterConditionInputProps> = ({\n+  classes,\n+  filterID,\n+  filterToCondition,\n+  setFilterToCondition,\n+  widgetInfo,\n+}) => {\n+  const existingCondition = filterToCondition[filterID];\n+\n+  const [conditionMode, setConditionMode] = React.useState(\n+    existingCondition.expression ? FilterConditionMode.Expression : FilterConditionMode.Operator\n+  );\n+\n+  const allWidgetNames = widgetInfo\n+    ? Object.values(widgetInfo)\n+        .map((info: IWidgetInfo) => info.name)\n+        .filter((widgetName) => widgetName !== undefined && widgetName !== null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0ODIwMA=="}, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDczNzU5OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMjoyMjoxNFrOGkI9aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzowMDoyNVrOGlElKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0ODcxMw==", "bodyText": "If there is no enum for expression and  condition then we should probably introduce it. Loosely using strings for types might introduce problems if we miss consistency.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440548713", "createdAt": "2020-06-16T02:22:14Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright \u00a9 2018 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { StyleRules, withStyles, WithStyles } from '@material-ui/core/styles';\n+import { CustomOperator } from 'components/ConfigurationGroup/types';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { OPERATOR_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    filterConditionInput: {\n+      '& > *': {\n+        marginTop: '10px',\n+        marginBottom: '10px',\n+      },\n+    },\n+  };\n+};\n+\n+export enum FilterConditionMode {\n+  Operator = 'operator',\n+  Expression = 'expression',\n+}\n+\n+interface IFilterConditionInputProps extends WithStyles<typeof styles>, ICreateContext {\n+  filterID: string;\n+}\n+\n+const FilterConditionInputview: React.FC<IFilterConditionInputProps> = ({\n+  classes,\n+  filterID,\n+  filterToCondition,\n+  setFilterToCondition,\n+  widgetInfo,\n+}) => {\n+  const existingCondition = filterToCondition[filterID];\n+\n+  const [conditionMode, setConditionMode] = React.useState(\n+    existingCondition.expression ? FilterConditionMode.Expression : FilterConditionMode.Operator\n+  );\n+\n+  const allWidgetNames = widgetInfo\n+    ? Object.values(widgetInfo)\n+        .map((info: IWidgetInfo) => info.name)\n+        .filter((widgetName) => widgetName !== undefined && widgetName !== null)\n+    : [];\n+\n+  React.useEffect(() => {\n+    // reset condition data\n+    if (conditionMode === FilterConditionMode.Expression) {\n+      setFilterToCondition((prevObjs) => ({\n+        ...prevObjs,\n+        [filterID]: { expression: existingCondition.expression },\n+      }));\n+    } else {\n+      setFilterToCondition((prevObjs) => ({\n+        ...prevObjs,\n+        [filterID]: {\n+          property: existingCondition.property,\n+          operator: existingCondition.operator,\n+          value: existingCondition.value,\n+        },\n+      }));\n+    }\n+  }, [conditionMode]);\n+\n+  function setFilterCondition(conditionProperty: string) {\n+    return (val) => {\n+      setFilterToCondition((prevObjs) => ({\n+        ...prevObjs,\n+        [filterID]: { ...prevObjs[filterID], [conditionProperty]: val },\n+      }));\n+    };\n+  }\n+\n+  return (\n+    <If condition={existingCondition}>\n+      <div className={classes.filterConditionInput}>\n+        <Heading type={HeadingTypes.h6} label=\"Show these widgets by the following condition...\" />\n+        <PluginInput\n+          widgetType={'radio-group'}\n+          value={conditionMode}\n+          onChange={setConditionMode}\n+          label={'Condition Type'}\n+          options={Object.values(FilterConditionMode).map((mode) => ({ id: mode, label: mode }))}\n+          layout={'inline'}\n+        />\n+        <If condition={conditionMode === FilterConditionMode.Expression}>\n+          <PluginInput\n+            widgetType={'textbox'}\n+            value={existingCondition.expression ? existingCondition.expression : ''}\n+            onChange={setFilterCondition('expression')}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUyNTU0Ng==", "bodyText": "Resolved", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r441525546", "createdAt": "2020-06-17T13:00:25Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright \u00a9 2018 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { StyleRules, withStyles, WithStyles } from '@material-ui/core/styles';\n+import { CustomOperator } from 'components/ConfigurationGroup/types';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { OPERATOR_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    filterConditionInput: {\n+      '& > *': {\n+        marginTop: '10px',\n+        marginBottom: '10px',\n+      },\n+    },\n+  };\n+};\n+\n+export enum FilterConditionMode {\n+  Operator = 'operator',\n+  Expression = 'expression',\n+}\n+\n+interface IFilterConditionInputProps extends WithStyles<typeof styles>, ICreateContext {\n+  filterID: string;\n+}\n+\n+const FilterConditionInputview: React.FC<IFilterConditionInputProps> = ({\n+  classes,\n+  filterID,\n+  filterToCondition,\n+  setFilterToCondition,\n+  widgetInfo,\n+}) => {\n+  const existingCondition = filterToCondition[filterID];\n+\n+  const [conditionMode, setConditionMode] = React.useState(\n+    existingCondition.expression ? FilterConditionMode.Expression : FilterConditionMode.Operator\n+  );\n+\n+  const allWidgetNames = widgetInfo\n+    ? Object.values(widgetInfo)\n+        .map((info: IWidgetInfo) => info.name)\n+        .filter((widgetName) => widgetName !== undefined && widgetName !== null)\n+    : [];\n+\n+  React.useEffect(() => {\n+    // reset condition data\n+    if (conditionMode === FilterConditionMode.Expression) {\n+      setFilterToCondition((prevObjs) => ({\n+        ...prevObjs,\n+        [filterID]: { expression: existingCondition.expression },\n+      }));\n+    } else {\n+      setFilterToCondition((prevObjs) => ({\n+        ...prevObjs,\n+        [filterID]: {\n+          property: existingCondition.property,\n+          operator: existingCondition.operator,\n+          value: existingCondition.value,\n+        },\n+      }));\n+    }\n+  }, [conditionMode]);\n+\n+  function setFilterCondition(conditionProperty: string) {\n+    return (val) => {\n+      setFilterToCondition((prevObjs) => ({\n+        ...prevObjs,\n+        [filterID]: { ...prevObjs[filterID], [conditionProperty]: val },\n+      }));\n+    };\n+  }\n+\n+  return (\n+    <If condition={existingCondition}>\n+      <div className={classes.filterConditionInput}>\n+        <Heading type={HeadingTypes.h6} label=\"Show these widgets by the following condition...\" />\n+        <PluginInput\n+          widgetType={'radio-group'}\n+          value={conditionMode}\n+          onChange={setConditionMode}\n+          label={'Condition Type'}\n+          options={Object.values(FilterConditionMode).map((mode) => ({ id: mode, label: mode }))}\n+          layout={'inline'}\n+        />\n+        <If condition={conditionMode === FilterConditionMode.Expression}>\n+          <PluginInput\n+            widgetType={'textbox'}\n+            value={existingCondition.expression ? existingCondition.expression : ''}\n+            onChange={setFilterCondition('expression')}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0ODcxMw=="}, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDc0MDIwOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput/index.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMjoyNDowM1rOGkI_KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMjoyNDo0NVrOGkI_wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0OTE2MQ==", "bodyText": "I think I mentioned this in other PRs, if not please use individual sub-modules from material-ui.\nimport IconButton from '@material-ui/core/IconButton'\nimport { WithStyles } from '@material-ui/core/styles/withStyles';", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440549161", "createdAt": "2020-06-16T02:24:03Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput/index.tsx", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Copyright \u00a9 2018 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { IconButton, WithStyles } from '@material-ui/core';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0OTMxMw==", "bodyText": "Adding as an umbrella comment for all the imports.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440549313", "createdAt": "2020-06-16T02:24:45Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput/index.tsx", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Copyright \u00a9 2018 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { IconButton, WithStyles } from '@material-ui/core';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0OTE2MQ=="}, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDc0Mzg3OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput/index.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMjoyNjowNVrOGkJBSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMjoyNjowNVrOGkJBSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0OTcwNw==", "bodyText": "Would need a key property for react.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440549707", "createdAt": "2020-06-16T02:26:05Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput/index.tsx", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Copyright \u00a9 2018 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { IconButton, WithStyles } from '@material-ui/core';\n+import { StyleRules, withStyles } from '@material-ui/core/styles';\n+import AddIcon from '@material-ui/icons/Add';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import classnames from 'classnames';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { SHOW_TYPE_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    showConfigCollection: {\n+      display: 'grid',\n+      gridAutoFlow: 'column',\n+      width: '100%',\n+    },\n+    showConfigInput: {\n+      gridRow: '1',\n+      width: '100%',\n+    },\n+    showConfigNameInput: {\n+      gridColumnStart: '1',\n+      gridColumnEnd: '8',\n+    },\n+    showConfigTypeInput: {\n+      gridColumnStart: '9',\n+      gridColumnEnd: '15',\n+    },\n+    showAddDeleteButtonInput: {\n+      gridColumnStart: '19',\n+      gridColumnEnd: '20',\n+    },\n+    showAddDeleteButton: {\n+      float: 'right',\n+    },\n+  };\n+};\n+\n+interface IFilterShowlistInputProps extends WithStyles<typeof styles>, ICreateContext {\n+  filterID: string;\n+}\n+\n+const FilterShowlistInputView: React.FC<IFilterShowlistInputProps> = ({\n+  classes,\n+  filterID,\n+  filterToShowList,\n+  setFilterToShowList,\n+  showToInfo,\n+  setShowToInfo,\n+  widgetInfo,\n+}) => {\n+  const allWidgetNames = widgetInfo\n+    ? Object.values(widgetInfo)\n+        .map((info: IWidgetInfo) => info.name)\n+        .filter((widgetName) => widgetName !== undefined && widgetName !== null)\n+    : [];\n+\n+  function setShowProperty(showID: string, property: string) {\n+    return (val) => {\n+      setShowToInfo((prevObjs) => ({\n+        ...prevObjs,\n+        [showID]: { ...prevObjs[showID], [property]: val },\n+      }));\n+    };\n+  }\n+\n+  function addShowToFilter(filterObjID: string, index?: number) {\n+    const newShowID = 'Show_' + uuidV4();\n+\n+    setShowToInfo({\n+      ...showToInfo,\n+      [newShowID]: {\n+        name: '',\n+      } as IPropertyShowConfig,\n+    });\n+\n+    if (index === undefined) {\n+      setFilterToShowList({\n+        ...filterToShowList,\n+        [filterObjID]: [...filterToShowList[filterObjID], newShowID],\n+      });\n+    } else {\n+      const showList = filterToShowList[filterObjID];\n+\n+      if (showList.length === 0) {\n+        showList.splice(0, 0, newShowID);\n+      } else {\n+        showList.splice(index + 1, 0, newShowID);\n+      }\n+\n+      setFilterToShowList({\n+        ...filterToShowList,\n+        [filterObjID]: showList,\n+      });\n+    }\n+  }\n+\n+  function deleteShowFromFilter(filterObjID: string, index: number) {\n+    const showList = filterToShowList[filterObjID];\n+\n+    const showToDelete = showList[index];\n+\n+    showList.splice(index, 1);\n+\n+    setFilterToShowList({\n+      ...filterToShowList,\n+      [filterObjID]: showList,\n+    });\n+\n+    const { [showToDelete]: tmp, ...restShowToInfo } = showToInfo;\n+    setShowToInfo(restShowToInfo);\n+  }\n+\n+  return (\n+    <If condition={filterToShowList[filterID] !== undefined}>\n+      <Heading type={HeadingTypes.h6} label=\"Add widgets to configure\" />\n+      {filterToShowList[filterID].map((showID: string, showIndex: number) => {\n+        return (\n+          <If condition={showToInfo[showID]}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 139}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDc0NDQ0OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/index.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMjoyNjoyMVrOGkJBnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMjoyNjoyMVrOGkJBnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0OTc5MQ==", "bodyText": "Same here.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440549791", "createdAt": "2020-06-16T02:26:21Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/index.tsx", "diffHunk": "@@ -0,0 +1,201 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import Button from '@material-ui/core/Button';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import WidgetWrapper from 'components/ConfigurationGroup/WidgetWrapper';\n+import If from 'components/If';\n+import FilterConditionInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput';\n+import FilterShowlistInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput';\n+import { ICreateContext } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    filterInput: {\n+      display: 'block',\n+      marginLeft: 'auto',\n+      marginRight: 'auto',\n+      marginTop: '10px',\n+      marginBottom: '10px',\n+      '& > *': {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDc0NTAxOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/index.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMjoyNjo0MlrOGkJB_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzowODoyNFrOGlE5HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0OTg4Nw==", "bodyText": "Are we sure this is required? Where is this 1000px coming from?", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440549887", "createdAt": "2020-06-16T02:26:42Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/index.tsx", "diffHunk": "@@ -0,0 +1,201 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import Button from '@material-ui/core/Button';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import WidgetWrapper from 'components/ConfigurationGroup/WidgetWrapper';\n+import If from 'components/If';\n+import FilterConditionInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput';\n+import FilterShowlistInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput';\n+import { ICreateContext } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    filterInput: {\n+      display: 'block',\n+      marginLeft: 'auto',\n+      marginRight: 'auto',\n+      marginTop: '10px',\n+      marginBottom: '10px',\n+      '& > *': {\n+        marginTop: '15px',\n+        marginBottom: '15px',\n+      },\n+    },\n+    nestedFilters: {\n+      border: `1px solid`,\n+      borderColor: theme.palette.grey[300],\n+      borderRadius: '6px',\n+      position: 'relative',\n+      padding: '7px 10px 5px',\n+      margin: '25px',\n+    },\n+    filterContainer: {\n+      width: 'calc(100%-1000px)',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUzMDY1Mw==", "bodyText": "changed this to 90%.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r441530653", "createdAt": "2020-06-17T13:08:24Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/index.tsx", "diffHunk": "@@ -0,0 +1,201 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import Button from '@material-ui/core/Button';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import WidgetWrapper from 'components/ConfigurationGroup/WidgetWrapper';\n+import If from 'components/If';\n+import FilterConditionInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput';\n+import FilterShowlistInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput';\n+import { ICreateContext } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    filterInput: {\n+      display: 'block',\n+      marginLeft: 'auto',\n+      marginRight: 'auto',\n+      marginTop: '10px',\n+      marginBottom: '10px',\n+      '& > *': {\n+        marginTop: '15px',\n+        marginBottom: '15px',\n+      },\n+    },\n+    nestedFilters: {\n+      border: `1px solid`,\n+      borderColor: theme.palette.grey[300],\n+      borderRadius: '6px',\n+      position: 'relative',\n+      padding: '7px 10px 5px',\n+      margin: '25px',\n+    },\n+    filterContainer: {\n+      width: 'calc(100%-1000px)',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0OTg4Nw=="}, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDc0NjQ0OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/index.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMjoyNzoyNVrOGkJC2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzowODozNFrOGlE5gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU1MDEwNA==", "bodyText": "Same here. Missing key prop.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440550104", "createdAt": "2020-06-16T02:27:25Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/index.tsx", "diffHunk": "@@ -0,0 +1,201 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import Button from '@material-ui/core/Button';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import WidgetWrapper from 'components/ConfigurationGroup/WidgetWrapper';\n+import If from 'components/If';\n+import FilterConditionInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput';\n+import FilterShowlistInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput';\n+import { ICreateContext } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    filterInput: {\n+      display: 'block',\n+      marginLeft: 'auto',\n+      marginRight: 'auto',\n+      marginTop: '10px',\n+      marginBottom: '10px',\n+      '& > *': {\n+        marginTop: '15px',\n+        marginBottom: '15px',\n+      },\n+    },\n+    nestedFilters: {\n+      border: `1px solid`,\n+      borderColor: theme.palette.grey[300],\n+      borderRadius: '6px',\n+      position: 'relative',\n+      padding: '7px 10px 5px',\n+      margin: '25px',\n+    },\n+    filterContainer: {\n+      width: 'calc(100%-1000px)',\n+    },\n+  };\n+};\n+\n+const FilterNameInput = ({ filterID, filterToName, setFilterToName }) => {\n+  function setFilterName(filterObjID: string) {\n+    return (name) => {\n+      setFilterToName((prevObjs) => ({ ...prevObjs, [filterObjID]: name }));\n+    };\n+  }\n+\n+  const label = 'Filter Name';\n+\n+  const widget = {\n+    label,\n+    'widget-type': 'textbox',\n+  };\n+\n+  const property = {\n+    required: false,\n+    name: label,\n+  };\n+\n+  return (\n+    <WidgetWrapper\n+      widgetProperty={widget}\n+      pluginProperty={property}\n+      value={filterToName[filterID]}\n+      onChange={setFilterName(filterID)}\n+    />\n+  );\n+};\n+\n+const FilterCollectionView: React.FC<ICreateContext & WithStyles<typeof styles>> = ({\n+  classes,\n+  filters,\n+  setFilters,\n+  filterToName,\n+  setFilterToName,\n+  filterToCondition,\n+  setFilterToCondition,\n+  filterToShowList,\n+  setFilterToShowList,\n+  showToInfo,\n+  setShowToInfo,\n+  widgetInfo,\n+}) => {\n+  function addFilter(index: number) {\n+    const newFilterID = 'Filter_' + uuidV4();\n+\n+    const newFilters = [...filters];\n+\n+    if (newFilters.length === 0) {\n+      newFilters.splice(0, 0, newFilterID);\n+    } else {\n+      newFilters.splice(index + 1, 0, newFilterID);\n+    }\n+\n+    setFilters(newFilters);\n+\n+    setFilterToName({ ...filterToName, [newFilterID]: '' });\n+    setFilterToCondition({ ...filterToCondition, [newFilterID]: {} });\n+\n+    // put one empty show as a placeholder\n+    const newShowID = 'Show_' + uuidV4();\n+    setFilterToShowList({\n+      ...filterToShowList,\n+      [newFilterID]: [newShowID],\n+    });\n+    setShowToInfo({\n+      ...showToInfo,\n+      [newShowID]: {\n+        name: '',\n+      } as IPropertyShowConfig,\n+    });\n+  }\n+\n+  function deleteFilter(index: number) {\n+    const newFilters = [...filters];\n+    const filterToDelete = newFilters[index];\n+    newFilters.splice(index, 1);\n+    setFilters(newFilters);\n+\n+    const { [filterToDelete]: name, ...restFilterToName } = filterToName;\n+    setFilterToName(restFilterToName);\n+\n+    const { [filterToDelete]: condition, ...restFilterToCondition } = filterToCondition;\n+    setFilterToCondition(restFilterToCondition);\n+\n+    const { [filterToDelete]: showList, ...restFilterToShowList } = filterToShowList;\n+    setFilterToShowList(restFilterToShowList);\n+\n+    showList.map((show) => {\n+      const { [show]: info, ...rest } = showToInfo;\n+      setShowToInfo(rest);\n+    });\n+  }\n+\n+  return (\n+    <div>\n+      {filters.map((filterID: string, filterIndex: number) => {\n+        return (\n+          <div className={classes.nestedFilters} data-cy=\"widget-wrapper-container\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUzMDc1Mw==", "bodyText": "Resolved", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r441530753", "createdAt": "2020-06-17T13:08:34Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/index.tsx", "diffHunk": "@@ -0,0 +1,201 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import Button from '@material-ui/core/Button';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import WidgetWrapper from 'components/ConfigurationGroup/WidgetWrapper';\n+import If from 'components/If';\n+import FilterConditionInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput';\n+import FilterShowlistInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput';\n+import { ICreateContext } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    filterInput: {\n+      display: 'block',\n+      marginLeft: 'auto',\n+      marginRight: 'auto',\n+      marginTop: '10px',\n+      marginBottom: '10px',\n+      '& > *': {\n+        marginTop: '15px',\n+        marginBottom: '15px',\n+      },\n+    },\n+    nestedFilters: {\n+      border: `1px solid`,\n+      borderColor: theme.palette.grey[300],\n+      borderRadius: '6px',\n+      position: 'relative',\n+      padding: '7px 10px 5px',\n+      margin: '25px',\n+    },\n+    filterContainer: {\n+      width: 'calc(100%-1000px)',\n+    },\n+  };\n+};\n+\n+const FilterNameInput = ({ filterID, filterToName, setFilterToName }) => {\n+  function setFilterName(filterObjID: string) {\n+    return (name) => {\n+      setFilterToName((prevObjs) => ({ ...prevObjs, [filterObjID]: name }));\n+    };\n+  }\n+\n+  const label = 'Filter Name';\n+\n+  const widget = {\n+    label,\n+    'widget-type': 'textbox',\n+  };\n+\n+  const property = {\n+    required: false,\n+    name: label,\n+  };\n+\n+  return (\n+    <WidgetWrapper\n+      widgetProperty={widget}\n+      pluginProperty={property}\n+      value={filterToName[filterID]}\n+      onChange={setFilterName(filterID)}\n+    />\n+  );\n+};\n+\n+const FilterCollectionView: React.FC<ICreateContext & WithStyles<typeof styles>> = ({\n+  classes,\n+  filters,\n+  setFilters,\n+  filterToName,\n+  setFilterToName,\n+  filterToCondition,\n+  setFilterToCondition,\n+  filterToShowList,\n+  setFilterToShowList,\n+  showToInfo,\n+  setShowToInfo,\n+  widgetInfo,\n+}) => {\n+  function addFilter(index: number) {\n+    const newFilterID = 'Filter_' + uuidV4();\n+\n+    const newFilters = [...filters];\n+\n+    if (newFilters.length === 0) {\n+      newFilters.splice(0, 0, newFilterID);\n+    } else {\n+      newFilters.splice(index + 1, 0, newFilterID);\n+    }\n+\n+    setFilters(newFilters);\n+\n+    setFilterToName({ ...filterToName, [newFilterID]: '' });\n+    setFilterToCondition({ ...filterToCondition, [newFilterID]: {} });\n+\n+    // put one empty show as a placeholder\n+    const newShowID = 'Show_' + uuidV4();\n+    setFilterToShowList({\n+      ...filterToShowList,\n+      [newFilterID]: [newShowID],\n+    });\n+    setShowToInfo({\n+      ...showToInfo,\n+      [newShowID]: {\n+        name: '',\n+      } as IPropertyShowConfig,\n+    });\n+  }\n+\n+  function deleteFilter(index: number) {\n+    const newFilters = [...filters];\n+    const filterToDelete = newFilters[index];\n+    newFilters.splice(index, 1);\n+    setFilters(newFilters);\n+\n+    const { [filterToDelete]: name, ...restFilterToName } = filterToName;\n+    setFilterToName(restFilterToName);\n+\n+    const { [filterToDelete]: condition, ...restFilterToCondition } = filterToCondition;\n+    setFilterToCondition(restFilterToCondition);\n+\n+    const { [filterToDelete]: showList, ...restFilterToShowList } = filterToShowList;\n+    setFilterToShowList(restFilterToShowList);\n+\n+    showList.map((show) => {\n+      const { [show]: info, ...rest } = showToInfo;\n+      setShowToInfo(rest);\n+    });\n+  }\n+\n+  return (\n+    <div>\n+      {filters.map((filterID: string, filterIndex: number) => {\n+        return (\n+          <div className={classes.nestedFilters} data-cy=\"widget-wrapper-container\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU1MDEwNA=="}, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 152}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDc0NzAyOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/JsonMenu/ClosedJsonMenu/index.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMjoyNzo0N1rOGkJDQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMjoyNzo0N1rOGkJDQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU1MDIwOQ==", "bodyText": "Same here.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440550209", "createdAt": "2020-06-16T02:27:47Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/JsonMenu/ClosedJsonMenu/index.tsx", "diffHunk": "@@ -30,6 +30,9 @@ const styles = (theme): StyleRules => {\n     jsonActionButtons: {\n       padding: '15px',\n       flexDirection: 'column',\n+      '& > *': {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDc0Nzk4OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/JsonMenu/utilities.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMjoyODoyM1rOGkJD1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzowODo0OVrOGlE6Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU1MDM1OA==", "bodyText": "Could you please extract this out as an if condition? IMHO it is easier to read.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440550358", "createdAt": "2020-06-16T02:28:23Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/JsonMenu/utilities.ts", "diffHunk": "@@ -47,9 +51,25 @@ function getJSONConfig(widgetJSONData) {\n     ...(outputName && { name: outputName }),\n   };\n \n+  const filtersData = filters.map((filterID) => {\n+    const filterToShowListData = filterToShowList[filterID].map((showID) => {\n+      return {\n+        name: showToInfo[showID].name,\n+        ...(showToInfo[showID].type && {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUzMDkxMQ==", "bodyText": "Resolved", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r441530911", "createdAt": "2020-06-17T13:08:49Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/JsonMenu/utilities.ts", "diffHunk": "@@ -47,9 +51,25 @@ function getJSONConfig(widgetJSONData) {\n     ...(outputName && { name: outputName }),\n   };\n \n+  const filtersData = filters.map((filterID) => {\n+    const filterToShowListData = filterToShowList[filterID].map((showID) => {\n+      return {\n+        name: showToInfo[showID].name,\n+        ...(showToInfo[showID].type && {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU1MDM1OA=="}, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDc1ODAxOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/JsonMenu/utilities.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMjozNTowOVrOGkJKMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzowODo1NFrOGlE6WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU1MTk4NQ==", "bodyText": "Do we need to hardcode it?", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440551985", "createdAt": "2020-06-16T02:35:09Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/JsonMenu/utilities.ts", "diffHunk": "@@ -47,9 +51,25 @@ function getJSONConfig(widgetJSONData) {\n     ...(outputName && { name: outputName }),\n   };\n \n+  const filtersData = filters.map((filterID) => {\n+    const filterToShowListData = filterToShowList[filterID].map((showID) => {\n+      return {\n+        name: showToInfo[showID].name,\n+        ...(showToInfo[showID].type && {\n+          type: showToInfo[showID].type,\n+        }),\n+      };\n+    });\n+    return {\n+      name: filterToName[filterID],\n+      condition: filterToCondition[filterID],\n+      show: filterToShowListData,\n+    };\n+  });\n+\n   const config = {\n     metadata: {\n-      'spec-version': SPEC_VERSION,\n+      'spec-version': '1.5',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUzMDk2OA==", "bodyText": "Resolved", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r441530968", "createdAt": "2020-06-17T13:08:54Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/JsonMenu/utilities.ts", "diffHunk": "@@ -47,9 +51,25 @@ function getJSONConfig(widgetJSONData) {\n     ...(outputName && { name: outputName }),\n   };\n \n+  const filtersData = filters.map((filterID) => {\n+    const filterToShowListData = filterToShowList[filterID].map((showID) => {\n+      return {\n+        name: showToInfo[showID].name,\n+        ...(showToInfo[showID].type && {\n+          type: showToInfo[showID].type,\n+        }),\n+      };\n+    });\n+    return {\n+      name: filterToName[filterID],\n+      condition: filterToCondition[filterID],\n+      show: filterToShowListData,\n+    };\n+  });\n+\n   const config = {\n     metadata: {\n-      'spec-version': SPEC_VERSION,\n+      'spec-version': '1.5',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU1MTk4NQ=="}, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Mzg0NTA5OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzoxNDo1MVrOGlifRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMjowOTozMFrOGlsYhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxNTU1Nw==", "bodyText": "why is the !isNil(widgetName) being done twice with AND?", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r442015557", "createdAt": "2020-06-18T07:14:51Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "diffHunk": "@@ -0,0 +1,164 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { StyleRules, withStyles, WithStyles } from '@material-ui/core/styles';\n+import { CustomOperator } from 'components/ConfigurationGroup/types';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { OPERATOR_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import isNil from 'lodash/isNil';\n+import * as React from 'react';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    filterConditionInput: {\n+      marginTop: '10px',\n+      marginBottom: '10px',\n+    },\n+  };\n+};\n+\n+export enum FilterConditionMode {\n+  Operator = 'operator',\n+  Expression = 'expression',\n+}\n+\n+enum FilterConditionProperty {\n+  Expression = 'expression',\n+  Property = 'property',\n+  Operator = 'operator',\n+  Value = 'value',\n+}\n+\n+interface IFilterConditionInputProps extends WithStyles<typeof styles>, ICreateContext {\n+  filterID: string;\n+}\n+\n+const FilterConditionInputview: React.FC<IFilterConditionInputProps> = ({\n+  classes,\n+  filterID,\n+  filterToCondition,\n+  setFilterToCondition,\n+  widgetInfo,\n+}) => {\n+  const existingCondition = filterToCondition[filterID];\n+\n+  const [conditionMode, setConditionMode] = React.useState(\n+    existingCondition.expression ? FilterConditionMode.Expression : FilterConditionMode.Operator\n+  );\n+\n+  const allWidgetNames = widgetInfo\n+    ? Object.values(widgetInfo)\n+        .map((info: IWidgetInfo) => info.name)\n+        .filter((widgetName) => !isNil(widgetName) && !isNil(widgetName))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b664285b6426902f7720f57412daa97b694e951"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE3NzY3MQ==", "bodyText": "Resolved", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r442177671", "createdAt": "2020-06-18T12:09:30Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "diffHunk": "@@ -0,0 +1,164 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { StyleRules, withStyles, WithStyles } from '@material-ui/core/styles';\n+import { CustomOperator } from 'components/ConfigurationGroup/types';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { OPERATOR_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import isNil from 'lodash/isNil';\n+import * as React from 'react';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    filterConditionInput: {\n+      marginTop: '10px',\n+      marginBottom: '10px',\n+    },\n+  };\n+};\n+\n+export enum FilterConditionMode {\n+  Operator = 'operator',\n+  Expression = 'expression',\n+}\n+\n+enum FilterConditionProperty {\n+  Expression = 'expression',\n+  Property = 'property',\n+  Operator = 'operator',\n+  Value = 'value',\n+}\n+\n+interface IFilterConditionInputProps extends WithStyles<typeof styles>, ICreateContext {\n+  filterID: string;\n+}\n+\n+const FilterConditionInputview: React.FC<IFilterConditionInputProps> = ({\n+  classes,\n+  filterID,\n+  filterToCondition,\n+  setFilterToCondition,\n+  widgetInfo,\n+}) => {\n+  const existingCondition = filterToCondition[filterID];\n+\n+  const [conditionMode, setConditionMode] = React.useState(\n+    existingCondition.expression ? FilterConditionMode.Expression : FilterConditionMode.Operator\n+  );\n+\n+  const allWidgetNames = widgetInfo\n+    ? Object.values(widgetInfo)\n+        .map((info: IWidgetInfo) => info.name)\n+        .filter((widgetName) => !isNil(widgetName) && !isNil(widgetName))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxNTU1Nw=="}, "originalCommit": {"oid": "9b664285b6426902f7720f57412daa97b694e951"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Mzg1MTg5OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput/index.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzoxNjo1OFrOGlijew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMjowOTozNFrOGlsYrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxNjYzNQ==", "bodyText": "same here regarding the isNil check", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r442016635", "createdAt": "2020-06-18T07:16:58Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput/index.tsx", "diffHunk": "@@ -0,0 +1,191 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import IconButton from '@material-ui/core/IconButton';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import AddIcon from '@material-ui/icons/Add';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import classnames from 'classnames';\n+import { IPropertyShowConfig } from 'components/ConfigurationGroup/types';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { SHOW_TYPE_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import isNil from 'lodash/isNil';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    showConfigCollection: {\n+      display: 'grid',\n+      gridAutoFlow: 'column',\n+      width: '100%',\n+    },\n+    showConfigInput: {\n+      gridRow: '1',\n+      width: '100%',\n+    },\n+    showConfigNameInput: {\n+      gridColumnStart: '1',\n+      gridColumnEnd: '8',\n+    },\n+    showConfigTypeInput: {\n+      gridColumnStart: '9',\n+      gridColumnEnd: '15',\n+    },\n+    showAddDeleteButtonInput: {\n+      gridColumnStart: '19',\n+      gridColumnEnd: '20',\n+    },\n+    showAddDeleteButton: {\n+      float: 'right',\n+    },\n+  };\n+};\n+\n+interface IFilterShowlistInputProps extends WithStyles<typeof styles>, ICreateContext {\n+  filterID: string;\n+}\n+\n+const FilterShowlistInputView: React.FC<IFilterShowlistInputProps> = ({\n+  classes,\n+  filterID,\n+  filterToShowList,\n+  setFilterToShowList,\n+  showToInfo,\n+  setShowToInfo,\n+  widgetInfo,\n+}) => {\n+  const allWidgetNames = widgetInfo\n+    ? Object.values(widgetInfo)\n+        .map((info: IWidgetInfo) => info.name)\n+        .filter((widgetName) => !isNil(widgetName) && !isNil(widgetName))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b664285b6426902f7720f57412daa97b694e951"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE3NzcxMA==", "bodyText": "Resolved", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r442177710", "createdAt": "2020-06-18T12:09:34Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput/index.tsx", "diffHunk": "@@ -0,0 +1,191 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import IconButton from '@material-ui/core/IconButton';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import AddIcon from '@material-ui/icons/Add';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import classnames from 'classnames';\n+import { IPropertyShowConfig } from 'components/ConfigurationGroup/types';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { SHOW_TYPE_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import isNil from 'lodash/isNil';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    showConfigCollection: {\n+      display: 'grid',\n+      gridAutoFlow: 'column',\n+      width: '100%',\n+    },\n+    showConfigInput: {\n+      gridRow: '1',\n+      width: '100%',\n+    },\n+    showConfigNameInput: {\n+      gridColumnStart: '1',\n+      gridColumnEnd: '8',\n+    },\n+    showConfigTypeInput: {\n+      gridColumnStart: '9',\n+      gridColumnEnd: '15',\n+    },\n+    showAddDeleteButtonInput: {\n+      gridColumnStart: '19',\n+      gridColumnEnd: '20',\n+    },\n+    showAddDeleteButton: {\n+      float: 'right',\n+    },\n+  };\n+};\n+\n+interface IFilterShowlistInputProps extends WithStyles<typeof styles>, ICreateContext {\n+  filterID: string;\n+}\n+\n+const FilterShowlistInputView: React.FC<IFilterShowlistInputProps> = ({\n+  classes,\n+  filterID,\n+  filterToShowList,\n+  setFilterToShowList,\n+  showToInfo,\n+  setShowToInfo,\n+  widgetInfo,\n+}) => {\n+  const allWidgetNames = widgetInfo\n+    ? Object.values(widgetInfo)\n+        .map((info: IWidgetInfo) => info.name)\n+        .filter((widgetName) => !isNil(widgetName) && !isNil(widgetName))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxNjYzNQ=="}, "originalCommit": {"oid": "9b664285b6426902f7720f57412daa97b694e951"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Mzg1NTMxOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput/index.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzoxODowNVrOGlilqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMjowODo0MFrOGlsW0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxNzE5NQ==", "bodyText": "you might have change this in immutableJS PR, but just to make sure - this is mutating the original array, we should clone the array first", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r442017195", "createdAt": "2020-06-18T07:18:05Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput/index.tsx", "diffHunk": "@@ -0,0 +1,191 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import IconButton from '@material-ui/core/IconButton';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import AddIcon from '@material-ui/icons/Add';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import classnames from 'classnames';\n+import { IPropertyShowConfig } from 'components/ConfigurationGroup/types';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { SHOW_TYPE_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import isNil from 'lodash/isNil';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    showConfigCollection: {\n+      display: 'grid',\n+      gridAutoFlow: 'column',\n+      width: '100%',\n+    },\n+    showConfigInput: {\n+      gridRow: '1',\n+      width: '100%',\n+    },\n+    showConfigNameInput: {\n+      gridColumnStart: '1',\n+      gridColumnEnd: '8',\n+    },\n+    showConfigTypeInput: {\n+      gridColumnStart: '9',\n+      gridColumnEnd: '15',\n+    },\n+    showAddDeleteButtonInput: {\n+      gridColumnStart: '19',\n+      gridColumnEnd: '20',\n+    },\n+    showAddDeleteButton: {\n+      float: 'right',\n+    },\n+  };\n+};\n+\n+interface IFilterShowlistInputProps extends WithStyles<typeof styles>, ICreateContext {\n+  filterID: string;\n+}\n+\n+const FilterShowlistInputView: React.FC<IFilterShowlistInputProps> = ({\n+  classes,\n+  filterID,\n+  filterToShowList,\n+  setFilterToShowList,\n+  showToInfo,\n+  setShowToInfo,\n+  widgetInfo,\n+}) => {\n+  const allWidgetNames = widgetInfo\n+    ? Object.values(widgetInfo)\n+        .map((info: IWidgetInfo) => info.name)\n+        .filter((widgetName) => !isNil(widgetName) && !isNil(widgetName))\n+    : [];\n+\n+  function setShowProperty(showID: string, property: string) {\n+    return (val) => {\n+      setShowToInfo((prevObjs) => ({\n+        ...prevObjs,\n+        [showID]: { ...prevObjs[showID], [property]: val },\n+      }));\n+    };\n+  }\n+\n+  function addShowToFilter(filterObjID: string, index?: number) {\n+    const newShowID = 'Show_' + uuidV4();\n+\n+    setShowToInfo({\n+      ...showToInfo,\n+      [newShowID]: {\n+        name: '',\n+      } as IPropertyShowConfig,\n+    });\n+\n+    if (index === undefined) {\n+      setFilterToShowList({\n+        ...filterToShowList,\n+        [filterObjID]: [...filterToShowList[filterObjID], newShowID],\n+      });\n+    } else {\n+      const showList = filterToShowList[filterObjID];\n+\n+      if (showList.length === 0) {\n+        showList.splice(0, 0, newShowID);\n+      } else {\n+        showList.splice(index + 1, 0, newShowID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b664285b6426902f7720f57412daa97b694e951"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE3NzIzMg==", "bodyText": "This is resolved through immutable PR #12251  and refactor PR #12310\n\n  \n    \n      cdap/cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/FilterPage/FilterPanel/FilterShowlistInput/index.tsx\n    \n    \n         Line 43\n      in\n      882eb81\n    \n    \n    \n    \n\n        \n          \n           const newShowlist = showlist.insert(index + 1, newShowID);", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r442177232", "createdAt": "2020-06-18T12:08:40Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput/index.tsx", "diffHunk": "@@ -0,0 +1,191 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import IconButton from '@material-ui/core/IconButton';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import AddIcon from '@material-ui/icons/Add';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import classnames from 'classnames';\n+import { IPropertyShowConfig } from 'components/ConfigurationGroup/types';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { SHOW_TYPE_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import isNil from 'lodash/isNil';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    showConfigCollection: {\n+      display: 'grid',\n+      gridAutoFlow: 'column',\n+      width: '100%',\n+    },\n+    showConfigInput: {\n+      gridRow: '1',\n+      width: '100%',\n+    },\n+    showConfigNameInput: {\n+      gridColumnStart: '1',\n+      gridColumnEnd: '8',\n+    },\n+    showConfigTypeInput: {\n+      gridColumnStart: '9',\n+      gridColumnEnd: '15',\n+    },\n+    showAddDeleteButtonInput: {\n+      gridColumnStart: '19',\n+      gridColumnEnd: '20',\n+    },\n+    showAddDeleteButton: {\n+      float: 'right',\n+    },\n+  };\n+};\n+\n+interface IFilterShowlistInputProps extends WithStyles<typeof styles>, ICreateContext {\n+  filterID: string;\n+}\n+\n+const FilterShowlistInputView: React.FC<IFilterShowlistInputProps> = ({\n+  classes,\n+  filterID,\n+  filterToShowList,\n+  setFilterToShowList,\n+  showToInfo,\n+  setShowToInfo,\n+  widgetInfo,\n+}) => {\n+  const allWidgetNames = widgetInfo\n+    ? Object.values(widgetInfo)\n+        .map((info: IWidgetInfo) => info.name)\n+        .filter((widgetName) => !isNil(widgetName) && !isNil(widgetName))\n+    : [];\n+\n+  function setShowProperty(showID: string, property: string) {\n+    return (val) => {\n+      setShowToInfo((prevObjs) => ({\n+        ...prevObjs,\n+        [showID]: { ...prevObjs[showID], [property]: val },\n+      }));\n+    };\n+  }\n+\n+  function addShowToFilter(filterObjID: string, index?: number) {\n+    const newShowID = 'Show_' + uuidV4();\n+\n+    setShowToInfo({\n+      ...showToInfo,\n+      [newShowID]: {\n+        name: '',\n+      } as IPropertyShowConfig,\n+    });\n+\n+    if (index === undefined) {\n+      setFilterToShowList({\n+        ...filterToShowList,\n+        [filterObjID]: [...filterToShowList[filterObjID], newShowID],\n+      });\n+    } else {\n+      const showList = filterToShowList[filterObjID];\n+\n+      if (showList.length === 0) {\n+        showList.splice(0, 0, newShowID);\n+      } else {\n+        showList.splice(index + 1, 0, newShowID);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxNzE5NQ=="}, "originalCommit": {"oid": "9b664285b6426902f7720f57412daa97b694e951"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Mzg1NzUyOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/index.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzoxODo0NlrOGlinCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMjoxMTo0MlrOGlsc2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxNzU0Nw==", "bodyText": "consolidate these to the margin property", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r442017547", "createdAt": "2020-06-18T07:18:46Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/index.tsx", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import Button from '@material-ui/core/Button';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import { IPropertyShowConfig } from 'components/ConfigurationGroup/types';\n+import WidgetWrapper from 'components/ConfigurationGroup/WidgetWrapper';\n+import If from 'components/If';\n+import FilterConditionInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput';\n+import FilterShowlistInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput';\n+import { ICreateContext } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    filterInput: {\n+      display: 'block',\n+      marginLeft: 'auto',\n+      marginRight: 'auto',\n+      marginTop: '30px',\n+      marginBottom: '30px',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b664285b6426902f7720f57412daa97b694e951"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE3ODc3Nw==", "bodyText": "Resolved", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r442178777", "createdAt": "2020-06-18T12:11:42Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/index.tsx", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import Button from '@material-ui/core/Button';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import { IPropertyShowConfig } from 'components/ConfigurationGroup/types';\n+import WidgetWrapper from 'components/ConfigurationGroup/WidgetWrapper';\n+import If from 'components/If';\n+import FilterConditionInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput';\n+import FilterShowlistInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput';\n+import { ICreateContext } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    filterInput: {\n+      display: 'block',\n+      marginLeft: 'auto',\n+      marginRight: 'auto',\n+      marginTop: '30px',\n+      marginBottom: '30px',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxNzU0Nw=="}, "originalCommit": {"oid": "9b664285b6426902f7720f57412daa97b694e951"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Mzg1OTIwOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/index.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzoxOToxNVrOGlioAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMjowOToyMFrOGlsYNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxNzc5Mg==", "bodyText": "border: 1px solid ${theme.palette.grey[300]}", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r442017792", "createdAt": "2020-06-18T07:19:15Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/index.tsx", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import Button from '@material-ui/core/Button';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import { IPropertyShowConfig } from 'components/ConfigurationGroup/types';\n+import WidgetWrapper from 'components/ConfigurationGroup/WidgetWrapper';\n+import If from 'components/If';\n+import FilterConditionInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput';\n+import FilterShowlistInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput';\n+import { ICreateContext } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    filterInput: {\n+      display: 'block',\n+      marginLeft: 'auto',\n+      marginRight: 'auto',\n+      marginTop: '30px',\n+      marginBottom: '30px',\n+    },\n+    nestedFilters: {\n+      border: `1px solid`,\n+      borderColor: theme.palette.grey[300],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b664285b6426902f7720f57412daa97b694e951"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE3NzU4OQ==", "bodyText": "Resolved", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r442177589", "createdAt": "2020-06-18T12:09:20Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/index.tsx", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import Button from '@material-ui/core/Button';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import { IPropertyShowConfig } from 'components/ConfigurationGroup/types';\n+import WidgetWrapper from 'components/ConfigurationGroup/WidgetWrapper';\n+import If from 'components/If';\n+import FilterConditionInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput';\n+import FilterShowlistInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput';\n+import { ICreateContext } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    filterInput: {\n+      display: 'block',\n+      marginLeft: 'auto',\n+      marginRight: 'auto',\n+      marginTop: '30px',\n+      marginBottom: '30px',\n+    },\n+    nestedFilters: {\n+      border: `1px solid`,\n+      borderColor: theme.palette.grey[300],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxNzc5Mg=="}, "originalCommit": {"oid": "9b664285b6426902f7720f57412daa97b694e951"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3351, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}