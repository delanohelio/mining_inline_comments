{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NjE0NzI3", "number": 12004, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMzo1NjoxMlrODsE0gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNDowNjoyNlrODsFFVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTQyOTE1OnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/DefaultArtifactRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMzo1NjoxMlrOF8yOhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjoyOTo1NlrOF9DoIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI4MTc5OA==", "bodyText": "remove debug logs", "url": "https://github.com/cdapio/cdap/pull/12004#discussion_r399281798", "createdAt": "2020-03-27T13:56:12Z", "author": {"login": "albertshau"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/DefaultArtifactRepository.java", "diffHunk": "@@ -453,12 +454,15 @@ private boolean loadSystemArtifacts(ExecutorService executorService,\n   public void deleteArtifact(Id.Artifact artifactId) throws Exception {\n     // delete the artifact first and then privileges. Not the other way to avoid orphan artifact\n     // which does not have any privilege if the artifact delete from store fails. see CDAP-6648\n+    LOG.debug(\"wyzhang: delete artiact store: \" + artifactStore);\n+    LOG.debug(\"wyzhang: delete artiact id: \" + artifactId.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d55b23ac0d496d1684647da5471e592cf823aa62"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2Njg4Mg==", "bodyText": "Done.\nForgot to clean them up.", "url": "https://github.com/cdapio/cdap/pull/12004#discussion_r399566882", "createdAt": "2020-03-27T22:29:56Z", "author": {"login": "wyzhang"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/DefaultArtifactRepository.java", "diffHunk": "@@ -453,12 +454,15 @@ private boolean loadSystemArtifacts(ExecutorService executorService,\n   public void deleteArtifact(Id.Artifact artifactId) throws Exception {\n     // delete the artifact first and then privileges. Not the other way to avoid orphan artifact\n     // which does not have any privilege if the artifact delete from store fails. see CDAP-6648\n+    LOG.debug(\"wyzhang: delete artiact store: \" + artifactStore);\n+    LOG.debug(\"wyzhang: delete artiact id: \" + artifactId.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI4MTc5OA=="}, "originalCommit": {"oid": "d55b23ac0d496d1684647da5471e592cf823aa62"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTQzODgzOnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/RemoteArtifactRepositoryReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMzo1ODozMlrOF8yU1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjozMDo0NVrOF9Do6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI4MzQxNA==", "bodyText": "order.name()", "url": "https://github.com/cdapio/cdap/pull/12004#discussion_r399283414", "createdAt": "2020-03-27T13:58:32Z", "author": {"login": "albertshau"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/RemoteArtifactRepositoryReader.java", "diffHunk": "@@ -87,6 +92,30 @@ public ArtifactDetail getArtifact(Id.Artifact artifactId) throws Exception {\n     return artifactDetail;\n   }\n \n+  @Override\n+  public List<ArtifactDetail> getArtifactDetails(ArtifactRange range, int limit, ArtifactSortOrder order)\n+    throws Exception {\n+    String url = String.format(\"namespaces/%s/artifacts/%s/versions?lower=%s&upper=%s&limit=%s&order=%s\",\n+                               range.getNamespace(),\n+                               range.getName(),\n+                               range.getLower().toString(),\n+                               range.getUpper().toString(),\n+                               String.valueOf(limit),\n+                               String.valueOf(order));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d55b23ac0d496d1684647da5471e592cf823aa62"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2NzA4MA==", "bodyText": "Done", "url": "https://github.com/cdapio/cdap/pull/12004#discussion_r399567080", "createdAt": "2020-03-27T22:30:45Z", "author": {"login": "wyzhang"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/RemoteArtifactRepositoryReader.java", "diffHunk": "@@ -87,6 +92,30 @@ public ArtifactDetail getArtifact(Id.Artifact artifactId) throws Exception {\n     return artifactDetail;\n   }\n \n+  @Override\n+  public List<ArtifactDetail> getArtifactDetails(ArtifactRange range, int limit, ArtifactSortOrder order)\n+    throws Exception {\n+    String url = String.format(\"namespaces/%s/artifacts/%s/versions?lower=%s&upper=%s&limit=%s&order=%s\",\n+                               range.getNamespace(),\n+                               range.getName(),\n+                               range.getLower().toString(),\n+                               range.getUpper().toString(),\n+                               String.valueOf(limit),\n+                               String.valueOf(order));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI4MzQxNA=="}, "originalCommit": {"oid": "d55b23ac0d496d1684647da5471e592cf823aa62"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTQ0MTc3OnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/RemoteArtifactRepositoryReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMzo1OToxM1rOF8yWuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjozNTowNFrOF9Dt1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI4Mzg5Ng==", "bodyText": "I assume this means both lower and upper are always non-null?", "url": "https://github.com/cdapio/cdap/pull/12004#discussion_r399283896", "createdAt": "2020-03-27T13:59:13Z", "author": {"login": "albertshau"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/RemoteArtifactRepositoryReader.java", "diffHunk": "@@ -87,6 +92,30 @@ public ArtifactDetail getArtifact(Id.Artifact artifactId) throws Exception {\n     return artifactDetail;\n   }\n \n+  @Override\n+  public List<ArtifactDetail> getArtifactDetails(ArtifactRange range, int limit, ArtifactSortOrder order)\n+    throws Exception {\n+    String url = String.format(\"namespaces/%s/artifacts/%s/versions?lower=%s&upper=%s&limit=%s&order=%s\",\n+                               range.getNamespace(),\n+                               range.getName(),\n+                               range.getLower().toString(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d55b23ac0d496d1684647da5471e592cf823aa62"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2ODM0MQ==", "bodyText": "Yes.\nVersion fields in ArtifactRange are not annotated with nullable.\nAlso quickly checked a number of callers, I don't see any null being used to construct ArtifactRange.", "url": "https://github.com/cdapio/cdap/pull/12004#discussion_r399568341", "createdAt": "2020-03-27T22:35:04Z", "author": {"login": "wyzhang"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/RemoteArtifactRepositoryReader.java", "diffHunk": "@@ -87,6 +92,30 @@ public ArtifactDetail getArtifact(Id.Artifact artifactId) throws Exception {\n     return artifactDetail;\n   }\n \n+  @Override\n+  public List<ArtifactDetail> getArtifactDetails(ArtifactRange range, int limit, ArtifactSortOrder order)\n+    throws Exception {\n+    String url = String.format(\"namespaces/%s/artifacts/%s/versions?lower=%s&upper=%s&limit=%s&order=%s\",\n+                               range.getNamespace(),\n+                               range.getName(),\n+                               range.getLower().toString(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI4Mzg5Ng=="}, "originalCommit": {"oid": "d55b23ac0d496d1684647da5471e592cf823aa62"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTQ3MjIyOnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/RemoteArtifactRepositoryReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNDowNjoyNlrOF8yp1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjozOToyNVrOF9Dygw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI4ODc5MA==", "bodyText": "is there a reason this utility method is being used over locationFactory.create()? Are they different?", "url": "https://github.com/cdapio/cdap/pull/12004#discussion_r399288790", "createdAt": "2020-03-27T14:06:26Z", "author": {"login": "albertshau"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/RemoteArtifactRepositoryReader.java", "diffHunk": "@@ -87,6 +92,30 @@ public ArtifactDetail getArtifact(Id.Artifact artifactId) throws Exception {\n     return artifactDetail;\n   }\n \n+  @Override\n+  public List<ArtifactDetail> getArtifactDetails(ArtifactRange range, int limit, ArtifactSortOrder order)\n+    throws Exception {\n+    String url = String.format(\"namespaces/%s/artifacts/%s/versions?lower=%s&upper=%s&limit=%s&order=%s\",\n+                               range.getNamespace(),\n+                               range.getName(),\n+                               range.getLower().toString(),\n+                               range.getUpper().toString(),\n+                               String.valueOf(limit),\n+                               String.valueOf(order));\n+    HttpRequest.Builder requestBuilder = remoteClient.requestBuilder(HttpMethod.GET, url);\n+    HttpResponse httpResponse = execute(requestBuilder.build());\n+    List<ArtifactDetail> details = GSON.fromJson(httpResponse.getResponseBodyAsString(), ARTIFACT_DETAIL_LIST_TYPE);\n+    List<ArtifactDetail> detailList = new ArrayList<>();\n+    for (ArtifactDetail detail : details) {\n+      Location artifactLocation =\n+        Locations.getLocationFromAbsolutePath(locationFactory, detail.getDescriptor().getLocationURI().getPath());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d55b23ac0d496d1684647da5471e592cf823aa62"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2OTUzOQ==", "bodyText": "Fixed. We can use LocationFactory.create() directly. The util cleans up and validate the path. But we are guaranteed the location URI is valid, so can just use create.", "url": "https://github.com/cdapio/cdap/pull/12004#discussion_r399569539", "createdAt": "2020-03-27T22:39:25Z", "author": {"login": "wyzhang"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/RemoteArtifactRepositoryReader.java", "diffHunk": "@@ -87,6 +92,30 @@ public ArtifactDetail getArtifact(Id.Artifact artifactId) throws Exception {\n     return artifactDetail;\n   }\n \n+  @Override\n+  public List<ArtifactDetail> getArtifactDetails(ArtifactRange range, int limit, ArtifactSortOrder order)\n+    throws Exception {\n+    String url = String.format(\"namespaces/%s/artifacts/%s/versions?lower=%s&upper=%s&limit=%s&order=%s\",\n+                               range.getNamespace(),\n+                               range.getName(),\n+                               range.getLower().toString(),\n+                               range.getUpper().toString(),\n+                               String.valueOf(limit),\n+                               String.valueOf(order));\n+    HttpRequest.Builder requestBuilder = remoteClient.requestBuilder(HttpMethod.GET, url);\n+    HttpResponse httpResponse = execute(requestBuilder.build());\n+    List<ArtifactDetail> details = GSON.fromJson(httpResponse.getResponseBodyAsString(), ARTIFACT_DETAIL_LIST_TYPE);\n+    List<ArtifactDetail> detailList = new ArrayList<>();\n+    for (ArtifactDetail detail : details) {\n+      Location artifactLocation =\n+        Locations.getLocationFromAbsolutePath(locationFactory, detail.getDescriptor().getLocationURI().getPath());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI4ODc5MA=="}, "originalCommit": {"oid": "d55b23ac0d496d1684647da5471e592cf823aa62"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2885, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}