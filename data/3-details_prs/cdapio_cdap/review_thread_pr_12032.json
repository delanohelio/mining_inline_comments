{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3OTQzMzAw", "number": 12032, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNTozODozM1rODuNstQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNTo0MzowNVrODuNvmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Nzg1NTI1OnYy", "diffSide": "LEFT", "path": "cdap-master/src/test/java/io/cdap/cdap/master/environment/k8s/PreviewServiceMainTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNTozODozM1rOGAFtgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNTo1MzowNFrOGAF85w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc0Njc1NA==", "bodyText": "nice that we don't need this anymore", "url": "https://github.com/cdapio/cdap/pull/12032#discussion_r402746754", "createdAt": "2020-04-03T05:38:33Z", "author": {"login": "albertshau"}, "path": "cdap-master/src/test/java/io/cdap/cdap/master/environment/k8s/PreviewServiceMainTest.java", "diffHunk": "@@ -39,82 +42,223 @@\n import org.apache.twill.filesystem.LocalLocationFactory;\n import org.apache.twill.filesystem.Location;\n import org.apache.twill.filesystem.LocationFactory;\n+import org.junit.After;\n import org.junit.Assert;\n import org.junit.Test;\n \n+import java.io.IOException;\n import java.io.InputStream;\n+import java.lang.reflect.Type;\n import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n import java.net.URL;\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.TimeUnit;\n+import java.util.jar.Manifest;\n \n /**\n  * Unit test for {@link AppFabricServiceMain}.\n  */\n public class PreviewServiceMainTest extends MasterServiceMainTestBase {\n   private static final Gson GSON = new Gson();\n \n-  @Test\n-  public void testPreviewService() throws Exception {\n+  private static final Type ARTIFACT_SUMMARY_LIST = new TypeToken<List<ArtifactSummary>>() { }.getType();\n+\n+  @After\n+  public void after() throws IOException {\n+    deleteAllArtifact();\n+  }\n \n-    // Deploy the app artifact\n+  @Test\n+  public void testPreviewSimpleApp() throws Exception {\n+    // Build the app\n     LocationFactory locationFactory = new LocalLocationFactory(TEMP_FOLDER.newFolder());\n     Location appJar = AppJarHelper.createDeploymentJar(locationFactory, PreviewTestApp.class);\n \n+    // Deploy the app\n     String artifactName = PreviewTestApp.class.getSimpleName();\n     String artifactVersion = \"1.0.0-SNAPSHOT\";\n+    deployArtifact(appJar, artifactName, artifactVersion);\n \n-    HttpRequestConfig requestConfig = new HttpRequestConfig(0, 0, false);\n-    URL url = getRouterBaseURI().resolve(String.format(\"/v3/namespaces/default/artifacts/%s\", artifactName)).toURL();\n-    HttpResponse response = HttpRequests.execute(\n-      HttpRequest.post(url)\n-        .withBody((ContentProvider<? extends InputStream>) appJar::getInputStream)\n-        .addHeader(\"Artifact-Version\", artifactVersion)\n-        .build(), requestConfig);\n-    Assert.assertEquals(HttpURLConnection.HTTP_OK, response.getResponseCode());\n+    // Start the preview service main, which will use its own local datadir, thus should fetch artifact location\n+    // from appFabric when running a preview\n+    startService(PreviewServiceMain.class);\n \n-    // have to stop AppFabric so that Preview can share the same leveldb table", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be15f9c04eddb7f7a49755b89ce660003f287d1d"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc1MDY5NQ==", "bodyText": "Ideally we should have another test that spin up SQL. If time permits, will look into add that.", "url": "https://github.com/cdapio/cdap/pull/12032#discussion_r402750695", "createdAt": "2020-04-03T05:53:04Z", "author": {"login": "wyzhang"}, "path": "cdap-master/src/test/java/io/cdap/cdap/master/environment/k8s/PreviewServiceMainTest.java", "diffHunk": "@@ -39,82 +42,223 @@\n import org.apache.twill.filesystem.LocalLocationFactory;\n import org.apache.twill.filesystem.Location;\n import org.apache.twill.filesystem.LocationFactory;\n+import org.junit.After;\n import org.junit.Assert;\n import org.junit.Test;\n \n+import java.io.IOException;\n import java.io.InputStream;\n+import java.lang.reflect.Type;\n import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n import java.net.URL;\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.TimeUnit;\n+import java.util.jar.Manifest;\n \n /**\n  * Unit test for {@link AppFabricServiceMain}.\n  */\n public class PreviewServiceMainTest extends MasterServiceMainTestBase {\n   private static final Gson GSON = new Gson();\n \n-  @Test\n-  public void testPreviewService() throws Exception {\n+  private static final Type ARTIFACT_SUMMARY_LIST = new TypeToken<List<ArtifactSummary>>() { }.getType();\n+\n+  @After\n+  public void after() throws IOException {\n+    deleteAllArtifact();\n+  }\n \n-    // Deploy the app artifact\n+  @Test\n+  public void testPreviewSimpleApp() throws Exception {\n+    // Build the app\n     LocationFactory locationFactory = new LocalLocationFactory(TEMP_FOLDER.newFolder());\n     Location appJar = AppJarHelper.createDeploymentJar(locationFactory, PreviewTestApp.class);\n \n+    // Deploy the app\n     String artifactName = PreviewTestApp.class.getSimpleName();\n     String artifactVersion = \"1.0.0-SNAPSHOT\";\n+    deployArtifact(appJar, artifactName, artifactVersion);\n \n-    HttpRequestConfig requestConfig = new HttpRequestConfig(0, 0, false);\n-    URL url = getRouterBaseURI().resolve(String.format(\"/v3/namespaces/default/artifacts/%s\", artifactName)).toURL();\n-    HttpResponse response = HttpRequests.execute(\n-      HttpRequest.post(url)\n-        .withBody((ContentProvider<? extends InputStream>) appJar::getInputStream)\n-        .addHeader(\"Artifact-Version\", artifactVersion)\n-        .build(), requestConfig);\n-    Assert.assertEquals(HttpURLConnection.HTTP_OK, response.getResponseCode());\n+    // Start the preview service main, which will use its own local datadir, thus should fetch artifact location\n+    // from appFabric when running a preview\n+    startService(PreviewServiceMain.class);\n \n-    // have to stop AppFabric so that Preview can share the same leveldb table", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc0Njc1NA=="}, "originalCommit": {"oid": "be15f9c04eddb7f7a49755b89ce660003f287d1d"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Nzg2MjY2OnYy", "diffSide": "RIGHT", "path": "cdap-unit-test/src/main/java/io/cdap/cdap/test/TestBase.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNTo0MzowNVrOGAFyJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMDo1Njo0N1rOGA0qOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc0Nzk0Mw==", "bodyText": "not really sure how things were working before if app fabric was never getting started before. Unless I'm missing something, it doesn't seem like the changes in this PR would affect TestBase?", "url": "https://github.com/cdapio/cdap/pull/12032#discussion_r402747943", "createdAt": "2020-04-03T05:43:05Z", "author": {"login": "albertshau"}, "path": "cdap-unit-test/src/main/java/io/cdap/cdap/test/TestBase.java", "diffHunk": "@@ -369,6 +371,8 @@ protected void configure() {\n     provisioningService = injector.getInstance(ProvisioningService.class);\n     provisioningService.startAndWait();\n     metadataSubscriberService.startAndWait();\n+    appFabricServer = injector.getInstance(AppFabricServer.class);\n+    appFabricServer.startAndWait();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be15f9c04eddb7f7a49755b89ce660003f287d1d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc1MzEzNA==", "bodyText": "In unit tests, we always use NOSQL thus will always exercise the remote call code path.\nRemoved for now.\nThought some other preview tests are failing due to AppFabric being not up. Let me run all tests again and see if anything is broken without this.", "url": "https://github.com/cdapio/cdap/pull/12032#discussion_r402753134", "createdAt": "2020-04-03T06:01:16Z", "author": {"login": "wyzhang"}, "path": "cdap-unit-test/src/main/java/io/cdap/cdap/test/TestBase.java", "diffHunk": "@@ -369,6 +371,8 @@ protected void configure() {\n     provisioningService = injector.getInstance(ProvisioningService.class);\n     provisioningService.startAndWait();\n     metadataSubscriberService.startAndWait();\n+    appFabricServer = injector.getInstance(AppFabricServer.class);\n+    appFabricServer.startAndWait();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc0Nzk0Mw=="}, "originalCommit": {"oid": "be15f9c04eddb7f7a49755b89ce660003f287d1d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUxNTk2Mg==", "bodyText": "@albertshau Without starting AppFabric, PreviewDataPipelineTest fails as we use NOSQL in test and preview in this case fetch artifact, preferences from appfabric. Previously preview just access local levelDB directly. Need to bring back this starting up appfabric.", "url": "https://github.com/cdapio/cdap/pull/12032#discussion_r403515962", "createdAt": "2020-04-04T20:56:47Z", "author": {"login": "wyzhang"}, "path": "cdap-unit-test/src/main/java/io/cdap/cdap/test/TestBase.java", "diffHunk": "@@ -369,6 +371,8 @@ protected void configure() {\n     provisioningService = injector.getInstance(ProvisioningService.class);\n     provisioningService.startAndWait();\n     metadataSubscriberService.startAndWait();\n+    appFabricServer = injector.getInstance(AppFabricServer.class);\n+    appFabricServer.startAndWait();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc0Nzk0Mw=="}, "originalCommit": {"oid": "be15f9c04eddb7f7a49755b89ce660003f287d1d"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2891, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}