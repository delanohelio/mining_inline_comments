{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMDY1NTEx", "number": 12808, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMDo0MjozNFrOE0nf8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMTowNDoyMVrOE0n5sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjA4NTYxOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/AbstractWidget/SchemaEditor/SchemaHelpers.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMDo0MjozNFrOHscgDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMDo0MjozNFrOHscgDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM2NjM0OQ==", "bodyText": "should this return true? if there's an issue then no schema is available", "url": "https://github.com/cdapio/cdap/pull/12808#discussion_r516366349", "createdAt": "2020-11-03T00:42:34Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/SchemaEditor/SchemaHelpers.ts", "diffHunk": "@@ -177,6 +178,21 @@ const isFlatRowTypeComplex = (typeName: AvroSchemaTypesEnum) => {\n   }\n };\n \n+const isNoSchemaAvailable = (schema) => {\n+  let avroSchema = schema;\n+  if (avroSchema) {\n+    avroSchema = avroSchema.schema;\n+    if (typeof avroSchema === 'string') {\n+      try {\n+        avroSchema = JSON.parse(avroSchema);\n+      } catch (e) {\n+        return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81df59d5808d6a8f0ee6ac0648abbf1cbdc4501c"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjA4NjY2OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/AbstractWidget/SchemaEditor/SchemaHelpers.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMDo0Mjo1OVrOHscgug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMDo0Mjo1OVrOHscgug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM2NjUyMg==", "bodyText": "might have to do a return true outside of this if statement?", "url": "https://github.com/cdapio/cdap/pull/12808#discussion_r516366522", "createdAt": "2020-11-03T00:42:59Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/SchemaEditor/SchemaHelpers.ts", "diffHunk": "@@ -177,6 +178,21 @@ const isFlatRowTypeComplex = (typeName: AvroSchemaTypesEnum) => {\n   }\n };\n \n+const isNoSchemaAvailable = (schema) => {\n+  let avroSchema = schema;\n+  if (avroSchema) {\n+    avroSchema = avroSchema.schema;\n+    if (typeof avroSchema === 'string') {\n+      try {\n+        avroSchema = JSON.parse(avroSchema);\n+      } catch (e) {\n+        return false;\n+      }\n+    }\n+    return !objectQuery(avroSchema, 'fields', 'length');\n+  }\n+};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81df59d5808d6a8f0ee6ac0648abbf1cbdc4501c"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjEzNjk0OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginSchemaEditor/index.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMDo1OToyM1rOHsc_uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODo0MDo0MlrOHtlAFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM3NDQ1OQ==", "bodyText": "Nit: I18n?", "url": "https://github.com/cdapio/cdap/pull/12808#discussion_r516374459", "createdAt": "2020-11-03T00:59:23Z", "author": {"login": "njbriggs"}, "path": "cdap-ui/app/cdap/components/PluginSchemaEditor/index.tsx", "diffHunk": "@@ -387,35 +427,42 @@ class PluginSchemaEditorBase extends React.PureComponent<\n       } else {\n         newSchema.schema = s.schema;\n       }\n+      if (isNoSchemaAvailable(newSchema)) {\n+        newSchema.schema = `No ${this.props.schemaTitle} available`;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81df59d5808d6a8f0ee6ac0648abbf1cbdc4501c"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU1NDE5OQ==", "bodyText": "Fair enough. Have not added i18n for Schema editor. Will take it up in a separate PR.", "url": "https://github.com/cdapio/cdap/pull/12808#discussion_r517554199", "createdAt": "2020-11-04T18:40:42Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginSchemaEditor/index.tsx", "diffHunk": "@@ -387,35 +427,42 @@ class PluginSchemaEditorBase extends React.PureComponent<\n       } else {\n         newSchema.schema = s.schema;\n       }\n+      if (isNoSchemaAvailable(newSchema)) {\n+        newSchema.schema = `No ${this.props.schemaTitle} available`;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM3NDQ1OQ=="}, "originalCommit": {"oid": "81df59d5808d6a8f0ee6ac0648abbf1cbdc4501c"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjE1MTU1OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginSchemaEditor/index.tsx", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMTowNDoyMVrOHsdJAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMToxODowNFrOHtqCVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM3NjgzNA==", "bodyText": "Nit: In other places, I've seen a preference for putting the \"truthy\" condition earlier in the ternary (i.e., this would be !!returnSchema.fields.length ? returnSchema : getDefaultEmptyAvroSchema()). Do we have a preference here?", "url": "https://github.com/cdapio/cdap/pull/12808#discussion_r516376834", "createdAt": "2020-11-03T01:04:21Z", "author": {"login": "njbriggs"}, "path": "cdap-ui/app/cdap/components/PluginSchemaEditor/index.tsx", "diffHunk": "@@ -373,6 +396,23 @@ class PluginSchemaEditorBase extends React.PureComponent<\n   };\n \n   private santizeSchemasForEditor = (schemas = this.props.schemas): ISchemaType[] => {\n+    if (typeof schemas === 'string') {\n+      let returnSchema;\n+      try {\n+        returnSchema = JSON.parse(schemas);\n+      } catch (e) {\n+        return [{ ...getDefaultEmptyAvroSchema() }];\n+      }\n+      if (!returnSchema.schema) {\n+        return [\n+          {\n+            name: 'etlSchemaBody',\n+            schema: !returnSchema.fields.length ? getDefaultEmptyAvroSchema() : returnSchema,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81df59d5808d6a8f0ee6ac0648abbf1cbdc4501c"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU1NDY1NQ==", "bodyText": "IMHO there is no preference as of now. But if you insist on a pattern we could follow. I am not too strong about it.", "url": "https://github.com/cdapio/cdap/pull/12808#discussion_r517554655", "createdAt": "2020-11-04T18:41:31Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginSchemaEditor/index.tsx", "diffHunk": "@@ -373,6 +396,23 @@ class PluginSchemaEditorBase extends React.PureComponent<\n   };\n \n   private santizeSchemasForEditor = (schemas = this.props.schemas): ISchemaType[] => {\n+    if (typeof schemas === 'string') {\n+      let returnSchema;\n+      try {\n+        returnSchema = JSON.parse(schemas);\n+      } catch (e) {\n+        return [{ ...getDefaultEmptyAvroSchema() }];\n+      }\n+      if (!returnSchema.schema) {\n+        return [\n+          {\n+            name: 'etlSchemaBody',\n+            schema: !returnSchema.fields.length ? getDefaultEmptyAvroSchema() : returnSchema,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM3NjgzNA=="}, "originalCommit": {"oid": "81df59d5808d6a8f0ee6ac0648abbf1cbdc4501c"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU2NDgxOQ==", "bodyText": "I think it makes things a bit easier to read, but is most effective with nested ternaries (which we shouldn't be doing anyway). So I'm not going to push for a standard for now.", "url": "https://github.com/cdapio/cdap/pull/12808#discussion_r517564819", "createdAt": "2020-11-04T18:59:14Z", "author": {"login": "njbriggs"}, "path": "cdap-ui/app/cdap/components/PluginSchemaEditor/index.tsx", "diffHunk": "@@ -373,6 +396,23 @@ class PluginSchemaEditorBase extends React.PureComponent<\n   };\n \n   private santizeSchemasForEditor = (schemas = this.props.schemas): ISchemaType[] => {\n+    if (typeof schemas === 'string') {\n+      let returnSchema;\n+      try {\n+        returnSchema = JSON.parse(schemas);\n+      } catch (e) {\n+        return [{ ...getDefaultEmptyAvroSchema() }];\n+      }\n+      if (!returnSchema.schema) {\n+        return [\n+          {\n+            name: 'etlSchemaBody',\n+            schema: !returnSchema.fields.length ? getDefaultEmptyAvroSchema() : returnSchema,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM3NjgzNA=="}, "originalCommit": {"oid": "81df59d5808d6a8f0ee6ac0648abbf1cbdc4501c"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYzNjY5Mg==", "bodyText": "I think I was using that pattern in Replication if I were to use the <If condition>, since condition has to be boolean", "url": "https://github.com/cdapio/cdap/pull/12808#discussion_r517636692", "createdAt": "2020-11-04T21:18:04Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/PluginSchemaEditor/index.tsx", "diffHunk": "@@ -373,6 +396,23 @@ class PluginSchemaEditorBase extends React.PureComponent<\n   };\n \n   private santizeSchemasForEditor = (schemas = this.props.schemas): ISchemaType[] => {\n+    if (typeof schemas === 'string') {\n+      let returnSchema;\n+      try {\n+        returnSchema = JSON.parse(schemas);\n+      } catch (e) {\n+        return [{ ...getDefaultEmptyAvroSchema() }];\n+      }\n+      if (!returnSchema.schema) {\n+        return [\n+          {\n+            name: 'etlSchemaBody',\n+            schema: !returnSchema.fields.length ? getDefaultEmptyAvroSchema() : returnSchema,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM3NjgzNA=="}, "originalCommit": {"oid": "81df59d5808d6a8f0ee6ac0648abbf1cbdc4501c"}, "originalPosition": 79}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3073, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}