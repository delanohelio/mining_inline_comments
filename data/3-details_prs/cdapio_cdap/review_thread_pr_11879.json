{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NDkzMzQ2", "number": 11879, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzo1MToxMVrODk273A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzo1NzoyMVrODk3A7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTc1Mzg4OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/Markdown/MarkdownHeading.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzo1MToxMVrOFxa0-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzo1MToxMVrOFxa0-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM2NDA4OQ==", "bodyText": "nit: use StyleRules", "url": "https://github.com/cdapio/cdap/pull/11879#discussion_r387364089", "createdAt": "2020-03-03T23:51:11Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/Markdown/MarkdownHeading.tsx", "diffHunk": "@@ -19,6 +19,13 @@ import withStyles, { WithStyles } from '@material-ui/core/styles/withStyles';\n import Heading, { IHeadingProps } from 'components/Heading';\n import ThemeWrapper from 'components/ThemeWrapper';\n \n+export const h2Styles = (theme) => ({\n+  fontSize: '1.4rem !important',\n+  fontWeight: 'bold' as 'bold',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "471001a5814289005332011497a3d798b546a41f"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTc2MDcwOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/SelectionBox/index.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzo1NDoyOVrOFxa5EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNjoxOTo0NlrOFxhKzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM2NTEzNg==", "bodyText": "does this need to be in another hook? Can this be clubbed with the on-mount hook that initializes the selection instance?", "url": "https://github.com/cdapio/cdap/pull/11879#discussion_r387365136", "createdAt": "2020-03-03T23:54:29Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/SelectionBox/index.tsx", "diffHunk": "@@ -63,54 +63,48 @@ export default function SelectionBox(props: ISelectionBoxProps) {\n     );\n   }, []);\n \n-  React.useEffect(\n-    () => {\n-      if (!selection) {\n-        return;\n+  React.useEffect(() => {\n+    if (!selection) {\n+      return;\n+    }\n+    if (toggleSelection) {\n+      selection.enable();\n+    } else {\n+      selection.disable();\n+    }\n+  }, [toggleSelection]);\n+\n+  React.useEffect(() => {\n+    if (!selection) {\n+      return;\n+    }\n+\n+    selection.on('start', () => {\n+      if (onSelectionStart) {\n+        onSelectionStart();\n       }\n-      if (toggleSelection) {\n-        selection.enable();\n-      } else {\n-        selection.disable();\n+    });\n+    selection.on('move', ({ selected, changed: { added, removed } }) => {\n+      const selectedNodes = [];\n+      for (const el of selected) {\n+        selectedNodes.push(el.id);\n       }\n-    },\n-    [toggleSelection]\n-  );\n-\n-  React.useEffect(\n-    () => {\n-      if (!selection) {\n-        return;\n+      if (onSelectionMove && (added.length > 0 || removed.length > 0)) {\n+        onSelectionMove({ selected: selectedNodes });\n       }\n+    });\n+    selection.on('stop', () => {\n+      if (onSelectionEnd) {\n+        onSelectionEnd();\n+      }\n+    });\n \n-      selection.on('start', () => {\n-        if (onSelectionStart) {\n-          onSelectionStart();\n-        }\n-      });\n-      selection.on('move', ({ selected, changed: { added, removed } }) => {\n-        const selectedNodes = [];\n-        for (const el of selected) {\n-          selectedNodes.push(el.id);\n-        }\n-        if (onSelectionMove && (added.length > 0 || removed.length > 0)) {\n-          onSelectionMove({ selected: selectedNodes });\n-        }\n-      });\n-      selection.on('stop', () => {\n-        if (onSelectionEnd) {\n-          onSelectionEnd();\n-        }\n-      });\n-\n-      return () => {\n-        if (selection) {\n-          selection.destroy();\n-        }\n-      };\n-    },\n-    [selection]\n-  );\n+    return () => {\n+      if (selection) {\n+        selection.destroy();\n+      }\n+    };\n+  }, [selection]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "471001a5814289005332011497a3d798b546a41f"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2Nzk4MA==", "bodyText": "It can be in the same hook. Just made it into two to make sure it is clear that one is onmount and the other is the regular hook listening on selection.", "url": "https://github.com/cdapio/cdap/pull/11879#discussion_r387467980", "createdAt": "2020-03-04T06:19:46Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/SelectionBox/index.tsx", "diffHunk": "@@ -63,54 +63,48 @@ export default function SelectionBox(props: ISelectionBoxProps) {\n     );\n   }, []);\n \n-  React.useEffect(\n-    () => {\n-      if (!selection) {\n-        return;\n+  React.useEffect(() => {\n+    if (!selection) {\n+      return;\n+    }\n+    if (toggleSelection) {\n+      selection.enable();\n+    } else {\n+      selection.disable();\n+    }\n+  }, [toggleSelection]);\n+\n+  React.useEffect(() => {\n+    if (!selection) {\n+      return;\n+    }\n+\n+    selection.on('start', () => {\n+      if (onSelectionStart) {\n+        onSelectionStart();\n       }\n-      if (toggleSelection) {\n-        selection.enable();\n-      } else {\n-        selection.disable();\n+    });\n+    selection.on('move', ({ selected, changed: { added, removed } }) => {\n+      const selectedNodes = [];\n+      for (const el of selected) {\n+        selectedNodes.push(el.id);\n       }\n-    },\n-    [toggleSelection]\n-  );\n-\n-  React.useEffect(\n-    () => {\n-      if (!selection) {\n-        return;\n+      if (onSelectionMove && (added.length > 0 || removed.length > 0)) {\n+        onSelectionMove({ selected: selectedNodes });\n       }\n+    });\n+    selection.on('stop', () => {\n+      if (onSelectionEnd) {\n+        onSelectionEnd();\n+      }\n+    });\n \n-      selection.on('start', () => {\n-        if (onSelectionStart) {\n-          onSelectionStart();\n-        }\n-      });\n-      selection.on('move', ({ selected, changed: { added, removed } }) => {\n-        const selectedNodes = [];\n-        for (const el of selected) {\n-          selectedNodes.push(el.id);\n-        }\n-        if (onSelectionMove && (added.length > 0 || removed.length > 0)) {\n-          onSelectionMove({ selected: selectedNodes });\n-        }\n-      });\n-      selection.on('stop', () => {\n-        if (onSelectionEnd) {\n-          onSelectionEnd();\n-        }\n-      });\n-\n-      return () => {\n-        if (selection) {\n-          selection.destroy();\n-        }\n-      };\n-    },\n-    [selection]\n-  );\n+    return () => {\n+      if (selection) {\n+        selection.destroy();\n+      }\n+    };\n+  }, [selection]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM2NTEzNg=="}, "originalCommit": {"oid": "471001a5814289005332011497a3d798b546a41f"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTc2Mjg2OnYy", "diffSide": "RIGHT", "path": "cdap-ui/cypress/fixtures/example-transform-1.1.0-SNAPSHOT.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzo1NTozMlrOFxa6XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzo1NTozMlrOFxa6XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM2NTQ2OQ==", "bodyText": "nit: newline", "url": "https://github.com/cdapio/cdap/pull/11879#discussion_r387365469", "createdAt": "2020-03-03T23:55:32Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/cypress/fixtures/example-transform-1.1.0-SNAPSHOT.json", "diffHunk": "@@ -0,0 +1,10 @@\n+{\n+  \"properties\": {\n+    \"widgets.ExampleTransform-transform\": \"{\\n  \\\"outputs\\\": [{\\n    \\\"name\\\": \\\"schema\\\",\\n    \\\"widget-type\\\": \\\"schema\\\",\\n    \\\"label\\\": \\\"schema\\\"\\n  }],\\n  \\\"metadata\\\": {\\\"spec-version\\\": \\\"1.4\\\"},\\n  \\\"configuration-groups\\\": [{\\n    \\\"label\\\": \\\"Transform Configuration\\\",\\n    \\\"properties\\\": [\\n      {\\n        \\\"widget-type\\\": \\\"textbox\\\",\\n        \\\"name\\\": \\\"myOption\\\",\\n        \\\"label\\\": \\\"My Option\\\",\\n        \\\"widget-attributes\\\": {\\n          \\\"default\\\": \\\"an example default value\\\",\\n          \\\"width\\\": \\\"large\\\"\\n        }\\n      },\\n      {\\n        \\\"widget-type\\\": \\\"textbox\\\",\\n        \\\"name\\\": \\\"myOptionalOption\\\",\\n        \\\"label\\\": \\\"My Optional Option\\\",\\n        \\\"widget-attributes\\\": {\\\"width\\\": \\\"large\\\"}\\n      }\\n    ]\\n  }]\\n}\",\n+    \"doc.ExampleTransform-transform\": \"# Example Transform\\n\\nInsert documentation about your plugin in this file.\\nThe UI will display the contents in the reference section of your plugin,\\nassuming this file is named following a convention of ``[plugin-name]-transform.md``.\\nThe plugin name is case sensitive.\\n\\nFor examples of plugin documentation, see the\\n[Hydrator documentation](https://github.com/caskdata/hydrator-plugins/tree/develop/core-plugins/docs).\\n\"\n+  },\n+  \"parents\": [\n+    \"system:cdap-data-pipeline[6.0.0,10.0.0-SNAPSHOT)\",\n+    \"system:cdap-data-streams[6.0.0,10.0.0-SNAPSHOT)\"\n+  ]\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "471001a5814289005332011497a3d798b546a41f"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTc2Njg0OnYy", "diffSide": "LEFT", "path": "cdap-ui/app/directives/log-viewer/log-viewer.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzo1NzoyMVrOFxa8pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNjoyMDozMlrOFxhLrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM2NjA1NA==", "bodyText": "do any of the stylings have to be updated to account for one less column?", "url": "https://github.com/cdapio/cdap/pull/11879#discussion_r387366054", "createdAt": "2020-03-03T23:57:21Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/directives/log-viewer/log-viewer.html", "diffHunk": "@@ -184,10 +179,6 @@\n                 </span>\n             </td>\n \n-            <td class=\"source\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "471001a5814289005332011497a3d798b546a41f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2ODIwNw==", "bodyText": "No. It was not needed. One thing good about logviewer \ud83d\ude11 . Since the columns are collapsible removing one column didn't need any styling changes.", "url": "https://github.com/cdapio/cdap/pull/11879#discussion_r387468207", "createdAt": "2020-03-04T06:20:32Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/directives/log-viewer/log-viewer.html", "diffHunk": "@@ -184,10 +179,6 @@\n                 </span>\n             </td>\n \n-            <td class=\"source\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM2NjA1NA=="}, "originalCommit": {"oid": "471001a5814289005332011497a3d798b546a41f"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2945, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}