{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MzczMDA0", "number": 12250, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMzo0MDowM1rOEDqYQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMjo0NjoxNFrOEEhdmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjc1NTIxOnYy", "diffSide": "RIGHT", "path": "cdap-watchdog/src/main/java/io/cdap/cdap/metrics/process/MessagingMetricsProcessorManagerService.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMzo0MDowM1rOGgz8wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMzozNzoyNVrOGiJtvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA1ODc1Mw==", "bodyText": "When the MetricsWriter.initialize will be called? I would suggest called them in the startUp method of this service (including the default one, the call should move there).", "url": "https://github.com/cdapio/cdap/pull/12250#discussion_r437058753", "createdAt": "2020-06-08T23:40:03Z", "author": {"login": "chtyim"}, "path": "cdap-watchdog/src/main/java/io/cdap/cdap/metrics/process/MessagingMetricsProcessorManagerService.java", "diffHunk": "@@ -74,6 +79,10 @@\n     metricsWriter.initialize(metricsContext);\n     this.metricsWriters.add(metricsWriter);\n \n+    for (Map.Entry<String, MetricsWriter> metricsWriterEntry : metricsWriterProvider.loadMetricsWriters().entrySet()) {\n+      this.metricsWriters.add(metricsWriterEntry.getValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "720d59598f1b84d5aba1b55ef91f25e97ac0828f"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExMjc5Mw==", "bodyText": "done", "url": "https://github.com/cdapio/cdap/pull/12250#discussion_r437112793", "createdAt": "2020-06-09T03:08:23Z", "author": {"login": "rmstar"}, "path": "cdap-watchdog/src/main/java/io/cdap/cdap/metrics/process/MessagingMetricsProcessorManagerService.java", "diffHunk": "@@ -74,6 +79,10 @@\n     metricsWriter.initialize(metricsContext);\n     this.metricsWriters.add(metricsWriter);\n \n+    for (Map.Entry<String, MetricsWriter> metricsWriterEntry : metricsWriterProvider.loadMetricsWriters().entrySet()) {\n+      this.metricsWriters.add(metricsWriterEntry.getValue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA1ODc1Mw=="}, "originalCommit": {"oid": "720d59598f1b84d5aba1b55ef91f25e97ac0828f"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ0MDIwMQ==", "bodyText": "So I only see the MetricsWriter being added, but the initialize is not getting called?", "url": "https://github.com/cdapio/cdap/pull/12250#discussion_r438440201", "createdAt": "2020-06-10T22:22:40Z", "author": {"login": "chtyim"}, "path": "cdap-watchdog/src/main/java/io/cdap/cdap/metrics/process/MessagingMetricsProcessorManagerService.java", "diffHunk": "@@ -74,6 +79,10 @@\n     metricsWriter.initialize(metricsContext);\n     this.metricsWriters.add(metricsWriter);\n \n+    for (Map.Entry<String, MetricsWriter> metricsWriterEntry : metricsWriterProvider.loadMetricsWriters().entrySet()) {\n+      this.metricsWriters.add(metricsWriterEntry.getValue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA1ODc1Mw=="}, "originalCommit": {"oid": "720d59598f1b84d5aba1b55ef91f25e97ac0828f"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ2MzkzMg==", "bodyText": "fixed.", "url": "https://github.com/cdapio/cdap/pull/12250#discussion_r438463932", "createdAt": "2020-06-10T23:37:25Z", "author": {"login": "rmstar"}, "path": "cdap-watchdog/src/main/java/io/cdap/cdap/metrics/process/MessagingMetricsProcessorManagerService.java", "diffHunk": "@@ -74,6 +79,10 @@\n     metricsWriter.initialize(metricsContext);\n     this.metricsWriters.add(metricsWriter);\n \n+    for (Map.Entry<String, MetricsWriter> metricsWriterEntry : metricsWriterProvider.loadMetricsWriters().entrySet()) {\n+      this.metricsWriters.add(metricsWriterEntry.getValue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA1ODc1Mw=="}, "originalCommit": {"oid": "720d59598f1b84d5aba1b55ef91f25e97ac0828f"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTMxODcwOnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/master/environment/k8s/AbstractServiceMain.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMjoyMDo1NFrOGiIOnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMzozODoxMVrOGiJumA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQzOTU4MA==", "bodyText": "We only need this in the MetricsServiceMain instead of all service main, right?", "url": "https://github.com/cdapio/cdap/pull/12250#discussion_r438439580", "createdAt": "2020-06-10T22:20:54Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/master/environment/k8s/AbstractServiceMain.java", "diffHunk": "@@ -163,6 +164,7 @@ public final void init(String[] args) throws Exception {\n     modules.add(new ConfigModule(cConf, hConf, sConf));\n     modules.add(new IOModule());\n     modules.add(new MetricsClientRuntimeModule().getDistributedModules());\n+    modules.add(new MetricsWriterModule());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17753a74c97ff5d502670b96b5d4182eb59badbf"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ2NDE1Mg==", "bodyText": "removed from here and added it in MetricsServiceMain", "url": "https://github.com/cdapio/cdap/pull/12250#discussion_r438464152", "createdAt": "2020-06-10T23:38:11Z", "author": {"login": "rmstar"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/master/environment/k8s/AbstractServiceMain.java", "diffHunk": "@@ -163,6 +164,7 @@ public final void init(String[] args) throws Exception {\n     modules.add(new ConfigModule(cConf, hConf, sConf));\n     modules.add(new IOModule());\n     modules.add(new MetricsClientRuntimeModule().getDistributedModules());\n+    modules.add(new MetricsWriterModule());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQzOTU4MA=="}, "originalCommit": {"oid": "17753a74c97ff5d502670b96b5d4182eb59badbf"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTc4MDA5OnYy", "diffSide": "RIGHT", "path": "cdap-watchdog/src/main/java/io/cdap/cdap/metrics/process/MessagingMetricsProcessorManagerService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMjo0NjoxNFrOGiMrAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNToyNzoxOFrOGiO-jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxMjM4NA==", "bodyText": "The MetricsWriter also implements Closeable. So you have to close them on the shutDown method.", "url": "https://github.com/cdapio/cdap/pull/12250#discussion_r438512384", "createdAt": "2020-06-11T02:46:14Z", "author": {"login": "chtyim"}, "path": "cdap-watchdog/src/main/java/io/cdap/cdap/metrics/process/MessagingMetricsProcessorManagerService.java", "diffHunk": "@@ -64,33 +78,53 @@\n                                           SchemaGenerator schemaGenerator,\n                                           DatumReaderFactory readerFactory,\n                                           MetricStore metricStore,\n+                                          MetricsWriterProvider metricsWriterProvider,\n                                           Set<Integer> topicNumbers,\n                                           MetricsContext metricsContext,\n                                           long metricsProcessIntervalMillis,\n                                           int instanceId) {\n     this.metricsWriters = new ArrayList<>();\n     this.metricsProcessorServices = new ArrayList<>();\n+    this.cConf = cConf;\n+    this.metricDatasetFactory = metricDatasetFactory;\n+    this.messagingService = messagingService;\n+    this.schemaGenerator = schemaGenerator;\n+    this.readerFactory = readerFactory;\n+    this.metricStore = metricStore;\n+    this.metricsWriterProvider = metricsWriterProvider;\n+    this.topicNumbers = topicNumbers;\n+    this.metricsContext = metricsContext;\n+    this.metricsProcessIntervalMillis = metricsProcessIntervalMillis;\n+    this.instanceId = instanceId;\n+  }\n+\n+  @Override\n+  protected void startUp() throws Exception {\n     MetricStoreMetricsWriter metricsWriter = new MetricStoreMetricsWriter(metricStore);\n     metricsWriter.initialize(metricsContext);\n     this.metricsWriters.add(metricsWriter);\n \n+    for (Map.Entry<String, MetricsWriter> metricsWriterEntry : metricsWriterProvider.loadMetricsWriters().entrySet()) {\n+      MetricsWriter writer = metricsWriterEntry.getValue();\n+      this.metricsWriters.add(writer);\n+      writer.initialize(metricsContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "147729438b54b8a5c3b3243fe5c7ed3f8596a579"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1MDE1Ng==", "bodyText": "done", "url": "https://github.com/cdapio/cdap/pull/12250#discussion_r438550156", "createdAt": "2020-06-11T05:27:18Z", "author": {"login": "rmstar"}, "path": "cdap-watchdog/src/main/java/io/cdap/cdap/metrics/process/MessagingMetricsProcessorManagerService.java", "diffHunk": "@@ -64,33 +78,53 @@\n                                           SchemaGenerator schemaGenerator,\n                                           DatumReaderFactory readerFactory,\n                                           MetricStore metricStore,\n+                                          MetricsWriterProvider metricsWriterProvider,\n                                           Set<Integer> topicNumbers,\n                                           MetricsContext metricsContext,\n                                           long metricsProcessIntervalMillis,\n                                           int instanceId) {\n     this.metricsWriters = new ArrayList<>();\n     this.metricsProcessorServices = new ArrayList<>();\n+    this.cConf = cConf;\n+    this.metricDatasetFactory = metricDatasetFactory;\n+    this.messagingService = messagingService;\n+    this.schemaGenerator = schemaGenerator;\n+    this.readerFactory = readerFactory;\n+    this.metricStore = metricStore;\n+    this.metricsWriterProvider = metricsWriterProvider;\n+    this.topicNumbers = topicNumbers;\n+    this.metricsContext = metricsContext;\n+    this.metricsProcessIntervalMillis = metricsProcessIntervalMillis;\n+    this.instanceId = instanceId;\n+  }\n+\n+  @Override\n+  protected void startUp() throws Exception {\n     MetricStoreMetricsWriter metricsWriter = new MetricStoreMetricsWriter(metricStore);\n     metricsWriter.initialize(metricsContext);\n     this.metricsWriters.add(metricsWriter);\n \n+    for (Map.Entry<String, MetricsWriter> metricsWriterEntry : metricsWriterProvider.loadMetricsWriters().entrySet()) {\n+      MetricsWriter writer = metricsWriterEntry.getValue();\n+      this.metricsWriters.add(writer);\n+      writer.initialize(metricsContext);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxMjM4NA=="}, "originalCommit": {"oid": "147729438b54b8a5c3b3243fe5c7ed3f8596a579"}, "originalPosition": 84}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3354, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}