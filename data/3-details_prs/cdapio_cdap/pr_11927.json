{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0ODAwMjQz", "number": 11927, "title": "Adding RuntimeJobManager SPI to launch and manage runtime jobs.", "bodyText": "", "createdAt": "2020-03-06T12:39:29Z", "url": "https://github.com/cdapio/cdap/pull/11927", "merged": true, "mergeCommit": {"oid": "dd6a610c4b93fa5e0023c83c1e1de55db62354c0"}, "closed": true, "closedAt": "2020-03-07T02:37:35Z", "author": {"login": "CuriousVini"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcLFvEPgFqTM3MDQyMzMyMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcLJjEdABqjMxMDcyNzQwMzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNDIzMzIz", "url": "https://github.com/cdapio/cdap/pull/11927#pullrequestreview-370423323", "createdAt": "2020-03-06T15:48:11Z", "commit": {"oid": "21176772f535324f32f77da876f6937d0dc13b7a"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNTo0ODoxMlrOFy9ejA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxOTo1OTo1N1rOFzFu_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk4MDM2NA==", "bodyText": "The second sentence is unnecessary.", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r388980364", "createdAt": "2020-03-06T15:48:12Z", "author": {"login": "chtyim"}, "path": "cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/provisioner/Provisioner.java", "diffHunk": "@@ -141,4 +144,14 @@ default void initializeCluster(ProvisionerContext context, Cluster cluster) thro\n    */\n   Capabilities getCapabilities();\n \n+  /**\n+   * Returns {@link RuntimeJobManager} to launch and manage runtime job. This method should return a concrete instance\n+   * of runtime job manager.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21176772f535324f32f77da876f6937d0dc13b7a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExMTM5NA==", "bodyText": "Also should call out what's the default behavior.", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389111394", "createdAt": "2020-03-06T19:50:31Z", "author": {"login": "chtyim"}, "path": "cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/provisioner/Provisioner.java", "diffHunk": "@@ -141,4 +144,14 @@ default void initializeCluster(ProvisionerContext context, Cluster cluster) thro\n    */\n   Capabilities getCapabilities();\n \n+  /**\n+   * Returns {@link RuntimeJobManager} to launch and manage runtime job. This method should return a concrete instance\n+   * of runtime job manager.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk4MDM2NA=="}, "originalCommit": {"oid": "21176772f535324f32f77da876f6937d0dc13b7a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExMjExNA==", "bodyText": "The TwillRunnerService is not part of this interface API. Should better just say \"Represents a job that will be executed on a given runtime environment\".", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389112114", "createdAt": "2020-03-06T19:51:57Z", "author": {"login": "chtyim"}, "path": "cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJob.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.runtime.spi.runtimejob;\n+\n+import org.apache.twill.api.TwillRunnerService;\n+\n+/**\n+ * Represents runtime job that will be submit job to {@link TwillRunnerService}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21176772f535324f32f77da876f6937d0dc13b7a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExMjQ3NQ==", "bodyText": "Can it be TwillRunner instead? The service expose the start and stop methods, meaning the caller of this method will be responsible for the lifecycle of the service. However, I believe in this case, it is the implementation who manage the lifecycle?", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389112475", "createdAt": "2020-03-06T19:52:48Z", "author": {"login": "chtyim"}, "path": "cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobEnvironment.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.runtime.spi.runtimejob;\n+\n+import org.apache.twill.api.TwillRunner;\n+import org.apache.twill.api.TwillRunnerService;\n+import org.apache.twill.discovery.DiscoveryService;\n+import org.apache.twill.discovery.DiscoveryServiceClient;\n+\n+import java.util.Map;\n+\n+/**\n+ * Represents runtime job environment that provides information that is needed by the {@link RuntimeJob} to run the job.\n+ */\n+public interface RuntimeJobEnvironment {\n+  /**\n+   * Returns a {@link DiscoveryService} for service announcement purpose.\n+   */\n+  DiscoveryService getDiscoveryService();\n+\n+  /**\n+   * Returns a {@link DiscoveryServiceClient} for service discovery purpose.\n+   */\n+  DiscoveryServiceClient getDiscoveryServiceClient();\n+\n+  /**\n+   * Returns a {@link TwillRunnerService} for running {@link TwillRunner}.\n+   */\n+  TwillRunnerService getTwillRunnerService();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21176772f535324f32f77da876f6937d0dc13b7a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExMzg2Mw==", "bodyText": "This is unclear, what are these properties?", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389113863", "createdAt": "2020-03-06T19:55:56Z", "author": {"login": "chtyim"}, "path": "cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobEnvironment.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.runtime.spi.runtimejob;\n+\n+import org.apache.twill.api.TwillRunner;\n+import org.apache.twill.api.TwillRunnerService;\n+import org.apache.twill.discovery.DiscoveryService;\n+import org.apache.twill.discovery.DiscoveryServiceClient;\n+\n+import java.util.Map;\n+\n+/**\n+ * Represents runtime job environment that provides information that is needed by the {@link RuntimeJob} to run the job.\n+ */\n+public interface RuntimeJobEnvironment {\n+  /**\n+   * Returns a {@link DiscoveryService} for service announcement purpose.\n+   */\n+  DiscoveryService getDiscoveryService();\n+\n+  /**\n+   * Returns a {@link DiscoveryServiceClient} for service discovery purpose.\n+   */\n+  DiscoveryServiceClient getDiscoveryServiceClient();\n+\n+  /**\n+   * Returns a {@link TwillRunnerService} for running {@link TwillRunner}.\n+   */\n+  TwillRunnerService getTwillRunnerService();\n+\n+  /**\n+   * Returns properties to be available to {@link RuntimeJob}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21176772f535324f32f77da876f6937d0dc13b7a"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExNDM0MQ==", "bodyText": "Call it getLocalizeFiles.", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389114341", "createdAt": "2020-03-06T19:57:03Z", "author": {"login": "chtyim"}, "path": "cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobInfo.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.runtime.spi.runtimejob;\n+\n+import org.apache.twill.api.LocalFile;\n+import org.apache.twill.api.TwillRunnerService;\n+\n+import java.util.Collection;\n+\n+/**\n+ * Runtime job information. The instance of this interface will be provided to\n+ * {@link RuntimeJobManager#launch(RuntimeJobInfo)} with files to be localized and runtime job class implementation.\n+ */\n+public interface RuntimeJobInfo {\n+  /**\n+   * Returns a collection of files that are used to launch the job.\n+   */\n+  Collection<? extends LocalFile> getFilesToLocalize();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21176772f535324f32f77da876f6937d0dc13b7a"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExNDQ0Mg==", "bodyText": "Unused import?", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389114442", "createdAt": "2020-03-06T19:57:18Z", "author": {"login": "chtyim"}, "path": "cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobInfo.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.runtime.spi.runtimejob;\n+\n+import org.apache.twill.api.LocalFile;\n+import org.apache.twill.api.TwillRunnerService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21176772f535324f32f77da876f6937d0dc13b7a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExNDkwNw==", "bodyText": "Why stop and kill return Future while this one does not?", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389114907", "createdAt": "2020-03-06T19:58:18Z", "author": {"login": "chtyim"}, "path": "cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobManager.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.runtime.spi.runtimejob;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+\n+/**\n+ * Runtime job manager to prepare and launch the job.\n+ */\n+public interface RuntimeJobManager {\n+  /**\n+   * This method uses runtime job information to launch the job.\n+   *\n+   * @param runtimeJobInfo runtime job information\n+   * @return unique runtime job id\n+   */\n+  RuntimeJobId launch(RuntimeJobInfo runtimeJobInfo) throws Exception;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21176772f535324f32f77da876f6937d0dc13b7a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExNTY0NA==", "bodyText": "Use the CompletionStage instead. Also, when this method throw Exception and when the returned future will fail? Why this method has to be async?", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389115644", "createdAt": "2020-03-06T19:59:57Z", "author": {"login": "chtyim"}, "path": "cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobManager.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.runtime.spi.runtimejob;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+\n+/**\n+ * Runtime job manager to prepare and launch the job.\n+ */\n+public interface RuntimeJobManager {\n+  /**\n+   * This method uses runtime job information to launch the job.\n+   *\n+   * @param runtimeJobInfo runtime job information\n+   * @return unique runtime job id\n+   */\n+  RuntimeJobId launch(RuntimeJobInfo runtimeJobInfo) throws Exception;\n+\n+  /**\n+   * Gets job details. If the job does not exist, it should return empty job details.\n+   *\n+   * @param runtimeJobId runtime job id\n+   * @return runtime job details\n+   * @throws Exception thrown if any exception while getting job details\n+   */\n+  Optional<RuntimeJobDetail> getDetail(RuntimeJobId runtimeJobId) throws Exception;\n+\n+  /**\n+   * Provides all the jobs that are in running state. If there are no running jobs, it should return empty list.\n+   *\n+   * @return a list job details\n+   * @throws Exception thrown if any exception while getting list of running jobs\n+   */\n+  List<RuntimeJobDetail> list() throws Exception;\n+\n+  /**\n+   * Gracefully stops a running job. If the job is already in terminal status, then this method should be a no-op.\n+   *\n+   * @param runtimeJobId job to be stopped\n+   * @throws Exception thrown if any exception while stopping the job\n+   */\n+  CompletableFuture<RuntimeJobId> stop(RuntimeJobId runtimeJobId) throws Exception;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21176772f535324f32f77da876f6937d0dc13b7a"}, "originalPosition": 58}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "56733dea77d6c5ac47e31f362865ab7e7b17efe0", "author": {"user": {"login": "CuriousVini", "name": "Vinisha Shah"}}, "url": "https://github.com/cdapio/cdap/commit/56733dea77d6c5ac47e31f362865ab7e7b17efe0", "committedDate": "2020-03-06T22:28:50Z", "message": "Modify javadocs"}, "afterCommit": {"oid": "9496423f6c5f063f112b6d0310653d1a5e5442ec", "author": {"user": {"login": "CuriousVini", "name": "Vinisha Shah"}}, "url": "https://github.com/cdapio/cdap/commit/9496423f6c5f063f112b6d0310653d1a5e5442ec", "committedDate": "2020-03-06T22:30:41Z", "message": "Modify javadocs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9496423f6c5f063f112b6d0310653d1a5e5442ec", "author": {"user": {"login": "CuriousVini", "name": "Vinisha Shah"}}, "url": "https://github.com/cdapio/cdap/commit/9496423f6c5f063f112b6d0310653d1a5e5442ec", "committedDate": "2020-03-06T22:30:41Z", "message": "Modify javadocs"}, "afterCommit": {"oid": "65bcad8a2b601bba0f8707acfa8d00e3422dc804", "author": {"user": {"login": "CuriousVini", "name": "Vinisha Shah"}}, "url": "https://github.com/cdapio/cdap/commit/65bcad8a2b601bba0f8707acfa8d00e3422dc804", "committedDate": "2020-03-06T23:26:22Z", "message": "Modify javadocs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65bcad8a2b601bba0f8707acfa8d00e3422dc804", "author": {"user": {"login": "CuriousVini", "name": "Vinisha Shah"}}, "url": "https://github.com/cdapio/cdap/commit/65bcad8a2b601bba0f8707acfa8d00e3422dc804", "committedDate": "2020-03-06T23:26:22Z", "message": "Modify javadocs"}, "afterCommit": {"oid": "891699202bf24438bc516316b0b3a32e948c8b81", "author": {"user": {"login": "CuriousVini", "name": "Vinisha Shah"}}, "url": "https://github.com/cdapio/cdap/commit/891699202bf24438bc516316b0b3a32e948c8b81", "committedDate": "2020-03-06T23:31:15Z", "message": "Modify javadocs and minor api changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjg3Mjcw", "url": "https://github.com/cdapio/cdap/pull/11927#pullrequestreview-370687270", "createdAt": "2020-03-06T23:34:05Z", "commit": {"oid": "891699202bf24438bc516316b0b3a32e948c8b81"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMzozNDowNVrOFzKerw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMzozNDowNVrOFzKerw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE5MzM5MQ==", "bodyText": "What if the job doesn't exist? What will be the contract?", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389193391", "createdAt": "2020-03-06T23:34:05Z", "author": {"login": "chtyim"}, "path": "cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobManager.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.runtime.spi.runtimejob;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+/**\n+ * Runtime job manager to prepare and launch the job.\n+ */\n+public interface RuntimeJobManager {\n+  /**\n+   * This method uses runtime job information to launch the job.\n+   *\n+   * @param runtimeJobInfo runtime job information\n+   * @return unique runtime job id\n+   */\n+  RuntimeJobId launch(RuntimeJobInfo runtimeJobInfo) throws Exception;\n+\n+  /**\n+   * Gets job details. If the job does not exist, it should return empty job details.\n+   *\n+   * @param runtimeJobId runtime job id\n+   * @return runtime job details\n+   * @throws Exception thrown if any exception while getting job details\n+   */\n+  Optional<RuntimeJobDetail> getDetail(RuntimeJobId runtimeJobId) throws Exception;\n+\n+  /**\n+   * Provides all the jobs that are in running state. If there are no running jobs, it should return empty list.\n+   *\n+   * @return a list job details\n+   * @throws Exception thrown if any exception while getting list of running jobs\n+   */\n+  List<RuntimeJobDetail> list() throws Exception;\n+\n+  /**\n+   * Gracefully stops a running job. If the job is already in terminal status, then this method should be a no-op.\n+   *\n+   * @param runtimeJobId job to be stopped\n+   * @throws Exception thrown if any exception while stopping the job\n+   */\n+  void stop(RuntimeJobId runtimeJobId) throws Exception;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "891699202bf24438bc516316b0b3a32e948c8b81"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjk4OTY2", "url": "https://github.com/cdapio/cdap/pull/11927#pullrequestreview-370698966", "createdAt": "2020-03-07T00:23:47Z", "commit": {"oid": "1798b52c3c03f6b0f5eb2846b23f262e55e53d87"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f072da1fb13137619474424df9439402036ce1ec", "author": {"user": {"login": "CuriousVini", "name": "Vinisha Shah"}}, "url": "https://github.com/cdapio/cdap/commit/f072da1fb13137619474424df9439402036ce1ec", "committedDate": "2020-03-07T00:26:29Z", "message": "[CDAP-16218] Adding RuntimeJobManager interface to launch Runtime Job"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1798b52c3c03f6b0f5eb2846b23f262e55e53d87", "author": {"user": {"login": "CuriousVini", "name": "Vinisha Shah"}}, "url": "https://github.com/cdapio/cdap/commit/1798b52c3c03f6b0f5eb2846b23f262e55e53d87", "committedDate": "2020-03-07T00:09:01Z", "message": "add contract details to javadoc"}, "afterCommit": {"oid": "f072da1fb13137619474424df9439402036ce1ec", "author": {"user": {"login": "CuriousVini", "name": "Vinisha Shah"}}, "url": "https://github.com/cdapio/cdap/commit/f072da1fb13137619474424df9439402036ce1ec", "committedDate": "2020-03-07T00:26:29Z", "message": "[CDAP-16218] Adding RuntimeJobManager interface to launch Runtime Job"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1337, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}