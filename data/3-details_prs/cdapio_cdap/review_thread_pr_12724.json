{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0MDk2ODM2", "number": 12724, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxOToxMjozOFrOEctlug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMToxOTowOFrOEcwIkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NTQyNTIyOnYy", "diffSide": "RIGHT", "path": "cdap-standalone/src/main/java/io/cdap/cdap/StandaloneMain.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxOToxMjozOFrOHHaIZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMDo1NjozNVrOHHsGEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUzMDIxNQ==", "bodyText": "Can we put a comment here to explain what we expect for this cleanup in constructor.", "url": "https://github.com/cdapio/cdap/pull/12724#discussion_r477530215", "createdAt": "2020-08-26T19:12:38Z", "author": {"login": "shifuxu0301"}, "path": "cdap-standalone/src/main/java/io/cdap/cdap/StandaloneMain.java", "diffHunk": "@@ -162,6 +162,8 @@ private StandaloneMain(List<Module> modules, CConfiguration cConf) {\n     Thread.setDefaultUncaughtExceptionHandler(new UncaughtExceptionHandler());\n     this.cConf = cConf;\n \n+    cleanupTempDir();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0c0fb152433c41a02c5ec30cc628a0fe0b23d5d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUzNDk0OQ==", "bodyText": "Fixed", "url": "https://github.com/cdapio/cdap/pull/12724#discussion_r477534949", "createdAt": "2020-08-26T19:21:51Z", "author": {"login": "dli357"}, "path": "cdap-standalone/src/main/java/io/cdap/cdap/StandaloneMain.java", "diffHunk": "@@ -162,6 +162,8 @@ private StandaloneMain(List<Module> modules, CConfiguration cConf) {\n     Thread.setDefaultUncaughtExceptionHandler(new UncaughtExceptionHandler());\n     this.cConf = cConf;\n \n+    cleanupTempDir();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUzMDIxNQ=="}, "originalCommit": {"oid": "b0c0fb152433c41a02c5ec30cc628a0fe0b23d5d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU0NzUzMA==", "bodyText": "normally it's not a good idea to perform work in the constructor. I'm also confused how this fixes the problem, is the classloader mentioned in the bug created before Standalone is started?", "url": "https://github.com/cdapio/cdap/pull/12724#discussion_r477547530", "createdAt": "2020-08-26T19:45:34Z", "author": {"login": "albertshau"}, "path": "cdap-standalone/src/main/java/io/cdap/cdap/StandaloneMain.java", "diffHunk": "@@ -162,6 +162,8 @@ private StandaloneMain(List<Module> modules, CConfiguration cConf) {\n     Thread.setDefaultUncaughtExceptionHandler(new UncaughtExceptionHandler());\n     this.cConf = cConf;\n \n+    cleanupTempDir();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUzMDIxNQ=="}, "originalCommit": {"oid": "b0c0fb152433c41a02c5ec30cc628a0fe0b23d5d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzgyNDUzMQ==", "bodyText": "I agree with moving the logic out of the constructor. Currently, StandaloneMain's constructor creates several other classes which eventually instantiates an instance of Authorizer, causing the AuthorizerInstantiator to unpack the provided JAR file into the tmp directory. Since cleanupTempDir is currently called in startup, it is called after the constructor finishes, deleting the loaded classpath.", "url": "https://github.com/cdapio/cdap/pull/12724#discussion_r477824531", "createdAt": "2020-08-27T00:56:35Z", "author": {"login": "dli357"}, "path": "cdap-standalone/src/main/java/io/cdap/cdap/StandaloneMain.java", "diffHunk": "@@ -162,6 +162,8 @@ private StandaloneMain(List<Module> modules, CConfiguration cConf) {\n     Thread.setDefaultUncaughtExceptionHandler(new UncaughtExceptionHandler());\n     this.cConf = cConf;\n \n+    cleanupTempDir();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUzMDIxNQ=="}, "originalCommit": {"oid": "b0c0fb152433c41a02c5ec30cc628a0fe0b23d5d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NTg0MjExOnYy", "diffSide": "RIGHT", "path": "cdap-standalone/src/main/java/io/cdap/cdap/StandaloneMain.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMToxOTowOFrOHHeHpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMjoxNTo0OVrOHHfmBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU5NTU1OQ==", "bodyText": "Construct the path at callsite and pass that in, so it is clear what state the function needs instead of passing the whole configuration structure that this function doesn't care about the other n-2 fields", "url": "https://github.com/cdapio/cdap/pull/12724#discussion_r477595559", "createdAt": "2020-08-26T21:19:08Z", "author": {"login": "wyzhang"}, "path": "cdap-standalone/src/main/java/io/cdap/cdap/StandaloneMain.java", "diffHunk": "@@ -392,7 +390,7 @@ public void shutDown() {\n     }\n   }\n \n-  private void cleanupTempDir() {\n+  private static void cleanupTempDir(CConfiguration cConf) {\n     File tmpDir = new File(cConf.get(Constants.CFG_LOCAL_DATA_DIR),\n                            cConf.get(Constants.AppFabric.TEMP_DIR)).getAbsoluteFile();\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee371d22b6bda5af01f78bb92bd96e715ff9023c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYxOTcxOQ==", "bodyText": "Fixed", "url": "https://github.com/cdapio/cdap/pull/12724#discussion_r477619719", "createdAt": "2020-08-26T22:15:49Z", "author": {"login": "dli357"}, "path": "cdap-standalone/src/main/java/io/cdap/cdap/StandaloneMain.java", "diffHunk": "@@ -392,7 +390,7 @@ public void shutDown() {\n     }\n   }\n \n-  private void cleanupTempDir() {\n+  private static void cleanupTempDir(CConfiguration cConf) {\n     File tmpDir = new File(cConf.get(Constants.CFG_LOCAL_DATA_DIR),\n                            cConf.get(Constants.AppFabric.TEMP_DIR)).getAbsoluteFile();\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU5NTU1OQ=="}, "originalCommit": {"oid": "ee371d22b6bda5af01f78bb92bd96e715ff9023c"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3133, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}