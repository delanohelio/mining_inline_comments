{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NjY5ODM1", "number": 12218, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNToyNTozMFrOECAThA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNToyNTozMFrOECAThA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTM3NjA0OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Outputs/index.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNToyNTozMFrOGeMfmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNToyNTozMFrOGeMfmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMxNTE2Mw==", "bodyText": "It is a little misleading that we call the page as \"Outputs\" but allow the user to specify only one plugin property. Can we change the title to Output and prepopulate a plugin property that the user has already configured? They can configure a plugin property to have schema editor", "url": "https://github.com/cdapio/cdap/pull/12218#discussion_r434315163", "createdAt": "2020-06-03T05:25:30Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Outputs/index.tsx", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { WithStyles } from '@material-ui/core/styles/withStyles';\n+import { styles } from 'components/AbstractWidget/RadioGroupWidget';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import JsonMenu from 'components/PluginJSONCreator/Create/Content/JsonMenu';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import StepButtons from 'components/PluginJSONCreator/Create/Content/StepButtons';\n+import {\n+  CreateContext,\n+  createContextConnect,\n+  ICreateContext,\n+} from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+\n+const OutputsView: React.FC<ICreateContext & WithStyles<typeof styles>> = ({\n+  classes,\n+  pluginName,\n+  pluginType,\n+  displayName,\n+  emitAlerts,\n+  emitErrors,\n+  configurationGroups,\n+  groupToInfo,\n+  groupToWidgets,\n+  widgetToInfo,\n+  widgetToAttributes,\n+  jsonView,\n+  setJsonView,\n+  outputName,\n+  setOutputName,\n+}) => {\n+  const [localOutputName, setLocalOutputName] = React.useState(outputName);\n+\n+  function saveAllResults() {\n+    setOutputName(localOutputName);\n+  }\n+\n+  return (\n+    <div>\n+      <JsonMenu\n+        pluginName={pluginName}\n+        pluginType={pluginType}\n+        displayName={displayName}\n+        emitAlerts={emitAlerts}\n+        emitErrors={emitErrors}\n+        configurationGroups={configurationGroups}\n+        groupToInfo={groupToInfo}\n+        groupToWidgets={groupToWidgets}\n+        widgetToInfo={widgetToInfo}\n+        widgetToAttributes={widgetToAttributes}\n+        jsonView={jsonView}\n+        setJsonView={setJsonView}\n+        outputName={localOutputName}\n+      />\n+      <Heading type={HeadingTypes.h3} label=\"Outputs\" />\n+      <br />\n+      <PluginInput", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ceedd81608d09d7196a9280f44f2c3908794b721"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2682, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}