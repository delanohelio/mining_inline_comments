{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyODM0NTQx", "number": 12720, "title": "[CDAP-17128] Add metrics for success/failure of Dataproc API calls", "bodyText": "JIRA: https://issues.cask.co/browse/CDAP-17128", "createdAt": "2020-08-24T23:17:16Z", "url": "https://github.com/cdapio/cdap/pull/12720", "merged": true, "mergeCommit": {"oid": "3848d31162a345881e5cc66a38e01f0b973fcc76"}, "closed": true, "closedAt": "2020-09-01T06:35:48Z", "author": {"login": "rmstar"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCLI76ABqjM2ODc1NzMwMjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEc-qTgBqjM3MTIzNDQwMTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "79aec07ce42e5b415b73c1dc5d55893a1b95fbad", "author": {"user": {"login": "rmstar", "name": "Prashant Jaikumar"}}, "url": "https://github.com/cdapio/cdap/commit/79aec07ce42e5b415b73c1dc5d55893a1b95fbad", "committedDate": "2020-08-24T23:12:48Z", "message": "Add metrics for success/failure of Dataproc API calls"}, "afterCommit": {"oid": "419d0845ebc601968ef11688278e6457e9169d51", "author": {"user": {"login": "rmstar", "name": "Prashant Jaikumar"}}, "url": "https://github.com/cdapio/cdap/commit/419d0845ebc601968ef11688278e6457e9169d51", "committedDate": "2020-08-24T23:23:21Z", "message": "[CDAP-17128] Add metrics for success/failure of Dataproc API calls"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "31cbed273428b1802e5dac41ccb300154ea2dbdb", "author": {"user": {"login": "rmstar", "name": "Prashant Jaikumar"}}, "url": "https://github.com/cdapio/cdap/commit/31cbed273428b1802e5dac41ccb300154ea2dbdb", "committedDate": "2020-08-25T23:50:30Z", "message": "fixed metric name"}, "afterCommit": {"oid": "0370155f90edc0ca828bd6d46731cdd4eaf6e40f", "author": {"user": {"login": "rmstar", "name": "Prashant Jaikumar"}}, "url": "https://github.com/cdapio/cdap/commit/0370155f90edc0ca828bd6d46731cdd4eaf6e40f", "committedDate": "2020-08-26T04:05:59Z", "message": "[CDAP-17128] Add metrics for success/failure of Dataproc API calls"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MzA1ODAx", "url": "https://github.com/cdapio/cdap/pull/12720#pullrequestreview-475305801", "createdAt": "2020-08-26T09:16:53Z", "commit": {"oid": "0370155f90edc0ca828bd6d46731cdd4eaf6e40f"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOToxNjo1M1rOHHDZ-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOToyMDoyNFrOHHDkhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE1Nzg4Mg==", "bodyText": "No. Don't add common dependency. It should only depends on the cdap-runtime-spi", "url": "https://github.com/cdapio/cdap/pull/12720#discussion_r477157882", "createdAt": "2020-08-26T09:16:53Z", "author": {"login": "chtyim"}, "path": "cdap-runtime-ext-dataproc/pom.xml", "diffHunk": "@@ -37,6 +37,11 @@\n       <version>${project.version}</version>\n       <scope>provided</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>io.cdap.cdap</groupId>\n+      <artifactId>cdap-common</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0370155f90edc0ca828bd6d46731cdd4eaf6e40f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE1OTA1Nw==", "bodyText": "Shouldn't require constructing the full tag from the provisioner. Otherwise all provisioner implementation has to do this.", "url": "https://github.com/cdapio/cdap/pull/12720#discussion_r477159057", "createdAt": "2020-08-26T09:17:47Z", "author": {"login": "chtyim"}, "path": "cdap-runtime-ext-dataproc/src/main/java/io/cdap/cdap/runtime/spi/common/DataprocUtils.java", "diffHunk": "@@ -229,6 +234,20 @@ public static String getSystemProjectId() {\n     }\n   }\n \n+  /**\n+   * Emit a dataproc metric.\n+   **/\n+  public static void emitMetric(MetricsContext metricsContext, ProgramRunInfo programRunInfo,\n+                                StatusCode.Code statusCode, String  metricName) {\n+    Map<String, String> tags = ImmutableMap.of(Constants.Metrics.Tag.NAMESPACE, programRunInfo.getNamespace(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0370155f90edc0ca828bd6d46731cdd4eaf6e40f"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE2MDU4Mg==", "bodyText": "Shouldn't expose the raw MetricsContext. Whatever emitted from the provisioner should already have the current metrics context setup. Also, since MetricsContext is in cdap-watchdog-api, which is not a dependency of cdap-runtime-spi, you should either have the emit metric method defined in the ProvisionerContext, or have a different metrics context defined in the cdap-runtime-spi module to better suit the provisioner SPI need.", "url": "https://github.com/cdapio/cdap/pull/12720#discussion_r477160582", "createdAt": "2020-08-26T09:20:24Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/provision/DefaultProvisionerContext.java", "diffHunk": "@@ -107,4 +110,9 @@ public LocationFactory getLocationFactory() {\n   public RuntimeMonitorType getRuntimeMonitorType() {\n     return runtimeMonitorType;\n   }\n+\n+  @Override\n+  public MetricsContext getMetricsContext() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0370155f90edc0ca828bd6d46731cdd4eaf6e40f"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2MDEzNTAy", "url": "https://github.com/cdapio/cdap/pull/12720#pullrequestreview-476013502", "createdAt": "2020-08-26T22:49:26Z", "commit": {"oid": "712b05c30afe2ef2e6280aa55d4a0324aed01555"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMjo0OToyNlrOHHgkDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMzowMzozMFrOHHhNKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYzNTU5Ng==", "bodyText": "Remove extra new line", "url": "https://github.com/cdapio/cdap/pull/12720#discussion_r477635596", "createdAt": "2020-08-26T22:49:26Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/provision/DefaultProvisionerContext.java", "diffHunk": "@@ -107,4 +111,10 @@ public LocationFactory getLocationFactory() {\n   public RuntimeMonitorType getRuntimeMonitorType() {\n     return runtimeMonitorType;\n   }\n+\n+  @Override\n+  public Metrics getMetrics(Map<String, String> context) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "712b05c30afe2ef2e6280aa55d4a0324aed01555"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYzNjM1MA==", "bodyText": "Shouldn't use the Constants class from cdap-common.", "url": "https://github.com/cdapio/cdap/pull/12720#discussion_r477636350", "createdAt": "2020-08-26T22:50:23Z", "author": {"login": "chtyim"}, "path": "cdap-runtime-ext-dataproc/src/main/java/io/cdap/cdap/runtime/spi/common/DataprocUtils.java", "diffHunk": "@@ -229,6 +235,24 @@ public static String getSystemProjectId() {\n     }\n   }\n \n+  /**\n+   * Emit a dataproc metric.\n+   **/\n+  public static void emitMetric(ProvisionerContext context, String provisioner, ProgramRunInfo programRunInfo,\n+                                String region, StatusCode.Code statusCode, String  metricName) {\n+    Map<String, String> tags = ImmutableMap.<String, String>builder()\n+      .put(Constants.Metrics.Tag.NAMESPACE, programRunInfo.getNamespace())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "712b05c30afe2ef2e6280aa55d4a0324aed01555"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYzNjc3Mg==", "bodyText": "Also, only region and statusCode should be coming from the provisioner. The rest of the context should be populated by the system already", "url": "https://github.com/cdapio/cdap/pull/12720#discussion_r477636772", "createdAt": "2020-08-26T22:50:54Z", "author": {"login": "chtyim"}, "path": "cdap-runtime-ext-dataproc/src/main/java/io/cdap/cdap/runtime/spi/common/DataprocUtils.java", "diffHunk": "@@ -229,6 +235,24 @@ public static String getSystemProjectId() {\n     }\n   }\n \n+  /**\n+   * Emit a dataproc metric.\n+   **/\n+  public static void emitMetric(ProvisionerContext context, String provisioner, ProgramRunInfo programRunInfo,\n+                                String region, StatusCode.Code statusCode, String  metricName) {\n+    Map<String, String> tags = ImmutableMap.<String, String>builder()\n+      .put(Constants.Metrics.Tag.NAMESPACE, programRunInfo.getNamespace())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYzNjM1MA=="}, "originalCommit": {"oid": "712b05c30afe2ef2e6280aa55d4a0324aed01555"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzY0NjEyMA==", "bodyText": "Better not to pull in this dependency, as it depends on cdap-api. The problem with dependency on cdap-api is that it pulls in old gson, which could affect provisioner dependencies.", "url": "https://github.com/cdapio/cdap/pull/12720#discussion_r477646120", "createdAt": "2020-08-26T23:03:30Z", "author": {"login": "chtyim"}, "path": "cdap-runtime-spi/pom.xml", "diffHunk": "@@ -39,6 +39,11 @@\n       <groupId>org.apache.twill</groupId>\n       <artifactId>twill-api</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>io.cdap.cdap</groupId>\n+      <artifactId>cdap-watchdog-api</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "712b05c30afe2ef2e6280aa55d4a0324aed01555"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MjUwODk1", "url": "https://github.com/cdapio/cdap/pull/12720#pullrequestreview-477250895", "createdAt": "2020-08-28T05:35:48Z", "commit": {"oid": "f45a92315539bdd0d4957d2bc6dc85d7e949d4e5"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTozNTo0OFrOHIqFwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTozNjo0NVrOHIqGng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0MDI1OA==", "bodyText": "Why add here? Custome metrics context (e.g. the one emitted by program or extension) shouldn't need to be defined here. The one who query simply provide \"sc\", \"reg\" as the context.", "url": "https://github.com/cdapio/cdap/pull/12720#discussion_r478840258", "createdAt": "2020-08-28T05:35:48Z", "author": {"login": "chtyim"}, "path": "cdap-watchdog/src/main/java/io/cdap/cdap/metrics/query/MetricsQueryHelper.java", "diffHunk": "@@ -109,6 +109,10 @@\n \n       .put(Constants.Metrics.Tag.PROVISIONER, \"provisioner\")\n \n+      .put(Constants.Metrics.Tag.STATUS_CODE, \"statuscode\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f45a92315539bdd0d4957d2bc6dc85d7e949d4e5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0MDQ3OA==", "bodyText": "This segment of code has repeated many times. Better to refactor it out to the DataprocUtils method.", "url": "https://github.com/cdapio/cdap/pull/12720#discussion_r478840478", "createdAt": "2020-08-28T05:36:45Z", "author": {"login": "chtyim"}, "path": "cdap-runtime-ext-dataproc/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/DataprocRuntimeJobManager.java", "diffHunk": "@@ -189,9 +189,21 @@ public void launch(RuntimeJobInfo runtimeJobInfo) throws Exception {\n       // step 4: submit hadoop job to dataproc\n       Job job = getJobControllerClient().submitJob(request);\n       LOG.debug(\"Successfully submitted hadoop job {} to cluster {}.\", job.getReference().getJobId(), clusterName);\n+      DataprocUtils.emitMetric(provisionerContext, region, StatusCode.Code.OK,\n+                               // Constants.Metrics.Provisioner.SUBMIT_JOB_COUNT =\n+                               \"provisioner.submitJob.response.count\");\n     } catch (Exception e) {\n       // delete all uploaded gcs files in case of exception\n       DataprocUtils.deleteGCSPath(getStorageClient(), bucket, runRootPath);\n+      StatusCode.Code statusCode = StatusCode.Code.INTERNAL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f45a92315539bdd0d4957d2bc6dc85d7e949d4e5"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MzM4Nzk2", "url": "https://github.com/cdapio/cdap/pull/12720#pullrequestreview-477338796", "createdAt": "2020-08-28T07:08:52Z", "commit": {"oid": "ae77141d62cc6eb93095bdf2c6f41782dd5fc0db"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNzowODo1MlrOHIsGOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNzowOTo1MlrOHIsHzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg3MzE0Nw==", "bodyText": "Remove unused constants", "url": "https://github.com/cdapio/cdap/pull/12720#discussion_r478873147", "createdAt": "2020-08-28T07:08:52Z", "author": {"login": "chtyim"}, "path": "cdap-common/src/main/java/io/cdap/cdap/common/conf/Constants.java", "diffHunk": "@@ -691,6 +691,9 @@\n       public static final String PROVISIONER = \"prv\";\n       public static final String SPARK = \"sp\";\n \n+      public static final String STATUS_CODE = \"sc\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae77141d62cc6eb93095bdf2c6f41782dd5fc0db"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg3MzIzMg==", "bodyText": "Remove unused constants", "url": "https://github.com/cdapio/cdap/pull/12720#discussion_r478873232", "createdAt": "2020-08-28T07:09:05Z", "author": {"login": "chtyim"}, "path": "cdap-common/src/main/java/io/cdap/cdap/common/conf/Constants.java", "diffHunk": "@@ -764,6 +767,17 @@\n       public static final String PROGRAM_PROVISIONING_DELAY_SECONDS = \"program.provisioning.delay.seconds\";\n     }\n \n+    /**\n+     * Provisioner metrics\n+     */\n+    public static final class Provisioner {\n+      public static final String CREATE_CLUSTER_COUNT = \"provisioner.createCluster.response.count\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae77141d62cc6eb93095bdf2c6f41782dd5fc0db"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg3MzU1MA==", "bodyText": "No need to have these comment. If you want to define these as constants, define a DataprocConstants class in the dataproc module.", "url": "https://github.com/cdapio/cdap/pull/12720#discussion_r478873550", "createdAt": "2020-08-28T07:09:52Z", "author": {"login": "chtyim"}, "path": "cdap-runtime-ext-dataproc/src/main/java/io/cdap/cdap/runtime/spi/provisioner/dataproc/DataprocProvisioner.java", "diffHunk": "@@ -143,7 +144,15 @@ public Cluster createCluster(ProvisionerContext context) throws Exception {\n                  numWarnings, numWarnings > 1 ? \"s\" : \"\",\n                  String.join(\"\\n\", createOperationMeta.getWarningsList()));\n       }\n+      DataprocUtils.emitMetric(context, conf.getRegion(), null,\n+                               // Constants.Metrics.Provisioner.CREATE_CLUSTER_COUNT =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae77141d62cc6eb93095bdf2c6f41782dd5fc0db"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MjQ0NzUx", "url": "https://github.com/cdapio/cdap/pull/12720#pullrequestreview-478244751", "createdAt": "2020-08-30T23:32:54Z", "commit": {"oid": "099368b71d8a298bed98114cafface0e5b07f9d4"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQyMzozMjo1NFrOHJmfsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQyMzozNDo1M1rOHJmgZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgyOTkzNg==", "bodyText": "Annotate the Exception e with @Nullable since null is allowed", "url": "https://github.com/cdapio/cdap/pull/12720#discussion_r479829936", "createdAt": "2020-08-30T23:32:54Z", "author": {"login": "chtyim"}, "path": "cdap-runtime-ext-dataproc/src/main/java/io/cdap/cdap/runtime/spi/common/DataprocUtils.java", "diffHunk": "@@ -229,6 +234,31 @@ public static String getSystemProjectId() {\n     }\n   }\n \n+  /**\n+   * Emit a dataproc metric.\n+   **/\n+  public static void emitMetric(ProvisionerContext context, String region,\n+                                Exception e, String  metricName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "099368b71d8a298bed98114cafface0e5b07f9d4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgzMDExNg==", "bodyText": "Also, it is better to create another emitMetric method that doesn't take exception so that pass in null from the caller is not needed.\npublic static void emitMetrics(ProvieionerContext context, String region, String metricName) {\n  emitMetrics(context, region, metricName, null);\n}\n\npublic static void emitMetrics(ProvieionerContext context, String region, \n                               String metricName, @Nullable Exception e) {\n  // Existing code ....\n}", "url": "https://github.com/cdapio/cdap/pull/12720#discussion_r479830116", "createdAt": "2020-08-30T23:34:53Z", "author": {"login": "chtyim"}, "path": "cdap-runtime-ext-dataproc/src/main/java/io/cdap/cdap/runtime/spi/common/DataprocUtils.java", "diffHunk": "@@ -229,6 +234,31 @@ public static String getSystemProjectId() {\n     }\n   }\n \n+  /**\n+   * Emit a dataproc metric.\n+   **/\n+  public static void emitMetric(ProvisionerContext context, String region,\n+                                Exception e, String  metricName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgyOTkzNg=="}, "originalCommit": {"oid": "099368b71d8a298bed98114cafface0e5b07f9d4"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5MDI0NjM4", "url": "https://github.com/cdapio/cdap/pull/12720#pullrequestreview-479024638", "createdAt": "2020-08-31T22:58:27Z", "commit": {"oid": "2e856022933e4613440ef7c90c7a6ea5b6b8e2c6"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjo1ODoyN1rOHKMoiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjo1ODoyN1rOHKMoiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ1NDc5NQ==", "bodyText": "I would suggest swap the e and metricName. Generally we extend more arguments", "url": "https://github.com/cdapio/cdap/pull/12720#discussion_r480454795", "createdAt": "2020-08-31T22:58:27Z", "author": {"login": "chtyim"}, "path": "cdap-runtime-ext-dataproc/src/main/java/io/cdap/cdap/runtime/spi/common/DataprocUtils.java", "diffHunk": "@@ -229,6 +234,35 @@ public static String getSystemProjectId() {\n     }\n   }\n \n+  /**\n+   * Emit a dataproc metric.\n+   **/\n+  public static void emitMetric(ProvisionerContext context, String region,\n+                                @Nullable Exception e, String metricName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e856022933e4613440ef7c90c7a6ea5b6b8e2c6"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c90bcfae320b009b61eac368b607afa20b5ab419", "author": {"user": {"login": "rmstar", "name": "Prashant Jaikumar"}}, "url": "https://github.com/cdapio/cdap/commit/c90bcfae320b009b61eac368b607afa20b5ab419", "committedDate": "2020-09-01T01:18:18Z", "message": "[CDAP-17128] Add metrics for success/failure of Dataproc API calls"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2e856022933e4613440ef7c90c7a6ea5b6b8e2c6", "author": {"user": {"login": "rmstar", "name": "Prashant Jaikumar"}}, "url": "https://github.com/cdapio/cdap/commit/2e856022933e4613440ef7c90c7a6ea5b6b8e2c6", "committedDate": "2020-08-31T07:15:25Z", "message": "Fix emitMetric"}, "afterCommit": {"oid": "c90bcfae320b009b61eac368b607afa20b5ab419", "author": {"user": {"login": "rmstar", "name": "Prashant Jaikumar"}}, "url": "https://github.com/cdapio/cdap/commit/c90bcfae320b009b61eac368b607afa20b5ab419", "committedDate": "2020-09-01T01:18:18Z", "message": "[CDAP-17128] Add metrics for success/failure of Dataproc API calls"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1739, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}