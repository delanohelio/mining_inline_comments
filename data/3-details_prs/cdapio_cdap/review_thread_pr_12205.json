{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMjU3MDYz", "number": 12205, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMToxNDo0NFrOD_2YCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMToxOTozMFrOD_2dXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4Mjc3NzcxOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/index.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMToxNDo0NFrOGawjvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMToxNDo0NFrOGawjvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxMTc0MA==", "bodyText": "nit: We should probably use the colors from our theme file. colors.ts/scss should have this color that we can use from the theme palette.", "url": "https://github.com/cdapio/cdap/pull/12205#discussion_r430711740", "createdAt": "2020-05-26T21:14:44Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/index.tsx", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import { STEPS } from 'components/PluginJSONCreator/Create/steps';\n+import { createContextConnect } from 'components/PluginJSONCreator/Create';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    comp: {\n+      borderRight: '1px solid #e0e0e0',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b97ba672b450b8df4b27bcacd501a3fecd23190"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4Mjc5MTMzOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/index.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMToxOTozMFrOGawsfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMToxOTozMFrOGawsfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxMzk4MA==", "bodyText": "Can we extract this out a generic component? We can have both the CreateContext(or any generic react context) and Comp as props. If for the context I think this can be reused anywhere would be a good abstraction.", "url": "https://github.com/cdapio/cdap/pull/12205#discussion_r430713980", "createdAt": "2020-05-26T21:19:30Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/index.tsx", "diffHunk": "@@ -0,0 +1,123 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import WizardGuideline from 'components/PluginJSONCreator/Create/WizardGuideline';\n+import Content from 'components/PluginJSONCreator/Create/Content';\n+\n+export const CreateContext = React.createContext({});\n+export const LEFT_PANEL_WIDTH = 250;\n+\n+const styles = (): StyleRules => {\n+  return {\n+    root: {\n+      height: '100%',\n+    },\n+    content: {\n+      height: 'calc(100% - 50px)',\n+      display: 'grid',\n+      gridTemplateColumns: `${LEFT_PANEL_WIDTH}px 1fr`,\n+\n+      '& > div': {\n+        overflowY: 'auto',\n+      },\n+    },\n+  };\n+};\n+\n+interface ICreateState {\n+  activeStep: number;\n+  pluginName: string;\n+  pluginType: string;\n+  displayName: string;\n+  emitAlerts: boolean;\n+  emitErrors: boolean;\n+  setActiveStep: (step: number) => void;\n+  setBasicPluginInfo: (basicPluginInfo: IBasicPluginInfo) => void;\n+}\n+\n+export interface IBasicPluginInfo {\n+  pluginName: string;\n+  pluginType: string;\n+  displayName: string;\n+  emitAlerts: boolean;\n+  emitErrors: boolean;\n+}\n+\n+export type ICreateContext = Partial<ICreateState>;\n+\n+class CreateView extends React.PureComponent<ICreateContext & WithStyles<typeof styles>> {\n+  public setActiveStep = (activeStep: number) => {\n+    this.setState({ activeStep });\n+  };\n+\n+  public setBasicPluginInfo = (basicPluginInfo: IBasicPluginInfo) => {\n+    const { pluginName, pluginType, displayName, emitAlerts, emitErrors } = basicPluginInfo;\n+    this.setState({\n+      pluginName,\n+      pluginType,\n+      displayName,\n+      emitAlerts,\n+      emitErrors,\n+    });\n+  };\n+\n+  public state = {\n+    pluginName: '',\n+    pluginType: '',\n+    displayName: '',\n+    emitAlerts: true,\n+    emitErrors: true,\n+    activeStep: 0,\n+\n+    setActiveStep: this.setActiveStep,\n+    setBasicPluginInfo: this.setBasicPluginInfo,\n+  };\n+\n+  public render() {\n+    return (\n+      <CreateContext.Provider value={this.state}>\n+        <div className={this.props.classes.root}>\n+          <div className={this.props.classes.content}>\n+            <WizardGuideline />\n+            <Content />\n+          </div>\n+        </div>\n+      </CreateContext.Provider>\n+    );\n+  }\n+}\n+\n+export function createContextConnect(Comp) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b97ba672b450b8df4b27bcacd501a3fecd23190"}, "originalPosition": 105}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2652, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}