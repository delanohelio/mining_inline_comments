{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMTQ2NTU1", "number": 12410, "title": "[CDAP-16690] Implement virtual scroll into preview data and record view", "bodyText": "JIRA: https://issues.cask.co/browse/CDAP-16690\nBuild: https://builds.cask.co/browse/CDAP-UDUT700\n\nAdded toggle so user can choose between table and records view (default is table unless the schema has more than 100 fields)\nImplemented virtual scroll for data and records view\n\nTwo example pipelines, one with 100+ fields in the sources and joiner and another pipeline with 5000 fields\n-- Note that you will need to update the service file path for the cdap-gcp-project\nSome initial performance comparisons -- Measuring preview tab loading times for Wrangler node with:\n5000 fields (no nesting,  all strings) and 100 rows:\n\nWithout optimization (6.1.2, no record view or virtual scroll): 1 m 20 s\nWith initial optimization (record view, no virtual scroll): 1 s\nWith initial optimization (table view, no virtual scroll): 6 s\nWith optimization (record view + virtual scroll): 1 s\nWith optimization (table view + virtual scroll): 14 s", "createdAt": "2020-06-25T16:58:53Z", "url": "https://github.com/cdapio/cdap/pull/12410", "merged": true, "mergeCommit": {"oid": "d36fd4502dea3257405156f5c40abd7f9a170be5"}, "closed": true, "closedAt": "2020-07-17T19:55:42Z", "author": {"login": "yukiej"}, "timelineItems": {"totalCount": 32, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcu3lUEABqjM0ODQ1NDEzMDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc14i7PAFqTQ1MDg4ODg2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "418d3c49caa04a4abd433ea599394dabad99e962", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/418d3c49caa04a4abd433ea599394dabad99e962", "committedDate": "2020-06-25T22:34:18Z", "message": "Add status checks for record messaging"}, "afterCommit": {"oid": "87ee44d1faa371ffc5e5e0364def2296fe8d8ac7", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/87ee44d1faa371ffc5e5e0364def2296fe8d8ac7", "committedDate": "2020-06-25T23:51:36Z", "message": "Check for out of range records"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MzE5NTQz", "url": "https://github.com/cdapio/cdap/pull/12410#pullrequestreview-438319543", "createdAt": "2020-06-26T13:59:31Z", "commit": {"oid": "87ee44d1faa371ffc5e5e0364def2296fe8d8ac7"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNDowMjoyN1rOGpiG2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNDowNzo0M1rOGpiSoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIwMzYxMA==", "bodyText": "The comments here are really helpful!", "url": "https://github.com/cdapio/cdap/pull/12410#discussion_r446203610", "createdAt": "2020-06-26T14:02:27Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PreviewData/RecordView/RecordTable.tsx", "diffHunk": "@@ -15,53 +15,140 @@\n  */\n \n import React from 'react';\n-import Table from '@material-ui/core/Table';\n-import TableBody from '@material-ui/core/TableBody';\n-import TableRow from '@material-ui/core/TableRow';\n+import VirtualScroll from 'components/VirtualScroll';\n+import { PREVIEW_STATUS } from 'services/PreviewStatus';\n import Paper from '@material-ui/core/Paper';\n-import TableHead from '@material-ui/core/TableHead';\n+import Grid from '@material-ui/core/Grid';\n import withStyles, { WithStyles } from '@material-ui/core/styles/withStyles';\n import ThemeWrapper from 'components/ThemeWrapper';\n-import { CustomTableCell, styles } from 'components/PreviewData/DataView/Table';\n+import { styles } from 'components/PreviewData/DataView/Table';\n+import classnames from 'classnames';\n+import T from 'i18n-react';\n+import Heading, { HeadingTypes } from 'components/Heading';\n \n const I18N_PREFIX = 'features.PreviewData.RecordView.RecordTable';\n \n interface IRecordTableProps extends WithStyles<typeof styles> {\n-  headers: string[];\n-  record: any;\n+  headers?: string[];\n+  record?: any;\n+  selectedRecord?: number;\n+  isInput?: boolean;\n+  previewStatus?: string;\n+  isCondition?: boolean;\n }\n \n-const RecordTableView: React.FC<IRecordTableProps> = ({ classes, headers, record }) => {\n+const RecordTableView: React.FC<IRecordTableProps> = ({\n+  classes,\n+  headers,\n+  record,\n+  selectedRecord,\n+  isInput,\n+  previewStatus,\n+  isCondition,\n+}) => {\n   // Used to stringify any non-string field values and field names.\n   // TO DO: Might not need to do this for field names, need to test with nested schemas.\n   // TO DO: Move to utilities, since we also use this in data view\n+\n   const format = (field: any) => {\n     if (typeof field === 'object') {\n       return JSON.stringify(field);\n     }\n     return field;\n   };\n \n+  const noRecordMsg = () => {\n+    let msg;\n+    const recordType = isInput ? 'Input' : 'Output';\n+    if (isCondition) {\n+      msg = T.translate(`${I18N_PREFIX}.previewNotSupported`);\n+    } else if (previewStatus === PREVIEW_STATUS.RUNNING || previewStatus === PREVIEW_STATUS.INIT) {\n+      // preview is still running but there's no data yet\n+      msg = T.translate(`${I18N_PREFIX}.previewRunning`, { recordType });\n+    } else if (headers.length > 0) {\n+      // not running preview and there is preview data, but not for this record number", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87ee44d1faa371ffc5e5e0364def2296fe8d8ac7"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIwNDUxMQ==", "bodyText": "Maybe we can let these numbers 25 and 40 be defined with a constant in case we may need to reuse them", "url": "https://github.com/cdapio/cdap/pull/12410#discussion_r446204511", "createdAt": "2020-06-26T14:04:02Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PreviewData/RecordView/RecordTable.tsx", "diffHunk": "@@ -15,53 +15,140 @@\n  */\n \n import React from 'react';\n-import Table from '@material-ui/core/Table';\n-import TableBody from '@material-ui/core/TableBody';\n-import TableRow from '@material-ui/core/TableRow';\n+import VirtualScroll from 'components/VirtualScroll';\n+import { PREVIEW_STATUS } from 'services/PreviewStatus';\n import Paper from '@material-ui/core/Paper';\n-import TableHead from '@material-ui/core/TableHead';\n+import Grid from '@material-ui/core/Grid';\n import withStyles, { WithStyles } from '@material-ui/core/styles/withStyles';\n import ThemeWrapper from 'components/ThemeWrapper';\n-import { CustomTableCell, styles } from 'components/PreviewData/DataView/Table';\n+import { styles } from 'components/PreviewData/DataView/Table';\n+import classnames from 'classnames';\n+import T from 'i18n-react';\n+import Heading, { HeadingTypes } from 'components/Heading';\n \n const I18N_PREFIX = 'features.PreviewData.RecordView.RecordTable';\n \n interface IRecordTableProps extends WithStyles<typeof styles> {\n-  headers: string[];\n-  record: any;\n+  headers?: string[];\n+  record?: any;\n+  selectedRecord?: number;\n+  isInput?: boolean;\n+  previewStatus?: string;\n+  isCondition?: boolean;\n }\n \n-const RecordTableView: React.FC<IRecordTableProps> = ({ classes, headers, record }) => {\n+const RecordTableView: React.FC<IRecordTableProps> = ({\n+  classes,\n+  headers,\n+  record,\n+  selectedRecord,\n+  isInput,\n+  previewStatus,\n+  isCondition,\n+}) => {\n   // Used to stringify any non-string field values and field names.\n   // TO DO: Might not need to do this for field names, need to test with nested schemas.\n   // TO DO: Move to utilities, since we also use this in data view\n+\n   const format = (field: any) => {\n     if (typeof field === 'object') {\n       return JSON.stringify(field);\n     }\n     return field;\n   };\n \n+  const noRecordMsg = () => {\n+    let msg;\n+    const recordType = isInput ? 'Input' : 'Output';\n+    if (isCondition) {\n+      msg = T.translate(`${I18N_PREFIX}.previewNotSupported`);\n+    } else if (previewStatus === PREVIEW_STATUS.RUNNING || previewStatus === PREVIEW_STATUS.INIT) {\n+      // preview is still running but there's no data yet\n+      msg = T.translate(`${I18N_PREFIX}.previewRunning`, { recordType });\n+    } else if (headers.length > 0) {\n+      // not running preview and there is preview data, but not for this record number\n+      msg = T.translate(`${I18N_PREFIX}.noSelectedRecord`, { selectedRecord });\n+    } else {\n+      // not running preview AND there is no preview data for this stage\n+      msg = T.translate(`${I18N_PREFIX}.noPreviewRunning`, { recordType });\n+    }\n+    return (\n+      <div>\n+        <Heading type={HeadingTypes.h3} label={msg} className={classes.messageText} />\n+      </div>\n+    );\n+  };\n+\n+  const renderList = (visibleNodeCount: number, startNode: number) => {\n+    if (!record) {\n+      return;\n+    }\n+    return headers.slice(startNode, startNode + visibleNodeCount).map((fieldName, i) => {\n+      const processedFieldName = format(fieldName);\n+      const processedValue = format(record[fieldName]);\n+      return (\n+        <React.Fragment>\n+          <Grid\n+            container\n+            direction=\"row\"\n+            wrap=\"nowrap\"\n+            className={classnames(classes.row, { oddRow: (i + startNode + 1) % 2 })}\n+            key={`gridrow-${i}`}\n+          >\n+            <Grid\n+              item\n+              className={classnames(classes.cell, classes.recordCell)}\n+              title={processedFieldName}\n+            >\n+              {processedFieldName}\n+            </Grid>\n+            <Grid\n+              item\n+              className={classnames(classes.cell, classes.recordCell)}\n+              title={processedValue}\n+            >\n+              {processedValue}\n+            </Grid>\n+          </Grid>\n+        </React.Fragment>\n+      );\n+    });\n+  };\n+\n+  // When the selected record number is out of range\n+  if (!record) {\n+    return noRecordMsg();\n+  }\n+\n   return (\n-    <Paper className={classes.root}>\n-      <Table>\n-        <TableHead>\n-          <TableRow className={classes.row}>\n-            <CustomTableCell>Field</CustomTableCell>\n-            <CustomTableCell>Value</CustomTableCell>\n-          </TableRow>\n-        </TableHead>\n-        <TableBody>\n-          {headers.map((fieldName, i) => {\n-            return (\n-              <TableRow className={classes.row} key={`tr-${i}}`}>\n-                <CustomTableCell>{format(fieldName)}</CustomTableCell>\n-                <CustomTableCell>{format(record[fieldName])}</CustomTableCell>\n-              </TableRow>\n-            );\n-          })}\n-        </TableBody>\n-      </Table>\n+    <Paper className={classnames(classes.root, classes.recordContainer)}>\n+      <Grid container direction=\"column\" wrap=\"nowrap\">\n+        <Grid item>\n+          <Grid\n+            container\n+            direction=\"row\"\n+            justify=\"center\"\n+            alignItems=\"center\"\n+            className={classes.headerRow}\n+          >\n+            <Grid item className={classnames(classes.headerCell, classes.cell, classes.recordCell)}>\n+              {T.translate(`${I18N_PREFIX}.fieldName`)}\n+            </Grid>\n+            <Grid item className={classnames(classes.headerCell, classes.cell, classes.recordCell)}>\n+              {T.translate(`${I18N_PREFIX}.value`)}\n+            </Grid>\n+          </Grid>\n+        </Grid>\n+        <Grid item>\n+          <VirtualScroll\n+            itemCount={() => headers.length}\n+            visibleChildCount={25}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87ee44d1faa371ffc5e5e0364def2296fe8d8ac7"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIwNTI2MA==", "bodyText": "Maybe we can let this number 100 be defined with a constant in case we may need to reuse them", "url": "https://github.com/cdapio/cdap/pull/12410#discussion_r446205260", "createdAt": "2020-06-26T14:05:18Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PreviewData/index.tsx", "diffHunk": "@@ -66,10 +72,22 @@ const PreviewDataViewBase: React.FC<IPreviewDataViewProps> = ({\n \n   const [previewLoading, setPreviewLoading] = useState(false);\n   const [previewData, setPreviewData] = useState<IPreviewData>({});\n+  const [tableData, setTableData] = useState<ITableData>({});\n   const [error, setError] = useState(null);\n+  const [viewMode, setViewMode] = useState('Table');\n+\n+  const widgetProps = {\n+    on: { value: 'Record', label: 'Record' },\n+    off: { value: 'Table', label: 'Table' },\n+  };\n \n   const updatePreviewCb = (updatedPreview: IPreviewData) => {\n     setPreviewData(updatedPreview);\n+    const parsedData = getTableData(updatedPreview);\n+    setTableData(parsedData);\n+    setViewMode(\n+      parsedData.inputFieldCount > 100 || parsedData.outputFieldCount > 100 ? 'Record' : 'Table'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87ee44d1faa371ffc5e5e0364def2296fe8d8ac7"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIwNTU5Nw==", "bodyText": "Maybe we can define Record and Table with enum, since we use them more than once in this PreviewData/index.tsx.", "url": "https://github.com/cdapio/cdap/pull/12410#discussion_r446205597", "createdAt": "2020-06-26T14:05:53Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PreviewData/index.tsx", "diffHunk": "@@ -66,10 +72,22 @@ const PreviewDataViewBase: React.FC<IPreviewDataViewProps> = ({\n \n   const [previewLoading, setPreviewLoading] = useState(false);\n   const [previewData, setPreviewData] = useState<IPreviewData>({});\n+  const [tableData, setTableData] = useState<ITableData>({});\n   const [error, setError] = useState(null);\n+  const [viewMode, setViewMode] = useState('Table');\n+\n+  const widgetProps = {\n+    on: { value: 'Record', label: 'Record' },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87ee44d1faa371ffc5e5e0364def2296fe8d8ac7"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIwNjYyNA==", "bodyText": "Maybe we can extract these logic in If condition into a function and add a comment!", "url": "https://github.com/cdapio/cdap/pull/12410#discussion_r446206624", "createdAt": "2020-06-26T14:07:43Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PreviewData/index.tsx", "diffHunk": "@@ -147,22 +163,28 @@ const PreviewDataViewBase: React.FC<IPreviewDataViewProps> = ({\n     </div>\n   );\n \n-  const showRecordView = tableData.inputFieldCount >= 100 || tableData.outputFieldCount >= 100;\n-\n   return (\n     <div>\n       <If condition={!previewId}>{noPreviewDataMsg(classes)}</If>\n       <If condition={previewLoading}>{loadingMsg(classes)}</If>\n       <If condition={error}>{errorMsg(classes)}</If>\n \n-      <If condition={!previewLoading && previewId && !isEmpty(previewData) && !showRecordView}>\n+      <If condition={!previewLoading && previewId && !isEmpty(previewData) && viewMode === 'Table'}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87ee44d1faa371ffc5e5e0364def2296fe8d8ac7"}, "originalPosition": 112}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MzE1NzEx", "url": "https://github.com/cdapio/cdap/pull/12410#pullrequestreview-444315711", "createdAt": "2020-07-07T23:26:28Z", "commit": {"oid": "c8cf11fdd9ac3befbe2c742fc733e3bf73847643"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NTQ2MDg1", "url": "https://github.com/cdapio/cdap/pull/12410#pullrequestreview-447546085", "createdAt": "2020-07-13T19:40:49Z", "commit": {"oid": "c8cf11fdd9ac3befbe2c742fc733e3bf73847643"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOTo0MDo0OVrOGw3Gyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOTo1MDoyNVrOGw3aDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4NzY5MQ==", "bodyText": "Is this being used anywhere?", "url": "https://github.com/cdapio/cdap/pull/12410#discussion_r453887691", "createdAt": "2020-07-13T19:40:49Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PreviewData/DataView/Table.tsx", "diffHunk": "@@ -15,61 +15,78 @@\n  */\n \n import React from 'react';\n-import Table from '@material-ui/core/Table';\n-import TableBody from '@material-ui/core/TableBody';\n-import TableHead from '@material-ui/core/TableHead';\n-import TableRow from '@material-ui/core/TableRow';\n import Paper from '@material-ui/core/Paper';\n-import TableCell from '@material-ui/core/TableCell';\n-import withStyles, { WithStyles } from '@material-ui/core/styles/withStyles';\n+import Grid from '@material-ui/core/Grid';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n import isEmpty from 'lodash/isEmpty';\n import { PREVIEW_STATUS } from 'services/PreviewStatus';\n import Heading, { HeadingTypes } from 'components/Heading';\n import ThemeWrapper from 'components/ThemeWrapper';\n+import VirtualScroll from 'components/VirtualScroll';\n import T from 'i18n-react';\n+import classnames from 'classnames';\n \n const I18N_PREFIX = 'features.PreviewData.DataView.Table';\n \n-export const CustomTableCell = withStyles((theme) => ({\n-  head: {\n-    backgroundColor: theme.palette.grey['300'],\n-    color: theme.palette.common.white,\n-    padding: 10,\n-    fontSize: 14,\n-    '&:first-of-type': {\n-      borderRight: `1px solid ${theme.palette.grey['500']}`,\n-    },\n-  },\n-  body: {\n-    padding: 10,\n-    fontSize: 14,\n-    '&:first-of-type': {\n-      borderRight: `1px solid ${theme.palette.grey['500']}`,\n-    },\n-  },\n-}))(TableCell);\n-\n export const messageTextStyle = {\n   fontSize: '1.3rem !important',\n   margin: '10px 0',\n };\n-export const styles = (theme) => ({\n+export const styles = (theme): StyleRules => ({\n   root: {\n-    width: '100%',\n     display: 'inline-block',\n     height: 'auto',\n     marginTop: theme.spacing(1),\n   },\n+  tableContainer: {\n+    width: 'fit-content',\n+    minWidth: '100%',\n+  },\n+  recordContainer: {\n+    width: '100%',\n+  },\n   table: {\n     width: '100%',\n   },\n   row: {\n     height: 40,\n-    '&:nth-of-type(odd)': {\n+    '&.oddRow': {\n       backgroundColor: theme.palette.grey['600'],\n     },\n   },\n   messageText: messageTextStyle,\n+  headerRow: {\n+    backgroundColor: theme.palette.grey['300'],\n+    fontWeight: 500,\n+  },\n+  headerCell: {\n+    color: theme.palette.common.white,\n+    fontSize: 14,\n+  },\n+  cell: {\n+    textAlign: 'center',\n+    height: '40px',\n+    lineHeight: '40px',\n+    overflow: 'hidden',\n+    textOverflow: 'ellipsis',\n+  },\n+  recordCell: {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8cf11fdd9ac3befbe2c742fc733e3bf73847643"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4ODQyMA==", "bodyText": "Can we add a todo here. The minimum width of the cell is 120px and when we have the ability to resize the columns it could be varied.", "url": "https://github.com/cdapio/cdap/pull/12410#discussion_r453888420", "createdAt": "2020-07-13T19:42:11Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PreviewData/DataView/Table.tsx", "diffHunk": "@@ -15,61 +15,78 @@\n  */\n \n import React from 'react';\n-import Table from '@material-ui/core/Table';\n-import TableBody from '@material-ui/core/TableBody';\n-import TableHead from '@material-ui/core/TableHead';\n-import TableRow from '@material-ui/core/TableRow';\n import Paper from '@material-ui/core/Paper';\n-import TableCell from '@material-ui/core/TableCell';\n-import withStyles, { WithStyles } from '@material-ui/core/styles/withStyles';\n+import Grid from '@material-ui/core/Grid';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n import isEmpty from 'lodash/isEmpty';\n import { PREVIEW_STATUS } from 'services/PreviewStatus';\n import Heading, { HeadingTypes } from 'components/Heading';\n import ThemeWrapper from 'components/ThemeWrapper';\n+import VirtualScroll from 'components/VirtualScroll';\n import T from 'i18n-react';\n+import classnames from 'classnames';\n \n const I18N_PREFIX = 'features.PreviewData.DataView.Table';\n \n-export const CustomTableCell = withStyles((theme) => ({\n-  head: {\n-    backgroundColor: theme.palette.grey['300'],\n-    color: theme.palette.common.white,\n-    padding: 10,\n-    fontSize: 14,\n-    '&:first-of-type': {\n-      borderRight: `1px solid ${theme.palette.grey['500']}`,\n-    },\n-  },\n-  body: {\n-    padding: 10,\n-    fontSize: 14,\n-    '&:first-of-type': {\n-      borderRight: `1px solid ${theme.palette.grey['500']}`,\n-    },\n-  },\n-}))(TableCell);\n-\n export const messageTextStyle = {\n   fontSize: '1.3rem !important',\n   margin: '10px 0',\n };\n-export const styles = (theme) => ({\n+export const styles = (theme): StyleRules => ({\n   root: {\n-    width: '100%',\n     display: 'inline-block',\n     height: 'auto',\n     marginTop: theme.spacing(1),\n   },\n+  tableContainer: {\n+    width: 'fit-content',\n+    minWidth: '100%',\n+  },\n+  recordContainer: {\n+    width: '100%',\n+  },\n   table: {\n     width: '100%',\n   },\n   row: {\n     height: 40,\n-    '&:nth-of-type(odd)': {\n+    '&.oddRow': {\n       backgroundColor: theme.palette.grey['600'],\n     },\n   },\n   messageText: messageTextStyle,\n+  headerRow: {\n+    backgroundColor: theme.palette.grey['300'],\n+    fontWeight: 500,\n+  },\n+  headerCell: {\n+    color: theme.palette.common.white,\n+    fontSize: 14,\n+  },\n+  cell: {\n+    textAlign: 'center',\n+    height: '40px',\n+    lineHeight: '40px',\n+    overflow: 'hidden',\n+    textOverflow: 'ellipsis',\n+  },\n+  recordCell: {\n+    width: '50%',\n+    padding: '0px 5px',\n+    '&:first-of-type': {\n+      borderRight: `1px solid ${theme.palette.grey['500']}`,\n+      fontWeight: 500,\n+    },\n+  },\n+  tableCell: {\n+    width: '120px',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8cf11fdd9ac3befbe2c742fc733e3bf73847643"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4ODg3Mg==", "bodyText": "nit: Can we have the text align to left? I believe we it left aligned in other places in UI.", "url": "https://github.com/cdapio/cdap/pull/12410#discussion_r453888872", "createdAt": "2020-07-13T19:43:03Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PreviewData/DataView/Table.tsx", "diffHunk": "@@ -15,61 +15,78 @@\n  */\n \n import React from 'react';\n-import Table from '@material-ui/core/Table';\n-import TableBody from '@material-ui/core/TableBody';\n-import TableHead from '@material-ui/core/TableHead';\n-import TableRow from '@material-ui/core/TableRow';\n import Paper from '@material-ui/core/Paper';\n-import TableCell from '@material-ui/core/TableCell';\n-import withStyles, { WithStyles } from '@material-ui/core/styles/withStyles';\n+import Grid from '@material-ui/core/Grid';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n import isEmpty from 'lodash/isEmpty';\n import { PREVIEW_STATUS } from 'services/PreviewStatus';\n import Heading, { HeadingTypes } from 'components/Heading';\n import ThemeWrapper from 'components/ThemeWrapper';\n+import VirtualScroll from 'components/VirtualScroll';\n import T from 'i18n-react';\n+import classnames from 'classnames';\n \n const I18N_PREFIX = 'features.PreviewData.DataView.Table';\n \n-export const CustomTableCell = withStyles((theme) => ({\n-  head: {\n-    backgroundColor: theme.palette.grey['300'],\n-    color: theme.palette.common.white,\n-    padding: 10,\n-    fontSize: 14,\n-    '&:first-of-type': {\n-      borderRight: `1px solid ${theme.palette.grey['500']}`,\n-    },\n-  },\n-  body: {\n-    padding: 10,\n-    fontSize: 14,\n-    '&:first-of-type': {\n-      borderRight: `1px solid ${theme.palette.grey['500']}`,\n-    },\n-  },\n-}))(TableCell);\n-\n export const messageTextStyle = {\n   fontSize: '1.3rem !important',\n   margin: '10px 0',\n };\n-export const styles = (theme) => ({\n+export const styles = (theme): StyleRules => ({\n   root: {\n-    width: '100%',\n     display: 'inline-block',\n     height: 'auto',\n     marginTop: theme.spacing(1),\n   },\n+  tableContainer: {\n+    width: 'fit-content',\n+    minWidth: '100%',\n+  },\n+  recordContainer: {\n+    width: '100%',\n+  },\n   table: {\n     width: '100%',\n   },\n   row: {\n     height: 40,\n-    '&:nth-of-type(odd)': {\n+    '&.oddRow': {\n       backgroundColor: theme.palette.grey['600'],\n     },\n   },\n   messageText: messageTextStyle,\n+  headerRow: {\n+    backgroundColor: theme.palette.grey['300'],\n+    fontWeight: 500,\n+  },\n+  headerCell: {\n+    color: theme.palette.common.white,\n+    fontSize: 14,\n+  },\n+  cell: {\n+    textAlign: 'center',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8cf11fdd9ac3befbe2c742fc733e3bf73847643"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg5MTI1Nw==", "bodyText": "Same here. Not used anywhere I believe.", "url": "https://github.com/cdapio/cdap/pull/12410#discussion_r453891257", "createdAt": "2020-07-13T19:47:46Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PreviewData/DataView/Table.tsx", "diffHunk": "@@ -15,61 +15,78 @@\n  */\n \n import React from 'react';\n-import Table from '@material-ui/core/Table';\n-import TableBody from '@material-ui/core/TableBody';\n-import TableHead from '@material-ui/core/TableHead';\n-import TableRow from '@material-ui/core/TableRow';\n import Paper from '@material-ui/core/Paper';\n-import TableCell from '@material-ui/core/TableCell';\n-import withStyles, { WithStyles } from '@material-ui/core/styles/withStyles';\n+import Grid from '@material-ui/core/Grid';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n import isEmpty from 'lodash/isEmpty';\n import { PREVIEW_STATUS } from 'services/PreviewStatus';\n import Heading, { HeadingTypes } from 'components/Heading';\n import ThemeWrapper from 'components/ThemeWrapper';\n+import VirtualScroll from 'components/VirtualScroll';\n import T from 'i18n-react';\n+import classnames from 'classnames';\n \n const I18N_PREFIX = 'features.PreviewData.DataView.Table';\n \n-export const CustomTableCell = withStyles((theme) => ({\n-  head: {\n-    backgroundColor: theme.palette.grey['300'],\n-    color: theme.palette.common.white,\n-    padding: 10,\n-    fontSize: 14,\n-    '&:first-of-type': {\n-      borderRight: `1px solid ${theme.palette.grey['500']}`,\n-    },\n-  },\n-  body: {\n-    padding: 10,\n-    fontSize: 14,\n-    '&:first-of-type': {\n-      borderRight: `1px solid ${theme.palette.grey['500']}`,\n-    },\n-  },\n-}))(TableCell);\n-\n export const messageTextStyle = {\n   fontSize: '1.3rem !important',\n   margin: '10px 0',\n };\n-export const styles = (theme) => ({\n+export const styles = (theme): StyleRules => ({\n   root: {\n-    width: '100%',\n     display: 'inline-block',\n     height: 'auto',\n     marginTop: theme.spacing(1),\n   },\n+  tableContainer: {\n+    width: 'fit-content',\n+    minWidth: '100%',\n+  },\n+  recordContainer: {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8cf11fdd9ac3befbe2c742fc733e3bf73847643"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg5MjYyMQ==", "bodyText": "Do we need a separate class for this? Can we use the headerRow to set the color and font size? Will be set for the entire header row container.", "url": "https://github.com/cdapio/cdap/pull/12410#discussion_r453892621", "createdAt": "2020-07-13T19:50:25Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PreviewData/DataView/Table.tsx", "diffHunk": "@@ -15,61 +15,78 @@\n  */\n \n import React from 'react';\n-import Table from '@material-ui/core/Table';\n-import TableBody from '@material-ui/core/TableBody';\n-import TableHead from '@material-ui/core/TableHead';\n-import TableRow from '@material-ui/core/TableRow';\n import Paper from '@material-ui/core/Paper';\n-import TableCell from '@material-ui/core/TableCell';\n-import withStyles, { WithStyles } from '@material-ui/core/styles/withStyles';\n+import Grid from '@material-ui/core/Grid';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n import isEmpty from 'lodash/isEmpty';\n import { PREVIEW_STATUS } from 'services/PreviewStatus';\n import Heading, { HeadingTypes } from 'components/Heading';\n import ThemeWrapper from 'components/ThemeWrapper';\n+import VirtualScroll from 'components/VirtualScroll';\n import T from 'i18n-react';\n+import classnames from 'classnames';\n \n const I18N_PREFIX = 'features.PreviewData.DataView.Table';\n \n-export const CustomTableCell = withStyles((theme) => ({\n-  head: {\n-    backgroundColor: theme.palette.grey['300'],\n-    color: theme.palette.common.white,\n-    padding: 10,\n-    fontSize: 14,\n-    '&:first-of-type': {\n-      borderRight: `1px solid ${theme.palette.grey['500']}`,\n-    },\n-  },\n-  body: {\n-    padding: 10,\n-    fontSize: 14,\n-    '&:first-of-type': {\n-      borderRight: `1px solid ${theme.palette.grey['500']}`,\n-    },\n-  },\n-}))(TableCell);\n-\n export const messageTextStyle = {\n   fontSize: '1.3rem !important',\n   margin: '10px 0',\n };\n-export const styles = (theme) => ({\n+export const styles = (theme): StyleRules => ({\n   root: {\n-    width: '100%',\n     display: 'inline-block',\n     height: 'auto',\n     marginTop: theme.spacing(1),\n   },\n+  tableContainer: {\n+    width: 'fit-content',\n+    minWidth: '100%',\n+  },\n+  recordContainer: {\n+    width: '100%',\n+  },\n   table: {\n     width: '100%',\n   },\n   row: {\n     height: 40,\n-    '&:nth-of-type(odd)': {\n+    '&.oddRow': {\n       backgroundColor: theme.palette.grey['600'],\n     },\n   },\n   messageText: messageTextStyle,\n+  headerRow: {\n+    backgroundColor: theme.palette.grey['300'],\n+    fontWeight: 500,\n+  },\n+  headerCell: {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8cf11fdd9ac3befbe2c742fc733e3bf73847643"}, "originalPosition": 76}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a29ab62f831399a38e5e4a8a474804db5af17007", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/a29ab62f831399a38e5e4a8a474804db5af17007", "committedDate": "2020-07-13T23:04:18Z", "message": "Address feedback to simplify styles"}, "afterCommit": {"oid": "640340aaf3d11e92bd9eee24c94edb6148234748", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/640340aaf3d11e92bd9eee24c94edb6148234748", "committedDate": "2020-07-14T16:44:14Z", "message": "Address feedback to simplify styles"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "640340aaf3d11e92bd9eee24c94edb6148234748", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/640340aaf3d11e92bd9eee24c94edb6148234748", "committedDate": "2020-07-14T16:44:14Z", "message": "Address feedback to simplify styles"}, "afterCommit": {"oid": "268a9cd9139db689b0dd498808cfd1311d5039a5", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/268a9cd9139db689b0dd498808cfd1311d5039a5", "committedDate": "2020-07-17T14:48:20Z", "message": "Adjust width of record dropdown"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2696131da9d159742eb54cd02b85226fb1b5004", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/e2696131da9d159742eb54cd02b85226fb1b5004", "committedDate": "2020-07-17T15:43:32Z", "message": "Adding toggle\n\nUpdate view mode based on toggle state"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0942d0451dc49be2c4b5a6f7e5f2d0109ac32a0", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/e0942d0451dc49be2c4b5a6f7e5f2d0109ac32a0", "committedDate": "2020-07-17T15:43:32Z", "message": "Table view virtual scroll in progress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38fb5e5f9780abc3ef29d168fb29f052686733cb", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/38fb5e5f9780abc3ef29d168fb29f052686733cb", "committedDate": "2020-07-17T15:43:32Z", "message": "Initial implementation of virtual scroll in record view, no styling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "405ae747bee4242ac651b28474ca0eb2e34dfd6e", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/405ae747bee4242ac651b28474ca0eb2e34dfd6e", "committedDate": "2020-07-17T15:43:32Z", "message": "Update virtual scroll to handle short tables and changes in renderList"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41b3532cfa18d4ef05a465587ed9561f7565e8bb", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/41b3532cfa18d4ef05a465587ed9561f7565e8bb", "committedDate": "2020-07-17T15:43:32Z", "message": "Initial styling for records with virtual scroll"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f354331854143592d984d2908e944ef45860a908", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/f354331854143592d984d2908e944ef45860a908", "committedDate": "2020-07-17T15:43:32Z", "message": "Modify styles for tables with fewer columns"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26020c0b5e7b96ed5221d42b6e3f6ccbee05267a", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/26020c0b5e7b96ed5221d42b6e3f6ccbee05267a", "committedDate": "2020-07-17T15:43:32Z", "message": "Add lines between columns in table"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25e787d2f17584306e8c370c3b3fb6311a29a45c", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/25e787d2f17584306e8c370c3b3fb6311a29a45c", "committedDate": "2020-07-17T15:43:33Z", "message": "Increase font weight for headers and record field names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67293cbb1086cbaaa7408a98ea40ebe11c4d46bc", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/67293cbb1086cbaaa7408a98ea40ebe11c4d46bc", "committedDate": "2020-07-17T15:43:33Z", "message": "Check for out of range records"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e0f42b773c376b0366d1097ffffbc545197fc64", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/1e0f42b773c376b0366d1097ffffbc545197fc64", "committedDate": "2020-07-17T15:43:33Z", "message": "Address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "682dbc791229e39aa17a36275f3d9a4eeab75697", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/682dbc791229e39aa17a36275f3d9a4eeab75697", "committedDate": "2020-07-17T15:43:33Z", "message": "Add logic for preview content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6afef75931bc5dd85e7ac92629ca6cb7284f096b", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/6afef75931bc5dd85e7ac92629ca6cb7284f096b", "committedDate": "2020-07-17T15:43:33Z", "message": "Fix styles when there are no records"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a4e5b57ec5a3c4e9c9c3250c6b4ec1f54baa41a", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/2a4e5b57ec5a3c4e9c9c3250c6b4ec1f54baa41a", "committedDate": "2020-07-17T15:43:33Z", "message": "Fix preview loading styles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c728117b8614e07afaa1602ac9aac2f4f7300b4", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/5c728117b8614e07afaa1602ac9aac2f4f7300b4", "committedDate": "2020-07-17T15:43:33Z", "message": "Address feedback to simplify styles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c03a5e69f35bc45b84ae6db36c2038f8b9d9532", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/2c03a5e69f35bc45b84ae6db36c2038f8b9d9532", "committedDate": "2020-07-17T15:43:34Z", "message": "Update blue line for hydrator modal to match configurable tabs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "058ba4b10687bfa32499372adb2283f3fc94807d", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/058ba4b10687bfa32499372adb2283f3fc94807d", "committedDate": "2020-07-17T15:52:43Z", "message": "Switch out abstract widget"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06450711c320525aa54af8cd295a637d6371f55d", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/06450711c320525aa54af8cd295a637d6371f55d", "committedDate": "2020-07-17T15:52:48Z", "message": "Add extra space to align records when there are multiple inputs or outputs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0593b3def33ccbd532466bbfc4ef76dad1214be", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/e0593b3def33ccbd532466bbfc4ef76dad1214be", "committedDate": "2020-07-17T15:52:48Z", "message": "Disable toggle for condition pluginn"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "085d3db9ef45123d607c2f93c5f2cb006c09da80", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/085d3db9ef45123d607c2f93c5f2cb006c09da80", "committedDate": "2020-07-17T15:52:48Z", "message": "Fix spacing around tabs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8e967abed8dfa58d77537368d2d0795ac4161f3", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/a8e967abed8dfa58d77537368d2d0795ac4161f3", "committedDate": "2020-07-17T15:52:48Z", "message": "Match heights for split containers including ones without data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7be19d59b73e9e600f2f2d2b422b60e9c5161830", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/7be19d59b73e9e600f2f2d2b422b60e9c5161830", "committedDate": "2020-07-17T15:52:48Z", "message": "Fix record count calculation bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62f86c31d4d734f927b62ea78fd1da4944606599", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/62f86c31d4d734f927b62ea78fd1da4944606599", "committedDate": "2020-07-17T15:52:48Z", "message": "Adjust width of record dropdown"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5c0fb8e8a0f77ea695050cac690b17b39031b98", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/f5c0fb8e8a0f77ea695050cac690b17b39031b98", "committedDate": "2020-07-17T16:40:06Z", "message": "Merge conflict fixes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "268a9cd9139db689b0dd498808cfd1311d5039a5", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/268a9cd9139db689b0dd498808cfd1311d5039a5", "committedDate": "2020-07-17T14:48:20Z", "message": "Adjust width of record dropdown"}, "afterCommit": {"oid": "f5c0fb8e8a0f77ea695050cac690b17b39031b98", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/f5c0fb8e8a0f77ea695050cac690b17b39031b98", "committedDate": "2020-07-17T16:40:06Z", "message": "Merge conflict fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwODgyNDg0", "url": "https://github.com/cdapio/cdap/pull/12410#pullrequestreview-450882484", "createdAt": "2020-07-17T18:45:49Z", "commit": {"oid": "f5c0fb8e8a0f77ea695050cac690b17b39031b98"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxODo0NTo0OVrOGzdkmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxODo0NTo0OVrOGzdkmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjYxNTA2Ng==", "bodyText": "Curious: Why switch from the pseudo-class to an explicit class?", "url": "https://github.com/cdapio/cdap/pull/12410#discussion_r456615066", "createdAt": "2020-07-17T18:45:49Z", "author": {"login": "njbriggs"}, "path": "cdap-ui/app/cdap/components/PreviewData/DataView/Table.tsx", "diffHunk": "@@ -15,61 +15,65 @@\n  */\n \n import React from 'react';\n-import Table from '@material-ui/core/Table';\n-import TableBody from '@material-ui/core/TableBody';\n-import TableHead from '@material-ui/core/TableHead';\n-import TableRow from '@material-ui/core/TableRow';\n import Paper from '@material-ui/core/Paper';\n-import TableCell from '@material-ui/core/TableCell';\n-import withStyles, { WithStyles } from '@material-ui/core/styles/withStyles';\n+import Grid from '@material-ui/core/Grid';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n import isEmpty from 'lodash/isEmpty';\n import { PREVIEW_STATUS } from 'services/PreviewStatus';\n import Heading, { HeadingTypes } from 'components/Heading';\n import ThemeWrapper from 'components/ThemeWrapper';\n+import VirtualScroll from 'components/VirtualScroll';\n import T from 'i18n-react';\n+import classnames from 'classnames';\n \n const I18N_PREFIX = 'features.PreviewData.DataView.Table';\n \n-export const CustomTableCell = withStyles((theme) => ({\n-  head: {\n-    backgroundColor: theme.palette.grey['300'],\n-    color: theme.palette.common.white,\n-    padding: 10,\n-    fontSize: 14,\n-    '&:first-of-type': {\n-      borderRight: `1px solid ${theme.palette.grey['500']}`,\n-    },\n-  },\n-  body: {\n-    padding: 10,\n-    fontSize: 14,\n-    '&:first-of-type': {\n-      borderRight: `1px solid ${theme.palette.grey['500']}`,\n-    },\n-  },\n-}))(TableCell);\n-\n export const messageTextStyle = {\n   fontSize: '1.3rem !important',\n-  margin: '10px 0',\n+  margin: 'unset',\n+  padding: '10px 5px',\n };\n-export const styles = (theme) => ({\n+export const styles = (theme): StyleRules => ({\n   root: {\n-    width: '100%',\n     display: 'inline-block',\n     height: 'auto',\n     marginTop: theme.spacing(1),\n   },\n-  table: {\n-    width: '100%',\n+  tableContainer: {\n+    width: 'fit-content',\n+    minWidth: '100%',\n   },\n   row: {\n     height: 40,\n-    '&:nth-of-type(odd)': {\n+    '&.oddRow': {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5c0fb8e8a0f77ea695050cac690b17b39031b98"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwODg4ODYz", "url": "https://github.com/cdapio/cdap/pull/12410#pullrequestreview-450888863", "createdAt": "2020-07-17T18:56:55Z", "commit": {"oid": "f5c0fb8e8a0f77ea695050cac690b17b39031b98"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1919, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}