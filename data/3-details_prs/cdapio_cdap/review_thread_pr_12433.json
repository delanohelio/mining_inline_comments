{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyOTYyODQ0", "number": 12433, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjoxODo1MVrOERHpEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjoyMjoxMFrOERHvKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Mzg2NDQ5OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/SecureKeys/SecureKeyDetails/index.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjoxODo1MVrOG1p9lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODo0OToyN1rOG1vu_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkxNTIyMw==", "bodyText": "I don't think you need a copyToClipboard for description of the secure key. I think if you want to add this feature, it's better for the name, because that is what is going to be used in pipelines", "url": "https://github.com/cdapio/cdap/pull/12433#discussion_r458915223", "createdAt": "2020-07-22T16:18:51Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/SecureKeys/SecureKeyDetails/index.tsx", "diffHunk": "@@ -0,0 +1,168 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+\n+import ArrowBackIcon from '@material-ui/icons/ArrowBack';\n+import Button from '@material-ui/core/Button';\n+import Divider from '@material-ui/core/Divider';\n+import FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\n+import FormControl from '@material-ui/core/FormControl';\n+import IconButton from '@material-ui/core/IconButton';\n+import InputAdornment from '@material-ui/core/InputAdornment';\n+import Paper from '@material-ui/core/Paper';\n+import TextField from '@material-ui/core/TextField';\n+import classnames from 'classnames';\n+import { copyToClipBoard } from 'services/Clipboard';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    secureKeysTitle: {\n+      paddingTop: theme.spacing(1),\n+    },\n+    divider: {\n+      width: '100vw',\n+    },\n+    secureKeyDetails: {\n+      margin: `${theme.Spacing(3)}px 0px`,\n+      border: `1px solid ${theme.palette.grey[300]}`,\n+      borderRadius: '6px',\n+      padding: theme.spacing(3),\n+      display: 'grid',\n+      gridTemplateColumns: 'repeat(4, 1fr)',\n+    },\n+    keyID: {\n+      gridColumnStart: '1',\n+      gridColumnEnd: '2',\n+    },\n+    details: {\n+      gridColumnStart: '2',\n+      gridColumnEnd: '5',\n+    },\n+    secureKeyActionButton: {\n+      margin: theme.spacing(1),\n+      float: 'right',\n+    },\n+    secureKeyInput: {\n+      margin: `${theme.Spacing(1)}px 0px`,\n+      whiteSpace: 'nowrap',\n+      wordWrap: 'normal',\n+      paddingRight: '12px',\n+      letterSpacing: '.00625em',\n+      fontSize: '1rem',\n+      lineHeight: '1.5rem',\n+    },\n+  };\n+};\n+\n+interface ISecureKeysDetailsProps extends WithStyles<typeof styles> {\n+  state: any;\n+  onBackButtonClick: () => void;\n+  openDeleteDialog: (index: number) => void;\n+  openEditDialog: (index: number) => void;\n+}\n+\n+const SecureKeysDetailsView: React.FC<ISecureKeysDetailsProps> = ({\n+  classes,\n+  state,\n+  onBackButtonClick,\n+  openDeleteDialog,\n+  openEditDialog,\n+}) => {\n+  const { secureKeys, activeKeyIndex } = state;\n+\n+  const keyMetadata = secureKeys.get(activeKeyIndex);\n+\n+  return (\n+    <div>\n+      <h1 className={classes.secureKeysTitle}>\n+        <IconButton onClick={onBackButtonClick}>\n+          <ArrowBackIcon />\n+        </IconButton>\n+        {keyMetadata.get('name')}\n+      </h1>\n+      <Divider className={classes.divider} />\n+      <Paper className={classes.secureKeyDetails} elevation={0}>\n+        <div className={classes.keyID}>{keyMetadata.get('name')}</div>\n+        <div className={classes.details}>\n+          <FormControl\n+            fullWidth\n+            className={classnames(classes.margin, classes.textField)}\n+            variant=\"outlined\"\n+          >\n+            <TextField\n+              type={'text'}\n+              value={keyMetadata.get('description')}\n+              variant=\"filled\"\n+              className={classes.secureKeyInput}\n+              InputProps={{\n+                readOnly: true,\n+                endAdornment: (\n+                  <InputAdornment position=\"end\">\n+                    <IconButton onClick={() => copyToClipBoard(keyMetadata.get('description'))}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33a7b9fd2480d4adfa2caf4b8f94ba930e1d524e"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAwOTc5MQ==", "bodyText": "temporarily deleted Details view, may add it after further discussion with lea.", "url": "https://github.com/cdapio/cdap/pull/12433#discussion_r459009791", "createdAt": "2020-07-22T18:49:27Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/SecureKeys/SecureKeyDetails/index.tsx", "diffHunk": "@@ -0,0 +1,168 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+\n+import ArrowBackIcon from '@material-ui/icons/ArrowBack';\n+import Button from '@material-ui/core/Button';\n+import Divider from '@material-ui/core/Divider';\n+import FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\n+import FormControl from '@material-ui/core/FormControl';\n+import IconButton from '@material-ui/core/IconButton';\n+import InputAdornment from '@material-ui/core/InputAdornment';\n+import Paper from '@material-ui/core/Paper';\n+import TextField from '@material-ui/core/TextField';\n+import classnames from 'classnames';\n+import { copyToClipBoard } from 'services/Clipboard';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    secureKeysTitle: {\n+      paddingTop: theme.spacing(1),\n+    },\n+    divider: {\n+      width: '100vw',\n+    },\n+    secureKeyDetails: {\n+      margin: `${theme.Spacing(3)}px 0px`,\n+      border: `1px solid ${theme.palette.grey[300]}`,\n+      borderRadius: '6px',\n+      padding: theme.spacing(3),\n+      display: 'grid',\n+      gridTemplateColumns: 'repeat(4, 1fr)',\n+    },\n+    keyID: {\n+      gridColumnStart: '1',\n+      gridColumnEnd: '2',\n+    },\n+    details: {\n+      gridColumnStart: '2',\n+      gridColumnEnd: '5',\n+    },\n+    secureKeyActionButton: {\n+      margin: theme.spacing(1),\n+      float: 'right',\n+    },\n+    secureKeyInput: {\n+      margin: `${theme.Spacing(1)}px 0px`,\n+      whiteSpace: 'nowrap',\n+      wordWrap: 'normal',\n+      paddingRight: '12px',\n+      letterSpacing: '.00625em',\n+      fontSize: '1rem',\n+      lineHeight: '1.5rem',\n+    },\n+  };\n+};\n+\n+interface ISecureKeysDetailsProps extends WithStyles<typeof styles> {\n+  state: any;\n+  onBackButtonClick: () => void;\n+  openDeleteDialog: (index: number) => void;\n+  openEditDialog: (index: number) => void;\n+}\n+\n+const SecureKeysDetailsView: React.FC<ISecureKeysDetailsProps> = ({\n+  classes,\n+  state,\n+  onBackButtonClick,\n+  openDeleteDialog,\n+  openEditDialog,\n+}) => {\n+  const { secureKeys, activeKeyIndex } = state;\n+\n+  const keyMetadata = secureKeys.get(activeKeyIndex);\n+\n+  return (\n+    <div>\n+      <h1 className={classes.secureKeysTitle}>\n+        <IconButton onClick={onBackButtonClick}>\n+          <ArrowBackIcon />\n+        </IconButton>\n+        {keyMetadata.get('name')}\n+      </h1>\n+      <Divider className={classes.divider} />\n+      <Paper className={classes.secureKeyDetails} elevation={0}>\n+        <div className={classes.keyID}>{keyMetadata.get('name')}</div>\n+        <div className={classes.details}>\n+          <FormControl\n+            fullWidth\n+            className={classnames(classes.margin, classes.textField)}\n+            variant=\"outlined\"\n+          >\n+            <TextField\n+              type={'text'}\n+              value={keyMetadata.get('description')}\n+              variant=\"filled\"\n+              className={classes.secureKeyInput}\n+              InputProps={{\n+                readOnly: true,\n+                endAdornment: (\n+                  <InputAdornment position=\"end\">\n+                    <IconButton onClick={() => copyToClipBoard(keyMetadata.get('description'))}>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkxNTIyMw=="}, "originalCommit": {"oid": "33a7b9fd2480d4adfa2caf4b8f94ba930e1d524e"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Mzg3MzMzOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/SecureKeys/SecureKeyList/index.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjoyMDo1M1rOG1qDEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODo0MDoyMlrOG1vZzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkxNjYyNg==", "bodyText": "you might want to normalize the key and searchText first (ie. lower case them) so that the search is case insensitive", "url": "https://github.com/cdapio/cdap/pull/12433#discussion_r458916626", "createdAt": "2020-07-22T16:20:53Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/SecureKeys/SecureKeyList/index.tsx", "diffHunk": "@@ -93,25 +99,34 @@ interface ISecureKeyListProps extends WithStyles<typeof styles> {\n   state: any;\n   alertSuccess: () => void;\n   alertFailure: () => void;\n-  openDeleteDialog: (index: number) => void;\n   openEditDialog: (index: number) => void;\n+  openDeleteDialog: (index: number) => void;\n+  onSecureKeyDetailsClick: (index: number) => void;\n }\n \n const SecureKeyListView: React.FC<ISecureKeyListProps> = ({\n   classes,\n   state,\n   alertSuccess,\n   alertFailure,\n-  openDeleteDialog,\n   openEditDialog,\n+  openDeleteDialog,\n+  onSecureKeyDetailsClick,\n }) => {\n   const { secureKeys } = state;\n \n+  // used for filtering down secure keys\n+  const [searchText, setSearchText] = React.useState('');\n+\n   const [createDialogOpen, setCreateDialogOpen] = React.useState(false);\n \n+  const filteredSecureKeys = secureKeys.filter(\n+    (key) => key.get('name').includes(searchText) || key.get('description').includes(searchText)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33a7b9fd2480d4adfa2caf4b8f94ba930e1d524e"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAwNDM2Nw==", "bodyText": "done", "url": "https://github.com/cdapio/cdap/pull/12433#discussion_r459004367", "createdAt": "2020-07-22T18:40:22Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/SecureKeys/SecureKeyList/index.tsx", "diffHunk": "@@ -93,25 +99,34 @@ interface ISecureKeyListProps extends WithStyles<typeof styles> {\n   state: any;\n   alertSuccess: () => void;\n   alertFailure: () => void;\n-  openDeleteDialog: (index: number) => void;\n   openEditDialog: (index: number) => void;\n+  openDeleteDialog: (index: number) => void;\n+  onSecureKeyDetailsClick: (index: number) => void;\n }\n \n const SecureKeyListView: React.FC<ISecureKeyListProps> = ({\n   classes,\n   state,\n   alertSuccess,\n   alertFailure,\n-  openDeleteDialog,\n   openEditDialog,\n+  openDeleteDialog,\n+  onSecureKeyDetailsClick,\n }) => {\n   const { secureKeys } = state;\n \n+  // used for filtering down secure keys\n+  const [searchText, setSearchText] = React.useState('');\n+\n   const [createDialogOpen, setCreateDialogOpen] = React.useState(false);\n \n+  const filteredSecureKeys = secureKeys.filter(\n+    (key) => key.get('name').includes(searchText) || key.get('description').includes(searchText)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkxNjYyNg=="}, "originalCommit": {"oid": "33a7b9fd2480d4adfa2caf4b8f94ba930e1d524e"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Mzg4MDEwOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/SecureKeys/SecureKeyDetails/index.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjoyMjoxMFrOG1qHmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODozNzo1OFrOG1vUeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkxNzc4Ng==", "bodyText": "I don't think you need a details view for secure keys. Can the detail view and the edit mode be combined? There's not a lot of information needed to be shown", "url": "https://github.com/cdapio/cdap/pull/12433#discussion_r458917786", "createdAt": "2020-07-22T16:22:10Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/SecureKeys/SecureKeyDetails/index.tsx", "diffHunk": "@@ -0,0 +1,168 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+\n+import ArrowBackIcon from '@material-ui/icons/ArrowBack';\n+import Button from '@material-ui/core/Button';\n+import Divider from '@material-ui/core/Divider';\n+import FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\n+import FormControl from '@material-ui/core/FormControl';\n+import IconButton from '@material-ui/core/IconButton';\n+import InputAdornment from '@material-ui/core/InputAdornment';\n+import Paper from '@material-ui/core/Paper';\n+import TextField from '@material-ui/core/TextField';\n+import classnames from 'classnames';\n+import { copyToClipBoard } from 'services/Clipboard';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    secureKeysTitle: {\n+      paddingTop: theme.spacing(1),\n+    },\n+    divider: {\n+      width: '100vw',\n+    },\n+    secureKeyDetails: {\n+      margin: `${theme.Spacing(3)}px 0px`,\n+      border: `1px solid ${theme.palette.grey[300]}`,\n+      borderRadius: '6px',\n+      padding: theme.spacing(3),\n+      display: 'grid',\n+      gridTemplateColumns: 'repeat(4, 1fr)',\n+    },\n+    keyID: {\n+      gridColumnStart: '1',\n+      gridColumnEnd: '2',\n+    },\n+    details: {\n+      gridColumnStart: '2',\n+      gridColumnEnd: '5',\n+    },\n+    secureKeyActionButton: {\n+      margin: theme.spacing(1),\n+      float: 'right',\n+    },\n+    secureKeyInput: {\n+      margin: `${theme.Spacing(1)}px 0px`,\n+      whiteSpace: 'nowrap',\n+      wordWrap: 'normal',\n+      paddingRight: '12px',\n+      letterSpacing: '.00625em',\n+      fontSize: '1rem',\n+      lineHeight: '1.5rem',\n+    },\n+  };\n+};\n+\n+interface ISecureKeysDetailsProps extends WithStyles<typeof styles> {\n+  state: any;\n+  onBackButtonClick: () => void;\n+  openDeleteDialog: (index: number) => void;\n+  openEditDialog: (index: number) => void;\n+}\n+\n+const SecureKeysDetailsView: React.FC<ISecureKeysDetailsProps> = ({", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33a7b9fd2480d4adfa2caf4b8f94ba930e1d524e"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAwMzAwMQ==", "bodyText": "Will discuss with @leacd on this", "url": "https://github.com/cdapio/cdap/pull/12433#discussion_r459003001", "createdAt": "2020-07-22T18:37:58Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/SecureKeys/SecureKeyDetails/index.tsx", "diffHunk": "@@ -0,0 +1,168 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+\n+import ArrowBackIcon from '@material-ui/icons/ArrowBack';\n+import Button from '@material-ui/core/Button';\n+import Divider from '@material-ui/core/Divider';\n+import FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\n+import FormControl from '@material-ui/core/FormControl';\n+import IconButton from '@material-ui/core/IconButton';\n+import InputAdornment from '@material-ui/core/InputAdornment';\n+import Paper from '@material-ui/core/Paper';\n+import TextField from '@material-ui/core/TextField';\n+import classnames from 'classnames';\n+import { copyToClipBoard } from 'services/Clipboard';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    secureKeysTitle: {\n+      paddingTop: theme.spacing(1),\n+    },\n+    divider: {\n+      width: '100vw',\n+    },\n+    secureKeyDetails: {\n+      margin: `${theme.Spacing(3)}px 0px`,\n+      border: `1px solid ${theme.palette.grey[300]}`,\n+      borderRadius: '6px',\n+      padding: theme.spacing(3),\n+      display: 'grid',\n+      gridTemplateColumns: 'repeat(4, 1fr)',\n+    },\n+    keyID: {\n+      gridColumnStart: '1',\n+      gridColumnEnd: '2',\n+    },\n+    details: {\n+      gridColumnStart: '2',\n+      gridColumnEnd: '5',\n+    },\n+    secureKeyActionButton: {\n+      margin: theme.spacing(1),\n+      float: 'right',\n+    },\n+    secureKeyInput: {\n+      margin: `${theme.Spacing(1)}px 0px`,\n+      whiteSpace: 'nowrap',\n+      wordWrap: 'normal',\n+      paddingRight: '12px',\n+      letterSpacing: '.00625em',\n+      fontSize: '1rem',\n+      lineHeight: '1.5rem',\n+    },\n+  };\n+};\n+\n+interface ISecureKeysDetailsProps extends WithStyles<typeof styles> {\n+  state: any;\n+  onBackButtonClick: () => void;\n+  openDeleteDialog: (index: number) => void;\n+  openEditDialog: (index: number) => void;\n+}\n+\n+const SecureKeysDetailsView: React.FC<ISecureKeysDetailsProps> = ({", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkxNzc4Ng=="}, "originalCommit": {"oid": "33a7b9fd2480d4adfa2caf4b8f94ba930e1d524e"}, "originalPosition": 80}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3326, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}