{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1OTIyNjE1", "number": 12489, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMToxNToyMVrOERnlEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMToxODoxMVrOERnoSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTA5NzEzOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/AbstractWidget/MultiStageSelector/index.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMToxNToyMVrOG2b1Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMToxODo0M1rOG2b7DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMjI1NA==", "bodyText": "Should this be optional?", "url": "https://github.com/cdapio/cdap/pull/12489#discussion_r459732254", "createdAt": "2020-07-23T21:15:21Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/MultiStageSelector/index.tsx", "diffHunk": "@@ -36,6 +37,7 @@ const styles = () => {\n \n interface IMultiStageSelectorWidgetProps {\n   delimiter: string;\n+  singleSelectOnly: boolean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b351df20198c12eee20e21c341174964253d58f8"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMzc3Mg==", "bodyText": "I think so, but I was following the convention for delimiter. I think thats technically an optional parameter (at least it is for the underlying MultiSelect) but we didnt mark it as optional here. Wasnt sure if that was important somehow. I can make it optional.", "url": "https://github.com/cdapio/cdap/pull/12489#discussion_r459733772", "createdAt": "2020-07-23T21:18:43Z", "author": {"login": "MEseifan"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/MultiStageSelector/index.tsx", "diffHunk": "@@ -36,6 +37,7 @@ const styles = () => {\n \n interface IMultiStageSelectorWidgetProps {\n   delimiter: string;\n+  singleSelectOnly: boolean;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMjI1NA=="}, "originalCommit": {"oid": "b351df20198c12eee20e21c341174964253d58f8"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTA5ODUyOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/AbstractWidget/MultiStageSelector/index.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMToxNTo0OVrOG2b18g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMToxOTowNFrOG2b7tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMjQ2Ng==", "bodyText": "I don't think we need the \"or\" logic here.", "url": "https://github.com/cdapio/cdap/pull/12489#discussion_r459732466", "createdAt": "2020-07-23T21:15:49Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/MultiStageSelector/index.tsx", "diffHunk": "@@ -58,28 +60,44 @@ const MultiStageSelectorBase: React.FC<IMultiStageSelectorProps> = ({\n }) => {\n   const inputSchema = objectQuery(extraConfig, 'inputSchema');\n   const inputStages = getInputStages(inputSchema);\n-  const { delimiter } = widgetProps;\n-  const multiSelectWidgetProps = {\n-    delimiter,\n-    options: inputStages,\n-    showSelectionCount: false,\n-    emptyPlaceholder: 'Select input stage',\n-  };\n+  const { delimiter, singleSelectOnly } = widgetProps;\n+\n   if (!inputStages.length) {\n     return (\n       <div className={classes.emptyMessageContainer}>\n         <div className={classes.emptyMessage}>No input stages</div>\n       </div>\n     );\n   }\n-  return (\n-    <MultiSelect\n-      value={value}\n-      onChange={onChange}\n-      widgetProps={multiSelectWidgetProps}\n-      disabled={disabled}\n-    />\n-  );\n+\n+  if (singleSelectOnly || false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b351df20198c12eee20e21c341174964253d58f8"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMzk0MQ==", "bodyText": "right...thanks!", "url": "https://github.com/cdapio/cdap/pull/12489#discussion_r459733941", "createdAt": "2020-07-23T21:19:04Z", "author": {"login": "MEseifan"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/MultiStageSelector/index.tsx", "diffHunk": "@@ -58,28 +60,44 @@ const MultiStageSelectorBase: React.FC<IMultiStageSelectorProps> = ({\n }) => {\n   const inputSchema = objectQuery(extraConfig, 'inputSchema');\n   const inputStages = getInputStages(inputSchema);\n-  const { delimiter } = widgetProps;\n-  const multiSelectWidgetProps = {\n-    delimiter,\n-    options: inputStages,\n-    showSelectionCount: false,\n-    emptyPlaceholder: 'Select input stage',\n-  };\n+  const { delimiter, singleSelectOnly } = widgetProps;\n+\n   if (!inputStages.length) {\n     return (\n       <div className={classes.emptyMessageContainer}>\n         <div className={classes.emptyMessage}>No input stages</div>\n       </div>\n     );\n   }\n-  return (\n-    <MultiSelect\n-      value={value}\n-      onChange={onChange}\n-      widgetProps={multiSelectWidgetProps}\n-      disabled={disabled}\n-    />\n-  );\n+\n+  if (singleSelectOnly || false) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMjQ2Ng=="}, "originalCommit": {"oid": "b351df20198c12eee20e21c341174964253d58f8"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTEwMDQ5OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/AbstractWidget/MultiStageSelector/index.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMToxNjozMlrOG2b3MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMToxNjozMlrOG2b3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMjc4NQ==", "bodyText": "nit: if singleSelectOnly value is not provided set it to false here like this,\nconst { delimiter, singleSelectOnly = false } = widgetProps;", "url": "https://github.com/cdapio/cdap/pull/12489#discussion_r459732785", "createdAt": "2020-07-23T21:16:32Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/MultiStageSelector/index.tsx", "diffHunk": "@@ -58,28 +60,44 @@ const MultiStageSelectorBase: React.FC<IMultiStageSelectorProps> = ({\n }) => {\n   const inputSchema = objectQuery(extraConfig, 'inputSchema');\n   const inputStages = getInputStages(inputSchema);\n-  const { delimiter } = widgetProps;\n-  const multiSelectWidgetProps = {\n-    delimiter,\n-    options: inputStages,\n-    showSelectionCount: false,\n-    emptyPlaceholder: 'Select input stage',\n-  };\n+  const { delimiter, singleSelectOnly } = widgetProps;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b351df20198c12eee20e21c341174964253d58f8"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTEwNTM2OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/AbstractWidget/MultiStageSelector/index.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMToxODoxMVrOG2b6Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMToyNzozMFrOG2cLVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMzU1OA==", "bodyText": "Can we reuse the same getInputStages function here?", "url": "https://github.com/cdapio/cdap/pull/12489#discussion_r459733558", "createdAt": "2020-07-23T21:18:11Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/MultiStageSelector/index.tsx", "diffHunk": "@@ -58,28 +60,44 @@ const MultiStageSelectorBase: React.FC<IMultiStageSelectorProps> = ({\n }) => {\n   const inputSchema = objectQuery(extraConfig, 'inputSchema');\n   const inputStages = getInputStages(inputSchema);\n-  const { delimiter } = widgetProps;\n-  const multiSelectWidgetProps = {\n-    delimiter,\n-    options: inputStages,\n-    showSelectionCount: false,\n-    emptyPlaceholder: 'Select input stage',\n-  };\n+  const { delimiter, singleSelectOnly } = widgetProps;\n+\n   if (!inputStages.length) {\n     return (\n       <div className={classes.emptyMessageContainer}>\n         <div className={classes.emptyMessage}>No input stages</div>\n       </div>\n     );\n   }\n-  return (\n-    <MultiSelect\n-      value={value}\n-      onChange={onChange}\n-      widgetProps={multiSelectWidgetProps}\n-      disabled={disabled}\n-    />\n-  );\n+\n+  if (singleSelectOnly || false) {\n+    const selectWidgetProps = {\n+      options: inputStages.map((stage) => stage.label),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b351df20198c12eee20e21c341174964253d58f8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczNTU3Ng==", "bodyText": "not quite...Multselect expects options to be {'id': '.', 'value': '.'} meanwhile Select expects  {'label': '.', 'value': '.'} so I would need to move this logic into that function anyway to change the format", "url": "https://github.com/cdapio/cdap/pull/12489#discussion_r459735576", "createdAt": "2020-07-23T21:22:26Z", "author": {"login": "MEseifan"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/MultiStageSelector/index.tsx", "diffHunk": "@@ -58,28 +60,44 @@ const MultiStageSelectorBase: React.FC<IMultiStageSelectorProps> = ({\n }) => {\n   const inputSchema = objectQuery(extraConfig, 'inputSchema');\n   const inputStages = getInputStages(inputSchema);\n-  const { delimiter } = widgetProps;\n-  const multiSelectWidgetProps = {\n-    delimiter,\n-    options: inputStages,\n-    showSelectionCount: false,\n-    emptyPlaceholder: 'Select input stage',\n-  };\n+  const { delimiter, singleSelectOnly } = widgetProps;\n+\n   if (!inputStages.length) {\n     return (\n       <div className={classes.emptyMessageContainer}>\n         <div className={classes.emptyMessage}>No input stages</div>\n       </div>\n     );\n   }\n-  return (\n-    <MultiSelect\n-      value={value}\n-      onChange={onChange}\n-      widgetProps={multiSelectWidgetProps}\n-      disabled={disabled}\n-    />\n-  );\n+\n+  if (singleSelectOnly || false) {\n+    const selectWidgetProps = {\n+      options: inputStages.map((stage) => stage.label),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMzU1OA=="}, "originalCommit": {"oid": "b351df20198c12eee20e21c341174964253d58f8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczNzk0MQ==", "bodyText": "Haa! That's a bad API. Ok can you file a jira for this. It's ok to merge now but that's bad.", "url": "https://github.com/cdapio/cdap/pull/12489#discussion_r459737941", "createdAt": "2020-07-23T21:27:30Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/MultiStageSelector/index.tsx", "diffHunk": "@@ -58,28 +60,44 @@ const MultiStageSelectorBase: React.FC<IMultiStageSelectorProps> = ({\n }) => {\n   const inputSchema = objectQuery(extraConfig, 'inputSchema');\n   const inputStages = getInputStages(inputSchema);\n-  const { delimiter } = widgetProps;\n-  const multiSelectWidgetProps = {\n-    delimiter,\n-    options: inputStages,\n-    showSelectionCount: false,\n-    emptyPlaceholder: 'Select input stage',\n-  };\n+  const { delimiter, singleSelectOnly } = widgetProps;\n+\n   if (!inputStages.length) {\n     return (\n       <div className={classes.emptyMessageContainer}>\n         <div className={classes.emptyMessage}>No input stages</div>\n       </div>\n     );\n   }\n-  return (\n-    <MultiSelect\n-      value={value}\n-      onChange={onChange}\n-      widgetProps={multiSelectWidgetProps}\n-      disabled={disabled}\n-    />\n-  );\n+\n+  if (singleSelectOnly || false) {\n+    const selectWidgetProps = {\n+      options: inputStages.map((stage) => stage.label),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMzU1OA=="}, "originalCommit": {"oid": "b351df20198c12eee20e21c341174964253d58f8"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3242, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}