{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMDY1NTEx", "number": 12808, "title": "[CDAP-17336] Fixes schema editor to handle disabled schema in studio", "bodyText": "Fixes schema editor to handle non-editable-schema-editor in pipeline studio.\nFixes to handle \"No Schema\" in plugin that explicitly sets no schema.\nFixes Schema editor to handle schema propagation to error collectors.\n\nThis failed before as propagate schema propagates input schema of previous node to error collector\ninput schema can be string which causes issues with plugin schema editor.\n\n\n\nJIRA - https://issues.cask.co/browse/CDAP-17336#L2121-L2122]\nE2E test - https://builds.cask.co/browse/IT-UPD2197-1\nBuild - https://builds.cask.co/browse/CDAP-URUT350-1", "createdAt": "2020-10-13T07:38:28Z", "url": "https://github.com/cdapio/cdap/pull/12808", "merged": true, "mergeCommit": {"oid": "81385d17ac42a338e19ac92f7980f5c2673f3d72"}, "closed": true, "closedAt": "2020-11-13T21:29:06Z", "author": {"login": "ajainarayanan"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYuQijgFqTUyMjEyOTI4NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZSR7egBqjM5NTg5ODE2MTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMTI5Mjg0", "url": "https://github.com/cdapio/cdap/pull/12808#pullrequestreview-522129284", "createdAt": "2020-11-03T00:42:34Z", "commit": {"oid": "81df59d5808d6a8f0ee6ac0648abbf1cbdc4501c"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMDo0MjozNFrOHscgDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMDo0Mjo1OVrOHscgug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM2NjM0OQ==", "bodyText": "should this return true? if there's an issue then no schema is available", "url": "https://github.com/cdapio/cdap/pull/12808#discussion_r516366349", "createdAt": "2020-11-03T00:42:34Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/SchemaEditor/SchemaHelpers.ts", "diffHunk": "@@ -177,6 +178,21 @@ const isFlatRowTypeComplex = (typeName: AvroSchemaTypesEnum) => {\n   }\n };\n \n+const isNoSchemaAvailable = (schema) => {\n+  let avroSchema = schema;\n+  if (avroSchema) {\n+    avroSchema = avroSchema.schema;\n+    if (typeof avroSchema === 'string') {\n+      try {\n+        avroSchema = JSON.parse(avroSchema);\n+      } catch (e) {\n+        return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81df59d5808d6a8f0ee6ac0648abbf1cbdc4501c"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM2NjUyMg==", "bodyText": "might have to do a return true outside of this if statement?", "url": "https://github.com/cdapio/cdap/pull/12808#discussion_r516366522", "createdAt": "2020-11-03T00:42:59Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/SchemaEditor/SchemaHelpers.ts", "diffHunk": "@@ -177,6 +178,21 @@ const isFlatRowTypeComplex = (typeName: AvroSchemaTypesEnum) => {\n   }\n };\n \n+const isNoSchemaAvailable = (schema) => {\n+  let avroSchema = schema;\n+  if (avroSchema) {\n+    avroSchema = avroSchema.schema;\n+    if (typeof avroSchema === 'string') {\n+      try {\n+        avroSchema = JSON.parse(avroSchema);\n+      } catch (e) {\n+        return false;\n+      }\n+    }\n+    return !objectQuery(avroSchema, 'fields', 'length');\n+  }\n+};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81df59d5808d6a8f0ee6ac0648abbf1cbdc4501c"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMTM0MTI2", "url": "https://github.com/cdapio/cdap/pull/12808#pullrequestreview-522134126", "createdAt": "2020-11-03T00:59:23Z", "commit": {"oid": "81df59d5808d6a8f0ee6ac0648abbf1cbdc4501c"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMDo1OToyM1rOHsc_uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMTowNDoyMVrOHsdJAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM3NDQ1OQ==", "bodyText": "Nit: I18n?", "url": "https://github.com/cdapio/cdap/pull/12808#discussion_r516374459", "createdAt": "2020-11-03T00:59:23Z", "author": {"login": "njbriggs"}, "path": "cdap-ui/app/cdap/components/PluginSchemaEditor/index.tsx", "diffHunk": "@@ -387,35 +427,42 @@ class PluginSchemaEditorBase extends React.PureComponent<\n       } else {\n         newSchema.schema = s.schema;\n       }\n+      if (isNoSchemaAvailable(newSchema)) {\n+        newSchema.schema = `No ${this.props.schemaTitle} available`;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81df59d5808d6a8f0ee6ac0648abbf1cbdc4501c"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM3NjgzNA==", "bodyText": "Nit: In other places, I've seen a preference for putting the \"truthy\" condition earlier in the ternary (i.e., this would be !!returnSchema.fields.length ? returnSchema : getDefaultEmptyAvroSchema()). Do we have a preference here?", "url": "https://github.com/cdapio/cdap/pull/12808#discussion_r516376834", "createdAt": "2020-11-03T01:04:21Z", "author": {"login": "njbriggs"}, "path": "cdap-ui/app/cdap/components/PluginSchemaEditor/index.tsx", "diffHunk": "@@ -373,6 +396,23 @@ class PluginSchemaEditorBase extends React.PureComponent<\n   };\n \n   private santizeSchemasForEditor = (schemas = this.props.schemas): ISchemaType[] => {\n+    if (typeof schemas === 'string') {\n+      let returnSchema;\n+      try {\n+        returnSchema = JSON.parse(schemas);\n+      } catch (e) {\n+        return [{ ...getDefaultEmptyAvroSchema() }];\n+      }\n+      if (!returnSchema.schema) {\n+        return [\n+          {\n+            name: 'etlSchemaBody',\n+            schema: !returnSchema.fields.length ? getDefaultEmptyAvroSchema() : returnSchema,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81df59d5808d6a8f0ee6ac0648abbf1cbdc4501c"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e2fc34a43fb1e1f5ec8e7982c3850ff30ff640d", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/5e2fc34a43fb1e1f5ec8e7982c3850ff30ff640d", "committedDate": "2020-11-04T18:42:39Z", "message": "[CDAP-17336] Fixes schema editor to handle disabled schema in studio\n\n  - Fixes new schema editor to be disabled for implicit schemas\n  - Adds helper function to determine if no schema is available\n  - Fixes plugin schema editor to handle no schema to show the right message\n  - Fixes Actions dropdown in output schema to have right options for implicit schema\n  - Fixes plugin schema editor to handle schema as string (happens when users propagte schema)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "81df59d5808d6a8f0ee6ac0648abbf1cbdc4501c", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/81df59d5808d6a8f0ee6ac0648abbf1cbdc4501c", "committedDate": "2020-10-13T07:36:53Z", "message": "Fixes plugin schema editor to handle schema as string (happens when users propagte schema)"}, "afterCommit": {"oid": "5e2fc34a43fb1e1f5ec8e7982c3850ff30ff640d", "author": {"user": {"login": "ajainarayanan", "name": "Ajai"}}, "url": "https://github.com/cdapio/cdap/commit/5e2fc34a43fb1e1f5ec8e7982c3850ff30ff640d", "committedDate": "2020-11-04T18:42:39Z", "message": "[CDAP-17336] Fixes schema editor to handle disabled schema in studio\n\n  - Fixes new schema editor to be disabled for implicit schemas\n  - Adds helper function to determine if no schema is available\n  - Fixes plugin schema editor to handle no schema to show the right message\n  - Fixes Actions dropdown in output schema to have right options for implicit schema\n  - Fixes plugin schema editor to handle schema as string (happens when users propagte schema)"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1689, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}