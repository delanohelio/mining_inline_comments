{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NjgzOTU4", "number": 12098, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjozMTozM1rOD0UiHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNzo1NDozN1rOD0XA7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTg4OTU5OnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/distributed/DistributedProgramRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjozMTozM1rOGJNT-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjozMTozM1rOGJNT-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMwODQ3NA==", "bodyText": "Should it be ISOLATED?", "url": "https://github.com/cdapio/cdap/pull/12098#discussion_r412308474", "createdAt": "2020-04-21T16:31:33Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/distributed/DistributedProgramRunner.java", "diffHunk": "@@ -194,6 +194,10 @@ public final ProgramController run(final Program program, ProgramOptions oldOpti\n                                                          cConf.get(Constants.AppFabric.TEMP_DIR)).getAbsoluteFile());\n     try {\n       final ProgramLaunchConfig launchConfig = new ProgramLaunchConfig();\n+      if (clusterMode == ClusterMode.ON_PREMISE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6510f356059f7ac60f71815a5a25a3a682c02a1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTk5MjQ4OnYy", "diffSide": "RIGHT", "path": "cdap-spark-core-base/src/main/java/io/cdap/cdap/app/runtime/spark/distributed/DistributedSparkProgramRunner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjo1MjoxMVrOGJOPaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjo1MjozOVrOGJORIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMyMzY4OA==", "bodyText": "Why only for spark runner?", "url": "https://github.com/cdapio/cdap/pull/12098#discussion_r412323688", "createdAt": "2020-04-21T16:52:11Z", "author": {"login": "chtyim"}, "path": "cdap-spark-core-base/src/main/java/io/cdap/cdap/app/runtime/spark/distributed/DistributedSparkProgramRunner.java", "diffHunk": "@@ -137,15 +140,24 @@ protected void setupLaunchConfig(ProgramLaunchConfig launchConfig, Program progr\n     ApplicationSpecification appSpec = program.getApplicationSpecification();\n     SparkSpecification spec = appSpec.getSpark().get(program.getName());\n \n-    Map<String, String> clientArgs = RuntimeArguments.extractScope(\"task\", \"client\",\n-                                                                   options.getUserArguments().asMap());\n+    Arguments userArguments = options.getUserArguments();\n+    Map<String, String> clientArgs = RuntimeArguments.extractScope(\"task\", \"client\", userArguments.asMap());\n     // Add runnable. Only one instance for the spark client\n     launchConfig.addRunnable(spec.getName(), new SparkTwillRunnable(spec.getName()), 1,\n                              clientArgs, spec.getClientResources(), 0);\n \n     Map<String, String> extraEnv = new HashMap<>();\n     extraEnv.put(Constants.SPARK_COMPAT_ENV, sparkCompat.getCompat());\n \n+    if (userArguments.hasOption(SystemArguments.RUNTIME_MANAGER_TYPE) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6510f356059f7ac60f71815a5a25a3a682c02a1"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMyNDEzMA==", "bodyText": "Also, it shouldn't matter of the launch type.", "url": "https://github.com/cdapio/cdap/pull/12098#discussion_r412324130", "createdAt": "2020-04-21T16:52:39Z", "author": {"login": "chtyim"}, "path": "cdap-spark-core-base/src/main/java/io/cdap/cdap/app/runtime/spark/distributed/DistributedSparkProgramRunner.java", "diffHunk": "@@ -137,15 +140,24 @@ protected void setupLaunchConfig(ProgramLaunchConfig launchConfig, Program progr\n     ApplicationSpecification appSpec = program.getApplicationSpecification();\n     SparkSpecification spec = appSpec.getSpark().get(program.getName());\n \n-    Map<String, String> clientArgs = RuntimeArguments.extractScope(\"task\", \"client\",\n-                                                                   options.getUserArguments().asMap());\n+    Arguments userArguments = options.getUserArguments();\n+    Map<String, String> clientArgs = RuntimeArguments.extractScope(\"task\", \"client\", userArguments.asMap());\n     // Add runnable. Only one instance for the spark client\n     launchConfig.addRunnable(spec.getName(), new SparkTwillRunnable(spec.getName()), 1,\n                              clientArgs, spec.getClientResources(), 0);\n \n     Map<String, String> extraEnv = new HashMap<>();\n     extraEnv.put(Constants.SPARK_COMPAT_ENV, sparkCompat.getCompat());\n \n+    if (userArguments.hasOption(SystemArguments.RUNTIME_MANAGER_TYPE) &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMyMzY4OA=="}, "originalCommit": {"oid": "a6510f356059f7ac60f71815a5a25a3a682c02a1"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MjI5NjE1OnYy", "diffSide": "RIGHT", "path": "cdap-spark-core-base/src/main/java/io/cdap/cdap/app/runtime/spark/distributed/DistributedSparkProgramRunner.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNzo1NDozN1rOGJRB5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMDowMjo1NFrOGJdfcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM2OTM4Mw==", "bodyText": "What is this for?", "url": "https://github.com/cdapio/cdap/pull/12098#discussion_r412369383", "createdAt": "2020-04-21T17:54:37Z", "author": {"login": "chtyim"}, "path": "cdap-spark-core-base/src/main/java/io/cdap/cdap/app/runtime/spark/distributed/DistributedSparkProgramRunner.java", "diffHunk": "@@ -137,15 +140,24 @@ protected void setupLaunchConfig(ProgramLaunchConfig launchConfig, Program progr\n     ApplicationSpecification appSpec = program.getApplicationSpecification();\n     SparkSpecification spec = appSpec.getSpark().get(program.getName());\n \n-    Map<String, String> clientArgs = RuntimeArguments.extractScope(\"task\", \"client\",\n-                                                                   options.getUserArguments().asMap());\n+    Arguments userArguments = options.getUserArguments();\n+    Map<String, String> clientArgs = RuntimeArguments.extractScope(\"task\", \"client\", userArguments.asMap());\n     // Add runnable. Only one instance for the spark client\n     launchConfig.addRunnable(spec.getName(), new SparkTwillRunnable(spec.getName()), 1,\n                              clientArgs, spec.getClientResources(), 0);\n \n     Map<String, String> extraEnv = new HashMap<>();\n     extraEnv.put(Constants.SPARK_COMPAT_ENV, sparkCompat.getCompat());\n \n+    if (!userArguments.hasOption(SystemArguments.RUNTIME_MANAGER_TYPE) ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2dd9de5c8e34cb98c1670a8a27bd14b5d4faf9e"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU0MDMzOQ==", "bodyText": "Had offline discussion about this condition. Made changes as per the discussion. Testing manually now.", "url": "https://github.com/cdapio/cdap/pull/12098#discussion_r412540339", "createdAt": "2020-04-21T22:40:49Z", "author": {"login": "CuriousVini"}, "path": "cdap-spark-core-base/src/main/java/io/cdap/cdap/app/runtime/spark/distributed/DistributedSparkProgramRunner.java", "diffHunk": "@@ -137,15 +140,24 @@ protected void setupLaunchConfig(ProgramLaunchConfig launchConfig, Program progr\n     ApplicationSpecification appSpec = program.getApplicationSpecification();\n     SparkSpecification spec = appSpec.getSpark().get(program.getName());\n \n-    Map<String, String> clientArgs = RuntimeArguments.extractScope(\"task\", \"client\",\n-                                                                   options.getUserArguments().asMap());\n+    Arguments userArguments = options.getUserArguments();\n+    Map<String, String> clientArgs = RuntimeArguments.extractScope(\"task\", \"client\", userArguments.asMap());\n     // Add runnable. Only one instance for the spark client\n     launchConfig.addRunnable(spec.getName(), new SparkTwillRunnable(spec.getName()), 1,\n                              clientArgs, spec.getClientResources(), 0);\n \n     Map<String, String> extraEnv = new HashMap<>();\n     extraEnv.put(Constants.SPARK_COMPAT_ENV, sparkCompat.getCompat());\n \n+    if (!userArguments.hasOption(SystemArguments.RUNTIME_MANAGER_TYPE) ||", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM2OTM4Mw=="}, "originalCommit": {"oid": "e2dd9de5c8e34cb98c1670a8a27bd14b5d4faf9e"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU3MzU1Mg==", "bodyText": "Had offline discussion about this condition. Made changes as per the discussion. Testing manually now.", "url": "https://github.com/cdapio/cdap/pull/12098#discussion_r412573552", "createdAt": "2020-04-22T00:02:54Z", "author": {"login": "CuriousVini"}, "path": "cdap-spark-core-base/src/main/java/io/cdap/cdap/app/runtime/spark/distributed/DistributedSparkProgramRunner.java", "diffHunk": "@@ -137,15 +140,24 @@ protected void setupLaunchConfig(ProgramLaunchConfig launchConfig, Program progr\n     ApplicationSpecification appSpec = program.getApplicationSpecification();\n     SparkSpecification spec = appSpec.getSpark().get(program.getName());\n \n-    Map<String, String> clientArgs = RuntimeArguments.extractScope(\"task\", \"client\",\n-                                                                   options.getUserArguments().asMap());\n+    Arguments userArguments = options.getUserArguments();\n+    Map<String, String> clientArgs = RuntimeArguments.extractScope(\"task\", \"client\", userArguments.asMap());\n     // Add runnable. Only one instance for the spark client\n     launchConfig.addRunnable(spec.getName(), new SparkTwillRunnable(spec.getName()), 1,\n                              clientArgs, spec.getClientResources(), 0);\n \n     Map<String, String> extraEnv = new HashMap<>();\n     extraEnv.put(Constants.SPARK_COMPAT_ENV, sparkCompat.getCompat());\n \n+    if (!userArguments.hasOption(SystemArguments.RUNTIME_MANAGER_TYPE) ||", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM2OTM4Mw=="}, "originalCommit": {"oid": "e2dd9de5c8e34cb98c1670a8a27bd14b5d4faf9e"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2766, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}