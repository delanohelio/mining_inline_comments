{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyNTgxNTky", "number": 12830, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwMTozOTo0MFrOEzjJnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMjowOToyMFrOEz-eDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNDg4NzMyOnYy", "diffSide": "RIGHT", "path": "cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwMTozOTo0MFrOHq1W_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDoxNDoyMlrOHretFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY3NjQ3OQ==", "bodyText": "Have one function per line to have a cleaner look:\nappSpec.getPlugins().values().stream()\n  .map(Plugin::getPluginClass)\n  .map(PluginClass::getRequirements)\n  .map(Requirements::getAccelerators)\n  .flatMap(Set::stream)\n  .collect(Collectors.toSet());", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r514676479", "createdAt": "2020-10-30T01:39:40Z", "author": {"login": "chtyim"}, "path": "cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java", "diffHunk": "@@ -72,9 +78,27 @@ public AppSystemMetadataWriter(MetadataServiceClient metadataServiceClient, Appl\n         existingPluginClasses.add(plugin.getPluginClass());\n       }\n     }\n+    addAccelerators(appSpec, applicationClass, properties);\n     return properties.build();\n   }\n \n+  private void addAccelerators(ApplicationSpecification appSpec,\n+                               ApplicationClass applicationClass,\n+                               ImmutableMap.Builder<String, String> properties) {\n+    //add from all plugins\n+    Set<String> acceleratorSet = appSpec.getPlugins().values().stream().map(Plugin::getPluginClass)\n+      .map(PluginClass::getRequirements).map(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8edacdfb0123fa1b519f6ab2bde9ac98ba0fa9c3"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1Mzg3OQ==", "bodyText": "Done", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r515353879", "createdAt": "2020-10-30T20:14:22Z", "author": {"login": "greeshmaswaminathan"}, "path": "cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java", "diffHunk": "@@ -72,9 +78,27 @@ public AppSystemMetadataWriter(MetadataServiceClient metadataServiceClient, Appl\n         existingPluginClasses.add(plugin.getPluginClass());\n       }\n     }\n+    addAccelerators(appSpec, applicationClass, properties);\n     return properties.build();\n   }\n \n+  private void addAccelerators(ApplicationSpecification appSpec,\n+                               ApplicationClass applicationClass,\n+                               ImmutableMap.Builder<String, String> properties) {\n+    //add from all plugins\n+    Set<String> acceleratorSet = appSpec.getPlugins().values().stream().map(Plugin::getPluginClass)\n+      .map(PluginClass::getRequirements).map(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY3NjQ3OQ=="}, "originalCommit": {"oid": "8edacdfb0123fa1b519f6ab2bde9ac98ba0fa9c3"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNDg5MDEwOnYy", "diffSide": "RIGHT", "path": "cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwMTo0MDowOFrOHq1Y4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDoyMDozMFrOHre24g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY3Njk2MA==", "bodyText": "It won't be null, right?", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r514676960", "createdAt": "2020-10-30T01:40:08Z", "author": {"login": "chtyim"}, "path": "cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java", "diffHunk": "@@ -72,9 +78,27 @@ public AppSystemMetadataWriter(MetadataServiceClient metadataServiceClient, Appl\n         existingPluginClasses.add(plugin.getPluginClass());\n       }\n     }\n+    addAccelerators(appSpec, applicationClass, properties);\n     return properties.build();\n   }\n \n+  private void addAccelerators(ApplicationSpecification appSpec,\n+                               ApplicationClass applicationClass,\n+                               ImmutableMap.Builder<String, String> properties) {\n+    //add from all plugins\n+    Set<String> acceleratorSet = appSpec.getPlugins().values().stream().map(Plugin::getPluginClass)\n+      .map(PluginClass::getRequirements).map(\n+        Requirements::getAccelerators).flatMap(Set::stream)\n+      .collect(Collectors.toSet());\n+    //add from application\n+    acceleratorSet.addAll(applicationClass.getRequirements().getAccelerators());\n+    String acceleratorsValue = String.join(\",\", acceleratorSet);\n+    if (acceleratorsValue == null || acceleratorsValue.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8edacdfb0123fa1b519f6ab2bde9ac98ba0fa9c3"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1NjM4Ng==", "bodyText": "Yes :) . Changed to size check for the set.", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r515356386", "createdAt": "2020-10-30T20:20:30Z", "author": {"login": "greeshmaswaminathan"}, "path": "cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java", "diffHunk": "@@ -72,9 +78,27 @@ public AppSystemMetadataWriter(MetadataServiceClient metadataServiceClient, Appl\n         existingPluginClasses.add(plugin.getPluginClass());\n       }\n     }\n+    addAccelerators(appSpec, applicationClass, properties);\n     return properties.build();\n   }\n \n+  private void addAccelerators(ApplicationSpecification appSpec,\n+                               ApplicationClass applicationClass,\n+                               ImmutableMap.Builder<String, String> properties) {\n+    //add from all plugins\n+    Set<String> acceleratorSet = appSpec.getPlugins().values().stream().map(Plugin::getPluginClass)\n+      .map(PluginClass::getRequirements).map(\n+        Requirements::getAccelerators).flatMap(Set::stream)\n+      .collect(Collectors.toSet());\n+    //add from application\n+    acceleratorSet.addAll(applicationClass.getRequirements().getAccelerators());\n+    String acceleratorsValue = String.join(\",\", acceleratorSet);\n+    if (acceleratorsValue == null || acceleratorsValue.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY3Njk2MA=="}, "originalCommit": {"oid": "8edacdfb0123fa1b519f6ab2bde9ac98ba0fa9c3"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNDkxMDk4OnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/test/java/io/cdap/cdap/internal/app/services/ApplicationLifecycleServiceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwMTo0NDoxNFrOHq1nkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDoxODoxOFrOHrezPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY4MDcyMQ==", "bodyText": "Have it on one line. programId -> { }", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r514680721", "createdAt": "2020-10-30T01:44:14Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/test/java/io/cdap/cdap/internal/app/services/ApplicationLifecycleServiceTest.java", "diffHunk": "@@ -128,6 +148,34 @@ public void testAppDeletionMultipleNS() throws Exception {\n     deleteAppAndData(testNSAppId);\n   }\n \n+  @Test\n+  public void testAcceleratorMetaDataDeletion() throws Exception {\n+    Id.Artifact artifactId = Id.Artifact\n+      .from(Id.Namespace.DEFAULT, AppWithWorkflow.class.getSimpleName(), \"1.0.0-SNAPSHOT\");\n+    Location appJar = AppJarHelper.createDeploymentJar(locationFactory, AppWithWorkflow.class);\n+    File appJarFile = new File(tmpFolder.newFolder(),\n+                               String.format(\"%s-%s.jar\", artifactId.getName(), artifactId.getVersion().getVersion()));\n+    Files.copy(Locations.newInputSupplier(appJar), appJarFile);\n+    appJar.delete();\n+\n+    //deploy app\n+    applicationLifecycleService\n+      .deployAppAndArtifact(NamespaceId.DEFAULT, AppWithWorkflow.class.getSimpleName(), artifactId, appJarFile, null,\n+                            null, programId -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8edacdfb0123fa1b519f6ab2bde9ac98ba0fa9c3"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1NTQ1Mg==", "bodyText": "Done. Have to fix the intellij settings.", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r515355452", "createdAt": "2020-10-30T20:18:18Z", "author": {"login": "greeshmaswaminathan"}, "path": "cdap-app-fabric/src/test/java/io/cdap/cdap/internal/app/services/ApplicationLifecycleServiceTest.java", "diffHunk": "@@ -128,6 +148,34 @@ public void testAppDeletionMultipleNS() throws Exception {\n     deleteAppAndData(testNSAppId);\n   }\n \n+  @Test\n+  public void testAcceleratorMetaDataDeletion() throws Exception {\n+    Id.Artifact artifactId = Id.Artifact\n+      .from(Id.Namespace.DEFAULT, AppWithWorkflow.class.getSimpleName(), \"1.0.0-SNAPSHOT\");\n+    Location appJar = AppJarHelper.createDeploymentJar(locationFactory, AppWithWorkflow.class);\n+    File appJarFile = new File(tmpFolder.newFolder(),\n+                               String.format(\"%s-%s.jar\", artifactId.getName(), artifactId.getVersion().getVersion()));\n+    Files.copy(Locations.newInputSupplier(appJar), appJarFile);\n+    appJar.delete();\n+\n+    //deploy app\n+    applicationLifecycleService\n+      .deployAppAndArtifact(NamespaceId.DEFAULT, AppWithWorkflow.class.getSimpleName(), artifactId, appJarFile, null,\n+                            null, programId -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY4MDcyMQ=="}, "originalCommit": {"oid": "8edacdfb0123fa1b519f6ab2bde9ac98ba0fa9c3"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNjEzNDAxOnYy", "diffSide": "RIGHT", "path": "cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNjo0MjoxNFrOHrC66g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDoxODozOFrOHrez0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg5ODY2Ng==", "bodyText": "Should we use a constant here instead of hard-coded string?", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r514898666", "createdAt": "2020-10-30T06:42:14Z", "author": {"login": "wyzhang"}, "path": "cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java", "diffHunk": "@@ -72,9 +78,27 @@ public AppSystemMetadataWriter(MetadataServiceClient metadataServiceClient, Appl\n         existingPluginClasses.add(plugin.getPluginClass());\n       }\n     }\n+    addAccelerators(appSpec, applicationClass, properties);\n     return properties.build();\n   }\n \n+  private void addAccelerators(ApplicationSpecification appSpec,\n+                               ApplicationClass applicationClass,\n+                               ImmutableMap.Builder<String, String> properties) {\n+    //add from all plugins\n+    Set<String> acceleratorSet = appSpec.getPlugins().values().stream().map(Plugin::getPluginClass)\n+      .map(PluginClass::getRequirements).map(\n+        Requirements::getAccelerators).flatMap(Set::stream)\n+      .collect(Collectors.toSet());\n+    //add from application\n+    acceleratorSet.addAll(applicationClass.getRequirements().getAccelerators());\n+    String acceleratorsValue = String.join(\",\", acceleratorSet);\n+    if (acceleratorsValue == null || acceleratorsValue.isEmpty()) {\n+      return;\n+    }\n+    properties.put(\"accelerator\", acceleratorsValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8edacdfb0123fa1b519f6ab2bde9ac98ba0fa9c3"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1NTYwMQ==", "bodyText": "Done.", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r515355601", "createdAt": "2020-10-30T20:18:38Z", "author": {"login": "greeshmaswaminathan"}, "path": "cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java", "diffHunk": "@@ -72,9 +78,27 @@ public AppSystemMetadataWriter(MetadataServiceClient metadataServiceClient, Appl\n         existingPluginClasses.add(plugin.getPluginClass());\n       }\n     }\n+    addAccelerators(appSpec, applicationClass, properties);\n     return properties.build();\n   }\n \n+  private void addAccelerators(ApplicationSpecification appSpec,\n+                               ApplicationClass applicationClass,\n+                               ImmutableMap.Builder<String, String> properties) {\n+    //add from all plugins\n+    Set<String> acceleratorSet = appSpec.getPlugins().values().stream().map(Plugin::getPluginClass)\n+      .map(PluginClass::getRequirements).map(\n+        Requirements::getAccelerators).flatMap(Set::stream)\n+      .collect(Collectors.toSet());\n+    //add from application\n+    acceleratorSet.addAll(applicationClass.getRequirements().getAccelerators());\n+    String acceleratorsValue = String.join(\",\", acceleratorSet);\n+    if (acceleratorsValue == null || acceleratorsValue.isEmpty()) {\n+      return;\n+    }\n+    properties.put(\"accelerator\", acceleratorsValue);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg5ODY2Ng=="}, "originalCommit": {"oid": "8edacdfb0123fa1b519f6ab2bde9ac98ba0fa9c3"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNjEzNTAwOnYy", "diffSide": "RIGHT", "path": "cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNjo0Mjo1NlrOHrC7kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDoxODo1NlrOHre0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg5ODgzMg==", "bodyText": "Move this after acceleratorValue emptiness check.", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r514898832", "createdAt": "2020-10-30T06:42:56Z", "author": {"login": "wyzhang"}, "path": "cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java", "diffHunk": "@@ -72,9 +78,27 @@ public AppSystemMetadataWriter(MetadataServiceClient metadataServiceClient, Appl\n         existingPluginClasses.add(plugin.getPluginClass());\n       }\n     }\n+    addAccelerators(appSpec, applicationClass, properties);\n     return properties.build();\n   }\n \n+  private void addAccelerators(ApplicationSpecification appSpec,\n+                               ApplicationClass applicationClass,\n+                               ImmutableMap.Builder<String, String> properties) {\n+    //add from all plugins\n+    Set<String> acceleratorSet = appSpec.getPlugins().values().stream().map(Plugin::getPluginClass)\n+      .map(PluginClass::getRequirements).map(\n+        Requirements::getAccelerators).flatMap(Set::stream)\n+      .collect(Collectors.toSet());\n+    //add from application\n+    acceleratorSet.addAll(applicationClass.getRequirements().getAccelerators());\n+    String acceleratorsValue = String.join(\",\", acceleratorSet);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8edacdfb0123fa1b519f6ab2bde9ac98ba0fa9c3"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1NTcwNA==", "bodyText": "Thanks, moved it.", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r515355704", "createdAt": "2020-10-30T20:18:56Z", "author": {"login": "greeshmaswaminathan"}, "path": "cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java", "diffHunk": "@@ -72,9 +78,27 @@ public AppSystemMetadataWriter(MetadataServiceClient metadataServiceClient, Appl\n         existingPluginClasses.add(plugin.getPluginClass());\n       }\n     }\n+    addAccelerators(appSpec, applicationClass, properties);\n     return properties.build();\n   }\n \n+  private void addAccelerators(ApplicationSpecification appSpec,\n+                               ApplicationClass applicationClass,\n+                               ImmutableMap.Builder<String, String> properties) {\n+    //add from all plugins\n+    Set<String> acceleratorSet = appSpec.getPlugins().values().stream().map(Plugin::getPluginClass)\n+      .map(PluginClass::getRequirements).map(\n+        Requirements::getAccelerators).flatMap(Set::stream)\n+      .collect(Collectors.toSet());\n+    //add from application\n+    acceleratorSet.addAll(applicationClass.getRequirements().getAccelerators());\n+    String acceleratorsValue = String.join(\",\", acceleratorSet);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg5ODgzMg=="}, "originalCommit": {"oid": "8edacdfb0123fa1b519f6ab2bde9ac98ba0fa9c3"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNjEzNTk1OnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/test/java/io/cdap/cdap/internal/app/services/ApplicationLifecycleServiceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNjo0MzozM1rOHrC8JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDoxOTo0N1rOHre1sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg5ODk4MA==", "bodyText": "Maybe avoid hard-coded string?", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r514898980", "createdAt": "2020-10-30T06:43:33Z", "author": {"login": "wyzhang"}, "path": "cdap-app-fabric/src/test/java/io/cdap/cdap/internal/app/services/ApplicationLifecycleServiceTest.java", "diffHunk": "@@ -128,6 +148,34 @@ public void testAppDeletionMultipleNS() throws Exception {\n     deleteAppAndData(testNSAppId);\n   }\n \n+  @Test\n+  public void testAcceleratorMetaDataDeletion() throws Exception {\n+    Id.Artifact artifactId = Id.Artifact\n+      .from(Id.Namespace.DEFAULT, AppWithWorkflow.class.getSimpleName(), \"1.0.0-SNAPSHOT\");\n+    Location appJar = AppJarHelper.createDeploymentJar(locationFactory, AppWithWorkflow.class);\n+    File appJarFile = new File(tmpFolder.newFolder(),\n+                               String.format(\"%s-%s.jar\", artifactId.getName(), artifactId.getVersion().getVersion()));\n+    Files.copy(Locations.newInputSupplier(appJar), appJarFile);\n+    appJar.delete();\n+\n+    //deploy app\n+    applicationLifecycleService\n+      .deployAppAndArtifact(NamespaceId.DEFAULT, AppWithWorkflow.class.getSimpleName(), artifactId, appJarFile, null,\n+                            null, programId -> {\n+        }, true);\n+    //Check for the accelerator metadata\n+    ApplicationId appId = NamespaceId.DEFAULT.app(AppWithWorkflow.class.getSimpleName());\n+    Assert.assertEquals(false, metadataStorage.read(new Read(appId.toMetadataEntity(),\n+                                                             MetadataScope.SYSTEM, MetadataKind.PROPERTY)).isEmpty());\n+    Map<String, String> metadataProperties = metadataStorage\n+      .read(new Read(appId.toMetadataEntity())).getProperties(MetadataScope.SYSTEM);\n+    Assert.assertEquals(\"cdc\", metadataProperties.get(\"accelerator\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8edacdfb0123fa1b519f6ab2bde9ac98ba0fa9c3"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1NjA4MQ==", "bodyText": "Done.", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r515356081", "createdAt": "2020-10-30T20:19:47Z", "author": {"login": "greeshmaswaminathan"}, "path": "cdap-app-fabric/src/test/java/io/cdap/cdap/internal/app/services/ApplicationLifecycleServiceTest.java", "diffHunk": "@@ -128,6 +148,34 @@ public void testAppDeletionMultipleNS() throws Exception {\n     deleteAppAndData(testNSAppId);\n   }\n \n+  @Test\n+  public void testAcceleratorMetaDataDeletion() throws Exception {\n+    Id.Artifact artifactId = Id.Artifact\n+      .from(Id.Namespace.DEFAULT, AppWithWorkflow.class.getSimpleName(), \"1.0.0-SNAPSHOT\");\n+    Location appJar = AppJarHelper.createDeploymentJar(locationFactory, AppWithWorkflow.class);\n+    File appJarFile = new File(tmpFolder.newFolder(),\n+                               String.format(\"%s-%s.jar\", artifactId.getName(), artifactId.getVersion().getVersion()));\n+    Files.copy(Locations.newInputSupplier(appJar), appJarFile);\n+    appJar.delete();\n+\n+    //deploy app\n+    applicationLifecycleService\n+      .deployAppAndArtifact(NamespaceId.DEFAULT, AppWithWorkflow.class.getSimpleName(), artifactId, appJarFile, null,\n+                            null, programId -> {\n+        }, true);\n+    //Check for the accelerator metadata\n+    ApplicationId appId = NamespaceId.DEFAULT.app(AppWithWorkflow.class.getSimpleName());\n+    Assert.assertEquals(false, metadataStorage.read(new Read(appId.toMetadataEntity(),\n+                                                             MetadataScope.SYSTEM, MetadataKind.PROPERTY)).isEmpty());\n+    Map<String, String> metadataProperties = metadataStorage\n+      .read(new Read(appId.toMetadataEntity())).getProperties(MetadataScope.SYSTEM);\n+    Assert.assertEquals(\"cdc\", metadataProperties.get(\"accelerator\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg5ODk4MA=="}, "originalCommit": {"oid": "8edacdfb0123fa1b519f6ab2bde9ac98ba0fa9c3"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyOTM2MzMyOnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/deploy/pipeline/AppDeploymentInfo.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMjowOToyMFrOHrhxSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMjo0MDozOFrOHriQow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQwNDEwNw==", "bodyText": "no need to use fully qualified name.", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r515404107", "createdAt": "2020-10-30T22:09:20Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/deploy/pipeline/AppDeploymentInfo.java", "diffHunk": "@@ -88,10 +89,10 @@ public NamespaceId getNamespaceId() {\n   }\n \n   /**\n-   * Returns the class name of the {@link Application}.\n+   * Returns the {@link io.cdap.cdap.api.artifact.ApplicationClass} associated with this {@link Application}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9890dab02c6c90b7c1ecfcf6c5ad64b062569411"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQwODk1Nw==", "bodyText": "Missed this, will fix in a new checkin.", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r515408957", "createdAt": "2020-10-30T22:27:30Z", "author": {"login": "greeshmaswaminathan"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/deploy/pipeline/AppDeploymentInfo.java", "diffHunk": "@@ -88,10 +89,10 @@ public NamespaceId getNamespaceId() {\n   }\n \n   /**\n-   * Returns the class name of the {@link Application}.\n+   * Returns the {@link io.cdap.cdap.api.artifact.ApplicationClass} associated with this {@link Application}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQwNDEwNw=="}, "originalCommit": {"oid": "9890dab02c6c90b7c1ecfcf6c5ad64b062569411"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQxMjEzMQ==", "bodyText": "Created PR #12833", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r515412131", "createdAt": "2020-10-30T22:40:38Z", "author": {"login": "greeshmaswaminathan"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/deploy/pipeline/AppDeploymentInfo.java", "diffHunk": "@@ -88,10 +89,10 @@ public NamespaceId getNamespaceId() {\n   }\n \n   /**\n-   * Returns the class name of the {@link Application}.\n+   * Returns the {@link io.cdap.cdap.api.artifact.ApplicationClass} associated with this {@link Application}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQwNDEwNw=="}, "originalCommit": {"oid": "9890dab02c6c90b7c1ecfcf6c5ad64b062569411"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3109, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}