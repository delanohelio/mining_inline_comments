{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5ODA0MjE1", "number": 11887, "title": "[CDAP-16249] Show/hide unrelated fields in cause/impact datasets", "bodyText": "JIRA: https://issues.cask.co/browse/CDAP-16248\nBuild: https://builds.cask.co/browse/CDAP-UDUT513\nFor cause or impact datasets with unrelated fields (i.e. fields that are not cause or impact fields for the target fields), add ability to show or hide unrelated fields.\nAlso modified e2e test to check show/hide unrelated field functionality, which involved changing the pipeline to use macros.", "createdAt": "2020-02-25T21:12:58Z", "url": "https://github.com/cdapio/cdap/pull/11887", "merged": true, "mergeCommit": {"oid": "564023d10a0a59e24a357e6f8360545d8a5f4917"}, "closed": true, "closedAt": "2020-03-09T17:06:54Z", "author": {"login": "yukiej"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcH4yoGABqjMwNzEwMzAxMjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMAdCAgBqjMxMTE0MDI2MTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97429d32c73d2566a1bee2bbc525cc6d41128e6b", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/97429d32c73d2566a1bee2bbc525cc6d41128e6b", "committedDate": "2020-02-24T22:12:21Z", "message": "Add styling for expandable fields"}, "afterCommit": {"oid": "8915e639dd70177ba28759471d9608559b43faa8", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/8915e639dd70177ba28759471d9608559b43faa8", "committedDate": "2020-02-25T21:12:05Z", "message": "Add test to check for functionality of unrelated fields panel"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8915e639dd70177ba28759471d9608559b43faa8", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/8915e639dd70177ba28759471d9608559b43faa8", "committedDate": "2020-02-25T21:12:05Z", "message": "Add test to check for functionality of unrelated fields panel"}, "afterCommit": {"oid": "deeefeeb3bc14f9792d3d4a198b4e91e2c6cfd03", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/deeefeeb3bc14f9792d3d4a198b4e91e2c6cfd03", "committedDate": "2020-02-25T21:17:44Z", "message": "Add test to check for functionality of unrelated fields panel"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "deeefeeb3bc14f9792d3d4a198b4e91e2c6cfd03", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/deeefeeb3bc14f9792d3d4a198b4e91e2c6cfd03", "committedDate": "2020-02-25T21:17:44Z", "message": "Add test to check for functionality of unrelated fields panel"}, "afterCommit": {"oid": "7466255d23f2928db6478767bec64d2178424ec4", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/7466255d23f2928db6478767bec64d2178424ec4", "committedDate": "2020-02-27T19:30:00Z", "message": "Increase timeout for deploying pipeline from 10s to 15s"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "033973efd835b04d327d826734cb62cd2324c4c3", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/033973efd835b04d327d826734cb62cd2324c4c3", "committedDate": "2020-02-27T21:44:18Z", "message": "Try removing the cy.clear"}, "afterCommit": {"oid": "ab42389df0bdd7f7b9b6dede99c8384019152d7a", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/ab42389df0bdd7f7b9b6dede99c8384019152d7a", "committedDate": "2020-02-28T22:22:36Z", "message": "Add in a focus before typing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NzQ0MjU3", "url": "https://github.com/cdapio/cdap/pull/11887#pullrequestreview-366744257", "createdAt": "2020-02-28T23:35:20Z", "commit": {"oid": "3b04f6b1acbf68a4e4b9bb3b409569be33e679ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMzozNToyMFrOFwFtDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMzozNToyMFrOFwFtDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk2OTQyMg==", "bodyText": "rather than having a callback here, it's cleaner to have this function simply return the observable and let whoever is calling it to subscribe to the actual response. When you do this, you can't handle errors in the API.\nI see that you are transforming the response, so you can use map operator to the response of the observable before returning it", "url": "https://github.com/cdapio/cdap/pull/11887#discussion_r385969422", "createdAt": "2020-02-28T23:35:20Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/FieldLevelLineage/v2/Context/FllContextHelper.ts", "diffHunk": "@@ -367,3 +414,41 @@ export function getOperations(\n     cb(operations);\n   });\n }\n+\n+export function fetchUnrelatedFields(\n+  namespace: string,\n+  tablename: string,\n+  type: string,\n+  relatedFields: IField[],\n+  start: ITimeType,\n+  end: ITimeType,\n+  cb: (fields: IField[]) => void\n+) {\n+  // Filter out fields that are already being rendered to maintain field order\n+  const getUnrelatedFields = (allFields: string[]) => {\n+    const isRelatedField = (fieldId, fields) => {\n+      return fields.filter((field) => field.id === fieldId).length > 0;\n+    };\n+\n+    const unrelatedFields = allFields.filter((fieldname) => {\n+      const fieldId = getFieldId(fieldname, tablename, namespace, type);\n+      return !isRelatedField(fieldId, relatedFields);\n+    });\n+    return unrelatedFields.map((fieldname) => {\n+      const fieldProperties: IField = {\n+        type,\n+        namespace,\n+        name: fieldname,\n+        dataset: tablename,\n+        id: getFieldId(fieldname, tablename, namespace, type),\n+      };\n+      return fieldProperties;\n+    });\n+  };\n+  const params = { namespace, entityId: tablename, start, end };\n+\n+  MyMetadataApi.getFields(params).subscribe((res) => {\n+    const unrelatedFields = getUnrelatedFields(res);\n+    cb(unrelatedFields);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b04f6b1acbf68a4e4b9bb3b409569be33e679ee"}, "originalPosition": 237}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c4457079b3ad1ee70cff3257fbce2159ea291966", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/c4457079b3ad1ee70cff3257fbce2159ea291966", "committedDate": "2020-02-29T06:15:44Z", "message": "troubleshooting failure to deploy"}, "afterCommit": {"oid": "fa7ce027393117e314d6aaa969d86c7acd5eed8b", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/fa7ce027393117e314d6aaa969d86c7acd5eed8b", "committedDate": "2020-02-29T06:25:55Z", "message": "troubleshooting failure to deploy"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a7fa997dce7ffc3c163a4aa80910624f7954e57c", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/a7fa997dce7ffc3c163a4aa80910624f7954e57c", "committedDate": "2020-03-02T19:10:56Z", "message": "Address feedback: return observable instead of using callback"}, "afterCommit": {"oid": "d2070274a70648fd0455a9fc64447537b83af57d", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/d2070274a70648fd0455a9fc64447537b83af57d", "committedDate": "2020-03-02T19:35:16Z", "message": "Address feedback: return observable instead of using callback"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8191e39b9c14553710920ee0d8b535149e2d89c0", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/8191e39b9c14553710920ee0d8b535149e2d89c0", "committedDate": "2020-03-02T23:26:31Z", "message": "Add second attempt to input service account path and remove screenshot"}, "afterCommit": {"oid": "9f37568f4861cf97180d22655dae4a6fe76dcf57", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/9f37568f4861cf97180d22655dae4a6fe76dcf57", "committedDate": "2020-03-03T19:22:55Z", "message": "Add second attempt to input service account path and remove screenshot"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e72998ed99937da713e902106398cffb74eb8ab0", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/e72998ed99937da713e902106398cffb74eb8ab0", "committedDate": "2020-03-03T22:31:50Z", "message": "Add an assertion to check for the rendering of unrelated fields"}, "afterCommit": {"oid": "744af9d6ea66d0b4dbaaff531d4340155b1968a3", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/744af9d6ea66d0b4dbaaff531d4340155b1968a3", "committedDate": "2020-03-03T23:03:55Z", "message": "Fix e2e test: update engine and add assertions\n\nChange engine from spark to mapreduce\n\nAdd an assertion to check for the rendering of unrelated fields"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NTIyODE4", "url": "https://github.com/cdapio/cdap/pull/11887#pullrequestreview-368522818", "createdAt": "2020-03-04T06:04:21Z", "commit": {"oid": "744af9d6ea66d0b4dbaaff531d4340155b1968a3"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNjowNDoyMlrOFxg7MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNjowOTozNVrOFxhAZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2Mzk4NQ==", "bodyText": "nit: i think in this case using ternary operator might be slightly more efficient since we won't need to render additional components", "url": "https://github.com/cdapio/cdap/pull/11887#discussion_r387463985", "createdAt": "2020-03-04T06:04:22Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/FieldLevelLineage/v2/FllTable/FllExpandableField.tsx", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import React from 'react';\n+import withStyles, { WithStyles } from '@material-ui/core/styles/withStyles';\n+import classnames from 'classnames';\n+import KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n+import KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n+import If from 'components/If';\n+import T from 'i18n-react';\n+\n+export const styles = (theme) => {\n+  return {\n+    root: {\n+      color: theme.palette.blue[200],\n+      fontSize: '0.92em',\n+      cursor: 'pointer',\n+    },\n+  };\n+};\n+\n+interface IExpandableFieldProps extends WithStyles<typeof styles> {\n+  isExpanded: boolean;\n+  handleClick: () => void;\n+  tablename: string;\n+}\n+\n+const I18N_PREFIX = 'features.FieldLevelLineage.v2.FllTable.FllExpandableField';\n+\n+function ExpandableField({ isExpanded, handleClick, tablename, classes }: IExpandableFieldProps) {\n+  const message = isExpanded\n+    ? T.translate(`${I18N_PREFIX}.hideFields`)\n+    : T.translate(`${I18N_PREFIX}.showFields`);\n+  return (\n+    <div\n+      className={classnames('grid-row', 'grid-link', classes.root)}\n+      data-cy={`${isExpanded ? 'hide' : 'show'}-fields-panel-${tablename}`}\n+      onClick={handleClick}\n+    >\n+      {message}\n+      <If condition={!isExpanded}>\n+        <KeyboardArrowDownIcon />\n+      </If>\n+      <If condition={isExpanded}>\n+        <KeyboardArrowUpIcon />\n+      </If>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "744af9d6ea66d0b4dbaaff531d4340155b1968a3"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2NDg1NA==", "bodyText": "don't use optional chaining quite yet. It's still in draft proposal stage and still considered experimental", "url": "https://github.com/cdapio/cdap/pull/11887#discussion_r387464854", "createdAt": "2020-03-04T06:07:45Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/FieldLevelLineage/v2/FllTable/index.tsx", "diffHunk": "@@ -90,74 +92,116 @@ const styles = (theme) => {\n \n interface ITableProps extends WithStyles<typeof styles> {\n   tableId?: string;\n-  fields?: IField[];\n+  tableInfo?: ITableInfo;\n   type?: string;\n   isActive?: boolean;\n }\n \n-function renderGridHeader(fields: IField[], isTarget: boolean, classes) {\n+function renderGridHeader(\n+  fields: IField[],\n+  isTarget: boolean,\n+  isExpanded: boolean = false,\n+  classes\n+) {\n   const count: number = fields.length;\n   const tableName = fields[0].dataset;\n+  const options = { context: count };\n   return (\n     <div className={classes.tableHeader}>\n       <div className=\"table-name\">{tableName}</div>\n       <div className={classes.tableSubheader}>\n-        {isTarget\n-          ? T.translate('features.FieldLevelLineage.v2.FllTable.fieldsCount', {\n-              context: count,\n-            })\n-          : T.translate('features.FieldLevelLineage.v2.FllTable.relatedFieldsCount', {\n-              context: count,\n-            })}\n+        {isTarget || isExpanded\n+          ? T.translate('features.FieldLevelLineage.v2.FllTable.fieldsCount', options)\n+          : T.translate('features.FieldLevelLineage.v2.FllTable.relatedFieldsCount', options)}\n       </div>\n     </div>\n   );\n }\n \n-function renderGridBody(fields: IField[], tableName: string, activeFields = new Set(), classes) {\n+function renderGridBody(\n+  fields: IField[],\n+  tableId: string,\n+  activeFields = new Set(),\n+  hasUnrelatedFields: boolean = false,\n+  isExpanded: boolean = false,\n+  handleClick: () => void,\n+  classes\n+) {\n+  const namespace = fields[0].namespace;\n   return (\n     <div\n       className={classes.gridBody}\n-      id={tableName}\n-      data-tablename={fields[0].dataset}\n-      data-namespace={fields[0].namespace}\n+      id={tableId}\n+      data-tablename={tableId}\n+      data-namespace={namespace}\n     >\n       {fields.map((field) => {\n         const isActiveField = activeFields.has(field.id);\n         return <FllField key={field.id} field={field} isActive={isActiveField} />;\n       })}\n+      <If condition={hasUnrelatedFields}>\n+        <ExpandableField\n+          isExpanded={isExpanded}\n+          handleClick={handleClick}\n+          tablename={fields[0].dataset}\n+        />\n+      </If>\n     </div>\n   );\n }\n \n-function FllTable({ tableId, fields, type, isActive, classes }: ITableProps) {\n+function FllTable({ tableId, tableInfo, type, isActive, classes }: ITableProps) {\n   const GRID_HEADERS = [{ property: 'name', label: tableId }];\n-  const { target, activeCauseSets, activeImpactSets } = useContext<IContextState>(FllContext);\n+  const { target, activeCauseSets, activeImpactSets, handleExpandFields } = useContext<\n+    IContextState\n+  >(FllContext);\n+  let fields = tableInfo?.fields;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "744af9d6ea66d0b4dbaaff531d4340155b1968a3"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2NTI2OQ==", "bodyText": "provide version ranges for all versions in this file. Otherwise we will have to update the version every time", "url": "https://github.com/cdapio/cdap/pull/11887#discussion_r387465269", "createdAt": "2020-03-04T06:09:21Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/cypress/fixtures/fll_wrangler-test-pipeline.json", "diffHunk": "@@ -1,28 +1,28 @@\n {\n-    \"name\": \"Airport_test\",\n-    \"description\": \"Data Pipeline Application\",\n     \"artifact\": {\n         \"name\": \"cdap-data-pipeline\",\n-        \"version\": \"[6.1.0-SNAPSHOT, 6.2.0-SNAPSHOT]\",\n+        \"version\": \"6.2.0-SNAPSHOT\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "744af9d6ea66d0b4dbaaff531d4340155b1968a3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2NTMxOQ==", "bodyText": "nit: add newline", "url": "https://github.com/cdapio/cdap/pull/11887#discussion_r387465319", "createdAt": "2020-03-04T06:09:35Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/cypress/fixtures/fll_wrangler-test-pipeline.json", "diffHunk": "@@ -76,66 +66,61 @@\n                     \"label\": \"Wrangler\",\n                     \"artifact\": {\n                         \"name\": \"wrangler-transform\",\n-                        \"version\": \"[4.1.0-SNAPSHOT, 6.0.0-SNAPSHOT)\",\n+                        \"version\": \"4.2.0-SNAPSHOT\",\n                         \"scope\": \"SYSTEM\"\n                     },\n                     \"properties\": {\n-                        \"workspaceId\": \"d39a2514-b8f8-4314-a03f-1e7291d30428\",\n-                        \"directives\": \"parse-as-csv :body ',' true\\ndrop body\",\n-                        \"schema\": \"{\\\"name\\\":\\\"avroSchema\\\",\\\"type\\\":\\\"record\\\",\\\"fields\\\":[{\\\"name\\\":\\\"iata\\\",\\\"type\\\":[\\\"string\\\",\\\"null\\\"]},{\\\"name\\\":\\\"name\\\",\\\"type\\\":[\\\"string\\\",\\\"null\\\"]},{\\\"name\\\":\\\"city\\\",\\\"type\\\":[\\\"string\\\",\\\"null\\\"]},{\\\"name\\\":\\\"state\\\",\\\"type\\\":[\\\"string\\\",\\\"null\\\"]},{\\\"name\\\":\\\"country\\\",\\\"type\\\":[\\\"string\\\",\\\"null\\\"]},{\\\"name\\\":\\\"latitude\\\",\\\"type\\\":[\\\"string\\\",\\\"null\\\"]},{\\\"name\\\":\\\"longitude\\\",\\\"type\\\":[\\\"string\\\",\\\"null\\\"]}]}\",\n-                        \"field\": \"body\",\n+                        \"field\": \"*\",\n                         \"precondition\": \"false\",\n-                        \"threshold\": \"1\"\n+                        \"threshold\": \"1\",\n+                        \"workspaceId\": \"120cac00-0e66-4607-9672-e774a298d6b3\",\n+                        \"directives\": \"drop name\\ndrop state\",\n+                        \"schema\": \"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"etlSchemaBody\\\",\\\"fields\\\":[{\\\"name\\\":\\\"iata\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"city\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"country\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"latitude\\\",\\\"type\\\":\\\"double\\\"},{\\\"name\\\":\\\"longitude\\\",\\\"type\\\":\\\"double\\\"}]}\"\n                     }\n                 },\n-                \"outputSchema\": \"{\\\"name\\\":\\\"avroSchema\\\",\\\"type\\\":\\\"record\\\",\\\"fields\\\":[{\\\"name\\\":\\\"iata\\\",\\\"type\\\":[\\\"string\\\",\\\"null\\\"]},{\\\"name\\\":\\\"name\\\",\\\"type\\\":[\\\"string\\\",\\\"null\\\"]},{\\\"name\\\":\\\"city\\\",\\\"type\\\":[\\\"string\\\",\\\"null\\\"]},{\\\"name\\\":\\\"state\\\",\\\"type\\\":[\\\"string\\\",\\\"null\\\"]},{\\\"name\\\":\\\"country\\\",\\\"type\\\":[\\\"string\\\",\\\"null\\\"]},{\\\"name\\\":\\\"latitude\\\",\\\"type\\\":[\\\"string\\\",\\\"null\\\"]},{\\\"name\\\":\\\"longitude\\\",\\\"type\\\":[\\\"string\\\",\\\"null\\\"]}]}\",\n-                \"type\": \"transform\",\n-                \"label\": \"Wrangler\",\n-                \"icon\": \"icon-DataPreparation\",\n-                \"$$hashKey\": \"object:2728\",\n-                \"_uiPosition\": {\n-                    \"left\": \"620px\",\n-                    \"top\": \"239.5px\"\n-                }\n+                \"outputSchema\": [\n+                    {\n+                        \"name\": \"etlSchemaBody\",\n+                        \"schema\": \"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"etlSchemaBody\\\",\\\"fields\\\":[{\\\"name\\\":\\\"iata\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"city\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"country\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"latitude\\\",\\\"type\\\":\\\"double\\\"},{\\\"name\\\":\\\"longitude\\\",\\\"type\\\":\\\"double\\\"}]}\"\n+                    }\n+                ],\n+                \"inputSchema\": [\n+                    {\n+                        \"name\": \"BigQueryTable\",\n+                        \"schema\": \"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"etlSchemaBody\\\",\\\"fields\\\":[{\\\"name\\\":\\\"iata\\\",\\\"type\\\":[\\\"string\\\",\\\"null\\\"]},{\\\"name\\\":\\\"name\\\",\\\"type\\\":[\\\"string\\\",\\\"null\\\"]},{\\\"name\\\":\\\"city\\\",\\\"type\\\":[\\\"string\\\",\\\"null\\\"]},{\\\"name\\\":\\\"state\\\",\\\"type\\\":[\\\"string\\\",\\\"null\\\"]},{\\\"name\\\":\\\"country\\\",\\\"type\\\":[\\\"string\\\",\\\"null\\\"]},{\\\"name\\\":\\\"latitude\\\",\\\"type\\\":[\\\"double\\\",\\\"null\\\"]},{\\\"name\\\":\\\"longitude\\\",\\\"type\\\":[\\\"double\\\",\\\"null\\\"]}]}\"\n+                    }\n+                ]\n             },\n             {\n-                \"name\": \"Airport_sink\",\n+                \"name\": \"Avro-Time-Partitioned-Dataset\",\n                 \"plugin\": {\n-                    \"name\": \"File\",\n+                    \"name\": \"TPFSAvro\",\n                     \"type\": \"batchsink\",\n-                    \"label\": \"Airport_sink\",\n+                    \"label\": \"Avro Time Partitioned Dataset\",\n                     \"artifact\": {\n                         \"name\": \"core-plugins\",\n-                        \"version\": \"[2.3.0-SNAPSHOT, 3.0.0-SNAPSHOT)\",\n+                        \"version\": \"2.4.0-SNAPSHOT\",\n                         \"scope\": \"SYSTEM\"\n                     },\n                     \"properties\": {\n-                        \"suffix\": \"yyyy-MM-dd-HH-mm\",\n-                        \"format\": \"csv\",\n-                        \"referenceName\": \"Airport_sink\",\n-                        \"path\": \"/tmp/cdap-ui-integration-fixtures\"\n+                        \"compressionCodec\": \"None\",\n+                        \"schema\": \"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"etlSchemaBody\\\",\\\"fields\\\":[{\\\"name\\\":\\\"iata\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"city\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"country\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"latitude\\\",\\\"type\\\":\\\"double\\\"},{\\\"name\\\":\\\"longitude\\\",\\\"type\\\":\\\"double\\\"}]}\",\n+                        \"name\": \"avro_sink\"\n                     }\n                 },\n-                \"outputSchema\": [\n+                \"outputSchema\": \"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"etlSchemaBody\\\",\\\"fields\\\":[{\\\"name\\\":\\\"iata\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"city\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"country\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"latitude\\\",\\\"type\\\":\\\"double\\\"},{\\\"name\\\":\\\"longitude\\\",\\\"type\\\":\\\"double\\\"}]}\",\n+                \"inputSchema\": [\n                     {\n-                        \"name\": \"etlSchemaBody\",\n-                        \"schema\": \"\"\n+                        \"name\": \"Wrangler\",\n+                        \"schema\": \"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"etlSchemaBody\\\",\\\"fields\\\":[{\\\"name\\\":\\\"iata\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"city\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"country\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"latitude\\\",\\\"type\\\":\\\"double\\\"},{\\\"name\\\":\\\"longitude\\\",\\\"type\\\":\\\"double\\\"}]}\"\n                     }\n-                ],\n-                \"inputSchema\": [],\n-                \"type\": \"batchsink\",\n-                \"label\": \"Airport_sink\",\n-                \"icon\": \"icon-file\",\n-                \"$$hashKey\": \"object:2729\",\n-                \"_uiPosition\": {\n-                    \"left\": \"920px\",\n-                    \"top\": \"239.5px\"\n-                }\n+                ]\n             }\n         ],\n         \"schedule\": \"0 * * * *\",\n         \"engine\": \"mapreduce\",\n         \"numOfRecordsPreview\": 100,\n+        \"description\": \"With wrangler. Drops fields to get unrelated fields.\",\n         \"maxConcurrentRuns\": 1\n     }\n-}\n\\ No newline at end of file\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "744af9d6ea66d0b4dbaaff531d4340155b1968a3"}, "originalPosition": 190}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "744af9d6ea66d0b4dbaaff531d4340155b1968a3", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/744af9d6ea66d0b4dbaaff531d4340155b1968a3", "committedDate": "2020-03-03T23:03:55Z", "message": "Fix e2e test: update engine and add assertions\n\nChange engine from spark to mapreduce\n\nAdd an assertion to check for the rendering of unrelated fields"}, "afterCommit": {"oid": "56d850dff98a54a4ab539ecd2b23e90eeef28f07", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/56d850dff98a54a4ab539ecd2b23e90eeef28f07", "committedDate": "2020-03-06T02:57:58Z", "message": "Address feedback: add versions, newline, tertiary operator for arrow icon. Remove optional chaining."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwODk1Nzk0", "url": "https://github.com/cdapio/cdap/pull/11887#pullrequestreview-370895794", "createdAt": "2020-03-09T02:59:14Z", "commit": {"oid": "56d850dff98a54a4ab539ecd2b23e90eeef28f07"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d49c8edbe1eed864caf487f4ed6c95f023d3e305", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/d49c8edbe1eed864caf487f4ed6c95f023d3e305", "committedDate": "2020-03-09T16:19:42Z", "message": "Add ExpandableField component and API call to get all fields\n\nAdd test to check for functionality of unrelated fields panel"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "56d850dff98a54a4ab539ecd2b23e90eeef28f07", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/56d850dff98a54a4ab539ecd2b23e90eeef28f07", "committedDate": "2020-03-06T02:57:58Z", "message": "Address feedback: add versions, newline, tertiary operator for arrow icon. Remove optional chaining."}, "afterCommit": {"oid": "d49c8edbe1eed864caf487f4ed6c95f023d3e305", "author": {"user": {"login": "yukiej", "name": null}}, "url": "https://github.com/cdapio/cdap/commit/d49c8edbe1eed864caf487f4ed6c95f023d3e305", "committedDate": "2020-03-09T16:19:42Z", "message": "Add ExpandableField component and API call to get all fields\n\nAdd test to check for functionality of unrelated fields panel"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1290, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}