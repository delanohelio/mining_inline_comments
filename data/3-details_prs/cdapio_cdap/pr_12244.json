{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2NzA3NDk4", "number": 12244, "title": "[CDAP-16890] Create a page for filters configuration (widget JSON creator)", "bodyText": "JIRA: https://issues.cask.co/browse/CDAP-16890\nIn plugin JSON file, there is a key called filters. filters is a list of plugin properties that configures show / hide of the widgets.\nThis PR creates a page for filters field configuration.\nCurrent Progress:\n\nUsers are able to configure filters in the UI by editing input fields.\nImport filters by parsing the file content\nIn the ConfigurationGroups view, certain widgets are hidden if it is specified so in the filters field.", "createdAt": "2020-06-02T16:50:20Z", "url": "https://github.com/cdapio/cdap/pull/12244", "merged": true, "mergeCommit": {"oid": "4e46e1ebea46887567a15a3d40d30ea5ff129331"}, "closed": true, "closedAt": "2020-06-19T14:59:06Z", "author": {"login": "jennac3"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpXFVMgBqjM0MjIwMzgzNDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcs0Kp1gBqjM0NjI3Njk1ODE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce5a2bbef389ba87f3b0af6e0b82dd03ed078557", "author": {"user": {"login": "jennac3", "name": "Jenna Choi"}}, "url": "https://github.com/cdapio/cdap/commit/ce5a2bbef389ba87f3b0af6e0b82dd03ed078557", "committedDate": "2020-06-02T16:46:30Z", "message": "[CDAP-16890] Create a page for filters configuration (widget JSON creator)"}, "afterCommit": {"oid": "0b26efdc4835aefa76584346a0ef989a86a31cf8", "author": {"user": {"login": "jennac3", "name": "Jenna Choi"}}, "url": "https://github.com/cdapio/cdap/commit/0b26efdc4835aefa76584346a0ef989a86a31cf8", "committedDate": "2020-06-08T20:50:45Z", "message": "rebase in order to do demo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4OTczNzE3", "url": "https://github.com/cdapio/cdap/pull/12244#pullrequestreview-428973717", "createdAt": "2020-06-11T14:33:46Z", "commit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDozMzo0N1rOGigMJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDozMzo0N1rOGigMJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzMjE2Nw==", "bodyText": "Total nit: 2020?", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r438832167", "createdAt": "2020-06-11T14:33:47Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright \u00a9 2018 Cask Data, Inc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMTEzNzE1", "url": "https://github.com/cdapio/cdap/pull/12244#pullrequestreview-431113715", "createdAt": "2020-06-16T02:18:01Z", "commit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "state": "COMMENTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMjoxODowMlrOGkI5BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMjozNTowOVrOGkJKMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0NzU4OQ==", "bodyText": "We should probably think about putting all these in a single object and passing the object. As a component I don't know if it makes sense to have this much props. The component says JsonMenu .. The first thing I would expect when using the component would be a json which is kind of hidden under all these props..", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440547589", "createdAt": "2020-06-16T02:18:02Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/BasicPluginInfo/index.tsx", "diffHunk": "@@ -95,6 +100,11 @@ const BasicPluginInfoView: React.FC<ICreateContext & WithStyles<typeof styles>>\n         setPluginState={setPluginState}\n         JSONStatus={JSONStatus}\n         setJSONStatus={setJSONStatus}\n+        filters={filters}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0Nzc4Nw==", "bodyText": "We should avoid this.. If this component will have child component this basically affects all. This defeats the purpose of using css-in-js.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440547787", "createdAt": "2020-06-16T02:18:54Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright \u00a9 2018 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { StyleRules, withStyles, WithStyles } from '@material-ui/core/styles';\n+import { CustomOperator } from 'components/ConfigurationGroup/types';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { OPERATOR_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    filterConditionInput: {\n+      '& > *': {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0Nzk5OA==", "bodyText": "If we move it to an object then we define a type for the object and then ts can validate changes that can happen tomorrow if the contract (props to the component) changes.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440547998", "createdAt": "2020-06-16T02:19:48Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/BasicPluginInfo/index.tsx", "diffHunk": "@@ -95,6 +100,11 @@ const BasicPluginInfoView: React.FC<ICreateContext & WithStyles<typeof styles>>\n         setPluginState={setPluginState}\n         JSONStatus={JSONStatus}\n         setJSONStatus={setJSONStatus}\n+        filters={filters}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0NzU4OQ=="}, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0ODIwMA==", "bodyText": "nit: there is a isNil from lodash that we can use.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440548200", "createdAt": "2020-06-16T02:20:36Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright \u00a9 2018 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { StyleRules, withStyles, WithStyles } from '@material-ui/core/styles';\n+import { CustomOperator } from 'components/ConfigurationGroup/types';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { OPERATOR_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    filterConditionInput: {\n+      '& > *': {\n+        marginTop: '10px',\n+        marginBottom: '10px',\n+      },\n+    },\n+  };\n+};\n+\n+export enum FilterConditionMode {\n+  Operator = 'operator',\n+  Expression = 'expression',\n+}\n+\n+interface IFilterConditionInputProps extends WithStyles<typeof styles>, ICreateContext {\n+  filterID: string;\n+}\n+\n+const FilterConditionInputview: React.FC<IFilterConditionInputProps> = ({\n+  classes,\n+  filterID,\n+  filterToCondition,\n+  setFilterToCondition,\n+  widgetInfo,\n+}) => {\n+  const existingCondition = filterToCondition[filterID];\n+\n+  const [conditionMode, setConditionMode] = React.useState(\n+    existingCondition.expression ? FilterConditionMode.Expression : FilterConditionMode.Operator\n+  );\n+\n+  const allWidgetNames = widgetInfo\n+    ? Object.values(widgetInfo)\n+        .map((info: IWidgetInfo) => info.name)\n+        .filter((widgetName) => widgetName !== undefined && widgetName !== null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0ODcxMw==", "bodyText": "If there is no enum for expression and  condition then we should probably introduce it. Loosely using strings for types might introduce problems if we miss consistency.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440548713", "createdAt": "2020-06-16T02:22:14Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright \u00a9 2018 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { StyleRules, withStyles, WithStyles } from '@material-ui/core/styles';\n+import { CustomOperator } from 'components/ConfigurationGroup/types';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { OPERATOR_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    filterConditionInput: {\n+      '& > *': {\n+        marginTop: '10px',\n+        marginBottom: '10px',\n+      },\n+    },\n+  };\n+};\n+\n+export enum FilterConditionMode {\n+  Operator = 'operator',\n+  Expression = 'expression',\n+}\n+\n+interface IFilterConditionInputProps extends WithStyles<typeof styles>, ICreateContext {\n+  filterID: string;\n+}\n+\n+const FilterConditionInputview: React.FC<IFilterConditionInputProps> = ({\n+  classes,\n+  filterID,\n+  filterToCondition,\n+  setFilterToCondition,\n+  widgetInfo,\n+}) => {\n+  const existingCondition = filterToCondition[filterID];\n+\n+  const [conditionMode, setConditionMode] = React.useState(\n+    existingCondition.expression ? FilterConditionMode.Expression : FilterConditionMode.Operator\n+  );\n+\n+  const allWidgetNames = widgetInfo\n+    ? Object.values(widgetInfo)\n+        .map((info: IWidgetInfo) => info.name)\n+        .filter((widgetName) => widgetName !== undefined && widgetName !== null)\n+    : [];\n+\n+  React.useEffect(() => {\n+    // reset condition data\n+    if (conditionMode === FilterConditionMode.Expression) {\n+      setFilterToCondition((prevObjs) => ({\n+        ...prevObjs,\n+        [filterID]: { expression: existingCondition.expression },\n+      }));\n+    } else {\n+      setFilterToCondition((prevObjs) => ({\n+        ...prevObjs,\n+        [filterID]: {\n+          property: existingCondition.property,\n+          operator: existingCondition.operator,\n+          value: existingCondition.value,\n+        },\n+      }));\n+    }\n+  }, [conditionMode]);\n+\n+  function setFilterCondition(conditionProperty: string) {\n+    return (val) => {\n+      setFilterToCondition((prevObjs) => ({\n+        ...prevObjs,\n+        [filterID]: { ...prevObjs[filterID], [conditionProperty]: val },\n+      }));\n+    };\n+  }\n+\n+  return (\n+    <If condition={existingCondition}>\n+      <div className={classes.filterConditionInput}>\n+        <Heading type={HeadingTypes.h6} label=\"Show these widgets by the following condition...\" />\n+        <PluginInput\n+          widgetType={'radio-group'}\n+          value={conditionMode}\n+          onChange={setConditionMode}\n+          label={'Condition Type'}\n+          options={Object.values(FilterConditionMode).map((mode) => ({ id: mode, label: mode }))}\n+          layout={'inline'}\n+        />\n+        <If condition={conditionMode === FilterConditionMode.Expression}>\n+          <PluginInput\n+            widgetType={'textbox'}\n+            value={existingCondition.expression ? existingCondition.expression : ''}\n+            onChange={setFilterCondition('expression')}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0OTE2MQ==", "bodyText": "I think I mentioned this in other PRs, if not please use individual sub-modules from material-ui.\nimport IconButton from '@material-ui/core/IconButton'\nimport { WithStyles } from '@material-ui/core/styles/withStyles';", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440549161", "createdAt": "2020-06-16T02:24:03Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput/index.tsx", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Copyright \u00a9 2018 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { IconButton, WithStyles } from '@material-ui/core';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0OTMxMw==", "bodyText": "Adding as an umbrella comment for all the imports.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440549313", "createdAt": "2020-06-16T02:24:45Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput/index.tsx", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Copyright \u00a9 2018 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { IconButton, WithStyles } from '@material-ui/core';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0OTE2MQ=="}, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0OTcwNw==", "bodyText": "Would need a key property for react.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440549707", "createdAt": "2020-06-16T02:26:05Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput/index.tsx", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Copyright \u00a9 2018 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { IconButton, WithStyles } from '@material-ui/core';\n+import { StyleRules, withStyles } from '@material-ui/core/styles';\n+import AddIcon from '@material-ui/icons/Add';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import classnames from 'classnames';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { SHOW_TYPE_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    showConfigCollection: {\n+      display: 'grid',\n+      gridAutoFlow: 'column',\n+      width: '100%',\n+    },\n+    showConfigInput: {\n+      gridRow: '1',\n+      width: '100%',\n+    },\n+    showConfigNameInput: {\n+      gridColumnStart: '1',\n+      gridColumnEnd: '8',\n+    },\n+    showConfigTypeInput: {\n+      gridColumnStart: '9',\n+      gridColumnEnd: '15',\n+    },\n+    showAddDeleteButtonInput: {\n+      gridColumnStart: '19',\n+      gridColumnEnd: '20',\n+    },\n+    showAddDeleteButton: {\n+      float: 'right',\n+    },\n+  };\n+};\n+\n+interface IFilterShowlistInputProps extends WithStyles<typeof styles>, ICreateContext {\n+  filterID: string;\n+}\n+\n+const FilterShowlistInputView: React.FC<IFilterShowlistInputProps> = ({\n+  classes,\n+  filterID,\n+  filterToShowList,\n+  setFilterToShowList,\n+  showToInfo,\n+  setShowToInfo,\n+  widgetInfo,\n+}) => {\n+  const allWidgetNames = widgetInfo\n+    ? Object.values(widgetInfo)\n+        .map((info: IWidgetInfo) => info.name)\n+        .filter((widgetName) => widgetName !== undefined && widgetName !== null)\n+    : [];\n+\n+  function setShowProperty(showID: string, property: string) {\n+    return (val) => {\n+      setShowToInfo((prevObjs) => ({\n+        ...prevObjs,\n+        [showID]: { ...prevObjs[showID], [property]: val },\n+      }));\n+    };\n+  }\n+\n+  function addShowToFilter(filterObjID: string, index?: number) {\n+    const newShowID = 'Show_' + uuidV4();\n+\n+    setShowToInfo({\n+      ...showToInfo,\n+      [newShowID]: {\n+        name: '',\n+      } as IPropertyShowConfig,\n+    });\n+\n+    if (index === undefined) {\n+      setFilterToShowList({\n+        ...filterToShowList,\n+        [filterObjID]: [...filterToShowList[filterObjID], newShowID],\n+      });\n+    } else {\n+      const showList = filterToShowList[filterObjID];\n+\n+      if (showList.length === 0) {\n+        showList.splice(0, 0, newShowID);\n+      } else {\n+        showList.splice(index + 1, 0, newShowID);\n+      }\n+\n+      setFilterToShowList({\n+        ...filterToShowList,\n+        [filterObjID]: showList,\n+      });\n+    }\n+  }\n+\n+  function deleteShowFromFilter(filterObjID: string, index: number) {\n+    const showList = filterToShowList[filterObjID];\n+\n+    const showToDelete = showList[index];\n+\n+    showList.splice(index, 1);\n+\n+    setFilterToShowList({\n+      ...filterToShowList,\n+      [filterObjID]: showList,\n+    });\n+\n+    const { [showToDelete]: tmp, ...restShowToInfo } = showToInfo;\n+    setShowToInfo(restShowToInfo);\n+  }\n+\n+  return (\n+    <If condition={filterToShowList[filterID] !== undefined}>\n+      <Heading type={HeadingTypes.h6} label=\"Add widgets to configure\" />\n+      {filterToShowList[filterID].map((showID: string, showIndex: number) => {\n+        return (\n+          <If condition={showToInfo[showID]}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0OTc5MQ==", "bodyText": "Same here.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440549791", "createdAt": "2020-06-16T02:26:21Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/index.tsx", "diffHunk": "@@ -0,0 +1,201 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import Button from '@material-ui/core/Button';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import WidgetWrapper from 'components/ConfigurationGroup/WidgetWrapper';\n+import If from 'components/If';\n+import FilterConditionInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput';\n+import FilterShowlistInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput';\n+import { ICreateContext } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    filterInput: {\n+      display: 'block',\n+      marginLeft: 'auto',\n+      marginRight: 'auto',\n+      marginTop: '10px',\n+      marginBottom: '10px',\n+      '& > *': {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0OTg4Nw==", "bodyText": "Are we sure this is required? Where is this 1000px coming from?", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440549887", "createdAt": "2020-06-16T02:26:42Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/index.tsx", "diffHunk": "@@ -0,0 +1,201 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import Button from '@material-ui/core/Button';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import WidgetWrapper from 'components/ConfigurationGroup/WidgetWrapper';\n+import If from 'components/If';\n+import FilterConditionInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput';\n+import FilterShowlistInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput';\n+import { ICreateContext } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    filterInput: {\n+      display: 'block',\n+      marginLeft: 'auto',\n+      marginRight: 'auto',\n+      marginTop: '10px',\n+      marginBottom: '10px',\n+      '& > *': {\n+        marginTop: '15px',\n+        marginBottom: '15px',\n+      },\n+    },\n+    nestedFilters: {\n+      border: `1px solid`,\n+      borderColor: theme.palette.grey[300],\n+      borderRadius: '6px',\n+      position: 'relative',\n+      padding: '7px 10px 5px',\n+      margin: '25px',\n+    },\n+    filterContainer: {\n+      width: 'calc(100%-1000px)',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU1MDEwNA==", "bodyText": "Same here. Missing key prop.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440550104", "createdAt": "2020-06-16T02:27:25Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/index.tsx", "diffHunk": "@@ -0,0 +1,201 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import Button from '@material-ui/core/Button';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import WidgetWrapper from 'components/ConfigurationGroup/WidgetWrapper';\n+import If from 'components/If';\n+import FilterConditionInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput';\n+import FilterShowlistInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput';\n+import { ICreateContext } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    filterInput: {\n+      display: 'block',\n+      marginLeft: 'auto',\n+      marginRight: 'auto',\n+      marginTop: '10px',\n+      marginBottom: '10px',\n+      '& > *': {\n+        marginTop: '15px',\n+        marginBottom: '15px',\n+      },\n+    },\n+    nestedFilters: {\n+      border: `1px solid`,\n+      borderColor: theme.palette.grey[300],\n+      borderRadius: '6px',\n+      position: 'relative',\n+      padding: '7px 10px 5px',\n+      margin: '25px',\n+    },\n+    filterContainer: {\n+      width: 'calc(100%-1000px)',\n+    },\n+  };\n+};\n+\n+const FilterNameInput = ({ filterID, filterToName, setFilterToName }) => {\n+  function setFilterName(filterObjID: string) {\n+    return (name) => {\n+      setFilterToName((prevObjs) => ({ ...prevObjs, [filterObjID]: name }));\n+    };\n+  }\n+\n+  const label = 'Filter Name';\n+\n+  const widget = {\n+    label,\n+    'widget-type': 'textbox',\n+  };\n+\n+  const property = {\n+    required: false,\n+    name: label,\n+  };\n+\n+  return (\n+    <WidgetWrapper\n+      widgetProperty={widget}\n+      pluginProperty={property}\n+      value={filterToName[filterID]}\n+      onChange={setFilterName(filterID)}\n+    />\n+  );\n+};\n+\n+const FilterCollectionView: React.FC<ICreateContext & WithStyles<typeof styles>> = ({\n+  classes,\n+  filters,\n+  setFilters,\n+  filterToName,\n+  setFilterToName,\n+  filterToCondition,\n+  setFilterToCondition,\n+  filterToShowList,\n+  setFilterToShowList,\n+  showToInfo,\n+  setShowToInfo,\n+  widgetInfo,\n+}) => {\n+  function addFilter(index: number) {\n+    const newFilterID = 'Filter_' + uuidV4();\n+\n+    const newFilters = [...filters];\n+\n+    if (newFilters.length === 0) {\n+      newFilters.splice(0, 0, newFilterID);\n+    } else {\n+      newFilters.splice(index + 1, 0, newFilterID);\n+    }\n+\n+    setFilters(newFilters);\n+\n+    setFilterToName({ ...filterToName, [newFilterID]: '' });\n+    setFilterToCondition({ ...filterToCondition, [newFilterID]: {} });\n+\n+    // put one empty show as a placeholder\n+    const newShowID = 'Show_' + uuidV4();\n+    setFilterToShowList({\n+      ...filterToShowList,\n+      [newFilterID]: [newShowID],\n+    });\n+    setShowToInfo({\n+      ...showToInfo,\n+      [newShowID]: {\n+        name: '',\n+      } as IPropertyShowConfig,\n+    });\n+  }\n+\n+  function deleteFilter(index: number) {\n+    const newFilters = [...filters];\n+    const filterToDelete = newFilters[index];\n+    newFilters.splice(index, 1);\n+    setFilters(newFilters);\n+\n+    const { [filterToDelete]: name, ...restFilterToName } = filterToName;\n+    setFilterToName(restFilterToName);\n+\n+    const { [filterToDelete]: condition, ...restFilterToCondition } = filterToCondition;\n+    setFilterToCondition(restFilterToCondition);\n+\n+    const { [filterToDelete]: showList, ...restFilterToShowList } = filterToShowList;\n+    setFilterToShowList(restFilterToShowList);\n+\n+    showList.map((show) => {\n+      const { [show]: info, ...rest } = showToInfo;\n+      setShowToInfo(rest);\n+    });\n+  }\n+\n+  return (\n+    <div>\n+      {filters.map((filterID: string, filterIndex: number) => {\n+        return (\n+          <div className={classes.nestedFilters} data-cy=\"widget-wrapper-container\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU1MDIwOQ==", "bodyText": "Same here.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440550209", "createdAt": "2020-06-16T02:27:47Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/JsonMenu/ClosedJsonMenu/index.tsx", "diffHunk": "@@ -30,6 +30,9 @@ const styles = (theme): StyleRules => {\n     jsonActionButtons: {\n       padding: '15px',\n       flexDirection: 'column',\n+      '& > *': {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU1MDM1OA==", "bodyText": "Could you please extract this out as an if condition? IMHO it is easier to read.", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440550358", "createdAt": "2020-06-16T02:28:23Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/JsonMenu/utilities.ts", "diffHunk": "@@ -47,9 +51,25 @@ function getJSONConfig(widgetJSONData) {\n     ...(outputName && { name: outputName }),\n   };\n \n+  const filtersData = filters.map((filterID) => {\n+    const filterToShowListData = filterToShowList[filterID].map((showID) => {\n+      return {\n+        name: showToInfo[showID].name,\n+        ...(showToInfo[showID].type && {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU1MTk4NQ==", "bodyText": "Do we need to hardcode it?", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r440551985", "createdAt": "2020-06-16T02:35:09Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/JsonMenu/utilities.ts", "diffHunk": "@@ -47,9 +51,25 @@ function getJSONConfig(widgetJSONData) {\n     ...(outputName && { name: outputName }),\n   };\n \n+  const filtersData = filters.map((filterID) => {\n+    const filterToShowListData = filterToShowList[filterID].map((showID) => {\n+      return {\n+        name: showToInfo[showID].name,\n+        ...(showToInfo[showID].type && {\n+          type: showToInfo[showID].type,\n+        }),\n+      };\n+    });\n+    return {\n+      name: filterToName[filterID],\n+      condition: filterToCondition[filterID],\n+      show: filterToShowListData,\n+    };\n+  });\n+\n   const config = {\n     metadata: {\n-      'spec-version': SPEC_VERSION,\n+      'spec-version': '1.5',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3d3d79b4b184e3d2ad9efcf9155c358f4ad93b"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMDAwOTc5", "url": "https://github.com/cdapio/cdap/pull/12244#pullrequestreview-433000979", "createdAt": "2020-06-18T07:14:51Z", "commit": {"oid": "9b664285b6426902f7720f57412daa97b694e951"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzoxNDo1MVrOGlifRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzoxOToxNVrOGlioAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxNTU1Nw==", "bodyText": "why is the !isNil(widgetName) being done twice with AND?", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r442015557", "createdAt": "2020-06-18T07:14:51Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput/index.tsx", "diffHunk": "@@ -0,0 +1,164 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { StyleRules, withStyles, WithStyles } from '@material-ui/core/styles';\n+import { CustomOperator } from 'components/ConfigurationGroup/types';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { OPERATOR_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import isNil from 'lodash/isNil';\n+import * as React from 'react';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    filterConditionInput: {\n+      marginTop: '10px',\n+      marginBottom: '10px',\n+    },\n+  };\n+};\n+\n+export enum FilterConditionMode {\n+  Operator = 'operator',\n+  Expression = 'expression',\n+}\n+\n+enum FilterConditionProperty {\n+  Expression = 'expression',\n+  Property = 'property',\n+  Operator = 'operator',\n+  Value = 'value',\n+}\n+\n+interface IFilterConditionInputProps extends WithStyles<typeof styles>, ICreateContext {\n+  filterID: string;\n+}\n+\n+const FilterConditionInputview: React.FC<IFilterConditionInputProps> = ({\n+  classes,\n+  filterID,\n+  filterToCondition,\n+  setFilterToCondition,\n+  widgetInfo,\n+}) => {\n+  const existingCondition = filterToCondition[filterID];\n+\n+  const [conditionMode, setConditionMode] = React.useState(\n+    existingCondition.expression ? FilterConditionMode.Expression : FilterConditionMode.Operator\n+  );\n+\n+  const allWidgetNames = widgetInfo\n+    ? Object.values(widgetInfo)\n+        .map((info: IWidgetInfo) => info.name)\n+        .filter((widgetName) => !isNil(widgetName) && !isNil(widgetName))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b664285b6426902f7720f57412daa97b694e951"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxNjYzNQ==", "bodyText": "same here regarding the isNil check", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r442016635", "createdAt": "2020-06-18T07:16:58Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput/index.tsx", "diffHunk": "@@ -0,0 +1,191 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import IconButton from '@material-ui/core/IconButton';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import AddIcon from '@material-ui/icons/Add';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import classnames from 'classnames';\n+import { IPropertyShowConfig } from 'components/ConfigurationGroup/types';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { SHOW_TYPE_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import isNil from 'lodash/isNil';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    showConfigCollection: {\n+      display: 'grid',\n+      gridAutoFlow: 'column',\n+      width: '100%',\n+    },\n+    showConfigInput: {\n+      gridRow: '1',\n+      width: '100%',\n+    },\n+    showConfigNameInput: {\n+      gridColumnStart: '1',\n+      gridColumnEnd: '8',\n+    },\n+    showConfigTypeInput: {\n+      gridColumnStart: '9',\n+      gridColumnEnd: '15',\n+    },\n+    showAddDeleteButtonInput: {\n+      gridColumnStart: '19',\n+      gridColumnEnd: '20',\n+    },\n+    showAddDeleteButton: {\n+      float: 'right',\n+    },\n+  };\n+};\n+\n+interface IFilterShowlistInputProps extends WithStyles<typeof styles>, ICreateContext {\n+  filterID: string;\n+}\n+\n+const FilterShowlistInputView: React.FC<IFilterShowlistInputProps> = ({\n+  classes,\n+  filterID,\n+  filterToShowList,\n+  setFilterToShowList,\n+  showToInfo,\n+  setShowToInfo,\n+  widgetInfo,\n+}) => {\n+  const allWidgetNames = widgetInfo\n+    ? Object.values(widgetInfo)\n+        .map((info: IWidgetInfo) => info.name)\n+        .filter((widgetName) => !isNil(widgetName) && !isNil(widgetName))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b664285b6426902f7720f57412daa97b694e951"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxNzE5NQ==", "bodyText": "you might have change this in immutableJS PR, but just to make sure - this is mutating the original array, we should clone the array first", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r442017195", "createdAt": "2020-06-18T07:18:05Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput/index.tsx", "diffHunk": "@@ -0,0 +1,191 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import IconButton from '@material-ui/core/IconButton';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import AddIcon from '@material-ui/icons/Add';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import classnames from 'classnames';\n+import { IPropertyShowConfig } from 'components/ConfigurationGroup/types';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import { SHOW_TYPE_VALUES } from 'components/PluginJSONCreator/constants';\n+import PluginInput from 'components/PluginJSONCreator/Create/Content/PluginInput';\n+import { ICreateContext, IWidgetInfo } from 'components/PluginJSONCreator/CreateContextConnect';\n+import isNil from 'lodash/isNil';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    showConfigCollection: {\n+      display: 'grid',\n+      gridAutoFlow: 'column',\n+      width: '100%',\n+    },\n+    showConfigInput: {\n+      gridRow: '1',\n+      width: '100%',\n+    },\n+    showConfigNameInput: {\n+      gridColumnStart: '1',\n+      gridColumnEnd: '8',\n+    },\n+    showConfigTypeInput: {\n+      gridColumnStart: '9',\n+      gridColumnEnd: '15',\n+    },\n+    showAddDeleteButtonInput: {\n+      gridColumnStart: '19',\n+      gridColumnEnd: '20',\n+    },\n+    showAddDeleteButton: {\n+      float: 'right',\n+    },\n+  };\n+};\n+\n+interface IFilterShowlistInputProps extends WithStyles<typeof styles>, ICreateContext {\n+  filterID: string;\n+}\n+\n+const FilterShowlistInputView: React.FC<IFilterShowlistInputProps> = ({\n+  classes,\n+  filterID,\n+  filterToShowList,\n+  setFilterToShowList,\n+  showToInfo,\n+  setShowToInfo,\n+  widgetInfo,\n+}) => {\n+  const allWidgetNames = widgetInfo\n+    ? Object.values(widgetInfo)\n+        .map((info: IWidgetInfo) => info.name)\n+        .filter((widgetName) => !isNil(widgetName) && !isNil(widgetName))\n+    : [];\n+\n+  function setShowProperty(showID: string, property: string) {\n+    return (val) => {\n+      setShowToInfo((prevObjs) => ({\n+        ...prevObjs,\n+        [showID]: { ...prevObjs[showID], [property]: val },\n+      }));\n+    };\n+  }\n+\n+  function addShowToFilter(filterObjID: string, index?: number) {\n+    const newShowID = 'Show_' + uuidV4();\n+\n+    setShowToInfo({\n+      ...showToInfo,\n+      [newShowID]: {\n+        name: '',\n+      } as IPropertyShowConfig,\n+    });\n+\n+    if (index === undefined) {\n+      setFilterToShowList({\n+        ...filterToShowList,\n+        [filterObjID]: [...filterToShowList[filterObjID], newShowID],\n+      });\n+    } else {\n+      const showList = filterToShowList[filterObjID];\n+\n+      if (showList.length === 0) {\n+        showList.splice(0, 0, newShowID);\n+      } else {\n+        showList.splice(index + 1, 0, newShowID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b664285b6426902f7720f57412daa97b694e951"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxNzU0Nw==", "bodyText": "consolidate these to the margin property", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r442017547", "createdAt": "2020-06-18T07:18:46Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/index.tsx", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import Button from '@material-ui/core/Button';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import { IPropertyShowConfig } from 'components/ConfigurationGroup/types';\n+import WidgetWrapper from 'components/ConfigurationGroup/WidgetWrapper';\n+import If from 'components/If';\n+import FilterConditionInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput';\n+import FilterShowlistInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput';\n+import { ICreateContext } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    filterInput: {\n+      display: 'block',\n+      marginLeft: 'auto',\n+      marginRight: 'auto',\n+      marginTop: '30px',\n+      marginBottom: '30px',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b664285b6426902f7720f57412daa97b694e951"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxNzc5Mg==", "bodyText": "border: 1px solid ${theme.palette.grey[300]}", "url": "https://github.com/cdapio/cdap/pull/12244#discussion_r442017792", "createdAt": "2020-06-18T07:19:15Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/Filters/FilterCollection/index.tsx", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import Button from '@material-ui/core/Button';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import { IPropertyShowConfig } from 'components/ConfigurationGroup/types';\n+import WidgetWrapper from 'components/ConfigurationGroup/WidgetWrapper';\n+import If from 'components/If';\n+import FilterConditionInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterConditionInput';\n+import FilterShowlistInput from 'components/PluginJSONCreator/Create/Content/Filters/FilterCollection/FilterShowlistInput';\n+import { ICreateContext } from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    filterInput: {\n+      display: 'block',\n+      marginLeft: 'auto',\n+      marginRight: 'auto',\n+      marginTop: '30px',\n+      marginBottom: '30px',\n+    },\n+    nestedFilters: {\n+      border: `1px solid`,\n+      borderColor: theme.palette.grey[300],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b664285b6426902f7720f57412daa97b694e951"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "29e3faa34e2d2e27362e7fbac0fc0d5ead337bdd", "author": {"user": {"login": "jennac3", "name": "Jenna Choi"}}, "url": "https://github.com/cdapio/cdap/commit/29e3faa34e2d2e27362e7fbac0fc0d5ead337bdd", "committedDate": "2020-06-18T12:22:58Z", "message": "address comments"}, "afterCommit": {"oid": "157ae8c15cb7974ae6fbcc12c05beefe8b92f756", "author": {"user": {"login": "jennac3", "name": "Jenna Choi"}}, "url": "https://github.com/cdapio/cdap/commit/157ae8c15cb7974ae6fbcc12c05beefe8b92f756", "committedDate": "2020-06-18T13:11:29Z", "message": "fix"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "157ae8c15cb7974ae6fbcc12c05beefe8b92f756", "author": {"user": {"login": "jennac3", "name": "Jenna Choi"}}, "url": "https://github.com/cdapio/cdap/commit/157ae8c15cb7974ae6fbcc12c05beefe8b92f756", "committedDate": "2020-06-18T13:11:29Z", "message": "fix"}, "afterCommit": {"oid": "730b6da8fecb40c4e0b3cfb362b230b70975e470", "author": {"user": {"login": "jennac3", "name": "Jenna Choi"}}, "url": "https://github.com/cdapio/cdap/commit/730b6da8fecb40c4e0b3cfb362b230b70975e470", "committedDate": "2020-06-18T13:25:47Z", "message": "[CDAP-16890] Create a page for filters configuration (plugin JSON creator)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNzM1NDI0", "url": "https://github.com/cdapio/cdap/pull/12244#pullrequestreview-433735424", "createdAt": "2020-06-19T00:48:41Z", "commit": {"oid": "f77b82e198f463c0ab9286abe4c994294866da01"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8610424a215260f19c2cea84f4958ae3cb72181d", "author": {"user": {"login": "jennac3", "name": "Jenna Choi"}}, "url": "https://github.com/cdapio/cdap/commit/8610424a215260f19c2cea84f4958ae3cb72181d", "committedDate": "2020-06-19T14:45:08Z", "message": "[CDAP-16890] Create a page for filters configuration (plugin JSON creator)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f77b82e198f463c0ab9286abe4c994294866da01", "author": {"user": {"login": "jennac3", "name": "Jenna Choi"}}, "url": "https://github.com/cdapio/cdap/commit/f77b82e198f463c0ab9286abe4c994294866da01", "committedDate": "2020-06-18T13:31:19Z", "message": "merge conflict fix"}, "afterCommit": {"oid": "8610424a215260f19c2cea84f4958ae3cb72181d", "author": {"user": {"login": "jennac3", "name": "Jenna Choi"}}, "url": "https://github.com/cdapio/cdap/commit/8610424a215260f19c2cea84f4958ae3cb72181d", "committedDate": "2020-06-19T14:45:08Z", "message": "[CDAP-16890] Create a page for filters configuration (plugin JSON creator)"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1966, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}