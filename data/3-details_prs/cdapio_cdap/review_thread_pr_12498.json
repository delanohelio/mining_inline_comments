{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NDI5MzE0", "number": 12498, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMDowMzo0N1rOESmdDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMTo1OToxN1rOETfYpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTM5ODUzOnYy", "diffSide": "RIGHT", "path": "cdap-ui/package.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMDowMzo0N1rOG33yxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxOTo0MTozNVrOG4byPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzODk4MA==", "bodyText": "this doesn't seem to be used", "url": "https://github.com/cdapio/cdap/pull/12498#discussion_r461238980", "createdAt": "2020-07-28T00:03:47Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/package.json", "diffHunk": "@@ -73,6 +75,7 @@\n     \"babel-eslint\": \"7.2.3\",\n     \"babel-jest\": \"24.9.0\",\n     \"babel-loader\": \"8.0.6\",\n+    \"babel-plugin-dynamic-import-node\": \"^2.3.3\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90bf866da7c6230ce03ef943febc96faa6ecb15c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgyODY2OQ==", "bodyText": "done", "url": "https://github.com/cdapio/cdap/pull/12498#discussion_r461828669", "createdAt": "2020-07-28T19:41:35Z", "author": {"login": "jennac3"}, "path": "cdap-ui/package.json", "diffHunk": "@@ -73,6 +75,7 @@\n     \"babel-eslint\": \"7.2.3\",\n     \"babel-jest\": \"24.9.0\",\n     \"babel-loader\": \"8.0.6\",\n+    \"babel-plugin-dynamic-import-node\": \"^2.3.3\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzODk4MA=="}, "originalCommit": {"oid": "90bf866da7c6230ce03ef943febc96faa6ecb15c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTQwMDAyOnYy", "diffSide": "RIGHT", "path": "cdap-ui/package.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMDowNDoyNlrOG33zoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxOTo0MTozN1rOG4byXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzOTIwMA==", "bodyText": "I thought this was removed?", "url": "https://github.com/cdapio/cdap/pull/12498#discussion_r461239200", "createdAt": "2020-07-28T00:04:26Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/package.json", "diffHunk": "@@ -140,15 +145,18 @@\n     \"tslint\": \"5.20.1\",\n     \"tslint-config-prettier\": \"1.18.0\",\n     \"tslint-plugin-prettier\": \"2.1.0\",\n+    \"uglifyjs-webpack-plugin\": \"1.0.1\",\n     \"url-loader\": \"3.0.0\",\n     \"webpack\": \"4.41.2\",\n+    \"webpack-bundle-analyzer\": \"^3.8.0\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90bf866da7c6230ce03ef943febc96faa6ecb15c"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgyODcwMA==", "bodyText": "done", "url": "https://github.com/cdapio/cdap/pull/12498#discussion_r461828700", "createdAt": "2020-07-28T19:41:37Z", "author": {"login": "jennac3"}, "path": "cdap-ui/package.json", "diffHunk": "@@ -140,15 +145,18 @@\n     \"tslint\": \"5.20.1\",\n     \"tslint-config-prettier\": \"1.18.0\",\n     \"tslint-plugin-prettier\": \"2.1.0\",\n+    \"uglifyjs-webpack-plugin\": \"1.0.1\",\n     \"url-loader\": \"3.0.0\",\n     \"webpack\": \"4.41.2\",\n+    \"webpack-bundle-analyzer\": \"^3.8.0\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzOTIwMA=="}, "originalCommit": {"oid": "90bf866da7c6230ce03ef943febc96faa6ecb15c"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODcyNTAwOnYy", "diffSide": "RIGHT", "path": "cdap-ui/webpack.config.cdap.dev.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMTo1ODo0MVrOG5QUoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNTowMToxM1rOG5nEZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY4OTQ0MA==", "bodyText": "why not just set this directly on the webpackConfig object?", "url": "https://github.com/cdapio/cdap/pull/12498#discussion_r462689440", "createdAt": "2020-07-30T01:58:41Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/webpack.config.cdap.dev.js", "diffHunk": "@@ -0,0 +1,288 @@\n+/*\n+ * Copyright \u00a9 2016 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+var webpack = require('webpack');\n+var CopyWebpackPlugin = require('copy-webpack-plugin');\n+var path = require('path');\n+var HtmlWebpackPlugin = require('html-webpack-plugin');\n+var StyleLintPlugin = require('stylelint-webpack-plugin');\n+var CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin');\n+const { CleanWebpackPlugin } = require('clean-webpack-plugin');\n+var ForkTsCheckerWebpackPlugin = require('fork-ts-checker-webpack-plugin');\n+var LodashModuleReplacementPlugin = require('lodash-webpack-plugin');\n+const SpeedMeasurePlugin = require(\"speed-measure-webpack-plugin\");\n+\n+const smp = new SpeedMeasurePlugin();\n+\n+const devMode = process.env.NODE_ENV;\n+\n+// the clean options to use\n+let cleanOptions = {\n+  verbose: true,\n+  dry: false,\n+  cleanStaleWebpackAssets: false, // reduces down from 2.7seconds to 2.2seconds\n+};\n+\n+const loaderExclude = [\n+  /node_modules/,\n+  /bower_components/,\n+  /packaged\\/public\\/dist/,\n+  /packaged\\/public\\/cdap_dist/,\n+  /packaged\\/public\\/common_dist/,\n+  /lib/,\n+];\n+\n+var mode = 'development'; // process.env.NODE_ENV || 'production';\n+const getWebpackDllPlugins = (mode) => {\n+  var sharedDllManifestFileName = 'shared-vendor-manifest.json';\n+  var cdapDllManifestFileName = 'cdap-vendor-manifest.json';\n+  if (mode === 'development') {\n+    sharedDllManifestFileName = 'shared-vendor-development-manifest.json';\n+    cdapDllManifestFileName = 'cdap-vendor-development-manifest.json';\n+  }\n+  return [\n+    new webpack.DllReferencePlugin({\n+      context: path.resolve(__dirname, 'packaged', 'public', 'dll'),\n+      manifest: require(path.join(\n+        __dirname,\n+        'packaged',\n+        'public',\n+        'dll',\n+        sharedDllManifestFileName\n+      )),\n+    }),\n+    new webpack.DllReferencePlugin({\n+      context: path.resolve(__dirname, 'packaged', 'public', 'dll'),\n+      manifest: require(path.join(__dirname, 'packaged', 'public', 'dll', cdapDllManifestFileName)),\n+    }),\n+  ];\n+};\n+var plugins = [\n+  new CleanWebpackPlugin(cleanOptions),\n+  new CaseSensitivePathsPlugin(),\n+  ...getWebpackDllPlugins(mode),\n+  new LodashModuleReplacementPlugin({\n+    shorthands: true,\n+    collections: true,\n+    caching: true,\n+  }),\n+  new CopyWebpackPlugin(\n+    [\n+      {\n+        from: './styles/fonts',\n+        to: './fonts/',\n+      },\n+      {\n+        from: path.resolve(__dirname, 'node_modules', 'font-awesome', 'fonts'),\n+        to: './fonts/',\n+      },\n+      {\n+        from: './styles/img',\n+        to: './img/',\n+      },\n+      {\n+        from: './**/*-web-worker.js',\n+        to: './web-workers/',\n+        flatten: true,\n+      },\n+    ],\n+    {\n+      copyUnmodified: false,\n+    }\n+  ),\n+  new HtmlWebpackPlugin({\n+    title: 'CDAP',\n+    template: './cdap.html',\n+    filename: 'cdap.html',\n+    hash: true,\n+    inject: false,\n+    mode: 'development.',\n+  }),\n+  new StyleLintPlugin({\n+    syntax: 'scss',\n+    files: ['**/*.scss'],\n+    lintDirtyModulesOnly: true,\n+  }),\n+  new ForkTsCheckerWebpackPlugin({\n+    tsconfig: __dirname + '/tsconfig.json',\n+    tslint: __dirname + '/tslint.json',\n+    tslintAutoFix: true,\n+    // watch: [\"./app/cdap\"], // optional but improves performance (less stat calls)\n+    memoryLimit: 8192,\n+  })\n+];\n+var rules = [\n+  {\n+    test: /\\.s?css$/,\n+    use: ['style-loader', 'css-loader', 'postcss-loader', 'sass-loader'],\n+  },\n+  {\n+    test: /\\.ya?ml$/,\n+    use: 'yml-loader',\n+  },\n+  {\n+    enforce: 'pre',\n+    test: /\\.js$/,\n+    loader: 'eslint-loader',\n+    options: {\n+      fix: true,\n+    },\n+    exclude: loaderExclude,\n+  },\n+  {\n+    test: /\\.js$/,\n+    use: ['react-hot-loader/webpack', 'babel-loader?cacheDirectory'],\n+    exclude: loaderExclude,\n+    include: [path.join(__dirname, 'app'), path.join(__dirname, '.storybook')],\n+  },\n+  {\n+    test: /\\.tsx?$/,\n+    use: [\n+      'react-hot-loader/webpack',\n+      'babel-loader?cacheDirectory',\n+      {\n+        loader: 'ts-loader',\n+        options: {\n+          transpileOnly: true,\n+          experimentalWatchApi: true, // added\n+        },\n+      },\n+    ],\n+    exclude: loaderExclude,\n+  },\n+  {\n+    test: /\\.woff(2)?(\\?v=[0-9]\\.[0-9]\\.[0-9])?$/,\n+    use: [\n+      {\n+        loader: 'url-loader',\n+        options: {\n+          limit: 10000,\n+          mimetype: 'application/font-woff',\n+        },\n+      },\n+    ],\n+  },\n+  {\n+    test: /\\.(ttf|eot)(\\?v=[0-9]\\.[0-9]\\.[0-9])?$/,\n+    use: 'url-loader',\n+  },\n+  {\n+    test: /\\.svg/,\n+    use: [\n+      {\n+        loader: 'svg-sprite-loader',\n+      },\n+    ],\n+  },\n+];\n+\n+var webpackConfig = {\n+  mode: 'development',\n+  devtool: 'eval-source-map',\n+  context: __dirname + '/app/cdap',\n+  entry: {\n+    cdap: [\n+      'react-hot-loader/patch', // RHL patch\n+      '@babel/polyfill',\n+      './cdap.js'\n+    ],\n+  },\n+  module: {\n+    rules,\n+  },\n+  output: {\n+    filename: '[name].js',\n+    chunkFilename: '[name].js',\n+    hotUpdateChunkFilename: 'hot-update.js',\n+    hotUpdateMainFilename: 'hot-update.json',\n+    path: __dirname + '/packaged/public/cdap_dist/cdap_assets/',\n+    publicPath: '/cdap_assets/',\n+    pathinfo: false, // added. reduces 0.2~0.3 seconds\n+  },\n+  stats: {\n+    assets: false,\n+    children: false,\n+    chunkGroups: false,\n+    chunkModules: false,\n+    chunkOrigins: false,\n+    chunks: false,\n+    modules: false,\n+  },\n+  plugins: plugins,\n+  // TODO: Need to investigate this more.\n+  optimization: {\n+    moduleIds: \"hashed\",\n+    runtimeChunk: {\n+      name: \"manifest\",\n+    },\n+    removeAvailableModules: false,\n+    removeEmptyChunks: false,\n+    splitChunks: {\n+      cacheGroups: {\n+        vendor: {\n+          name: \"node_vedors\",\n+          test: /[\\\\/]node_modules[\\\\/]/,\n+          chunks: \"all\",\n+          reuseExistingChunk: true,\n+        },\n+        fonts: {\n+          name: \"fonts\",\n+          test: /[\\\\/]app[\\\\/]cdap[\\\\/]styles[\\\\/]fonts[\\\\/]/,\n+          chunks: \"all\",\n+          reuseExistingChunk: true,\n+        },\n+      }\n+    },\n+    minimize: true,\n+  },\n+  resolve: {\n+    extensions: ['.ts', '.tsx', '.js', '.jsx', '.scss'],\n+    alias: {\n+      components: __dirname + '/app/cdap/components',\n+      services: __dirname + '/app/cdap/services',\n+      api: __dirname + '/app/cdap/api',\n+      lib: __dirname + '/app/lib',\n+      styles: __dirname + '/app/cdap/styles',\n+      'react-dom': '@hot-loader/react-dom',\n+    },\n+  },\n+  devServer: {\n+    index: 'cdap.html',\n+    contentBase: path.join(__dirname, '/packaged/public/cdap_dist/cdap_assets/'),\n+    port: 8080,\n+    open: 'chrome',\n+    writeToDisk: true,\n+    publicPath: '/cdap_assets/',\n+    watchContentBase: devMode === 'reload',\n+    historyApiFallback: true,\n+    hot: true,\n+    inline: true,\n+    proxy: {\n+      '/api': {\n+        target: 'http://localhost:11011',\n+        pathRewrite: { '^/api': '' }\n+      }\n+    }\n+  }\n+};\n+\n+webpackConfig.devtool = 'eval-cheap-module-source-map';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb2da48e7d61d5aea78914e75c33398e11c3a107"}, "originalPosition": 282}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA2MjExNg==", "bodyText": "Resolved", "url": "https://github.com/cdapio/cdap/pull/12498#discussion_r463062116", "createdAt": "2020-07-30T15:01:13Z", "author": {"login": "jennac3"}, "path": "cdap-ui/webpack.config.cdap.dev.js", "diffHunk": "@@ -0,0 +1,288 @@\n+/*\n+ * Copyright \u00a9 2016 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+var webpack = require('webpack');\n+var CopyWebpackPlugin = require('copy-webpack-plugin');\n+var path = require('path');\n+var HtmlWebpackPlugin = require('html-webpack-plugin');\n+var StyleLintPlugin = require('stylelint-webpack-plugin');\n+var CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin');\n+const { CleanWebpackPlugin } = require('clean-webpack-plugin');\n+var ForkTsCheckerWebpackPlugin = require('fork-ts-checker-webpack-plugin');\n+var LodashModuleReplacementPlugin = require('lodash-webpack-plugin');\n+const SpeedMeasurePlugin = require(\"speed-measure-webpack-plugin\");\n+\n+const smp = new SpeedMeasurePlugin();\n+\n+const devMode = process.env.NODE_ENV;\n+\n+// the clean options to use\n+let cleanOptions = {\n+  verbose: true,\n+  dry: false,\n+  cleanStaleWebpackAssets: false, // reduces down from 2.7seconds to 2.2seconds\n+};\n+\n+const loaderExclude = [\n+  /node_modules/,\n+  /bower_components/,\n+  /packaged\\/public\\/dist/,\n+  /packaged\\/public\\/cdap_dist/,\n+  /packaged\\/public\\/common_dist/,\n+  /lib/,\n+];\n+\n+var mode = 'development'; // process.env.NODE_ENV || 'production';\n+const getWebpackDllPlugins = (mode) => {\n+  var sharedDllManifestFileName = 'shared-vendor-manifest.json';\n+  var cdapDllManifestFileName = 'cdap-vendor-manifest.json';\n+  if (mode === 'development') {\n+    sharedDllManifestFileName = 'shared-vendor-development-manifest.json';\n+    cdapDllManifestFileName = 'cdap-vendor-development-manifest.json';\n+  }\n+  return [\n+    new webpack.DllReferencePlugin({\n+      context: path.resolve(__dirname, 'packaged', 'public', 'dll'),\n+      manifest: require(path.join(\n+        __dirname,\n+        'packaged',\n+        'public',\n+        'dll',\n+        sharedDllManifestFileName\n+      )),\n+    }),\n+    new webpack.DllReferencePlugin({\n+      context: path.resolve(__dirname, 'packaged', 'public', 'dll'),\n+      manifest: require(path.join(__dirname, 'packaged', 'public', 'dll', cdapDllManifestFileName)),\n+    }),\n+  ];\n+};\n+var plugins = [\n+  new CleanWebpackPlugin(cleanOptions),\n+  new CaseSensitivePathsPlugin(),\n+  ...getWebpackDllPlugins(mode),\n+  new LodashModuleReplacementPlugin({\n+    shorthands: true,\n+    collections: true,\n+    caching: true,\n+  }),\n+  new CopyWebpackPlugin(\n+    [\n+      {\n+        from: './styles/fonts',\n+        to: './fonts/',\n+      },\n+      {\n+        from: path.resolve(__dirname, 'node_modules', 'font-awesome', 'fonts'),\n+        to: './fonts/',\n+      },\n+      {\n+        from: './styles/img',\n+        to: './img/',\n+      },\n+      {\n+        from: './**/*-web-worker.js',\n+        to: './web-workers/',\n+        flatten: true,\n+      },\n+    ],\n+    {\n+      copyUnmodified: false,\n+    }\n+  ),\n+  new HtmlWebpackPlugin({\n+    title: 'CDAP',\n+    template: './cdap.html',\n+    filename: 'cdap.html',\n+    hash: true,\n+    inject: false,\n+    mode: 'development.',\n+  }),\n+  new StyleLintPlugin({\n+    syntax: 'scss',\n+    files: ['**/*.scss'],\n+    lintDirtyModulesOnly: true,\n+  }),\n+  new ForkTsCheckerWebpackPlugin({\n+    tsconfig: __dirname + '/tsconfig.json',\n+    tslint: __dirname + '/tslint.json',\n+    tslintAutoFix: true,\n+    // watch: [\"./app/cdap\"], // optional but improves performance (less stat calls)\n+    memoryLimit: 8192,\n+  })\n+];\n+var rules = [\n+  {\n+    test: /\\.s?css$/,\n+    use: ['style-loader', 'css-loader', 'postcss-loader', 'sass-loader'],\n+  },\n+  {\n+    test: /\\.ya?ml$/,\n+    use: 'yml-loader',\n+  },\n+  {\n+    enforce: 'pre',\n+    test: /\\.js$/,\n+    loader: 'eslint-loader',\n+    options: {\n+      fix: true,\n+    },\n+    exclude: loaderExclude,\n+  },\n+  {\n+    test: /\\.js$/,\n+    use: ['react-hot-loader/webpack', 'babel-loader?cacheDirectory'],\n+    exclude: loaderExclude,\n+    include: [path.join(__dirname, 'app'), path.join(__dirname, '.storybook')],\n+  },\n+  {\n+    test: /\\.tsx?$/,\n+    use: [\n+      'react-hot-loader/webpack',\n+      'babel-loader?cacheDirectory',\n+      {\n+        loader: 'ts-loader',\n+        options: {\n+          transpileOnly: true,\n+          experimentalWatchApi: true, // added\n+        },\n+      },\n+    ],\n+    exclude: loaderExclude,\n+  },\n+  {\n+    test: /\\.woff(2)?(\\?v=[0-9]\\.[0-9]\\.[0-9])?$/,\n+    use: [\n+      {\n+        loader: 'url-loader',\n+        options: {\n+          limit: 10000,\n+          mimetype: 'application/font-woff',\n+        },\n+      },\n+    ],\n+  },\n+  {\n+    test: /\\.(ttf|eot)(\\?v=[0-9]\\.[0-9]\\.[0-9])?$/,\n+    use: 'url-loader',\n+  },\n+  {\n+    test: /\\.svg/,\n+    use: [\n+      {\n+        loader: 'svg-sprite-loader',\n+      },\n+    ],\n+  },\n+];\n+\n+var webpackConfig = {\n+  mode: 'development',\n+  devtool: 'eval-source-map',\n+  context: __dirname + '/app/cdap',\n+  entry: {\n+    cdap: [\n+      'react-hot-loader/patch', // RHL patch\n+      '@babel/polyfill',\n+      './cdap.js'\n+    ],\n+  },\n+  module: {\n+    rules,\n+  },\n+  output: {\n+    filename: '[name].js',\n+    chunkFilename: '[name].js',\n+    hotUpdateChunkFilename: 'hot-update.js',\n+    hotUpdateMainFilename: 'hot-update.json',\n+    path: __dirname + '/packaged/public/cdap_dist/cdap_assets/',\n+    publicPath: '/cdap_assets/',\n+    pathinfo: false, // added. reduces 0.2~0.3 seconds\n+  },\n+  stats: {\n+    assets: false,\n+    children: false,\n+    chunkGroups: false,\n+    chunkModules: false,\n+    chunkOrigins: false,\n+    chunks: false,\n+    modules: false,\n+  },\n+  plugins: plugins,\n+  // TODO: Need to investigate this more.\n+  optimization: {\n+    moduleIds: \"hashed\",\n+    runtimeChunk: {\n+      name: \"manifest\",\n+    },\n+    removeAvailableModules: false,\n+    removeEmptyChunks: false,\n+    splitChunks: {\n+      cacheGroups: {\n+        vendor: {\n+          name: \"node_vedors\",\n+          test: /[\\\\/]node_modules[\\\\/]/,\n+          chunks: \"all\",\n+          reuseExistingChunk: true,\n+        },\n+        fonts: {\n+          name: \"fonts\",\n+          test: /[\\\\/]app[\\\\/]cdap[\\\\/]styles[\\\\/]fonts[\\\\/]/,\n+          chunks: \"all\",\n+          reuseExistingChunk: true,\n+        },\n+      }\n+    },\n+    minimize: true,\n+  },\n+  resolve: {\n+    extensions: ['.ts', '.tsx', '.js', '.jsx', '.scss'],\n+    alias: {\n+      components: __dirname + '/app/cdap/components',\n+      services: __dirname + '/app/cdap/services',\n+      api: __dirname + '/app/cdap/api',\n+      lib: __dirname + '/app/lib',\n+      styles: __dirname + '/app/cdap/styles',\n+      'react-dom': '@hot-loader/react-dom',\n+    },\n+  },\n+  devServer: {\n+    index: 'cdap.html',\n+    contentBase: path.join(__dirname, '/packaged/public/cdap_dist/cdap_assets/'),\n+    port: 8080,\n+    open: 'chrome',\n+    writeToDisk: true,\n+    publicPath: '/cdap_assets/',\n+    watchContentBase: devMode === 'reload',\n+    historyApiFallback: true,\n+    hot: true,\n+    inline: true,\n+    proxy: {\n+      '/api': {\n+        target: 'http://localhost:11011',\n+        pathRewrite: { '^/api': '' }\n+      }\n+    }\n+  }\n+};\n+\n+webpackConfig.devtool = 'eval-cheap-module-source-map';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY4OTQ0MA=="}, "originalCommit": {"oid": "eb2da48e7d61d5aea78914e75c33398e11c3a107"}, "originalPosition": 282}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODcyNjEzOnYy", "diffSide": "RIGHT", "path": "cdap-ui/package.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMTo1OToxN1rOG5QVRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNTowMToxN1rOG5nEiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY4OTYwNQ==", "bodyText": "not being used", "url": "https://github.com/cdapio/cdap/pull/12498#discussion_r462689605", "createdAt": "2020-07-30T01:59:17Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/package.json", "diffHunk": "@@ -140,6 +144,7 @@\n     \"tslint\": \"5.20.1\",\n     \"tslint-config-prettier\": \"1.18.0\",\n     \"tslint-plugin-prettier\": \"2.1.0\",\n+    \"uglifyjs-webpack-plugin\": \"1.0.1\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb2da48e7d61d5aea78914e75c33398e11c3a107"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA2MjE1NQ==", "bodyText": "Resolved", "url": "https://github.com/cdapio/cdap/pull/12498#discussion_r463062155", "createdAt": "2020-07-30T15:01:17Z", "author": {"login": "jennac3"}, "path": "cdap-ui/package.json", "diffHunk": "@@ -140,6 +144,7 @@\n     \"tslint\": \"5.20.1\",\n     \"tslint-config-prettier\": \"1.18.0\",\n     \"tslint-plugin-prettier\": \"2.1.0\",\n+    \"uglifyjs-webpack-plugin\": \"1.0.1\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY4OTYwNQ=="}, "originalCommit": {"oid": "eb2da48e7d61d5aea78914e75c33398e11c3a107"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3247, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}