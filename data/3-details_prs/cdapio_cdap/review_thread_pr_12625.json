{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MjY3MTgx", "number": 12625, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOToyNDowOFrOEXWaQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOToyNDozM1rOEXWa0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTE5ODc1OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/PluginSchemaEditor/index.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOToyNDowOFrOG_GC-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNzoyNjo0MFrOHHWS2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgxMjUzNg==", "bodyText": "I believe if (!Array.isArray(fields) || !fields) could also work.", "url": "https://github.com/cdapio/cdap/pull/12625#discussion_r468812536", "createdAt": "2020-08-11T19:24:08Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/PluginSchemaEditor/index.tsx", "diffHunk": "@@ -441,7 +441,12 @@ class PluginSchemaEditorBase extends React.PureComponent<\n           disabled={this.props.disabled}\n           onChange={({ avroSchema }) => {\n             const newSchemas = [...this.props.schemas];\n-            newSchemas[i] = avroSchema;\n+            const fields = objectQuery(avroSchema, 'schema', 'fields');\n+            if (!Array.isArray(fields) || !fields.length) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab80d5807c9874e11f452210baf1db6599b9cfe0"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ2NzM1Mg==", "bodyText": "This will not check for empty arrays", "url": "https://github.com/cdapio/cdap/pull/12625#discussion_r477467352", "createdAt": "2020-08-26T17:26:40Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PluginSchemaEditor/index.tsx", "diffHunk": "@@ -441,7 +441,12 @@ class PluginSchemaEditorBase extends React.PureComponent<\n           disabled={this.props.disabled}\n           onChange={({ avroSchema }) => {\n             const newSchemas = [...this.props.schemas];\n-            newSchemas[i] = avroSchema;\n+            const fields = objectQuery(avroSchema, 'schema', 'fields');\n+            if (!Array.isArray(fields) || !fields.length) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgxMjUzNg=="}, "originalCommit": {"oid": "ab80d5807c9874e11f452210baf1db6599b9cfe0"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTIwMDE2OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/AbstractWidget/SchemaEditor/Context/SchemaParser.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOToyNDozM1rOG_GD3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNzoyNzoyNFrOHHWUdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgxMjc2Ng==", "bodyText": "maybe we can try something like const fields = (avroSchema || getDefaultEmptyAvroSchema()).schema.fields;, if this does not work we can also try ternary.", "url": "https://github.com/cdapio/cdap/pull/12625#discussion_r468812766", "createdAt": "2020-08-11T19:24:33Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/SchemaEditor/Context/SchemaParser.ts", "diffHunk": "@@ -412,7 +412,10 @@ function parseSubTree(field: IFieldType | IFieldTypeNullable): INode {\n  */\n function parseSchema(avroSchema: ISchemaType): INode {\n   const name = avroSchema.name || 'etlSchemaBody';\n-  const fields = avroSchema.schema.fields;\n+  let fields = avroSchema.schema.fields;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab80d5807c9874e11f452210baf1db6599b9cfe0"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ2Nzc2Nw==", "bodyText": "Checking for fields seemed more specific and easier to read. But I see the concern of using dot operator and have used objectQuery to make sure it is safe.", "url": "https://github.com/cdapio/cdap/pull/12625#discussion_r477467767", "createdAt": "2020-08-26T17:27:24Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/SchemaEditor/Context/SchemaParser.ts", "diffHunk": "@@ -412,7 +412,10 @@ function parseSubTree(field: IFieldType | IFieldTypeNullable): INode {\n  */\n function parseSchema(avroSchema: ISchemaType): INode {\n   const name = avroSchema.name || 'etlSchemaBody';\n-  const fields = avroSchema.schema.fields;\n+  let fields = avroSchema.schema.fields;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgxMjc2Ng=="}, "originalCommit": {"oid": "ab80d5807c9874e11f452210baf1db6599b9cfe0"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3191, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}