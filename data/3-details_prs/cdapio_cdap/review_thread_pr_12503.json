{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NjY4MTA4", "number": 12503, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjowMDoyNFrOESktGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjoxMTo1MVrOESk43w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTExMTkzOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/AbstractWidget/SchemaEditor/Context/SchemaGenerator.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjowMDoyNFrOG31I1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjowMDoyNFrOG31I1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5NTQ3Ng==", "bodyText": "can if (typeProperties && typeProperties.doc) also work as well?", "url": "https://github.com/cdapio/cdap/pull/12503#discussion_r461195476", "createdAt": "2020-07-27T22:00:24Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/SchemaEditor/Context/SchemaGenerator.ts", "diffHunk": "@@ -235,6 +237,12 @@ function SchemaGenerator(schemaTree: INode) {\n       if (isFieldComplexType) {\n         field.type = generateSchemaFromComplexType(type, currentField, nullable);\n       }\n+      if (!isEmpty(typeProperties) && typeProperties.doc) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02d83c2f233e3cb08d32d1581781ec73dde19eae"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTExNTI0OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/AbstractWidget/SchemaEditor/RowButtons/FieldAttributes/FieldAttributesPopoverButton.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjowMTozMlrOG31KvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjowMTozMlrOG31KvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5NTk2NQ==", "bodyText": "Could we add a comment explaining why we need such condition? Or could we possibly break it down into a function or const?", "url": "https://github.com/cdapio/cdap/pull/12503#discussion_r461195965", "createdAt": "2020-07-27T22:01:32Z", "author": {"login": "jennac3"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/SchemaEditor/RowButtons/FieldAttributes/FieldAttributesPopoverButton.tsx", "diffHunk": "@@ -98,10 +103,15 @@ function FieldPropertiesPopoverButton({\n         }}\n       >\n         <fieldset className={classes.popoverContainer} disabled={disabled}>\n-          <If condition={!isFlatRowTypeComplex(type)}>\n-            <strong>No Attributes</strong>\n-          </If>\n-          <If condition={type === AvroSchemaTypesEnum.RECORD || type === AvroSchemaTypesEnum.ENUM}>\n+          <If\n+            condition={\n+              (type === AvroSchemaTypesEnum.RECORD ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02d83c2f233e3cb08d32d1581781ec73dde19eae"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTE0MjA3OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/AbstractWidget/SchemaEditor/Context/SchemaGenerator.ts", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjoxMTo1MVrOG31avw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjo0NTozOVrOG32M_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwMDA2Mw==", "bodyText": "What are the types of doc and aliases? aliases is an array, correct? Should they be copied here to avoid any issues from downstream mutations?", "url": "https://github.com/cdapio/cdap/pull/12503#discussion_r461200063", "createdAt": "2020-07-27T22:11:51Z", "author": {"login": "njbriggs"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/SchemaEditor/Context/SchemaGenerator.ts", "diffHunk": "@@ -235,6 +237,12 @@ function SchemaGenerator(schemaTree: INode) {\n       if (isFieldComplexType) {\n         field.type = generateSchemaFromComplexType(type, currentField, nullable);\n       }\n+      if (!isEmpty(typeProperties) && typeProperties.doc) {\n+        field.doc = typeProperties.doc;\n+      }\n+      if (!isEmpty(typeProperties) && typeProperties.aliases) {\n+        field.aliases = typeProperties.aliases;\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02d83c2f233e3cb08d32d1581781ec73dde19eae"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMDk4Mg==", "bodyText": "Some of the operations that happens in schema manager does in place changes instead of creating copies. This is purely done for performance. In a schema with 5k-10k fields with 10 levels nesting there was a lot more performance issue with creating copies to avoid mutation. Most of the operations happening in the tree are mutations.\nSpecifically here the doc is a string and aliases is an array of string. We intentionally break the chain between mutations happening within the component to state maintained in schema manager. If you strongly feel we should use ImmutableJS its a broader conversation we should probably discuss outside this PR.", "url": "https://github.com/cdapio/cdap/pull/12503#discussion_r461210982", "createdAt": "2020-07-27T22:40:23Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/SchemaEditor/Context/SchemaGenerator.ts", "diffHunk": "@@ -235,6 +237,12 @@ function SchemaGenerator(schemaTree: INode) {\n       if (isFieldComplexType) {\n         field.type = generateSchemaFromComplexType(type, currentField, nullable);\n       }\n+      if (!isEmpty(typeProperties) && typeProperties.doc) {\n+        field.doc = typeProperties.doc;\n+      }\n+      if (!isEmpty(typeProperties) && typeProperties.aliases) {\n+        field.aliases = typeProperties.aliases;\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwMDA2Mw=="}, "originalCommit": {"oid": "02d83c2f233e3cb08d32d1581781ec73dde19eae"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMjkyNQ==", "bodyText": "I'm not arguing for Immutable.js. I was just wondering if doing a .slice() on these arrays when they get assigned would avoid potential issues down the line.", "url": "https://github.com/cdapio/cdap/pull/12503#discussion_r461212925", "createdAt": "2020-07-27T22:45:39Z", "author": {"login": "njbriggs"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/SchemaEditor/Context/SchemaGenerator.ts", "diffHunk": "@@ -235,6 +237,12 @@ function SchemaGenerator(schemaTree: INode) {\n       if (isFieldComplexType) {\n         field.type = generateSchemaFromComplexType(type, currentField, nullable);\n       }\n+      if (!isEmpty(typeProperties) && typeProperties.doc) {\n+        field.doc = typeProperties.doc;\n+      }\n+      if (!isEmpty(typeProperties) && typeProperties.aliases) {\n+        field.aliases = typeProperties.aliases;\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwMDA2Mw=="}, "originalCommit": {"oid": "02d83c2f233e3cb08d32d1581781ec73dde19eae"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3254, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}