{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NDE0ODg3", "number": 12589, "title": "[CDAP-17151, CDAP-16997] Add submitTime in the PreviewStatus for UI and reconcile the preview run status if pod dies because of OOM.", "bodyText": "This PR contains following changes in separate commits:\nCommit 1: Added submitTime to PreviewStatus along with existing startingTime so UI can display clock correctly on page refreshes. https://issues.cask.co/browse/CDAP-17151\nCommit 2: When preview runner pod starts executing  a preview, it stores the program id on a disk attached to the pod. At the end of preview run (successfully or otherwise) file containing program id is deleted. As a part of bootstrap process, preview runner pod checks if any program id file exists from the previous run, if it does it means pod was terminated abruptly without having an opportunity to send the preview status to preview manager. Send RUN_FAILED status for such preview. https://issues.cask.co/browse/CDAP-16997", "createdAt": "2020-08-07T06:18:42Z", "url": "https://github.com/cdapio/cdap/pull/12589", "merged": true, "mergeCommit": {"oid": "9ff2792641e5ae237ae62e93e3ce75aa94ed5c4d"}, "closed": true, "closedAt": "2020-08-12T09:31:42Z", "author": {"login": "sagarkapare"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9sY3rgFqTQ2NDY4MTQ5OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-FB3agBqjM2NDYxMTQ2MzU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NjgxNDk4", "url": "https://github.com/cdapio/cdap/pull/12589#pullrequestreview-464681498", "createdAt": "2020-08-11T01:00:31Z", "commit": {"oid": "983e5f7d01dc986e05cfc3f6aef96eb049fe4646"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMTowMDozMVrOG-kvrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMToxODoxNlrOG-lCFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI2NjkyNQ==", "bodyText": "Why use Long instead of the primitive long?", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r468266925", "createdAt": "2020-08-11T01:00:31Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewStatus.java", "diffHunk": "@@ -51,18 +51,20 @@ public boolean isEndState() {\n \n   private final Status status;\n   private final BasicThrowable throwable;\n+  private final Long submitTime;\n   private final Long startTime;\n   private final Long endTime;\n   private final Integer positionInWaitingQueue;\n \n-  public PreviewStatus(Status status, @Nullable BasicThrowable throwable, @Nullable Long startTime,\n+  public PreviewStatus(Status status, Long submitTime, @Nullable BasicThrowable throwable, @Nullable Long startTime,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "983e5f7d01dc986e05cfc3f6aef96eb049fe4646"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI2OTAyNg==", "bodyText": "Why it is OK instead of NOT_FOUND? The UI can't handle it correctly?", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r468269026", "createdAt": "2020-08-11T01:08:50Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/preview/PreviewHttpHandler.java", "diffHunk": "@@ -209,14 +209,19 @@ public void getPreviewLogsNext(HttpRequest request, HttpResponder responder,\n                                  @QueryParam(\"filter\") @DefaultValue(\"\") String filterStr,\n                                  @QueryParam(\"format\") @DefaultValue(\"text\") String format,\n                                  @QueryParam(\"suppress\") List<String> suppress) throws Exception {\n-    sendLogs(namespaceId, previewId,\n+    sendLogs(responder, namespaceId, previewId,\n              info -> doNext(info.getLogReader(), responder, info.getLoggingContext(), maxEvents,\n                             fromOffsetStr, escape, filterStr, info.getRunRecord(), format, suppress));\n   }\n \n-  private void sendLogs(String namespaceId, String previewId, Consumer<LogReaderInfo> logsResponder) throws Exception {\n+  private void sendLogs(HttpResponder responder, String namespaceId, String previewId,\n+                        Consumer<LogReaderInfo> logsResponder) throws Exception {\n     ApplicationId applicationId = new ApplicationId(namespaceId, previewId);\n     ProgramRunId programRunId = previewManager.getRunId(applicationId);\n+    if (programRunId == null) {\n+      responder.sendStatus(HttpResponseStatus.OK);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "983e5f7d01dc986e05cfc3f6aef96eb049fe4646"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI3MTYzOQ==", "bodyText": "Having a class name with Wrapper at the top level is awkward. Typically wrapper class should be private/internal. Why we need this interface? In standalone we can write out the same file and delete it, isn't it?", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r468271639", "createdAt": "2020-08-11T01:18:16Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java", "diffHunk": "@@ -117,7 +125,8 @@\n                        ProgramNotificationSubscriberService programNotificationSubscriberService,\n                        LevelDBTableService levelDBTableService,\n                        StructuredTableAdmin structuredTableAdmin,\n-                       StructuredTableRegistry structuredTableRegistry) {\n+                       StructuredTableRegistry structuredTableRegistry, PreviewRunWrapper previewRunWrapper,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "524d47dc9d48e0bff8c17c3e3d96932f0b1aa955"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "524d47dc9d48e0bff8c17c3e3d96932f0b1aa955", "author": {"user": {"login": "sagarkapare", "name": "sagarkapare"}}, "url": "https://github.com/cdapio/cdap/commit/524d47dc9d48e0bff8c17c3e3d96932f0b1aa955", "committedDate": "2020-08-07T06:11:30Z", "message": "[CDAP-16997] Reconcile status of the preview run if pod dies because of OOM."}, "afterCommit": {"oid": "06177b97b3a4e2da316f26ad799f3efc1f12117e", "author": {"user": {"login": "sagarkapare", "name": "sagarkapare"}}, "url": "https://github.com/cdapio/cdap/commit/06177b97b3a4e2da316f26ad799f3efc1f12117e", "committedDate": "2020-08-11T07:41:45Z", "message": "[CDAP-16997] Reconcile status of the preview run if pod dies because of OOM."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NDk3Mjg0", "url": "https://github.com/cdapio/cdap/pull/12589#pullrequestreview-465497284", "createdAt": "2020-08-11T23:35:56Z", "commit": {"oid": "a9a6ec661469ccafa8e3aa3ee77b462040882b2b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMzozNTo1NlrOG_MwdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMzozNTo1NlrOG_MwdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkyMjQ4NA==", "bodyText": "Will calling destroy() transit this guava Service to COMPLETED state?? Do you want this service stop?", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r468922484", "createdAt": "2020-08-11T23:35:56Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/DistributedPreviewRunner.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.app.preview;\n+\n+import com.google.gson.Gson;\n+import com.google.inject.Inject;\n+import io.cdap.cdap.api.common.Bytes;\n+import io.cdap.cdap.api.metrics.MetricsCollectionService;\n+import io.cdap.cdap.app.runtime.ProgramRuntimeService;\n+import io.cdap.cdap.common.app.RunIds;\n+import io.cdap.cdap.common.conf.CConfiguration;\n+import io.cdap.cdap.common.conf.Constants;\n+import io.cdap.cdap.common.namespace.NamespaceAdmin;\n+import io.cdap.cdap.data2.datafabric.dataset.service.DatasetService;\n+import io.cdap.cdap.data2.datafabric.dataset.service.executor.DatasetOpExecutorService;\n+import io.cdap.cdap.data2.dataset2.lib.table.leveldb.LevelDBTableService;\n+import io.cdap.cdap.internal.app.preview.DefaultPreviewRunner;\n+import io.cdap.cdap.internal.app.services.ApplicationLifecycleService;\n+import io.cdap.cdap.internal.app.services.ProgramLifecycleService;\n+import io.cdap.cdap.internal.app.services.ProgramNotificationSubscriberService;\n+import io.cdap.cdap.logging.appender.LogAppenderInitializer;\n+import io.cdap.cdap.messaging.MessagingService;\n+import io.cdap.cdap.proto.BasicThrowable;\n+import io.cdap.cdap.proto.id.ProgramId;\n+import io.cdap.cdap.spi.data.StructuredTableAdmin;\n+import io.cdap.cdap.spi.data.table.StructuredTableRegistry;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.io.Reader;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.concurrent.TimeUnit;\n+\n+/**\n+ * Distributed implementation of {@link PreviewRunner}.\n+ */\n+public class DistributedPreviewRunner extends DefaultPreviewRunner {\n+  private static final Logger LOG = LoggerFactory.getLogger(DistributedPreviewRunner.class);\n+  private static final Gson GSON = new Gson();\n+\n+  private final Path programIdFilePath;\n+\n+  @Inject\n+  public DistributedPreviewRunner(\n+    MessagingService messagingService,\n+    DatasetOpExecutorService dsOpExecService,\n+    DatasetService datasetService,\n+    LogAppenderInitializer logAppenderInitializer,\n+    ApplicationLifecycleService applicationLifecycleService,\n+    ProgramRuntimeService programRuntimeService,\n+    ProgramLifecycleService programLifecycleService,\n+    PreviewDataPublisher previewDataPublisher,\n+    DataTracerFactory dataTracerFactory,\n+    NamespaceAdmin namespaceAdmin,\n+    MetricsCollectionService metricsCollectionService,\n+    ProgramNotificationSubscriberService programNotificationSubscriberService,\n+    LevelDBTableService levelDBTableService,\n+    StructuredTableAdmin structuredTableAdmin,\n+    StructuredTableRegistry structuredTableRegistry,\n+    CConfiguration cConf) {\n+    super(messagingService, dsOpExecService, datasetService, logAppenderInitializer, applicationLifecycleService,\n+          programRuntimeService, programLifecycleService, previewDataPublisher, dataTracerFactory, namespaceAdmin,\n+          metricsCollectionService, programNotificationSubscriberService, levelDBTableService, structuredTableAdmin,\n+          structuredTableRegistry);\n+    this.programIdFilePath = Paths.get(cConf.get(Constants.CFG_LOCAL_DATA_DIR), \"program.id\").toAbsolutePath();\n+  }\n+\n+  @Override\n+  protected void startUp() throws Exception {\n+    super.startUp();\n+\n+    if (Files.exists(programIdFilePath)) {\n+      try (Reader reader = Files.newBufferedReader(programIdFilePath, StandardCharsets.UTF_8)) {\n+        ProgramId programId = GSON.fromJson(reader, ProgramId.class);\n+        long submitTimeMillis = RunIds.getTime(programId.getApplication(), TimeUnit.MILLISECONDS);\n+        PreviewStatus status = new PreviewStatus(\n+          PreviewStatus.Status.RUN_FAILED, submitTimeMillis,\n+          new BasicThrowable(new Exception(\"Preview runner container killed possibly because of out of memory. \" +\n+                                             \"Please try running preview again.\")),\n+          null, null);\n+        setStatus(programId, status);\n+      }\n+      destroy();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9a6ec661469ccafa8e3aa3ee77b462040882b2b"}, "originalPosition": 101}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e99f98e383b080bd714f5f107dad10468ce8adbd", "author": {"user": {"login": "sagarkapare", "name": "sagarkapare"}}, "url": "https://github.com/cdapio/cdap/commit/e99f98e383b080bd714f5f107dad10468ce8adbd", "committedDate": "2020-08-12T00:53:27Z", "message": "Addressed comments."}, "afterCommit": {"oid": "36ccb8340d254e319f11d4f0e5522a8f0b567687", "author": {"user": {"login": "sagarkapare", "name": "sagarkapare"}}, "url": "https://github.com/cdapio/cdap/commit/36ccb8340d254e319f11d4f0e5522a8f0b567687", "committedDate": "2020-08-12T02:05:57Z", "message": "Addressed comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NTg2Mjkx", "url": "https://github.com/cdapio/cdap/pull/12589#pullrequestreview-465586291", "createdAt": "2020-08-12T04:41:22Z", "commit": {"oid": "36ccb8340d254e319f11d4f0e5522a8f0b567687"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNDo0MToyMlrOG_RkJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNTowMTowMlrOG_R21A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwMTI1Mg==", "bodyText": "long?", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r469001252", "createdAt": "2020-08-12T04:41:22Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewStatus.java", "diffHunk": "@@ -73,6 +75,10 @@ public Status getStatus() {\n     return status;\n   }\n \n+  public Long getSubmitTime() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36ccb8340d254e319f11d4f0e5522a8f0b567687"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwMTM2Nw==", "bodyText": "For primitive type, use == to compare", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r469001367", "createdAt": "2020-08-12T04:41:46Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewStatus.java", "diffHunk": "@@ -116,6 +122,7 @@ public boolean equals(Object o) {\n \n     PreviewStatus status1 = (PreviewStatus) o;\n     return status == status1.status &&\n+      Objects.equals(submitTime, status1.submitTime) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36ccb8340d254e319f11d4f0e5522a8f0b567687"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwMjAwMg==", "bodyText": "Should be done in the startup method and let the exception bubble out. Generally not good to throw exception from constructor for classes that are created via Guice injection.", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r469002002", "createdAt": "2020-08-12T04:44:36Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java", "diffHunk": "@@ -132,14 +144,19 @@\n     this.levelDBTableService = levelDBTableService;\n     this.structuredTableAdmin = structuredTableAdmin;\n     this.structuredTableRegistry = structuredTableRegistry;\n+    this.previewIdDirPath = Paths.get(cConf.get(Constants.CFG_LOCAL_DATA_DIR), \"previewid\").toAbsolutePath();\n+    try {\n+      Files.createDirectories(previewIdDirPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36ccb8340d254e319f11d4f0e5522a8f0b567687"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwMjI3MQ==", "bodyText": "Is this change still necessary?", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r469002271", "createdAt": "2020-08-12T04:45:43Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java", "diffHunk": "@@ -264,7 +285,7 @@ private void trackPreviewTimeout(PreviewRequest previewRequest, AtomicBoolean ti\n     timeoutThread.start();\n   }\n \n-  private void setStatus(ProgramId programId, PreviewStatus previewStatus) {\n+  protected void setStatus(ProgramId programId, PreviewStatus previewStatus) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36ccb8340d254e319f11d4f0e5522a8f0b567687"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwNTk4OQ==", "bodyText": "Use paths.filter(Files::isRegularFile).forEach", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r469005989", "createdAt": "2020-08-12T05:00:44Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java", "diffHunk": "@@ -299,6 +320,27 @@ protected void startUp() throws Exception {\n       metricsCollectionService.start(),\n       programNotificationSubscriberService.start()\n     ).get();\n+\n+    // Reconcile status for abruptly terminated preview runs\n+    try (Stream<Path> paths = Files.walk(Paths.get(previewIdDirPath.toString()))) {\n+      paths.forEach(path -> {\n+        if (Files.isDirectory(path)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36ccb8340d254e319f11d4f0e5522a8f0b567687"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwNjAzNg==", "bodyText": "No need to call .toString", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r469006036", "createdAt": "2020-08-12T05:01:02Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java", "diffHunk": "@@ -299,6 +320,27 @@ protected void startUp() throws Exception {\n       metricsCollectionService.start(),\n       programNotificationSubscriberService.start()\n     ).get();\n+\n+    // Reconcile status for abruptly terminated preview runs\n+    try (Stream<Path> paths = Files.walk(Paths.get(previewIdDirPath.toString()))) {\n+      paths.forEach(path -> {\n+        if (Files.isDirectory(path)) {\n+          return;\n+        }\n+        try (Reader reader = Files.newBufferedReader(path, StandardCharsets.UTF_8)) {\n+          ProgramId programId = GSON.fromJson(reader, ProgramId.class);\n+          long submitTimeMillis = RunIds.getTime(programId.getApplication(), TimeUnit.MILLISECONDS);\n+          PreviewStatus status = new PreviewStatus(\n+            PreviewStatus.Status.RUN_FAILED, submitTimeMillis,\n+            new BasicThrowable(new Exception(\"Preview runner container killed possibly because of out of memory. \" +\n+                                               \"Please try running preview again.\")),\n+            null, null);\n+          previewTerminated(programId, status);\n+        } catch (IOException e) {\n+          LOG.warn(\"Error reading file {}. Ignoring\", path.toString(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36ccb8340d254e319f11d4f0e5522a8f0b567687"}, "originalPosition": 144}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NjA5Mzkw", "url": "https://github.com/cdapio/cdap/pull/12589#pullrequestreview-465609390", "createdAt": "2020-08-12T05:55:07Z", "commit": {"oid": "f235df5fe981c8aae05f7ed60661beae8d0303e0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f89916a90262b544610e393d6b21e9018d44fa17", "author": {"user": {"login": "sagarkapare", "name": "sagarkapare"}}, "url": "https://github.com/cdapio/cdap/commit/f89916a90262b544610e393d6b21e9018d44fa17", "committedDate": "2020-08-12T06:00:21Z", "message": "[CDAP-17151] Add submit time to preview status.\n\n[CDAP-16997] Reconcile status of the preview run if pod dies because of OOM."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f235df5fe981c8aae05f7ed60661beae8d0303e0", "author": {"user": {"login": "sagarkapare", "name": "sagarkapare"}}, "url": "https://github.com/cdapio/cdap/commit/f235df5fe981c8aae05f7ed60661beae8d0303e0", "committedDate": "2020-08-12T05:19:50Z", "message": "Addressed comments."}, "afterCommit": {"oid": "f89916a90262b544610e393d6b21e9018d44fa17", "author": {"user": {"login": "sagarkapare", "name": "sagarkapare"}}, "url": "https://github.com/cdapio/cdap/commit/f89916a90262b544610e393d6b21e9018d44fa17", "committedDate": "2020-08-12T06:00:21Z", "message": "[CDAP-17151] Add submit time to preview status.\n\n[CDAP-16997] Reconcile status of the preview run if pod dies because of OOM."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1785, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}