{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MDgwNzA0", "number": 12795, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOTo1ODowNFrOEqdhIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMToyODo0MFrOErafUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTU5MjY1OnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewConfigModule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOTo1ODowNFrOHcrqyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNDozMDo0M1rOHdiMgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgzNzY0Mg==", "bodyText": "Remove extra new line", "url": "https://github.com/cdapio/cdap/pull/12795#discussion_r499837642", "createdAt": "2020-10-05T19:58:04Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewConfigModule.java", "diffHunk": "@@ -47,6 +47,8 @@\n   public static final String PREVIEW_SCONF = \"previewSConf\";\n   public static final String PREVIEW_LEVEL_DB = \"previewLevelDB\";\n   public static final String GLOBAL_TMS = \"globalTMS\";\n+  public static final String GLOBAL_METRICS = \"globalMetrics\";\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57214946ede52abbc4f27a48e5807d367fa955bb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDczMTAxMQ==", "bodyText": "done", "url": "https://github.com/cdapio/cdap/pull/12795#discussion_r500731011", "createdAt": "2020-10-07T04:30:43Z", "author": {"login": "rmstar"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewConfigModule.java", "diffHunk": "@@ -47,6 +47,8 @@\n   public static final String PREVIEW_SCONF = \"previewSConf\";\n   public static final String PREVIEW_LEVEL_DB = \"previewLevelDB\";\n   public static final String GLOBAL_TMS = \"globalTMS\";\n+  public static final String GLOBAL_METRICS = \"globalMetrics\";\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgzNzY0Mg=="}, "originalCommit": {"oid": "57214946ede52abbc4f27a48e5807d367fa955bb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTYxMDY4OnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/ProgramNotificationSubscriberService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDowMzo0NFrOHcr16A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNDozMTowMlrOHdiM3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg0MDQ4OA==", "bodyText": "Only having app in the context meaning we can't distinguish different program run time in the metrics? I think the program should be in the context hierarchy", "url": "https://github.com/cdapio/cdap/pull/12795#discussion_r499840488", "createdAt": "2020-10-05T20:03:44Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/ProgramNotificationSubscriberService.java", "diffHunk": "@@ -671,6 +678,22 @@ private void emitProvisioningTimeMetric(ProgramRunId programRunId, ProfileId pro\n                                                     provisioningTime);\n   }\n \n+  /**\n+   * Emit the pipeline run time metric. The tags are constructed with the program run id and program run status.\n+   */\n+  private void emitRunTimeMetric(ProgramRunId programRunId, ProgramRunStatus programRunStatus,\n+                                 long runTime) {\n+    Map<String, String> tags = ImmutableMap.<String, String>builder()\n+      .put(Constants.Metrics.Tag.NAMESPACE, programRunId.getNamespace())\n+      .put(Constants.Metrics.Tag.APP, programRunId.getApplication())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57214946ede52abbc4f27a48e5807d367fa955bb"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDczMTEwMw==", "bodyText": "fixed.", "url": "https://github.com/cdapio/cdap/pull/12795#discussion_r500731103", "createdAt": "2020-10-07T04:31:02Z", "author": {"login": "rmstar"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/ProgramNotificationSubscriberService.java", "diffHunk": "@@ -671,6 +678,22 @@ private void emitProvisioningTimeMetric(ProgramRunId programRunId, ProfileId pro\n                                                     provisioningTime);\n   }\n \n+  /**\n+   * Emit the pipeline run time metric. The tags are constructed with the program run id and program run status.\n+   */\n+  private void emitRunTimeMetric(ProgramRunId programRunId, ProgramRunStatus programRunStatus,\n+                                 long runTime) {\n+    Map<String, String> tags = ImmutableMap.<String, String>builder()\n+      .put(Constants.Metrics.Tag.NAMESPACE, programRunId.getNamespace())\n+      .put(Constants.Metrics.Tag.APP, programRunId.getApplication())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg0MDQ4OA=="}, "originalCommit": {"oid": "57214946ede52abbc4f27a48e5807d367fa955bb"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTYxNjI5OnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/ProgramNotificationSubscriberService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDowNToyOVrOHcr5bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDowNToyOVrOHcr5bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg0MTM5MQ==", "bodyText": "Why we need component? Component is not for user program context. Also, RunId should be in the context, right? See https://github.com/cdapio/cdap/blob/develop/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/AbstractContext.java#L290 for how a program run context should be", "url": "https://github.com/cdapio/cdap/pull/12795#discussion_r499841391", "createdAt": "2020-10-05T20:05:29Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/ProgramNotificationSubscriberService.java", "diffHunk": "@@ -671,6 +678,22 @@ private void emitProvisioningTimeMetric(ProgramRunId programRunId, ProfileId pro\n                                                     provisioningTime);\n   }\n \n+  /**\n+   * Emit the pipeline run time metric. The tags are constructed with the program run id and program run status.\n+   */\n+  private void emitRunTimeMetric(ProgramRunId programRunId, ProgramRunStatus programRunStatus,\n+                                 long runTime) {\n+    Map<String, String> tags = ImmutableMap.<String, String>builder()\n+      .put(Constants.Metrics.Tag.NAMESPACE, programRunId.getNamespace())\n+      .put(Constants.Metrics.Tag.APP, programRunId.getApplication())\n+      .put(Constants.Metrics.Tag.COMPONENT, Constants.Service.APP_FABRIC_HTTP)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57214946ede52abbc4f27a48e5807d367fa955bb"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTYxOTMyOnYy", "diffSide": "RIGHT", "path": "cdap-common/src/main/java/io/cdap/cdap/common/conf/Constants.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDowNjozMVrOHcr7YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNDozMTowOVrOHdiM-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg0MTg4OQ==", "bodyText": "Remove extra new line", "url": "https://github.com/cdapio/cdap/pull/12795#discussion_r499841889", "createdAt": "2020-10-05T20:06:31Z", "author": {"login": "chtyim"}, "path": "cdap-common/src/main/java/io/cdap/cdap/common/conf/Constants.java", "diffHunk": "@@ -700,6 +700,8 @@\n \n       public static final String PROVISIONER = \"prv\";\n       public static final String SPARK = \"sp\";\n+      public static final String STATUS = \"st\";\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57214946ede52abbc4f27a48e5807d367fa955bb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDczMTEzMA==", "bodyText": "done.", "url": "https://github.com/cdapio/cdap/pull/12795#discussion_r500731130", "createdAt": "2020-10-07T04:31:09Z", "author": {"login": "rmstar"}, "path": "cdap-common/src/main/java/io/cdap/cdap/common/conf/Constants.java", "diffHunk": "@@ -700,6 +700,8 @@\n \n       public static final String PROVISIONER = \"prv\";\n       public static final String SPARK = \"sp\";\n+      public static final String STATUS = \"st\";\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg0MTg4OQ=="}, "originalCommit": {"oid": "57214946ede52abbc4f27a48e5807d367fa955bb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTYxOTUyOnYy", "diffSide": "RIGHT", "path": "cdap-watchdog/src/main/java/io/cdap/cdap/metrics/query/MetricsQueryHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDowNjozNVrOHcr7fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNDozMToxNVrOHdiNEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg0MTkxNw==", "bodyText": "Remove extra new line", "url": "https://github.com/cdapio/cdap/pull/12795#discussion_r499841917", "createdAt": "2020-10-05T20:06:35Z", "author": {"login": "chtyim"}, "path": "cdap-watchdog/src/main/java/io/cdap/cdap/metrics/query/MetricsQueryHelper.java", "diffHunk": "@@ -110,6 +110,8 @@\n       .put(Constants.Metrics.Tag.PROVISIONER, \"provisioner\")\n \n       .put(Constants.Metrics.Tag.SPARK, \"spark\")\n+      .put(Constants.Metrics.Tag.STATUS, \"status\")\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57214946ede52abbc4f27a48e5807d367fa955bb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDczMTE1NA==", "bodyText": "done.", "url": "https://github.com/cdapio/cdap/pull/12795#discussion_r500731154", "createdAt": "2020-10-07T04:31:15Z", "author": {"login": "rmstar"}, "path": "cdap-watchdog/src/main/java/io/cdap/cdap/metrics/query/MetricsQueryHelper.java", "diffHunk": "@@ -110,6 +110,8 @@\n       .put(Constants.Metrics.Tag.PROVISIONER, \"provisioner\")\n \n       .put(Constants.Metrics.Tag.SPARK, \"spark\")\n+      .put(Constants.Metrics.Tag.STATUS, \"status\")\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg0MTkxNw=="}, "originalCommit": {"oid": "57214946ede52abbc4f27a48e5807d367fa955bb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzODM4Njg3OnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/PreviewDataSubscriberService.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxODoxMzozN1rOHd_rvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMzoyODoyM1rOHeI_Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIxNDE0MQ==", "bodyText": "Metrics context that involves execution should have program and run id. See AbstractContext for reference\nhttps://github.com/cdapio/cdap/blob/develop/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/AbstractContext.java#L293", "url": "https://github.com/cdapio/cdap/pull/12795#discussion_r501214141", "createdAt": "2020-10-07T18:13:37Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/PreviewDataSubscriberService.java", "diffHunk": "@@ -173,6 +177,20 @@ protected PreviewMessage decodeMessage(Message message) {\n     return GSON.fromJson(message.getPayloadAsString(), PreviewMessage.class);\n   }\n \n+  /**\n+   * Emit the preview run time metric.\n+   */\n+  private void emitRunTimeMetric(PreviewStatus previewStatus, ApplicationId applicationId) {\n+    long runTime = (previewStatus.getEndTime() - previewStatus.getStartTime()) / 1000;\n+    Map<String, String> tags = ImmutableMap.<String, String>builder()\n+      .put(Constants.Metrics.Tag.NAMESPACE, NamespaceId.SYSTEM.getNamespace())\n+      .put(Constants.Metrics.Tag.APP, applicationId.getApplication())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68361ed76a4e2736873e0ef1ca69ddec57f1364b"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMyNjE4MQ==", "bodyText": "done", "url": "https://github.com/cdapio/cdap/pull/12795#discussion_r501326181", "createdAt": "2020-10-07T21:41:04Z", "author": {"login": "rmstar"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/PreviewDataSubscriberService.java", "diffHunk": "@@ -173,6 +177,20 @@ protected PreviewMessage decodeMessage(Message message) {\n     return GSON.fromJson(message.getPayloadAsString(), PreviewMessage.class);\n   }\n \n+  /**\n+   * Emit the preview run time metric.\n+   */\n+  private void emitRunTimeMetric(PreviewStatus previewStatus, ApplicationId applicationId) {\n+    long runTime = (previewStatus.getEndTime() - previewStatus.getStartTime()) / 1000;\n+    Map<String, String> tags = ImmutableMap.<String, String>builder()\n+      .put(Constants.Metrics.Tag.NAMESPACE, NamespaceId.SYSTEM.getNamespace())\n+      .put(Constants.Metrics.Tag.APP, applicationId.getApplication())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIxNDE0MQ=="}, "originalCommit": {"oid": "68361ed76a4e2736873e0ef1ca69ddec57f1364b"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMzOTI3OA==", "bodyText": "You need program type as well since program name can be the same for different program type. Please do it exactly like the one in AbstractContext. It maybe good to refactor that method out to a common util.", "url": "https://github.com/cdapio/cdap/pull/12795#discussion_r501339278", "createdAt": "2020-10-07T22:12:12Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/PreviewDataSubscriberService.java", "diffHunk": "@@ -173,6 +177,20 @@ protected PreviewMessage decodeMessage(Message message) {\n     return GSON.fromJson(message.getPayloadAsString(), PreviewMessage.class);\n   }\n \n+  /**\n+   * Emit the preview run time metric.\n+   */\n+  private void emitRunTimeMetric(PreviewStatus previewStatus, ApplicationId applicationId) {\n+    long runTime = (previewStatus.getEndTime() - previewStatus.getStartTime()) / 1000;\n+    Map<String, String> tags = ImmutableMap.<String, String>builder()\n+      .put(Constants.Metrics.Tag.NAMESPACE, NamespaceId.SYSTEM.getNamespace())\n+      .put(Constants.Metrics.Tag.APP, applicationId.getApplication())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIxNDE0MQ=="}, "originalCommit": {"oid": "68361ed76a4e2736873e0ef1ca69ddec57f1364b"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM2NjU0Nw==", "bodyText": "fixed.", "url": "https://github.com/cdapio/cdap/pull/12795#discussion_r501366547", "createdAt": "2020-10-07T23:28:23Z", "author": {"login": "rmstar"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/PreviewDataSubscriberService.java", "diffHunk": "@@ -173,6 +177,20 @@ protected PreviewMessage decodeMessage(Message message) {\n     return GSON.fromJson(message.getPayloadAsString(), PreviewMessage.class);\n   }\n \n+  /**\n+   * Emit the preview run time metric.\n+   */\n+  private void emitRunTimeMetric(PreviewStatus previewStatus, ApplicationId applicationId) {\n+    long runTime = (previewStatus.getEndTime() - previewStatus.getStartTime()) / 1000;\n+    Map<String, String> tags = ImmutableMap.<String, String>builder()\n+      .put(Constants.Metrics.Tag.NAMESPACE, NamespaceId.SYSTEM.getNamespace())\n+      .put(Constants.Metrics.Tag.APP, applicationId.getApplication())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIxNDE0MQ=="}, "originalCommit": {"oid": "68361ed76a4e2736873e0ef1ca69ddec57f1364b"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzODM5ODAwOnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/ProgramNotificationSubscriberService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxODoxNjozNFrOHd_yiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMTo0MjozM1rOHeGj7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIxNTg4MQ==", "bodyText": "It seems strange to emit provisioning metrics when program complete. It should be done in place where provisioning was skipped (I believe is in the handleProgramEvent method). Also, provisioning can be skipped not just because of preview, so it's better change the comment.", "url": "https://github.com/cdapio/cdap/pull/12795#discussion_r501215881", "createdAt": "2020-10-07T18:16:34Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/ProgramNotificationSubscriberService.java", "diffHunk": "@@ -409,6 +409,16 @@ private RunRecordDetail handleProgramCompletion(AppMetadataStore appMetadataStor\n \n       getEmitMetricsRunnable(programRunId, recordedRunRecord,\n                              STATUS_METRICS_NAME.get(programRunStatus)).ifPresent(runnables::add);\n+\n+      Map<String, String> systemArgs = recordedRunRecord.getSystemArgs();\n+      boolean skipProvisioning = Boolean.parseBoolean(systemArgs.get(ProgramOptionConstants.SKIP_PROVISIONING));\n+      if (!skipProvisioning) {\n+        // emit provisioning time metric if this is not a preview run.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68361ed76a4e2736873e0ef1ca69ddec57f1364b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMyNjgzMQ==", "bodyText": "Removed unnecessary skipProvisioning check and fixed the comment.", "url": "https://github.com/cdapio/cdap/pull/12795#discussion_r501326831", "createdAt": "2020-10-07T21:42:33Z", "author": {"login": "rmstar"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/ProgramNotificationSubscriberService.java", "diffHunk": "@@ -409,6 +409,16 @@ private RunRecordDetail handleProgramCompletion(AppMetadataStore appMetadataStor\n \n       getEmitMetricsRunnable(programRunId, recordedRunRecord,\n                              STATUS_METRICS_NAME.get(programRunStatus)).ifPresent(runnables::add);\n+\n+      Map<String, String> systemArgs = recordedRunRecord.getSystemArgs();\n+      boolean skipProvisioning = Boolean.parseBoolean(systemArgs.get(ProgramOptionConstants.SKIP_PROVISIONING));\n+      if (!skipProvisioning) {\n+        // emit provisioning time metric if this is not a preview run.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIxNTg4MQ=="}, "originalCommit": {"oid": "68361ed76a4e2736873e0ef1ca69ddec57f1364b"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzOTU4MTMzOnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/ProgramRunners.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMToyNzo1N1rOHeK7Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMzoxNTo1OFrOHeMg2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM5ODM1OA==", "bodyText": "Remove extra new line.", "url": "https://github.com/cdapio/cdap/pull/12795#discussion_r501398358", "createdAt": "2020-10-08T01:27:57Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/ProgramRunners.java", "diffHunk": "@@ -186,6 +190,21 @@ public static ClusterMode getClusterMode(ProgramOptions programOptions) {\n     return clusterMode == null ? ClusterMode.ON_PREMISE : ClusterMode.valueOf(clusterMode);\n   }\n \n+  /**\n+   * Create a program context given a {@link ProgramRunId}.\n+   * @param programRunId the {@link ProgramRunId} of the current execution\n+   * @return the program context\n+   */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "363f4acef2040c65247689fe5161c150b8b7590c"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQyNDM0NQ==", "bodyText": "removed", "url": "https://github.com/cdapio/cdap/pull/12795#discussion_r501424345", "createdAt": "2020-10-08T03:15:58Z", "author": {"login": "rmstar"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/ProgramRunners.java", "diffHunk": "@@ -186,6 +190,21 @@ public static ClusterMode getClusterMode(ProgramOptions programOptions) {\n     return clusterMode == null ? ClusterMode.ON_PREMISE : ClusterMode.valueOf(clusterMode);\n   }\n \n+  /**\n+   * Create a program context given a {@link ProgramRunId}.\n+   * @param programRunId the {@link ProgramRunId} of the current execution\n+   * @return the program context\n+   */\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM5ODM1OA=="}, "originalCommit": {"oid": "363f4acef2040c65247689fe5161c150b8b7590c"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzOTU4MjI1OnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/ProgramRunners.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMToyODo0MFrOHeK75Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMzoxNTo0OFrOHeMgrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM5ODUwMQ==", "bodyText": "ProgramContext refer to something else. Why not have this method takes the MetricsCollectionService as well and return  MetricsContext and call this method createProgramMetricsContext?", "url": "https://github.com/cdapio/cdap/pull/12795#discussion_r501398501", "createdAt": "2020-10-08T01:28:40Z", "author": {"login": "chtyim"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/ProgramRunners.java", "diffHunk": "@@ -186,6 +190,21 @@ public static ClusterMode getClusterMode(ProgramOptions programOptions) {\n     return clusterMode == null ? ClusterMode.ON_PREMISE : ClusterMode.valueOf(clusterMode);\n   }\n \n+  /**\n+   * Create a program context given a {@link ProgramRunId}.\n+   * @param programRunId the {@link ProgramRunId} of the current execution\n+   * @return the program context\n+   */\n+\n+  public static Map<String, String> createProgramContext(ProgramRunId programRunId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "363f4acef2040c65247689fe5161c150b8b7590c"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQyNDMwMg==", "bodyText": "fixed", "url": "https://github.com/cdapio/cdap/pull/12795#discussion_r501424302", "createdAt": "2020-10-08T03:15:48Z", "author": {"login": "rmstar"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/ProgramRunners.java", "diffHunk": "@@ -186,6 +190,21 @@ public static ClusterMode getClusterMode(ProgramOptions programOptions) {\n     return clusterMode == null ? ClusterMode.ON_PREMISE : ClusterMode.valueOf(clusterMode);\n   }\n \n+  /**\n+   * Create a program context given a {@link ProgramRunId}.\n+   * @param programRunId the {@link ProgramRunId} of the current execution\n+   * @return the program context\n+   */\n+\n+  public static Map<String, String> createProgramContext(ProgramRunId programRunId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM5ODUwMQ=="}, "originalCommit": {"oid": "363f4acef2040c65247689fe5161c150b8b7590c"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3052, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}