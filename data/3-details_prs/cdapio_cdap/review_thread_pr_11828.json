{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MTE0Nzk3", "number": 11828, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMTozODowOVrODbbZzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMTo0MToxMFrODbbcBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMDg3MTE2OnYy", "diffSide": "RIGHT", "path": "cdap-ui/server/config/parser.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMTozODowOVrOFi6QsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMTo1MDoxMlrOFjYwJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE1MDQ0OA==", "bodyText": "This is kind of awkward here. Can we not use require.resolve? Webpack documentation seems to suggest require.resolve to be a synchronous resolution for module check.", "url": "https://github.com/cdapio/cdap/pull/11828#discussion_r372150448", "createdAt": "2020-01-29T01:38:09Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/server/config/parser.js", "diffHunk": "@@ -71,7 +66,7 @@ function extractConfig(param) {\n       path = getConfigPath(param);\n       if (path && path.length) {\n         path = path.replace(/\\\"/g, '');\n-        cache[param] = require(path);\n+        cache[param] = __non_webpack_require__(path);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b43c3e0487a9375cf93b402a4e312293cca3c53d"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY1MDAyMg==", "bodyText": "I have to try it out, but from documentation, it doesn't seem to be possible:\nSynchronously retrieve a module's ID. The compiler will ensure that the dependency is available in the output bundle.\nFrom what I understand, this means that the path will actually gets resolved during build time instead of during runtime.", "url": "https://github.com/cdapio/cdap/pull/11828#discussion_r372650022", "createdAt": "2020-01-29T21:50:12Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/server/config/parser.js", "diffHunk": "@@ -71,7 +66,7 @@ function extractConfig(param) {\n       path = getConfigPath(param);\n       if (path && path.length) {\n         path = path.replace(/\\\"/g, '');\n-        cache[param] = require(path);\n+        cache[param] = __non_webpack_require__(path);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE1MDQ0OA=="}, "originalCommit": {"oid": "b43c3e0487a9375cf93b402a4e312293cca3c53d"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMDg3Njg2OnYy", "diffSide": "RIGHT", "path": "cdap-ui/server/token.mjs", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMTo0MToxMFrOFi6UDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMTo0NzowMFrOFjYqGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE1MTMwOA==", "bodyText": "Is there a specific reason why we renamed only the token and token_test to mjs modules? The other serverside files seem to be still having the .js extension. Is it solely for the token_test to be run locally?", "url": "https://github.com/cdapio/cdap/pull/11828#discussion_r372151308", "createdAt": "2020-01-29T01:41:10Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/server/token.mjs", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright \u00a9 2019 Cask Data, Inc.\n+ * Copyright \u00a9 2019-2020 Cask Data, Inc.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b43c3e0487a9375cf93b402a4e312293cca3c53d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0ODQ3NQ==", "bodyText": "yes, it's solely because we need to run token_test, as token_test is not built. We can rename everything to .mjs, but at the moment there's no specific need to do that", "url": "https://github.com/cdapio/cdap/pull/11828#discussion_r372648475", "createdAt": "2020-01-29T21:47:00Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/server/token.mjs", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright \u00a9 2019 Cask Data, Inc.\n+ * Copyright \u00a9 2019-2020 Cask Data, Inc.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE1MTMwOA=="}, "originalCommit": {"oid": "b43c3e0487a9375cf93b402a4e312293cca3c53d"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3033, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}