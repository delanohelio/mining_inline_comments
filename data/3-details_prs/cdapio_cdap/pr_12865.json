{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0OTMyMTg1", "number": 12865, "title": "(CDAP-17415) Speedup job launching by uploading files in parallel", "bodyText": "", "createdAt": "2020-11-20T20:22:40Z", "url": "https://github.com/cdapio/cdap/pull/12865", "merged": true, "mergeCommit": {"oid": "2b457b838cfaa928062eed5f485ec438ca5e71b3"}, "closed": true, "closedAt": "2020-11-20T23:15:02Z", "author": {"login": "chtyim"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdeddZPgFqTUzNTc1ODAzOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdeeZSQAFqTUzNTc5NTEzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NzU4MDM5", "url": "https://github.com/cdapio/cdap/pull/12865#pullrequestreview-535758039", "createdAt": "2020-11-20T20:34:18Z", "commit": {"oid": "ea86c28865b6a6ccfb3579225b30b13903646c1f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMDozNDoxOFrOH3f37A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMDozNDoxOFrOH3f37A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk1NTk0OA==", "bodyText": "Typo here", "url": "https://github.com/cdapio/cdap/pull/12865#discussion_r527955948", "createdAt": "2020-11-20T20:34:18Z", "author": {"login": "fernst"}, "path": "cdap-spark-core-base/src/main/java/io/cdap/cdap/app/runtime/spark/classloader/SparkClassRewriter.java", "diffHunk": "@@ -812,7 +812,7 @@ public MethodVisitor visitMethod(int access, String name, String desc, String si\n         //   completion.completed();\n         // } catch (Throwable t) {\n         //   completion.completedWithException(t);\n-        //   // Wrap it with RuntimeException to prevent SparkSubmit calling System.exit in local mode\n+        //   // Wrap it with RuntimeException to preven SparkSubmit calling System.exit in local mode", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea86c28865b6a6ccfb3579225b30b13903646c1f"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NzU4NzE3", "url": "https://github.com/cdapio/cdap/pull/12865#pullrequestreview-535758717", "createdAt": "2020-11-20T20:35:28Z", "commit": {"oid": "ea86c28865b6a6ccfb3579225b30b13903646c1f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea86c28865b6a6ccfb3579225b30b13903646c1f", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/ea86c28865b6a6ccfb3579225b30b13903646c1f", "committedDate": "2020-11-20T20:21:35Z", "message": "(CDAP-17415) Speedup job launching on Dataproc\n\n- Not to recompress jar files when building archive\n- Upload files in parallel"}, "afterCommit": {"oid": "3a84e05c556abe6985ff93f8f0d67f5466b017d3", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/3a84e05c556abe6985ff93f8f0d67f5466b017d3", "committedDate": "2020-11-20T20:48:17Z", "message": "(CDAP-17415) Speedup job launching on Dataproc\n\n- Not to recompress jar files when building archive\n- Upload files in parallel"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NzYyNDE1", "url": "https://github.com/cdapio/cdap/pull/12865#pullrequestreview-535762415", "createdAt": "2020-11-20T20:42:06Z", "commit": {"oid": "ea86c28865b6a6ccfb3579225b30b13903646c1f"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMDo0MjowNlrOH3gFCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMDo1MjozMFrOH3gW6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk1OTMwNg==", "bodyText": "Is it safe to have an unbounded queue? Any chance we can run into OOM with it?", "url": "https://github.com/cdapio/cdap/pull/12865#discussion_r527959306", "createdAt": "2020-11-20T20:42:06Z", "author": {"login": "tivv"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/provision/ProvisioningService.java", "diffHunk": "@@ -154,10 +158,19 @@\n   @Override\n   protected void startUp() throws Exception {\n     LOG.info(\"Starting {}\", getClass().getSimpleName());\n+\n+    this.taskExecutor = new KeyedExecutor<>(\n+      Executors.newScheduledThreadPool(cConf.getInt(Constants.Provisioner.EXECUTOR_THREADS),\n+                                       Threads.createDaemonThreadFactory(\"provisioning-task-%d\")));\n+\n+    int maxPoolSize = cConf.getInt(Constants.Provisioner.CONTEXT_EXECUTOR_THREADS);\n+    ThreadPoolExecutor contextExecutor = new ThreadPoolExecutor(\n+      maxPoolSize, maxPoolSize, 60, TimeUnit.SECONDS, new LinkedBlockingQueue<>(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea86c28865b6a6ccfb3579225b30b13903646c1f"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk1OTk0OQ==", "bodyText": "Do we want to catch Throwable? What is our strategy on handling something like StackOverflowError here?", "url": "https://github.com/cdapio/cdap/pull/12865#discussion_r527959949", "createdAt": "2020-11-20T20:43:36Z", "author": {"login": "tivv"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/provision/DefaultProvisionerContext.java", "diffHunk": "@@ -125,4 +132,18 @@ public ProvisionerMetrics getMetrics(Map<String, String> context) {\n     tags.put(Constants.Metrics.Tag.PROVISIONER, provisionerName);\n     return new DefaultProvisionerMetrics(metricsCollectionService.getContext(tags));\n   }\n+\n+  @Override\n+  public <T> CompletionStage<T> execute(Callable<T> callable) {\n+    CompletableFuture<T> result = new CompletableFuture<>();\n+\n+    executor.execute(() -> {\n+      try {\n+        result.complete(callable.call());\n+      } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea86c28865b6a6ccfb3579225b30b13903646c1f"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk2Mzg4Mg==", "bodyText": "We can also use standard wrapping approach with something like this:\nCompletableFuture.supplyAsync(executor,  () -> {\n try {\n  result.complete(callable.call());\n } catch (Exception e) {\n  throw new CompletionException(e);\n }\n});\n\nIt would produce same result, but we would rely on JDK to ensure any exit from function will complete the future without explicit Throwable catching.", "url": "https://github.com/cdapio/cdap/pull/12865#discussion_r527963882", "createdAt": "2020-11-20T20:52:30Z", "author": {"login": "tivv"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/provision/DefaultProvisionerContext.java", "diffHunk": "@@ -125,4 +132,18 @@ public ProvisionerMetrics getMetrics(Map<String, String> context) {\n     tags.put(Constants.Metrics.Tag.PROVISIONER, provisionerName);\n     return new DefaultProvisionerMetrics(metricsCollectionService.getContext(tags));\n   }\n+\n+  @Override\n+  public <T> CompletionStage<T> execute(Callable<T> callable) {\n+    CompletableFuture<T> result = new CompletableFuture<>();\n+\n+    executor.execute(() -> {\n+      try {\n+        result.complete(callable.call());\n+      } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk1OTk0OQ=="}, "originalCommit": {"oid": "ea86c28865b6a6ccfb3579225b30b13903646c1f"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adbaa37652183c8b676476546a934e55c4c29e75", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/adbaa37652183c8b676476546a934e55c4c29e75", "committedDate": "2020-11-20T21:14:02Z", "message": "(CDAP-17415) Speedup job launching on Dataproc\n\n- Not to recompress jar files when building archive\n- Upload files in parallel"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a84e05c556abe6985ff93f8f0d67f5466b017d3", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/3a84e05c556abe6985ff93f8f0d67f5466b017d3", "committedDate": "2020-11-20T20:48:17Z", "message": "(CDAP-17415) Speedup job launching on Dataproc\n\n- Not to recompress jar files when building archive\n- Upload files in parallel"}, "afterCommit": {"oid": "adbaa37652183c8b676476546a934e55c4c29e75", "author": {"user": {"login": "chtyim", "name": "Terence Yim"}}, "url": "https://github.com/cdapio/cdap/commit/adbaa37652183c8b676476546a934e55c4c29e75", "committedDate": "2020-11-20T21:14:02Z", "message": "(CDAP-17415) Speedup job launching on Dataproc\n\n- Not to recompress jar files when building archive\n- Upload files in parallel"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1Nzk1MTMw", "url": "https://github.com/cdapio/cdap/pull/12865#pullrequestreview-535795130", "createdAt": "2020-11-20T21:39:44Z", "commit": {"oid": "adbaa37652183c8b676476546a934e55c4c29e75"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1479, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}