{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODMwODk2", "number": 11937, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTo1NDoyN1rODmeePg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTo1Nzo1NlrODmeiDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjcxNzQyOnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/test/java/io/cdap/cdap/internal/sysapp/SystemAppManagementServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTo1NDoyN1rOFz6sbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTo1NDoyN1rOFz6sbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk4MzM0Mg==", "bodyText": "don't need to document exceptions in a unit test case.", "url": "https://github.com/cdapio/cdap/pull/11937#discussion_r389983342", "createdAt": "2020-03-09T21:54:27Z", "author": {"login": "albertshau"}, "path": "cdap-app-fabric/src/test/java/io/cdap/cdap/internal/sysapp/SystemAppManagementServiceTest.java", "diffHunk": "@@ -123,4 +124,45 @@ public void testSystemAppManagementServiceE2E() throws Exception {\n     waitState(serviceId1, RUNNING);\n     Assert.assertEquals(RUNNING, getProgramStatus(serviceId1));\n   }\n+\n+  /**\n+   * Tests SystemAppManagementService's upgrade method end to end by running this scenario:\n+   * 1. Creates a system app config for an application into corresponding directory with artifact version VERSION1.\n+   * 2. Successfully read and load the config.\n+   * 3. Runs all steps to enable a system app , tests SystemAppEnableExecutor.\n+   * 4. Deploys the VERSION1 app and runs all programs corresponding to the app.\n+   * 6. Updates system app config with app version upgraded to VERSION2.\n+   * 7. On restart of SystemAppManagementService, app should kill old running programs and start program again.\n+   * @throws Exception", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e711c946ef0adb6a3814da97487633bd8db8d6e"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjcyNzE3OnYy", "diffSide": "RIGHT", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/sysapp/SystemAppEnableExecutor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTo1Nzo1NlrOFz6ySQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTo1Nzo1NlrOFz6ySQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk4NDg0MQ==", "bodyText": "I believe this can also throw a ConflictException if the program is already stopped. If so, it will be caught, then ignored and the program will never be started.\nShould wrap this in a try-catch as well, ignore the conflict, and move on to running it.", "url": "https://github.com/cdapio/cdap/pull/11937#discussion_r389984841", "createdAt": "2020-03-09T21:57:56Z", "author": {"login": "albertshau"}, "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/sysapp/SystemAppEnableExecutor.java", "diffHunk": "@@ -136,11 +136,13 @@ private ApplicationWithPrograms deploySystemApp(Arguments arguments) throws Exce\n \n   private void startProgram(ProgramId programId) throws Exception {\n     try {\n-      // TODO(CDAP-16243): Restart program if the application has changed.\n-      // do nothing if the program is already running\n       ProgramStatus currentStatus = programLifecycleService.getProgramStatus(programId);\n-      if (currentStatus != ProgramStatus.STOPPED) {\n-        return;\n+      // If a system app is already running, it needs to be restarted as app artifact/arguments might have changed.\n+      // Restart should trigger running programs with latest version.\n+      // TODO(CDAP-16243): Find smarter way to trigger restart of programs rather than always restarting. May be\n+      //                   checking if artifact version has changed would be a good start.\n+      if (currentStatus == ProgramStatus.RUNNING) {\n+        programLifecycleService.stop(programId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4bbe783498e3c87f0be964c47dc526944eb69c4"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2806, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}