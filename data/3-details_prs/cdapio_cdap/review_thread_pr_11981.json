{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNzA2ODU0", "number": 11981, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzoyODoxNlrODpUAyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODo0ODowMFrODqgsDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjQ2MDkxOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/Ingestion/PluginList/index.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzoyODoxNlrOF4aXIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzoyODoxNlrOF4aXIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5NjQ4Mw==", "bodyText": "modify all the pixels to use ..px", "url": "https://github.com/cdapio/cdap/pull/11981#discussion_r394696483", "createdAt": "2020-03-18T23:28:16Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/Ingestion/PluginList/index.tsx", "diffHunk": "@@ -0,0 +1,199 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import ThemeWrapper from 'components/ThemeWrapper';\n+import Button from '@material-ui/core/Button';\n+import Card from '@material-ui/core/Card';\n+import { objectQuery } from 'services/helpers';\n+import Popover from '@material-ui/core/Popover';\n+import If from 'components/If';\n+import { getIcon } from 'components/Ingestion/helpers';\n+import HorizontalCarousel from 'components/HorizontalCarousel';\n+import SinkList from 'components/Ingestion/SinkList';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    root: { width: '100%' },\n+    pluginsRow: { display: 'flex', flexDirection: 'row', flexWrap: 'wrap' },\n+    title: { display: 'flex', alignItems: 'center' },\n+    pluginCard: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+      margin: 10,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e769a3e98c1797d02659f818e148f8add3e4c297"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjQ2Mzg0OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/Ingestion/PluginList/index.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzoyOTo0NVrOF4aZDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzoyOTo0NVrOF4aZDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5Njk3NQ==", "bodyText": "why is this called CodeEditor?", "url": "https://github.com/cdapio/cdap/pull/11981#discussion_r394696975", "createdAt": "2020-03-18T23:29:45Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/Ingestion/PluginList/index.tsx", "diffHunk": "@@ -0,0 +1,199 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import ThemeWrapper from 'components/ThemeWrapper';\n+import Button from '@material-ui/core/Button';\n+import Card from '@material-ui/core/Card';\n+import { objectQuery } from 'services/helpers';\n+import Popover from '@material-ui/core/Popover';\n+import If from 'components/If';\n+import { getIcon } from 'components/Ingestion/helpers';\n+import HorizontalCarousel from 'components/HorizontalCarousel';\n+import SinkList from 'components/Ingestion/SinkList';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    root: { width: '100%' },\n+    pluginsRow: { display: 'flex', flexDirection: 'row', flexWrap: 'wrap' },\n+    title: { display: 'flex', alignItems: 'center' },\n+    pluginCard: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+      margin: 10,\n+      alignItems: 'center',\n+      width: 250,\n+      height: 255,\n+      flexShrink: 0,\n+      justifyContent: 'space-around',\n+    },\n+    pluginImageContainer: {\n+      display: 'flex',\n+      alignItems: 'center',\n+    },\n+    pluginImageBackground: {\n+      display: 'flex',\n+      width: '100%',\n+      minHeight: 128,\n+      justifyContent: 'center',\n+      backgroundColor: theme.palette.grey[700],\n+    },\n+    sourceListTable: { width: 900 },\n+    tablePluginIcon: {\n+      width: 32,\n+      height: 'auto',\n+    },\n+    tablePluginFAIcon: {\n+      fontSize: 32,\n+    },\n+    ingestionHeader: {\n+      backgroundColor: theme.palette.grey[700],\n+      color: theme.palette.grey[100],\n+    },\n+    targetName: {\n+      cursor: 'pointer',\n+      marginRight: 5,\n+    },\n+    targetsCell: {},\n+    pluginIcon: {\n+      width: 100,\n+      height: 'auto',\n+    },\n+    pluginFAIcon: {\n+      fontSize: 64,\n+    },\n+    cardTitle: {\n+      padding: 15,\n+    },\n+    cardButtonsContainer: {\n+      display: 'flex',\n+      width: '100%',\n+      justifyContent: 'center',\n+    },\n+  };\n+};\n+interface IPlugin {\n+  name: string;\n+  artifact: { version: string };\n+  widgetJson: any;\n+}\n+interface ICodeEditorProps extends WithStyles<typeof styles> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e769a3e98c1797d02659f818e148f8add3e4c297"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjQ3NDM4OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/Ingestion/PluginList/index.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzozMzo1NlrOF4afXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzozMzo1NlrOF4afXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5ODU5MA==", "bodyText": "why is this needed?", "url": "https://github.com/cdapio/cdap/pull/11981#discussion_r394698590", "createdAt": "2020-03-18T23:33:56Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/Ingestion/PluginList/index.tsx", "diffHunk": "@@ -0,0 +1,199 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import ThemeWrapper from 'components/ThemeWrapper';\n+import Button from '@material-ui/core/Button';\n+import Card from '@material-ui/core/Card';\n+import { objectQuery } from 'services/helpers';\n+import Popover from '@material-ui/core/Popover';\n+import If from 'components/If';\n+import { getIcon } from 'components/Ingestion/helpers';\n+import HorizontalCarousel from 'components/HorizontalCarousel';\n+import SinkList from 'components/Ingestion/SinkList';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    root: { width: '100%' },\n+    pluginsRow: { display: 'flex', flexDirection: 'row', flexWrap: 'wrap' },\n+    title: { display: 'flex', alignItems: 'center' },\n+    pluginCard: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+      margin: 10,\n+      alignItems: 'center',\n+      width: 250,\n+      height: 255,\n+      flexShrink: 0,\n+      justifyContent: 'space-around',\n+    },\n+    pluginImageContainer: {\n+      display: 'flex',\n+      alignItems: 'center',\n+    },\n+    pluginImageBackground: {\n+      display: 'flex',\n+      width: '100%',\n+      minHeight: 128,\n+      justifyContent: 'center',\n+      backgroundColor: theme.palette.grey[700],\n+    },\n+    sourceListTable: { width: 900 },\n+    tablePluginIcon: {\n+      width: 32,\n+      height: 'auto',\n+    },\n+    tablePluginFAIcon: {\n+      fontSize: 32,\n+    },\n+    ingestionHeader: {\n+      backgroundColor: theme.palette.grey[700],\n+      color: theme.palette.grey[100],\n+    },\n+    targetName: {\n+      cursor: 'pointer',\n+      marginRight: 5,\n+    },\n+    targetsCell: {},\n+    pluginIcon: {\n+      width: 100,\n+      height: 'auto',\n+    },\n+    pluginFAIcon: {\n+      fontSize: 64,\n+    },\n+    cardTitle: {\n+      padding: 15,\n+    },\n+    cardButtonsContainer: {\n+      display: 'flex',\n+      width: '100%',\n+      justifyContent: 'center',\n+    },\n+  };\n+};\n+interface IPlugin {\n+  name: string;\n+  artifact: { version: string };\n+  widgetJson: any;\n+}\n+interface ICodeEditorProps extends WithStyles<typeof styles> {\n+  plugins: IPlugin[];\n+  title: string;\n+  onPluginSelect: (plugin: IPlugin) => void;\n+  sinks: any;\n+  onSourceSinkSelect: any;\n+}\n+\n+const PluginListView: React.FC<ICodeEditorProps> = ({\n+  classes,\n+  plugins,\n+  sinks,\n+  onPluginSelect,\n+}) => {\n+  const [anchorEl, setAnchorEl] = React.useState(null);\n+\n+  const open = Boolean(anchorEl);\n+  const id = open ? 'simple-popover' : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e769a3e98c1797d02659f818e148f8add3e4c297"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjQ3NjI5OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/Ingestion/PluginList/index.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzozNDo1MVrOF4agnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzozNDo1MVrOF4agnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5ODkwOQ==", "bodyText": "is this being used in Angular component? if not, then this is not needed", "url": "https://github.com/cdapio/cdap/pull/11981#discussion_r394698909", "createdAt": "2020-03-18T23:34:51Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/Ingestion/PluginList/index.tsx", "diffHunk": "@@ -0,0 +1,199 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import ThemeWrapper from 'components/ThemeWrapper';\n+import Button from '@material-ui/core/Button';\n+import Card from '@material-ui/core/Card';\n+import { objectQuery } from 'services/helpers';\n+import Popover from '@material-ui/core/Popover';\n+import If from 'components/If';\n+import { getIcon } from 'components/Ingestion/helpers';\n+import HorizontalCarousel from 'components/HorizontalCarousel';\n+import SinkList from 'components/Ingestion/SinkList';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    root: { width: '100%' },\n+    pluginsRow: { display: 'flex', flexDirection: 'row', flexWrap: 'wrap' },\n+    title: { display: 'flex', alignItems: 'center' },\n+    pluginCard: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+      margin: 10,\n+      alignItems: 'center',\n+      width: 250,\n+      height: 255,\n+      flexShrink: 0,\n+      justifyContent: 'space-around',\n+    },\n+    pluginImageContainer: {\n+      display: 'flex',\n+      alignItems: 'center',\n+    },\n+    pluginImageBackground: {\n+      display: 'flex',\n+      width: '100%',\n+      minHeight: 128,\n+      justifyContent: 'center',\n+      backgroundColor: theme.palette.grey[700],\n+    },\n+    sourceListTable: { width: 900 },\n+    tablePluginIcon: {\n+      width: 32,\n+      height: 'auto',\n+    },\n+    tablePluginFAIcon: {\n+      fontSize: 32,\n+    },\n+    ingestionHeader: {\n+      backgroundColor: theme.palette.grey[700],\n+      color: theme.palette.grey[100],\n+    },\n+    targetName: {\n+      cursor: 'pointer',\n+      marginRight: 5,\n+    },\n+    targetsCell: {},\n+    pluginIcon: {\n+      width: 100,\n+      height: 'auto',\n+    },\n+    pluginFAIcon: {\n+      fontSize: 64,\n+    },\n+    cardTitle: {\n+      padding: 15,\n+    },\n+    cardButtonsContainer: {\n+      display: 'flex',\n+      width: '100%',\n+      justifyContent: 'center',\n+    },\n+  };\n+};\n+interface IPlugin {\n+  name: string;\n+  artifact: { version: string };\n+  widgetJson: any;\n+}\n+interface ICodeEditorProps extends WithStyles<typeof styles> {\n+  plugins: IPlugin[];\n+  title: string;\n+  onPluginSelect: (plugin: IPlugin) => void;\n+  sinks: any;\n+  onSourceSinkSelect: any;\n+}\n+\n+const PluginListView: React.FC<ICodeEditorProps> = ({\n+  classes,\n+  plugins,\n+  sinks,\n+  onPluginSelect,\n+}) => {\n+  const [anchorEl, setAnchorEl] = React.useState(null);\n+\n+  const open = Boolean(anchorEl);\n+  const id = open ? 'simple-popover' : null;\n+\n+  function handleClick(event, plugin) {\n+    setAnchorEl(event.currentTarget);\n+    onPluginSelect(plugin);\n+  }\n+  function handleClose() {\n+    setAnchorEl(null);\n+  }\n+  function renderCarousel() {\n+    return (\n+      <HorizontalCarousel scrollAmount={650}>\n+        {plugins.map((plugin) => {\n+          const displayName = objectQuery(plugin, 'widgetJson', 'display-name') || plugin.name;\n+          const iconData = objectQuery(plugin, 'widgetJson', 'icon', 'arguments', 'data');\n+          return (\n+            <Card\n+              key={`${plugin.name} - ${plugin.artifact.version}`}\n+              className={classes.pluginCard}\n+            >\n+              <div className={classes.pluginImageBackground}>\n+                <div className={classes.pluginImageContainer}>\n+                  <If condition={iconData}>\n+                    <img className={classes.pluginIcon} src={iconData} />\n+                  </If>\n+                  <If condition={!iconData}>\n+                    <div\n+                      className={`${classes.pluginFAIcon} fa ${getIcon(plugin.name.toLowerCase())}`}\n+                    ></div>\n+                  </If>\n+                </div>\n+              </div>\n+              <div className={classes.cardTitle}>\n+                <h3>{displayName}</h3>\n+              </div>\n+              <div className={classes.cardButtonsContainer}>\n+                <Button\n+                  className={classes.targetsButton}\n+                  color=\"primary\"\n+                  onClick={(e) => handleClick(e, plugin)}\n+                >\n+                  Show Targets\n+                </Button>\n+              </div>\n+            </Card>\n+          );\n+        })}\n+      </HorizontalCarousel>\n+    );\n+  }\n+\n+  const targetList = <SinkList title=\"Sinks\" plugins={sinks} onPluginSelect={onPluginSelect} />;\n+\n+  return (\n+    <div className={classes.root}>\n+      {renderCarousel()}\n+      <Popover\n+        id={id}\n+        open={open}\n+        anchorEl={anchorEl}\n+        onClose={handleClose}\n+        anchorOrigin={{\n+          vertical: 'bottom',\n+          horizontal: 'center',\n+        }}\n+        transformOrigin={{\n+          vertical: 'top',\n+          horizontal: 'center',\n+        }}\n+      >\n+        <If condition={sinks.length > 0}>{targetList}</If>\n+      </Popover>\n+    </div>\n+  );\n+};\n+\n+const StyledPluginList = withStyles(styles)(PluginListView);\n+\n+function PluginList(props) {\n+  return (\n+    <ThemeWrapper>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e769a3e98c1797d02659f818e148f8add3e4c297"}, "originalPosition": 191}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjUyMTAwOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/Ingestion/PluginWidgetRenderer/index.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzo1ODoxMVrOF4a8Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzo1ODoxMVrOF4a8Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcwNTkyMw==", "bodyText": "Better to expand this configurationGroupProps", "url": "https://github.com/cdapio/cdap/pull/11981#discussion_r394705923", "createdAt": "2020-03-18T23:58:11Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/Ingestion/PluginWidgetRenderer/index.tsx", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import ConfigurationGroup from 'components/ConfigurationGroup';\n+import If from 'components/If';\n+import { Card, TextField } from '@material-ui/core';\n+import { objectQuery } from 'services/helpers';\n+import { getIcon } from 'components/Ingestion/helpers';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    root: {\n+      height: 'auto',\n+      padding: 20,\n+    },\n+    labelContainer: {\n+      padding: 10,\n+      paddingLeft: 0,\n+      width: '100%',\n+    },\n+    heading: {\n+      display: 'flex',\n+      justifyContent: 'space-between',\n+    },\n+    pluginIconContainer: {\n+      display: 'flex',\n+      alignSelf: 'right',\n+    },\n+    pluginFAIcon: {\n+      fontSize: 32,\n+    },\n+    headingTitle: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+    },\n+    pluginIcon: { width: 64 },\n+  };\n+};\n+\n+interface IPluginWidgetRendererProps extends WithStyles<typeof styles> {\n+  cgProps: any;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e769a3e98c1797d02659f818e148f8add3e4c297"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTgyOTQ3OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/Ingestion/PluginWidgetRenderer/index.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxODo0NjoxNlrOF472_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMDoyOToxN1rOF5EuwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI0NTMxMQ==", "bodyText": "</div>\ndid the linter not fix this automatically?", "url": "https://github.com/cdapio/cdap/pull/11981#discussion_r395245311", "createdAt": "2020-03-19T18:46:16Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/Ingestion/PluginWidgetRenderer/index.tsx", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import ConfigurationGroup from 'components/ConfigurationGroup';\n+import If from 'components/If';\n+import { Card, TextField } from '@material-ui/core';\n+import { objectQuery } from 'services/helpers';\n+import { getIcon } from 'components/Ingestion/helpers';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    root: {\n+      height: 'auto',\n+      padding: 20,\n+    },\n+    labelContainer: {\n+      padding: 10,\n+      paddingLeft: 0,\n+      width: '100%',\n+    },\n+    heading: {\n+      display: 'flex',\n+      justifyContent: 'space-between',\n+    },\n+    pluginIconContainer: {\n+      display: 'flex',\n+      alignSelf: 'right',\n+    },\n+    pluginFAIcon: {\n+      fontSize: 32,\n+    },\n+    headingTitle: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+    },\n+    pluginIcon: { width: 64 },\n+  };\n+};\n+\n+interface IPluginWidgetRendererProps extends WithStyles<typeof styles> {\n+  cgProps: any;\n+  title: string;\n+  plugin: any;\n+}\n+\n+class PluginWidgetRendererView extends React.Component<IPluginWidgetRendererProps> {\n+  public render() {\n+    const { classes, cgProps, title } = this.props;\n+    const pluginLabel = cgProps.widgetJson ? cgProps.widgetJson['display-name'] : '';\n+    const iconData = objectQuery(cgProps, 'widgetJson', 'icon', 'arguments', 'data');\n+    return (\n+      <Card className={classes.root}>\n+        <div className={classes.heading}>\n+          <div className={classes.headingTitle}>\n+            <h5>{title.toUpperCase()}</h5>\n+            <h4>{pluginLabel}</h4>\n+          </div>\n+          <div className={classes.pluginIconContainer}>\n+            <If condition={iconData}>\n+              <img className={classes.pluginIcon} src={iconData} />\n+            </If>\n+            <If condition={!iconData}>\n+              <div\n+                className={`${classes.pluginFAIcon} fa ${getIcon(\n+                  this.props.plugin.name.toLowerCase()\n+                )}`}\n+              ></div>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e769a3e98c1797d02659f818e148f8add3e4c297"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM5MDY1Ng==", "bodyText": "It did not. fixed it.", "url": "https://github.com/cdapio/cdap/pull/11981#discussion_r395390656", "createdAt": "2020-03-20T00:29:17Z", "author": {"login": "itsanudeep"}, "path": "cdap-ui/app/cdap/components/Ingestion/PluginWidgetRenderer/index.tsx", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import ConfigurationGroup from 'components/ConfigurationGroup';\n+import If from 'components/If';\n+import { Card, TextField } from '@material-ui/core';\n+import { objectQuery } from 'services/helpers';\n+import { getIcon } from 'components/Ingestion/helpers';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    root: {\n+      height: 'auto',\n+      padding: 20,\n+    },\n+    labelContainer: {\n+      padding: 10,\n+      paddingLeft: 0,\n+      width: '100%',\n+    },\n+    heading: {\n+      display: 'flex',\n+      justifyContent: 'space-between',\n+    },\n+    pluginIconContainer: {\n+      display: 'flex',\n+      alignSelf: 'right',\n+    },\n+    pluginFAIcon: {\n+      fontSize: 32,\n+    },\n+    headingTitle: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+    },\n+    pluginIcon: { width: 64 },\n+  };\n+};\n+\n+interface IPluginWidgetRendererProps extends WithStyles<typeof styles> {\n+  cgProps: any;\n+  title: string;\n+  plugin: any;\n+}\n+\n+class PluginWidgetRendererView extends React.Component<IPluginWidgetRendererProps> {\n+  public render() {\n+    const { classes, cgProps, title } = this.props;\n+    const pluginLabel = cgProps.widgetJson ? cgProps.widgetJson['display-name'] : '';\n+    const iconData = objectQuery(cgProps, 'widgetJson', 'icon', 'arguments', 'data');\n+    return (\n+      <Card className={classes.root}>\n+        <div className={classes.heading}>\n+          <div className={classes.headingTitle}>\n+            <h5>{title.toUpperCase()}</h5>\n+            <h4>{pluginLabel}</h4>\n+          </div>\n+          <div className={classes.pluginIconContainer}>\n+            <If condition={iconData}>\n+              <img className={classes.pluginIcon} src={iconData} />\n+            </If>\n+            <If condition={!iconData}>\n+              <div\n+                className={`${classes.pluginFAIcon} fa ${getIcon(\n+                  this.props.plugin.name.toLowerCase()\n+                )}`}\n+              ></div>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI0NTMxMQ=="}, "originalCommit": {"oid": "e769a3e98c1797d02659f818e148f8add3e4c297"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTg1MTcyOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/Ingestion/PluginsTableView/index.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxODo1Mjo0OVrOF48Fig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxODo1Mjo0OVrOF48Fig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI0OTAzNA==", "bodyText": "React will strip off extra spaces. If you need margin, you have to style it with css", "url": "https://github.com/cdapio/cdap/pull/11981#discussion_r395249034", "createdAt": "2020-03-19T18:52:49Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/Ingestion/PluginsTableView/index.tsx", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import { IWidgetProps } from 'components/AbstractWidget';\n+import { WIDGET_PROPTYPES } from 'components/AbstractWidget/constants';\n+import PropTypes from 'prop-types';\n+import ThemeWrapper from 'components/ThemeWrapper';\n+import { MyPipelineApi } from 'api/pipeline';\n+import Button from '@material-ui/core/Button';\n+import Card from '@material-ui/core/Card';\n+import CardActions from '@material-ui/core/CardActions';\n+import { objectQuery } from 'services/helpers';\n+import Popover from '@material-ui/core/Popover';\n+import If from 'components/If';\n+import { getIcon } from 'components/Ingestion/helpers';\n+import HorizontalCarousel from 'components/HorizontalCarousel';\n+import Table from '@material-ui/core/Table';\n+import TableBody from '@material-ui/core/TableBody';\n+import TableCell from '@material-ui/core/TableCell';\n+import TableContainer from '@material-ui/core/TableContainer';\n+import TableHead from '@material-ui/core/TableHead';\n+import TableRow from '@material-ui/core/TableRow';\n+import Paper from '@material-ui/core/Paper';\n+import SinkList from 'components/Ingestion/SinkList';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    // root: { display: 'flex', flexDirection: 'column', alignItems: 'center', width: 700 },\n+    root: { width: '100%' },\n+    pluginsRow: { display: 'flex', flexDirection: 'row', flexWrap: 'wrap' },\n+    title: { display: 'flex', alignItems: 'center' },\n+    pluginCard: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+      margin: 10,\n+      alignItems: 'center',\n+      width: 250,\n+      height: 255,\n+      flexShrink: 0,\n+      justifyContent: 'space-around',\n+    },\n+    pluginImageContainer: {\n+      display: 'flex',\n+      alignItems: 'center',\n+    },\n+\n+    pluginImageBackground: {\n+      display: 'flex',\n+      width: '100%',\n+      minHeight: 128,\n+      justifyContent: 'center',\n+      backgroundColor: theme.palette.grey[700],\n+    },\n+    // sourceListTable: { width: 900 },\n+    tablePluginIcon: {\n+      width: 32,\n+      height: 'auto',\n+    },\n+    tablePluginFAIcon: {\n+      fontSize: 32,\n+    },\n+    ingestionHeader: {\n+      backgroundColor: theme.palette.grey[700],\n+      color: theme.palette.grey[100],\n+    },\n+    targetName: {\n+      cursor: 'pointer',\n+      margin: '0px 5px',\n+      color: theme.palette.blue[100],\n+    },\n+    targetsCell: { maxWidth: '50%' },\n+    targetsCellHeader: { maxWidth: '50%' },\n+    pluginIcon: {\n+      width: 100,\n+      height: 'auto',\n+    },\n+    pluginFAIcon: {\n+      fontSize: 64,\n+    },\n+    cardTitle: {\n+      padding: 15,\n+    },\n+    cardButtonsContainer: {\n+      display: 'flex',\n+      width: '100%',\n+      justifyContent: 'center',\n+    },\n+    targetsButton: {},\n+  };\n+};\n+interface IPlugin {\n+  name: string;\n+  artifact: { version: string };\n+  widgetJson: any;\n+}\n+interface ICodeEditorProps extends WithStyles<typeof styles> {\n+  plugins: IPlugin[];\n+  sinks: any;\n+  onSourceSinkSelect: any;\n+}\n+\n+const PluginListView: React.FC<ICodeEditorProps> = ({\n+  classes,\n+  plugins,\n+  sinks,\n+  onSourceSinkSelect,\n+}) => {\n+  return (\n+    <div className={classes.root}>\n+      <TableContainer component={Paper} className={classes.sourceListTable}>\n+        <Table className={classes.table}>\n+          <TableHead className={classes.ingestionHeader}>\n+            <TableRow>\n+              <TableCell></TableCell>\n+              <TableCell>Name</TableCell>\n+              <TableCell className={classes.TargetCellHeader} align=\"left\">\n+                Target\n+              </TableCell>\n+            </TableRow>\n+          </TableHead>\n+          <TableBody>\n+            {plugins.map((plugin, i) => {\n+              const displayName = objectQuery(plugin, 'widgetJson', 'display-name') || plugin.name;\n+              const iconData = objectQuery(plugin, 'widgetJson', 'icon', 'arguments', 'data');\n+              const matchedSinks = sinks.map((sink, idx) => {\n+                const sinkName = objectQuery(sink, 'widgetJson', 'display-name') || sink.name;\n+                return (\n+                  <span key={`${idx}-${sinkName}`}>\n+                    <span\n+                      className={classes.targetName}\n+                      onClick={() => onSourceSinkSelect(plugin, sink)}\n+                    >\n+                      {sinkName}\n+                    </span>\n+                    <If condition={idx !== sinks.length - 1}>\n+                      <span> | </span>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e769a3e98c1797d02659f818e148f8add3e4c297"}, "originalPosition": 151}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTg1ODgyOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/Ingestion/PluginsTableView/index.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxODo1NDo0OVrOF48KMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxODo1NDo0OVrOF48KMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI1MDIyNQ==", "bodyText": "/>", "url": "https://github.com/cdapio/cdap/pull/11981#discussion_r395250225", "createdAt": "2020-03-19T18:54:49Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/Ingestion/PluginsTableView/index.tsx", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import { IWidgetProps } from 'components/AbstractWidget';\n+import { WIDGET_PROPTYPES } from 'components/AbstractWidget/constants';\n+import PropTypes from 'prop-types';\n+import ThemeWrapper from 'components/ThemeWrapper';\n+import { MyPipelineApi } from 'api/pipeline';\n+import Button from '@material-ui/core/Button';\n+import Card from '@material-ui/core/Card';\n+import CardActions from '@material-ui/core/CardActions';\n+import { objectQuery } from 'services/helpers';\n+import Popover from '@material-ui/core/Popover';\n+import If from 'components/If';\n+import { getIcon } from 'components/Ingestion/helpers';\n+import HorizontalCarousel from 'components/HorizontalCarousel';\n+import Table from '@material-ui/core/Table';\n+import TableBody from '@material-ui/core/TableBody';\n+import TableCell from '@material-ui/core/TableCell';\n+import TableContainer from '@material-ui/core/TableContainer';\n+import TableHead from '@material-ui/core/TableHead';\n+import TableRow from '@material-ui/core/TableRow';\n+import Paper from '@material-ui/core/Paper';\n+import SinkList from 'components/Ingestion/SinkList';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    // root: { display: 'flex', flexDirection: 'column', alignItems: 'center', width: 700 },\n+    root: { width: '100%' },\n+    pluginsRow: { display: 'flex', flexDirection: 'row', flexWrap: 'wrap' },\n+    title: { display: 'flex', alignItems: 'center' },\n+    pluginCard: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+      margin: 10,\n+      alignItems: 'center',\n+      width: 250,\n+      height: 255,\n+      flexShrink: 0,\n+      justifyContent: 'space-around',\n+    },\n+    pluginImageContainer: {\n+      display: 'flex',\n+      alignItems: 'center',\n+    },\n+\n+    pluginImageBackground: {\n+      display: 'flex',\n+      width: '100%',\n+      minHeight: 128,\n+      justifyContent: 'center',\n+      backgroundColor: theme.palette.grey[700],\n+    },\n+    // sourceListTable: { width: 900 },\n+    tablePluginIcon: {\n+      width: 32,\n+      height: 'auto',\n+    },\n+    tablePluginFAIcon: {\n+      fontSize: 32,\n+    },\n+    ingestionHeader: {\n+      backgroundColor: theme.palette.grey[700],\n+      color: theme.palette.grey[100],\n+    },\n+    targetName: {\n+      cursor: 'pointer',\n+      margin: '0px 5px',\n+      color: theme.palette.blue[100],\n+    },\n+    targetsCell: { maxWidth: '50%' },\n+    targetsCellHeader: { maxWidth: '50%' },\n+    pluginIcon: {\n+      width: 100,\n+      height: 'auto',\n+    },\n+    pluginFAIcon: {\n+      fontSize: 64,\n+    },\n+    cardTitle: {\n+      padding: 15,\n+    },\n+    cardButtonsContainer: {\n+      display: 'flex',\n+      width: '100%',\n+      justifyContent: 'center',\n+    },\n+    targetsButton: {},\n+  };\n+};\n+interface IPlugin {\n+  name: string;\n+  artifact: { version: string };\n+  widgetJson: any;\n+}\n+interface ICodeEditorProps extends WithStyles<typeof styles> {\n+  plugins: IPlugin[];\n+  sinks: any;\n+  onSourceSinkSelect: any;\n+}\n+\n+const PluginListView: React.FC<ICodeEditorProps> = ({\n+  classes,\n+  plugins,\n+  sinks,\n+  onSourceSinkSelect,\n+}) => {\n+  return (\n+    <div className={classes.root}>\n+      <TableContainer component={Paper} className={classes.sourceListTable}>\n+        <Table className={classes.table}>\n+          <TableHead className={classes.ingestionHeader}>\n+            <TableRow>\n+              <TableCell></TableCell>\n+              <TableCell>Name</TableCell>\n+              <TableCell className={classes.TargetCellHeader} align=\"left\">\n+                Target\n+              </TableCell>\n+            </TableRow>\n+          </TableHead>\n+          <TableBody>\n+            {plugins.map((plugin, i) => {\n+              const displayName = objectQuery(plugin, 'widgetJson', 'display-name') || plugin.name;\n+              const iconData = objectQuery(plugin, 'widgetJson', 'icon', 'arguments', 'data');\n+              const matchedSinks = sinks.map((sink, idx) => {\n+                const sinkName = objectQuery(sink, 'widgetJson', 'display-name') || sink.name;\n+                return (\n+                  <span key={`${idx}-${sinkName}`}>\n+                    <span\n+                      className={classes.targetName}\n+                      onClick={() => onSourceSinkSelect(plugin, sink)}\n+                    >\n+                      {sinkName}\n+                    </span>\n+                    <If condition={idx !== sinks.length - 1}>\n+                      <span> | </span>\n+                    </If>\n+                  </span>\n+                );\n+              });\n+\n+              return (\n+                <TableRow key={`${i}-${displayName}`} style={{ width: '100%' }}>\n+                  <TableCell>\n+                    <If condition={iconData}>\n+                      <img className={classes.tablePluginIcon} src={iconData} />\n+                    </If>\n+                    <If condition={!iconData}>\n+                      <div\n+                        className={`${classes.tablePluginFAIcon} fa ${getIcon(\n+                          plugin.name.toLowerCase()\n+                        )}`}\n+                      ></div>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e769a3e98c1797d02659f818e148f8add3e4c297"}, "originalPosition": 168}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTg1OTgzOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/Ingestion/SinkList/index.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxODo1NTowOVrOF48K2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxODo1NTowOVrOF48K2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI1MDM5NQ==", "bodyText": "props name", "url": "https://github.com/cdapio/cdap/pull/11981#discussion_r395250395", "createdAt": "2020-03-19T18:55:09Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/Ingestion/SinkList/index.tsx", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import ThemeWrapper from 'components/ThemeWrapper';\n+import Card from '@material-ui/core/Card';\n+import { objectQuery } from 'services/helpers';\n+import { getIcon } from 'components/Ingestion/helpers';\n+import If from 'components/If';\n+import HorizontalCarousel from 'components/HorizontalCarousel';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    root: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+      alignItems: 'center',\n+      backgroundColor: theme.palette.grey[700],\n+      padding: 20,\n+      width: '95vw',\n+    },\n+    pluginsRow: { width: '100%' },\n+    title: { display: 'flex', alignItems: 'center' },\n+    pluginCard: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+      flexShrink: 0,\n+      margin: 10,\n+      alignItems: 'center',\n+      width: 175,\n+      height: 120,\n+      cursor: 'pointer',\n+      justifyContent: 'space-around',\n+    },\n+    pluginImageContainer: {\n+      display: 'flex',\n+      alignItems: 'center',\n+      marginTop: 10,\n+    },\n+    pluginIcon: {\n+      width: 50,\n+      height: 'auto',\n+    },\n+    pluginFAIcon: {\n+      fontSize: 32,\n+    },\n+    cardTitle: {\n+      padding: 15,\n+    },\n+    cardButtonsContainer: {\n+      display: 'flex',\n+      width: '100%',\n+      justifyContent: 'center',\n+    },\n+    targetsButton: {},\n+  };\n+};\n+interface IPlugin {\n+  name: string;\n+  artifact: { version: string };\n+  widgetJson: any;\n+}\n+interface ICodeEditorProps extends WithStyles<typeof styles> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e769a3e98c1797d02659f818e148f8add3e4c297"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTg2MjM5OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/Ingestion/SinkList/index.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxODo1NTo1MFrOF48MYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxODo1NTo1MFrOF48MYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI1MDc4NQ==", "bodyText": "any other things planned to be done inside this function? otherwise just call onPluginSelect directly", "url": "https://github.com/cdapio/cdap/pull/11981#discussion_r395250785", "createdAt": "2020-03-19T18:55:50Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/Ingestion/SinkList/index.tsx", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import ThemeWrapper from 'components/ThemeWrapper';\n+import Card from '@material-ui/core/Card';\n+import { objectQuery } from 'services/helpers';\n+import { getIcon } from 'components/Ingestion/helpers';\n+import If from 'components/If';\n+import HorizontalCarousel from 'components/HorizontalCarousel';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    root: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+      alignItems: 'center',\n+      backgroundColor: theme.palette.grey[700],\n+      padding: 20,\n+      width: '95vw',\n+    },\n+    pluginsRow: { width: '100%' },\n+    title: { display: 'flex', alignItems: 'center' },\n+    pluginCard: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+      flexShrink: 0,\n+      margin: 10,\n+      alignItems: 'center',\n+      width: 175,\n+      height: 120,\n+      cursor: 'pointer',\n+      justifyContent: 'space-around',\n+    },\n+    pluginImageContainer: {\n+      display: 'flex',\n+      alignItems: 'center',\n+      marginTop: 10,\n+    },\n+    pluginIcon: {\n+      width: 50,\n+      height: 'auto',\n+    },\n+    pluginFAIcon: {\n+      fontSize: 32,\n+    },\n+    cardTitle: {\n+      padding: 15,\n+    },\n+    cardButtonsContainer: {\n+      display: 'flex',\n+      width: '100%',\n+      justifyContent: 'center',\n+    },\n+    targetsButton: {},\n+  };\n+};\n+interface IPlugin {\n+  name: string;\n+  artifact: { version: string };\n+  widgetJson: any;\n+}\n+interface ICodeEditorProps extends WithStyles<typeof styles> {\n+  plugins: IPlugin[];\n+  onPluginSelect: (plugin: IPlugin) => void;\n+}\n+\n+const SinkListView: React.FC<ICodeEditorProps> = ({ classes, plugins, onPluginSelect }) => {\n+  function cardSelect(plugin) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e769a3e98c1797d02659f818e148f8add3e4c297"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTg2OTkwOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/Ingestion/index.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxODo1Nzo0NFrOF48RIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMDozNTowMFrOF5Ez8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI1MjAwMA==", "bodyText": "is this necessary?", "url": "https://github.com/cdapio/cdap/pull/11981#discussion_r395252000", "createdAt": "2020-03-19T18:57:44Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/Ingestion/index.tsx", "diffHunk": "@@ -0,0 +1,507 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import PluginList from 'components/Ingestion/PluginList';\n+import PluginsTableView from 'components/Ingestion/PluginsTableView';\n+import { MyPipelineApi } from 'api/pipeline';\n+import SourceSinkConfig from 'components/Ingestion/SourceSinkConfigurator';\n+import { Button, TextField } from '@material-ui/core';\n+import Helmet from 'react-helmet';\n+import { objectQuery } from 'services/helpers';\n+import If from 'components/If';\n+import IconButton from '@material-ui/core/IconButton';\n+import CloseIcon from '@material-ui/icons/Close';\n+import Alert from 'components/Alert';\n+import { getCurrentNamespace } from 'services/NamespaceStore';\n+import VersionStore from 'services/VersionStore';\n+import VersionActions from 'services/VersionStore/VersionActions';\n+import MyCDAPVersionApi from 'api/version.js';\n+import PipelineConfigurationsStore from 'components/PipelineConfigurations/Store';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    root: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+    },\n+    createJobHeader: {\n+      backgroundColor: theme.palette.grey[700],\n+      padding: 5,\n+      paddingLeft: 20,\n+      height: 60,\n+      display: 'flex',\n+      alignItems: 'center',\n+    },\n+    selectionContainer: { padding: 20 },\n+    propsRenderBlock: {\n+      margin: '0 40px',\n+      width: '40%',\n+      propsContainer: {\n+        display: 'flex',\n+      },\n+      flexDirection: 'row',\n+      justifyContent: 'center',\n+    },\n+    filterBox: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+      maxWidth: 500,\n+      marginBottom: 20,\n+    },\n+    filterInput: {\n+      marginBottom: 10,\n+    },\n+    jobInfo: { display: 'flex', flexDirection: 'column', margin: 10 },\n+    instructionHeading: {\n+      marginTop: 10,\n+    },\n+    modalContent: {\n+      height: '90%',\n+      margin: 100,\n+    },\n+    countAndToggle: {\n+      display: 'flex',\n+      justifyContent: 'space-between',\n+      marginBottom: 10,\n+    },\n+    toggleView: {\n+      color: theme.palette.blue[100],\n+      cursor: 'pointer',\n+    },\n+    configureHeader: {\n+      display: 'flex',\n+      flexDirection: 'row',\n+      justifyContent: 'space-between',\n+      alignItems: 'center',\n+      padding: 5,\n+      paddingLeft: 20,\n+      backgroundColor: theme.palette.grey[700],\n+    },\n+    transferDetailsContainer: {\n+      maxWidth: 500,\n+      flexDirection: 'column',\n+      display: 'flex',\n+    },\n+    deployTransferBtn: {\n+      alignSelf: 'flex-end',\n+    },\n+  };\n+};\n+\n+interface IIngestionProps extends WithStyles<typeof styles> {\n+  test: string;\n+  pluginsMap: any;\n+}\n+\n+class IngestionView extends React.Component<IIngestionProps> {\n+  public state = {\n+    filterStr: '',\n+    filteredSources: [],\n+    batchsource: [],\n+    batchsink: [],\n+    selectedSource: null,\n+    selectedSink: null,\n+    sourceBP: null,\n+    sinkBP: null,\n+    pipelineName: '',\n+    publishingPipeline: false,\n+    pipelineDescription: '',\n+    modalOpen: false,\n+    tableView: true,\n+    showConfig: false,\n+    pipelineNameError: false,\n+    deployFailed: false,\n+    cdapVersion: '',\n+    currentNs: 'default',\n+  };\n+\n+  public componentDidMount() {\n+    const currentNs = getCurrentNamespace();\n+    let cdapVersion = VersionStore.getState().version;\n+    if (!cdapVersion) {\n+      MyCDAPVersionApi.get().subscribe((res) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e769a3e98c1797d02659f818e148f8add3e4c297"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM5MTk4Nw==", "bodyText": "Without this, version was empty sometimes. Eg. when visiting the feature via URL/Refreshing.", "url": "https://github.com/cdapio/cdap/pull/11981#discussion_r395391987", "createdAt": "2020-03-20T00:35:00Z", "author": {"login": "itsanudeep"}, "path": "cdap-ui/app/cdap/components/Ingestion/index.tsx", "diffHunk": "@@ -0,0 +1,507 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import PluginList from 'components/Ingestion/PluginList';\n+import PluginsTableView from 'components/Ingestion/PluginsTableView';\n+import { MyPipelineApi } from 'api/pipeline';\n+import SourceSinkConfig from 'components/Ingestion/SourceSinkConfigurator';\n+import { Button, TextField } from '@material-ui/core';\n+import Helmet from 'react-helmet';\n+import { objectQuery } from 'services/helpers';\n+import If from 'components/If';\n+import IconButton from '@material-ui/core/IconButton';\n+import CloseIcon from '@material-ui/icons/Close';\n+import Alert from 'components/Alert';\n+import { getCurrentNamespace } from 'services/NamespaceStore';\n+import VersionStore from 'services/VersionStore';\n+import VersionActions from 'services/VersionStore/VersionActions';\n+import MyCDAPVersionApi from 'api/version.js';\n+import PipelineConfigurationsStore from 'components/PipelineConfigurations/Store';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    root: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+    },\n+    createJobHeader: {\n+      backgroundColor: theme.palette.grey[700],\n+      padding: 5,\n+      paddingLeft: 20,\n+      height: 60,\n+      display: 'flex',\n+      alignItems: 'center',\n+    },\n+    selectionContainer: { padding: 20 },\n+    propsRenderBlock: {\n+      margin: '0 40px',\n+      width: '40%',\n+      propsContainer: {\n+        display: 'flex',\n+      },\n+      flexDirection: 'row',\n+      justifyContent: 'center',\n+    },\n+    filterBox: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+      maxWidth: 500,\n+      marginBottom: 20,\n+    },\n+    filterInput: {\n+      marginBottom: 10,\n+    },\n+    jobInfo: { display: 'flex', flexDirection: 'column', margin: 10 },\n+    instructionHeading: {\n+      marginTop: 10,\n+    },\n+    modalContent: {\n+      height: '90%',\n+      margin: 100,\n+    },\n+    countAndToggle: {\n+      display: 'flex',\n+      justifyContent: 'space-between',\n+      marginBottom: 10,\n+    },\n+    toggleView: {\n+      color: theme.palette.blue[100],\n+      cursor: 'pointer',\n+    },\n+    configureHeader: {\n+      display: 'flex',\n+      flexDirection: 'row',\n+      justifyContent: 'space-between',\n+      alignItems: 'center',\n+      padding: 5,\n+      paddingLeft: 20,\n+      backgroundColor: theme.palette.grey[700],\n+    },\n+    transferDetailsContainer: {\n+      maxWidth: 500,\n+      flexDirection: 'column',\n+      display: 'flex',\n+    },\n+    deployTransferBtn: {\n+      alignSelf: 'flex-end',\n+    },\n+  };\n+};\n+\n+interface IIngestionProps extends WithStyles<typeof styles> {\n+  test: string;\n+  pluginsMap: any;\n+}\n+\n+class IngestionView extends React.Component<IIngestionProps> {\n+  public state = {\n+    filterStr: '',\n+    filteredSources: [],\n+    batchsource: [],\n+    batchsink: [],\n+    selectedSource: null,\n+    selectedSink: null,\n+    sourceBP: null,\n+    sinkBP: null,\n+    pipelineName: '',\n+    publishingPipeline: false,\n+    pipelineDescription: '',\n+    modalOpen: false,\n+    tableView: true,\n+    showConfig: false,\n+    pipelineNameError: false,\n+    deployFailed: false,\n+    cdapVersion: '',\n+    currentNs: 'default',\n+  };\n+\n+  public componentDidMount() {\n+    const currentNs = getCurrentNamespace();\n+    let cdapVersion = VersionStore.getState().version;\n+    if (!cdapVersion) {\n+      MyCDAPVersionApi.get().subscribe((res) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI1MjAwMA=="}, "originalCommit": {"oid": "e769a3e98c1797d02659f818e148f8add3e4c297"}, "originalPosition": 137}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTg5NDYxOnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/Ingestion/index.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxOTowNDo1NFrOF48gcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMDozMDoyM1rOF5EvlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI1NTkyMw==", "bodyText": "all the APIs are already observable. You can use combineLatest instead of converting everything to promises", "url": "https://github.com/cdapio/cdap/pull/11981#discussion_r395255923", "createdAt": "2020-03-19T19:04:54Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/Ingestion/index.tsx", "diffHunk": "@@ -0,0 +1,507 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import PluginList from 'components/Ingestion/PluginList';\n+import PluginsTableView from 'components/Ingestion/PluginsTableView';\n+import { MyPipelineApi } from 'api/pipeline';\n+import SourceSinkConfig from 'components/Ingestion/SourceSinkConfigurator';\n+import { Button, TextField } from '@material-ui/core';\n+import Helmet from 'react-helmet';\n+import { objectQuery } from 'services/helpers';\n+import If from 'components/If';\n+import IconButton from '@material-ui/core/IconButton';\n+import CloseIcon from '@material-ui/icons/Close';\n+import Alert from 'components/Alert';\n+import { getCurrentNamespace } from 'services/NamespaceStore';\n+import VersionStore from 'services/VersionStore';\n+import VersionActions from 'services/VersionStore/VersionActions';\n+import MyCDAPVersionApi from 'api/version.js';\n+import PipelineConfigurationsStore from 'components/PipelineConfigurations/Store';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    root: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+    },\n+    createJobHeader: {\n+      backgroundColor: theme.palette.grey[700],\n+      padding: 5,\n+      paddingLeft: 20,\n+      height: 60,\n+      display: 'flex',\n+      alignItems: 'center',\n+    },\n+    selectionContainer: { padding: 20 },\n+    propsRenderBlock: {\n+      margin: '0 40px',\n+      width: '40%',\n+      propsContainer: {\n+        display: 'flex',\n+      },\n+      flexDirection: 'row',\n+      justifyContent: 'center',\n+    },\n+    filterBox: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+      maxWidth: 500,\n+      marginBottom: 20,\n+    },\n+    filterInput: {\n+      marginBottom: 10,\n+    },\n+    jobInfo: { display: 'flex', flexDirection: 'column', margin: 10 },\n+    instructionHeading: {\n+      marginTop: 10,\n+    },\n+    modalContent: {\n+      height: '90%',\n+      margin: 100,\n+    },\n+    countAndToggle: {\n+      display: 'flex',\n+      justifyContent: 'space-between',\n+      marginBottom: 10,\n+    },\n+    toggleView: {\n+      color: theme.palette.blue[100],\n+      cursor: 'pointer',\n+    },\n+    configureHeader: {\n+      display: 'flex',\n+      flexDirection: 'row',\n+      justifyContent: 'space-between',\n+      alignItems: 'center',\n+      padding: 5,\n+      paddingLeft: 20,\n+      backgroundColor: theme.palette.grey[700],\n+    },\n+    transferDetailsContainer: {\n+      maxWidth: 500,\n+      flexDirection: 'column',\n+      display: 'flex',\n+    },\n+    deployTransferBtn: {\n+      alignSelf: 'flex-end',\n+    },\n+  };\n+};\n+\n+interface IIngestionProps extends WithStyles<typeof styles> {\n+  test: string;\n+  pluginsMap: any;\n+}\n+\n+class IngestionView extends React.Component<IIngestionProps> {\n+  public state = {\n+    filterStr: '',\n+    filteredSources: [],\n+    batchsource: [],\n+    batchsink: [],\n+    selectedSource: null,\n+    selectedSink: null,\n+    sourceBP: null,\n+    sinkBP: null,\n+    pipelineName: '',\n+    publishingPipeline: false,\n+    pipelineDescription: '',\n+    modalOpen: false,\n+    tableView: true,\n+    showConfig: false,\n+    pipelineNameError: false,\n+    deployFailed: false,\n+    cdapVersion: '',\n+    currentNs: 'default',\n+  };\n+\n+  public componentDidMount() {\n+    const currentNs = getCurrentNamespace();\n+    let cdapVersion = VersionStore.getState().version;\n+    if (!cdapVersion) {\n+      MyCDAPVersionApi.get().subscribe((res) => {\n+        cdapVersion = res.version;\n+        VersionStore.dispatch({\n+          type: VersionActions.updateVersion,\n+          payload: {\n+            version: res.version,\n+          },\n+        });\n+        this.fetchSourceSink(cdapVersion, currentNs);\n+        this.setState({ currentNs, cdapVersion });\n+      });\n+    } else {\n+      this.fetchSourceSink(cdapVersion, currentNs);\n+      this.setState({ currentNs, cdapVersion });\n+    }\n+  }\n+\n+  public fetchSourceSink = (version, namespace) => {\n+    this.fetchPlugins('batchsource', version, namespace);\n+    this.fetchPlugins('batchsink', version, namespace);\n+  };\n+\n+  public fetchPlugins = async (extensionType, version, namespace = 'default') => {\n+    const res = await MyPipelineApi.fetchPlugins({\n+      namespace,\n+      pipelineType: 'cdap-data-pipeline',\n+      version,\n+      extensionType,\n+    }).toPromise();\n+    const promises = res.map(async (plugin) => {\n+      const params = {\n+        namespace,\n+        artifactName: plugin.artifact.name,\n+        artifactVersion: plugin.artifact.version,\n+        scope: plugin.artifact.scope,\n+        keys: `widgets.${plugin.name}-${plugin.type}`,\n+      };\n+      const widgetJ = await MyPipelineApi.fetchWidgetJson(params).toPromise();\n+      const widgetJson = JSON.parse(widgetJ[`widgets.${plugin.name}-${plugin.type}`]);\n+      const pluginWithWidgetJson = { ...plugin, widgetJson };\n+      return pluginWithWidgetJson;\n+    });\n+\n+    Promise.all(promises).then((data) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e769a3e98c1797d02659f818e148f8add3e4c297"}, "originalPosition": 180}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM5MDg2OQ==", "bodyText": "Added a TODO, will cleanup in the upcoming days (post 6.2.0).", "url": "https://github.com/cdapio/cdap/pull/11981#discussion_r395390869", "createdAt": "2020-03-20T00:30:23Z", "author": {"login": "itsanudeep"}, "path": "cdap-ui/app/cdap/components/Ingestion/index.tsx", "diffHunk": "@@ -0,0 +1,507 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import PluginList from 'components/Ingestion/PluginList';\n+import PluginsTableView from 'components/Ingestion/PluginsTableView';\n+import { MyPipelineApi } from 'api/pipeline';\n+import SourceSinkConfig from 'components/Ingestion/SourceSinkConfigurator';\n+import { Button, TextField } from '@material-ui/core';\n+import Helmet from 'react-helmet';\n+import { objectQuery } from 'services/helpers';\n+import If from 'components/If';\n+import IconButton from '@material-ui/core/IconButton';\n+import CloseIcon from '@material-ui/icons/Close';\n+import Alert from 'components/Alert';\n+import { getCurrentNamespace } from 'services/NamespaceStore';\n+import VersionStore from 'services/VersionStore';\n+import VersionActions from 'services/VersionStore/VersionActions';\n+import MyCDAPVersionApi from 'api/version.js';\n+import PipelineConfigurationsStore from 'components/PipelineConfigurations/Store';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    root: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+    },\n+    createJobHeader: {\n+      backgroundColor: theme.palette.grey[700],\n+      padding: 5,\n+      paddingLeft: 20,\n+      height: 60,\n+      display: 'flex',\n+      alignItems: 'center',\n+    },\n+    selectionContainer: { padding: 20 },\n+    propsRenderBlock: {\n+      margin: '0 40px',\n+      width: '40%',\n+      propsContainer: {\n+        display: 'flex',\n+      },\n+      flexDirection: 'row',\n+      justifyContent: 'center',\n+    },\n+    filterBox: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+      maxWidth: 500,\n+      marginBottom: 20,\n+    },\n+    filterInput: {\n+      marginBottom: 10,\n+    },\n+    jobInfo: { display: 'flex', flexDirection: 'column', margin: 10 },\n+    instructionHeading: {\n+      marginTop: 10,\n+    },\n+    modalContent: {\n+      height: '90%',\n+      margin: 100,\n+    },\n+    countAndToggle: {\n+      display: 'flex',\n+      justifyContent: 'space-between',\n+      marginBottom: 10,\n+    },\n+    toggleView: {\n+      color: theme.palette.blue[100],\n+      cursor: 'pointer',\n+    },\n+    configureHeader: {\n+      display: 'flex',\n+      flexDirection: 'row',\n+      justifyContent: 'space-between',\n+      alignItems: 'center',\n+      padding: 5,\n+      paddingLeft: 20,\n+      backgroundColor: theme.palette.grey[700],\n+    },\n+    transferDetailsContainer: {\n+      maxWidth: 500,\n+      flexDirection: 'column',\n+      display: 'flex',\n+    },\n+    deployTransferBtn: {\n+      alignSelf: 'flex-end',\n+    },\n+  };\n+};\n+\n+interface IIngestionProps extends WithStyles<typeof styles> {\n+  test: string;\n+  pluginsMap: any;\n+}\n+\n+class IngestionView extends React.Component<IIngestionProps> {\n+  public state = {\n+    filterStr: '',\n+    filteredSources: [],\n+    batchsource: [],\n+    batchsink: [],\n+    selectedSource: null,\n+    selectedSink: null,\n+    sourceBP: null,\n+    sinkBP: null,\n+    pipelineName: '',\n+    publishingPipeline: false,\n+    pipelineDescription: '',\n+    modalOpen: false,\n+    tableView: true,\n+    showConfig: false,\n+    pipelineNameError: false,\n+    deployFailed: false,\n+    cdapVersion: '',\n+    currentNs: 'default',\n+  };\n+\n+  public componentDidMount() {\n+    const currentNs = getCurrentNamespace();\n+    let cdapVersion = VersionStore.getState().version;\n+    if (!cdapVersion) {\n+      MyCDAPVersionApi.get().subscribe((res) => {\n+        cdapVersion = res.version;\n+        VersionStore.dispatch({\n+          type: VersionActions.updateVersion,\n+          payload: {\n+            version: res.version,\n+          },\n+        });\n+        this.fetchSourceSink(cdapVersion, currentNs);\n+        this.setState({ currentNs, cdapVersion });\n+      });\n+    } else {\n+      this.fetchSourceSink(cdapVersion, currentNs);\n+      this.setState({ currentNs, cdapVersion });\n+    }\n+  }\n+\n+  public fetchSourceSink = (version, namespace) => {\n+    this.fetchPlugins('batchsource', version, namespace);\n+    this.fetchPlugins('batchsink', version, namespace);\n+  };\n+\n+  public fetchPlugins = async (extensionType, version, namespace = 'default') => {\n+    const res = await MyPipelineApi.fetchPlugins({\n+      namespace,\n+      pipelineType: 'cdap-data-pipeline',\n+      version,\n+      extensionType,\n+    }).toPromise();\n+    const promises = res.map(async (plugin) => {\n+      const params = {\n+        namespace,\n+        artifactName: plugin.artifact.name,\n+        artifactVersion: plugin.artifact.version,\n+        scope: plugin.artifact.scope,\n+        keys: `widgets.${plugin.name}-${plugin.type}`,\n+      };\n+      const widgetJ = await MyPipelineApi.fetchWidgetJson(params).toPromise();\n+      const widgetJson = JSON.parse(widgetJ[`widgets.${plugin.name}-${plugin.type}`]);\n+      const pluginWithWidgetJson = { ...plugin, widgetJson };\n+      return pluginWithWidgetJson;\n+    });\n+\n+    Promise.all(promises).then((data) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI1NTkyMw=="}, "originalCommit": {"oid": "e769a3e98c1797d02659f818e148f8add3e4c297"}, "originalPosition": 180}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NDAwNDk5OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/api/pipeline.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMjozNzozNFrOF5k_cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQwMDozMTo0MlrOF5mYQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkxOTIxOQ==", "bodyText": "nit: Template strings might improve readability here", "url": "https://github.com/cdapio/cdap/pull/11981#discussion_r395919219", "createdAt": "2020-03-20T22:37:34Z", "author": {"login": "yukiej"}, "path": "cdap-ui/app/cdap/api/pipeline.js", "diffHunk": "@@ -30,6 +30,11 @@ const extensionsPath =\n   '/namespaces/:namespace/artifacts/:parentArtifact/versions/:version/extensions/:extension';\n const pluginsPath = `${extensionsPath}/plugins/:pluginName`;\n \n+const extensionsFetchBase =\n+  '/namespaces/:namespace/artifacts/:pipelineType/versions/:version/extensions';\n+const pluginFetchBase = extensionsFetchBase + '/:extensionType';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3947f6633723af9333a5f0d2311bc76f9be1df12"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk0MTk1Mw==", "bodyText": "done", "url": "https://github.com/cdapio/cdap/pull/11981#discussion_r395941953", "createdAt": "2020-03-21T00:31:42Z", "author": {"login": "itsanudeep"}, "path": "cdap-ui/app/cdap/api/pipeline.js", "diffHunk": "@@ -30,6 +30,11 @@ const extensionsPath =\n   '/namespaces/:namespace/artifacts/:parentArtifact/versions/:version/extensions/:extension';\n const pluginsPath = `${extensionsPath}/plugins/:pluginName`;\n \n+const extensionsFetchBase =\n+  '/namespaces/:namespace/artifacts/:pipelineType/versions/:version/extensions';\n+const pluginFetchBase = extensionsFetchBase + '/:extensionType';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkxOTIxOQ=="}, "originalCommit": {"oid": "3947f6633723af9333a5f0d2311bc76f9be1df12"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTAyMzQ5OnYy", "diffSide": "RIGHT", "path": "cdap-ui/app/cdap/components/Ingestion/PluginWidgetRenderer/index.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODo0ODowMFrOF6TalA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDo0NjowN1rOF6XcWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3OTgyOA==", "bodyText": "What is this intending to do?", "url": "https://github.com/cdapio/cdap/pull/11981#discussion_r396679828", "createdAt": "2020-03-23T18:48:00Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/Ingestion/PluginWidgetRenderer/index.tsx", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import ConfigurationGroup from 'components/ConfigurationGroup';\n+import If from 'components/If';\n+import { Card, TextField } from '@material-ui/core';\n+import { objectQuery } from 'services/helpers';\n+import { getIcon, getPluginDisplayName } from 'components/Ingestion/helpers';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    root: {\n+      height: 'auto',\n+      padding: '20px',\n+    },\n+    labelContainer: {\n+      padding: '10px',\n+      paddingLeft: '0px',\n+      width: '100%',\n+    },\n+    heading: {\n+      display: 'flex',\n+      justifyContent: 'space-between',\n+    },\n+    pluginIconContainer: {\n+      display: 'flex',\n+      alignSelf: 'right',\n+    },\n+    pluginFAIcon: {\n+      fontSize: '32px',\n+    },\n+    headingTitle: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+    },\n+    pluginIcon: { width: '64px' },\n+  };\n+};\n+\n+interface IPluginWidgetRendererProps extends WithStyles<typeof styles> {\n+  configurationGroupProps: any;\n+  title: string;\n+  plugin: any;\n+}\n+\n+class PluginWidgetRendererView extends React.Component<IPluginWidgetRendererProps> {\n+  public render() {\n+    const { classes, configurationGroupProps, title, plugin } = this.props;\n+    const pluginLabel = getPluginDisplayName(plugin);\n+    const iconData = objectQuery(plugin, 'widgetJson', 'icon', 'arguments', 'data');\n+    return (\n+      <Card className={classes.root}>\n+        <div className={classes.heading}>\n+          <div className={classes.headingTitle}>\n+            <h5>{title.toUpperCase()}</h5>\n+            <h2>{pluginLabel}</h2>\n+          </div>\n+          <div className={classes.pluginIconContainer}>\n+            <If condition={iconData}>\n+              <img className={classes.pluginIcon} src={iconData} />\n+            </If>\n+            <If condition={!iconData}>\n+              <div\n+                className={`${classes.pluginFAIcon} fa ${getIcon(\n+                  this.props.plugin.name.toLowerCase()\n+                )}`}\n+              />\n+            </If>\n+          </div>\n+        </div>\n+        <div className={classes.labelContainer}>\n+          <TextField\n+            label=\"Label\"\n+            variant=\"outlined\"\n+            margin=\"dense\"\n+            fullWidth={true}\n+            value={configurationGroupProps.label}\n+            onChange={(event) => configurationGroupProps.onLabelChange(event.target.value)}\n+          />\n+        </div>\n+        <If condition={configurationGroupProps.pluginProperties}>\n+          <ConfigurationGroup\n+            pluginProperties={\n+              configurationGroupProps.pluginProperties && configurationGroupProps.pluginProperties", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c9517148158eceea7bc44026e7591b7eaf10496"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc0NTgxNg==", "bodyText": "Ahhh! I messed up clearing this after I added the If component. Fixed.", "url": "https://github.com/cdapio/cdap/pull/11981#discussion_r396745816", "createdAt": "2020-03-23T20:46:07Z", "author": {"login": "itsanudeep"}, "path": "cdap-ui/app/cdap/components/Ingestion/PluginWidgetRenderer/index.tsx", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import ConfigurationGroup from 'components/ConfigurationGroup';\n+import If from 'components/If';\n+import { Card, TextField } from '@material-ui/core';\n+import { objectQuery } from 'services/helpers';\n+import { getIcon, getPluginDisplayName } from 'components/Ingestion/helpers';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    root: {\n+      height: 'auto',\n+      padding: '20px',\n+    },\n+    labelContainer: {\n+      padding: '10px',\n+      paddingLeft: '0px',\n+      width: '100%',\n+    },\n+    heading: {\n+      display: 'flex',\n+      justifyContent: 'space-between',\n+    },\n+    pluginIconContainer: {\n+      display: 'flex',\n+      alignSelf: 'right',\n+    },\n+    pluginFAIcon: {\n+      fontSize: '32px',\n+    },\n+    headingTitle: {\n+      display: 'flex',\n+      flexDirection: 'column',\n+    },\n+    pluginIcon: { width: '64px' },\n+  };\n+};\n+\n+interface IPluginWidgetRendererProps extends WithStyles<typeof styles> {\n+  configurationGroupProps: any;\n+  title: string;\n+  plugin: any;\n+}\n+\n+class PluginWidgetRendererView extends React.Component<IPluginWidgetRendererProps> {\n+  public render() {\n+    const { classes, configurationGroupProps, title, plugin } = this.props;\n+    const pluginLabel = getPluginDisplayName(plugin);\n+    const iconData = objectQuery(plugin, 'widgetJson', 'icon', 'arguments', 'data');\n+    return (\n+      <Card className={classes.root}>\n+        <div className={classes.heading}>\n+          <div className={classes.headingTitle}>\n+            <h5>{title.toUpperCase()}</h5>\n+            <h2>{pluginLabel}</h2>\n+          </div>\n+          <div className={classes.pluginIconContainer}>\n+            <If condition={iconData}>\n+              <img className={classes.pluginIcon} src={iconData} />\n+            </If>\n+            <If condition={!iconData}>\n+              <div\n+                className={`${classes.pluginFAIcon} fa ${getIcon(\n+                  this.props.plugin.name.toLowerCase()\n+                )}`}\n+              />\n+            </If>\n+          </div>\n+        </div>\n+        <div className={classes.labelContainer}>\n+          <TextField\n+            label=\"Label\"\n+            variant=\"outlined\"\n+            margin=\"dense\"\n+            fullWidth={true}\n+            value={configurationGroupProps.label}\n+            onChange={(event) => configurationGroupProps.onLabelChange(event.target.value)}\n+          />\n+        </div>\n+        <If condition={configurationGroupProps.pluginProperties}>\n+          <ConfigurationGroup\n+            pluginProperties={\n+              configurationGroupProps.pluginProperties && configurationGroupProps.pluginProperties", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3OTgyOA=="}, "originalCommit": {"oid": "5c9517148158eceea7bc44026e7591b7eaf10496"}, "originalPosition": 99}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2850, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}