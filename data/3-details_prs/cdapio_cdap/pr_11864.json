{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0MDQ2Nzkx", "number": 11864, "title": "[CDAP-16236] Using keyvalue widget in runtime arguments modal", "bodyText": "Now using key value widget in runtime arguments modal.\nThis would also fix the issues mentioned in https://issues.cask.co/browse/CDAP-16236\nCreated https://issues.cask.co/browse/CDAP-16292 to write E2E tests that would go into develop later.", "createdAt": "2020-02-12T01:43:22Z", "url": "https://github.com/cdapio/cdap/pull/11864", "merged": true, "mergeCommit": {"oid": "ea054b78bb5005c7f5a99f8f7850208e54e70f4d"}, "closed": true, "closedAt": "2020-03-12T16:55:02Z", "author": {"login": "itsanudeep"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcEZhyvgBqjMwNDA1NTQzOTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMvn_4ABqjMxMjA4ODU4Nzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ffe37b37cc2ede7f23f3142aebe2649c61f7c99a", "author": {"user": {"login": "itsanudeep", "name": "Anudeep Katragadda"}}, "url": "https://github.com/cdapio/cdap/commit/ffe37b37cc2ede7f23f3142aebe2649c61f7c99a", "committedDate": "2020-02-15T00:45:05Z", "message": "extending KeyValueRow widget"}, "afterCommit": {"oid": "27884b2260d25460cfedf14c3e79997be1bb31b6", "author": {"user": {"login": "itsanudeep", "name": "Anudeep Katragadda"}}, "url": "https://github.com/cdapio/cdap/commit/27884b2260d25460cfedf14c3e79997be1bb31b6", "committedDate": "2020-02-15T00:54:58Z", "message": "extending KeyValueRow widget"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "27884b2260d25460cfedf14c3e79997be1bb31b6", "author": {"user": {"login": "itsanudeep", "name": "Anudeep Katragadda"}}, "url": "https://github.com/cdapio/cdap/commit/27884b2260d25460cfedf14c3e79997be1bb31b6", "committedDate": "2020-02-15T00:54:58Z", "message": "extending KeyValueRow widget"}, "afterCommit": {"oid": "c0e5156becfe59eaa8fa7617164c130aa8abda3e", "author": {"user": {"login": "itsanudeep", "name": "Anudeep Katragadda"}}, "url": "https://github.com/cdapio/cdap/commit/c0e5156becfe59eaa8fa7617164c130aa8abda3e", "committedDate": "2020-02-26T17:01:23Z", "message": "using keyvalue widget in runtime args"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NjE2NzM5", "url": "https://github.com/cdapio/cdap/pull/11864#pullrequestreview-367616739", "createdAt": "2020-03-02T23:59:45Z", "commit": {"oid": "c0e5156becfe59eaa8fa7617164c130aa8abda3e"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMzo1OTo0NVrOFwzvZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwMDowNToyNFrOFwz3wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcyMzY4Nw==", "bodyText": "Can you add a comment as to why this needs any?", "url": "https://github.com/cdapio/cdap/pull/11864#discussion_r386723687", "createdAt": "2020-03-02T23:59:45Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/AbstractMultiRowWidget/AbstractRow.tsx", "diffHunk": "@@ -41,7 +41,7 @@ export const AbstractRowStyles = (theme): StyleRules => {\n };\n \n export interface IAbstractRowProps<S extends typeof AbstractRowStyles> extends WithStyles<S> {\n-  value: string;\n+  value: string | any;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0e5156becfe59eaa8fa7617164c130aa8abda3e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcyNDAwMg==", "bodyText": "Same here. We should try avoiding using any but if we need to we should provide a comment to justify the necessity.", "url": "https://github.com/cdapio/cdap/pull/11864#discussion_r386724002", "createdAt": "2020-03-03T00:00:50Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/AbstractMultiRowWidget/index.tsx", "diffHunk": "@@ -151,7 +151,7 @@ export default class AbstractMultiRowWidget<\n     this.onChange();\n   };\n \n-  public constructValues = () => {\n+  public constructValues = (): any => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0e5156becfe59eaa8fa7617164c130aa8abda3e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcyNDg0OA==", "bodyText": "Now that we have removed the checkboxes do we still need the provided?", "url": "https://github.com/cdapio/cdap/pull/11864#discussion_r386724848", "createdAt": "2020-03-03T00:02:49Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PipelineConfigurations/Store/ActionCreator.js", "diffHunk": "@@ -45,36 +45,23 @@ import { CLOUD } from 'services/global-constants';\n // Filter certain preferences from being shown in the run time arguments\n // They are being represented in other places (like selected compute profile).\n const getFilteredRuntimeArgs = (runtimeArgs) => {\n-  const RUNTIME_ARGS_TO_SKIP_DURING_DISPLAY = [\n-    CLOUD.PROFILE_NAME_PREFERENCE_PROPERTY,\n-    CLOUD.PROFILE_PROPERTIES_PREFERENCE,\n-    'logical.start.time',\n-  ];\n   let { resolvedMacros } = PipelineConfigurationsStore.getState();\n   let modifiedRuntimeArgs = {};\n   let pairs = [...runtimeArgs.pairs];\n-  const skipIfProfilePropMatch = (prop) => {\n-    let isMatch = RUNTIME_ARGS_TO_SKIP_DURING_DISPLAY.filter(\n-      (skipProp) => prop.indexOf(skipProp) !== -1\n-    );\n-    return isMatch.length ? true : false;\n-  };\n-  pairs = pairs\n-    .filter((pair) => !skipIfProfilePropMatch(pair.key))\n-    .map((pair) => {\n-      if (pair.key in resolvedMacros) {\n-        return {\n-          notDeletable: true,\n-          provided: pair.provided || false,\n-          ...pair,\n-        };\n-      }\n+  pairs = pairs.map((pair) => {\n+    if (pair.key in resolvedMacros) {\n       return {\n+        notDeletable: true,\n+        provided: pair.provided || false,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0e5156becfe59eaa8fa7617164c130aa8abda3e"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcyNTAyMg==", "bodyText": "Same here.", "url": "https://github.com/cdapio/cdap/pull/11864#discussion_r386725022", "createdAt": "2020-03-03T00:03:06Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PipelineConfigurations/Store/ActionCreator.js", "diffHunk": "@@ -45,36 +45,23 @@ import { CLOUD } from 'services/global-constants';\n // Filter certain preferences from being shown in the run time arguments\n // They are being represented in other places (like selected compute profile).\n const getFilteredRuntimeArgs = (runtimeArgs) => {\n-  const RUNTIME_ARGS_TO_SKIP_DURING_DISPLAY = [\n-    CLOUD.PROFILE_NAME_PREFERENCE_PROPERTY,\n-    CLOUD.PROFILE_PROPERTIES_PREFERENCE,\n-    'logical.start.time',\n-  ];\n   let { resolvedMacros } = PipelineConfigurationsStore.getState();\n   let modifiedRuntimeArgs = {};\n   let pairs = [...runtimeArgs.pairs];\n-  const skipIfProfilePropMatch = (prop) => {\n-    let isMatch = RUNTIME_ARGS_TO_SKIP_DURING_DISPLAY.filter(\n-      (skipProp) => prop.indexOf(skipProp) !== -1\n-    );\n-    return isMatch.length ? true : false;\n-  };\n-  pairs = pairs\n-    .filter((pair) => !skipIfProfilePropMatch(pair.key))\n-    .map((pair) => {\n-      if (pair.key in resolvedMacros) {\n-        return {\n-          notDeletable: true,\n-          provided: pair.provided || false,\n-          ...pair,\n-        };\n-      }\n+  pairs = pairs.map((pair) => {\n+    if (pair.key in resolvedMacros) {\n       return {\n+        notDeletable: true,\n+        provided: pair.provided || false,\n         ...pair,\n-        // This is needed because KeyValuePair will render a checkbox only if the provided is a boolean.\n-        provided: null,\n       };\n-    });\n+    }\n+    return {\n+      ...pair,\n+      // This is needed because KeyValuePair will render a checkbox only if the provided is a boolean.\n+      provided: null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0e5156becfe59eaa8fa7617164c130aa8abda3e"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcyNTgyNQ==", "bodyText": "Where is this ::: coming from? I thought we decided to not use a string delimiter as we want to pass in the runtime arguments as is (object).", "url": "https://github.com/cdapio/cdap/pull/11864#discussion_r386725825", "createdAt": "2020-03-03T00:05:24Z", "author": {"login": "ajainarayanan"}, "path": "cdap-ui/app/cdap/components/PipelineDetails/PipelineRuntimeArgsDropdownBtn/RuntimeArgsKeyValuePairWrapper/RuntimeArgsPairsMaterial.tsx", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import AbstractMultiRowWidget, {\n+  IMultiRowProps,\n+} from 'components/AbstractWidget/AbstractMultiRowWidget';\n+import RuntimeArgsRow from 'components/PipelineDetails/PipelineRuntimeArgsDropdownBtn/RuntimeArgsKeyValuePairWrapper/RuntimeArgsRow';\n+import ThemeWrapper from 'components/ThemeWrapper';\n+import { objectQuery } from 'services/helpers';\n+\n+interface IRuntimeArgsPairsWidgetProps {\n+  'key-placeholder'?: string;\n+  'value-placeholder'?: string;\n+  'kv-delimiter'?: string;\n+  delimiter?: string;\n+}\n+\n+interface IRuntimeArgsPairsProps extends IMultiRowProps<IRuntimeArgsPairsWidgetProps> {\n+  isEncoded?: boolean; // for compatiblity with keyvalue-encoded type\n+}\n+\n+class RuntimeArgsPairsView extends AbstractMultiRowWidget<IRuntimeArgsPairsProps> {\n+  public componentWillReceiveProps(nextProps) {\n+    const currentValue = this.constructValues();\n+    if (currentValue.length === nextProps.value.length) {\n+      return;\n+    }\n+    this.init(nextProps);\n+  }\n+  public constructValues = () => {\n+    const values = this.state.rows\n+      .filter((id) => this.values[id] && this.values[id].value)\n+      .map((id) => this.values[id].value);\n+    return values;\n+  };\n+  public deconstructValues = (props) => {\n+    if (!props.value || props.value.length === 0) {\n+      return [];\n+    }\n+    const kvDelimiter = objectQuery(props, 'widgetProps', 'kv-delimiter') || ':::';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0e5156becfe59eaa8fa7617164c130aa8abda3e"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMDM3NzYw", "url": "https://github.com/cdapio/cdap/pull/11864#pullrequestreview-373037760", "createdAt": "2020-03-11T18:53:37Z", "commit": {"oid": "7247c28809e1a0e78bf17ea63fcb70ef8ef6c45f"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxODo1MzozOFrOF1EfcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOTowMDoxOVrOF1Et0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5MjQzMw==", "bodyText": "this should follow the pattern on the AbstractRow to have construct and deconstruct methods that needs to be overwritten. It's clearer rather than overwriting init method.", "url": "https://github.com/cdapio/cdap/pull/11864#discussion_r391192433", "createdAt": "2020-03-11T18:53:38Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/AbstractWidget/AbstractMultiRowWidget/index.tsx", "diffHunk": "@@ -68,7 +68,7 @@ export default class AbstractMultiRowWidget<\n     return props.value.split(delimiter);\n   };\n \n-  private init = (props) => {\n+  public init = (props) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7247c28809e1a0e78bf17ea63fcb70ef8ef6c45f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5MzgxMg==", "bodyText": "name component the same as the file name", "url": "https://github.com/cdapio/cdap/pull/11864#discussion_r391193812", "createdAt": "2020-03-11T18:55:56Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/cdap/components/PipelineDetails/PipelineRuntimeArgsDropdownBtn/RuntimeArgsKeyValuePairWrapper/RuntimeArgsPairsMaterial.tsx", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import AbstractMultiRowWidget, {\n+  IMultiRowProps,\n+} from 'components/AbstractWidget/AbstractMultiRowWidget';\n+import RuntimeArgsRow from 'components/PipelineDetails/PipelineRuntimeArgsDropdownBtn/RuntimeArgsKeyValuePairWrapper/RuntimeArgsRow';\n+import ThemeWrapper from 'components/ThemeWrapper';\n+import { objectQuery } from 'services/helpers';\n+\n+interface IRuntimeArgsPairsWidgetProps {\n+  'key-placeholder'?: string;\n+  'value-placeholder'?: string;\n+  'kv-delimiter'?: string;\n+  delimiter?: string;\n+}\n+\n+interface IRuntimeArgsPairsProps extends IMultiRowProps<IRuntimeArgsPairsWidgetProps> {\n+  isEncoded?: boolean; // for compatiblity with keyvalue-encoded type\n+}\n+\n+interface IValue {\n+  key: string;\n+  value: string;\n+  notDeletable: boolean;\n+}\n+\n+class RuntimeArgsPairsView extends AbstractMultiRowWidget<IRuntimeArgsPairsProps> {\n+  public componentWillReceiveProps(nextProps) {\n+    // causing focus/render issues if we don't return here\n+    return;\n+  }\n+\n+  public constructValues = () => {\n+    const values = this.state.rows\n+      .filter((id) => this.values[id] && this.values[id].value)\n+      .map((id) => this.values[id].value);\n+    return values;\n+  };\n+  public deconstructValues = (props) => {\n+    if (!props.value || props.value.length === 0) {\n+      return [];\n+    }\n+    return props.value;\n+  };\n+\n+  public renderRow = (id, index) => {\n+    const keyPlaceholder = objectQuery(this.props, 'widgetProps', 'key-placeholder');\n+    const valuePlaceholder = objectQuery(this.props, 'widgetProps', 'value-placeholder');\n+    const isEncoded = this.props.isEncoded || objectQuery(this.props, 'widgetProps', 'isEncoded');\n+    const value = this.values[id].value;\n+    const notDeletable = objectQuery(value, 'notDeletable');\n+\n+    return (\n+      <RuntimeArgsRow\n+        key={id}\n+        value={value}\n+        id={id}\n+        index={index}\n+        onChange={this.editRow}\n+        addRow={this.addRow.bind(this, index)}\n+        removeRow={this.removeRow.bind(this, index)}\n+        autofocus={this.state.autofocus === id}\n+        changeFocus={this.changeFocus}\n+        disabled={this.props.disabled}\n+        keyPlaceholder={keyPlaceholder}\n+        valuePlaceholder={valuePlaceholder}\n+        isEncoded={isEncoded}\n+        forwardedRef={this.values[id].ref}\n+        errors={this.props.errors}\n+        deleteDisabled={notDeletable}\n+      />\n+    );\n+  };\n+}\n+export default function RuntimeArgsPairs(props) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7247c28809e1a0e78bf17ea63fcb70ef8ef6c45f"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5NTc1NQ==", "bodyText": "nit: indentation", "url": "https://github.com/cdapio/cdap/pull/11864#discussion_r391195755", "createdAt": "2020-03-11T18:59:34Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/directives/my-pipeline-runtime-args/my-pipeline-runtime-args.html", "diffHunk": "@@ -20,34 +20,14 @@\n     By default, values for all runtime arguments must be provided before running the pipeline. If a stage in your pipeline provides the value of an argument, you can skip that argument by marking it as provided.\n   </div>\n </div>\n-<div class=\"runtime-arguments-labels key-value-pair-labels\">\n-  <span class=\"key-label\">Name</span>\n-  <span class=\"value-label\">Value</span>\n-  <span></span>\n-  <span class=\"provided-label\"\n-        ng-if=\"RuntimeArgsCtrl.containsMacros\">\n-    <span uib-dropdown\n-      class=\"dropdown\"\n-      is-open=\"RuntimeArgsCtrl.providedPopoverOpen\">\n-      <span uib-dropdown-toggle>\n-        Provided\n-        <span class=\"fa fa-caret-square-o-down\">\n-      </span>\n-      <ul uib-dropdown-menu ng-click=\"$event.stopPropagation();\">\n-        <li ng-click=\"RuntimeArgsCtrl.toggleAllProvided(false)\">\n-          Clear All\n-        </li>\n-        <li ng-click=\"RuntimeArgsCtrl.toggleAllProvided(true)\">\n-          Select All\n-        </li>\n-      </ul>\n-    </span>\n-  </span>\n-</div>\n <div class=\"runtime-arguments-values key-value-pair-values\">\n-  <key-value-pairs\n-    key-values=\"RuntimeArgsCtrl.runtimeArguments\"\n-    on-key-value-change=\"RuntimeArgsCtrl.onRuntimeArgumentsChange\"\n-    get-resetted-key-value=\"RuntimeArgsCtrl.getResettedRuntimeArgument\"\n-  ></key-value-pairs>\n+  <key-value-pairs-material\n+  widget-props=\"{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7247c28809e1a0e78bf17ea63fcb70ef8ef6c45f"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5NTg1MQ==", "bodyText": "nit: const", "url": "https://github.com/cdapio/cdap/pull/11864#discussion_r391195851", "createdAt": "2020-03-11T18:59:47Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/app/directives/my-pipeline-runtime-args/my-pipeline-runtime-args.js", "diffHunk": "@@ -46,21 +46,9 @@ class MyPipelineRuntimeArgsCtrl {\n     return runtimeArguments;\n   }\n \n-  onRuntimeArgumentsChange(newRuntimeArguments) {\n-    this.runtimeArguments = this.checkForReset(newRuntimeArguments);\n-  }\n-\n-  toggleAllProvided(isProvided) {\n-    angular.forEach(this.runtimeArguments.pairs, (runtimeArg) => {\n-      if (runtimeArg.notDeletable) {\n-        runtimeArg.provided = isProvided;\n-      }\n-    });\n-    window.CaskCommon.KeyValueStore.dispatch({\n-      type: window.CaskCommon.KeyValueStoreActions.onUpdate,\n-      payload: {pairs: this.runtimeArguments.pairs}\n-    });\n-    this.providedPopoverOpen = !this.providedPopoverOpen;\n+  onRuntimeArgumentsChange(changedArgs) {\n+    let newArgs = changedArgs.length ? changedArgs : [];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7247c28809e1a0e78bf17ea63fcb70ef8ef6c45f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5NjExNQ==", "bodyText": "use version range for all versions", "url": "https://github.com/cdapio/cdap/pull/11864#discussion_r391196115", "createdAt": "2020-03-11T19:00:19Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/cypress/fixtures/pipeline_with_macros.json", "diffHunk": "@@ -0,0 +1,105 @@\n+{\n+  \"artifact\": {\n+    \"name\": \"cdap-data-pipeline\",\n+    \"version\": \"6.2.0-SNAPSHOT\",\n+    \"scope\": \"SYSTEM\"\n+  },\n+  \"description\": \"Data Pipeline Application\",\n+  \"name\": \"Airport_test_macros\",\n+  \"config\": {\n+    \"resources\": {\n+      \"memoryMB\": 1024,\n+      \"virtualCores\": 1\n+    },\n+    \"driverResources\": {\n+      \"memoryMB\": 1024,\n+      \"virtualCores\": 1\n+    },\n+    \"connections\": [\n+      {\n+        \"from\": \"Airport_source\",\n+        \"to\": \"Wrangler\"\n+      },\n+      {\n+        \"from\": \"Wrangler\",\n+        \"to\": \"Airport_sink\"\n+      }\n+    ],\n+    \"comments\": [],\n+    \"postActions\": [],\n+    \"properties\": {},\n+    \"processTimingEnabled\": true,\n+    \"stageLoggingEnabled\": true,\n+    \"stages\": [\n+      {\n+        \"name\": \"Airport_source\",\n+        \"plugin\": {\n+          \"name\": \"File\",\n+          \"type\": \"batchsource\",\n+          \"label\": \"Airport_source\",\n+          \"artifact\": {\n+            \"name\": \"core-plugins\",\n+            \"version\": \"2.4.0-SNAPSHOT\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7247c28809e1a0e78bf17ea63fcb70ef8ef6c45f"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMTc2OTEw", "url": "https://github.com/cdapio/cdap/pull/11864#pullrequestreview-373176910", "createdAt": "2020-03-11T22:45:47Z", "commit": {"oid": "7c429038a039d2c8ad77e229563868097810b11c"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMjo0NTo0N1rOF1L07A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMjo0NTo0N1rOF1L07A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxMjYyMA==", "bodyText": "upper bound should be 7.0.0-SNAPSHOT", "url": "https://github.com/cdapio/cdap/pull/11864#discussion_r391312620", "createdAt": "2020-03-11T22:45:47Z", "author": {"login": "elfenheart"}, "path": "cdap-ui/cypress/fixtures/pipeline_with_macros.json", "diffHunk": "@@ -0,0 +1,105 @@\n+{\n+  \"artifact\": {\n+    \"name\": \"cdap-data-pipeline\",\n+    \"version\": \"[6.1.0-SNAPSHOT, 6.2.0-SNAPSHOT]\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c429038a039d2c8ad77e229563868097810b11c"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b47984c47d58664d0a6764fb7f180bcc0c3f8b9a", "author": {"user": {"login": "itsanudeep", "name": "Anudeep Katragadda"}}, "url": "https://github.com/cdapio/cdap/commit/b47984c47d58664d0a6764fb7f180bcc0c3f8b9a", "committedDate": "2020-03-11T23:22:01Z", "message": "using keyvalue widget in runtime args"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "178d6ff6b2632f406645ace5aadb23eb54ed4ebe", "author": {"user": {"login": "itsanudeep", "name": "Anudeep Katragadda"}}, "url": "https://github.com/cdapio/cdap/commit/178d6ff6b2632f406645ace5aadb23eb54ed4ebe", "committedDate": "2020-03-11T23:20:24Z", "message": "changing pipeline version upperbound"}, "afterCommit": {"oid": "b47984c47d58664d0a6764fb7f180bcc0c3f8b9a", "author": {"user": {"login": "itsanudeep", "name": "Anudeep Katragadda"}}, "url": "https://github.com/cdapio/cdap/commit/b47984c47d58664d0a6764fb7f180bcc0c3f8b9a", "committedDate": "2020-03-11T23:22:01Z", "message": "using keyvalue widget in runtime args"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1257, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}