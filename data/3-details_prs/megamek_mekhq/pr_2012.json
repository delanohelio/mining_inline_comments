{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MTQ3NzI3", "number": 2012, "title": "1866: Implementing New Day MRMS Option", "bodyText": "This fixes #1866 by adding an option for MRMS to trigger on New Day.\nTo Review: Only the commit titled \"Implementing MRMS option on new day\" is not refactoring, but this required a major refactor to make this possible, namely converting MassRepairService to rely on Campaign instead of CampaignGUI.", "createdAt": "2020-09-16T17:50:55Z", "url": "https://github.com/MegaMek/mekhq/pull/2012", "merged": true, "mergeCommit": {"oid": "87d507a039719275547c035cc3ff6a4bb5aef27b"}, "closed": true, "closedAt": "2020-09-18T02:58:12Z", "author": {"login": "Windchild292"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdH81SmgH2gAyNDg4MTQ3NzI3OjAyNmU1ZTYzOWYwZWUxOTU3MWExZGVkYmNmZTAyNzgzYjA1OGI3ZjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJ8UutAFqTQ5MTExMTY1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "026e5e639f0ee19571a1dedbcfe02783b058b7f0", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/026e5e639f0ee19571a1dedbcfe02783b058b7f0", "committedDate": "2020-09-11T22:07:13Z", "message": "Code cleanup and light refactoring for MRMS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "425388660412778a0c785421a5f2b2e9232a756b", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/425388660412778a0c785421a5f2b2e9232a756b", "committedDate": "2020-09-16T17:20:19Z", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_1866"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10f8544933bf742ef3411a5dc8c645a6b206abb4", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/10f8544933bf742ef3411a5dc8c645a6b206abb4", "committedDate": "2020-09-16T17:23:03Z", "message": "Reworking MassRepairService to rely on Campaign instead of CampaignGUI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "528025af9fa782ff19c4ee02408c15e3b5756ced", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/528025af9fa782ff19c4ee02408c15e3b5756ced", "committedDate": "2020-09-16T17:28:28Z", "message": "Simplifying Unit::isAvailable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee97584bc8e78efb19c06cbfb3c40362633bbd4f", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/ee97584bc8e78efb19c06cbfb3c40362633bbd4f", "committedDate": "2020-09-16T17:29:43Z", "message": "Removing duplicated checks for whether a unit is valid or not"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e60a2714f5c9a11f11a57fd3ff27fdb8648c04cc", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/e60a2714f5c9a11f11a57fd3ff27fdb8648c04cc", "committedDate": "2020-09-16T17:45:53Z", "message": "Implementing MRMS option on new day"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "909fc06f1bed5d896b80b82b99c2a8c91123bb7b", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/909fc06f1bed5d896b80b82b99c2a8c91123bb7b", "committedDate": "2020-09-17T05:21:47Z", "message": "Fixing merge conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMTA2NjAy", "url": "https://github.com/MegaMek/mekhq/pull/2012#pullrequestreview-491106602", "createdAt": "2020-09-18T02:22:01Z", "commit": {"oid": "909fc06f1bed5d896b80b82b99c2a8c91123bb7b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMjoyMjowMVrOHT7ryQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMjoyMjowMVrOHT7ryQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY2Mjg1Nw==", "bodyText": "Isn't this going to throw an exception of getMassRepairOptions returns null?", "url": "https://github.com/MegaMek/mekhq/pull/2012#discussion_r490662857", "createdAt": "2020-09-18T02:22:01Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/gui/dialog/MassRepairSalvageDialog.java", "diffHunk": "@@ -634,628 +612,577 @@ public void actionPerformed(ActionEvent e) {\n                         \"All pod-mounted equipment will be replaced or salvaged regardless of other categories selected\",\n                         \"massRepairItemPod\", pnlItems, rowIdx++));\n \n-\t\treturn pnlOptions;\n-\t}\n-\n-\tprivate MassRepairOptionControl createMassRepairOptionControls(int type, String text, String tooltipText,\n-\t\t\tString activeBoxName, JPanel pnlItems, int rowIdx) {\n-\t\tMassRepairOption mro = null;\n-\n-\t\tList<MassRepairOption> mroList = campaignOptions.getMassRepairOptions();\n-\n-\t\tif (null != mroList) {\n-\t\t\tfor (int i = 0; i < mroList.size(); i++) {\n-\t\t\t\tif (mroList.get(i).getType() == type) {\n-\t\t\t\t\tmro = mroList.get(i);\n-\t\t\t\t\tbreak;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\n-\t\tif (null == mro) {\n-\t\t\tmro = new MassRepairOption(type);\n-\t\t}\n-\n-\t\tint columnIdx = 0;\n-\n-\t\tMassRepairOptionControl mroc = new MassRepairOptionControl();\n-\t\tmroc.activeBox = createMassRepairOptionItemBox(text, tooltipText, activeBoxName, mro.isActive(), pnlItems,\n-\t\t\t\trowIdx, columnIdx++);\n-\t\tmroc.minSkillCBox = createMassRepairSkillCBox(mro.getSkillMin(), mro.isActive(), pnlItems, rowIdx, columnIdx++);\n-\t\tmroc.maxSkillCBox = createMassRepairSkillCBox(mro.getSkillMax(), mro.isActive(), pnlItems, rowIdx, columnIdx++);\n-\t\tmroc.minBTHSpn = createMassRepairSkillBTHSpinner(mro.getBthMin(), mro.isActive(), pnlItems, rowIdx,\n-\t\t\t\tcolumnIdx++);\n-\t\tmroc.maxBTHSpn = createMassRepairSkillBTHSpinner(mro.getBthMax(), mro.isActive(), pnlItems, rowIdx,\n-\t\t\t\tcolumnIdx++);\n-\n-\t\tmroc.activeBox.addActionListener(new java.awt.event.ActionListener() {\n-\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) {\n-\t\t\t\tif (mroc.activeBox.isSelected()) {\n-\t\t\t\t\tmroc.minSkillCBox.setEnabled(true);\n-\t\t\t\t\tmroc.maxSkillCBox.setEnabled(true);\n-\t\t\t\t\tmroc.minBTHSpn.setEnabled(true);\n-\t\t\t\t\tmroc.maxBTHSpn.setEnabled(true);\n-\t\t\t\t} else {\n-\t\t\t\t\tmroc.minSkillCBox.setEnabled(false);\n-\t\t\t\t\tmroc.maxSkillCBox.setEnabled(false);\n-\t\t\t\t\tmroc.minBTHSpn.setEnabled(false);\n-\t\t\t\t\tmroc.maxBTHSpn.setEnabled(false);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t});\n-\n-\t\treturn mroc;\n-\t}\n-\n-\tprivate JSpinner createMassRepairSkillBTHSpinner(int selectedValue, boolean enabled, JPanel pnlItems, int rowIdx,\n-\t\t\tint columnIdx) {\n-\t\tJSpinner skillBTHSpn = new JSpinner(new SpinnerNumberModel(selectedValue, 1, 12, 1));\n-\t\t((JSpinner.DefaultEditor) skillBTHSpn.getEditor()).getTextField().setEditable(false);\n-\t\tskillBTHSpn.setEnabled(enabled);\n-\n-\t\tGridBagConstraints gridBagConstraints = new GridBagConstraints();\n-\t\tgridBagConstraints.gridx = columnIdx;\n-\t\tgridBagConstraints.gridy = rowIdx;\n-\t\tgridBagConstraints.insets = new Insets(0, 5, 0, 5);\n-\t\tgridBagConstraints.fill = java.awt.GridBagConstraints.NONE;\n-\t\tgridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n-\n-\t\tpnlItems.add(skillBTHSpn, gridBagConstraints);\n-\n-\t\treturn skillBTHSpn;\n-\t}\n-\n-\tprivate JComboBox<String> createMassRepairSkillCBox(int selectedValue, boolean enabled, JPanel pnlItems, int rowIdx,\n-\t\t\tint columnIdx) {\n-\t\tDefaultComboBoxModel<String> skillModel = new DefaultComboBoxModel<String>();\n-\t\tskillModel.addElement(SkillType.getExperienceLevelName(SkillType.EXP_ULTRA_GREEN));\n-\t\tskillModel.addElement(SkillType.getExperienceLevelName(SkillType.EXP_GREEN));\n-\t\tskillModel.addElement(SkillType.getExperienceLevelName(SkillType.EXP_REGULAR));\n-\t\tskillModel.addElement(SkillType.getExperienceLevelName(SkillType.EXP_VETERAN));\n-\t\tskillModel.addElement(SkillType.getExperienceLevelName(SkillType.EXP_ELITE));\n-\t\tskillModel.setSelectedItem(SkillType.getExperienceLevelName(selectedValue));\n-\t\tJComboBox<String> skillCBox = new JComboBox<String>(skillModel);\n-\t\tskillCBox.setEnabled(enabled);\n-\n-\t\tGridBagConstraints gridBagConstraints = new GridBagConstraints();\n-\t\tgridBagConstraints.gridx = columnIdx;\n-\t\tgridBagConstraints.gridy = rowIdx;\n-\t\tgridBagConstraints.insets = new Insets(0, 5, 0, 5);\n-\t\tgridBagConstraints.fill = java.awt.GridBagConstraints.NONE;\n-\n-\t\tpnlItems.add(skillCBox, gridBagConstraints);\n-\n-\t\treturn skillCBox;\n-\t}\n-\n-\tprivate JCheckBox createMassRepairOptionItemBox(String text, String toolTipText, String name, boolean selected,\n-\t\t\tJPanel pnlItems, int rowIdx, int columnIdx) {\n-\t\tJCheckBox optionItemBox = new JCheckBox();\n-\t\toptionItemBox.setText(text);\n-\t\toptionItemBox.setToolTipText(toolTipText);\n-\t\toptionItemBox.setName(name);\n-\t\toptionItemBox.setSelected(selected);\n-\t\tif (name.equals(\"massRepairItemPod\") && !isModeWarehouse()) {\n+        return pnlOptions;\n+    }\n+\n+    private MassRepairOptionControl createMassRepairOptionControls(int type, String text,String tooltipText,\n+                                                                   String activeBoxName, JPanel pnlItems,\n+                                                                   int rowIdx) {\n+        MassRepairOption mro = null;\n+\n+        for (MassRepairOption massRepairOption : campaignOptions.getMassRepairOptions()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "909fc06f1bed5d896b80b82b99c2a8c91123bb7b"}, "originalPosition": 1230}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a43e11cc252a5c0c94a63cdc1f877b34e9758581", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/a43e11cc252a5c0c94a63cdc1f877b34e9758581", "committedDate": "2020-09-18T02:35:19Z", "message": "Properly implementing null check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMTExNjUx", "url": "https://github.com/MegaMek/mekhq/pull/2012#pullrequestreview-491111651", "createdAt": "2020-09-18T02:39:30Z", "commit": {"oid": "a43e11cc252a5c0c94a63cdc1f877b34e9758581"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4197, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}