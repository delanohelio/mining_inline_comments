{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MjIzNjc3", "number": 1609, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMTowOTo1MVrODuLEGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMToxNDoxMVrODuLHDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzQyMzYwOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/MercRosterAccess.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMTowOTo1MVrOGABxmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMToxODoyNVrOGAB6SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4MjI2NA==", "bodyText": "I hate to ask, but is this going to impact this type of export? Not that I've ever even heard of a MercRoster database, but...", "url": "https://github.com/MegaMek/mekhq/pull/1609#discussion_r402682264", "createdAt": "2020-04-03T01:09:51Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/MercRosterAccess.java", "diffHunk": "@@ -473,10 +473,10 @@ private void writePersonnelData() {\n                 preparedStatement.setInt(6, forceId);\n                 preparedStatement.setInt(7, 1);\n                 //TODO: get joining date right\n-                preparedStatement.setDate(8, new java.sql.Date(p.getBirthday().getTimeInMillis()));\n+                preparedStatement.setDate(8, java.sql.Date.valueOf(p.getBirthday()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f8d8f2e5be002e107ae0c7958b6295b486af21"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NDA4NA==", "bodyText": "MercRoster that is a name I haven't heard in a long time. It was one of Taharqa projects.\nhttps://sourceforge.net/projects/mercroster/", "url": "https://github.com/MegaMek/mekhq/pull/1609#discussion_r402684084", "createdAt": "2020-04-03T01:16:54Z", "author": {"login": "HammerGS"}, "path": "MekHQ/src/mekhq/campaign/MercRosterAccess.java", "diffHunk": "@@ -473,10 +473,10 @@ private void writePersonnelData() {\n                 preparedStatement.setInt(6, forceId);\n                 preparedStatement.setInt(7, 1);\n                 //TODO: get joining date right\n-                preparedStatement.setDate(8, new java.sql.Date(p.getBirthday().getTimeInMillis()));\n+                preparedStatement.setDate(8, java.sql.Date.valueOf(p.getBirthday()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4MjI2NA=="}, "originalCommit": {"oid": "89f8d8f2e5be002e107ae0c7958b6295b486af21"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NDIwMA==", "bodyText": "This method was added for reverse compatibility, so it shouldn't?\nhttps://www.javatpoint.com/java-sql-date-valueof-method", "url": "https://github.com/MegaMek/mekhq/pull/1609#discussion_r402684200", "createdAt": "2020-04-03T01:17:22Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/MercRosterAccess.java", "diffHunk": "@@ -473,10 +473,10 @@ private void writePersonnelData() {\n                 preparedStatement.setInt(6, forceId);\n                 preparedStatement.setInt(7, 1);\n                 //TODO: get joining date right\n-                preparedStatement.setDate(8, new java.sql.Date(p.getBirthday().getTimeInMillis()));\n+                preparedStatement.setDate(8, java.sql.Date.valueOf(p.getBirthday()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4MjI2NA=="}, "originalCommit": {"oid": "89f8d8f2e5be002e107ae0c7958b6295b486af21"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NDQ4OA==", "bodyText": "As for MercRoster, see Hammer's reply... although I've seen it surprisingly often when looking at personnel (probably because of how tied in the two are)", "url": "https://github.com/MegaMek/mekhq/pull/1609#discussion_r402684488", "createdAt": "2020-04-03T01:18:25Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/MercRosterAccess.java", "diffHunk": "@@ -473,10 +473,10 @@ private void writePersonnelData() {\n                 preparedStatement.setInt(6, forceId);\n                 preparedStatement.setInt(7, 1);\n                 //TODO: get joining date right\n-                preparedStatement.setDate(8, new java.sql.Date(p.getBirthday().getTimeInMillis()));\n+                preparedStatement.setDate(8, java.sql.Date.valueOf(p.getBirthday()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4MjI2NA=="}, "originalCommit": {"oid": "89f8d8f2e5be002e107ae0c7958b6295b486af21"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzQzMTE5OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMToxNDoxMVrOGAB2Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMTozMjo0N1rOGACJEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4MzQwMw==", "bodyText": "Is there a way to just parse a date without specifying the exact format? Seems like a built-in library should be smart enough to contain that logic already.", "url": "https://github.com/MegaMek/mekhq/pull/1609#discussion_r402683403", "createdAt": "2020-04-03T01:14:11Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -2228,13 +2209,27 @@ public static Person generateInstanceFromXML(Node wn, Campaign c, Version versio\n                         retVal.formerSpouses.add(FormerSpouse.generateInstanceFromXML(wn3));\n                     }\n                 } else if (wn2.getNodeName().equalsIgnoreCase(\"dueDate\")) {\n-                    SimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\n-                    retVal.dueDate = (GregorianCalendar) GregorianCalendar.getInstance();\n-                    retVal.dueDate.setTime(df.parse(wn2.getTextContent().trim()));\n+                    if (version.isLowerThan(\"0.47.6\")) {\n+                        try {\n+                            retVal.dueDate = LocalDate.parse(wn2.getTextContent().trim(),\n+                                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd hh:mm:ss\"));\n+                        } catch (Exception ignored) {\n+                        }\n+                    } else {\n+                        retVal.dueDate = LocalDate.parse(wn2.getTextContent().trim(),\n+                                DateTimeFormatter.ofPattern(DATE_SAVE_FORMAT));\n+                    }\n                 } else if (wn2.getNodeName().equalsIgnoreCase(\"expectedDueDate\")) {\n-                    SimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\n-                    retVal.expectedDueDate = (GregorianCalendar) GregorianCalendar.getInstance();\n-                    retVal.expectedDueDate.setTime(df.parse(wn2.getTextContent().trim()));\n+                    if (version.isLowerThan(\"0.47.6\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f8d8f2e5be002e107ae0c7958b6295b486af21"}, "originalPosition": 335}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4Mzc4NQ==", "bodyText": "I didn't find one while researching, annoyingly.", "url": "https://github.com/MegaMek/mekhq/pull/1609#discussion_r402683785", "createdAt": "2020-04-03T01:15:43Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -2228,13 +2209,27 @@ public static Person generateInstanceFromXML(Node wn, Campaign c, Version versio\n                         retVal.formerSpouses.add(FormerSpouse.generateInstanceFromXML(wn3));\n                     }\n                 } else if (wn2.getNodeName().equalsIgnoreCase(\"dueDate\")) {\n-                    SimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\n-                    retVal.dueDate = (GregorianCalendar) GregorianCalendar.getInstance();\n-                    retVal.dueDate.setTime(df.parse(wn2.getTextContent().trim()));\n+                    if (version.isLowerThan(\"0.47.6\")) {\n+                        try {\n+                            retVal.dueDate = LocalDate.parse(wn2.getTextContent().trim(),\n+                                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd hh:mm:ss\"));\n+                        } catch (Exception ignored) {\n+                        }\n+                    } else {\n+                        retVal.dueDate = LocalDate.parse(wn2.getTextContent().trim(),\n+                                DateTimeFormatter.ofPattern(DATE_SAVE_FORMAT));\n+                    }\n                 } else if (wn2.getNodeName().equalsIgnoreCase(\"expectedDueDate\")) {\n-                    SimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\n-                    retVal.expectedDueDate = (GregorianCalendar) GregorianCalendar.getInstance();\n-                    retVal.expectedDueDate.setTime(df.parse(wn2.getTextContent().trim()));\n+                    if (version.isLowerThan(\"0.47.6\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4MzQwMw=="}, "originalCommit": {"oid": "89f8d8f2e5be002e107ae0c7958b6295b486af21"}, "originalPosition": 335}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NDExNA==", "bodyText": "You can but it fails on machines with different cultures from what wrote the date, can't pass around CPNX's.", "url": "https://github.com/MegaMek/mekhq/pull/1609#discussion_r402684114", "createdAt": "2020-04-03T01:17:01Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -2228,13 +2209,27 @@ public static Person generateInstanceFromXML(Node wn, Campaign c, Version versio\n                         retVal.formerSpouses.add(FormerSpouse.generateInstanceFromXML(wn3));\n                     }\n                 } else if (wn2.getNodeName().equalsIgnoreCase(\"dueDate\")) {\n-                    SimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\n-                    retVal.dueDate = (GregorianCalendar) GregorianCalendar.getInstance();\n-                    retVal.dueDate.setTime(df.parse(wn2.getTextContent().trim()));\n+                    if (version.isLowerThan(\"0.47.6\")) {\n+                        try {\n+                            retVal.dueDate = LocalDate.parse(wn2.getTextContent().trim(),\n+                                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd hh:mm:ss\"));\n+                        } catch (Exception ignored) {\n+                        }\n+                    } else {\n+                        retVal.dueDate = LocalDate.parse(wn2.getTextContent().trim(),\n+                                DateTimeFormatter.ofPattern(DATE_SAVE_FORMAT));\n+                    }\n                 } else if (wn2.getNodeName().equalsIgnoreCase(\"expectedDueDate\")) {\n-                    SimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\n-                    retVal.expectedDueDate = (GregorianCalendar) GregorianCalendar.getInstance();\n-                    retVal.expectedDueDate.setTime(df.parse(wn2.getTextContent().trim()));\n+                    if (version.isLowerThan(\"0.47.6\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4MzQwMw=="}, "originalCommit": {"oid": "89f8d8f2e5be002e107ae0c7958b6295b486af21"}, "originalPosition": 335}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4Nzc3MA==", "bodyText": "All right, in that case, let's consolidate this logic into a separate function.", "url": "https://github.com/MegaMek/mekhq/pull/1609#discussion_r402687770", "createdAt": "2020-04-03T01:30:50Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -2228,13 +2209,27 @@ public static Person generateInstanceFromXML(Node wn, Campaign c, Version versio\n                         retVal.formerSpouses.add(FormerSpouse.generateInstanceFromXML(wn3));\n                     }\n                 } else if (wn2.getNodeName().equalsIgnoreCase(\"dueDate\")) {\n-                    SimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\n-                    retVal.dueDate = (GregorianCalendar) GregorianCalendar.getInstance();\n-                    retVal.dueDate.setTime(df.parse(wn2.getTextContent().trim()));\n+                    if (version.isLowerThan(\"0.47.6\")) {\n+                        try {\n+                            retVal.dueDate = LocalDate.parse(wn2.getTextContent().trim(),\n+                                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd hh:mm:ss\"));\n+                        } catch (Exception ignored) {\n+                        }\n+                    } else {\n+                        retVal.dueDate = LocalDate.parse(wn2.getTextContent().trim(),\n+                                DateTimeFormatter.ofPattern(DATE_SAVE_FORMAT));\n+                    }\n                 } else if (wn2.getNodeName().equalsIgnoreCase(\"expectedDueDate\")) {\n-                    SimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\n-                    retVal.expectedDueDate = (GregorianCalendar) GregorianCalendar.getInstance();\n-                    retVal.expectedDueDate.setTime(df.parse(wn2.getTextContent().trim()));\n+                    if (version.isLowerThan(\"0.47.6\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4MzQwMw=="}, "originalCommit": {"oid": "89f8d8f2e5be002e107ae0c7958b6295b486af21"}, "originalPosition": 335}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4ODI3NA==", "bodyText": "I plan on doing so for all of the personnel migration cases, but that will be in a different PR.", "url": "https://github.com/MegaMek/mekhq/pull/1609#discussion_r402688274", "createdAt": "2020-04-03T01:32:47Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -2228,13 +2209,27 @@ public static Person generateInstanceFromXML(Node wn, Campaign c, Version versio\n                         retVal.formerSpouses.add(FormerSpouse.generateInstanceFromXML(wn3));\n                     }\n                 } else if (wn2.getNodeName().equalsIgnoreCase(\"dueDate\")) {\n-                    SimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\n-                    retVal.dueDate = (GregorianCalendar) GregorianCalendar.getInstance();\n-                    retVal.dueDate.setTime(df.parse(wn2.getTextContent().trim()));\n+                    if (version.isLowerThan(\"0.47.6\")) {\n+                        try {\n+                            retVal.dueDate = LocalDate.parse(wn2.getTextContent().trim(),\n+                                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd hh:mm:ss\"));\n+                        } catch (Exception ignored) {\n+                        }\n+                    } else {\n+                        retVal.dueDate = LocalDate.parse(wn2.getTextContent().trim(),\n+                                DateTimeFormatter.ofPattern(DATE_SAVE_FORMAT));\n+                    }\n                 } else if (wn2.getNodeName().equalsIgnoreCase(\"expectedDueDate\")) {\n-                    SimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\n-                    retVal.expectedDueDate = (GregorianCalendar) GregorianCalendar.getInstance();\n-                    retVal.expectedDueDate.setTime(df.parse(wn2.getTextContent().trim()));\n+                    if (version.isLowerThan(\"0.47.6\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4MzQwMw=="}, "originalCommit": {"oid": "89f8d8f2e5be002e107ae0c7958b6295b486af21"}, "originalPosition": 335}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2391, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}