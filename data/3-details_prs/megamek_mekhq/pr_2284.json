{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MDQwMzgx", "number": 2284, "title": "MHQ Colours: Adding Customizability as part of MHQ Options", "bodyText": "This PR moves MHQ Colours to instead be part of the MHQ Options, and lets one customize the options. This requires MegaMek/megamek#2508.", "createdAt": "2020-12-13T23:16:45Z", "url": "https://github.com/MegaMek/mekhq/pull/2284", "merged": true, "mergeCommit": {"oid": "4d658cb71867fdef1d04ea6dc373ff08d09e10c7"}, "closed": true, "closedAt": "2021-05-31T21:57:30Z", "author": {"login": "Windchild292"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZFQxNgH2gAyNTM5MDQwMzgxOjEyZGRlYmExOTU2MWFjZTE5YzkxZDg4M2MxNmE4MzRjMDI1ODgxYjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABecRtLYAFqTY3MjU0OTYwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "12ddeba19561ace19c91d883c16a834c025881b6", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/12ddeba19561ace19c91d883c16a834c025881b6", "committedDate": "2020-11-04T03:33:11Z", "message": "Moving MHQColours to MHQOptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7e6ea12590f8ef716a5e7f2af5aa4f6a0075f4c", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/e7e6ea12590f8ef716a5e7f2af5aa4f6a0075f4c", "committedDate": "2020-11-04T03:39:11Z", "message": "Moving the MekHQColours methods to MekHQOptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d4d67411c43d4c6ffd30103beb0aad98d61579a", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/3d4d67411c43d4c6ffd30103beb0aad98d61579a", "committedDate": "2020-11-15T01:50:11Z", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_MHQColours"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b294cfa137495efc7934cef628f108449afbe693", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/b294cfa137495efc7934cef628f108449afbe693", "committedDate": "2020-11-15T01:58:15Z", "message": "Applying changes per review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44519600bb2e39f3324a4f9693d1e1205b70fccb", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/44519600bb2e39f3324a4f9693d1e1205b70fccb", "committedDate": "2020-11-28T21:23:18Z", "message": "Moving colours to mekhq options"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d898f766312040d1a9cf21c46b918e2ec3b07996", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/d898f766312040d1a9cf21c46b918e2ec3b07996", "committedDate": "2020-12-13T18:19:24Z", "message": "Fixing merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d0de95b35ac1226e10bca49f8201c92ffacd037", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/7d0de95b35ac1226e10bca49f8201c92ffacd037", "committedDate": "2020-12-13T19:26:34Z", "message": "Moving to display node constants with proper getters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b842e47699f24c14de0e27f9a991eb9ae8ef276d", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/b842e47699f24c14de0e27f9a991eb9ae8ef276d", "committedDate": "2020-12-13T19:29:36Z", "message": "Removing the unused Icon Button colours"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94016486a4a2226b447be2910ba07be0fb158992", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/94016486a4a2226b447be2910ba07be0fb158992", "committedDate": "2020-12-13T19:29:44Z", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_MHQColours"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ffce1d1ba1ca014ce65c5d30cc50e4b9eba27bb", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/7ffce1d1ba1ca014ce65c5d30cc50e4b9eba27bb", "committedDate": "2020-12-13T23:04:26Z", "message": "Implementing customizable MekHQ colours"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c43f42d3c6292650c4078916e514232bb5688cc3", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/c43f42d3c6292650c4078916e514232bb5688cc3", "committedDate": "2020-12-14T22:38:22Z", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_MHQColours"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA4MjY4NDkw", "url": "https://github.com/MegaMek/mekhq/pull/2284#pullrequestreview-608268490", "createdAt": "2021-03-10T02:00:07Z", "commit": {"oid": "c43f42d3c6292650c4078916e514232bb5688cc3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMFQwMjowMDowN1rOIzjGDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMFQwMjowNDozMlrOIzjRRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDkyMzI3OA==", "bodyText": "Random commented out code", "url": "https://github.com/MegaMek/mekhq/pull/2284#discussion_r590923278", "createdAt": "2021-03-10T02:00:07Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/MekHQOptions.java", "diffHunk": "@@ -100,6 +105,255 @@ public void setPersonnelFilterOnPrimaryRole(boolean value) {\n         userPreferences.node(MekHqConstants.DISPLAY_NODE).putBoolean(MekHqConstants.PERSONNEL_FILTER_ON_PRIMARY_ROLE, value);\n     }\n     //endregion Personnel Tab Display Options\n+    //endregion Expanded MekHQ Display Options\n+\n+    //region Colours\n+    public Color getDeployedForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.DEPLOYED_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setDeployedForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.DEPLOYED_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getDeployedBackground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.DEPLOYED_BACKGROUND, Color.LIGHT_GRAY.getRGB()));\n+    }\n+\n+    public void setDeployedBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.DEPLOYED_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getBelowContractMinimumForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.BELOW_CONTRACT_MINIMUM_FOREGROUND, Color.RED.getRGB()));\n+    }\n+\n+    public void setBelowContractMinimumForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.BELOW_CONTRACT_MINIMUM_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getBelowContractMinimumBackground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.BELOW_CONTRACT_MINIMUM_BACKGROUND, UIManager.getColor(\"Table.background\").getRGB()));\n+    }\n+\n+    public void setBelowContractMinimumBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.BELOW_CONTRACT_MINIMUM_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getInTransitForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.IN_TRANSIT_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setInTransitForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.IN_TRANSIT_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getInTransitBackground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.IN_TRANSIT_BACKGROUND, Color.MAGENTA.getRGB()));\n+    }\n+\n+    public void setInTransitBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.IN_TRANSIT_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getRefittingForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.REFITTING_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setRefittingForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.REFITTING_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getRefittingBackground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.REFITTING_BACKGROUND, Color.CYAN.getRGB()));\n+    }\n+\n+    public void setRefittingBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.REFITTING_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getMothballingForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.MOTHBALLING_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setMothballingForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.MOTHBALLING_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getMothballingBackground() {\n+        // new Color(153, 153, 255)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43f42d3c6292650c4078916e514232bb5688cc3"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDkyMzQ2Nw==", "bodyText": "Random commented out code", "url": "https://github.com/MegaMek/mekhq/pull/2284#discussion_r590923467", "createdAt": "2021-03-10T02:00:27Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/MekHQOptions.java", "diffHunk": "@@ -100,6 +105,255 @@ public void setPersonnelFilterOnPrimaryRole(boolean value) {\n         userPreferences.node(MekHqConstants.DISPLAY_NODE).putBoolean(MekHqConstants.PERSONNEL_FILTER_ON_PRIMARY_ROLE, value);\n     }\n     //endregion Personnel Tab Display Options\n+    //endregion Expanded MekHQ Display Options\n+\n+    //region Colours\n+    public Color getDeployedForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.DEPLOYED_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setDeployedForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.DEPLOYED_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getDeployedBackground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.DEPLOYED_BACKGROUND, Color.LIGHT_GRAY.getRGB()));\n+    }\n+\n+    public void setDeployedBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.DEPLOYED_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getBelowContractMinimumForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.BELOW_CONTRACT_MINIMUM_FOREGROUND, Color.RED.getRGB()));\n+    }\n+\n+    public void setBelowContractMinimumForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.BELOW_CONTRACT_MINIMUM_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getBelowContractMinimumBackground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.BELOW_CONTRACT_MINIMUM_BACKGROUND, UIManager.getColor(\"Table.background\").getRGB()));\n+    }\n+\n+    public void setBelowContractMinimumBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.BELOW_CONTRACT_MINIMUM_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getInTransitForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.IN_TRANSIT_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setInTransitForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.IN_TRANSIT_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getInTransitBackground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.IN_TRANSIT_BACKGROUND, Color.MAGENTA.getRGB()));\n+    }\n+\n+    public void setInTransitBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.IN_TRANSIT_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getRefittingForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.REFITTING_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setRefittingForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.REFITTING_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getRefittingBackground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.REFITTING_BACKGROUND, Color.CYAN.getRGB()));\n+    }\n+\n+    public void setRefittingBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.REFITTING_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getMothballingForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.MOTHBALLING_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setMothballingForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.MOTHBALLING_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getMothballingBackground() {\n+        // new Color(153, 153, 255)\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.MOTHBALLING_BACKGROUND, 0xFF9999FF));\n+    }\n+\n+    public void setMothballingBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.MOTHBALLING_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getMothballedForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.MOTHBALLED_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setMothballedForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.MOTHBALLED_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getMothballedBackground() {\n+        // new Color(204, 204, 255)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43f42d3c6292650c4078916e514232bb5688cc3"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDkyMzYxMw==", "bodyText": "cleanup", "url": "https://github.com/MegaMek/mekhq/pull/2284#discussion_r590923613", "createdAt": "2021-03-10T02:00:37Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/MekHQOptions.java", "diffHunk": "@@ -100,6 +105,255 @@ public void setPersonnelFilterOnPrimaryRole(boolean value) {\n         userPreferences.node(MekHqConstants.DISPLAY_NODE).putBoolean(MekHqConstants.PERSONNEL_FILTER_ON_PRIMARY_ROLE, value);\n     }\n     //endregion Personnel Tab Display Options\n+    //endregion Expanded MekHQ Display Options\n+\n+    //region Colours\n+    public Color getDeployedForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.DEPLOYED_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setDeployedForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.DEPLOYED_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getDeployedBackground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.DEPLOYED_BACKGROUND, Color.LIGHT_GRAY.getRGB()));\n+    }\n+\n+    public void setDeployedBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.DEPLOYED_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getBelowContractMinimumForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.BELOW_CONTRACT_MINIMUM_FOREGROUND, Color.RED.getRGB()));\n+    }\n+\n+    public void setBelowContractMinimumForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.BELOW_CONTRACT_MINIMUM_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getBelowContractMinimumBackground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.BELOW_CONTRACT_MINIMUM_BACKGROUND, UIManager.getColor(\"Table.background\").getRGB()));\n+    }\n+\n+    public void setBelowContractMinimumBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.BELOW_CONTRACT_MINIMUM_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getInTransitForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.IN_TRANSIT_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setInTransitForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.IN_TRANSIT_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getInTransitBackground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.IN_TRANSIT_BACKGROUND, Color.MAGENTA.getRGB()));\n+    }\n+\n+    public void setInTransitBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.IN_TRANSIT_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getRefittingForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.REFITTING_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setRefittingForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.REFITTING_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getRefittingBackground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.REFITTING_BACKGROUND, Color.CYAN.getRGB()));\n+    }\n+\n+    public void setRefittingBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.REFITTING_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getMothballingForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.MOTHBALLING_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setMothballingForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.MOTHBALLING_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getMothballingBackground() {\n+        // new Color(153, 153, 255)\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.MOTHBALLING_BACKGROUND, 0xFF9999FF));\n+    }\n+\n+    public void setMothballingBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.MOTHBALLING_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getMothballedForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.MOTHBALLED_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setMothballedForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.MOTHBALLED_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getMothballedBackground() {\n+        // new Color(204, 204, 255)\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.MOTHBALLED_BACKGROUND, 0xFFCCCCFF));\n+    }\n+\n+    public void setMothballedBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.MOTHBALLED_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getNotRepairableForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.NOT_REPAIRABLE_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setNotRepairableForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.NOT_REPAIRABLE_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getNotRepairableBackground() {\n+        // new Color(190, 150, 55)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43f42d3c6292650c4078916e514232bb5688cc3"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDkyMzgwNw==", "bodyText": "cleanup", "url": "https://github.com/MegaMek/mekhq/pull/2284#discussion_r590923807", "createdAt": "2021-03-10T02:00:52Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/MekHQOptions.java", "diffHunk": "@@ -100,6 +105,255 @@ public void setPersonnelFilterOnPrimaryRole(boolean value) {\n         userPreferences.node(MekHqConstants.DISPLAY_NODE).putBoolean(MekHqConstants.PERSONNEL_FILTER_ON_PRIMARY_ROLE, value);\n     }\n     //endregion Personnel Tab Display Options\n+    //endregion Expanded MekHQ Display Options\n+\n+    //region Colours\n+    public Color getDeployedForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.DEPLOYED_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setDeployedForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.DEPLOYED_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getDeployedBackground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.DEPLOYED_BACKGROUND, Color.LIGHT_GRAY.getRGB()));\n+    }\n+\n+    public void setDeployedBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.DEPLOYED_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getBelowContractMinimumForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.BELOW_CONTRACT_MINIMUM_FOREGROUND, Color.RED.getRGB()));\n+    }\n+\n+    public void setBelowContractMinimumForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.BELOW_CONTRACT_MINIMUM_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getBelowContractMinimumBackground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.BELOW_CONTRACT_MINIMUM_BACKGROUND, UIManager.getColor(\"Table.background\").getRGB()));\n+    }\n+\n+    public void setBelowContractMinimumBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.BELOW_CONTRACT_MINIMUM_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getInTransitForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.IN_TRANSIT_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setInTransitForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.IN_TRANSIT_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getInTransitBackground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.IN_TRANSIT_BACKGROUND, Color.MAGENTA.getRGB()));\n+    }\n+\n+    public void setInTransitBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.IN_TRANSIT_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getRefittingForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.REFITTING_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setRefittingForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.REFITTING_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getRefittingBackground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.REFITTING_BACKGROUND, Color.CYAN.getRGB()));\n+    }\n+\n+    public void setRefittingBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.REFITTING_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getMothballingForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.MOTHBALLING_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setMothballingForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.MOTHBALLING_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getMothballingBackground() {\n+        // new Color(153, 153, 255)\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.MOTHBALLING_BACKGROUND, 0xFF9999FF));\n+    }\n+\n+    public void setMothballingBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.MOTHBALLING_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getMothballedForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.MOTHBALLED_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setMothballedForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.MOTHBALLED_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getMothballedBackground() {\n+        // new Color(204, 204, 255)\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.MOTHBALLED_BACKGROUND, 0xFFCCCCFF));\n+    }\n+\n+    public void setMothballedBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.MOTHBALLED_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getNotRepairableForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.NOT_REPAIRABLE_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setNotRepairableForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.NOT_REPAIRABLE_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getNotRepairableBackground() {\n+        // new Color(190, 150, 55)\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.NOT_REPAIRABLE_BACKGROUND, 0xFFBE9637));\n+    }\n+\n+    public void setNotRepairableBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.NOT_REPAIRABLE_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getNonFunctionalForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.NON_FUNCTIONAL_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setNonFunctionalForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.NON_FUNCTIONAL_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getNonFunctionalBackground() {\n+        // new Color(205, 92, 92)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43f42d3c6292650c4078916e514232bb5688cc3"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDkyNDA2NQ==", "bodyText": "cleanup", "url": "https://github.com/MegaMek/mekhq/pull/2284#discussion_r590924065", "createdAt": "2021-03-10T02:01:18Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/MekHQOptions.java", "diffHunk": "@@ -100,6 +105,255 @@ public void setPersonnelFilterOnPrimaryRole(boolean value) {\n         userPreferences.node(MekHqConstants.DISPLAY_NODE).putBoolean(MekHqConstants.PERSONNEL_FILTER_ON_PRIMARY_ROLE, value);\n     }\n     //endregion Personnel Tab Display Options\n+    //endregion Expanded MekHQ Display Options\n+\n+    //region Colours\n+    public Color getDeployedForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.DEPLOYED_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setDeployedForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.DEPLOYED_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getDeployedBackground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.DEPLOYED_BACKGROUND, Color.LIGHT_GRAY.getRGB()));\n+    }\n+\n+    public void setDeployedBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.DEPLOYED_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getBelowContractMinimumForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.BELOW_CONTRACT_MINIMUM_FOREGROUND, Color.RED.getRGB()));\n+    }\n+\n+    public void setBelowContractMinimumForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.BELOW_CONTRACT_MINIMUM_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getBelowContractMinimumBackground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.BELOW_CONTRACT_MINIMUM_BACKGROUND, UIManager.getColor(\"Table.background\").getRGB()));\n+    }\n+\n+    public void setBelowContractMinimumBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.BELOW_CONTRACT_MINIMUM_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getInTransitForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.IN_TRANSIT_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setInTransitForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.IN_TRANSIT_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getInTransitBackground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.IN_TRANSIT_BACKGROUND, Color.MAGENTA.getRGB()));\n+    }\n+\n+    public void setInTransitBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.IN_TRANSIT_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getRefittingForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.REFITTING_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setRefittingForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.REFITTING_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getRefittingBackground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.REFITTING_BACKGROUND, Color.CYAN.getRGB()));\n+    }\n+\n+    public void setRefittingBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.REFITTING_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getMothballingForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.MOTHBALLING_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setMothballingForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.MOTHBALLING_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getMothballingBackground() {\n+        // new Color(153, 153, 255)\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.MOTHBALLING_BACKGROUND, 0xFF9999FF));\n+    }\n+\n+    public void setMothballingBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.MOTHBALLING_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getMothballedForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.MOTHBALLED_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setMothballedForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.MOTHBALLED_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getMothballedBackground() {\n+        // new Color(204, 204, 255)\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.MOTHBALLED_BACKGROUND, 0xFFCCCCFF));\n+    }\n+\n+    public void setMothballedBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.MOTHBALLED_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getNotRepairableForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.NOT_REPAIRABLE_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setNotRepairableForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.NOT_REPAIRABLE_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getNotRepairableBackground() {\n+        // new Color(190, 150, 55)\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.NOT_REPAIRABLE_BACKGROUND, 0xFFBE9637));\n+    }\n+\n+    public void setNotRepairableBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.NOT_REPAIRABLE_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getNonFunctionalForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.NON_FUNCTIONAL_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setNonFunctionalForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.NON_FUNCTIONAL_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getNonFunctionalBackground() {\n+        // new Color(205, 92, 92)\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.NON_FUNCTIONAL_BACKGROUND, 0xFFCD5C5C));\n+    }\n+\n+    public void setNonFunctionalBackground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.NON_FUNCTIONAL_BACKGROUND, value.getRGB());\n+    }\n+\n+    public Color getNeedsPartsFixedForeground() {\n+        return new Color(userPreferences.node(MekHqConstants.DISPLAY_NODE).getInt(MekHqConstants.NEEDS_PARTS_FIXED_FOREGROUND, Color.BLACK.getRGB()));\n+    }\n+\n+    public void setNeedsPartsFixedForeground(Color value) {\n+        userPreferences.node(MekHqConstants.DISPLAY_NODE).putInt(MekHqConstants.NEEDS_PARTS_FIXED_FOREGROUND, value.getRGB());\n+    }\n+\n+    public Color getNeedsPartsFixedBackground() {\n+        // new Color(238, 238, 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43f42d3c6292650c4078916e514232bb5688cc3"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDkyNjE0OQ==", "bodyText": "This seems like it could be done with a lot less code using a \"getColor(enum areaBeingColored, boolean Foreground/Background)\" call to reduce it from fifty thousand methods to two, and have the underlying mechanism be a hashMap.", "url": "https://github.com/MegaMek/mekhq/pull/2284#discussion_r590926149", "createdAt": "2021-03-10T02:04:32Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/MekHQOptions.java", "diffHunk": "@@ -100,6 +105,255 @@ public void setPersonnelFilterOnPrimaryRole(boolean value) {\n         userPreferences.node(MekHqConstants.DISPLAY_NODE).putBoolean(MekHqConstants.PERSONNEL_FILTER_ON_PRIMARY_ROLE, value);\n     }\n     //endregion Personnel Tab Display Options\n+    //endregion Expanded MekHQ Display Options\n+\n+    //region Colours\n+    public Color getDeployedForeground() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43f42d3c6292650c4078916e514232bb5688cc3"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "872718a60b1588e9d64ed86f759f380cd5fa5f88", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/872718a60b1588e9d64ed86f759f380cd5fa5f88", "committedDate": "2021-04-06T22:41:12Z", "message": "Fixing merge conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcyNTQ5NjA4", "url": "https://github.com/MegaMek/mekhq/pull/2284#pullrequestreview-672549608", "createdAt": "2021-05-31T21:56:00Z", "commit": {"oid": "872718a60b1588e9d64ed86f759f380cd5fa5f88"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3950, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}