{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4OTE5MjM4", "number": 2018, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMTo1NToyOVrOEkvVxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzozMjo0N1rOEkzSvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2OTU5ODE1OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMTo1NToyOVrOHT24ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMTo1NToyOVrOHT24ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU4NDIyMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for(Part nHsPart : newIntegratedHS) {\n          \n          \n            \n                    for (Part nHsPart : newIntegratedHS) {", "url": "https://github.com/MegaMek/mekhq/pull/2018#discussion_r490584222", "createdAt": "2020-09-17T21:55:29Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -907,15 +906,40 @@ public void calculate() {\n             if (oldHS != newHS) {\n                 Part hsPart = heatSinkPart(newEntity); // only single HS allowed, so they have to be of the same type\n                 for (int i = oldHS; i < newHS; i++) {\n-                    newIntegratedHS.add(hsPart.clone());\n+                    // Heat sink added for supply chain tracking purposes and removed from refit later\n+                    newIntegratedHS.add(hsPart.clone().getMissingPart());\n                 }\n                 for (int i = newHS; i < oldHS; i++) {\n                     oldIntegratedHS.add(hsPart.clone());\n                 }\n             }\n         }\n         time += (oldIntegratedHS.size() + newIntegratedHS.size()) * 90;\n-        shoppingList.addAll(newIntegratedHS);\n+        for(Part nHsPart : newIntegratedHS) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45f407c020714ed45a4a98d068aa42ea6350b5e3"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2OTYwMjQ5OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMTo1NzowNVrOHT27OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMTo1NzowNVrOHT27OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU4NDg4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if((null != replacement) && (null == partQuantity.get(replacement.getId()))) {\n          \n          \n            \n                        if ((null != replacement) && (null == partQuantity.get(replacement.getId()))) {", "url": "https://github.com/MegaMek/mekhq/pull/2018#discussion_r490584889", "createdAt": "2020-09-17T21:57:05Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -907,15 +906,40 @@ public void calculate() {\n             if (oldHS != newHS) {\n                 Part hsPart = heatSinkPart(newEntity); // only single HS allowed, so they have to be of the same type\n                 for (int i = oldHS; i < newHS; i++) {\n-                    newIntegratedHS.add(hsPart.clone());\n+                    // Heat sink added for supply chain tracking purposes and removed from refit later\n+                    newIntegratedHS.add(hsPart.clone().getMissingPart());\n                 }\n                 for (int i = newHS; i < oldHS; i++) {\n                     oldIntegratedHS.add(hsPart.clone());\n                 }\n             }\n         }\n         time += (oldIntegratedHS.size() + newIntegratedHS.size()) * 90;\n-        shoppingList.addAll(newIntegratedHS);\n+        for(Part nHsPart : newIntegratedHS) {\n+            // Check warehouse for spare heat sinks before adding to shopping list\n+            Part replacement = ((MissingPart)nHsPart).findReplacement(true);\n+            //check quantity\n+            if((null != replacement) && (null == partQuantity.get(replacement.getId()))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45f407c020714ed45a4a98d068aa42ea6350b5e3"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2OTYwMjg3OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMTo1NzoxMVrOHT27ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMTo1NzoxMVrOHT27ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU4NDkzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Part replacement = ((MissingPart)nHsPart).findReplacement(true);\n          \n          \n            \n                        Part replacement = ((MissingPart) nHsPart).findReplacement(true);", "url": "https://github.com/MegaMek/mekhq/pull/2018#discussion_r490584938", "createdAt": "2020-09-17T21:57:11Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -907,15 +906,40 @@ public void calculate() {\n             if (oldHS != newHS) {\n                 Part hsPart = heatSinkPart(newEntity); // only single HS allowed, so they have to be of the same type\n                 for (int i = oldHS; i < newHS; i++) {\n-                    newIntegratedHS.add(hsPart.clone());\n+                    // Heat sink added for supply chain tracking purposes and removed from refit later\n+                    newIntegratedHS.add(hsPart.clone().getMissingPart());\n                 }\n                 for (int i = newHS; i < oldHS; i++) {\n                     oldIntegratedHS.add(hsPart.clone());\n                 }\n             }\n         }\n         time += (oldIntegratedHS.size() + newIntegratedHS.size()) * 90;\n-        shoppingList.addAll(newIntegratedHS);\n+        for(Part nHsPart : newIntegratedHS) {\n+            // Check warehouse for spare heat sinks before adding to shopping list\n+            Part replacement = ((MissingPart)nHsPart).findReplacement(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45f407c020714ed45a4a98d068aa42ea6350b5e3"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2OTYwMzMwOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMTo1NzoxOVrOHT27rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMTo1NzoxOVrOHT27rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU4NTAwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if((null != replacement) && (partQuantity.get(replacement.getId())) > 0) {\n          \n          \n            \n                        if ((null != replacement) && (partQuantity.get(replacement.getId())) > 0) {", "url": "https://github.com/MegaMek/mekhq/pull/2018#discussion_r490585005", "createdAt": "2020-09-17T21:57:19Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -907,15 +906,40 @@ public void calculate() {\n             if (oldHS != newHS) {\n                 Part hsPart = heatSinkPart(newEntity); // only single HS allowed, so they have to be of the same type\n                 for (int i = oldHS; i < newHS; i++) {\n-                    newIntegratedHS.add(hsPart.clone());\n+                    // Heat sink added for supply chain tracking purposes and removed from refit later\n+                    newIntegratedHS.add(hsPart.clone().getMissingPart());\n                 }\n                 for (int i = newHS; i < oldHS; i++) {\n                     oldIntegratedHS.add(hsPart.clone());\n                 }\n             }\n         }\n         time += (oldIntegratedHS.size() + newIntegratedHS.size()) * 90;\n-        shoppingList.addAll(newIntegratedHS);\n+        for(Part nHsPart : newIntegratedHS) {\n+            // Check warehouse for spare heat sinks before adding to shopping list\n+            Part replacement = ((MissingPart)nHsPart).findReplacement(true);\n+            //check quantity\n+            if((null != replacement) && (null == partQuantity.get(replacement.getId()))) {\n+                partQuantity.put(replacement.getId(), replacement.getQuantity());\n+            }\n+            if((null != replacement) && (partQuantity.get(replacement.getId())) > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45f407c020714ed45a4a98d068aa42ea6350b5e3"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2OTYwMzczOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMTo1NzoyOFrOHT277g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMTo1NzoyOFrOHT277g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU4NTA3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            partQuantity.put(replacement.getId(), partQuantity.get(replacement.getId())-1);\n          \n          \n            \n                            partQuantity.put(replacement.getId(), partQuantity.get(replacement.getId()) - 1);", "url": "https://github.com/MegaMek/mekhq/pull/2018#discussion_r490585070", "createdAt": "2020-09-17T21:57:28Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -907,15 +906,40 @@ public void calculate() {\n             if (oldHS != newHS) {\n                 Part hsPart = heatSinkPart(newEntity); // only single HS allowed, so they have to be of the same type\n                 for (int i = oldHS; i < newHS; i++) {\n-                    newIntegratedHS.add(hsPart.clone());\n+                    // Heat sink added for supply chain tracking purposes and removed from refit later\n+                    newIntegratedHS.add(hsPart.clone().getMissingPart());\n                 }\n                 for (int i = newHS; i < oldHS; i++) {\n                     oldIntegratedHS.add(hsPart.clone());\n                 }\n             }\n         }\n         time += (oldIntegratedHS.size() + newIntegratedHS.size()) * 90;\n-        shoppingList.addAll(newIntegratedHS);\n+        for(Part nHsPart : newIntegratedHS) {\n+            // Check warehouse for spare heat sinks before adding to shopping list\n+            Part replacement = ((MissingPart)nHsPart).findReplacement(true);\n+            //check quantity\n+            if((null != replacement) && (null == partQuantity.get(replacement.getId()))) {\n+                partQuantity.put(replacement.getId(), replacement.getQuantity());\n+            }\n+            if((null != replacement) && (partQuantity.get(replacement.getId())) > 0) {\n+                newUnitParts.add(replacement.getId());\n+                //adjust quantity\n+                partQuantity.put(replacement.getId(), partQuantity.get(replacement.getId())-1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45f407c020714ed45a4a98d068aa42ea6350b5e3"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDI0NTc0OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzozMjo0N1rOHT8v2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzozMjo0N1rOHT8v2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY4MDI4Mw==", "bodyText": "Can't this just be newHS.getMissingPart() ?", "url": "https://github.com/MegaMek/mekhq/pull/2018#discussion_r490680283", "createdAt": "2020-09-18T03:32:47Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -881,14 +878,16 @@ public void calculate() {\n                     oldIntegratedHS.add(oldHS.clone());\n                 }\n                 for (int i = 0; i < newCount - oldCount; i++) {\n-                    newIntegratedHS.add(oldHS.clone());\n+                    // Heat sink added for supply chain tracking purposes and removed from refit later\n+                    newIntegratedHS.add(newHS.clone().getMissingPart());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03309dbf8f46910e840d753d89824ac1f5187667"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2247, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}