{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxNzI4OTI1", "number": 1533, "title": "Windchild's Personnel Improvements", "bodyText": "This is my suite of personnel changes. The major improvements are Random Marriages, Given Names and Surnames, expanded Family Display, Former Spouse Tracking, and a ton of new options with which you can customize the family-side of MekHQ, in addition to a suite of smaller changes and improvements.\nMekHQ PRs #1438, #1462, #1463, #1468, #1469, #1499, #1517, #1518, #1519, #1520, #1521, and #1523 were originally part of this PR and have been split off to reduce the number of changes or to include changes in 0.47.4.\nSimilarly, MegaMek PRs MegaMek/megamek#1649, MegaMek/megamek#1681, MegaMek/megamek#1712, MegaMek/megamek#1716, and MegaMek/megamek#1717 have been split off from the MegaMek-side PR.\nHowever, it is still a pretty large suite of changes, and because of the splits a few files have ended up being pretty much just whitespace changes.\nThe changes I considered important enough to track are listed below:\n\nPart 1: Display Grandparents, Aunts/Uncles, and cousins in the personnel view\nPart 2: Option for both members of the marriage to use the same surname\nPart 3: Enable the ability to increase odds of random procreation\nPart 4: Former Spouse tracking\nPart 5: Option for baby to use either the mothers or fathers surname\nPart 6: #876: Marriage for either male or female\nPart 7: #1404: Given Name(s) Surname(s) split\nPart 8: Add honorific support\nPart 9: Add conceived tracking to fathers\nPart 10: Expected Due Date versus True Due Date for pregnant personnel\nPart 11: Add given name, surname and honorific to personnel tables\nPart 12: Add Bloodname logic for Clanner factions to display Bloodnames instead of surnames in the personnel tables\nPart 13: Setting to decide if you want to keep the same name when removing a widowed spouse or revert to maiden name\nPart 14: Option to remove spouse and keep married name for both or either member of the marriage\nPart 15: Removed forced prisoner marriage to members of the merc company\nPart 16: Add gender tracking to MegaMek Crew\nPart 17: Add extraData fields to MegaMek Crew\nPart 18: #1482: Hire Full Complement does not record recruitment for tracking time in service\nPart 19: Standardize personnel hiring in MekHQ\nPart 20: #765: Random marriages\nPart 21: #1486: Export Personnel to CSV does not work 0.47.4\nPart 22: #1486: Export Unit to CSV does not work 0.47.4\nPart 23: Localized PersonnelTableModel\nPart 24: Localized CampaignGUI menu bar\nPart 25: #1492: Medical Report will not display for personnel with active injury 0.47.4\nPart 26: Add randomize dependent origin\nPart 27: WeightedMap Name Generation\nPart 28: Fixing issues with female names in the source file\nPart 29: Fixing random name and bloodname randomization for personnel who do not originate from the same faction as the campaign.\nPart 30: Fixing clanner name generation in MekHQ\nPart 31: Clean up Person XML Export\n\nThis fixes #765 and fixes #1404.\nTo review this PR:\nI would review the files changed, not by commit. This is because of the number of commits (roughly a hundred) and because I've split off numerous parts to be reviewed and merged elsewhere. As for how to go through it, I'd either start off with the numerous files with minimal changes, or the main files that were modified as part of these changes. The aforementioned main files modified are Campaign, Person, CampaignOptions, CampaignOptionsDialog, and PersonnelTableMouseAdaptor, with Person and Campaign containing the primary logical changes.", "createdAt": "2020-02-29T04:11:35Z", "url": "https://github.com/MegaMek/mekhq/pull/1533", "merged": true, "mergeCommit": {"oid": "af10375dfa8ecfe946ceaef693816f224c4d7290"}, "closed": true, "closedAt": "2020-03-19T01:06:55Z", "author": {"login": "Windchild292"}, "timelineItems": {"totalCount": 153, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIJJ3iAH2gAyMzgxNzI4OTI1OjcwODQ4Mzg5YjdkZjliNmQ3NDlhZDlhNGQ0YTlmYTg0M2JhMTM0Yzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPBTAugFqTM3NzM0OTU0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "70848389b7df9b6d749ad9a4d4a9fa843ba134c9", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/70848389b7df9b6d749ad9a4d4a9fa843ba134c9", "committedDate": "2020-02-26T16:17:24Z", "message": "Fixing surname generation for clanner personnel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72545b20cc5c70482539ce09033930182d378ec0", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/72545b20cc5c70482539ce09033930182d378ec0", "committedDate": "2020-02-26T17:06:10Z", "message": "Fixing utilities name and gender migration for all crew"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a6f563bf77f1cbff1818676fa3b7d864d8d2f98", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/5a6f563bf77f1cbff1818676fa3b7d864d8d2f98", "committedDate": "2020-02-26T17:19:04Z", "message": "Expanding upon the TODO statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2933cd684103958ad82c21528098039bbfb4f80", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/c2933cd684103958ad82c21528098039bbfb4f80", "committedDate": "2020-02-26T19:20:22Z", "message": "Fixing Bloodname manual generation for clanners in IS forces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c682f6e005b193ea1cf7763487d07620be5555e", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/1c682f6e005b193ea1cf7763487d07620be5555e", "committedDate": "2020-02-26T19:25:05Z", "message": "Little bit of last minute refactoring and fixes in Person and Utilities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea753ea5d9de670869c0ba856185c2f1a843eed3", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/ea753ea5d9de670869c0ba856185c2f1a843eed3", "committedDate": "2020-02-26T19:34:27Z", "message": "Refactoring in Utilities.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e2f60917efbcb94b5d500b0854246e1b336cd2a", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/9e2f60917efbcb94b5d500b0854246e1b336cd2a", "committedDate": "2020-02-26T19:42:22Z", "message": "Changing name generation to use the person's origin faction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0c58c0cff8f55d414927f2e297dd340acf4ef2a", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/f0c58c0cff8f55d414927f2e297dd340acf4ef2a", "committedDate": "2020-02-26T20:03:53Z", "message": "Refactoring in CustomizePersonDialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a28e8e44117f77d271a2d1f9cd4bb5d834c3108f", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/a28e8e44117f77d271a2d1f9cd4bb5d834c3108f", "committedDate": "2020-02-26T20:13:10Z", "message": "Fixing merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c5787605a8df4876314d9b800a0ea9e9a359559", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/8c5787605a8df4876314d9b800a0ea9e9a359559", "committedDate": "2020-02-26T20:24:42Z", "message": "Removing bandaid solution following name generation fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3543e6bcce16609bd8c8e45567671484a854d042", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/3543e6bcce16609bd8c8e45567671484a854d042", "committedDate": "2020-02-26T20:55:53Z", "message": "Fixing issue with options display"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56fbd65bb4573e0d86b00bd207507a07da47cdfd", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/56fbd65bb4573e0d86b00bd207507a07da47cdfd", "committedDate": "2020-02-28T22:40:21Z", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_Personnel_Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "614b3b292f4f7205a257034ae1ca886e29a87d5d", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/614b3b292f4f7205a257034ae1ca886e29a87d5d", "committedDate": "2020-02-29T00:00:39Z", "message": "Switching Gender constants to crew, and gender strings to use a single output statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09aefee1e6ac2348b291dca18318f54fb7565504", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/09aefee1e6ac2348b291dca18318f54fb7565504", "committedDate": "2020-02-29T00:05:44Z", "message": "Removing unused injury methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82d37aac4e7725f4de576b87a09d717f69dea824", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/82d37aac4e7725f4de576b87a09d717f69dea824", "committedDate": "2020-02-29T00:07:52Z", "message": "Filling in Person Javadoc comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f580469ddc656c51f23c793b3e2eb2e1eba464de", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/f580469ddc656c51f23c793b3e2eb2e1eba464de", "committedDate": "2020-02-29T00:16:25Z", "message": "Removing old and unused methods from Person.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe751f4575f10cc182ea663898509f05990c1e5a", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/fe751f4575f10cc182ea663898509f05990c1e5a", "committedDate": "2020-02-29T00:17:00Z", "message": "Removing unused constant in Person"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ed2715899db1ab60a79298ca96618689816018a", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/1ed2715899db1ab60a79298ca96618689816018a", "committedDate": "2020-02-29T00:27:52Z", "message": "Fixing minor issues in CampaignOptions.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0864ba8953719594f5c833c57aeba90aac4833e2", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/0864ba8953719594f5c833c57aeba90aac4833e2", "committedDate": "2020-02-29T00:47:30Z", "message": "Refactoring doMaintenance in Campaign"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93512ea5dd8101dc85c6e4a7c5ea31378bc36f32", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/93512ea5dd8101dc85c6e4a7c5ea31378bc36f32", "committedDate": "2020-02-29T00:51:17Z", "message": "Elaborating in Person TODO comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "951fecb76587eb821aa3df3636d40a50a5f4ca6b", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/951fecb76587eb821aa3df3636d40a50a5f4ca6b", "committedDate": "2020-02-29T00:52:08Z", "message": "Fixing bloodname comment for wave 2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfb4e410ad6545f693e9279e179b87aa8abee397", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/cfb4e410ad6545f693e9279e179b87aa8abee397", "committedDate": "2020-02-29T03:41:03Z", "message": "Switching Person gender references to Crew"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d59fa1f85b3fb673cbb0b766be34a28409c24bc7", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/d59fa1f85b3fb673cbb0b766be34a28409c24bc7", "committedDate": "2020-02-29T03:42:06Z", "message": "Reordering and Refactoring Person saving to decrease save size"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0097883e28e931dc8b135ef875b0d6c5e34f94b4", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/0097883e28e931dc8b135ef875b0d6c5e34f94b4", "committedDate": "2020-02-29T04:07:21Z", "message": "Cleaning up Person xml export"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2ODgzNjE2", "url": "https://github.com/MegaMek/mekhq/pull/1533#pullrequestreview-366883616", "createdAt": "2020-03-01T20:20:07Z", "commit": {"oid": "0097883e28e931dc8b135ef875b0d6c5e34f94b4"}, "state": "COMMENTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMDoyMDowN1rOFwP83g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMDozNDo1NlrOFwQBKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzNzMxMA==", "bodyText": "Is this to help remember these values?", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r386137310", "createdAt": "2020-03-01T20:20:07Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/personnel/Bloodname.java", "diffHunk": "@@ -64,7 +64,16 @@\n \tpublic static final int P_PROTOMECH = 4;\n \tpublic static final int P_NAVAL = 5;\n \tpublic static final int P_NUM = 6;\n-\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0097883e28e931dc8b135ef875b0d6c5e34f94b4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzNzMzNQ==", "bodyText": "indentation is off", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r386137335", "createdAt": "2020-03-01T20:20:33Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/personnel/Bloodname.java", "diffHunk": "@@ -161,28 +170,35 @@ public NameAcquired getAbsorbed() {\n \tpublic int phenotypeMultiplier(int warriorType, int year) {\n \t\tswitch (phenotype) {\n \t\tcase P_MECHWARRIOR:\n-\t\t\treturn (warriorType == P_MECHWARRIOR)?3:0;\n+\t\t\treturn (warriorType == P_MECHWARRIOR) ? 3 : 0;\n \t\tcase P_AEROSPACE:\n-\t\t\treturn (warriorType == P_AEROSPACE || warriorType == P_PROTOMECH)?3:0;\n+\t\t\treturn (warriorType == P_AEROSPACE || warriorType == P_PROTOMECH) ? 3 : 0;\n \t\tcase P_ELEMENTAL:\n \t\t\tif (year < 2870) {\n \t\t\t\treturn 1;\n \t\t\t}\n \t\t\treturn (warriorType == P_ELEMENTAL)?3:0;\n \t\tcase P_PROTOMECH:\n \t\t\tswitch (warriorType) {\n-\t\t\tcase P_PROTOMECH:return 9;\n-\t\t\tcase P_AEROSPACE:return 1;\n-\t\t\tdefault:return 0;\n+\t\t\tcase P_PROTOMECH:\n+\t\t\t    return 9;\n+\t\t\tcase P_AEROSPACE:\n+\t\t\t    return 1;\n+\t\t\tdefault:\n+\t\t\t    return 0;\n \t\t\t}\n \t\tcase P_NAVAL:\n-\t\t\treturn (warriorType == P_NAVAL)?3:0;\n+\t\t\treturn (warriorType == P_NAVAL) ? 3 : 0;\n \t\tcase P_GENERAL:\n \t\tdefault:\n-\t\t\treturn 1;\n+\t\t    return 1;\n \t\t}\n \t}\n \n+\tpublic static int determinePhenotype(Person person) {\n+\t    return 0; // TODO : Windchild Fix Me During Personnel Wave 2\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0097883e28e931dc8b135ef875b0d6c5e34f94b4"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzNzY5MA==", "bodyText": "Looks like mixed tabs/spaces in this file", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r386137690", "createdAt": "2020-03-01T20:25:33Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/service/MassRepairService.java", "diffHunk": "@@ -805,11 +805,7 @@ private static MassRepairPartAction repairPart(CampaignGUI campaignGUI, IPartWor\n \t\t\t\t\tcontinue;\n \t\t\t\t}\n \n-\t\t\t\tif (configuredOptions.isOptimizeToCompleteToday()) {\n-\t\t\t\t\tisSameDayTech = false;\n-\t\t\t\t} else {\n-\t\t\t\t\tisSameDayTech = true;\n-\t\t\t\t}\n+                isSameDayTech = !configuredOptions.isOptimizeToCompleteToday();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0097883e28e931dc8b135ef875b0d6c5e34f94b4"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzNzgwMw==", "bodyText": "Could this be loop local instead of an instance field?", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r386137803", "createdAt": "2020-03-01T20:26:59Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/view/PersonViewPanel.java", "diffHunk": "@@ -740,22 +760,52 @@ private JPanel fillFamily() {\n             lblSpouse2.addMouseListener(new MouseAdapter() {\n                 @Override\n                 public void mouseClicked(MouseEvent e) {\n-                    gui.getPersonnelTab().focusOnPerson(person.getSpouseID());\n+                    gui.getPersonnelTab().focusOnPerson(person.getSpouseId());\n                 }\n             });\n-            gridBagConstraints = new GridBagConstraints();\n             gridBagConstraints.gridx = 1;\n             gridBagConstraints.gridy = firsty;\n             gridBagConstraints.weightx = 1.0;\n             gridBagConstraints.insets = new Insets(0, 10, 0, 0);\n-            gridBagConstraints.fill = GridBagConstraints.NONE;\n-            gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;\n             pnlFamily.add(lblSpouse2, gridBagConstraints);\n             firsty++;\n         }\n \n+        if (person.hasFormerSpouse()) {\n+            lblFormerSpouses1.setName(\"lblFormerSpouses1\"); // NOI18N //$NON-NLS-1$\n+            lblFormerSpouses1.setText(resourceMap.getString(\"lblFormerSpouses1.text\")); //$NON-NLS-1$\n+            gridBagConstraints = new GridBagConstraints();\n+            gridBagConstraints.gridx = 0;\n+            gridBagConstraints.gridy = firsty;\n+            gridBagConstraints.fill = GridBagConstraints.NONE;\n+            gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;\n+            pnlFamily.add(lblFormerSpouses1, gridBagConstraints);\n+\n+            gridBagConstraints.gridx = 1;\n+            gridBagConstraints.weightx = 1.0;\n+            gridBagConstraints.insets = new Insets(0, 10, 0, 0);\n+\n+            for (FormerSpouse formerSpouse : person.getFormerSpouses()) {\n+                Person ex = campaign.getPerson(formerSpouse.getFormerSpouseId());\n+                gridBagConstraints.gridy = firsty;\n+                lblFormerSpouses2 = new JLabel();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0097883e28e931dc8b135ef875b0d6c5e34f94b4"}, "originalPosition": 154}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzODA0Ng==", "bodyText": "mixed tabs and spaces it appears", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r386138046", "createdAt": "2020-03-01T20:29:57Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/dialog/CustomizePersonDialog.java", "diffHunk": "@@ -985,14 +933,15 @@ private void randomBloodname() {\n \t\t\tphenotype = Bloodname.P_PROTOMECH;\n \t\t\tbreak;\n \t\t}\n-\t\ttextBloodname.setText(Bloodname.randomBloodname(campaign.getFactionCode(), phenotype,\n-\t\t\t\t\tcampaign.getCalendar().get(Calendar.YEAR)).getName());   \t\n+\t\ttextBloodname.setText(Bloodname.randomBloodname(campaign.getFaction().isClan()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0097883e28e931dc8b135ef875b0d6c5e34f94b4"}, "originalPosition": 760}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzODE3MQ==", "bodyText": "What sort of exceptions are we trying to catch that we can't expect?", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r386138171", "createdAt": "2020-03-01T20:31:32Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/dialog/CampaignOptionsDialog.java", "diffHunk": "@@ -1588,385 +1544,471 @@ private void initComponents() {\n \n         tabOptions.addTab(resourceMap.getString(\"panTech.TabConstraints.tabTitle\"), panTech); // NOI18N\n \n-        panPersonnel.setName(\"panPersonnel\"); // NOI18N\n-        panPersonnel.setLayout(new java.awt.GridBagLayout());\n-\n-        useTacticsBox.setText(resourceMap.getString(\"useTacticsBox.text\")); // NOI18N\n-        useTacticsBox.setToolTipText(resourceMap.getString(\"useTacticsBox.toolTipText\")); // NOI18N\n-        useTacticsBox.setName(\"useTacticsBox\"); // NOI18N\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 0;\n-        gridBagConstraints.gridwidth = 2;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panPersonnel.add(useTacticsBox, gridBagConstraints);\n-\n-        useInitBonusBox.setText(resourceMap.getString(\"useInitBonusBox.text\")); // NOI18N\n-        useInitBonusBox.setToolTipText(resourceMap.getString(\"useInitBonusBox.toolTipText\")); // NOI18N\n-        useInitBonusBox.setName(\"useInitBonusBox\"); // NOI18N\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 1;\n-        gridBagConstraints.gridwidth = 2;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panPersonnel.add(useInitBonusBox, gridBagConstraints);\n-\n-        useToughnessBox.setText(resourceMap.getString(\"useToughnessBox.text\")); // NOI18N\n-        useToughnessBox.setToolTipText(resourceMap.getString(\"useToughnessBox.toolTipText\")); // NOI18N\n-        useToughnessBox.setName(\"useToughnessBox\"); // NOI18N\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 2;\n-        gridBagConstraints.gridwidth = 2;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panPersonnel.add(useToughnessBox, gridBagConstraints);\n-\n-        useArtilleryBox.setText(resourceMap.getString(\"useArtilleryBox.text\")); // NOI18N\n-        useArtilleryBox.setToolTipText(resourceMap.getString(\"useArtilleryBox.toolTipText\")); // NOI18N\n-        useArtilleryBox.setName(\"useArtilleryBox\"); // NOI18N\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 3;\n-        gridBagConstraints.gridwidth = 2;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panPersonnel.add(useArtilleryBox, gridBagConstraints);\n-\n-        useAbilitiesBox.setText(resourceMap.getString(\"useAbilitiesBox.text\")); // NOI18N\n-        useAbilitiesBox.setToolTipText(resourceMap.getString(\"useAbilitiesBox.toolTipText\")); // NOI18N\n-        useAbilitiesBox.setName(\"useAbilitiesBox\"); // NOI18N\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 4;\n-        gridBagConstraints.gridwidth = 2;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panPersonnel.add(useAbilitiesBox, gridBagConstraints);\n-\n-        useEdgeBox.setText(resourceMap.getString(\"useEdgeBox.text\")); // NOI18N\n-        useEdgeBox.setToolTipText(resourceMap.getString(\"useEdgeBox.toolTipText\")); // NOI18N\n-        useEdgeBox.setName(\"useEdgeBox\"); // NOI18N\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 5;\n-        gridBagConstraints.gridwidth = 2;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panPersonnel.add(useEdgeBox, gridBagConstraints);\n-\n-        useSupportEdgeBox.setText(resourceMap.getString(\"useSupportEdgeBox.text\")); // NOI18N\n-        useSupportEdgeBox.setToolTipText(resourceMap.getString(\"useSupportEdgeBox.toolTipText\")); // NOI18N\n-        useSupportEdgeBox.setName(\"useSupportEdgeBox\"); // NOI18N\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 6;\n-        gridBagConstraints.gridwidth = 2;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panPersonnel.add(useSupportEdgeBox, gridBagConstraints);\n-\n-        useImplantsBox.setText(resourceMap.getString(\"useImplantsBox.text\")); // NOI18N\n-        useImplantsBox.setToolTipText(resourceMap.getString(\"useImplantsBox.toolTipText\")); // NOI18N\n-        useImplantsBox.setName(\"useImplantsBox\"); // NOI18N\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 7;\n-        gridBagConstraints.gridwidth = 2;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panPersonnel.add(useImplantsBox, gridBagConstraints);\n-\n-        chkCapturePrisoners.setText(resourceMap.getString(\"chkCapturePrisoners.text\")); // NOI18N\n-        chkCapturePrisoners.setToolTipText(resourceMap.getString(\"chkCapturePrisoners.toolTipText\")); // NOI18N\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 8;\n-        gridBagConstraints.gridwidth = 2;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panPersonnel.add(chkCapturePrisoners, gridBagConstraints);\n-\n-        DefaultComboBoxModel<String> prisonerStatusModel = new DefaultComboBoxModel<>();\n-        prisonerStatusModel.addElement(\"Prisoner\");\n-        prisonerStatusModel.addElement(\"Bondsman\");\n-        comboPrisonerStatus = new JComboBox<>(prisonerStatusModel);\n-        comboPrisonerStatus.setSelectedIndex(options.getDefaultPrisonerStatus());\n-        JPanel pnlPrisonerStatus = new JPanel();\n-        pnlPrisonerStatus.add(new JLabel(\"Default Prisoner Status:\"));\n-        pnlPrisonerStatus.add(comboPrisonerStatus);\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 9;\n-        gridBagConstraints.gridwidth = 2;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panPersonnel.add(pnlPrisonerStatus, gridBagConstraints);\n-\n-\t\taltQualityAveragingCheckBox.setText(resourceMap.getString(\"altQualityAveragingCheckBox.text\")); // NOI18N\n-        altQualityAveragingCheckBox.setToolTipText(resourceMap.getString(\"altQualityAveragingCheckBox.toolTipText\")); // NOI18N\n-        altQualityAveragingCheckBox.setName(\"altQualityAveragingCheckBox\"); // NOI18N\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 10;\n-        gridBagConstraints.gridwidth = 2;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panPersonnel.add(altQualityAveragingCheckBox, gridBagConstraints);\n-\n-        useAdvancedMedicalBox.setText(resourceMap.getString(\"useAdvancedMedicalBox.text\")); // NOI18N\n-        useAdvancedMedicalBox.setToolTipText(resourceMap.getString(\"useAdvancedMedicalBox.toolTipText\")); // NOI18N\n-        useAdvancedMedicalBox.setName(\"useAdvancedMedicalBox\"); // NOI18N\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 11;\n-        gridBagConstraints.gridwidth = 2;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panPersonnel.add(useAdvancedMedicalBox, gridBagConstraints);\n-\n-        useDylansRandomXpBox.setText(resourceMap.getString(\"useDylansRandomXpBox.text\")); // NOI18N\n-        useDylansRandomXpBox.setToolTipText(resourceMap.getString(\"useDylansRandomXpBox.toolTipText\")); // NOI18N\n-        useDylansRandomXpBox.setName(\"useDylansRandomXpBox\"); // NOI18N\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 12;\n-        gridBagConstraints.gridwidth = 2;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panPersonnel.add(useDylansRandomXpBox, gridBagConstraints);\n-\n-        spnHealWaitingPeriod = new JSpinner(new SpinnerNumberModel(options.getHealingWaitingPeriod(), 1, 30, 1));\n-        ((JSpinner.DefaultEditor) spnHealWaitingPeriod.getEditor()).getTextField().setEditable(false);\n-        JPanel pnlHealWaitingPeriod = new JPanel();\n-        pnlHealWaitingPeriod.add(spnHealWaitingPeriod);\n-        pnlHealWaitingPeriod.add(new JLabel(\"Days to wait between healing checks by doctors\"));\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 13;\n-        gridBagConstraints.gridwidth = 2;\n-        //gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panPersonnel.add(pnlHealWaitingPeriod, gridBagConstraints);\n-\n-        spnNaturalHealWaitingPeriod = new JSpinner(new SpinnerNumberModel(options.getNaturalHealingWaitingPeriod(),\n-                                                                          1, 365, 1));\n-        ((JSpinner.DefaultEditor) spnNaturalHealWaitingPeriod.getEditor()).getTextField().setEditable(false);\n-        JPanel pnlNaturalHealWaitingPeriod = new JPanel();\n-        pnlNaturalHealWaitingPeriod.add(spnNaturalHealWaitingPeriod);\n-        pnlNaturalHealWaitingPeriod.add(new JLabel(\"Days to wait for natural healing\"));\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 14;\n-        gridBagConstraints.gridwidth = 2;\n-        //gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panPersonnel.add(pnlNaturalHealWaitingPeriod, gridBagConstraints);\n-\n-        spnMinimumHitsForVees = new JSpinner(new SpinnerNumberModel(options.getMinimumHitsForVees(), 1, 5, 1));\n-        ((JSpinner.DefaultEditor) spnMinimumHitsForVees.getEditor()).getTextField().setEditable(false);\n-        JPanel panMinimumHitsForVees = new JPanel();\n-        panMinimumHitsForVees.add(spnMinimumHitsForVees);\n-        panMinimumHitsForVees.add(new JLabel(\"Minimum number of hits for wounded crews and infantry\"));\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 15;\n-        gridBagConstraints.gridwidth = 2;\n-        //gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panPersonnel.add(panMinimumHitsForVees, gridBagConstraints);\n-\n-        useRandomHitsForVees = new JCheckBox();\n-        useRandomHitsForVees.setSelected(options.useRandomHitsForVees());\n-        useRandomHitsForVees.setText(resourceMap.getString(\"useRandomHitsForVees.text\")); // NOI18N\n-        useRandomHitsForVees.setToolTipText(resourceMap.getString(\"useRandomHitsForVees.toolTipText\")); // NOI18N\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 16;\n-        gridBagConstraints.gridwidth = 2;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panPersonnel.add(useRandomHitsForVees, gridBagConstraints);\n-\n-        useTougherHealing = new JCheckBox(resourceMap.getString(\"useTougherHealing.text\"));\n-        useTougherHealing.setSelected(options.useTougherHealing());\n-        useTougherHealing.setToolTipText(resourceMap.getString(\"useTougherHealing.toolTipText\")); // NOI18N\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 17;\n-        gridBagConstraints.gridwidth = 2;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panPersonnel.add(useTougherHealing, gridBagConstraints);\n-\n-        chkUseUnofficialProcreation = new JCheckBox(\"Use procreation (Unofficial)\"); // NOI18N\n-        chkUseUnofficialProcreation.setSelected(options.useUnofficialProcreation());\n-        //chkUseUnofficialProcreation.setToolTipText(resourceMap.getString(\"chkUseUnofficialProcreation.toolTipText\")); // NOI18N\n-        gridBagConstraints.gridy = 18;\n-        panPersonnel.add(chkUseUnofficialProcreation, gridBagConstraints);\n-\n-        chkUseUnofficialProcreationNoRelationship = new JCheckBox(\"Use procreation without a relationship (Unofficial)\"); // NOI18N\n-        chkUseUnofficialProcreationNoRelationship.setSelected(options.useUnofficialProcreationNoRelationship());\n-        //chkUseUnofficialProcreationNoRelationship.setToolTipText(resourceMap.getString(\"chkUseUnofficialProcreationNoRelationship.toolTipText\")); // NOI18N\n-        gridBagConstraints.gridy = 19;\n-        panPersonnel.add(chkUseUnofficialProcreationNoRelationship, gridBagConstraints);\n-\n-        chkUseParentage = new JCheckBox(\"Display children in the person panel\");\n-        chkUseParentage.setSelected(options.useParentage());\n-        gridBagConstraints.gridy = 20;\n-        panPersonnel.add(chkUseParentage, gridBagConstraints);\n-\n-        chkLogConception = new JCheckBox(\"Log Conception and Birth \");\n-        chkLogConception.setSelected(options.logConception());\n-        gridBagConstraints.gridy = 21;\n-        panPersonnel.add(chkLogConception, gridBagConstraints);\n-\n-        chkUseTransfers = new JCheckBox(\"Log Saver - Use Reassign instead of Remove/Assign\"); // NOI18N\n-        chkUseTransfers.setSelected(options.useTransfers());\n-        gridBagConstraints.gridy = 22;\n-        panPersonnel.add(chkUseTransfers, gridBagConstraints);\n-\n-        chkUseTimeInService = new JCheckBox(\"Track Time In Service\"); // NOI18N\n-        chkUseTimeInService.setSelected(options.getUseTimeInService());\n-        gridBagConstraints.gridy = 23;\n-        panPersonnel.add(chkUseTimeInService, gridBagConstraints);\n-\n-        chkShowOriginFaction = new JCheckBox(\"Show Origin Faction\"); // NOI18N\n-        chkShowOriginFaction.setSelected(options.showOriginFaction());\n-        gridBagConstraints.gridy = 24;\n-        panPersonnel.add(chkShowOriginFaction, gridBagConstraints);\n-\n-        chkRandomizeOrigin = new JCheckBox(\"Randomize Origin\"); // NOI18N\n-        chkRandomizeOrigin.setSelected(options.randomizeOrigin());\n-        gridBagConstraints.gridy = 25;\n-        panPersonnel.add(chkRandomizeOrigin, gridBagConstraints);\n-\n-        spnOriginSearchRadius = new JSpinner(new SpinnerNumberModel(options.getOriginSearchRadius(), 10, 250, 10));\n-        JPanel panOriginSearchRadius = new JPanel();\n-        panOriginSearchRadius.add(spnOriginSearchRadius);\n-        panOriginSearchRadius.add(new JLabel(\"Random Origin Search Radius\"));\n-        gridBagConstraints.gridy = 26;\n-        panPersonnel.add(panOriginSearchRadius, gridBagConstraints);\n-\n-        JPanel panSalary = new JPanel(new GridBagLayout());\n-        panSalary.setBorder(BorderFactory.createTitledBorder(\"Salary\"));\n-\n-        JPanel panMultiplier = new JPanel(new GridLayout(1, 3));\n-        panMultiplier.setBorder(BorderFactory.createTitledBorder(\"Multipliers\"));\n-        spnSalaryCommission = new JSpinner(new SpinnerNumberModel(options.getSalaryCommissionMultiplier(), 0, 10, 0.05));\n-        ((JSpinner.DefaultEditor) spnSalaryCommission.getEditor()).getTextField().setEditable(false);\n-        JPanel panSalaryCommission = new JPanel();\n-        panSalaryCommission.add(spnSalaryCommission);\n-        panSalaryCommission.add(new JLabel(\"Commissioned\"));\n-        panMultiplier.add(panSalaryCommission);\n-\n-        spnSalaryEnlisted = new JSpinner(new SpinnerNumberModel(options.getSalaryEnlistedMultiplier(), 0, 10, 0.05));\n-        ((JSpinner.DefaultEditor) spnSalaryEnlisted.getEditor()).getTextField().setEditable(false);\n-        JPanel panSalaryEnlisted = new JPanel();\n-        panSalaryEnlisted.add(spnSalaryEnlisted);\n-        panSalaryEnlisted.add(new JLabel(\"Enlisted\"));\n-        panMultiplier.add(panSalaryEnlisted);\n-\n-        spnSalaryAntiMek = new JSpinner(new SpinnerNumberModel(options.getSalaryAntiMekMultiplier(), 0, 10, 0.05));\n-        ((JSpinner.DefaultEditor) spnSalaryAntiMek.getEditor()).getTextField().setEditable(false);\n-        JPanel panSalaryAntiMek = new JPanel();\n-        panSalaryAntiMek.add(spnSalaryAntiMek);\n-        panSalaryAntiMek.add(new JLabel(\"Anti-Mek\"));\n-        panMultiplier.add(panSalaryAntiMek);\n-\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 0;\n-        gridBagConstraints.weightx = 1.0;\n-        gridBagConstraints.weighty = 0.0;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panSalary.add(panMultiplier, gridBagConstraints);\n+        //region Personnel Tab\n+        try {\n+            panPersonnel.setName(\"panPersonnel\");\n+            panPersonnel.setLayout(new java.awt.GridBagLayout());\n+            gridy = 0;\n \n-        JPanel panXpMultiplier = new JPanel(new GridLayout(2, 3));\n-        panXpMultiplier.setBorder(BorderFactory.createTitledBorder(\"Experience Multipliers\"));\n-        spnSalaryXp = new JSpinner[5];\n-        JSpinner spnXpSalary;\n-        JPanel panXpSalary;\n-        for (int i = 0; i < 5; i++) {\n-            spnXpSalary = new JSpinner(new SpinnerNumberModel(options.getSalaryXpMultiplier(i), 0, 10, 0.05));\n-            ((JSpinner.DefaultEditor) spnXpSalary.getEditor()).getTextField().setEditable(false);\n-            panXpSalary = new JPanel();\n-            panXpSalary.add(spnXpSalary);\n-            panXpSalary.add(new JLabel(SkillType.getExperienceLevelName(i)));\n-            panXpMultiplier.add(panXpSalary);\n-            spnSalaryXp[i] = spnXpSalary;\n-        }\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 1;\n-        gridBagConstraints.weightx = 1.0;\n-        gridBagConstraints.weighty = 0.0;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panSalary.add(panXpMultiplier, gridBagConstraints);\n+            useTacticsBox.setText(resourceMap.getString(\"useTacticsBox.text\"));\n+            useTacticsBox.setToolTipText(resourceMap.getString(\"useTacticsBox.toolTipText\"));\n+            useTacticsBox.setName(\"useTacticsBox\");\n+            gridBagConstraints = new java.awt.GridBagConstraints();\n+            gridBagConstraints.gridx = 0;\n+            gridBagConstraints.gridy = gridy;\n+            gridBagConstraints.gridwidth = 2;\n+            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n+            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n+            panPersonnel.add(useTacticsBox, gridBagConstraints);\n+\n+            useInitBonusBox.setText(resourceMap.getString(\"useInitBonusBox.text\"));\n+            useInitBonusBox.setToolTipText(resourceMap.getString(\"useInitBonusBox.toolTipText\"));\n+            useInitBonusBox.setName(\"useInitBonusBox\");\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(useInitBonusBox, gridBagConstraints);\n+\n+            useToughnessBox.setText(resourceMap.getString(\"useToughnessBox.text\"));\n+            useToughnessBox.setToolTipText(resourceMap.getString(\"useToughnessBox.toolTipText\"));\n+            useToughnessBox.setName(\"useToughnessBox\");\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(useToughnessBox, gridBagConstraints);\n+\n+            useArtilleryBox.setText(resourceMap.getString(\"useArtilleryBox.text\"));\n+            useArtilleryBox.setToolTipText(resourceMap.getString(\"useArtilleryBox.toolTipText\"));\n+            useArtilleryBox.setName(\"useArtilleryBox\");\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(useArtilleryBox, gridBagConstraints);\n+\n+            useAbilitiesBox.setText(resourceMap.getString(\"useAbilitiesBox.text\"));\n+            useAbilitiesBox.setToolTipText(resourceMap.getString(\"useAbilitiesBox.toolTipText\"));\n+            useAbilitiesBox.setName(\"useAbilitiesBox\");\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(useAbilitiesBox, gridBagConstraints);\n+\n+            useEdgeBox.setText(resourceMap.getString(\"useEdgeBox.text\"));\n+            useEdgeBox.setToolTipText(resourceMap.getString(\"useEdgeBox.toolTipText\"));\n+            useEdgeBox.setName(\"useEdgeBox\");\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(useEdgeBox, gridBagConstraints);\n+\n+            useSupportEdgeBox.setText(resourceMap.getString(\"useSupportEdgeBox.text\"));\n+            useSupportEdgeBox.setToolTipText(resourceMap.getString(\"useSupportEdgeBox.toolTipText\"));\n+            useSupportEdgeBox.setName(\"useSupportEdgeBox\");\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(useSupportEdgeBox, gridBagConstraints);\n+\n+            useImplantsBox.setText(resourceMap.getString(\"useImplantsBox.text\"));\n+            useImplantsBox.setToolTipText(resourceMap.getString(\"useImplantsBox.toolTipText\"));\n+            useImplantsBox.setName(\"useImplantsBox\");\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(useImplantsBox, gridBagConstraints);\n+\n+            chkCapturePrisoners.setText(resourceMap.getString(\"chkCapturePrisoners.text\"));\n+            chkCapturePrisoners.setToolTipText(resourceMap.getString(\"chkCapturePrisoners.toolTipText\"));\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(chkCapturePrisoners, gridBagConstraints);\n+\n+            DefaultComboBoxModel<String> prisonerStatusModel = new DefaultComboBoxModel<>();\n+            prisonerStatusModel.addElement(resourceMap.getString(\"prisonerStatus.Prisoner\"));\n+            prisonerStatusModel.addElement(resourceMap.getString(\"prisonerStatus.Bondsman\"));\n+            comboPrisonerStatus = new JComboBox<>(prisonerStatusModel);\n+            comboPrisonerStatus.setSelectedIndex(options.getDefaultPrisonerStatus());\n+            JPanel pnlPrisonerStatus = new JPanel();\n+            pnlPrisonerStatus.add(new JLabel(resourceMap.getString(\"prisonerStatus.text\")));\n+            pnlPrisonerStatus.add(comboPrisonerStatus);\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(pnlPrisonerStatus, gridBagConstraints);\n+\n+            altQualityAveragingCheckBox.setText(resourceMap.getString(\"altQualityAveragingCheckBox.text\"));\n+            altQualityAveragingCheckBox.setToolTipText(resourceMap.getString(\"altQualityAveragingCheckBox.toolTipText\"));\n+            altQualityAveragingCheckBox.setName(\"altQualityAveragingCheckBox\");\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(altQualityAveragingCheckBox, gridBagConstraints);\n+\n+            useAdvancedMedicalBox.setText(resourceMap.getString(\"useAdvancedMedicalBox.text\"));\n+            useAdvancedMedicalBox.setToolTipText(resourceMap.getString(\"useAdvancedMedicalBox.toolTipText\"));\n+            useAdvancedMedicalBox.setName(\"useAdvancedMedicalBox\");\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(useAdvancedMedicalBox, gridBagConstraints);\n+\n+            useDylansRandomXpBox.setText(resourceMap.getString(\"useDylansRandomXpBox.text\"));\n+            useDylansRandomXpBox.setToolTipText(resourceMap.getString(\"useDylansRandomXpBox.toolTipText\"));\n+            useDylansRandomXpBox.setName(\"useDylansRandomXpBox\");\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(useDylansRandomXpBox, gridBagConstraints);\n+\n+            spnHealWaitingPeriod = new JSpinner(new SpinnerNumberModel(options.getHealingWaitingPeriod(), 1, 30, 1));\n+            ((JSpinner.DefaultEditor) spnHealWaitingPeriod.getEditor()).getTextField().setEditable(false);\n+            JPanel pnlHealWaitingPeriod = new JPanel();\n+            pnlHealWaitingPeriod.add(spnHealWaitingPeriod);\n+            pnlHealWaitingPeriod.add(new JLabel(resourceMap.getString(\"healWaitingPeriod.text\")));\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(pnlHealWaitingPeriod, gridBagConstraints);\n+\n+            spnNaturalHealWaitingPeriod = new JSpinner(new SpinnerNumberModel(options.getNaturalHealingWaitingPeriod(),\n+                    1, 365, 1));\n+            ((JSpinner.DefaultEditor) spnNaturalHealWaitingPeriod.getEditor()).getTextField().setEditable(false);\n+            JPanel pnlNaturalHealWaitingPeriod = new JPanel();\n+            pnlNaturalHealWaitingPeriod.add(spnNaturalHealWaitingPeriod);\n+            pnlNaturalHealWaitingPeriod.add(new JLabel(resourceMap.getString(\"naturalHealWaitingPeriod.text\")));\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(pnlNaturalHealWaitingPeriod, gridBagConstraints);\n+\n+            spnMinimumHitsForVees = new JSpinner(new SpinnerNumberModel(options.getMinimumHitsForVees(), 1, 5, 1));\n+            ((JSpinner.DefaultEditor) spnMinimumHitsForVees.getEditor()).getTextField().setEditable(false);\n+            JPanel panMinimumHitsForVees = new JPanel();\n+            panMinimumHitsForVees.add(spnMinimumHitsForVees);\n+            panMinimumHitsForVees.add(new JLabel(resourceMap.getString(\"minimumHitsForVees.text\")));\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(panMinimumHitsForVees, gridBagConstraints);\n+\n+            useRandomHitsForVees = new JCheckBox();\n+            useRandomHitsForVees.setSelected(options.useRandomHitsForVees());\n+            useRandomHitsForVees.setText(resourceMap.getString(\"useRandomHitsForVees.text\"));\n+            useRandomHitsForVees.setToolTipText(resourceMap.getString(\"useRandomHitsForVees.toolTipText\"));\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(useRandomHitsForVees, gridBagConstraints);\n+\n+            useTougherHealing = new JCheckBox(resourceMap.getString(\"useTougherHealing.text\"));\n+            useTougherHealing.setSelected(options.useTougherHealing());\n+            useTougherHealing.setToolTipText(resourceMap.getString(\"useTougherHealing.toolTipText\"));\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(useTougherHealing, gridBagConstraints);\n+\n+            chkUseTransfers = new JCheckBox(resourceMap.getString(\"useTransfers.text\"));\n+            chkUseTransfers.setSelected(options.useTransfers());\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(chkUseTransfers, gridBagConstraints);\n+\n+            chkUseTimeInService = new JCheckBox(resourceMap.getString(\"useTimeInService.text\"));\n+            chkUseTimeInService.setSelected(options.getUseTimeInService());\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(chkUseTimeInService, gridBagConstraints);\n+\n+            chkShowOriginFaction = new JCheckBox(resourceMap.getString(\"showOriginFaction.text\"));\n+            chkShowOriginFaction.setSelected(options.showOriginFaction());\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(chkShowOriginFaction, gridBagConstraints);\n+\n+            chkRandomizeOrigin = new JCheckBox(resourceMap.getString(\"randomizeOrigin.text\"));\n+            chkRandomizeOrigin.setSelected(options.randomizeOrigin());\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(chkRandomizeOrigin, gridBagConstraints);\n+\n+            chkRandomizeDependentsOrigin = new JCheckBox(resourceMap.getString(\"randomizeDependentsOrigin.text\"));\n+            chkRandomizeDependentsOrigin.setSelected(options.getRandomizeDependentOrigin());\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(chkRandomizeDependentsOrigin, gridBagConstraints);\n+\n+            spnOriginSearchRadius = new JSpinner(new SpinnerNumberModel(options.getOriginSearchRadius(), 10, 250, 10));\n+            JPanel panOriginSearchRadius = new JPanel();\n+            panOriginSearchRadius.add(spnOriginSearchRadius);\n+            panOriginSearchRadius.add(new JLabel(resourceMap.getString(\"originSearchRadius.text\")));\n+            gridBagConstraints.gridy = ++gridy;\n+            panPersonnel.add(panOriginSearchRadius, gridBagConstraints);\n+\n+            //Family\n+            JPanel panFamily = new JPanel(new GridBagLayout());\n+            panFamily.setBorder(BorderFactory.createTitledBorder(resourceMap.getString(\"FamilyTab.text\")));\n+            int panFamilyGridY = ++gridy;\n+\n+            spnMinimumMarriageAge = new JSpinner(new SpinnerNumberModel(options.getMinimumMarriageAge(), 14, null, 1));\n+            Dimension dimensionMinimumMarriageAge = spnMinimumMarriageAge.getPreferredSize();\n+            dimensionMinimumMarriageAge.width = 40;\n+            spnMinimumMarriageAge.setPreferredSize(dimensionMinimumMarriageAge);\n+            JPanel panMinimumMarriageAge = new JPanel();\n+            panMinimumMarriageAge.add(new JLabel(resourceMap.getString(\"minimumMarriageAge.text\")));\n+            panMinimumMarriageAge.setToolTipText(resourceMap.getString(\"minimumMarriageAge.toolTipText\"));\n+            panMinimumMarriageAge.add(spnMinimumMarriageAge);\n+            gridBagConstraints.gridy = ++gridy;\n+            panFamily.add(panMinimumMarriageAge, gridBagConstraints);\n+\n+            spnCheckMutualAncestorsDepth = new JSpinner(new SpinnerNumberModel(options.checkMutualAncestorsDepth(), 0, 20, 1));\n+            Dimension dimensionCheckMutualAncestorsDepth = spnCheckMutualAncestorsDepth.getPreferredSize();\n+            dimensionCheckMutualAncestorsDepth.width = 40;\n+            spnCheckMutualAncestorsDepth.setPreferredSize(dimensionCheckMutualAncestorsDepth);\n+            JPanel panCheckMutualAncestorsDepth = new JPanel();\n+            panCheckMutualAncestorsDepth.add(new JLabel(resourceMap.getString(\"checkMutualAncestorsDepth.text\")));\n+            panCheckMutualAncestorsDepth.setToolTipText(resourceMap.getString(\"checkMutualAncestorsDepth.toolTipText\"));\n+            panCheckMutualAncestorsDepth.add(spnCheckMutualAncestorsDepth);\n+            gridBagConstraints.gridy = ++gridy;\n+            panFamily.add(panCheckMutualAncestorsDepth, gridBagConstraints);\n+\n+            chkUseRandomMarriages = new JCheckBox(resourceMap.getString(\"useRandomMarriages.text\"));\n+            chkUseRandomMarriages.setToolTipText(resourceMap.getString(\"useRandomMarriages.toolTipText\"));\n+            chkUseRandomMarriages.setSelected(options.useRandomMarriages());\n+            gridBagConstraints.gridy = ++gridy;\n+            panFamily.add(chkUseRandomMarriages, gridBagConstraints);\n+\n+            spnChanceRandomMarriages = new JSpinner(new SpinnerNumberModel(options.getChanceRandomMarriages(), 0, 100, 0.001));\n+            Dimension dimensionChanceRandomMarriages = spnChanceRandomMarriages.getPreferredSize();\n+            dimensionChanceRandomMarriages.width = 50;\n+            spnChanceRandomMarriages.setPreferredSize(dimensionChanceRandomMarriages);\n+            JPanel panChanceRandomMarriages = new JPanel();\n+            panChanceRandomMarriages.add(new JLabel(resourceMap.getString(\"chanceRandomMarriages.text\")));\n+            panChanceRandomMarriages.setToolTipText(resourceMap.getString(\"chanceRandomMarriages.toolTipText\"));\n+            panChanceRandomMarriages.add(spnChanceRandomMarriages);\n+            gridBagConstraints.gridy = ++gridy;\n+            panFamily.add(panChanceRandomMarriages, gridBagConstraints);\n+\n+            spnMarriageAgeRange = new JSpinner(new SpinnerNumberModel(options.getMarriageAgeRange(), 0, null, 1));\n+            Dimension dimensionMarriageAgeRange = spnMarriageAgeRange.getPreferredSize();\n+            dimensionMarriageAgeRange.width = 40;\n+            spnMarriageAgeRange.setPreferredSize(dimensionMarriageAgeRange);\n+            JPanel panMarriageAgeRange = new JPanel();\n+            panMarriageAgeRange.add(new JLabel(resourceMap.getString(\"marriageAgeRange.text\")));\n+            panMarriageAgeRange.setToolTipText(resourceMap.getString(\"marriageAgeRange.toolTipText\"));\n+            panMarriageAgeRange.add(spnMarriageAgeRange);\n+            gridBagConstraints.gridy = ++gridy;\n+            panFamily.add(panMarriageAgeRange, gridBagConstraints);\n+\n+            JPanel panRandomMarriageSurnameWeights = new JPanel(new GridLayout((int) Math.ceil(Person.NUM_SURNAME / 3.0), 3));\n+            panRandomMarriageSurnameWeights.setBorder(BorderFactory.createTitledBorder(resourceMap.getString(\"randomMarriageSurnameWeights.text\")));\n+            panRandomMarriageSurnameWeights.setToolTipText(resourceMap.getString(\"randomMarriageSurnameWeights.toolTipText\"));\n+            spnRandomMarriageSurnameWeights = new JSpinner[Person.NUM_SURNAME];\n+            JSpinner spnRandomMarriageSurnameWeight;\n+            JPanel panRandomMarriageSurnameWeight;\n+            for (int i = 0; i < Person.NUM_SURNAME; i++) {\n+                spnRandomMarriageSurnameWeight = new JSpinner(new SpinnerNumberModel((options.getRandomMarriageSurnameWeights(i) / 10.0), 0, 100, 0.1));\n+                panRandomMarriageSurnameWeight = new JPanel();\n+                panRandomMarriageSurnameWeight.add(spnRandomMarriageSurnameWeight);\n+                panRandomMarriageSurnameWeight.add(new JLabel(Person.SURNAME_TYPE_NAMES[i]));\n+                panRandomMarriageSurnameWeights.add(panRandomMarriageSurnameWeight);\n+                spnRandomMarriageSurnameWeights[i] = spnRandomMarriageSurnameWeight;\n+            }\n+            gridBagConstraints.gridy = ++gridy;\n+            panFamily.add(panRandomMarriageSurnameWeights, gridBagConstraints);\n+\n+            chkUseRandomSameSexMarriages = new JCheckBox(resourceMap.getString(\"useRandomSameSexMarriages.text\"));\n+            chkUseRandomSameSexMarriages.setToolTipText(resourceMap.getString(\"useRandomSameSexMarriages.toolTipText\"));\n+            chkUseRandomSameSexMarriages.setSelected(options.useRandomSameSexMarriages());\n+            gridBagConstraints.gridy = ++gridy;\n+            panFamily.add(chkUseRandomSameSexMarriages, gridBagConstraints);\n+\n+            spnChanceRandomSameSexMarriages = new JSpinner(new SpinnerNumberModel(options.getChanceRandomSameSexMarriages(), 0, 100, 0.001));\n+            Dimension dimensionChanceRandomSameSexMarriages = spnChanceRandomSameSexMarriages.getPreferredSize();\n+            dimensionChanceRandomSameSexMarriages.width = 50;\n+            spnChanceRandomSameSexMarriages.setPreferredSize(dimensionChanceRandomSameSexMarriages);\n+            JPanel panChanceRandomSameSexMarriages = new JPanel();\n+            panChanceRandomSameSexMarriages.add(new JLabel(resourceMap.getString(\"chanceRandomSameSexMarriages.text\")));\n+            panChanceRandomSameSexMarriages.setToolTipText(resourceMap.getString(\"chanceRandomSameSexMarriages.toolTipText\"));\n+            panChanceRandomSameSexMarriages.add(spnChanceRandomSameSexMarriages);\n+            gridBagConstraints.gridy = ++gridy;\n+            panFamily.add(panChanceRandomSameSexMarriages, gridBagConstraints);\n+\n+            chkUseUnofficialProcreation = new JCheckBox(resourceMap.getString(\"useUnofficialProcreation.text\"));\n+            chkUseUnofficialProcreation.setSelected(options.useUnofficialProcreation());\n+            chkUseUnofficialProcreation.setToolTipText(resourceMap.getString(\"useUnofficialProcreation.toolTipText\"));\n+            gridBagConstraints.gridy = ++gridy;\n+            panFamily.add(chkUseUnofficialProcreation, gridBagConstraints);\n+\n+            spnChanceProcreation = new JSpinner(new SpinnerNumberModel(options.getChanceProcreation(), 0, 100, 0.001));\n+            Dimension dimensionChanceProcreation = spnChanceProcreation.getPreferredSize();\n+            dimensionChanceProcreation.width = 50;\n+            spnChanceProcreation.setPreferredSize(dimensionChanceProcreation);\n+            JPanel panChanceProcreation = new JPanel();\n+            panChanceProcreation.add(new JLabel(resourceMap.getString(\"chanceProcreation.text\")));\n+            panChanceProcreation.setToolTipText(resourceMap.getString(\"chanceProcreation.toolTipText\"));\n+            panChanceProcreation.add(spnChanceProcreation);\n+            gridBagConstraints.gridy = ++gridy;\n+            panFamily.add(panChanceProcreation, gridBagConstraints);\n+\n+            chkUseUnofficialProcreationNoRelationship = new JCheckBox(resourceMap.getString(\"useUnofficialProcreationNoRelationship.text\"));\n+            chkUseUnofficialProcreationNoRelationship.setToolTipText(resourceMap.getString(\"useUnofficialProcreationNoRelationship.toolTipText\"));\n+            chkUseUnofficialProcreationNoRelationship.setSelected(options.useUnofficialProcreationNoRelationship());\n+            gridBagConstraints.gridy = ++gridy;\n+            panFamily.add(chkUseUnofficialProcreationNoRelationship, gridBagConstraints);\n+\n+            spnChanceProcreationNoRelationship = new JSpinner(new SpinnerNumberModel(options.getChanceProcreationNoRelationship(), 0, 100, 0.001));\n+            Dimension dimensionChanceProcreationNoRelationship = spnChanceProcreationNoRelationship.getPreferredSize();\n+            dimensionChanceProcreationNoRelationship.width = 50;\n+            spnChanceProcreationNoRelationship.setPreferredSize(dimensionChanceProcreationNoRelationship);\n+            JPanel panChanceProcreationNoRelationship = new JPanel();\n+            panChanceProcreationNoRelationship.add(new JLabel(resourceMap.getString(\"chanceProcreationNoRelationship.text\")));\n+            panChanceProcreationNoRelationship.setToolTipText(resourceMap.getString(\"chanceProcreationNoRelationship.toolTipText\"));\n+            panChanceProcreationNoRelationship.add(spnChanceProcreationNoRelationship);\n+            gridBagConstraints.gridy = ++gridy;\n+            panFamily.add(panChanceProcreationNoRelationship, gridBagConstraints);\n+\n+            chkDisplayTrueDueDate = new JCheckBox(resourceMap.getString(\"displayTrueDueDate.text\"));\n+            chkDisplayTrueDueDate.setToolTipText(resourceMap.getString(\"displayTrueDueDate.toolTipText\"));\n+            chkDisplayTrueDueDate.setSelected(options.getDisplayTrueDueDate());\n+            gridBagConstraints.gridy = ++gridy;\n+            panFamily.add(chkDisplayTrueDueDate, gridBagConstraints);\n+\n+            chkLogConception = new JCheckBox(resourceMap.getString(\"logConception.text\"));\n+            chkLogConception.setSelected(options.logConception());\n+            gridBagConstraints.gridy = ++gridy;\n+            panFamily.add(chkLogConception, gridBagConstraints);\n+\n+            DefaultComboBoxModel<String> babySurnameStyleModel = new DefaultComboBoxModel<>();\n+            babySurnameStyleModel.addElement(resourceMap.getString(\"babySurnameStyle.Mother\"));\n+            babySurnameStyleModel.addElement(resourceMap.getString(\"babySurnameStyle.Father\"));\n+            comboBabySurnameStyle = new JComboBox<>(babySurnameStyleModel);\n+            comboBabySurnameStyle.setSelectedIndex(options.getBabySurnameStyle());\n+            JPanel pnlBabySurnameStyle = new JPanel();\n+            pnlBabySurnameStyle.add(new JLabel(resourceMap.getString(\"babySurnameStyle.text\")));\n+            pnlBabySurnameStyle.setToolTipText(resourceMap.getString(\"babySurnameStyle.toolTipText\"));\n+            pnlBabySurnameStyle.add(comboBabySurnameStyle);\n+            gridBagConstraints.gridy = ++gridy;\n+            panFamily.add(pnlBabySurnameStyle, gridBagConstraints);\n+\n+            chkUseParentage = new JCheckBox(resourceMap.getString(\"useParentage.text\"));\n+            chkUseParentage.setSelected(options.useParentage());\n+            gridBagConstraints.gridy = ++gridy;\n+            panFamily.add(chkUseParentage, gridBagConstraints);\n+\n+            DefaultComboBoxModel<String> familyLevelStatusModel = new DefaultComboBoxModel<>();\n+            familyLevelStatusModel.addElement(resourceMap.getString(\"displayFamilyLevel.ParentsChildren\"));\n+            familyLevelStatusModel.addElement(resourceMap.getString(\"displayFamilyLevel.GrandparentsGrandchildren\"));\n+            familyLevelStatusModel.addElement(resourceMap.getString(\"displayFamilyLevel.AuntsUnclesCousins\"));\n+            comboDisplayFamilyLevel = new JComboBox<>(familyLevelStatusModel);\n+            comboDisplayFamilyLevel.setSelectedIndex(options.displayFamilyLevel());\n+            JPanel pnlDisplayFamilyLevel = new JPanel();\n+            pnlDisplayFamilyLevel.add(new JLabel(resourceMap.getString(\"displayFamilyLevel.text\")));\n+            pnlDisplayFamilyLevel.setToolTipText(resourceMap.getString(\"displayFamilyLevel.toolTipText\"));\n+            pnlDisplayFamilyLevel.add(comboDisplayFamilyLevel);\n+            gridBagConstraints.gridy = ++gridy;\n+            panFamily.add(pnlDisplayFamilyLevel, gridBagConstraints);\n+\n+            chkUseRandomDeaths = new JCheckBox(resourceMap.getString(\"useRandomDeaths.text\"));\n+            chkUseRandomDeaths.setToolTipText(resourceMap.getString(\"useRandomDeaths.toolTipText\"));\n+            chkUseRandomDeaths.setSelected(options.useRandomDeaths());\n+            gridBagConstraints.gridy = ++gridy;\n+            panFamily.add(chkUseRandomDeaths, gridBagConstraints);\n+\n+            chkKeepMarriedNameUponSpouseDeath = new JCheckBox(resourceMap.getString(\"keepMarriedNameUponSpouseDeath.text\"));\n+            chkKeepMarriedNameUponSpouseDeath.setSelected(options.getKeepMarriedNameUponSpouseDeath());\n+            gridBagConstraints.gridy = ++gridy;\n+            panFamily.add(chkKeepMarriedNameUponSpouseDeath, gridBagConstraints);\n+\n+            gridBagConstraints.gridy = panFamilyGridY;\n+            panPersonnel.add(panFamily, gridBagConstraints);\n+\n+            //Salary\n+            JPanel panSalary = new JPanel(new GridBagLayout());\n+            panSalary.setBorder(BorderFactory.createTitledBorder(resourceMap.getString(\"SalaryTab.text\")));\n+\n+            JPanel panMultiplier = new JPanel(new GridLayout(1, 3));\n+            panMultiplier.setBorder(BorderFactory.createTitledBorder(\"Multipliers\"));\n+            spnSalaryCommission = new JSpinner(new SpinnerNumberModel(options.getSalaryCommissionMultiplier(), 0, 10, 0.05));\n+            ((JSpinner.DefaultEditor) spnSalaryCommission.getEditor()).getTextField().setEditable(false);\n+            JPanel panSalaryCommission = new JPanel();\n+            panSalaryCommission.add(spnSalaryCommission);\n+            panSalaryCommission.add(new JLabel(\"Commissioned\"));\n+            panMultiplier.add(panSalaryCommission);\n+\n+            spnSalaryEnlisted = new JSpinner(new SpinnerNumberModel(options.getSalaryEnlistedMultiplier(), 0, 10, 0.05));\n+            ((JSpinner.DefaultEditor) spnSalaryEnlisted.getEditor()).getTextField().setEditable(false);\n+            JPanel panSalaryEnlisted = new JPanel();\n+            panSalaryEnlisted.add(spnSalaryEnlisted);\n+            panSalaryEnlisted.add(new JLabel(\"Enlisted\"));\n+            panMultiplier.add(panSalaryEnlisted);\n+\n+            spnSalaryAntiMek = new JSpinner(new SpinnerNumberModel(options.getSalaryAntiMekMultiplier(), 0, 10, 0.05));\n+            ((JSpinner.DefaultEditor) spnSalaryAntiMek.getEditor()).getTextField().setEditable(false);\n+            JPanel panSalaryAntiMek = new JPanel();\n+            panSalaryAntiMek.add(spnSalaryAntiMek);\n+            panSalaryAntiMek.add(new JLabel(\"Anti-Mek\"));\n+            panMultiplier.add(panSalaryAntiMek);\n \n-        JPanel panAllTypes = new JPanel(new GridLayout(Person.T_NUM / 2, 2));\n-        JMoneyTextField txtType;\n-        JPanel panType;\n-        // TODO: use JFormattedTextField with Numeric formatter\n-        txtSalaryBase = new JMoneyTextField[Person.T_NUM];\n-        for (int i = 1; i < Person.T_NUM; i++) {\n-            txtType = new JMoneyTextField();\n-            txtType.setMoney(options.getBaseSalary(i));\n-            txtType.setPreferredSize(new Dimension(75, 20));\n-            panType = new JPanel(new GridBagLayout());\n             gridBagConstraints = new java.awt.GridBagConstraints();\n             gridBagConstraints.gridx = 0;\n             gridBagConstraints.gridy = 0;\n             gridBagConstraints.weightx = 1.0;\n             gridBagConstraints.weighty = 0.0;\n             gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n             gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-            panType.add(new JLabel(Person.getRoleDesc(i, false)), gridBagConstraints);\n+            panSalary.add(panMultiplier, gridBagConstraints);\n+\n+            JPanel panXpMultiplier = new JPanel(new GridLayout(2, 3));\n+            panXpMultiplier.setBorder(BorderFactory.createTitledBorder(\"Experience Multipliers\"));\n+            spnSalaryXp = new JSpinner[5];\n+            JSpinner spnXpSalary;\n+            JPanel panXpSalary;\n+            for (int i = 0; i < 5; i++) {\n+                spnXpSalary = new JSpinner(new SpinnerNumberModel(options.getSalaryXpMultiplier(i), 0, 10, 0.05));\n+                ((JSpinner.DefaultEditor) spnXpSalary.getEditor()).getTextField().setEditable(false);\n+                panXpSalary = new JPanel();\n+                panXpSalary.add(spnXpSalary);\n+                panXpSalary.add(new JLabel(SkillType.getExperienceLevelName(i)));\n+                panXpMultiplier.add(panXpSalary);\n+                spnSalaryXp[i] = spnXpSalary;\n+            }\n             gridBagConstraints = new java.awt.GridBagConstraints();\n-            gridBagConstraints.gridx = 1;\n-            gridBagConstraints.gridy = 0;\n-            gridBagConstraints.weightx = 0.0;\n+            gridBagConstraints.gridx = 0;\n+            gridBagConstraints.gridy = 1;\n+            gridBagConstraints.weightx = 1.0;\n             gridBagConstraints.weighty = 0.0;\n-            gridBagConstraints.fill = java.awt.GridBagConstraints.NONE;\n+            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n             gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-            panType.add(txtType, gridBagConstraints);\n-            txtSalaryBase[i] = txtType;\n-            panAllTypes.add(panType);\n-        }\n-        JScrollPane scrSalaryBase = new JScrollPane(panAllTypes);\n-        scrSalaryBase.setBorder(BorderFactory.createTitledBorder(\"Base Salaries\"));\n-        scrSalaryBase.setOpaque(false);\n-        scrSalaryBase.setPreferredSize(new Dimension(200, 200));\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 2;\n-        gridBagConstraints.weightx = 1.0;\n-        gridBagConstraints.weighty = 1.0;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panSalary.add(scrSalaryBase, gridBagConstraints);\n+            panSalary.add(panXpMultiplier, gridBagConstraints);\n+\n+            JPanel panAllTypes = new JPanel(new GridLayout(Person.T_NUM / 2, 2));\n+            JMoneyTextField txtType;\n+            JPanel panType;\n+            // TODO: use JFormattedTextField with Numeric formatter\n+            txtSalaryBase = new JMoneyTextField[Person.T_NUM];\n+            for (int i = 1; i < Person.T_NUM; i++) {\n+                txtType = new JMoneyTextField();\n+                txtType.setMoney(options.getBaseSalary(i));\n+                txtType.setPreferredSize(new Dimension(75, 20));\n+                panType = new JPanel(new GridBagLayout());\n+                gridBagConstraints = new java.awt.GridBagConstraints();\n+                gridBagConstraints.gridx = 0;\n+                gridBagConstraints.gridy = 0;\n+                gridBagConstraints.weightx = 1.0;\n+                gridBagConstraints.weighty = 0.0;\n+                gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n+                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n+                panType.add(new JLabel(Person.getRoleDesc(i, false)), gridBagConstraints);\n+                gridBagConstraints = new java.awt.GridBagConstraints();\n+                gridBagConstraints.gridx = 1;\n+                gridBagConstraints.gridy = 0;\n+                gridBagConstraints.weightx = 0.0;\n+                gridBagConstraints.weighty = 0.0;\n+                gridBagConstraints.fill = java.awt.GridBagConstraints.NONE;\n+                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n+                panType.add(txtType, gridBagConstraints);\n+                txtSalaryBase[i] = txtType;\n+                panAllTypes.add(panType);\n+            }\n+            JScrollPane scrSalaryBase = new JScrollPane(panAllTypes);\n+            scrSalaryBase.setBorder(BorderFactory.createTitledBorder(\"Base Salaries\"));\n+            scrSalaryBase.setOpaque(false);\n+            scrSalaryBase.setPreferredSize(new Dimension(200, 200));\n+            gridBagConstraints = new java.awt.GridBagConstraints();\n+            gridBagConstraints.gridx = 0;\n+            gridBagConstraints.gridy = 2;\n+            gridBagConstraints.weightx = 1.0;\n+            gridBagConstraints.weighty = 1.0;\n+            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n+            gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n+            panSalary.add(scrSalaryBase, gridBagConstraints);\n \n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 3;\n-        gridBagConstraints.gridy = 0;\n-        gridBagConstraints.gridheight = 23;\n-        gridBagConstraints.weightx = 1.0;\n-        gridBagConstraints.weighty = 1.0;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        panPersonnel.add(panSalary, gridBagConstraints);\n+            gridBagConstraints = new java.awt.GridBagConstraints();\n+            gridBagConstraints.gridx = 3;\n+            gridBagConstraints.gridy = 0;\n+            gridBagConstraints.gridheight = 23;\n+            gridBagConstraints.weightx = 1.0;\n+            gridBagConstraints.weighty = 1.0;\n+            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n+            gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n+            panPersonnel.add(panSalary, gridBagConstraints);\n \n-        JScrollPane scrollPersonnel = new JScrollPane(panPersonnel);\n-        scrollPersonnel.setPreferredSize(new java.awt.Dimension(500, 400));\n+            JScrollPane scrollPersonnel = new JScrollPane(panPersonnel);\n+            scrollPersonnel.setPreferredSize(new java.awt.Dimension(500, 400));\n \n-        tabOptions.addTab(resourceMap.getString(\"panPersonnel.TabConstraints.tabTitle\"), scrollPersonnel); // NOI18N\n+            tabOptions.addTab(resourceMap.getString(\"panPersonnel.TabConstraints.tabTitle\"), scrollPersonnel);\n+        } catch (Exception e) {\n+            MekHQ.getLogger().error(getClass(), \"PersonnelTab\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0097883e28e931dc8b135ef875b0d6c5e34f94b4"}, "originalPosition": 1116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzODIxNg==", "bodyText": "Should this instead use spnSalaryXp.length()?", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r386138216", "createdAt": "2020-03-01T20:32:18Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/dialog/CampaignOptionsDialog.java", "diffHunk": "@@ -4786,22 +4787,75 @@ private void updateOptions() {\n         options.setProbPhenoBA((Integer) spnProbPhenoBA.getModel().getValue());\n         options.setProbPhenoVee((Integer) spnProbPhenoVee.getModel().getValue());\n \n-        //start salary\n-        for (int i = 1; i < Person.T_NUM; i++) {\n-            try {\n-                Money salary = txtSalaryBase[i].getMoney();\n-                options.setBaseSalary(salary, i);\n-            } catch (Exception ignored) {\n+        //region Personnel Tab\n \n-            }\n-        }\n-        for (int i = 0; i < 5; i++) {\n-            options.setSalaryXpMultiplier((Double) spnSalaryXp[i].getModel().getValue(), i);\n+        options.setInitBonus(useInitBonusBox.isSelected());\n+        campaign.getGameOptions().getOption(\"individual_initiative\").setValue(useInitBonusBox.isSelected());\n+        options.setToughness(useToughnessBox.isSelected());\n+        campaign.getGameOptions().getOption(\"toughness\").setValue(useToughnessBox.isSelected());\n+        options.setArtillery(useArtilleryBox.isSelected());\n+        campaign.getGameOptions().getOption(\"artillery_skill\").setValue(useArtilleryBox.isSelected());\n+        options.setAbilities(useAbilitiesBox.isSelected());\n+        campaign.getGameOptions().getOption(\"pilot_advantages\").setValue(useAbilitiesBox.isSelected());\n+        options.setEdge(useEdgeBox.isSelected());\n+        campaign.getGameOptions().getOption(\"edge\").setValue(useEdgeBox.isSelected());\n+        options.setSupportEdge(useSupportEdgeBox.isSelected());\n+        options.setImplants(useImplantsBox.isSelected());\n+        campaign.getGameOptions().getOption(\"manei_domini\").setValue(useImplantsBox.isSelected());\n+        options.setCapturePrisoners(chkCapturePrisoners.isSelected());\n+        options.setDefaultPrisonerStatus(comboPrisonerStatus.getSelectedIndex());\n+        options.setAltQualityAveraging(altQualityAveragingCheckBox.isSelected());\n+        options.setAdvancedMedical(useAdvancedMedicalBox.isSelected());\n+        options.setDylansRandomXp(useDylansRandomXpBox.isSelected());\n+        //we need to reset healing time options through the campaign because we may need to\n+        //loop through personnel to make adjustments\n+        campaign.setHealingTimeOptions((Integer) spnHealWaitingPeriod.getModel().getValue(),\n+                (Integer) spnNaturalHealWaitingPeriod.getModel().getValue());\n+        options.setMinimumHitsForVees((Integer) spnMinimumHitsForVees.getModel().getValue());\n+        options.setUseRandomHitsForVees(useRandomHitsForVees.isSelected());\n+        options.setTougherHealing(useTougherHealing.isSelected());\n+        options.setUseTransfers(chkUseTransfers.isSelected());\n+        options.setUseTimeInService(chkUseTimeInService.isSelected());\n+        options.setShowOriginFaction(chkShowOriginFaction.isSelected());\n+        options.setRandomizeOrigin(chkRandomizeOrigin.isSelected());\n+        options.setRandomizeDependentOrigin(chkRandomizeDependentsOrigin.isSelected());\n+        options.setOriginSearchRadius((Integer)spnOriginSearchRadius.getModel().getValue());\n+        //Family\n+        options.setMinimumMarriageAge((Integer) spnMinimumMarriageAge.getModel().getValue());\n+        options.setCheckMutualAncestorsDepth((Integer) spnCheckMutualAncestorsDepth.getModel().getValue());\n+        options.setUseRandomMarriages(chkUseRandomMarriages.isSelected());\n+        options.setChanceRandomMarriages((Double) spnChanceRandomMarriages.getModel().getValue());\n+        options.setMarriageAgeRange((Integer) spnMarriageAgeRange.getModel().getValue());\n+        for (int i = 0; i < Person.NUM_SURNAME; i++) {\n+            int val = (int) Math.round(((Double) spnRandomMarriageSurnameWeights[i].getModel().getValue()) * 10);\n+            options.setRandomMarriageSurnameWeight(i, val);\n         }\n+        options.setUseRandomSameSexMarriages(chkUseRandomSameSexMarriages.isSelected());\n+        options.setChanceRandomSameSexMarriages((Double) spnChanceRandomSameSexMarriages.getModel().getValue());\n+        options.setUseUnofficialProcreation(chkUseUnofficialProcreation.isSelected());\n+        options.setChanceProcreation((Double) spnChanceProcreation.getModel().getValue());\n+        options.setUseUnofficialProcreationNoRelationship(chkUseUnofficialProcreationNoRelationship.isSelected());\n+        options.setChanceProcreationNoRelationship((Double) spnChanceProcreationNoRelationship.getModel().getValue());\n+        options.setDisplayTrueDueDate(chkDisplayTrueDueDate.isSelected());\n+        options.setLogConception(chkLogConception.isSelected());\n+        options.setBabySurnameStyle(comboBabySurnameStyle.getSelectedIndex());\n+        options.setUseParentage(chkUseParentage.isSelected());\n+        options.setDisplayFamilyLevel(comboDisplayFamilyLevel.getSelectedIndex());\n+        options.setUseRandomDeaths(chkUseRandomDeaths.isSelected());\n+        options.setKeepMarriedNameUponSpouseDeath(chkKeepMarriedNameUponSpouseDeath.isSelected());\n+        //Salary\n         options.setSalaryCommissionMultiplier((Double) spnSalaryCommission.getModel().getValue());\n         options.setSalaryEnlistedMultiplier((Double) spnSalaryEnlisted.getModel().getValue());\n         options.setSalaryAntiMekMultiplier((Double) spnSalaryAntiMek.getModel().getValue());\n-        //end salary\n+        for (int i = 0; i < 5; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0097883e28e931dc8b135ef875b0d6c5e34f94b4"}, "originalPosition": 1479}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzODM1NA==", "bodyText": "Is reference equality what we want here?", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r386138354", "createdAt": "2020-03-01T20:33:53Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/adapter/PersonnelTableMouseAdapter.java", "diffHunk": "@@ -1529,39 +1397,31 @@ private void maybeShowPopup(MouseEvent e) {\n             /*\n              * if(!person.isAssigned()) { cbMenuItem.setSelected(true); }\n              */\n-            if (oneSelected && person.isActive()\n-                    && !(person.isPrisoner() || person.isBondsman())) {\n+            if (oneSelected && person.isActive() && !(person.isPrisoner() || person.isBondsman())) {\n                 for (Unit unit : gui.getCampaign().getUnits()) {\n                     if (!unit.isAvailable()) {\n                         continue;\n                     }\n                     if (unit.usesSoloPilot()) {\n-                        if (unit.canTakeMoreDrivers()\n-                                && person.canDrive(unit.getEntity())\n+                        if (unit.canTakeMoreDrivers() && person.canDrive(unit.getEntity())\n                                 && person.canGun(unit.getEntity())) {\n-                            cbMenuItem = new JCheckBoxMenuItem(\n-                                    unit.getName());\n-                            // TODO: check the box\n+                            cbMenuItem = new JCheckBoxMenuItem(unit.getName());\n                             cbMenuItem.setActionCommand(makeCommand(CMD_ADD_PILOT, unit.getId().toString()));\n                             cbMenuItem.addActionListener(this);\n                             pilotMenu.add(cbMenuItem);\n                         }\n                     } else if (unit.usesSoldiers()) {\n-                        if (unit.canTakeMoreGunners()\n-                                && person.canGun(unit.getEntity())) {\n-                            cbMenuItem = new JCheckBoxMenuItem(\n-                                    unit.getName());\n-                            // TODO: check the box\n+                        if (unit.canTakeMoreGunners() && person.canGun(unit.getEntity())) {\n+                            cbMenuItem = new JCheckBoxMenuItem(unit.getName());\n+                            cbMenuItem.setSelected(person.getUnitId() == unit.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0097883e28e931dc8b135ef875b0d6c5e34f94b4"}, "originalPosition": 940}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzODM2OQ==", "bodyText": "Is reference equality what we want here?", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r386138369", "createdAt": "2020-03-01T20:34:12Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/adapter/PersonnelTableMouseAdapter.java", "diffHunk": "@@ -1529,39 +1397,31 @@ private void maybeShowPopup(MouseEvent e) {\n             /*\n              * if(!person.isAssigned()) { cbMenuItem.setSelected(true); }\n              */\n-            if (oneSelected && person.isActive()\n-                    && !(person.isPrisoner() || person.isBondsman())) {\n+            if (oneSelected && person.isActive() && !(person.isPrisoner() || person.isBondsman())) {\n                 for (Unit unit : gui.getCampaign().getUnits()) {\n                     if (!unit.isAvailable()) {\n                         continue;\n                     }\n                     if (unit.usesSoloPilot()) {\n-                        if (unit.canTakeMoreDrivers()\n-                                && person.canDrive(unit.getEntity())\n+                        if (unit.canTakeMoreDrivers() && person.canDrive(unit.getEntity())\n                                 && person.canGun(unit.getEntity())) {\n-                            cbMenuItem = new JCheckBoxMenuItem(\n-                                    unit.getName());\n-                            // TODO: check the box\n+                            cbMenuItem = new JCheckBoxMenuItem(unit.getName());\n                             cbMenuItem.setActionCommand(makeCommand(CMD_ADD_PILOT, unit.getId().toString()));\n                             cbMenuItem.addActionListener(this);\n                             pilotMenu.add(cbMenuItem);\n                         }\n                     } else if (unit.usesSoldiers()) {\n-                        if (unit.canTakeMoreGunners()\n-                                && person.canGun(unit.getEntity())) {\n-                            cbMenuItem = new JCheckBoxMenuItem(\n-                                    unit.getName());\n-                            // TODO: check the box\n+                        if (unit.canTakeMoreGunners() && person.canGun(unit.getEntity())) {\n+                            cbMenuItem = new JCheckBoxMenuItem(unit.getName());\n+                            cbMenuItem.setSelected(person.getUnitId() == unit.getId());\n                             cbMenuItem.setActionCommand(makeCommand(CMD_ADD_SOLDIER, unit.getId().toString()));\n                             cbMenuItem.addActionListener(this);\n                             soldierMenu.add(cbMenuItem);\n                         }\n                     } else {\n-                        if (unit.canTakeMoreDrivers()\n-                                && person.canDrive(unit.getEntity())) {\n-                            cbMenuItem = new JCheckBoxMenuItem(\n-                                    unit.getName());\n-                            // TODO: check the box\n+                        if (unit.canTakeMoreDrivers() && person.canDrive(unit.getEntity())) {\n+                            cbMenuItem = new JCheckBoxMenuItem(unit.getName());\n+                            cbMenuItem.setSelected(person.getUnitId() == unit.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0097883e28e931dc8b135ef875b0d6c5e34f94b4"}, "originalPosition": 953}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzODM4Mw==", "bodyText": "Is reference equality what we want here?", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r386138383", "createdAt": "2020-03-01T20:34:25Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/adapter/PersonnelTableMouseAdapter.java", "diffHunk": "@@ -1570,30 +1430,25 @@ private void maybeShowPopup(MouseEvent e) {\n                                 driverMenu.add(cbMenuItem);\n                             }\n                         }\n-                        if (unit.canTakeMoreGunners()\n-                                && person.canGun(unit.getEntity())) {\n-                            cbMenuItem = new JCheckBoxMenuItem(\n-                                    unit.getName());\n-                            // TODO: check the box\n+                        if (unit.canTakeMoreGunners() && person.canGun(unit.getEntity())) {\n+                            cbMenuItem = new JCheckBoxMenuItem(unit.getName());\n+                            cbMenuItem.setSelected(person.getUnitId() == unit.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0097883e28e931dc8b135ef875b0d6c5e34f94b4"}, "originalPosition": 968}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzODQwOQ==", "bodyText": "I'll stop asking about that reference equality, but there's more of these.", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r386138409", "createdAt": "2020-03-01T20:34:56Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/adapter/PersonnelTableMouseAdapter.java", "diffHunk": "@@ -1570,30 +1430,25 @@ private void maybeShowPopup(MouseEvent e) {\n                                 driverMenu.add(cbMenuItem);\n                             }\n                         }\n-                        if (unit.canTakeMoreGunners()\n-                                && person.canGun(unit.getEntity())) {\n-                            cbMenuItem = new JCheckBoxMenuItem(\n-                                    unit.getName());\n-                            // TODO: check the box\n+                        if (unit.canTakeMoreGunners() && person.canGun(unit.getEntity())) {\n+                            cbMenuItem = new JCheckBoxMenuItem(unit.getName());\n+                            cbMenuItem.setSelected(person.getUnitId() == unit.getId());\n                             cbMenuItem.setActionCommand(makeCommand(CMD_ADD_GUNNER, unit.getId().toString()));\n                             cbMenuItem.addActionListener(this);\n                             gunnerMenu.add(cbMenuItem);\n                         }\n                         if (unit.canTakeMoreVesselCrew()\n                                 && ((unit.getEntity().isAero() && person.hasSkill(SkillType.S_TECH_VESSEL))\n                                     || ((unit.getEntity().isSupportVehicle() && person.hasSkill(SkillType.S_TECH_MECHANIC))))){\n-                            cbMenuItem = new JCheckBoxMenuItem(\n-                                    unit.getName());\n-                            // TODO: check the box\n+                            cbMenuItem = new JCheckBoxMenuItem(unit.getName());\n+                            cbMenuItem.setSelected(person.getUnitId() == unit.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0097883e28e931dc8b135ef875b0d6c5e34f94b4"}, "originalPosition": 980}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03879772bf1717d91704f3c4d30ec875444c8dbd", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/03879772bf1717d91704f3c4d30ec875444c8dbd", "committedDate": "2020-03-01T21:24:15Z", "message": "Fixing whitespace issues in CustomizePersonDialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "192cc2f278116b48f4d7fa89ddf0b2764ad7ec39", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/192cc2f278116b48f4d7fa89ddf0b2764ad7ec39", "committedDate": "2020-03-01T21:33:04Z", "message": "Fixing tad spaced file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bfcbea0f0bb9989d393c05b4609fb74a0c60ddd", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/3bfcbea0f0bb9989d393c05b4609fb74a0c60ddd", "committedDate": "2020-03-01T21:34:08Z", "message": "Fixing whitespace issues in MassRepairService"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aaca153caa3426d265fc4419a2d14be934e468ee", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/aaca153caa3426d265fc4419a2d14be934e468ee", "committedDate": "2020-03-01T21:38:27Z", "message": "Changes in Campaign options from review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2ODkwMDYy", "url": "https://github.com/MegaMek/mekhq/pull/1533#pullrequestreview-366890062", "createdAt": "2020-03-01T22:00:46Z", "commit": {"oid": "aaca153caa3426d265fc4419a2d14be934e468ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMjowMDo0NlrOFwQZzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMjowMDo0NlrOFwQZzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE0NDcxNw==", "bodyText": "I'll take a look at moving this into Person later tonight, as it really should just use the divorce method.", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r386144717", "createdAt": "2020-03-01T22:00:46Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -6027,8 +5959,19 @@ public void changeStatus(Person person, int status) {\n             // Don't forget to tell the spouse\n             if (person.hasSpouse()) {\n                 Person spouse = person.getSpouse();\n+\n+                spouse.addFormerSpouse(new FormerSpouse(person.getId(),\n+                        FormerSpouse.convertDateTimeToLocalDate(getDateTime()), FormerSpouse.REASON_WIDOWED));\n+                person.addFormerSpouse(new FormerSpouse(spouse.getId(),\n+                        FormerSpouse.convertDateTimeToLocalDate(getDateTime()), FormerSpouse.REASON_WIDOWED));\n+\n+                if (!getCampaignOptions().getKeepMarriedNameUponSpouseDeath() && (spouse.getMaidenName() != null)) {\n+                    spouse.setSurname(spouse.getMaidenName());\n+                }\n+\n                 PersonalLogger.spouseKia(spouse, person, getDate());\n-                spouse.setSpouseID(null);\n+                spouse.setSpouseId(null);\n+                spouse.setMaidenName(null);\n             }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aaca153caa3426d265fc4419a2d14be934e468ee"}, "originalPosition": 1238}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a378aabe9b7933431f1909179fb90ebfd3e8f8c6", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/a378aabe9b7933431f1909179fb90ebfd3e8f8c6", "committedDate": "2020-03-01T22:35:01Z", "message": "Moving spouse KIA from campaign to person"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa59bb1d507e258d665e784f933633588c567942", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/fa59bb1d507e258d665e784f933633588c567942", "committedDate": "2020-03-02T03:32:48Z", "message": "Fixing merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df4a73968754c16e9b671ff590163cb3d5764483", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/df4a73968754c16e9b671ff590163cb3d5764483", "committedDate": "2020-03-02T03:57:52Z", "message": "Changing from == to .equals for uuid comparisons"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MTYzNTYz", "url": "https://github.com/MegaMek/mekhq/pull/1533#pullrequestreview-367163563", "createdAt": "2020-03-02T12:32:56Z", "commit": {"oid": "df4a73968754c16e9b671ff590163cb3d5764483"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjozMjo1NlrOFwd4og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjozMjo1NlrOFwd4og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM2NTYwMg==", "bodyText": "Can person.getUnitId be null? If so you should swap the order as unit.getId() will always be non-null.", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r386365602", "createdAt": "2020-03-02T12:32:56Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/adapter/PersonnelTableMouseAdapter.java", "diffHunk": "@@ -1413,15 +1413,15 @@ private void maybeShowPopup(MouseEvent e) {\n                     } else if (unit.usesSoldiers()) {\n                         if (unit.canTakeMoreGunners() && person.canGun(unit.getEntity())) {\n                             cbMenuItem = new JCheckBoxMenuItem(unit.getName());\n-                            cbMenuItem.setSelected(person.getUnitId() == unit.getId());\n+                            cbMenuItem.setSelected(person.getUnitId().equals(unit.getId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df4a73968754c16e9b671ff590163cb3d5764483"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d25ea878b22f0dd083780ff013ac3ecbcb3aca8", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/7d25ea878b22f0dd083780ff013ac3ecbcb3aca8", "committedDate": "2020-03-02T16:44:28Z", "message": "Fixing order of .equals statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a109fff63fe4ce91e27d1ced80a62b58da4f331", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/6a109fff63fe4ce91e27d1ced80a62b58da4f331", "committedDate": "2020-03-02T16:50:42Z", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_Personnel_Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ec3af332bc87f0b6edf62087751a9a867370ee4", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/4ec3af332bc87f0b6edf62087751a9a867370ee4", "committedDate": "2020-03-08T02:58:11Z", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_Personnel_Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ef6226553ee151ddefa937ce20d883e2a8e9c23", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/7ef6226553ee151ddefa937ce20d883e2a8e9c23", "committedDate": "2020-03-09T17:33:17Z", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_Personnel_Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "106ed2739d3941e172f9ec5ab83d301febb1770c", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/106ed2739d3941e172f9ec5ab83d301febb1770c", "committedDate": "2020-03-09T19:53:38Z", "message": "Fixing ArrayList declaration bugs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NjY5NjE4", "url": "https://github.com/MegaMek/mekhq/pull/1533#pullrequestreview-374669618", "createdAt": "2020-03-13T23:38:07Z", "commit": {"oid": "106ed2739d3941e172f9ec5ab83d301febb1770c"}, "state": "COMMENTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMzozODowN1rOF2WDZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwMDoxMDo1NlrOF2WZ0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUyODc0MA==", "bodyText": "Is this null safe?", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r392528740", "createdAt": "2020-03-13T23:38:07Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1318,154 +1382,210 @@ public boolean recruitPerson(Person p, boolean prisoner, boolean dependent, bool\n         MekHQ.triggerEvent(new PersonNewEvent(p));\n         return true;\n     }\n+    //endregion Personnel Recruitment\n \n-    /** Adds a person to the campaign unconditionally, without paying for the person. */\n-    @Deprecated // as part of the personnel changes, 23-Feb-2020\n-    public void addPerson(Person p) {\n-        if (p == null) {\n-            return;\n-        }\n-\n-        UUID id = UUID.randomUUID();\n-        while (null != personnel.get(id)) {\n-            id = UUID.randomUUID();\n-        }\n-        p.setId(id);\n-        personnel.put(id, p);\n-\n-        //TODO: implement a boolean check based on campaign options\n-        addReport(p.getHyperlinkedName() + \" has been added to the personnel roster.\");\n-        if (p.getPrimaryRole() == Person.T_ASTECH) {\n-            astechPoolMinutes += 480;\n-            astechPoolOvertime += 240;\n-        }\n-        if (p.getSecondaryRole() == Person.T_ASTECH) {\n-            astechPoolMinutes += 240;\n-            astechPoolOvertime += 120;\n-        }\n-        String rankEntry = LogEntryController.generateRankEntryString(p);\n-\n-        p.setFreeMan();\n-        ServiceLogger.joined(p, getDate(), getName(), rankEntry);\n-        MekHQ.triggerEvent(new PersonNewEvent(p));\n-    }\n-\n+    //region Bloodnames\n     /**\n-     * Imports a {@link Person} into a campaign.\n-     * @param p A {@link Person} to import into the campaign.\n+     * If the person does not already have a bloodname, assigns a chance of having one based on\n+     * skill and rank. If the roll indicates there should be a bloodname, one is assigned as\n+     * appropriate to the person's phenotype and the player's faction.\n+     *\n+     * @param person       The Bloodname candidate\n+     * @param type         The phenotype index\n      */\n-    @Deprecated // as part of the personnel changes, 23-Feb-2020\n-    public void importPerson(Person p) {\n-        addPersonWithoutId(p);\n-    }\n-\n-    @Deprecated // as part of the personnel changes, 23-Feb-2020\n-    private void addPersonWithoutId(Person p) {\n-        personnel.put(p.getId(), p);\n-        MekHQ.triggerEvent(new PersonNewEvent(p));\n+    public void checkBloodnameAdd(Person person, int type) {\n+        checkBloodnameAdd(person, type, false, this.factionCode);\n     }\n \n     /**\n-     * Imports an {@link Ancestors} into a campaign.\n-     * @param a An {@link Ancestors} to import into the campaign.\n+     * If the person does not already have a bloodname, assigns a chance of having one based on\n+     * skill and rank. If the roll indicates there should be a bloodname, one is assigned as\n+     * appropriate to Clan and phenotype.\n+     *\n+     * @param person       The Bloodname candidate\n+     * @param type         The phenotype index\n+     * @param factionCode  The shortName of the faction the person belongs to. Note that there\n+     *                     is a chance of having a Bloodname that is unique to a different Clan\n+     *                     as this person could have been captured.\n      */\n-    public void importAncestors(Ancestors a) {\n-        addAncestorsWithoutId(a);\n-    }\n-\n-    private void addAncestorsWithoutId(Ancestors a) {\n-        ancestors.put(a.getId(), a);\n-    }\n-\n-    public void addPersonWithoutId(Person p, boolean log) {\n-        while((null == p.getId()) || (null != personnel.get(p.getId()))) {\n-            p.setId(UUID.randomUUID());\n-        }\n-        addPersonWithoutId(p);\n-        if (log) {\n-            addReport(p.getHyperlinkedName() + \" has been added to the personnel roster.\");\n-        }\n-        if (p.getPrimaryRole() == Person.T_ASTECH) {\n-            astechPoolMinutes += 480;\n-            astechPoolOvertime += 240;\n-        }\n-        if (p.getSecondaryRole() == Person.T_ASTECH) {\n-            astechPoolMinutes += 240;\n-            astechPoolOvertime += 120;\n-        }\n-        String rankEntry = LogEntryController.generateRankEntryString(p);\n-        ServiceLogger.joined(p, getDate(), getName(), rankEntry);\n-    }\n-\n-    @Deprecated\n-    public Date getDate() {\n-        return calendar.getTime();\n-    }\n-\n-    public DateTime getDateTime() {\n-        return currentDateTime;\n-    }\n-\n-    public Collection<Person> getPersonnel() {\n-        return personnel.values();\n+    public void checkBloodnameAdd(Person person, int type, String factionCode) {\n+        checkBloodnameAdd(person, type, false, factionCode);\n     }\n \n     /**\n-     * Provides a filtered list of personnel including only active Persons.\n-     * @return ArrayList<Person>\n+     * If the person does not already have a bloodname, assigns a chance of having one based on\n+     * skill and rank. If the roll indicates there should be a bloodname, one is assigned as\n+     * appropriate to the person's phenotype and the player's faction.\n+     *\n+     * @param person       The Bloodname candidate\n+     * @param type         The phenotype index\n+     * @param ignoreDice   If true, skips the random roll and assigns a Bloodname automatically\n      */\n-    public ArrayList<Person> getActivePersonnel() {\n-        ArrayList<Person> activePersonnel = new ArrayList<>();\n-        for (Person p : getPersonnel()) {\n-            if (p.isActive()) {activePersonnel.add(p);}\n-        }\n-        return activePersonnel;\n-    }\n-\n-    public Iterable<Ancestors> getAncestors() {\n-        return ancestors.values();\n-    }\n-\n-    /** @return a matching ancestors entry for the arguments, or null if there isn't any */\n-    public Ancestors getAncestors(UUID fatherId, UUID motherId) {\n-        for(Map.Entry<UUID, Ancestors> m : ancestors.entrySet()) {\n-            Ancestors a = m.getValue();\n-            if(Objects.equals(fatherId, a.getFatherId()) && Objects.equals(motherId, a.getMotherId())) {\n-                return a;\n-            }\n-        }\n-        return null;\n+    public void checkBloodnameAdd(Person person, int type, boolean ignoreDice) {\n+        checkBloodnameAdd(person, type, ignoreDice, this.factionCode);\n     }\n \n-    public ArrayList<Person> getPatients() {\n-        ArrayList<Person> patients = new ArrayList<>();\n-        for (Person p : getPersonnel()) {\n-            if (p.needsFixing()\n-                    || (getCampaignOptions().useAdvancedMedical() && p.hasInjuries(true) && p.isActive())) {\n-                patients.add(p);\n+    /**\n+     * If the person does not already have a bloodname, assigns a chance of having one based on\n+     * skill and rank. If the roll indicates there should be a bloodname, one is assigned as\n+     * appropriate to Clan and phenotype.\n+     *\n+     * @param person       The Bloodname candidate\n+     * @param type         The phenotype index\n+     * @param ignoreDice   If true, skips the random roll and assigns a Bloodname automatically\n+     * @param factionCode  The shortName of the faction the person belongs to. Note that there\n+     *                     is a chance of having a Bloodname that is unique to a different Clan\n+     *                     as this person could have been captured.\n+     */\n+    public void checkBloodnameAdd(Person person, int type, boolean ignoreDice, String factionCode) {\n+        // Person already has a bloodname?\n+        if (person.getBloodname().length() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "106ed2739d3941e172f9ec5ab83d301febb1770c"}, "originalPosition": 399}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUyODc5NQ==", "bodyText": "Should these be AUTOMATIC_FAIL?", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r392528795", "createdAt": "2020-03-13T23:38:29Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1318,154 +1382,210 @@ public boolean recruitPerson(Person p, boolean prisoner, boolean dependent, bool\n         MekHQ.triggerEvent(new PersonNewEvent(p));\n         return true;\n     }\n+    //endregion Personnel Recruitment\n \n-    /** Adds a person to the campaign unconditionally, without paying for the person. */\n-    @Deprecated // as part of the personnel changes, 23-Feb-2020\n-    public void addPerson(Person p) {\n-        if (p == null) {\n-            return;\n-        }\n-\n-        UUID id = UUID.randomUUID();\n-        while (null != personnel.get(id)) {\n-            id = UUID.randomUUID();\n-        }\n-        p.setId(id);\n-        personnel.put(id, p);\n-\n-        //TODO: implement a boolean check based on campaign options\n-        addReport(p.getHyperlinkedName() + \" has been added to the personnel roster.\");\n-        if (p.getPrimaryRole() == Person.T_ASTECH) {\n-            astechPoolMinutes += 480;\n-            astechPoolOvertime += 240;\n-        }\n-        if (p.getSecondaryRole() == Person.T_ASTECH) {\n-            astechPoolMinutes += 240;\n-            astechPoolOvertime += 120;\n-        }\n-        String rankEntry = LogEntryController.generateRankEntryString(p);\n-\n-        p.setFreeMan();\n-        ServiceLogger.joined(p, getDate(), getName(), rankEntry);\n-        MekHQ.triggerEvent(new PersonNewEvent(p));\n-    }\n-\n+    //region Bloodnames\n     /**\n-     * Imports a {@link Person} into a campaign.\n-     * @param p A {@link Person} to import into the campaign.\n+     * If the person does not already have a bloodname, assigns a chance of having one based on\n+     * skill and rank. If the roll indicates there should be a bloodname, one is assigned as\n+     * appropriate to the person's phenotype and the player's faction.\n+     *\n+     * @param person       The Bloodname candidate\n+     * @param type         The phenotype index\n      */\n-    @Deprecated // as part of the personnel changes, 23-Feb-2020\n-    public void importPerson(Person p) {\n-        addPersonWithoutId(p);\n-    }\n-\n-    @Deprecated // as part of the personnel changes, 23-Feb-2020\n-    private void addPersonWithoutId(Person p) {\n-        personnel.put(p.getId(), p);\n-        MekHQ.triggerEvent(new PersonNewEvent(p));\n+    public void checkBloodnameAdd(Person person, int type) {\n+        checkBloodnameAdd(person, type, false, this.factionCode);\n     }\n \n     /**\n-     * Imports an {@link Ancestors} into a campaign.\n-     * @param a An {@link Ancestors} to import into the campaign.\n+     * If the person does not already have a bloodname, assigns a chance of having one based on\n+     * skill and rank. If the roll indicates there should be a bloodname, one is assigned as\n+     * appropriate to Clan and phenotype.\n+     *\n+     * @param person       The Bloodname candidate\n+     * @param type         The phenotype index\n+     * @param factionCode  The shortName of the faction the person belongs to. Note that there\n+     *                     is a chance of having a Bloodname that is unique to a different Clan\n+     *                     as this person could have been captured.\n      */\n-    public void importAncestors(Ancestors a) {\n-        addAncestorsWithoutId(a);\n-    }\n-\n-    private void addAncestorsWithoutId(Ancestors a) {\n-        ancestors.put(a.getId(), a);\n-    }\n-\n-    public void addPersonWithoutId(Person p, boolean log) {\n-        while((null == p.getId()) || (null != personnel.get(p.getId()))) {\n-            p.setId(UUID.randomUUID());\n-        }\n-        addPersonWithoutId(p);\n-        if (log) {\n-            addReport(p.getHyperlinkedName() + \" has been added to the personnel roster.\");\n-        }\n-        if (p.getPrimaryRole() == Person.T_ASTECH) {\n-            astechPoolMinutes += 480;\n-            astechPoolOvertime += 240;\n-        }\n-        if (p.getSecondaryRole() == Person.T_ASTECH) {\n-            astechPoolMinutes += 240;\n-            astechPoolOvertime += 120;\n-        }\n-        String rankEntry = LogEntryController.generateRankEntryString(p);\n-        ServiceLogger.joined(p, getDate(), getName(), rankEntry);\n-    }\n-\n-    @Deprecated\n-    public Date getDate() {\n-        return calendar.getTime();\n-    }\n-\n-    public DateTime getDateTime() {\n-        return currentDateTime;\n-    }\n-\n-    public Collection<Person> getPersonnel() {\n-        return personnel.values();\n+    public void checkBloodnameAdd(Person person, int type, String factionCode) {\n+        checkBloodnameAdd(person, type, false, factionCode);\n     }\n \n     /**\n-     * Provides a filtered list of personnel including only active Persons.\n-     * @return ArrayList<Person>\n+     * If the person does not already have a bloodname, assigns a chance of having one based on\n+     * skill and rank. If the roll indicates there should be a bloodname, one is assigned as\n+     * appropriate to the person's phenotype and the player's faction.\n+     *\n+     * @param person       The Bloodname candidate\n+     * @param type         The phenotype index\n+     * @param ignoreDice   If true, skips the random roll and assigns a Bloodname automatically\n      */\n-    public ArrayList<Person> getActivePersonnel() {\n-        ArrayList<Person> activePersonnel = new ArrayList<>();\n-        for (Person p : getPersonnel()) {\n-            if (p.isActive()) {activePersonnel.add(p);}\n-        }\n-        return activePersonnel;\n-    }\n-\n-    public Iterable<Ancestors> getAncestors() {\n-        return ancestors.values();\n-    }\n-\n-    /** @return a matching ancestors entry for the arguments, or null if there isn't any */\n-    public Ancestors getAncestors(UUID fatherId, UUID motherId) {\n-        for(Map.Entry<UUID, Ancestors> m : ancestors.entrySet()) {\n-            Ancestors a = m.getValue();\n-            if(Objects.equals(fatherId, a.getFatherId()) && Objects.equals(motherId, a.getMotherId())) {\n-                return a;\n-            }\n-        }\n-        return null;\n+    public void checkBloodnameAdd(Person person, int type, boolean ignoreDice) {\n+        checkBloodnameAdd(person, type, ignoreDice, this.factionCode);\n     }\n \n-    public ArrayList<Person> getPatients() {\n-        ArrayList<Person> patients = new ArrayList<>();\n-        for (Person p : getPersonnel()) {\n-            if (p.needsFixing()\n-                    || (getCampaignOptions().useAdvancedMedical() && p.hasInjuries(true) && p.isActive())) {\n-                patients.add(p);\n+    /**\n+     * If the person does not already have a bloodname, assigns a chance of having one based on\n+     * skill and rank. If the roll indicates there should be a bloodname, one is assigned as\n+     * appropriate to Clan and phenotype.\n+     *\n+     * @param person       The Bloodname candidate\n+     * @param type         The phenotype index\n+     * @param ignoreDice   If true, skips the random roll and assigns a Bloodname automatically\n+     * @param factionCode  The shortName of the faction the person belongs to. Note that there\n+     *                     is a chance of having a Bloodname that is unique to a different Clan\n+     *                     as this person could have been captured.\n+     */\n+    public void checkBloodnameAdd(Person person, int type, boolean ignoreDice, String factionCode) {\n+        // Person already has a bloodname?\n+        if (person.getBloodname().length() > 0) {\n+            int result = JOptionPane.showConfirmDialog(null,\n+                    person.getFullName() + \" already has the bloodname \" + person.getBloodname()\n+                            + \"\\nDo you wish to remove that bloodname and generate a new one?\",\n+                    \"Already Has Bloodname\", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);\n+            if (result == JOptionPane.NO_OPTION) {\n+                return;\n             }\n         }\n-        return patients;\n-    }\n \n-    public ArrayList<Unit> getServiceableUnits() {\n-        ArrayList<Unit> service = new ArrayList<>();\n-        for (Unit u : getUnits()) {\n-            if (!u.isAvailable()) {\n-                continue;\n-            }\n-            if (u.isServiceable()) {\n-                service.add(u);\n-            }\n-        }\n-        return service;\n-    }\n+        // Go ahead and generate a new bloodname\n+        if (person.isClanner() && person.getPhenotype() != Person.PHENOTYPE_NONE) {\n+            int bloodnameTarget = 6;\n+            switch (person.getPhenotype()) {\n+                case Person.PHENOTYPE_MW:\n+                    bloodnameTarget += person.hasSkill(SkillType.S_GUN_MECH)\n+                            ? person.getSkill(SkillType.S_GUN_MECH).getFinalSkillValue()\n+                            : 13;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "106ed2739d3941e172f9ec5ab83d301febb1770c"}, "originalPosition": 430}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUyOTI5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (p.isActive()) {activePersonnel.add(p);}\n          \n          \n            \n                        if (p.isActive()) {\n          \n          \n            \n                            activePersonnel.add(p);\n          \n          \n            \n                        }", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r392529293", "createdAt": "2020-03-13T23:40:54Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1480,6 +1600,120 @@ public Ancestors createAncestors(UUID father, UUID mother) {\n         ancestors.put(na.getId(), na);\n         return na;\n     }\n+    //endregion Ancestors\n+\n+    //region Other Personnel Methods\n+    /**\n+     * Imports a {@link Person} into a campaign.\n+     * @param p A {@link Person} to import into the campaign.\n+     */\n+    public void importPerson(Person p) {\n+        personnel.put(p.getId(), p);\n+        MekHQ.triggerEvent(new PersonNewEvent(p));\n+    }\n+\n+    public Person getPerson(UUID id) {\n+        if (id == null) {\n+            return null;\n+        }\n+        return personnel.get(id);\n+    }\n+\n+    public Collection<Person> getPersonnel() {\n+        return personnel.values();\n+    }\n+\n+    /**\n+     * Provides a filtered list of personnel including only active Persons.\n+     * @return List<Person>\n+     */\n+    public List<Person> getActivePersonnel() {\n+        List<Person> activePersonnel = new ArrayList<>();\n+        for (Person p : getPersonnel()) {\n+            if (p.isActive()) {activePersonnel.add(p);}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "106ed2739d3941e172f9ec5ab83d301febb1770c"}, "originalPosition": 602}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzMDAzNA==", "bodyText": "These all need documentation.", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r392530034", "createdAt": "2020-03-13T23:45:15Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/CampaignOptions.java", "diffHunk": "@@ -792,28 +712,549 @@ public void setImplants(boolean b) {\n         this.useImplants = b;\n     }\n \n-\tpublic boolean useAltQualityAveraging() {\n-\t\treturn altQualityAveraging;\n-\t}\n+    public boolean capturePrisoners() {\n+        return capturePrisoners;\n+    }\n \n-\tpublic void setAltQualityAveraging(boolean altQualityAveraging) {\n-\t\tthis.altQualityAveraging = altQualityAveraging;\n-\t}\n+    public void setCapturePrisoners(boolean b) {\n+        capturePrisoners = b;\n+    }\n+\n+    public int getDefaultPrisonerStatus() {\n+        return defaultPrisonerStatus;\n+    }\n+\n+    public void setDefaultPrisonerStatus(int d) {\n+        defaultPrisonerStatus = d;\n+    }\n+\n+    public boolean useAltQualityAveraging() {\n+        return altQualityAveraging;\n+    }\n+\n+    public void setAltQualityAveraging(boolean altQualityAveraging) {\n+        this.altQualityAveraging = altQualityAveraging;\n+    }\n \n     public boolean useAdvancedMedical() {\n         return useAdvancedMedical;\n     }\n \n-    public void setAdvancedMedical(boolean b) {\n-        this.useAdvancedMedical = b;\n+    public void setAdvancedMedical(boolean b) {\n+        this.useAdvancedMedical = b;\n+    }\n+\n+    public boolean useDylansRandomXp() {\n+        return useDylansRandomXp;\n+    }\n+\n+    public void setDylansRandomXp(boolean b) {\n+        this.useDylansRandomXp = b;\n+    }\n+\n+    public int getHealingWaitingPeriod() {\n+        return healWaitingPeriod;\n+    }\n+\n+    public void setHealingWaitingPeriod(int d) {\n+        healWaitingPeriod = d;\n+    }\n+\n+    public int getNaturalHealingWaitingPeriod() {\n+        return naturalHealingWaitingPeriod;\n+    }\n+\n+    public void setNaturalHealingWaitingPeriod(int d) {\n+        naturalHealingWaitingPeriod = d;\n+    }\n+\n+    public int getMinimumHitsForVees() {\n+        return minimumHitsForVees;\n+    }\n+\n+    public void setMinimumHitsForVees(int d) {\n+        minimumHitsForVees = d;\n+    }\n+\n+    public boolean useRandomHitsForVees() {\n+        return useRandomHitsForVees;\n+    }\n+\n+    public void setUseRandomHitsForVees(boolean b) {\n+        useRandomHitsForVees = b;\n+    }\n+\n+    public boolean useTougherHealing() {\n+        return tougherHealing;\n+    }\n+\n+    public void setTougherHealing(boolean b) {\n+        tougherHealing = b;\n+    }\n+\n+    public boolean useTransfers() {\n+        return useTransfers;\n+    }\n+\n+    public void setUseTransfers(boolean b) {\n+        useTransfers = b;\n+    }\n+\n+    public boolean getUseTimeInService() {\n+        return useTimeInService;\n+    }\n+\n+    public void setUseTimeInService(boolean b) {\n+        useTimeInService = b;\n+    }\n+\n+    /**\n+     * Gets a value indicating whether or not to show a person's\n+     * origin faction when displaying their details.\n+     */\n+    public boolean showOriginFaction() {\n+        return showOriginFaction;\n+    }\n+\n+    /**\n+     * Sets a value indicating whether or not to show a person's\n+     * origin faction when displaying their details.\n+     */\n+    public void setShowOriginFaction(boolean b) {\n+        showOriginFaction = b;\n+    }\n+\n+    /**\n+     * Gets a value indicating whether or not to randomize the\n+     * origin of personnel.\n+     */\n+    public boolean randomizeOrigin() {\n+        return randomizeOrigin;\n+    }\n+\n+    /**\n+     * Sets a value indicating whether or not to randomize\n+     * the origin of personnel.\n+     * @param b true for randomize, otherwise false\n+     */\n+    public void setRandomizeOrigin(boolean b) {\n+        randomizeOrigin = b;\n+    }\n+\n+    /**\n+     * Gets a value indicating whether or not to randomize the origin of dependents\n+     */\n+    public boolean getRandomizeDependentOrigin() {\n+        return randomizeDependentOrigin;\n+    }\n+\n+    /**\n+     * Sets a value indicating whether or not to randomize the origin of dependents\n+     * @param b true for randomize, otherwise false\n+     */\n+    public void setRandomizeDependentOrigin(boolean b) {\n+        randomizeDependentOrigin = b;\n+    }\n+\n+    /**\n+     * Gets the search radius to use for randomizing\n+     * personnel origins.\n+     */\n+    public int getOriginSearchRadius() {\n+        return originSearchRadius;\n+    }\n+\n+    /**\n+     * Sets the search radius to use for randomizing\n+     * personnel origins.\n+     * @param r The search radius.\n+     */\n+    public void setOriginSearchRadius(int r) {\n+        originSearchRadius = r;\n+    }\n+\n+    /**\n+     * Gets a value indicating whether or not to randomize\n+     * origin to the planetary level, rather than just the\n+     * system level.\n+     */\n+    public boolean isOriginExtraRandom() {\n+        return isOriginExtraRandom;\n+    }\n+\n+    /**\n+     * Sets a value indicating whether or not to randomize\n+     * origin to the planetary level, rather than just the\n+     * system level.\n+     */\n+    public void setOriginExtraRandom(boolean b) {\n+        isOriginExtraRandom = b;\n+    }\n+\n+    /**\n+     * Gets the distance scale factor to apply when weighting\n+     * random origin planets.\n+     */\n+    public double getOriginDistanceScale() {\n+        return originDistanceScale;\n+    }\n+\n+    /**\n+     * Sets the distance scale factor to apply when weighting\n+     * random origin planets (should be between 0.1 and 2).\n+     */\n+    public void setOriginDistanceScale(double v) {\n+        originDistanceScale = v;\n+    }\n+\n+    //region family\n+    public int getMinimumMarriageAge() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "106ed2739d3941e172f9ec5ab83d301febb1770c"}, "originalPosition": 693}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzMDcxNg==", "bodyText": "?", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r392530716", "createdAt": "2020-03-13T23:48:55Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -165,31 +148,73 @@\n \n     public PersonAwardController awardController;\n \n-    private static final IntSupplier PREGNANCY_DURATION = () -> {\n+    //region Family Variables\n+    // Lineage\n+    protected UUID ancestorsId;\n+    protected UUID spouse;\n+    protected List<FormerSpouse> formerSpouses;\n+\n+    //region Procreation\n+    protected GregorianCalendar dueDate;\n+    protected GregorianCalendar expectedDueDate;\n+\n+    private static final int PREGNANCY_STANDARD_DURATION = 268; //standard duration of a pregnancy in days\n+\n+    // This creates a random range of approximately six weeks with which to modify the standard pregnancy duration\n+    // To create randomized pregnancy duration\n+    private static final IntSupplier PREGNANCY_MODIFY_DURATION = () -> {\n         double gaussian = Math.sqrt(-2 * Math.log(Math.nextUp(Math.random())))\n             * Math.cos(2.0 * Math.PI * Math.random());\n         // To not get weird results, we limit the values to +/- 4.0 (almost 6 weeks)\n-        gaussian = Math.max(-4.0, Math.min(4.0, gaussian));\n-        return (int) Math.round(gaussian * 10 + 38 * 7);\n+        return (int) Math.round(Math.max(-4.0, Math.min(4.0, gaussian)) * 10);\n     };\n+\n     private static final IntSupplier PREGNANCY_SIZE = () -> {\n         int children = 1;\n         // Hellin's law says it's 1:89 chance, to not make it appear too seldom, we use 1:50\n         while(Compute.randomInt(50) == 0) {\n             ++ children;\n         }\n-        return Math.min(children, 8); // Limit to octuplets, for the sake of sanity\n+        return Math.min(children, 10); // Limit to decuplets, for the sake of sanity", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "106ed2739d3941e172f9ec5ab83d301febb1770c"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzMTIzMw==", "bodyText": "It would be best if the less specific constructors delegated to this, the most specific constructor.", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r392531233", "createdAt": "2020-03-13T23:51:36Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -355,62 +370,115 @@ private static String getMissionParticipatedString() {\n         OTHER_RANSOM_VALUES.put(SkillType.EXP_ELITE, Money.of(50000));\n     }\n \n+    //region Reverse Compatibility\n+    // TODO : Move these so their migration is handled locally, to free the memory space (as minimal it might be)\n+    private int oldUnitId = -1;\n+    private int oldDoctorId = -1;\n+    //v0.1.8 and earlier\n+    protected int teamId = -1;\n+    //endregion Reverse Compatibility\n+    //endregion Variable Declarations\n+\n+    //region Constructors\n     //default constructor\n-    public Person(Campaign c) {\n-        this(\"Biff the Understudy\", c);\n+    public Person(Campaign campaign) {\n+        this(Crew.UNNAMED, Crew.UNNAMED_SURNAME, campaign);\n     }\n \n-    public Person(Campaign c, String factionCode) {\n-        this(\"Biff the Understudy\", c, factionCode);\n+    public Person(Campaign campaign, String factionCode) {\n+        this(Crew.UNNAMED, Crew.UNNAMED_SURNAME, campaign, factionCode);\n     }\n \n-    public Person(String name, Campaign c) {\n-        this(name, c, c.getFactionCode());\n+    public Person(String givenName, String surname, Campaign campaign) {\n+        this(givenName, surname, campaign, campaign.getFactionCode());\n     }\n \n-    public Person(String name, Campaign c, String factionCode) {\n-        this.name = name;\n+    /**\n+     * Primary Person constructor, variables are initialized in the exact same order as they are\n+     * saved to the XML file\n+     * @param givenName     the person's given name\n+     * @param surname       the person's surname\n+     * @param campaign      the campaign this person is a part of\n+     * @param factionCode   the faction this person was borne into\n+     */\n+    public Person(String givenName, String surname, Campaign campaign, String factionCode) {\n+        // First, we assign campaign\n+        this.campaign = campaign;\n+\n+        // Then, we assign the variables in XML file order\n+        id = null;\n+        this.givenName = givenName;\n+        this.surname = surname;\n+        honorific = \"\";\n+        maidenName = null; // this is set to null to handle divorce cases\n         callsign = \"\";\n+        primaryRole = T_NONE;\n+        secondaryRole = T_NONE;\n+        primaryDesignator = DESIG_NONE;\n+        secondaryDesignator = DESIG_NONE;\n+        commander = false;\n+        dependent = false;\n+        originFaction = Faction.getFaction(factionCode);\n+        originPlanet = null;\n+        clan = originFaction.isClan();\n+        phenotype = PHENOTYPE_NONE;\n+        bloodname = \"\";\n+        biography = \"\";\n+        idleMonths = -1;\n+        ancestorsId = null;\n+        spouse = null;\n+        formerSpouses = new ArrayList<>();\n+        dueDate = null;\n+        expectedDueDate = null;\n         portraitCategory = Crew.ROOT_PORTRAIT;\n         portraitFile = Crew.PORTRAIT_NONE;\n-        portraitCategoryOverride = null;\n-        portraitFileOverride = null;\n         xp = 0;\n-        acquisitions = 0;\n-        gender = G_MALE;\n-        birthday = new GregorianCalendar(3042, Calendar.JANUARY, 1);\n+        daysToWaitForHealing = 0;\n+        gender = Crew.G_MALE;\n         rank = 0;\n         rankLevel = 0;\n-        status = S_ACTIVE;\n-        hits = 0;\n-        salary = Money.of(-1);\n-        campaign = c;\n+        rankSystem = -1;\n+        maneiDominiRank = Rank.MD_RANK_NONE;\n+        maneiDominiClass = MD_NONE;\n+        nTasks = 0;\n         doctorId = null;\n         unitId = null;\n-        oldDoctorId = -1;\n-        oldUnitId = -1;\n+        salary = Money.of(-1);\n+        status = S_ACTIVE;\n+        prisonerStatus = PRISONER_NOT;\n+        willingToDefect = false;\n+        hits = 0;\n         toughness = 0;\n-        biography = \"\";\n-        nTasks = 0;\n+        resetMinutesLeft(); // this assigns minutesLeft and overtimeLeft\n+        birthday = null;\n+        dateOfDeath = null;\n+        recruitment = null;\n+        skills = new Skills();\n+        options = new PersonnelOptions();\n+        currentEdge = 0;\n+        techUnitIds = new ArrayList<>();\n         personnelLog = new ArrayList<>();\n         missionLog = new ArrayList<>();\n-        idleMonths = -1;\n-        daysToWaitForHealing = 15;\n-        resetMinutesLeft();\n-        prisonerStatus = PRISONER_NOT;\n-        dependent = false;\n-        commander = false;\n-        isClanTech = false;\n-        techUnitIds = new ArrayList<>();\n-        phenotype = PHENOTYPE_NONE;\n-        originFaction = Faction.getFaction(factionCode);\n-        clan = originFaction.isClan();\n-        bloodname = \"\";\n-        primaryDesignator = DESIG_NONE;\n-        secondaryDesignator = DESIG_NONE;\n         awardController = new PersonAwardController(this);\n+        injuries = new ArrayList<>();\n+        founder = false;\n+        originalUnitWeight = EntityWeightClass.WEIGHT_ULTRA_LIGHT;\n+        originalUnitTech = TECH_IS1;\n+        originalUnitId = null;\n+        acquisitions = 0;\n+        extraData = null;\n+\n+        // Initialize Data based on these settings\n+        setFullName();\n     }\n \n+    public Person(String givenName, String surname, String honorific, Campaign c, String factionCode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "106ed2739d3941e172f9ec5ab83d301febb1770c"}, "originalPosition": 445}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzMTM2Nw==", "bodyText": "Is there a particular reason the variant can't be an Enum?", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r392531367", "createdAt": "2020-03-13T23:52:23Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -529,80 +582,96 @@ public void setWillingToDefect(boolean willingToDefect) {\n         this.willingToDefect = willingToDefect && (prisonerStatus == PRISONER_YES);\n     }\n \n-    public String getGenderName() {\n-        return getGenderName(gender);\n-    }\n-\n-    public static String getGenderName(int gender) {\n-        switch (gender) {\n-            case G_MALE:\n-                return \"Male\";\n-            case G_FEMALE:\n-                return \"Female\";\n-            default:\n-                return \"?\";\n-        }\n-    }\n-\n-    public String getChildGenderName() {\n-        return getChildGenderName(gender);\n-    }\n-\n-    public static String getChildGenderName(int gender) {\n-        switch (gender) {\n-            case G_MALE:\n-                return \"boy\";\n-            case G_FEMALE:\n-                return \"girl\";\n-            default:\n-                return \"?\";\n+    //region Text Getters\n+    //TODO : Rename and Localize region\n+    public String getGenderString(int variant) {\n+        return getGenderString(gender, variant);\n+    }\n+\n+    public static String getGenderString(int gender, int variant) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "106ed2739d3941e172f9ec5ab83d301febb1770c"}, "originalPosition": 521}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzMTc1NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String space = \" \";\n          \n          \n            \n                    final String space = \" \";", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r392531754", "createdAt": "2020-03-13T23:54:36Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -701,13 +783,103 @@ public void setMaidenName(String n) {\n     }\n \n     public String getFullName() {\n-        if (bloodname.length() > 0) {\n-            return name + \" \" + bloodname;\n+        return fullName;\n+    }\n+\n+    public void setFullName() {\n+        if (!StringUtil.isNullOrEmpty(givenName)) {\n+            if (isClanner()) {\n+                if (!StringUtil.isNullOrEmpty(bloodname)) {\n+                    fullName = givenName + \" \" + bloodname;\n+                } else {\n+                    fullName = givenName;\n+                }\n+            } else {\n+                if (!StringUtil.isNullOrEmpty(surname)) {\n+                    fullName = givenName + \" \" + surname;\n+                } else {\n+                    fullName = givenName;\n+                }\n+            }\n+\n+            if (!StringUtil.isNullOrEmpty(honorific)) {\n+                fullName += \" \" + honorific;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * This method is used to migrate names from being a joined name to split between given name and surname,\n+     * as part of the Personnel changes in MekHQ 0.47.4.\n+     * @param n the name to be migrated\n+     */\n+    public void migrateName(String n) {\n+        // How this works:\n+        // Takes the input name, and splits it into individual parts.\n+        // Then, it depends on whether the person is a Clanner or not.\n+        // For Clan names:\n+        // Takes the input name, and assumes that person does not have a surname\n+        // Bloodnames are assumed to have been assigned either through the\n+        // For Inner Sphere names:\n+        // Depending on the length of the resulting array, the name is processed differently\n+        // Array of length 1: the name is assumed to not have a surname, just a given name\n+        // Array of length 2: the name is assumed to be a given name and a surname\n+        // Array of length 3: the name is assumed to be a given name and two surnames\n+        // Array of length 4+: the name is assumed to be as many given names as possible and two surnames\n+        //\n+        // Then, the full name is set\n+        String space = \" \";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "106ed2739d3941e172f9ec5ab83d301febb1770c"}, "originalPosition": 781}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzMTg3OA==", "bodyText": "Can we get an example name for this area that this handles?", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r392531878", "createdAt": "2020-03-13T23:55:19Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -701,13 +783,103 @@ public void setMaidenName(String n) {\n     }\n \n     public String getFullName() {\n-        if (bloodname.length() > 0) {\n-            return name + \" \" + bloodname;\n+        return fullName;\n+    }\n+\n+    public void setFullName() {\n+        if (!StringUtil.isNullOrEmpty(givenName)) {\n+            if (isClanner()) {\n+                if (!StringUtil.isNullOrEmpty(bloodname)) {\n+                    fullName = givenName + \" \" + bloodname;\n+                } else {\n+                    fullName = givenName;\n+                }\n+            } else {\n+                if (!StringUtil.isNullOrEmpty(surname)) {\n+                    fullName = givenName + \" \" + surname;\n+                } else {\n+                    fullName = givenName;\n+                }\n+            }\n+\n+            if (!StringUtil.isNullOrEmpty(honorific)) {\n+                fullName += \" \" + honorific;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * This method is used to migrate names from being a joined name to split between given name and surname,\n+     * as part of the Personnel changes in MekHQ 0.47.4.\n+     * @param n the name to be migrated\n+     */\n+    public void migrateName(String n) {\n+        // How this works:\n+        // Takes the input name, and splits it into individual parts.\n+        // Then, it depends on whether the person is a Clanner or not.\n+        // For Clan names:\n+        // Takes the input name, and assumes that person does not have a surname\n+        // Bloodnames are assumed to have been assigned either through the\n+        // For Inner Sphere names:\n+        // Depending on the length of the resulting array, the name is processed differently\n+        // Array of length 1: the name is assumed to not have a surname, just a given name\n+        // Array of length 2: the name is assumed to be a given name and a surname\n+        // Array of length 3: the name is assumed to be a given name and two surnames\n+        // Array of length 4+: the name is assumed to be as many given names as possible and two surnames\n+        //\n+        // Then, the full name is set\n+        String space = \" \";\n+        String[] name = n.split(space);\n+\n+        if (isClanner()) {\n+            int i = 0;\n+            givenName = name[i];\n+            for (i = 1; i < name.length - 1; i++) {\n+                if (!name[i].equals(space)) {\n+                    givenName += space + name[i];\n+                }\n+            }\n+\n+            if (!(!StringUtil.isNullOrEmpty(getBloodname()) && getBloodname().equals(name[i]))) {\n+                givenName += space + name[i];\n+            }\n+\n+            surname = null;\n+        } else {\n+            if (name.length == 1) {\n+                givenName = name[0];\n+                surname = null;\n+            } else if (name.length == 2) {\n+                givenName = name[0];\n+                surname = name[1];\n+            } else if (name.length == 3) {\n+                givenName = name[0];\n+                if (name[1].equals(space)) {\n+                    surname = name[2];\n+                } else {\n+                    surname = name[1] + space + name[2];\n+                }\n+            } else if (name.length > 3) {\n+                int i = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "106ed2739d3941e172f9ec5ab83d301febb1770c"}, "originalPosition": 813}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzMjA1OQ==", "bodyText": "Any reason this can't be an Enum? I loathe all of our random integers.", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r392532059", "createdAt": "2020-03-13T23:56:13Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -1034,24 +1207,67 @@ public UUID getId() {\n         return id;\n     }\n \n-    @Nullable\n-    public UUID getSpouseID() {\n-        return spouse;\n-    }\n+    public boolean isChild() {\n+        return (getAge(campaign.getCalendar()) <= 13);\n+    }\n+\n+    //region Age Range Identification\n+    // TODO : Windchild Implement Me fully - Either add or remove in Personnel Wave 2\n+    // idea : have a method that allows you to determine what a person's age range would be, as this could be useful\n+    // in implementing a way to display ages instead of unknown for children\n+    public static final int AGE_BABY = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "106ed2739d3941e172f9ec5ab83d301febb1770c"}, "originalPosition": 871}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzMjU5NQ==", "bodyText": "Based on this comment then is CampaignOptions storing the fraction or percentage? If Percentage that should be called out in the documentation for the option. Would be more obvious given the name \"chance\" to store it as a fraction and convert to a percentage when displaying.", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r392532595", "createdAt": "2020-03-13T23:59:39Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -1060,166 +1276,420 @@ public void setDueDate(GregorianCalendar dueDate) {\n         this.dueDate = dueDate;\n     }\n \n-    public boolean isPregnant() {\n-        return dueDate != null;\n+    public GregorianCalendar getExpectedDueDate() {\n+        return expectedDueDate;\n     }\n \n-    public UUID getAncestorsId() {\n-        return ancestorsId;\n+    public void setExpectedDueDate(GregorianCalendar expectedDueDate) {\n+        this.expectedDueDate = expectedDueDate;\n     }\n \n-    public void setAncestorsId(UUID id) {\n-        ancestorsId = id;\n+    public boolean isPregnant() {\n+        return dueDate != null;\n     }\n \n-    public Ancestors getAncestors() {\n-        return campaign.getAncestors(ancestorsId);\n-    }\n+    public void procreate() {\n+        if (!isFemale() || isPregnant() || isDeployed()) {\n+            return;\n+        }\n \n-    public Person getMother() {\n-        Ancestors a = getAncestors();\n+        // Age limitations...\n+        if (!isChild() && getAge(campaign.getCalendar()) < 51) {\n+            boolean conceived = false;\n+            if (hasSpouse()) {\n+                if (!getSpouse().isDeployed() && !getSpouse().isDeadOrMIA() && !getSpouse().isChild()\n+                        && !(getSpouse().getGender() == getGender())) {\n+                    // setting is the chance that this procreation attempt will create a child, base is 0.05%\n+                    // the setting is divided by 100 because we are running a float from 0 to 1 instead of 0 to 100\n+                    conceived = (Compute.randomFloat() < (campaign.getCampaignOptions().getChanceProcreation() / 100));\n+                }\n+            } else if (campaign.getCampaignOptions().useUnofficialProcreationNoRelationship()) {\n+                // setting is the chance that this procreation attempt will create a child, base is 0.005%\n+                // the setting is divided by 100 because we are running a float from 0 to 1 instead of 0 to 100\n+                conceived = (Compute.randomFloat() < (campaign.getCampaignOptions().getChanceProcreationNoRelationship() / 100));\n+            }\n \n-        if (a != null) {\n-            return campaign.getPerson(a.getMotherId());\n+            if (conceived) {\n+                addPregnancy();\n+            }\n         }\n-        return null;\n     }\n \n-    public Person getFather() {\n-        Ancestors a = getAncestors();\n+    public void addPregnancy() {\n+        GregorianCalendar tCal = (GregorianCalendar) campaign.getCalendar().clone();\n \n-        if (a != null) {\n-            return campaign.getPerson(a.getFatherId());\n+        tCal.add(GregorianCalendar.DAY_OF_YEAR, PREGNANCY_STANDARD_DURATION);\n+        setExpectedDueDate(tCal);\n+        tCal = (GregorianCalendar) tCal.clone();\n+        tCal.add(GregorianCalendar.DAY_OF_YEAR, PREGNANCY_MODIFY_DURATION.getAsInt());\n+        setDueDate(tCal);\n+\n+        int size = PREGNANCY_SIZE.getAsInt();\n+        if (extraData == null) {\n+            extraData = new ExtraData();\n         }\n-        return null;\n+        extraData.set(PREGNANCY_CHILDREN_DATA, size);\n+        extraData.set(PREGNANCY_FATHER_DATA, (hasSpouse()) ? getSpouseId().toString() : null);\n+\n+        String sizeString = (size < PREGNANCY_MULTIPLE_NAMES.length) ? PREGNANCY_MULTIPLE_NAMES[size] : null;\n+\n+        campaign.addReport(getHyperlinkedName() + \" has conceived\" + (sizeString == null ? \"\" : (\" \" + sizeString)));\n+        if (campaign.getCampaignOptions().logConception()) {\n+            MedicalLogger.hasConceived(this, campaign.getDate(), sizeString);\n+            if (hasSpouse()) {\n+                PersonalLogger.spouseConceived(getSpouse(), getFullName(), campaign.getDate(), sizeString);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Removes a pregnancy and clears all related data from the current person\n+     */\n+    public void removePregnancy() {\n+        setDueDate(null);\n+        setExpectedDueDate(null);\n+        extraData.set(PREGNANCY_CHILDREN_DATA, null);\n+        extraData.set(PREGNANCY_FATHER_DATA, null);\n     }\n \n     public Collection<Person> birth() {\n         int size = extraData.get(PREGNANCY_CHILDREN_DATA, 1);\n         String fatherIdString = extraData.get(PREGNANCY_FATHER_DATA);\n-        UUID fatherId = (null != fatherIdString) ? UUID.fromString(fatherIdString) : getSpouseID();\n+        UUID fatherId = (fatherIdString != null) ? UUID.fromString(fatherIdString) : null;\n         Ancestors anc = campaign.getAncestors(fatherId, id);\n-        if(null == anc) {\n+        if (null == anc) {\n             anc = campaign.createAncestors(fatherId, id);\n         }\n         final UUID ancId = anc.getId();\n-        final String surname = getName().contains(\" \") ? getName().split(\" \", 2)[1] : \"\";\n+\n+        final String surname = generateBabySurname(fatherId);\n \n         // Cleanup\n-        setDueDate(null);\n-        extraData.set(PREGNANCY_CHILDREN_DATA, 0);\n-        extraData.set(PREGNANCY_FATHER_DATA, null);\n+        removePregnancy();\n \n         return IntStream.range(0, size).mapToObj(i -> {\n-            Person baby = campaign.newDependent(T_NONE);\n-            baby.setName(baby.getName().split(\" \", 2)[0] + \" \" + surname);\n+            Person baby = campaign.newDependent(T_NONE, true);\n+            baby.setSurname(surname);\n             baby.setBirthday((GregorianCalendar) campaign.getCalendar().clone());\n             UUID babyId = UUID.randomUUID();\n-            while (null != campaign.getPerson(babyId)) {\n-                babyId = UUID.randomUUID();\n-            }\n+\n             baby.setId(babyId);\n             baby.setAncestorsId(ancId);\n-            campaign.addReport(getHyperlinkedName() + \" has given birth to \" + baby.getHyperlinkedName()\n-                    + \", a baby \" + baby.getChildGenderName());\n+\n+            campaign.addReport(String.format(\"%s has given birth to %s, a baby %s!\", getHyperlinkedName(),\n+                    baby.getHyperlinkedName(), baby.getGenderString(Person.G_DESCRIPTION_BOY_GIRL)));\n             if (campaign.getCampaignOptions().logConception()) {\n                 MedicalLogger.deliveredBaby(this, baby, campaign.getDate());\n+                if (fatherId != null) {\n+                    PersonalLogger.ourChildBorn(campaign.getPerson(fatherId), baby, getFullName(), campaign.getDate());\n+                }\n             }\n             return baby;\n         }).collect(Collectors.toList());\n     }\n \n-    public void procreate() {\n-        if(!isFemale() || isPregnant()) {\n-            return;\n+    private String generateBabySurname(UUID fatherId) {\n+        if (campaign.getCampaignOptions().getBabySurnameStyle() == CampaignOptions.BABY_SURNAME_SPOUSE) {\n+            if (fatherId != null) {\n+                return campaign.getPerson(fatherId).getSurname();\n+            }\n         }\n+        return surname = getSurname();\n+    }\n+    //endregion Pregnancy\n \n-        if (!isDeployed()) {\n-            // Age limitations...\n-            if (getAge(campaign.getCalendar()) > 13 && getAge(campaign.getCalendar()) < 51) {\n-                boolean concieved = false;\n-                if (!hasSpouse() && campaign.getCampaignOptions().useUnofficialProcreationNoRelationship()) {\n-                    // 0.005% chance that this procreation attempt will create a child\n-                    concieved = (Compute.randomInt(100000) < 2);\n-                } else if (hasSpouse()) {\n-                    if (getSpouse().isActive() && !getSpouse().isDeployed() && getSpouse().getAge(campaign.getCalendar()) > 13) {\n-                        // 0.05% chance that this procreation attempt will create a child\n-                        concieved = (Compute.randomInt(10000) < 2);\n-                    }\n-                }\n+    //region Marriage\n+    /**\n+     * Determines if another person is a safe spouse for the current person\n+     * @param p the person to determine if they are a safe spouse\n+     */\n+    public boolean safeSpouse(Person p) {\n+        // Huge convoluted return statement, with the following restrictions\n+        // can't marry yourself\n+        // can't marry someone who is already married\n+        // can't marry a prisoner, unless you are also a prisoner (this is purposely left open for prisoners to marry who they want)\n+        // can't marry a person who is dead or MIA\n+        // can't marry inactive personnel (this is to show how they aren't part of the force anymore)\n+        // can't marry a close relative\n+        return (\n+                !this.equals(p)\n+                && !p.hasSpouse()\n+                && p.oldEnoughToMarry()\n+                && (!p.isPrisoner() || (p.isPrisoner() && isPrisoner()))\n+                && !p.isDeadOrMIA()\n+                && p.isActive()\n+                && ((getAncestorsId() == null)\n+                    || !campaign.getAncestors(getAncestorsId()).checkMutualAncestors(campaign.getAncestors(p.getAncestorsId())))\n+        );\n+    }\n \n-                if(concieved) {\n-                    GregorianCalendar tCal = (GregorianCalendar) campaign.getCalendar().clone();\n-                    tCal.add(GregorianCalendar.DAY_OF_YEAR, PREGNANCY_DURATION.getAsInt());\n-                    setDueDate(tCal);\n-                    int size = PREGNANCY_SIZE.getAsInt();\n-                    extraData.set(PREGNANCY_CHILDREN_DATA, size);\n-                    extraData.set(PREGNANCY_FATHER_DATA,\n-                        (hasSpouse()) ? getSpouseID().toString() : null);\n+    public boolean oldEnoughToMarry() {\n+        return (getAge(campaign.getCalendar()) >= campaign.getCampaignOptions().getMinimumMarriageAge());\n+    }\n \n-                    String sizeString = (size < PREGNANCY_MULTIPLE_NAMES.length) ? PREGNANCY_MULTIPLE_NAMES[size] : null;\n-                    if(null == sizeString) {\n-                        campaign.addReport(getHyperlinkedName()+\" has conceived\");\n-                    } else {\n-                        campaign.addReport(getHyperlinkedName()+\" has conceived \" + sizeString);\n-                    }\n-                    if (campaign.getCampaignOptions().logConception()) {\n-                        MedicalLogger.hasConceived(this, campaign.getDate(), sizeString);\n-                    }\n-                }\n+    public void randomMarriage() {\n+        // Don't attempt to generate is someone has a spouse, isn't old enough to marry,\n+        // is actively deployed, or is currently a prisoner\n+        if (hasSpouse() || !oldEnoughToMarry() || isDeployed() || isPrisoner()) {\n+            return;\n+        }\n+\n+        // setting is the chance that this attempt at finding a marriage will result in one\n+        // the setting is divided by 100 because we are running a float from 0 to 1 instead of 0 to 100\n+        if (Compute.randomFloat() < (campaign.getCampaignOptions().getChanceRandomMarriages() / 100)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "106ed2739d3941e172f9ec5ab83d301febb1770c"}, "originalPosition": 1164}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzMzY4Mw==", "bodyText": "I'm not so sure that'll help. I went through and rewrote this to use equals (as case is important in XML) and also a trie, the node name matching did not end up being a significant part of the work.", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r392533683", "createdAt": "2020-03-14T00:06:05Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -1628,8 +2190,15 @@ public static Person generateInstanceFromXML(Node wn, Campaign c, Version versio\n             for (int x = 0; x < nl.getLength(); x++) {\n                 Node wn2 = nl.item(x);\n \n-                if (wn2.getNodeName().equalsIgnoreCase(\"name\")) {\n-                    retVal.name = wn2.getTextContent();\n+                // TODO : reorder these based on what is most likely to show up, to improve load speed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "106ed2739d3941e172f9ec5ab83d301febb1770c"}, "originalPosition": 1953}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzMzc0OQ==", "bodyText": "Why not just call this once at the very end?", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r392533749", "createdAt": "2020-03-14T00:06:30Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -1644,13 +2213,13 @@ public static Person generateInstanceFromXML(Node wn, Campaign c, Version versio\n                     String systemId = wn2.getAttributes().getNamedItem(\"systemId\").getTextContent().trim();\n                     String planetId = wn2.getTextContent().trim();\n                     retVal.originPlanet = c.getSystemById(systemId).getPlanetById(planetId);\n-                } else if (wn2.getNodeName().equalsIgnoreCase(\"isClanTech\")\n-                           || wn2.getNodeName().equalsIgnoreCase(\"clan\")) {\n+                } else if (wn2.getNodeName().equalsIgnoreCase(\"clan\")) {\n                     retVal.clan = Boolean.parseBoolean(wn2.getTextContent().trim());\n                 } else if (wn2.getNodeName().equalsIgnoreCase(\"phenotype\")) {\n                     retVal.phenotype = Integer.parseInt(wn2.getTextContent());\n                 } else if (wn2.getNodeName().equalsIgnoreCase(\"bloodname\")) {\n                     retVal.bloodname = wn2.getTextContent();\n+                    retVal.setFullName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "106ed2739d3941e172f9ec5ab83d301febb1770c"}, "originalPosition": 1977}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzNDQ4MA==", "bodyText": "Is abilityString.length() == 0 not an option? (or size() == 0) ?", "url": "https://github.com/MegaMek/mekhq/pull/1533#discussion_r392534480", "createdAt": "2020-03-14T00:10:56Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -2999,39 +3536,38 @@ public void changeEdgeTrigger(String name) {\n     }\n \n     /**\n-     * This function returns an html-coded tooltip that says what edge will be used\n      *\n-     * @return\n+     * @return an html-coded tooltip that says what edge will be used\n      */\n     public String getEdgeTooltip() {\n-        String edgett = \"\";\n+        StringBuilder edgett = new StringBuilder();\n         for (Enumeration<IOption> i = getOptions(PilotOptions.EDGE_ADVANTAGES); i.hasMoreElements(); ) {\n             IOption ability = i.nextElement();\n             //yuck, it would be nice to have a more fool-proof way of identifying edge triggers\n             if (ability.getName().contains(\"edge_when\") && ability.booleanValue()) {\n-                edgett = edgett + ability.getDescription() + \"<br>\";\n+                edgett.append(ability.getDescription()).append(\"<br>\");\n             }\n         }\n-        if (edgett.equals(\"\")) {\n+        if (edgett.toString().equals(\"\")) {\n             return \"No triggers set\";\n         }\n         return \"<html>\" + edgett + \"</html>\";\n     }\n+    //endregion edge\n \n     /**\n-     * This function returns an html-coded list that says what abilities are enabled for this pilot\n      *\n-     * @return\n+     * @return an html-coded list that says what abilities are enabled for this pilot\n      */\n     public String getAbilityList(String type) {\n-        String abilityString = \"\";\n+        StringBuilder abilityString = new StringBuilder();\n         for (Enumeration<IOption> i = getOptions(type); i.hasMoreElements(); ) {\n             IOption ability = i.nextElement();\n             if (ability.booleanValue()) {\n-                abilityString = abilityString + Utilities.getOptionDisplayName(ability) + \"<br>\";\n+                abilityString.append(Utilities.getOptionDisplayName(ability)).append(\"<br>\");\n             }\n         }\n-        if (abilityString.equals(\"\")) {\n+        if (abilityString.toString().equals(\"\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "106ed2739d3941e172f9ec5ab83d301febb1770c"}, "originalPosition": 2285}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f073e3a7e2c11b039283ba4f3d2241a8bdbcd1e", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/0f073e3a7e2c11b039283ba4f3d2241a8bdbcd1e", "committedDate": "2020-03-14T00:27:56Z", "message": "Fixing formatting of activePersonnel if statement\n\nCo-Authored-By: Christopher Watford <christopher.watford@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13693ac94adbdff28e62d1272c354cb37a869c2b", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/13693ac94adbdff28e62d1272c354cb37a869c2b", "committedDate": "2020-03-14T00:38:56Z", "message": "Update MekHQ/src/mekhq/campaign/personnel/Person.java\n\nCo-Authored-By: Christopher Watford <christopher.watford@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a5e8d00fe66db92cc5c89c6cb8e24bd9663d6a1", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/7a5e8d00fe66db92cc5c89c6cb8e24bd9663d6a1", "committedDate": "2020-03-14T00:39:29Z", "message": "Fixing person primary constructor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87d878402ed18b79eb299e13b6c7e9fc0c34e4ca", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/87d878402ed18b79eb299e13b6c7e9fc0c34e4ca", "committedDate": "2020-03-14T00:39:38Z", "message": "Merge branch 'dev_Windchild_Personnel_Improvements' of https://github.com/Windchild292/mekhq into dev_Windchild_Personnel_Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93180719e581b28c7f49738bfc1bf8b88f83cbc1", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/93180719e581b28c7f49738bfc1bf8b88f83cbc1", "committedDate": "2020-03-14T01:07:22Z", "message": "Applying review changes to Personnel Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89df3eebf8e51be3c93d6fbbaeac3a926bc8636c", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/89df3eebf8e51be3c93d6fbbaeac3a926bc8636c", "committedDate": "2020-03-14T17:05:14Z", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_Personnel_Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a281a777e4e195487cad182fca2e5db0fe348e43", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/a281a777e4e195487cad182fca2e5db0fe348e43", "committedDate": "2020-03-14T17:09:09Z", "message": "Switching bloodname fail target to automatic failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54b0e55928cce7b86a440231a1c6a708385a7e47", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/54b0e55928cce7b86a440231a1c6a708385a7e47", "committedDate": "2020-03-14T18:08:01Z", "message": "Switching to saving a decimal chance value, and adding JavaDoc comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bbe64b993a62f7fdfefd0125816787d1761ce41", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/5bbe64b993a62f7fdfefd0125816787d1761ce41", "committedDate": "2020-03-16T22:50:31Z", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_Personnel_Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfa532aaa2a27b2be18a70361c44659077423b13", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/dfa532aaa2a27b2be18a70361c44659077423b13", "committedDate": "2020-03-17T13:45:13Z", "message": "Fixing merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ad6c26489923f9027cddea7ba2e2a27fb3334de", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/5ad6c26489923f9027cddea7ba2e2a27fb3334de", "committedDate": "2020-03-17T18:58:09Z", "message": "Fixing merge conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ec03b5f9da8954172e45720737774fa903e796e", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/4ec03b5f9da8954172e45720737774fa903e796e", "committedDate": "2020-03-18T19:14:54Z", "message": "Removing accidentally added imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MzQ5NTQw", "url": "https://github.com/MegaMek/mekhq/pull/1533#pullrequestreview-377349540", "createdAt": "2020-03-19T01:05:37Z", "commit": {"oid": "4ec03b5f9da8954172e45720737774fa903e796e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5b32aa7b41ce05810d3b526d6fa3c09a83c4a79", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/d5b32aa7b41ce05810d3b526d6fa3c09a83c4a79", "committedDate": "2020-01-30T19:29:16Z", "message": "Adding initial grandchildren support and improving personnel methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3571d42dcc3ff7457e8a9d03d661bbcfb634b81b", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/3571d42dcc3ff7457e8a9d03d661bbcfb634b81b", "committedDate": "2020-01-30T22:00:12Z", "message": "Adding logic to determine is a person has grandparents, grandchildren, aunts/uncles, cousins, siblings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8284f3f767294022361947d9580131ff8201743a", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/8284f3f767294022361947d9580131ff8201743a", "committedDate": "2020-02-03T14:56:31Z", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_Personnel_Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0431e0abaf1a60a747b81b5804fe69e48b179fdc", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/0431e0abaf1a60a747b81b5804fe69e48b179fdc", "committedDate": "2020-02-03T15:13:42Z", "message": "Further refactoring in Person"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c23475b733c6b628f0c2f6322d784a7065d27716", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/c23475b733c6b628f0c2f6322d784a7065d27716", "committedDate": "2020-02-03T17:58:44Z", "message": "Added first version of extended family display"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c7daae94d1c6d6f574a7b47a70fa9122d8bff07", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/4c7daae94d1c6d6f574a7b47a70fa9122d8bff07", "committedDate": "2020-02-03T19:23:55Z", "message": "Adding family resources"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1879cf3f8bdb2bee0d14ece93e47941af91c9cf8", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/1879cf3f8bdb2bee0d14ece93e47941af91c9cf8", "committedDate": "2020-02-03T19:25:10Z", "message": "Adding Family view changes to PersonViewPanel and fixing bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "104ccdf3cacfdf4283ba5d461075f4edae5af1f1", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/104ccdf3cacfdf4283ba5d461075f4edae5af1f1", "committedDate": "2020-02-03T20:27:34Z", "message": "Merge remote-tracking branch 'origin/dev_Windchild_Insomnia' into dev_Windchild_Personnel_Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b63dcaa13db88f46dde202011b157668ae7467a4", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/b63dcaa13db88f46dde202011b157668ae7467a4", "committedDate": "2020-02-03T20:35:56Z", "message": "Merge remote-tracking branch 'origin/dev_Windchild_Insomnia' into dev_Windchild_Personnel_Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c31e32c8f4b0c1ad6791ff497664dc84888249fb", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/c31e32c8f4b0c1ad6791ff497664dc84888249fb", "committedDate": "2020-02-03T23:09:55Z", "message": "Adding new Personnel Options"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f70e12b632d01112651af11c0871fc1d064abb2", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/0f70e12b632d01112651af11c0871fc1d064abb2", "committedDate": "2020-02-03T23:10:39Z", "message": "Migrating Personnel Tab to Resources File, Part 1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7aa20bbda5da4bd989472cf3220b52826a27321e", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/7aa20bbda5da4bd989472cf3220b52826a27321e", "committedDate": "2020-02-04T02:36:51Z", "message": "Adding initial personnel option changes to settings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48e93ccff66afcec2a225a47b2a251ba17d8394e", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/48e93ccff66afcec2a225a47b2a251ba17d8394e", "committedDate": "2020-02-04T17:10:33Z", "message": "Added Options for Relationship Depth and Family Display Level"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "607698b3f65d3c0974b789569ecb0c33bce74573", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/607698b3f65d3c0974b789569ecb0c33bce74573", "committedDate": "2020-02-05T01:12:10Z", "message": "Adding in FormerSpouse and options for Pregnancy percentage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1161087f90c0510a4681c9fae19fdec253c61c80", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/1161087f90c0510a4681c9fae19fdec253c61c80", "committedDate": "2020-02-05T01:14:53Z", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_Personnel_Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bff187d8f950b6470b221cb949117350b514a59e", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/bff187d8f950b6470b221cb949117350b514a59e", "committedDate": "2020-02-05T01:15:40Z", "message": "Localizing pregnancy options"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6cc5250a7c03d2d2b2cd32f8c22e8379ac49b21", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/b6cc5250a7c03d2d2b2cd32f8c22e8379ac49b21", "committedDate": "2020-02-05T02:50:51Z", "message": "Adding former spouse tracking"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "728092643ee40ce4a7cf50a307737073d48a2280", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/728092643ee40ce4a7cf50a307737073d48a2280", "committedDate": "2020-02-05T03:07:38Z", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_Personnel_Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bdd08eae4dbc05e838493c19e360081b95fa69d", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/4bdd08eae4dbc05e838493c19e360081b95fa69d", "committedDate": "2020-02-05T03:26:06Z", "message": "Added space between if and {"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1843572aa2e3936c4806f942f24b9146724d9018", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/1843572aa2e3936c4806f942f24b9146724d9018", "committedDate": "2020-02-05T21:41:40Z", "message": "Splitting names in Surname and Given Name in MekHQ"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b4505366b7872e4b4ef8a2a594e1df5f19c7ff0", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/5b4505366b7872e4b4ef8a2a594e1df5f19c7ff0", "committedDate": "2020-02-05T21:54:34Z", "message": "Trying to fix sizing in person customization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d02af3d47923c3b68f2c7ff601f566fbca5e1d41", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/d02af3d47923c3b68f2c7ff601f566fbca5e1d41", "committedDate": "2020-02-06T02:39:37Z", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_Personnel_Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3260bd4b701bd0f173d452758a8894f4f439a9d0", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/3260bd4b701bd0f173d452758a8894f4f439a9d0", "committedDate": "2020-02-06T03:11:21Z", "message": "Adding baby last name choice between father and mother"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d351ce749f162e40f71207f6067a8844a0ae0b4", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/9d351ce749f162e40f71207f6067a8844a0ae0b4", "committedDate": "2020-02-06T16:43:43Z", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_Personnel_Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9d9120047bbc7f0e0dfed376d09898b78cd90f3", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/a9d9120047bbc7f0e0dfed376d09898b78cd90f3", "committedDate": "2020-02-06T18:10:41Z", "message": "Adding baby surname support and implementing split names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bc5257ebaa9d492860ec98eace1878e9033a2dd", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/1bc5257ebaa9d492860ec98eace1878e9033a2dd", "committedDate": "2020-02-06T18:37:22Z", "message": "Enabling generateGivenNameSurnameSplit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8cfead07d93fd94d856241c969f6d85593b2735", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/d8cfead07d93fd94d856241c969f6d85593b2735", "committedDate": "2020-02-06T19:37:46Z", "message": "Bugfixing and enabling pregnancy choices up to 100%"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8126baa125b7cfce0ba02dd54eb9288b9adb3670", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/8126baa125b7cfce0ba02dd54eb9288b9adb3670", "committedDate": "2020-02-06T20:34:43Z", "message": "Added new generate version, then found it is about Crew, so commented it out"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b32870666b133c5e8ff691a45c6a6b307dea42eb", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/b32870666b133c5e8ff691a45c6a6b307dea42eb", "committedDate": "2020-02-06T23:00:26Z", "message": "Initial Bloodname changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "193c1d075a24539ff975a2ce03d2ebecf5e2475c", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/193c1d075a24539ff975a2ce03d2ebecf5e2475c", "committedDate": "2020-02-06T23:12:07Z", "message": "Reverting Person.java changes for Bloodnames to ensure that names are finished first before Bloodnames are done"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aefb66b803387b7547f0ef5c67cf39e391893f43", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/aefb66b803387b7547f0ef5c67cf39e391893f43", "committedDate": "2020-02-07T03:07:13Z", "message": "Bugfixing the first 6 parts of the Personnel Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10c4ed89604bfdaef613c484a3c7cc69a4290d4b", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/10c4ed89604bfdaef613c484a3c7cc69a4290d4b", "committedDate": "2020-02-07T03:12:33Z", "message": "Changing save format from yyyy-MMM-dd to yyyy-MM-dd"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "680b5fed370e91f9ec8eac3318523d760abfc2b4", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/680b5fed370e91f9ec8eac3318523d760abfc2b4", "committedDate": "2020-02-07T04:45:48Z", "message": "Removed unused import in MekHQ"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63e8b05f7f5d4121e3ed099d4d37ac886b1dd49c", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/63e8b05f7f5d4121e3ed099d4d37ac886b1dd49c", "committedDate": "2020-02-07T17:31:21Z", "message": "Bugfixing personnel family display, and adding initial age range ideas"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04d589a3bf4a00ea0522a9cdf182a2587fb688a0", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/04d589a3bf4a00ea0522a9cdf182a2587fb688a0", "committedDate": "2020-02-07T19:02:42Z", "message": "Adding concieved and baby born tracking to fathers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81c0153dfe3e6539f0279f96337954afe4579ff0", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/81c0153dfe3e6539f0279f96337954afe4579ff0", "committedDate": "2020-02-07T19:35:30Z", "message": "Personal review 2: applying changes and fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ab7fd4e3cf647e115b4b082db43fd161d02a475", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/0ab7fd4e3cf647e115b4b082db43fd161d02a475", "committedDate": "2020-02-08T20:54:55Z", "message": "Adding more regions to make Person easier to parse"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e90e73a2ecabdae62df8c59ef6ac2270caa20fc", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/1e90e73a2ecabdae62df8c59ef6ac2270caa20fc", "committedDate": "2020-02-08T22:19:58Z", "message": "Adding options for the next stage of Personnel Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "130726f4524c70e8f46a80bb2585a11e62cb6388", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/130726f4524c70e8f46a80bb2585a11e62cb6388", "committedDate": "2020-02-09T04:42:22Z", "message": "Adding new settings for wave 2 of Personnel Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2786357cd6ce52630e26d66dbe1bf732285e09b9", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/2786357cd6ce52630e26d66dbe1bf732285e09b9", "committedDate": "2020-02-09T16:47:28Z", "message": "Adding missed Wave 2 Personnel options"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "094857e9dd28412e4282d965dde8875f83cd128d", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/094857e9dd28412e4282d965dde8875f83cd128d", "committedDate": "2020-02-09T16:57:15Z", "message": "Adding pregnancy calculation changes for expected due dates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff856c2d778e7b52b28aa678df0369acae135f00", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/ff856c2d778e7b52b28aa678df0369acae135f00", "committedDate": "2020-02-09T16:57:54Z", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_Personnel_Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da15ffcd9e9cd8677b2ac72d6981807505c41855", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/da15ffcd9e9cd8677b2ac72d6981807505c41855", "committedDate": "2020-02-09T16:59:02Z", "message": "Merge remote-tracking branch 'origin/dev_Windchild_1261' into dev_Windchild_Personnel_Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5514283c30c10ea35fa4bd936d7570f5e056622c", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/5514283c30c10ea35fa4bd936d7570f5e056622c", "committedDate": "2020-02-09T17:09:26Z", "message": "Changing name of setting to use True Due Date, and finishing the implementation of it"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b10b0d2e16d6e3aab639903f9de7c5512ae1e23", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/3b10b0d2e16d6e3aab639903f9de7c5512ae1e23", "committedDate": "2020-02-11T16:34:18Z", "message": "Merging with latest develop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08d2ccb4398c098fa4b7873c8f6e72f6f8f96d88", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/08d2ccb4398c098fa4b7873c8f6e72f6f8f96d88", "committedDate": "2020-02-12T00:35:13Z", "message": "Adding Given Name and Surname to personnel tables, and ordering with Bloodnames"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "042e8c41708cc4903b794129f0959b826713bb31", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/042e8c41708cc4903b794129f0959b826713bb31", "committedDate": "2020-02-12T00:36:03Z", "message": "Removing unused import statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "729577d1ff90c298e8d946536edb47e6b2b6cafb", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/729577d1ff90c298e8d946536edb47e6b2b6cafb", "committedDate": "2020-02-12T01:13:57Z", "message": "Moved the minimumMarriageAge to the top of the marriage subsection to avoid confusion with random marriages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4be9e8ad4372b85e1a905b235019d75fe1d4e83", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/d4be9e8ad4372b85e1a905b235019d75fe1d4e83", "committedDate": "2020-02-12T01:17:13Z", "message": "Adding personnel wave 2 campaign option descriptions to the resources file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "874320512e7adf8de474be6f94f0c7edb131355c", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/874320512e7adf8de474be6f94f0c7edb131355c", "committedDate": "2020-02-12T01:23:25Z", "message": "Moving Mutual Ancestor depth in options to avoid random marriage confusion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d45f0c8f1e8d0876d5b25b945e40540671bf67a1", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/d45f0c8f1e8d0876d5b25b945e40540671bf67a1", "committedDate": "2020-02-12T01:47:16Z", "message": "Bugfixing display expected due date versus the true due date option"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efff230088085f646c058bd8e44d7735365e29ba", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/efff230088085f646c058bd8e44d7735365e29ba", "committedDate": "2020-02-12T01:58:20Z", "message": "Fixing Bloodname assignment on Load"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b64734c058f3945e684c104b45f2972d2fd6f86", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/1b64734c058f3945e684c104b45f2972d2fd6f86", "committedDate": "2020-02-12T02:14:26Z", "message": "Implementing the ability to revert to maiden name upon spouse death"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef912bfa298a5df09703aee87c5c86e3a5632e08", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/ef912bfa298a5df09703aee87c5c86e3a5632e08", "committedDate": "2020-02-12T02:15:08Z", "message": "Moving the maiden name reset outside of the keep married name if statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf4e563d064fb532314d2459568bbed99616df90", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/cf4e563d064fb532314d2459568bbed99616df90", "committedDate": "2020-02-12T02:35:41Z", "message": "Implementing first stages of Divorce surname changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f12dcde2bc2ebdd80fe447b6ab52a267cc0c6aa", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/5f12dcde2bc2ebdd80fe447b6ab52a267cc0c6aa", "committedDate": "2020-02-12T22:17:38Z", "message": "Adding divorce options"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e417978e47a8f757b4ea1e4bc62b52598707ccf2", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/e417978e47a8f757b4ea1e4bc62b52598707ccf2", "committedDate": "2020-02-12T22:49:51Z", "message": "Fixing spacing issue in PersonnelTab"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30f7654f5d5a1e4bb04f5378c10c7c41e2a52796", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/30f7654f5d5a1e4bb04f5378c10c7c41e2a52796", "committedDate": "2020-02-13T00:06:00Z", "message": "Removing old TODO statement in isChild"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76207d6a616eabbe84eb2183a612816d19bd1799", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/76207d6a616eabbe84eb2183a612816d19bd1799", "committedDate": "2020-02-14T14:33:22Z", "message": "Adding initial randomMarriage methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf8fa99eda987e8db4dcb1a433b5c29b994d5cc4", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/cf8fa99eda987e8db4dcb1a433b5c29b994d5cc4", "committedDate": "2020-02-14T14:34:45Z", "message": "Removing prisoners from safe spouse list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "291a16e405bf7b21d5c41682ddaec3ca615b95f3", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/291a16e405bf7b21d5c41682ddaec3ca615b95f3", "committedDate": "2020-02-15T16:08:15Z", "message": "Fixing merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f6fb0a635f0da53aea5b34a5cd4cf2aff9b465a", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/7f6fb0a635f0da53aea5b34a5cd4cf2aff9b465a", "committedDate": "2020-02-15T20:49:02Z", "message": "Applying MekHQ-side improvements after implementing extraData and gender in MegaMek"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5786cec6f97325cda0507e5d663a76553f9de9da", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/5786cec6f97325cda0507e5d663a76553f9de9da", "committedDate": "2020-02-15T21:36:29Z", "message": "Adding Bondsman hiring output as per TODO"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d8620bc6444f53181d4c72ad239e9e602287e2c", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/9d8620bc6444f53181d4c72ad239e9e602287e2c", "committedDate": "2020-02-15T22:25:28Z", "message": "1482: Fixing Time In Service for bulk hired personnel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "902ab105adc18ff9b17e1c3033269773f95166c7", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/902ab105adc18ff9b17e1c3033269773f95166c7", "committedDate": "2020-02-15T23:52:03Z", "message": "Standardizing personnel hiring in MekHQ"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90da714a3da234f6f15cb0a9aee51320719f4730", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/90da714a3da234f6f15cb0a9aee51320719f4730", "committedDate": "2020-02-16T02:38:52Z", "message": "Adding in Random Marriages, outside of the weighted surname selection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ac51deb362e1dab360ee65a614ca442610d7e23", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/7ac51deb362e1dab360ee65a614ca442610d7e23", "committedDate": "2020-02-16T14:25:12Z", "message": "Cleaning up and localizing the menu in CampaignGUI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "639ce2828ad7f77ff96c6de5c4149710d0a66c12", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/639ce2828ad7f77ff96c6de5c4149710d0a66c12", "committedDate": "2020-02-16T14:52:41Z", "message": "Removing unnecessary quotation mark from miFireAllMedics.text"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1deab60cdfde3597f23c5d68e6989570121381be", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/1deab60cdfde3597f23c5d68e6989570121381be", "committedDate": "2020-02-16T15:48:31Z", "message": "Fixing personnel family option sizes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfbdb580d965d61d1a8bfe4894c6e4581a802b78", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/bfbdb580d965d61d1a8bfe4894c6e4581a802b78", "committedDate": "2020-02-16T17:18:05Z", "message": "Localizing PersonnelTableModel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "907b1e1b043e63c17db0fc28678abdf39addd177", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/907b1e1b043e63c17db0fc28678abdf39addd177", "committedDate": "2020-02-16T17:18:49Z", "message": "1486: Fixing Export to Unit and Personnel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83945254815b5e151c38f1bc41d009a0ed8c0161", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/83945254815b5e151c38f1bc41d009a0ed8c0161", "committedDate": "2020-02-16T19:47:24Z", "message": "Moving WeightedMap to MegaMek Util and implemeting WeightedSurname choices for marriages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "974d80b27b7af29d787a3be1e2a70c99314474ec", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/974d80b27b7af29d787a3be1e2a70c99314474ec", "committedDate": "2020-02-16T20:37:08Z", "message": "Adding Surname Weights to settings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ef0a20dac15a342590da4e57469aba764174b2f", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/9ef0a20dac15a342590da4e57469aba764174b2f", "committedDate": "2020-02-16T20:37:18Z", "message": "Enabling random marriages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa750fce74108b4e46f5df07fa383ad04c3132df", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/aa750fce74108b4e46f5df07fa383ad04c3132df", "committedDate": "2020-02-16T20:57:00Z", "message": "Fixing random marriages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3220b5d5c477456d1a571b55632dc4351a850e84", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/3220b5d5c477456d1a571b55632dc4351a850e84", "committedDate": "2020-02-16T21:23:36Z", "message": "Moving Divorce code to Person, and removing duplicate UUID check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1335d1e14b921e719ba81412b8878e4c6131379c", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/1335d1e14b921e719ba81412b8878e4c6131379c", "committedDate": "2020-02-16T22:44:39Z", "message": "Refactoring MedicalViewDialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "817a424491d46aee3cacf0b1e5341d3c8ab86395", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/817a424491d46aee3cacf0b1e5341d3c8ab86395", "committedDate": "2020-02-16T22:45:53Z", "message": "Fixes and refactoring in Utilities and Person"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eabd6cc24c1a8f99ded6417fdf8adf14baa15c39", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/eabd6cc24c1a8f99ded6417fdf8adf14baa15c39", "committedDate": "2020-02-16T23:53:18Z", "message": "1492: Fixing Medical Personnel Display Null Issue and fixing bugs in random marriages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56322256b90d940b8a3ea974ab9a2de5de566906", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/56322256b90d940b8a3ea974ab9a2de5de566906", "committedDate": "2020-02-17T01:30:02Z", "message": "Implementing Crew name and gender migration, and starting to bugfix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7692538e9ef7b9ef2381bdfd5413786a914f6b8f", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/7692538e9ef7b9ef2381bdfd5413786a914f6b8f", "committedDate": "2020-02-17T01:32:26Z", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_Personnel_Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57110775d7110a4f7b19dd413707168e14dfa2bc", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/57110775d7110a4f7b19dd413707168e14dfa2bc", "committedDate": "2020-02-17T02:28:53Z", "message": "Fixed name migration for names including spaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f68879374aa1942110459419d36bea2003dae4b", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/6f68879374aa1942110459419d36bea2003dae4b", "committedDate": "2020-02-17T15:22:48Z", "message": "Initial fixes in writing and using the new gender and extraDatacrew fields in MekHQ"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a8ceb0dac8a422f28898d735593ae3a62dc6867", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/5a8ceb0dac8a422f28898d735593ae3a62dc6867", "committedDate": "2020-02-17T15:23:57Z", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_Personnel_Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47f51e137f134dc182751bd55e50f7a718776a7b", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/47f51e137f134dc182751bd55e50f7a718776a7b", "committedDate": "2020-02-17T16:17:27Z", "message": "Changing newPerson to use a set gender or randomize based on a single value, so that genders are set properly during import from MegaMek"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0956177ec937fb1ee8e98740d66e245c443ba7e1", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/0956177ec937fb1ee8e98740d66e245c443ba7e1", "committedDate": "2020-02-17T17:06:39Z", "message": "Adding option for Randomize Dependent Origin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b673ed1996558c65c6cc2cb42c85deaad78dc74", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/1b673ed1996558c65c6cc2cb42c85deaad78dc74", "committedDate": "2020-02-17T17:10:31Z", "message": "Removing gender overwrites in Utilities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c77e4bb8ce34b0e07e3090ba7267ba3db462830", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/9c77e4bb8ce34b0e07e3090ba7267ba3db462830", "committedDate": "2020-02-18T05:41:09Z", "message": "Fixing gender input from MegaMek"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36a49a6b0b071b4b7af4bf8b1d7091ff18d67650", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/36a49a6b0b071b4b7af4bf8b1d7091ff18d67650", "committedDate": "2020-02-24T00:39:47Z", "message": "Personnel Improvements: Fixing merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ef79c35409e71fac4c86a24e921a8307310ea04", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/5ef79c35409e71fac4c86a24e921a8307310ea04", "committedDate": "2020-02-24T13:19:12Z", "message": "Fixing merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2b6b11cae139d5a8f5fe3c8245786288470ad60", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/b2b6b11cae139d5a8f5fe3c8245786288470ad60", "committedDate": "2020-02-24T20:07:48Z", "message": "Continuing to remove recruitPersonWithoutId"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dea16869a6011994d13fc7b12815d1fc67b9849d", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/dea16869a6011994d13fc7b12815d1fc67b9849d", "committedDate": "2020-02-24T20:17:04Z", "message": "Reordering personnel methods in campaign.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7b4dba057328acc2cc3d38196f605d871b8def4", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/b7b4dba057328acc2cc3d38196f605d871b8def4", "committedDate": "2020-02-24T20:28:53Z", "message": "Removing recruitPersonWithoutId, as this is now handled in recruitPerson"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7dce07beabb54e51f8172260f56700d733802f81", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/7dce07beabb54e51f8172260f56700d733802f81", "committedDate": "2020-02-24T20:50:55Z", "message": "Switching to ternary for gender decision in the personnel generator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08b3767bfd80e02d785b6ac6f38359a3655aba40", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/08b3767bfd80e02d785b6ac6f38359a3655aba40", "committedDate": "2020-02-25T16:13:15Z", "message": "Fixing safeSpouse and pregnancy issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91362f91ffd7727db978c05582b3a2e5306b1825", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/91362f91ffd7727db978c05582b3a2e5306b1825", "committedDate": "2020-02-25T18:46:58Z", "message": "Fixing merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fffbce94db9e008bea8e83e014c9d7821e6d168", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/0fffbce94db9e008bea8e83e014c9d7821e6d168", "committedDate": "2020-02-25T19:32:24Z", "message": "Removing import that will cause issues when pushed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce8218c9a85d4531e5031ce449ab5ba546eacfe8", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/ce8218c9a85d4531e5031ce449ab5ba546eacfe8", "committedDate": "2020-02-26T01:22:55Z", "message": "Fixing getFullName with null/empty first name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30a9e1ee019a3a93ead82fbdd192ec19f36c386f", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/30a9e1ee019a3a93ead82fbdd192ec19f36c386f", "committedDate": "2020-02-26T01:23:29Z", "message": "Continuing work on fixing peronnel import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86e4643661c4ae103049dd68faa20de06a4a6786", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/86e4643661c4ae103049dd68faa20de06a4a6786", "committedDate": "2020-02-26T16:15:04Z", "message": "Fixing merge conflicts"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4482, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}