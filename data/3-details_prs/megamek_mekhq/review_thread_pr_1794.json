{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MjY3MDk0", "number": 1794, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1MzoyOVrOEE6Crw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDozNTowOVrOEFkFIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTgwNzE5OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/gui/sorter/DateStringComparator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1MzoyOVrOGi0i-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzozMjo1N1rOGjyU8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NTY5MQ==", "bodyText": "Why not try these first?", "url": "https://github.com/MegaMek/mekhq/pull/1794#discussion_r439165691", "createdAt": "2020-06-12T01:53:29Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/sorter/DateStringComparator.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package mekhq.gui.sorter;\n+\n+import mekhq.campaign.Campaign;\n+\n+import java.io.Serializable;\n+import java.time.LocalDate;\n+import java.time.format.DateTimeFormatter;\n+import java.util.Comparator;\n+\n+public class DateStringComparator implements Comparator<String>, Serializable {\n+    private static final long serialVersionUID = -6745919248211983499L;\n+\n+    private Campaign campaign;\n+\n+    public DateStringComparator(Campaign campaign) {\n+        this.campaign = campaign;\n+    }\n+\n+    @Override\n+    public int compare(String o1, String o2) {\n+        LocalDate dateA;\n+        LocalDate dateB;\n+        try {\n+            dateA = LocalDate.parse(o1, DateTimeFormatter.ofPattern(\n+                    campaign.getCampaignOptions().getDisplayDateFormat()));\n+        } catch (Exception ignored) {\n+            if (\"-\".equals(o2) && \"-\".equals(o1)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66ddfe0fcaa7fd5bad7e2b78a76ab46cfa15f8fd"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3NzkwNg==", "bodyText": "Fixed, just a dumb ordering decision on my part", "url": "https://github.com/MegaMek/mekhq/pull/1794#discussion_r440177906", "createdAt": "2020-06-15T13:32:57Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/gui/sorter/DateStringComparator.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package mekhq.gui.sorter;\n+\n+import mekhq.campaign.Campaign;\n+\n+import java.io.Serializable;\n+import java.time.LocalDate;\n+import java.time.format.DateTimeFormatter;\n+import java.util.Comparator;\n+\n+public class DateStringComparator implements Comparator<String>, Serializable {\n+    private static final long serialVersionUID = -6745919248211983499L;\n+\n+    private Campaign campaign;\n+\n+    public DateStringComparator(Campaign campaign) {\n+        this.campaign = campaign;\n+    }\n+\n+    @Override\n+    public int compare(String o1, String o2) {\n+        LocalDate dateA;\n+        LocalDate dateB;\n+        try {\n+            dateA = LocalDate.parse(o1, DateTimeFormatter.ofPattern(\n+                    campaign.getCampaignOptions().getDisplayDateFormat()));\n+        } catch (Exception ignored) {\n+            if (\"-\".equals(o2) && \"-\".equals(o1)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NTY5MQ=="}, "originalCommit": {"oid": "66ddfe0fcaa7fd5bad7e2b78a76ab46cfa15f8fd"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTgwODc4OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1NDo0MFrOGi0kCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1NDo0MFrOGi0kCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NTk2MA==", "bodyText": "Could o1 and o2 be equal?", "url": "https://github.com/MegaMek/mekhq/pull/1794#discussion_r439165960", "createdAt": "2020-06-12T01:54:40Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package mekhq.gui.sorter;\n+\n+import mekhq.campaign.mission.Scenario;\n+\n+import java.io.Serializable;\n+import java.util.Comparator;\n+\n+public class ScenarioStatusComparator implements Comparator<String>, Serializable {\n+    private static final long serialVersionUID = -6287998488809978029L;\n+\n+    @Override\n+    public int compare(String o1, String o2) {\n+        int a = -1;\n+        int b = -1;\n+\n+        // First we need to determine the numbers based on the name\n+        for (int i = 0; i < Scenario.S_NUM; i++) {\n+            if (Scenario.getStatusName(i).equals(o1)) {\n+                a = i;\n+            } else if (Scenario.getStatusName(i).equals(o2)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66ddfe0fcaa7fd5bad7e2b78a76ab46cfa15f8fd"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTgwOTgxOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1NToxM1rOGi0klw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1NToxM1rOGi0klw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NjEwMw==", "bodyText": "Comments for which is defeat and which is draw would be nice.", "url": "https://github.com/MegaMek/mekhq/pull/1794#discussion_r439166103", "createdAt": "2020-06-12T01:55:13Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package mekhq.gui.sorter;\n+\n+import mekhq.campaign.mission.Scenario;\n+\n+import java.io.Serializable;\n+import java.util.Comparator;\n+\n+public class ScenarioStatusComparator implements Comparator<String>, Serializable {\n+    private static final long serialVersionUID = -6287998488809978029L;\n+\n+    @Override\n+    public int compare(String o1, String o2) {\n+        int a = -1;\n+        int b = -1;\n+\n+        // First we need to determine the numbers based on the name\n+        for (int i = 0; i < Scenario.S_NUM; i++) {\n+            if (Scenario.getStatusName(i).equals(o1)) {\n+                a = i;\n+            } else if (Scenario.getStatusName(i).equals(o2)) {\n+                b = i;\n+            }\n+        }\n+\n+        // Now we need to fix the references to Defeat and Draw so they sort nicely\n+        switch (a) {\n+            case 3:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66ddfe0fcaa7fd5bad7e2b78a76ab46cfa15f8fd"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTgxNTI0OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1ODo0MFrOGi0nyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1ODo0MFrOGi0nyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NjkyMg==", "bodyText": "I think it would be more natural to have a helper method that converted the string to its sort order integer, then just compare the two integers.", "url": "https://github.com/MegaMek/mekhq/pull/1794#discussion_r439166922", "createdAt": "2020-06-12T01:58:40Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package mekhq.gui.sorter;\n+\n+import mekhq.campaign.mission.Scenario;\n+\n+import java.io.Serializable;\n+import java.util.Comparator;\n+\n+public class ScenarioStatusComparator implements Comparator<String>, Serializable {\n+    private static final long serialVersionUID = -6287998488809978029L;\n+\n+    @Override\n+    public int compare(String o1, String o2) {\n+        int a = -1;\n+        int b = -1;\n+\n+        // First we need to determine the numbers based on the name\n+        for (int i = 0; i < Scenario.S_NUM; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66ddfe0fcaa7fd5bad7e2b78a76ab46cfa15f8fd"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjY5MjM1OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/gui/sorter/DateStringComparator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDozNDozMlrOGj09YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDozNDozMlrOGj09YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyMTAyNQ==", "bodyText": "This will fail on a null string, prefer Objects.equals here to make that case moot.", "url": "https://github.com/MegaMek/mekhq/pull/1794#discussion_r440221025", "createdAt": "2020-06-15T14:34:32Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/sorter/DateStringComparator.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package mekhq.gui.sorter;\n+\n+import mekhq.campaign.Campaign;\n+\n+import java.io.Serializable;\n+import java.time.LocalDate;\n+import java.time.format.DateTimeFormatter;\n+import java.util.Comparator;\n+\n+public class DateStringComparator implements Comparator<String>, Serializable {\n+    private static final long serialVersionUID = -6745919248211983499L;\n+\n+    private Campaign campaign;\n+\n+    public DateStringComparator(Campaign campaign) {\n+        this.campaign = campaign;\n+    }\n+\n+    @Override\n+    public int compare(String o1, String o2) {\n+        if (o1.equals(o2)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88e8402880f44659023689eab665fc291706ec45"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjY5NDcyOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDozNTowOVrOGj0_Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDozNTowOVrOGj0_Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyMTQ1MQ==", "bodyText": "Null check issues again.", "url": "https://github.com/MegaMek/mekhq/pull/1794#discussion_r440221451", "createdAt": "2020-06-15T14:35:09Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package mekhq.gui.sorter;\n+\n+import mekhq.campaign.mission.Scenario;\n+import mekhq.campaign.parts.Part;\n+\n+import java.io.Serializable;\n+import java.util.Comparator;\n+\n+/**\n+ * This class compares two {@link Scenario} status integers\n+ */\n+public class ScenarioStatusComparator implements Comparator<String>, Serializable {\n+    private static final long serialVersionUID = -6287998488809978029L;\n+\n+    @Override\n+    public int compare(String o1, String o2) {\n+        if (o1.equals(o2)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88e8402880f44659023689eab665fc291706ec45"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2337, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}