{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NDA4NzI3", "number": 1879, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQwMjoxOTo0MlrOESGi-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQwMjoyNDozOFrOESGkEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDE3MDgyOnYy", "diffSide": "LEFT", "path": "MekHQ/src/mekhq/campaign/unit/Unit.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQwMjoxOTo0MlrOG3IwEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQwMjoyNzoxM1rOG3IyJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ2ODI0Mg==", "bodyText": "What was this for?", "url": "https://github.com/MegaMek/mekhq/pull/1879#discussion_r460468242", "createdAt": "2020-07-26T02:19:42Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/unit/Unit.java", "diffHunk": "@@ -3956,35 +3956,32 @@ private void assignToCrewSlot(Person p, int slot, String gunType, String driveTy\n     }\n \n     public void resetEngineer() {\n-        if(!isSelfCrewed()) {\n+        if (!isSelfCrewed()) {\n             return;\n         }\n         int minutesLeft = TECH_WORK_DAY;\n         int overtimeLeft = TECH_WORK_DAY / 2;\n-        int edgeLeft = 0;\n         boolean breakpartreroll = true;\n         boolean failrefitreroll = true;\n-        if(null != engineer) {\n+        if (null != engineer) {\n             minutesLeft = engineer.getMinutesLeft();\n             overtimeLeft = engineer.getOvertimeLeft();\n-            edgeLeft = engineer.getEdge();\n         } else {\n             //then get the number based on the least amount available to crew members\n             //in the case of Edge, everyone must have the same triggers set for Edge to work\n-            for(Person p : getActiveCrew()) {\n-                if(p.getMinutesLeft() < minutesLeft) {\n+            for (Person p : getActiveCrew()) {\n+                if (p.getMinutesLeft() < minutesLeft) {\n                     minutesLeft = p.getMinutesLeft();\n                 }\n-                if(p.getOvertimeLeft() < overtimeLeft) {\n+\n+                if (p.getOvertimeLeft() < overtimeLeft) {\n                     overtimeLeft = p.getOvertimeLeft();\n                 }\n-                if(p.getEdge() < edgeLeft) {\n-                    edgeLeft = p.getEdge();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccde3c1b08a5b8e9d2e8f28f4fc2372aeedb90c0"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ2ODc3Mw==", "bodyText": "Completely unused, so I removed the logic.", "url": "https://github.com/MegaMek/mekhq/pull/1879#discussion_r460468773", "createdAt": "2020-07-26T02:27:13Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/Unit.java", "diffHunk": "@@ -3956,35 +3956,32 @@ private void assignToCrewSlot(Person p, int slot, String gunType, String driveTy\n     }\n \n     public void resetEngineer() {\n-        if(!isSelfCrewed()) {\n+        if (!isSelfCrewed()) {\n             return;\n         }\n         int minutesLeft = TECH_WORK_DAY;\n         int overtimeLeft = TECH_WORK_DAY / 2;\n-        int edgeLeft = 0;\n         boolean breakpartreroll = true;\n         boolean failrefitreroll = true;\n-        if(null != engineer) {\n+        if (null != engineer) {\n             minutesLeft = engineer.getMinutesLeft();\n             overtimeLeft = engineer.getOvertimeLeft();\n-            edgeLeft = engineer.getEdge();\n         } else {\n             //then get the number based on the least amount available to crew members\n             //in the case of Edge, everyone must have the same triggers set for Edge to work\n-            for(Person p : getActiveCrew()) {\n-                if(p.getMinutesLeft() < minutesLeft) {\n+            for (Person p : getActiveCrew()) {\n+                if (p.getMinutesLeft() < minutesLeft) {\n                     minutesLeft = p.getMinutesLeft();\n                 }\n-                if(p.getOvertimeLeft() < overtimeLeft) {\n+\n+                if (p.getOvertimeLeft() < overtimeLeft) {\n                     overtimeLeft = p.getOvertimeLeft();\n                 }\n-                if(p.getEdge() < edgeLeft) {\n-                    edgeLeft = p.getEdge();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ2ODI0Mg=="}, "originalCommit": {"oid": "ccde3c1b08a5b8e9d2e8f28f4fc2372aeedb90c0"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDE3MzYzOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/service/MassRepairService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQwMjoyNDozOFrOG3IxUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQwMjoyNTozN1rOG3IxyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ2ODU2Mw==", "bodyText": "Does this need a default value still?", "url": "https://github.com/MegaMek/mekhq/pull/1879#discussion_r460468563", "createdAt": "2020-07-26T02:24:38Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/service/MassRepairService.java", "diffHunk": "@@ -1059,7 +1062,7 @@ private static WorkTimeCalculation calculateNewMassRepairWorktime(IPartWork part\n         }\n \n         WorkTime newWorkTime = partWork.getMode();\n-        WorkTime previousNewWorkTime = newWorkTime;\n+        WorkTime previousNewWorkTime;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccde3c1b08a5b8e9d2e8f28f4fc2372aeedb90c0"}, "originalPosition": 185}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ2ODY4MQ==", "bodyText": "Nope, it is always overwritten", "url": "https://github.com/MegaMek/mekhq/pull/1879#discussion_r460468681", "createdAt": "2020-07-26T02:25:37Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/service/MassRepairService.java", "diffHunk": "@@ -1059,7 +1062,7 @@ private static WorkTimeCalculation calculateNewMassRepairWorktime(IPartWork part\n         }\n \n         WorkTime newWorkTime = partWork.getMode();\n-        WorkTime previousNewWorkTime = newWorkTime;\n+        WorkTime previousNewWorkTime;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ2ODU2Mw=="}, "originalCommit": {"oid": "ccde3c1b08a5b8e9d2e8f28f4fc2372aeedb90c0"}, "originalPosition": 185}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2370, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}