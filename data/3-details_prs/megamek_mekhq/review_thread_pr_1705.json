{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMTk5NzE4", "number": 1705, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTo0MTo1OVrOD3QjPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNzozMzozNlrOD3TiqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjY5NDM4OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/MekHqXmlUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTo0MTo1OVrOGNaiuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTo0MTo1OVrOGNaiuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcxOTU0Nw==", "bodyText": "I guess we don't need the enclosing parens if there's no !=", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416719547", "createdAt": "2020-04-28T15:41:59Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/MekHqXmlUtil.java", "diffHunk": "@@ -328,14 +328,14 @@ public static String writeEntityToXmlString(Entity tgtEnt, int indentLvl, ArrayL\n         }\n \n          if ((null != tgtEnt.getCamoCategory())\n-                 && (tgtEnt.getCamoCategory() != IPlayer.NO_CAMO)\n+                 && (!IPlayer.NO_CAMO.equals(tgtEnt.getCamoCategory()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "debaea13f8206211b83605113cddde5cdd31b7b3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjY5NTkwOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/MekHqXmlUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTo0MjoxN1rOGNajoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTo0MjoxN1rOGNajoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcxOTc3Ng==", "bodyText": "Unnecessary enclosing parens", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416719776", "createdAt": "2020-04-28T15:42:17Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/MekHqXmlUtil.java", "diffHunk": "@@ -328,14 +328,14 @@ public static String writeEntityToXmlString(Entity tgtEnt, int indentLvl, ArrayL\n         }\n \n          if ((null != tgtEnt.getCamoCategory())\n-                 && (tgtEnt.getCamoCategory() != IPlayer.NO_CAMO)\n+                 && (!IPlayer.NO_CAMO.equals(tgtEnt.getCamoCategory()))\n                  && !tgtEnt.getCamoCategory().isEmpty()) {\n              retVal += \"\\\" camoCategory=\\\"\";\n              retVal += String.valueOf(escape(tgtEnt.getCamoCategory()));\n          }\n \n          if ((null != tgtEnt.getCamoFileName())\n-                 && (tgtEnt.getCamoFileName() != IPlayer.NO_CAMO)\n+                 && (!IPlayer.NO_CAMO.equals(tgtEnt.getCamoFileName()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "debaea13f8206211b83605113cddde5cdd31b7b3"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjcxNTQ0OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/mission/AtBScenario.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTo0NjoxOFrOGNavUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTo1MjozN1rOGNbCNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyMjc3MQ==", "bodyText": "I don't see a reason to eliminate the VEENOVA logic.", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416722771", "createdAt": "2020-04-28T15:46:18Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/mission/AtBScenario.java", "diffHunk": "@@ -1183,8 +1182,8 @@ private void addStar(ArrayList<Entity> list, String faction, int skill, int qual\n                 list.add(en);\n             }\n         }\n-        if (forceType == FORCE_NOVA || forceType == FORCE_VEENOVA) {\n-            unitType = forceType == FORCE_VEENOVA ? UnitType.INFANTRY : UnitType.BATTLE_ARMOR;\n+        if (forceType == FORCE_NOVA) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "debaea13f8206211b83605113cddde5cdd31b7b3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyNzYwNw==", "bodyText": "Unused and has never been used, years after it was originally implemented.", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416727607", "createdAt": "2020-04-28T15:52:37Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/mission/AtBScenario.java", "diffHunk": "@@ -1183,8 +1182,8 @@ private void addStar(ArrayList<Entity> list, String faction, int skill, int qual\n                 list.add(en);\n             }\n         }\n-        if (forceType == FORCE_NOVA || forceType == FORCE_VEENOVA) {\n-            unitType = forceType == FORCE_VEENOVA ? UnitType.INFANTRY : UnitType.BATTLE_ARMOR;\n+        if (forceType == FORCE_NOVA) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyMjc3MQ=="}, "originalCommit": {"oid": "debaea13f8206211b83605113cddde5cdd31b7b3"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjcyMDY2OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTo0NzoxNFrOGNayTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNjowMDowNVrOGNbY2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyMzUzNQ==", "bodyText": "Do we really want a non-null person in case we fail to read a person in?", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416723535", "createdAt": "2020-04-28T15:47:14Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -1886,12 +1886,9 @@ public void writeToXml(PrintWriter pw1, int indent) {\n     public static Person generateInstanceFromXML(Node wn, Campaign c, Version version) {\n         final String METHOD_NAME = \"generateInstanceFromXML(Node,Campaign,Version)\"; //$NON-NLS-1$\n \n-        Person retVal = null;\n+        Person retVal = new Person(c);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "debaea13f8206211b83605113cddde5cdd31b7b3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjczMzQwMA==", "bodyText": "We already will have a non-null person, as the only way it will return null currently is if it fails to create the person object initially.\nHowever, by adding retVal = null on the catch would do that, which seems to have been the original intent in the code. Pushed a fix to ensure the original intent works.", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416733400", "createdAt": "2020-04-28T16:00:05Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -1886,12 +1886,9 @@ public void writeToXml(PrintWriter pw1, int indent) {\n     public static Person generateInstanceFromXML(Node wn, Campaign c, Version version) {\n         final String METHOD_NAME = \"generateInstanceFromXML(Node,Campaign,Version)\"; //$NON-NLS-1$\n \n-        Person retVal = null;\n+        Person retVal = new Person(c);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyMzUzNQ=="}, "originalCommit": {"oid": "debaea13f8206211b83605113cddde5cdd31b7b3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MzE3Nzc2OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNzozMTo1NVrOGNfONQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMTowODo1MFrOGNnA_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc5NjIxMw==", "bodyText": "I think reference equality is okay here actually. We wouldn't want two instances with the same UUID. In any case this is safe for now.", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416796213", "createdAt": "2020-04-28T17:31:55Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java", "diffHunk": "@@ -923,7 +922,7 @@ private void processPrisonerCapture(List<TestUnit> unitsToProcess) {\n                 }\n                 if (en.hasWorkingMisc(MiscType.F_COMMAND_CONSOLE)) {\n                     for (Person p : crew) {\n-                        if (p != commander && p != driver) {\n+                        if (!p.equals(commander) && !p.equals(driver)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bcff5ca016ce504fc8d537be58a60cd7e6f9b2"}, "originalPosition": 375}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkyMzkwMA==", "bodyText": "It is okay for now, but I'd rather future proof and implement it properly with equals comparisons.", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416923900", "createdAt": "2020-04-28T21:08:50Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java", "diffHunk": "@@ -923,7 +922,7 @@ private void processPrisonerCapture(List<TestUnit> unitsToProcess) {\n                 }\n                 if (en.hasWorkingMisc(MiscType.F_COMMAND_CONSOLE)) {\n                     for (Person p : crew) {\n-                        if (p != commander && p != driver) {\n+                        if (!p.equals(commander) && !p.equals(driver)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc5NjIxMw=="}, "originalCommit": {"oid": "c6bcff5ca016ce504fc8d537be58a60cd7e6f9b2"}, "originalPosition": 375}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MzE4NDQwOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNzozMzozNlrOGNfShw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMTowNzo0MlrOGNm-VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc5NzMxOQ==", "bodyText": "Should have a reference equality check first.", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416797319", "createdAt": "2020-04-28T17:33:36Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -2654,6 +2652,25 @@ public String toString() {\n         return getFullName();\n     }\n \n+    /**\n+     * Two people are determined to be equal if they have the same id\n+     * @param object the object to check if it is equal to the person or not\n+     * @return true if they have the same id, otherwise false\n+     */\n+    @Override\n+    public boolean equals(Object object) {\n+        if (!(object instanceof Person)) {\n+            return false;\n+        } else {\n+            return getId().equals(((Person) object).getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6bcff5ca016ce504fc8d537be58a60cd7e6f9b2"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg1MzMyMA==", "bodyText": "Is that for performance reasons?", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416853320", "createdAt": "2020-04-28T19:04:06Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -2654,6 +2652,25 @@ public String toString() {\n         return getFullName();\n     }\n \n+    /**\n+     * Two people are determined to be equal if they have the same id\n+     * @param object the object to check if it is equal to the person or not\n+     * @return true if they have the same id, otherwise false\n+     */\n+    @Override\n+    public boolean equals(Object object) {\n+        if (!(object instanceof Person)) {\n+            return false;\n+        } else {\n+            return getId().equals(((Person) object).getId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc5NzMxOQ=="}, "originalCommit": {"oid": "c6bcff5ca016ce504fc8d537be58a60cd7e6f9b2"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkwNzk5NA==", "bodyText": "Part of the recommendations for implementing Object::equals.", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416907994", "createdAt": "2020-04-28T20:40:40Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -2654,6 +2652,25 @@ public String toString() {\n         return getFullName();\n     }\n \n+    /**\n+     * Two people are determined to be equal if they have the same id\n+     * @param object the object to check if it is equal to the person or not\n+     * @return true if they have the same id, otherwise false\n+     */\n+    @Override\n+    public boolean equals(Object object) {\n+        if (!(object instanceof Person)) {\n+            return false;\n+        } else {\n+            return getId().equals(((Person) object).getId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc5NzMxOQ=="}, "originalCommit": {"oid": "c6bcff5ca016ce504fc8d537be58a60cd7e6f9b2"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkyMzIyMA==", "bodyText": "Implemented the fix", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416923220", "createdAt": "2020-04-28T21:07:42Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -2654,6 +2652,25 @@ public String toString() {\n         return getFullName();\n     }\n \n+    /**\n+     * Two people are determined to be equal if they have the same id\n+     * @param object the object to check if it is equal to the person or not\n+     * @return true if they have the same id, otherwise false\n+     */\n+    @Override\n+    public boolean equals(Object object) {\n+        if (!(object instanceof Person)) {\n+            return false;\n+        } else {\n+            return getId().equals(((Person) object).getId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc5NzMxOQ=="}, "originalCommit": {"oid": "c6bcff5ca016ce504fc8d537be58a60cd7e6f9b2"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2454, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}