{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NDk4NTA3", "number": 1403, "title": "Refactoring and Fixing lgtm Recommendations", "bodyText": "I kept getting these warnings from my IDE, so I thought I might as well fix them. I also did some refactoring whenever I saw something that would make sense to change.", "createdAt": "2020-01-19T05:38:30Z", "url": "https://github.com/MegaMek/mekhq/pull/1403", "merged": true, "mergeCommit": {"oid": "84dc004ba102deac560ffaf0aa29e6fd2c2d7de6"}, "closed": true, "closedAt": "2020-01-19T18:08:28Z", "author": {"login": "Windchild292"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7xNJRAH2gAyMzY0NDk4NTA3OjJjYzAzMzEzZTk5NmZjNDQ5ZWUxNWU3NjQ2ZjIwNDQyZjlhMzljMWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb779mygFqTM0NTAxNzA4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2cc03313e996fc449ee15e7646f20442f9a39c1e", "author": {"user": null}, "url": "https://github.com/MegaMek/mekhq/commit/2cc03313e996fc449ee15e7646f20442f9a39c1e", "committedDate": "2020-01-19T05:36:10Z", "message": "Refactoring and Fixing lgtm Recommendations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2f99a4339f305b2ea902eefc395e97c94ae6213", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/e2f99a4339f305b2ea902eefc395e97c94ae6213", "committedDate": "2020-01-19T13:28:50Z", "message": "Fixing spurious : in @param entity"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MDAyMDk2", "url": "https://github.com/MegaMek/mekhq/pull/1403#pullrequestreview-345002096", "createdAt": "2020-01-19T13:31:35Z", "commit": {"oid": "e2f99a4339f305b2ea902eefc395e97c94ae6213"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMzozMTozNVrOFfO5cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMzozNDoxOVrOFfO6NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5NDI1Ng==", "bodyText": "Why wrap this list in a new list?", "url": "https://github.com/MegaMek/mekhq/pull/1403#discussion_r368294256", "createdAt": "2020-01-19T13:31:35Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java", "diffHunk": "@@ -452,15 +452,10 @@ public static int generateForce(AtBDynamicScenario scenario, AtBContract contrac\n     public static List<Entity> generateCivilianUnits(int num, Campaign campaign) {\n         RandomUnitGenerator.getInstance().setChosenRAT(\"CivilianUnits\");\n         ArrayList<MechSummary> msl = RandomUnitGenerator.getInstance().generate(num);\n-        List<Entity> retval = new ArrayList<>();\n-        \n-        List<Entity> entities = msl.stream().map(ms -> createEntityWithCrew(\"IND\",\n-                RandomSkillsGenerator.L_GREEN, campaign, ms))\n-                .collect(Collectors.<Entity>toList());\n-        retval.addAll(entities);\n-        return retval;\n+        List<Entity> entities = msl.stream().map(ms -> createEntityWithCrew(\"IND\", RandomSkillsGenerator.L_GREEN, campaign, ms)).collect(Collectors.<Entity>toList());\n+        return new ArrayList<>(entities);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f99a4339f305b2ea902eefc395e97c94ae6213"}, "originalPosition": 459}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5NDM3NQ==", "bodyText": "Inconsistent spacing before the open brace in this block.", "url": "https://github.com/MegaMek/mekhq/pull/1403#discussion_r368294375", "createdAt": "2020-01-19T13:33:01Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java", "diffHunk": "@@ -557,100 +547,104 @@ public static ScenarioObjective translateTemplateObjective(AtBDynamicScenario sc\n                 calculatedDestinationZone = OffBoardDirection.translateBoardStart(getOppositeEdge(forceTemplate.getActualDeploymentZone()));\n             }\n         }\n-        \n+\n         for(int forceID : scenario.getPlayerForceTemplates().keySet()) {\n             ScenarioForceTemplate playerForceTemplate = scenario.getPlayerForceTemplates().get(forceID);\n-            \n+\n             if(templateObjective.isApplicableToForceTemplate(playerForceTemplate, scenario) ||\n                     templateObjective.getAssociatedForceNames().contains(ScenarioObjective.FORCE_SHORTCUT_ALL_PRIMARY_PLAYER_FORCES)) {\n                 objectiveForceNames.add(campaign.getForce(forceID).getName());\n                 calculatedDestinationZone = OffBoardDirection.translateBoardStart(getOppositeEdge(playerForceTemplate.getActualDeploymentZone()));\n             }\n         }\n-        \n+\n         for(UUID unitID : scenario.getPlayerUnitTemplates().keySet()) {\n             ScenarioForceTemplate playerForceTemplate = scenario.getPlayerUnitTemplates().get(unitID);\n-            \n+\n             if(templateObjective.isApplicableToForceTemplate(playerForceTemplate, scenario) ||\n                     templateObjective.getAssociatedForceNames().contains(ScenarioObjective.FORCE_SHORTCUT_ALL_PRIMARY_PLAYER_FORCES)) {\n                 objectiveUnitIDs.add(unitID.toString());\n                 calculatedDestinationZone = OffBoardDirection.translateBoardStart(getOppositeEdge(playerForceTemplate.getActualDeploymentZone()));\n             }\n         }\n-        \n+\n         // this handles generated units that have been put under the player's control\n         for(UUID unitID : scenario.getBotUnitTemplates().keySet()) {\n             ScenarioForceTemplate botForceTemplate = scenario.getBotUnitTemplates().get(unitID);\n-            \n+\n             if(templateObjective.isApplicableToForceTemplate(botForceTemplate, scenario)) {\n                 objectiveUnitIDs.add(unitID.toString());\n                 calculatedDestinationZone = OffBoardDirection.translateBoardStart(getOppositeEdge(botForceTemplate.getActualDeploymentZone()));\n             }\n         }\n-        \n+\n         for(String forceName : objectiveForceNames) {\n             actualObjective.addForce(forceName);\n         }\n-        \n+\n         for(String unitID : objectiveUnitIDs) {\n             actualObjective.addUnit(unitID);\n         }\n-        \n+\n         // if the objective specifies that it's to reach or prevent reaching a map edge\n         // and has been set to \"force destination edge\", set that here\n-        if(actualObjective.getDestinationEdge() == OffBoardDirection.NONE && \n+        if(actualObjective.getDestinationEdge() == OffBoardDirection.NONE &&\n                 calculatedDestinationZone != OffBoardDirection.NONE &&\n                 (actualObjective.getObjectiveCriterion() == ObjectiveCriterion.ReachMapEdge ||\n                 actualObjective.getObjectiveCriterion() == ObjectiveCriterion.PreventReachMapEdge)) {\n             actualObjective.setDestinationEdge(calculatedDestinationZone);\n         }\n-        \n+\n         return actualObjective;\n     }\n-    \n+\n     /**\n      * Scale the scenario's objective time limits, if called for, by the number of units\n      * that have associated force templates that \"contribute to the unit count\".\n      */\n     private static void scaleObjectiveTimeLimits(AtBDynamicScenario scenario, Campaign campaign) {\n         int primaryUnitCount = 0;\n-        \n+\n         for(int forceID : scenario.getPlayerForceTemplates().keySet()) {\n             if(scenario.getPlayerForceTemplates().get(forceID).getContributesToUnitCount()) {\n                 primaryUnitCount += campaign.getForce(forceID).getAllUnits().size();\n             }\n         }\n-        \n+\n         for(BotForce botForce : scenario.getBotForceTemplates().keySet()) {\n             if(scenario.getBotForceTemplates().get(botForce).getContributesToUnitCount()) {\n                 primaryUnitCount += botForce.getEntityList().size();\n             }\n         }\n-        \n+\n         for(ScenarioObjective objective : scenario.getScenarioObjectives()) {\n             if(objective.getTimeLimitType() == TimeLimitType.ScaledToPrimaryUnitCount) {\n                 objective.setTimeLimit(primaryUnitCount * objective.getTimeLimitScaleFactor());\n             }\n         }\n     }\n-    \n+\n     /**\n      * Handles random determination of light conditions for the given scenario, as per AtB rules\n      * @param scenario The scenario for which to set lighting conditions.\n      */\n     private static void setLightConditions(AtBDynamicScenario scenario) {\n-        int light = PlanetaryConditions.L_DAY;\n-\n         int roll = Compute.randomInt(10) + 1;\n-        if (roll < 6) light = PlanetaryConditions.L_DAY;\n-        else if (roll < 8) light = PlanetaryConditions.L_DUSK;\n-        else if (roll == 8) light = PlanetaryConditions.L_FULL_MOON;\n-        else if (roll == 9) light = PlanetaryConditions.L_MOONLESS;\n-        else light = PlanetaryConditions.L_PITCH_BLACK;\n-        \n+        int light = PlanetaryConditions.L_DAY; //this handles all rolls less than 6\n+\n+        if ((6 <= roll) && (roll < 8)){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f99a4339f305b2ea902eefc395e97c94ae6213"}, "originalPosition": 674}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5NDQ1Mg==", "bodyText": "Remove the colon.", "url": "https://github.com/MegaMek/mekhq/pull/1403#discussion_r368294452", "createdAt": "2020-01-19T13:34:19Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java", "diffHunk": "@@ -992,64 +986,64 @@ public static Entity getInfantryEntity(UnitGeneratorParameters params, int skill\n                     newParams.getMovementModes().addAll(IUnitGenerator.ALL_INFANTRY_MODES);\n                     newParams.setFilter(inf -> inf.getTons() <= bayCapacity);\n                 }\n-                \n+\n                 MechSummary ms = campaign.getUnitGenerator().generate(newParams);\n-                \n+\n                 if (ms == null) {\n                     continue;\n                 }\n-                \n+\n                 Entity infantry = createEntityWithCrew(params.getFaction(), skill, campaign, ms);\n-                \n+\n                 // if we're dealing with a *really* small bay, drop the # squads down until we can fit it in\n                 while(infantry.getWeight() > bayCapacity) {\n                     ((Infantry) infantry).setSquadN(((Infantry) infantry).getSquadN() - 1);\n                     infantry.autoSetInternal();\n                 }\n-                \n+\n                 // unlikely but theoretically possible\n                 if(((Infantry) infantry).getSquadN() == 0) {\n                     continue;\n                 }\n-                \n+\n                 // sometimes something crazy will happen and we will not be able to load the unit into the transport\n                 // so let's at least not have it deploy right away.\n                 infantry.setDeployRound(transport.getDeployRound());\n                 scenario.addTransportRelationship(transport.getExternalIdAsString(), infantry.getExternalIdAsString());\n-                \n+\n                 transportedUnits.add(infantry);\n             }\n         }\n-        \n+\n         return transportedUnits;\n     }\n-    \n+\n     /**\n      * Fill the provided transports with randomly generated units that\n      * can fit into their bays.\n-     * @param transports\n+     * @param scenario\n+     * @param transports: list of potential transports", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f99a4339f305b2ea902eefc395e97c94ae6213"}, "originalPosition": 1038}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MDAyNjI1", "url": "https://github.com/MegaMek/mekhq/pull/1403#pullrequestreview-345002625", "createdAt": "2020-01-19T13:40:15Z", "commit": {"oid": "e2f99a4339f305b2ea902eefc395e97c94ae6213"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMzo0MDoxNlrOFfO7xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMzo0MDoxNlrOFfO7xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5NDg1NA==", "bodyText": "Remove :", "url": "https://github.com/MegaMek/mekhq/pull/1403#discussion_r368294854", "createdAt": "2020-01-19T13:40:16Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/personnel/SkillPrereq.java", "diffHunk": "@@ -91,71 +91,71 @@ public boolean qualifies(Skills s) {\n     /**\n      * Determines if the given unit type \"qualifies\" for this skill pre-requisite.\n      * For now, we simply check whether the pre-requisite skills are required for the unit type\n-     * @param e\n+     * @param unitType: the type of unit that is being checked", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f99a4339f305b2ea902eefc395e97c94ae6213"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MDAyNzYz", "url": "https://github.com/MegaMek/mekhq/pull/1403#pullrequestreview-345002763", "createdAt": "2020-01-19T13:42:24Z", "commit": {"oid": "e2f99a4339f305b2ea902eefc395e97c94ae6213"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMzo0MjoyNVrOFfO8aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMzo0ODowN1rOFfO97A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5NTAxNw==", "bodyText": "fix :", "url": "https://github.com/MegaMek/mekhq/pull/1403#discussion_r368295017", "createdAt": "2020-01-19T13:42:25Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/mission/Scenario.java", "diffHunk": "@@ -119,71 +119,71 @@ public static String getStatusName(int s) {\n             return \"?\";\n         }\n     }\n-    \n+\n     public String getName() {\n         return name;\n     }\n     public void setName(String n) {\n         this.name = n;\n     }\n-    \n+\n     public String getDescription() {\n         return desc;\n     }\n-    \n+\n     public void setDesc(String d) {\n         this.desc = d;\n     }\n-    \n+\n     public String getReport() {\n         return report;\n     }\n-    \n+\n     public void setReport(String r) {\n         this.report = r;\n     }\n-    \n+\n     public int getStatus() {\n         return status;\n     }\n-    \n+\n     public void setStatus(int s) {\n         this.status = s;\n     }\n-    \n+\n     public String getStatusName() {\n         return getStatusName(getStatus());\n     }\n-    \n+\n     public void setDate(Date d) {\n         this.date = d;\n     }\n-    \n+\n     public Date getDate() {\n         return date;\n     }\n-    \n+\n     public boolean hasObjectives() {\n         return scenarioObjectives != null &&\n                 scenarioObjectives.size() > 0;\n     }\n-    \n+\n     public List<ScenarioObjective> getScenarioObjectives() {\n         return scenarioObjectives;\n     }\n \n     public void setScenarioObjectives(List<ScenarioObjective> scenarioObjectives) {\n         this.scenarioObjectives = scenarioObjectives;\n     }\n-    \n+\n     public Map<UUID,ArrayList<UUID>> getPlayerTransportLinkages() {\n         return playerTransportLinkages;\n     }\n-    \n+\n     /**\n      * Adds a transport-cargo pair to the internal transport relationship store.\n-     * @param transport\n-     * @param cargo\n+     * @param transportId: the UUID of the transport object\n+     * @param cargoId: the UUID of the cargo being transported", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f99a4339f305b2ea902eefc395e97c94ae6213"}, "originalPosition": 168}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5NTMzMA==", "bodyText": "remove ,", "url": "https://github.com/MegaMek/mekhq/pull/1403#discussion_r368295330", "createdAt": "2020-01-19T13:46:42Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java", "diffHunk": "@@ -992,64 +986,64 @@ public static Entity getInfantryEntity(UnitGeneratorParameters params, int skill\n                     newParams.getMovementModes().addAll(IUnitGenerator.ALL_INFANTRY_MODES);\n                     newParams.setFilter(inf -> inf.getTons() <= bayCapacity);\n                 }\n-                \n+\n                 MechSummary ms = campaign.getUnitGenerator().generate(newParams);\n-                \n+\n                 if (ms == null) {\n                     continue;\n                 }\n-                \n+\n                 Entity infantry = createEntityWithCrew(params.getFaction(), skill, campaign, ms);\n-                \n+\n                 // if we're dealing with a *really* small bay, drop the # squads down until we can fit it in\n                 while(infantry.getWeight() > bayCapacity) {\n                     ((Infantry) infantry).setSquadN(((Infantry) infantry).getSquadN() - 1);\n                     infantry.autoSetInternal();\n                 }\n-                \n+\n                 // unlikely but theoretically possible\n                 if(((Infantry) infantry).getSquadN() == 0) {\n                     continue;\n                 }\n-                \n+\n                 // sometimes something crazy will happen and we will not be able to load the unit into the transport\n                 // so let's at least not have it deploy right away.\n                 infantry.setDeployRound(transport.getDeployRound());\n                 scenario.addTransportRelationship(transport.getExternalIdAsString(), infantry.getExternalIdAsString());\n-                \n+\n                 transportedUnits.add(infantry);\n             }\n         }\n-        \n+\n         return transportedUnits;\n     }\n-    \n+\n     /**\n      * Fill the provided transports with randomly generated units that\n      * can fit into their bays.\n-     * @param transports\n+     * @param scenario\n+     * @param transports: list of potential transports\n      * @param factionCode\n      * @param skill\n      * @param quality\n-     * @param year\n      * @param campaign\n-     * @return\n+     * @return transportedUnits, which are the units being transported", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f99a4339f305b2ea902eefc395e97c94ae6213"}, "originalPosition": 1045}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5NTQwNA==", "bodyText": "remove :", "url": "https://github.com/MegaMek/mekhq/pull/1403#discussion_r368295404", "createdAt": "2020-01-19T13:48:07Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/mission/AtBScenario.java", "diffHunk": "@@ -575,8 +575,8 @@ public boolean canDeployUnits(Vector<Unit> units, Campaign campaign) {\n     /**\n      * Determines whether a list of forces is eligible to deploy to the scenario.\n      *\n-     * @param units\n-     * @param campaign\n+     * @param forces: list of forces\n+     * @param c: the campaign that the forces are part of", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f99a4339f305b2ea902eefc395e97c94ae6213"}, "originalPosition": 143}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bd325f41a3ae3f6e5e659d8bb8f6ff3ab0db205", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/4bd325f41a3ae3f6e5e659d8bb8f6ff3ab0db205", "committedDate": "2020-01-19T14:15:14Z", "message": "1403: Fixes from review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a82396072529abb772d6e5398a18ca4d332231f5", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/a82396072529abb772d6e5398a18ca4d332231f5", "committedDate": "2020-01-19T15:56:25Z", "message": "Fixed Bug in TO&E Relating to Transporting Units, Refactoring in TO&E Mouse Adapter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MDE3MDg1", "url": "https://github.com/MegaMek/mekhq/pull/1403#pullrequestreview-345017085", "createdAt": "2020-01-19T18:08:09Z", "commit": {"oid": "a82396072529abb772d6e5398a18ca4d332231f5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4425, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}