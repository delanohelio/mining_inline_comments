{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNzA3NTcw", "number": 1955, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNTo0Mjo0MlrOEbBDog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNTo0Mjo0MlrOEbBDog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NzY0MzIyOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/MekHQOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNTo0Mjo0MlrOHEyMBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNTo0Mjo0MlrOHEyMBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc3ODYyOA==", "bodyText": "This is my preferred way to handle this, as it creates a standardized format for handling MekHQ Options.", "url": "https://github.com/MegaMek/mekhq/pull/1955#discussion_r474778628", "createdAt": "2020-08-21T15:42:42Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/MekHQOptions.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2020 - The MekHQ Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package mekhq;\n+\n+import java.util.prefs.Preferences;\n+\n+public final class MekHQOptions {\n+    private static final Preferences userPreferences = Preferences.userRoot();\n+\n+    public boolean getNoAutosaveValue() {\n+        return userPreferences.node(MekHqConstants.AUTOSAVE_NODE).getBoolean(MekHqConstants.NO_SAVE_KEY, false);\n+    }\n+\n+    public void setNoAutosaveValue(boolean value) {\n+        userPreferences.node(MekHqConstants.AUTOSAVE_NODE).putBoolean(MekHqConstants.NO_SAVE_KEY, value);\n+    }\n+\n+    public void initializeMekHQOptions() {\n+        //region Autosave\n+        setNoAutosaveValue(getNoAutosaveValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1810e656fb723a73b876f9b120c7a22e84e870a7"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2222, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}