{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NDQzODc5", "number": 2127, "reviewThreads": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoxNzowNlrOEsNZoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyNzo1MVrOEsNhNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkyMzUzOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoxNzowNlrOHfZz9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoxNzowNlrOHfZz9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MDgwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n          \n          \n            \n                        if ((en instanceof GunEmplacement) || (en instanceof FighterSquadron) || (en instanceof Jumpship)) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502690805", "createdAt": "2020-10-09T22:17:06Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkyNTAzOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoxNzo1OFrOHfZ01g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMzo1MTo1M1rOHfbU6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MTAzMA==", "bodyText": "This looks weird", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502691030", "createdAt": "2020-10-09T22:17:58Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcxNTYyNA==", "bodyText": "Probably is! I'll try and figure out why it's like this.", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502715624", "createdAt": "2020-10-09T23:51:53Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MTAzMA=="}, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkyNTcwOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoxODoxNlrOHfZ1NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoxODoxNlrOHfZ1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MTEyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n          \n          \n            \n                        if ((type == Entity.ETYPE_MECH) && (en instanceof Mech)) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502691124", "createdAt": "2020-10-09T22:18:16Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkyNjA2OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoxODoyNlrOHfZ1ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoxODoyNlrOHfZ1ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MTE3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n          \n          \n            \n                        if ((type == Entity.ETYPE_DROPSHIP) && (en instanceof Dropship)) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502691173", "createdAt": "2020-10-09T22:18:26Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkyNjQyOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoxODozOFrOHfZ1mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoxODozOFrOHfZ1mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MTIyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n          \n          \n            \n                        if ((type == Entity.ETYPE_SMALL_CRAFT) && (en instanceof SmallCraft)", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502691224", "createdAt": "2020-10-09T22:18:38Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkyNjc2OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoxODo1MlrOHfZ1yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoxODo1MlrOHfZ1yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MTI3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n          \n          \n            \n                        if ((type == Entity.ETYPE_CONV_FIGHTER) && (en instanceof ConvFighter)) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502691272", "createdAt": "2020-10-09T22:18:52Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkyNzY1OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoxOToyMFrOHfZ2Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoxOToyMFrOHfZ2Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MTQwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (type == Entity.ETYPE_AERO && en instanceof Aero\n          \n          \n            \n                                && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n          \n          \n            \n                        if ((type == Entity.ETYPE_AERO) && (en instanceof Aero)\n          \n          \n            \n                                && !((en instanceof SmallCraft) || (en instanceof ConvFighter))) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502691406", "createdAt": "2020-10-09T22:19:20Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkyODE5OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoxOTozNFrOHfZ2mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoxOTozNFrOHfZ2mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MTQ4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n          \n          \n            \n                        if ((type == Entity.ETYPE_INFANTRY) && (en instanceof Infantry) && !(en instanceof BattleArmor)) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502691480", "createdAt": "2020-10-09T22:19:34Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkyODUyOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoxOTo0N1rOHfZ2zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoxOTo0N1rOHfZ2zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MTUzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n          \n          \n            \n                        if ((type == Entity.ETYPE_BATTLEARMOR) && (en instanceof BattleArmor)) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502691535", "createdAt": "2020-10-09T22:19:47Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkyOTAzOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMDoxMVrOHfZ3Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMDoxMVrOHfZ3Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MTYxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n          \n          \n            \n                            if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n          \n          \n            \n                        if ((type == Entity.ETYPE_TANK) && (en instanceof Tank)) {\n          \n          \n            \n                            if (((en.getWeight() <= 50) && lv) || ((en.getWeight() > 50) && !lv)) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502691615", "createdAt": "2020-10-09T22:20:11Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkyOTMxOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMDoyN1rOHfZ3Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMDoyN1rOHfZ3Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MTY2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n          \n          \n            \n                        if ((type == Entity.ETYPE_PROTOMECH) && (en instanceof Protomech)) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502691666", "createdAt": "2020-10-09T22:20:27Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkyOTczOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMDo0MVrOHfZ3kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMDo0MVrOHfZ3kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MTczMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (en instanceof GunEmplacement || en instanceof Jumpship) {\n          \n          \n            \n                        if ((en instanceof GunEmplacement) || (en instanceof Jumpship)) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502691730", "createdAt": "2020-10-09T22:20:41Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        return num;\n+    }\n+\n+    public int getOccupiedBays(long type) {\n+        return getOccupiedBays(type, false);\n+    }\n+\n+    public int getOccupiedBays(long type, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (unit.isMothballed()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof Jumpship) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkyOTk4OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMDo1NlrOHfZ3xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMDo1NlrOHfZ3xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MTc4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n          \n          \n            \n                        if ((type == Entity.ETYPE_MECH) && (en instanceof Mech)) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502691780", "createdAt": "2020-10-09T22:20:56Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        return num;\n+    }\n+\n+    public int getOccupiedBays(long type) {\n+        return getOccupiedBays(type, false);\n+    }\n+\n+    public int getOccupiedBays(long type, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (unit.isMothballed()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkzMDE4OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMTowN1rOHfZ35w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMTowN1rOHfZ35w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MTgxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n          \n          \n            \n                        if ((type == Entity.ETYPE_DROPSHIP) && (en instanceof Dropship)) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502691815", "createdAt": "2020-10-09T22:21:07Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        return num;\n+    }\n+\n+    public int getOccupiedBays(long type) {\n+        return getOccupiedBays(type, false);\n+    }\n+\n+    public int getOccupiedBays(long type, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (unit.isMothballed()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 127}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkzMDQxOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMToyMFrOHfZ4Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMToyMFrOHfZ4Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MTg2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n          \n          \n            \n                        if ((type == Entity.ETYPE_SMALL_CRAFT) && (en instanceof SmallCraft) && !(en instanceof Dropship)) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502691863", "createdAt": "2020-10-09T22:21:20Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        return num;\n+    }\n+\n+    public int getOccupiedBays(long type) {\n+        return getOccupiedBays(type, false);\n+    }\n+\n+    public int getOccupiedBays(long type, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (unit.isMothballed()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkzMDkyOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMTozNFrOHfZ4ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMTozNFrOHfZ4ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MTk0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n          \n          \n            \n                        if ((type == Entity.ETYPE_CONV_FIGHTER) && (en instanceof ConvFighter)) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502691941", "createdAt": "2020-10-09T22:21:34Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        return num;\n+    }\n+\n+    public int getOccupiedBays(long type) {\n+        return getOccupiedBays(type, false);\n+    }\n+\n+    public int getOccupiedBays(long type, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (unit.isMothballed()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkzMTM4OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMTo0OFrOHfZ4og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMTo0OFrOHfZ4og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MjAwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n          \n          \n            \n                        if ((type == Entity.ETYPE_BATTLEARMOR) && (en instanceof BattleArmor)) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502692002", "createdAt": "2020-10-09T22:21:48Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        return num;\n+    }\n+\n+    public int getOccupiedBays(long type) {\n+        return getOccupiedBays(type, false);\n+    }\n+\n+    public int getOccupiedBays(long type, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (unit.isMothballed()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 148}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkzMjAwOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMTo1OVrOHfZ47A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMTo1OVrOHfZ47A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MjA3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n          \n          \n            \n                        if ((type == Entity.ETYPE_INFANTRY) && (en instanceof Infantry) && !(en instanceof BattleArmor)) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502692076", "createdAt": "2020-10-09T22:21:59Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        return num;\n+    }\n+\n+    public int getOccupiedBays(long type) {\n+        return getOccupiedBays(type, false);\n+    }\n+\n+    public int getOccupiedBays(long type, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (unit.isMothballed()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkzMjYyOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMjoyMVrOHfZ5Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMjoyMVrOHfZ5Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MjE3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (type == Entity.ETYPE_AERO && en instanceof Aero\n          \n          \n            \n                                && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n          \n          \n            \n                        if ((type == Entity.ETYPE_AERO) && (en instanceof Aero)\n          \n          \n            \n                                && !((en instanceof SmallCraft) || (en instanceof ConvFighter))) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502692174", "createdAt": "2020-10-09T22:22:21Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        return num;\n+    }\n+\n+    public int getOccupiedBays(long type) {\n+        return getOccupiedBays(type, false);\n+    }\n+\n+    public int getOccupiedBays(long type, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (unit.isMothballed()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 140}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkzMzAyOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMjozOVrOHfZ5kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMjozOVrOHfZ5kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MjI0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n          \n          \n            \n                        if ((type == Entity.ETYPE_TANK) && (en instanceof Tank)) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502692241", "createdAt": "2020-10-09T22:22:39Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        return num;\n+    }\n+\n+    public int getOccupiedBays(long type) {\n+        return getOccupiedBays(type, false);\n+    }\n+\n+    public int getOccupiedBays(long type, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (unit.isMothballed()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 152}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkzMzcwOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMjo1MlrOHfZ56g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMjo1MlrOHfZ56g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MjMzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n          \n          \n            \n                            if (((en.getWeight() <= 50) && lv) || ((en.getWeight() > 50) && !lv)) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502692330", "createdAt": "2020-10-09T22:22:52Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        return num;\n+    }\n+\n+    public int getOccupiedBays(long type) {\n+        return getOccupiedBays(type, false);\n+    }\n+\n+    public int getOccupiedBays(long type, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (unit.isMothballed()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 153}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkzNDE3OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMzoxMFrOHfZ6Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyMzoxMFrOHfZ6Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MjQwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n          \n          \n            \n                        if ((type == Entity.ETYPE_PROTOMECH) && (en instanceof Protomech)) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502692402", "createdAt": "2020-10-09T22:23:10Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/unit/HangarStatistics.java", "diffHunk": "@@ -0,0 +1,255 @@\n+/*\n+ * HangarStatistics.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign.unit;\n+\n+import megamek.common.*;\n+import mekhq.campaign.Hangar;\n+\n+/**\n+ * Provides methods to gather statistics on units in a hangar.\n+ */\n+public class HangarStatistics {\n+    private final Hangar hangar;\n+\n+    public HangarStatistics(Hangar hangar) {\n+        this.hangar = hangar;\n+    }\n+\n+    public Hangar getHangar() {\n+        return hangar;\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        return num;\n+    }\n+\n+    public int getOccupiedBays(long type) {\n+        return getOccupiedBays(type, false);\n+    }\n+\n+    public int getOccupiedBays(long type, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getHangar().getUnits()) {\n+            if (unit.isMothballed()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 158}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkzOTA2OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/CampaignSummary.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyNTo0NFrOHfZ9Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMzo1MjoyOFrOHfbVQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MzEyNg==", "bodyText": "This looks weird", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502693126", "createdAt": "2020-10-09T22:25:44Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/CampaignSummary.java", "diffHunk": "@@ -146,41 +148,43 @@ public void updateInformation() {\n                 countMissionByStatus[Mission.S_BREACH];\n \n         //cargo capacity\n-        cargoCapacity = campaign.getTotalCombinedCargoCapacity();\n-        cargoTons = campaign.getCargoTonnage(false);\n-        double mothballedTonnage = campaign.getCargoTonnage(false, true);\n+        CargoStatistics cargoStats = campaign.getCargoStatistics();\n+        cargoCapacity = cargoStats.getTotalCombinedCargoCapacity();\n+        cargoTons = cargoStats.getCargoTonnage(false);\n+        double mothballedTonnage = cargoStats.getCargoTonnage(false, true);\n         cargoTons = (cargoTons + mothballedTonnage);\n \n         //transport capacity\n-        int noMech = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_MECH) - campaign.getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noSC = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - campaign.getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        HangarStatistics hangarStats = campaign.getHangarStatistics();\n+        int noMech = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_MECH) - hangarStats.getOccupiedBays(Entity.ETYPE_MECH), 0);\n+        int noSC = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - hangarStats.getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n         @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-                int noCF = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - campaign.getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_AERO) - campaign.getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - campaign.getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_TANK) - campaign.getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - campaign.getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - campaign.getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+                int noCF = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - hangarStats.getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcxNTcxMw==", "bodyText": "Probably is! I'll try and figure out why it's like this.", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502715713", "createdAt": "2020-10-09T23:52:28Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/CampaignSummary.java", "diffHunk": "@@ -146,41 +148,43 @@ public void updateInformation() {\n                 countMissionByStatus[Mission.S_BREACH];\n \n         //cargo capacity\n-        cargoCapacity = campaign.getTotalCombinedCargoCapacity();\n-        cargoTons = campaign.getCargoTonnage(false);\n-        double mothballedTonnage = campaign.getCargoTonnage(false, true);\n+        CargoStatistics cargoStats = campaign.getCargoStatistics();\n+        cargoCapacity = cargoStats.getTotalCombinedCargoCapacity();\n+        cargoTons = cargoStats.getCargoTonnage(false);\n+        double mothballedTonnage = cargoStats.getCargoTonnage(false, true);\n         cargoTons = (cargoTons + mothballedTonnage);\n \n         //transport capacity\n-        int noMech = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_MECH) - campaign.getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noSC = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - campaign.getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        HangarStatistics hangarStats = campaign.getHangarStatistics();\n+        int noMech = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_MECH) - hangarStats.getOccupiedBays(Entity.ETYPE_MECH), 0);\n+        int noSC = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - hangarStats.getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n         @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-                int noCF = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - campaign.getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_AERO) - campaign.getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - campaign.getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_TANK) - campaign.getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - campaign.getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - campaign.getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+                int noCF = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - hangarStats.getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MzEyNg=="}, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzkzOTg4OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/CampaignSummary.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyNjoxMlrOHfZ9hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxNzozNjozMVrOHfhTGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MzI1Mw==", "bodyText": "This looks weird", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502693253", "createdAt": "2020-10-09T22:26:12Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/CampaignSummary.java", "diffHunk": "@@ -146,41 +148,43 @@ public void updateInformation() {\n                 countMissionByStatus[Mission.S_BREACH];\n \n         //cargo capacity\n-        cargoCapacity = campaign.getTotalCombinedCargoCapacity();\n-        cargoTons = campaign.getCargoTonnage(false);\n-        double mothballedTonnage = campaign.getCargoTonnage(false, true);\n+        CargoStatistics cargoStats = campaign.getCargoStatistics();\n+        cargoCapacity = cargoStats.getTotalCombinedCargoCapacity();\n+        cargoTons = cargoStats.getCargoTonnage(false);\n+        double mothballedTonnage = cargoStats.getCargoTonnage(false, true);\n         cargoTons = (cargoTons + mothballedTonnage);\n \n         //transport capacity\n-        int noMech = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_MECH) - campaign.getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noSC = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - campaign.getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        HangarStatistics hangarStats = campaign.getHangarStatistics();\n+        int noMech = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_MECH) - hangarStats.getOccupiedBays(Entity.ETYPE_MECH), 0);\n+        int noSC = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - hangarStats.getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n         @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-                int noCF = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - campaign.getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_AERO) - campaign.getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - campaign.getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_TANK) - campaign.getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - campaign.getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - campaign.getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+                int noCF = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - hangarStats.getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n+        int noASF = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_AERO) - hangarStats.getOccupiedBays(Entity.ETYPE_AERO), 0);\n+        int nolv = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - hangarStats.getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n+        int nohv = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_TANK) - hangarStats.getOccupiedBays(Entity.ETYPE_TANK), 0);\n+        int noinf = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - hangarStats.getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n+        int noBA = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - hangarStats.getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n         @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n-                int noProto = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - campaign.getOccupiedBays(Entity.ETYPE_PROTOMECH),  0);\n-        int freehv = Math.max(campaign.getTotalHeavyVehicleBays() - campaign.getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int freeSC = Math.max(campaign.getTotalSmallCraftBays() - campaign.getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+                int noProto = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - hangarStats.getOccupiedBays(Entity.ETYPE_PROTOMECH),  0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcxNTUxNA==", "bodyText": "Probably is! I'll try and figure out why it's like this.", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502715514", "createdAt": "2020-10-09T23:51:20Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/CampaignSummary.java", "diffHunk": "@@ -146,41 +148,43 @@ public void updateInformation() {\n                 countMissionByStatus[Mission.S_BREACH];\n \n         //cargo capacity\n-        cargoCapacity = campaign.getTotalCombinedCargoCapacity();\n-        cargoTons = campaign.getCargoTonnage(false);\n-        double mothballedTonnage = campaign.getCargoTonnage(false, true);\n+        CargoStatistics cargoStats = campaign.getCargoStatistics();\n+        cargoCapacity = cargoStats.getTotalCombinedCargoCapacity();\n+        cargoTons = cargoStats.getCargoTonnage(false);\n+        double mothballedTonnage = cargoStats.getCargoTonnage(false, true);\n         cargoTons = (cargoTons + mothballedTonnage);\n \n         //transport capacity\n-        int noMech = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_MECH) - campaign.getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noSC = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - campaign.getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        HangarStatistics hangarStats = campaign.getHangarStatistics();\n+        int noMech = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_MECH) - hangarStats.getOccupiedBays(Entity.ETYPE_MECH), 0);\n+        int noSC = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - hangarStats.getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n         @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-                int noCF = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - campaign.getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_AERO) - campaign.getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - campaign.getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_TANK) - campaign.getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - campaign.getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - campaign.getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+                int noCF = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - hangarStats.getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n+        int noASF = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_AERO) - hangarStats.getOccupiedBays(Entity.ETYPE_AERO), 0);\n+        int nolv = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - hangarStats.getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n+        int nohv = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_TANK) - hangarStats.getOccupiedBays(Entity.ETYPE_TANK), 0);\n+        int noinf = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - hangarStats.getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n+        int noBA = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - hangarStats.getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n         @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n-                int noProto = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - campaign.getOccupiedBays(Entity.ETYPE_PROTOMECH),  0);\n-        int freehv = Math.max(campaign.getTotalHeavyVehicleBays() - campaign.getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int freeSC = Math.max(campaign.getTotalSmallCraftBays() - campaign.getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+                int noProto = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - hangarStats.getOccupiedBays(Entity.ETYPE_PROTOMECH),  0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MzI1Mw=="}, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxMzQ2NA==", "bodyText": "This code has been there for a while, not sure exactly what its doing with the calcs but they were approved as valid back when this was introduced. I don't believe I changed the math any.", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502813464", "createdAt": "2020-10-10T17:36:31Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/CampaignSummary.java", "diffHunk": "@@ -146,41 +148,43 @@ public void updateInformation() {\n                 countMissionByStatus[Mission.S_BREACH];\n \n         //cargo capacity\n-        cargoCapacity = campaign.getTotalCombinedCargoCapacity();\n-        cargoTons = campaign.getCargoTonnage(false);\n-        double mothballedTonnage = campaign.getCargoTonnage(false, true);\n+        CargoStatistics cargoStats = campaign.getCargoStatistics();\n+        cargoCapacity = cargoStats.getTotalCombinedCargoCapacity();\n+        cargoTons = cargoStats.getCargoTonnage(false);\n+        double mothballedTonnage = cargoStats.getCargoTonnage(false, true);\n         cargoTons = (cargoTons + mothballedTonnage);\n \n         //transport capacity\n-        int noMech = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_MECH) - campaign.getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noSC = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - campaign.getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        HangarStatistics hangarStats = campaign.getHangarStatistics();\n+        int noMech = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_MECH) - hangarStats.getOccupiedBays(Entity.ETYPE_MECH), 0);\n+        int noSC = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - hangarStats.getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n         @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-                int noCF = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - campaign.getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_AERO) - campaign.getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - campaign.getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_TANK) - campaign.getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - campaign.getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - campaign.getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+                int noCF = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - hangarStats.getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n+        int noASF = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_AERO) - hangarStats.getOccupiedBays(Entity.ETYPE_AERO), 0);\n+        int nolv = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - hangarStats.getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n+        int nohv = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_TANK) - hangarStats.getOccupiedBays(Entity.ETYPE_TANK), 0);\n+        int noinf = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - hangarStats.getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n+        int noBA = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - hangarStats.getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n         @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n-                int noProto = Math.max(campaign.getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - campaign.getOccupiedBays(Entity.ETYPE_PROTOMECH),  0);\n-        int freehv = Math.max(campaign.getTotalHeavyVehicleBays() - campaign.getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int freeSC = Math.max(campaign.getTotalSmallCraftBays() - campaign.getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+                int noProto = Math.max(hangarStats.getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - hangarStats.getOccupiedBays(Entity.ETYPE_PROTOMECH),  0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MzI1Mw=="}, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Nzk0MjQwOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/report/PersonnelReport.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyNzoyNlrOHfZ-8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyNzoyNlrOHfZ-8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MzYxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (getCampaign().getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n          \n          \n            \n                            if (getCampaign().getCampaignOptions().useAdvancedMedical() && (p.getInjuries().size() > 0)) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502693618", "createdAt": "2020-10-09T22:27:26Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/report/PersonnelReport.java", "diffHunk": "@@ -27,53 +27,184 @@\n import javax.swing.JTextPane;\n \n import mekhq.campaign.Campaign;\n-\n-\n+import mekhq.campaign.finances.Money;\n+import mekhq.campaign.personnel.Person;\n \n /**\n  * @author Jay Lawson\n- * @version %I% %G%\n- * @since 3/12/2012\n  */\n public class PersonnelReport extends Report {\n-  \n-    \n+\n+\n     public PersonnelReport(Campaign c) {\n         super(c);\n     }\n-    \n+\n     public String getTitle() {\n         return \"Personnel Report\";\n     }\n-    \n+\n     public JTextPane getCombatPersonnelReport() {\n     \t// Load combat personnel\n         JTextPane txtCombat = new JTextPane();\n         txtCombat.setFont(new Font(\"Courier New\", Font.PLAIN, 12));\n-        txtCombat.setText(getCampaign().getCombatPersonnelDetails());\n+        txtCombat.setText(getCombatPersonnelDetails());\n         return txtCombat;\n     }\n-    \n+\n     public JTextPane getSupportPersonnelReport() {\n     \t// Load support personnel\n         JTextPane txtSupport = new JTextPane();\n         txtSupport.setFont(new Font(\"Courier New\", Font.PLAIN, 12));\n-        txtSupport.setText(getCampaign().getSupportPersonnelDetails());\n+        txtSupport.setText(getSupportPersonnelDetails());\n         return txtSupport;\n     }\n-      \n+\n     public JTextPane getReport() {\n         // SplitPane them\n         JSplitPane splitOverviewPersonnel = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, getCombatPersonnelReport(), getSupportPersonnelReport());\n \t\tsplitOverviewPersonnel.setName(\"splitOverviewPersonnel\");\n \t\tsplitOverviewPersonnel.setOneTouchExpandable(true);\n \t\tsplitOverviewPersonnel.setResizeWeight(0.5);\n-        \n+\n \t\t// Actual report pane\n \t\tJTextPane txtReport = new JTextPane();\n         txtReport.setMinimumSize(new Dimension(800, 500));\n         txtReport.insertComponent(splitOverviewPersonnel);\n         return txtReport;\n     }\n-   \n-}\n\\ No newline at end of file\n+\n+    public String getCombatPersonnelDetails() {\n+        int[] countPersonByType = new int[Person.T_NUM];\n+        int countTotal = 0;\n+        int countInjured = 0;\n+        int countMIA = 0;\n+        int countKIA = 0;\n+        int countDead = 0;\n+        int countRetired = 0;\n+        Money salary = Money.zero();\n+\n+        for (Person p : getCampaign().getPersonnel()) {\n+            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n+                continue;\n+            }\n+\n+            // Add them to the total count\n+            if (p.getStatus().isActive()) {\n+                countPersonByType[p.getPrimaryRole()]++;\n+                countTotal++;\n+                if (getCampaign().getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Nzk0Mjk1OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/report/PersonnelReport.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyNzo1MVrOHfZ_SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMjoyNzo1MVrOHfZ_SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5MzcwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n          \n          \n            \n                            if ((p.getInjuries().size() > 0) || (p.getHits() > 0)) {", "url": "https://github.com/MegaMek/mekhq/pull/2127#discussion_r502693705", "createdAt": "2020-10-09T22:27:51Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/report/PersonnelReport.java", "diffHunk": "@@ -27,53 +27,184 @@\n import javax.swing.JTextPane;\n \n import mekhq.campaign.Campaign;\n-\n-\n+import mekhq.campaign.finances.Money;\n+import mekhq.campaign.personnel.Person;\n \n /**\n  * @author Jay Lawson\n- * @version %I% %G%\n- * @since 3/12/2012\n  */\n public class PersonnelReport extends Report {\n-  \n-    \n+\n+\n     public PersonnelReport(Campaign c) {\n         super(c);\n     }\n-    \n+\n     public String getTitle() {\n         return \"Personnel Report\";\n     }\n-    \n+\n     public JTextPane getCombatPersonnelReport() {\n     \t// Load combat personnel\n         JTextPane txtCombat = new JTextPane();\n         txtCombat.setFont(new Font(\"Courier New\", Font.PLAIN, 12));\n-        txtCombat.setText(getCampaign().getCombatPersonnelDetails());\n+        txtCombat.setText(getCombatPersonnelDetails());\n         return txtCombat;\n     }\n-    \n+\n     public JTextPane getSupportPersonnelReport() {\n     \t// Load support personnel\n         JTextPane txtSupport = new JTextPane();\n         txtSupport.setFont(new Font(\"Courier New\", Font.PLAIN, 12));\n-        txtSupport.setText(getCampaign().getSupportPersonnelDetails());\n+        txtSupport.setText(getSupportPersonnelDetails());\n         return txtSupport;\n     }\n-      \n+\n     public JTextPane getReport() {\n         // SplitPane them\n         JSplitPane splitOverviewPersonnel = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, getCombatPersonnelReport(), getSupportPersonnelReport());\n \t\tsplitOverviewPersonnel.setName(\"splitOverviewPersonnel\");\n \t\tsplitOverviewPersonnel.setOneTouchExpandable(true);\n \t\tsplitOverviewPersonnel.setResizeWeight(0.5);\n-        \n+\n \t\t// Actual report pane\n \t\tJTextPane txtReport = new JTextPane();\n         txtReport.setMinimumSize(new Dimension(800, 500));\n         txtReport.insertComponent(splitOverviewPersonnel);\n         return txtReport;\n     }\n-   \n-}\n\\ No newline at end of file\n+\n+    public String getCombatPersonnelDetails() {\n+        int[] countPersonByType = new int[Person.T_NUM];\n+        int countTotal = 0;\n+        int countInjured = 0;\n+        int countMIA = 0;\n+        int countKIA = 0;\n+        int countDead = 0;\n+        int countRetired = 0;\n+        Money salary = Money.zero();\n+\n+        for (Person p : getCampaign().getPersonnel()) {\n+            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n+                continue;\n+            }\n+\n+            // Add them to the total count\n+            if (p.getStatus().isActive()) {\n+                countPersonByType[p.getPrimaryRole()]++;\n+                countTotal++;\n+                if (getCampaign().getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n+                    countInjured++;\n+                } else if (p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+                salary = salary.plus(p.getSalary());\n+            } else if (p.getStatus().isRetired()) {\n+                countRetired++;\n+            } else if (p.getStatus().isMIA()) {\n+                countMIA++;\n+            } else if (p.getStatus().isKIA()) {\n+                countKIA++;\n+                countDead++;\n+            } else if (p.getStatus().isDead()) {\n+                countDead++;\n+            }\n+        }\n+\n+        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n+\n+        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n+\n+        for (int i = 0; i < Person.T_NUM; i++) {\n+            if (Person.isCombatRole(i)) {\n+                sb.append(String.format(\"    %-30s    %4s\\n\",\n+                        Person.getRoleDesc(i, getCampaign().getFaction().isClan()), countPersonByType[i]));\n+            }\n+        }\n+\n+        sb.append(\"\\n\")\n+                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n+                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n+                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n+\n+        return sb.toString();\n+    }\n+\n+    public String getSupportPersonnelDetails() {\n+        int[] countPersonByType = new int[Person.T_NUM];\n+        int countTotal = 0;\n+        int countInjured = 0;\n+        int countMIA = 0;\n+        int countKIA = 0;\n+        int countDead = 0;\n+        int countRetired = 0;\n+        Money salary = Money.zero();\n+        int prisoners = 0;\n+        int bondsmen = 0;\n+        int dependents = 0;\n+\n+        for (Person p : getCampaign().getPersonnel()) {\n+            // Add them to the total count\n+            boolean primarySupport = p.hasPrimarySupportRole(false);\n+\n+            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n+                countPersonByType[p.getPrimaryRole()]++;\n+                countTotal++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e028b04713a41ec415910ea4d0ed03a3678864"}, "originalPosition": 153}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2034, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}