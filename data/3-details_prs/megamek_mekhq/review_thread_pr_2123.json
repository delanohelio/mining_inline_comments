{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MTA2NjMz", "number": 2123, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTozNTo1MFrOEq5JDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowODowNlrOEq5yqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDExODU1OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTozNTo1MFrOHdXB9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowOTo0MlrOHdYIJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0ODA4NA==", "bodyText": "Tab spacing", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500548084", "createdAt": "2020-10-06T19:35:50Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java", "diffHunk": "@@ -365,14 +365,7 @@ private void addUnit(Entity en, boolean pay) {\n \t\t\t\tcampaign.getLocalDate())) {\n \t\t\treturn;\n \t\t}\n-\t\tcampaign.addUnit(en, false, 0);\n-\t\tUnit unit = null;\n-\t\tfor (Unit u : campaign.getUnits()) {\n-\t\t\tif (u.getEntity() == en) {\n-\t\t\t\tunit = u;\n-\t\t\t\tbreak;\n-\t\t\t}\n-        }\n+\t\tUnit unit = campaign.addNewUnit(en, false, 0);\n         if (unit == null) {\n             // No such unit matching the entity.\n             return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NjA1NA==", "bodyText": "Swore I got all of these, may not have pushed the change.", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500566054", "createdAt": "2020-10-06T20:09:42Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java", "diffHunk": "@@ -365,14 +365,7 @@ private void addUnit(Entity en, boolean pay) {\n \t\t\t\tcampaign.getLocalDate())) {\n \t\t\treturn;\n \t\t}\n-\t\tcampaign.addUnit(en, false, 0);\n-\t\tUnit unit = null;\n-\t\tfor (Unit u : campaign.getUnits()) {\n-\t\t\tif (u.getEntity() == en) {\n-\t\t\t\tunit = u;\n-\t\t\t\tbreak;\n-\t\t\t}\n-        }\n+\t\tUnit unit = campaign.addNewUnit(en, false, 0);\n         if (unit == null) {\n             // No such unit matching the entity.\n             return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0ODA4NA=="}, "originalCommit": {"oid": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDEzMDU1OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/rating/CampaignOpsReputation.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTozOTozNlrOHdXJdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTozOTozNlrOHdXJdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU1MDAwNg==", "bodyText": "We should never have a null unit, so we probably want to fix the backend reason for this check if it still exists", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500550006", "createdAt": "2020-10-06T19:39:36Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/rating/CampaignOpsReputation.java", "diffHunk": "@@ -248,8 +247,7 @@ private int getTotalForceUnits() {\n         // Count total units for transport\n         getTotalCombatUnits();\n \n-        List<Unit> unitList = getCampaign().getCopyOfUnits();\n-        for (Unit u : unitList) {\n+        for (Unit u : getCampaign().getHangar().getUnits()) {\n             if (u == null) {\n                 continue;\n             }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDE0NjkwOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/gui/dialog/PayCollateralDialog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTo0NDozOFrOHdXTxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTo0NDozOFrOHdXTxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU1MjY0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if(j == units.size()) {\n          \n          \n            \n                        if (j == units.size()) {", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500552647", "createdAt": "2020-10-06T19:44:38Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/gui/dialog/PayCollateralDialog.java", "diffHunk": "@@ -137,7 +137,7 @@ private void initComponents() {\n             gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n             gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;\n             gridBagConstraints.weightx = 1.0;\n-            if(j == (units.size())) {\n+            if(j == units.size()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDE1OTM4OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/Hangar.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTo0ODoyN1rOHdXbaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTo1MDoyNFrOHdXfOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU1NDYwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    UUID id = unit.getId();\n          \n          \n            \n                    if (id == null) {\n          \n          \n            \n                        id = UUID.randomUUID();\n          \n          \n            \n                        unit.setId(id);\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    units.put(id, unit);\n          \n          \n            \n                    if (unit.getId() == null) {\n          \n          \n            \n                        unit.setId(UUID.randomUUID());\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    units.put(unit.getId(), unit);", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500554603", "createdAt": "2020-10-06T19:48:27Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/Hangar.java", "diffHunk": "@@ -0,0 +1,166 @@\n+/*\n+ * Hangar.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign;\n+\n+import java.io.PrintWriter;\n+import java.util.Collection;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.function.BiConsumer;\n+import java.util.function.Consumer;\n+import java.util.function.Function;\n+import java.util.function.Predicate;\n+import java.util.stream.Stream;\n+\n+import mekhq.MekHqXmlUtil;\n+import mekhq.campaign.finances.Money;\n+import mekhq.campaign.unit.Unit;\n+\n+/**\n+ * Represents a hangar which contains zero or more units.\n+ */\n+public class Hangar {\n+    private Map<UUID, Unit> units = new LinkedHashMap<>();\n+\n+    /**\n+     * Adds a unit to the hangar.\n+     *\n+     * If the unit does not have an ID, one is\n+     * assigned to it.\n+     *\n+     * @param unit The unit to add to the hangar.\n+     */\n+    public void addUnit(Unit unit) {\n+        if (unit == null) {\n+            return;\n+        }\n+\n+        UUID id = unit.getId();\n+        if (id == null) {\n+            id = UUID.randomUUID();\n+            unit.setId(id);\n+        }\n+\n+        units.put(id, unit);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU1NTU3OQ==", "bodyText": "Just an idea, because this is a default getter it should be fine", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500555579", "createdAt": "2020-10-06T19:50:24Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/Hangar.java", "diffHunk": "@@ -0,0 +1,166 @@\n+/*\n+ * Hangar.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign;\n+\n+import java.io.PrintWriter;\n+import java.util.Collection;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.function.BiConsumer;\n+import java.util.function.Consumer;\n+import java.util.function.Function;\n+import java.util.function.Predicate;\n+import java.util.stream.Stream;\n+\n+import mekhq.MekHqXmlUtil;\n+import mekhq.campaign.finances.Money;\n+import mekhq.campaign.unit.Unit;\n+\n+/**\n+ * Represents a hangar which contains zero or more units.\n+ */\n+public class Hangar {\n+    private Map<UUID, Unit> units = new LinkedHashMap<>();\n+\n+    /**\n+     * Adds a unit to the hangar.\n+     *\n+     * If the unit does not have an ID, one is\n+     * assigned to it.\n+     *\n+     * @param unit The unit to add to the hangar.\n+     */\n+    public void addUnit(Unit unit) {\n+        if (unit == null) {\n+            return;\n+        }\n+\n+        UUID id = unit.getId();\n+        if (id == null) {\n+            id = UUID.randomUUID();\n+            unit.setId(id);\n+        }\n+\n+        units.put(id, unit);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU1NDYwMw=="}, "originalCommit": {"oid": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDE3NzU4OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/Hangar.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTo1NDowNlrOHdXnDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTo1NDowNlrOHdXnDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU1NzU4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    pw1.println(MekHqXmlUtil.indentStr(indent) + \"<\" + tag + \">\");\n          \n          \n            \n                    MekHqXmlUtil.writeSimpleXMLOpenIndentedLine(pw1, indent, tag);", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500557583", "createdAt": "2020-10-06T19:54:06Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/Hangar.java", "diffHunk": "@@ -0,0 +1,166 @@\n+/*\n+ * Hangar.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign;\n+\n+import java.io.PrintWriter;\n+import java.util.Collection;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.function.BiConsumer;\n+import java.util.function.Consumer;\n+import java.util.function.Function;\n+import java.util.function.Predicate;\n+import java.util.stream.Stream;\n+\n+import mekhq.MekHqXmlUtil;\n+import mekhq.campaign.finances.Money;\n+import mekhq.campaign.unit.Unit;\n+\n+/**\n+ * Represents a hangar which contains zero or more units.\n+ */\n+public class Hangar {\n+    private Map<UUID, Unit> units = new LinkedHashMap<>();\n+\n+    /**\n+     * Adds a unit to the hangar.\n+     *\n+     * If the unit does not have an ID, one is\n+     * assigned to it.\n+     *\n+     * @param unit The unit to add to the hangar.\n+     */\n+    public void addUnit(Unit unit) {\n+        if (unit == null) {\n+            return;\n+        }\n+\n+        UUID id = unit.getId();\n+        if (id == null) {\n+            id = UUID.randomUUID();\n+            unit.setId(id);\n+        }\n+\n+        units.put(id, unit);\n+    }\n+\n+    /**\n+     * Gets a unit by a given ID.\n+     * @param id The unique identifier of a unit.\n+     * @return The unit matching the unique identifier,\n+     *         otherwise null if that unit does not exist.\n+     */\n+    public Unit getUnit(UUID id) {\n+        return units.get(id);\n+    }\n+\n+    /**\n+     * Gets a collection of units in the hangar.\n+     * @return A collection of units in the hangar.\n+     */\n+    public Collection<Unit> getUnits() {\n+        return units.values();\n+    }\n+\n+    /**\n+     * Gets a Stream of units in the hangar.\n+     * @return A Stream of units in the hangar.\n+     */\n+    public Stream<Unit> getUnitsStream() {\n+        return units.values().stream();\n+    }\n+\n+    /**\n+     * Calculates the total costs for the units in the hangar.\n+     * @param getCosts A function which returns a cost for a unit.\n+     * @return The total costs for the units.\n+     */\n+    public Money getUnitCosts(Function<Unit, Money> getCosts) {\n+        return getUnitsStream().map(getCosts).reduce(Money.zero(), Money::plus);\n+    }\n+\n+    /**\n+     * Calculates the total costs for the units matching a predicate\n+     * in the hangar.\n+     * @param predicate A function to use to select a unit.\n+     * @param getCosts A function which returns a cost for a selected unit.\n+     * @return The total costs for the units selected by the predicate.\n+     */\n+    public Money getUnitCosts(Predicate<Unit> predicate, Function<Unit, Money> getCosts) {\n+        return getUnitsStream().filter(predicate).map(getCosts).reduce(Money.zero(), Money::plus);\n+    }\n+\n+    /**\n+     * Executes a function for each unit in the hangar.\n+     * @param consumer A function to apply to each unit.\n+     */\n+    public void forEachUnit(Consumer<Unit> consumer) {\n+        units.forEach((id, unit) -> consumer.accept(unit));\n+    }\n+\n+    /**\n+     * Executes a function for each unit in the hangar.\n+     * @param consumer A function to apply to each ID-unit pair.\n+     */\n+    public void forEachUnit(BiConsumer<UUID, Unit> consumer) {\n+        units.forEach(consumer);\n+    }\n+\n+    /**\n+     * Searches for a specific unit using the given predicate.\n+     * @param predicate A function to use to select a given unit.\n+     * @return The first unit found which matches the predicate,\n+     *         otherwise null if no unit was found.\n+     */\n+    public Unit findUnit(Predicate<Unit> predicate) {\n+        if (predicate == null) {\n+            return null;\n+        }\n+\n+        for (Unit unit : units.values()) {\n+            if (predicate.test(unit)) {\n+                return unit;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Removes a unit from the hangar.\n+     * @param id The unit ID.\n+     * @return true if the unit was removed, otherwise false.\n+     */\n+    public boolean removeUnit(UUID id) {\n+        return null != units.remove(id);\n+    }\n+\n+\tpublic void writeToXml(PrintWriter pw1, int indent, String tag) {\n+        pw1.println(MekHqXmlUtil.indentStr(indent) + \"<\" + tag + \">\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca"}, "originalPosition": 158}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDE4MDQyOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/Hangar.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTo1NDo1N1rOHdXoyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTo1NDo1N1rOHdXoyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU1ODAyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    pw1.println(MekHqXmlUtil.indentStr(indent) + \"</\" + tag + \">\");\n          \n          \n            \n                    MekHqXmlUtil.writeSimpleXMLCloseIndentedLine(pw1, indent, tag);", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500558025", "createdAt": "2020-10-06T19:54:57Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/Hangar.java", "diffHunk": "@@ -0,0 +1,166 @@\n+/*\n+ * Hangar.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign;\n+\n+import java.io.PrintWriter;\n+import java.util.Collection;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.function.BiConsumer;\n+import java.util.function.Consumer;\n+import java.util.function.Function;\n+import java.util.function.Predicate;\n+import java.util.stream.Stream;\n+\n+import mekhq.MekHqXmlUtil;\n+import mekhq.campaign.finances.Money;\n+import mekhq.campaign.unit.Unit;\n+\n+/**\n+ * Represents a hangar which contains zero or more units.\n+ */\n+public class Hangar {\n+    private Map<UUID, Unit> units = new LinkedHashMap<>();\n+\n+    /**\n+     * Adds a unit to the hangar.\n+     *\n+     * If the unit does not have an ID, one is\n+     * assigned to it.\n+     *\n+     * @param unit The unit to add to the hangar.\n+     */\n+    public void addUnit(Unit unit) {\n+        if (unit == null) {\n+            return;\n+        }\n+\n+        UUID id = unit.getId();\n+        if (id == null) {\n+            id = UUID.randomUUID();\n+            unit.setId(id);\n+        }\n+\n+        units.put(id, unit);\n+    }\n+\n+    /**\n+     * Gets a unit by a given ID.\n+     * @param id The unique identifier of a unit.\n+     * @return The unit matching the unique identifier,\n+     *         otherwise null if that unit does not exist.\n+     */\n+    public Unit getUnit(UUID id) {\n+        return units.get(id);\n+    }\n+\n+    /**\n+     * Gets a collection of units in the hangar.\n+     * @return A collection of units in the hangar.\n+     */\n+    public Collection<Unit> getUnits() {\n+        return units.values();\n+    }\n+\n+    /**\n+     * Gets a Stream of units in the hangar.\n+     * @return A Stream of units in the hangar.\n+     */\n+    public Stream<Unit> getUnitsStream() {\n+        return units.values().stream();\n+    }\n+\n+    /**\n+     * Calculates the total costs for the units in the hangar.\n+     * @param getCosts A function which returns a cost for a unit.\n+     * @return The total costs for the units.\n+     */\n+    public Money getUnitCosts(Function<Unit, Money> getCosts) {\n+        return getUnitsStream().map(getCosts).reduce(Money.zero(), Money::plus);\n+    }\n+\n+    /**\n+     * Calculates the total costs for the units matching a predicate\n+     * in the hangar.\n+     * @param predicate A function to use to select a unit.\n+     * @param getCosts A function which returns a cost for a selected unit.\n+     * @return The total costs for the units selected by the predicate.\n+     */\n+    public Money getUnitCosts(Predicate<Unit> predicate, Function<Unit, Money> getCosts) {\n+        return getUnitsStream().filter(predicate).map(getCosts).reduce(Money.zero(), Money::plus);\n+    }\n+\n+    /**\n+     * Executes a function for each unit in the hangar.\n+     * @param consumer A function to apply to each unit.\n+     */\n+    public void forEachUnit(Consumer<Unit> consumer) {\n+        units.forEach((id, unit) -> consumer.accept(unit));\n+    }\n+\n+    /**\n+     * Executes a function for each unit in the hangar.\n+     * @param consumer A function to apply to each ID-unit pair.\n+     */\n+    public void forEachUnit(BiConsumer<UUID, Unit> consumer) {\n+        units.forEach(consumer);\n+    }\n+\n+    /**\n+     * Searches for a specific unit using the given predicate.\n+     * @param predicate A function to use to select a given unit.\n+     * @return The first unit found which matches the predicate,\n+     *         otherwise null if no unit was found.\n+     */\n+    public Unit findUnit(Predicate<Unit> predicate) {\n+        if (predicate == null) {\n+            return null;\n+        }\n+\n+        for (Unit unit : units.values()) {\n+            if (predicate.test(unit)) {\n+                return unit;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Removes a unit from the hangar.\n+     * @param id The unit ID.\n+     * @return true if the unit was removed, otherwise false.\n+     */\n+    public boolean removeUnit(UUID id) {\n+        return null != units.remove(id);\n+    }\n+\n+\tpublic void writeToXml(PrintWriter pw1, int indent, String tag) {\n+        pw1.println(MekHqXmlUtil.indentStr(indent) + \"<\" + tag + \">\");\n+\n+        forEachUnit(unit -> {\n+            unit.writeToXml(pw1, indent + 1);\n+        });\n+\n+        pw1.println(MekHqXmlUtil.indentStr(indent) + \"</\" + tag + \">\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca"}, "originalPosition": 164}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDE5ODIxOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowMDoxN1rOHdXz7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowMDoxN1rOHdXz7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2MDg3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .filter(u -> u.requiresMaintenance() && null != u.getTech())\n          \n          \n            \n                            .filter(u -> u.requiresMaintenance() && (null != u.getTech()))", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500560876", "createdAt": "2020-10-06T20:00:17Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -3676,24 +3617,19 @@ private Money getTheoreticalPayroll(boolean noInfantry) {\n     }\n \n     public Money getMaintenanceCosts() {\n-        Money costs = Money.zero();\n         if (campaignOptions.payForMaintain()) {\n-            for (Map.Entry<UUID, Unit> mu : units.entrySet()) {\n-                Unit u = mu.getValue();\n-                if (u.requiresMaintenance() && null != u.getTech()) {\n-                    costs = costs.plus(u.getMaintenanceCost());\n-                }\n-            }\n+            return getHangar().getUnitsStream()\n+                .filter(u -> u.requiresMaintenance() && null != u.getTech())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca"}, "originalPosition": 302}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDIxMzIzOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowNDozOFrOHdX9cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowNDozOFrOHdX9cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2MzMxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (int)Math.round(getHangar().getUnitsStream()\n          \n          \n            \n                    return (int) Math.round(getHangar().getUnitsStream()", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500563312", "createdAt": "2020-10-06T20:04:38Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -7236,117 +7172,88 @@ public void setHealingTimeOptions(int newHeal, int newNaturalHeal) {\n     }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca"}, "originalPosition": 545}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDIxNDAxOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowNDo1MFrOHdX96w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowNDo1MFrOHdX96w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2MzQzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (int)Math.round(getHangar().getUnitsStream()\n          \n          \n            \n                    return (int) Math.round(getHangar().getUnitsStream()", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500563435", "createdAt": "2020-10-06T20:04:50Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -7236,117 +7172,88 @@ public void setHealingTimeOptions(int newHeal, int newNaturalHeal) {\n     }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca"}, "originalPosition": 556}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDIxNDYxOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowNDo1N1rOHdX-Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowNDo1N1rOHdX-Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2MzUyMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (int)Math.round(getHangar().getUnitsStream()\n          \n          \n            \n                    return (int) Math.round(getHangar().getUnitsStream()", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500563522", "createdAt": "2020-10-06T20:04:57Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -7236,117 +7172,88 @@ public void setHealingTimeOptions(int newHeal, int newNaturalHeal) {\n     }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n     }\n \n     public int getTotalSmallCraftBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getSmallCraftCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n     }\n \n     public int getTotalBattleArmorBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getBattleArmorCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca"}, "originalPosition": 578}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDIxNTE5OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowNTowMlrOHdX-jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowNTowMlrOHdX-jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2MzU5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (int)Math.round(getHangar().getUnitsStream()\n          \n          \n            \n                    return (int) Math.round(getHangar().getUnitsStream()", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500563597", "createdAt": "2020-10-06T20:05:02Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -7236,117 +7172,88 @@ public void setHealingTimeOptions(int newHeal, int newNaturalHeal) {\n     }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n     }\n \n     public int getTotalSmallCraftBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getSmallCraftCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca"}, "originalPosition": 567}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDIxODEzOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowNTo0OFrOHdYASw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowNTo0OFrOHdYASw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NDA0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (int)Math.round(getHangar().getUnitsStream()\n          \n          \n            \n                    return (int) Math.round(getHangar().getUnitsStream()", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500564043", "createdAt": "2020-10-06T20:05:48Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -7236,117 +7172,88 @@ public void setHealingTimeOptions(int newHeal, int newNaturalHeal) {\n     }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n     }\n \n     public int getTotalSmallCraftBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getSmallCraftCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n     }\n \n     public int getTotalBattleArmorBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getBattleArmorCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n     }\n \n     public int getTotalInfantryBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getInfantryCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getHeavyVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getHeavyVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalLightVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getLightVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca"}, "originalPosition": 611}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDIxODM4OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowNTo1NFrOHdYAdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowNTo1NFrOHdYAdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NDA4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (int)Math.round(getHangar().getUnitsStream()\n          \n          \n            \n                    return (int) Math.round(getHangar().getUnitsStream()", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500564084", "createdAt": "2020-10-06T20:05:54Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -7236,117 +7172,88 @@ public void setHealingTimeOptions(int newHeal, int newNaturalHeal) {\n     }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n     }\n \n     public int getTotalSmallCraftBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getSmallCraftCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n     }\n \n     public int getTotalBattleArmorBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getBattleArmorCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n     }\n \n     public int getTotalInfantryBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getInfantryCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getHeavyVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca"}, "originalPosition": 600}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDIxODczOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowNjowMFrOHdYApg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowNjowMFrOHdYApg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NDEzNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (int)Math.round(getHangar().getUnitsStream()\n          \n          \n            \n                    return (int) Math.round(getHangar().getUnitsStream()", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500564134", "createdAt": "2020-10-06T20:06:00Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -7236,117 +7172,88 @@ public void setHealingTimeOptions(int newHeal, int newNaturalHeal) {\n     }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n     }\n \n     public int getTotalSmallCraftBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getSmallCraftCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n     }\n \n     public int getTotalBattleArmorBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getBattleArmorCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n     }\n \n     public int getTotalInfantryBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getInfantryCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca"}, "originalPosition": 589}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDIxOTc2OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowNjoyM1rOHdYBVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowNjoyM1rOHdYBVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NDMwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (int)Math.round(getHangar().getUnitsStream()\n          \n          \n            \n                    return (int) Math.round(getHangar().getUnitsStream()", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500564309", "createdAt": "2020-10-06T20:06:23Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -7236,117 +7172,88 @@ public void setHealingTimeOptions(int newHeal, int newNaturalHeal) {\n     }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n     }\n \n     public int getTotalSmallCraftBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getSmallCraftCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n     }\n \n     public int getTotalBattleArmorBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getBattleArmorCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n     }\n \n     public int getTotalInfantryBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getInfantryCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getHeavyVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getHeavyVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalLightVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getLightVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLightVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalProtomechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getProtomechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca"}, "originalPosition": 622}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDIyNTA1OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowODowNlrOHdYExA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowODowNlrOHdYExA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NTE4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            if (null != p.getUnitId() && null != getHangar().getUnit(p.getUnitId())\n          \n          \n            \n                                            if ((null != p.getUnitId()) && (null != getHangar().getUnit(p.getUnitId()))", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500565188", "createdAt": "2020-10-06T20:08:06Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -8194,8 +8101,8 @@ public void initAtB(boolean newCampaign) {\n                                     // TODO : Fix this so we aren't using a hack that just assumes IS2\n                                     p.setOriginalUnitTech(Person.TECH_IS2);\n                                 }\n-                                if (null != p.getUnitId() && null != units.get(p.getUnitId())\n-                                        && ms.getName().equals(units.get(p.getUnitId()).getEntity().getShortNameRaw())) {\n+                                if (null != p.getUnitId() && null != getHangar().getUnit(p.getUnitId())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca"}, "originalPosition": 703}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2025, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}