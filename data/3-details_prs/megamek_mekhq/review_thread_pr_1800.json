{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMjUxMDY0", "number": 1800, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMTowMToyNVrOEE2RRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMTo1NzozMVrOEE3Q4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTE4OTE3OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMTowMToyNVrOGiuoAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMTowMToyNVrOGiuoAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA2ODY3NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(null != tech && tech.getOptions().booleanOption(\"tech_engineer\")) {\n          \n          \n            \n                    if ((null != tech) && tech.getOptions().booleanOption(\"tech_engineer\")) {", "url": "https://github.com/MegaMek/mekhq/pull/1800#discussion_r439068675", "createdAt": "2020-06-11T21:01:25Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1600,6 +1600,9 @@ else if(oldUnit.getEntity().hasQuirk(\"difficult_maintain\")) {\n         if(customJob) {\n             mods.addModifier(2, \"custom job\");\n         }\n+        if(null != tech && tech.getOptions().booleanOption(\"tech_engineer\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f53af710d9a12459658278bc7593a9028508d8dc"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTIwOTA2OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/Part.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMTowOTowM1rOGiu0_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMTowOTowM1rOGiu0_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA3MTk5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(qualityMod > 0 &&\n          \n          \n            \n                            null != tech &&\n          \n          \n            \n                            tech.getOptions().booleanOption(PersonnelOptions.TECH_FIXER)) {\n          \n          \n            \n                    if ((qualityMod > 0) &&\n          \n          \n            \n                            (null != tech) &&\n          \n          \n            \n                            tech.getOptions().booleanOption(PersonnelOptions.TECH_FIXER)) {", "url": "https://github.com/MegaMek/mekhq/pull/1800#discussion_r439071999", "createdAt": "2020-06-11T21:09:03Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/Part.java", "diffHunk": "@@ -1000,29 +981,47 @@ else if (getUnit().getEntity().hasQuirk(\"difficult_maintain\")) {\n         }\n \n         if(campaign.getCampaignOptions().useQualityMaintenance()) {\n-            switch(quality) {\n+            mods = getQualityMods(mods, getUnit().getTech());\n+        }\n+        return mods;\n+    }\n+\n+    /**\n+     * adds the quality modifiers for repair and maintenance of this part to a TargetRoll\n+     * @param mods - the {@link TargetRoll} that quality modifiers should be added to\n+     * @param tech - the {@link Person} that will make the repair or maintenance check, may be null\n+     * @return the modified {@link TargetRoll}\n+     */\n+    private TargetRoll getQualityMods(TargetRoll mods, Person tech) {\n+        int qualityMod = 0;\n+        switch(quality) {\n             case QUALITY_A:\n-                mods.addModifier(3, \"Quality A\");\n+                qualityMod = 3;\n                 break;\n             case QUALITY_B:\n-                mods.addModifier(2, \"Quality B\");\n+                qualityMod = 2;\n                 break;\n             case QUALITY_C:\n-                mods.addModifier(1, \"Quality C\");\n+                qualityMod = 1;\n                 break;\n             case QUALITY_D:\n-                mods.addModifier(0, \"Quality D\");\n+                qualityMod = 0;\n                 break;\n             case QUALITY_E:\n-                mods.addModifier(-1, \"Quality E\");\n+                qualityMod = -1;\n                 break;\n             case QUALITY_F:\n-                mods.addModifier(-2, \"Quality F\");\n+                qualityMod = -2;\n                 break;\n-            }\n         }\n-\n-        return mods;\n+        mods.addModifier(qualityMod, getQualityName(quality, campaign.getCampaignOptions().reverseQualityNames()));\n+        if(qualityMod > 0 &&\n+                null != tech &&\n+                tech.getOptions().booleanOption(PersonnelOptions.TECH_FIXER)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f53af710d9a12459658278bc7593a9028508d8dc"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTM1MjAxOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/Part.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMTo1NzozMVrOGiwNfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMTo1NzozMVrOGiwNfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA5NDY1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    switch(quality) {\n          \n          \n            \n                    switch (quality) {", "url": "https://github.com/MegaMek/mekhq/pull/1800#discussion_r439094652", "createdAt": "2020-06-11T21:57:31Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/Part.java", "diffHunk": "@@ -1000,29 +981,47 @@ else if (getUnit().getEntity().hasQuirk(\"difficult_maintain\")) {\n         }\n \n         if(campaign.getCampaignOptions().useQualityMaintenance()) {\n-            switch(quality) {\n+            mods = getQualityMods(mods, getUnit().getTech());\n+        }\n+        return mods;\n+    }\n+\n+    /**\n+     * adds the quality modifiers for repair and maintenance of this part to a TargetRoll\n+     * @param mods - the {@link TargetRoll} that quality modifiers should be added to\n+     * @param tech - the {@link Person} that will make the repair or maintenance check, may be null\n+     * @return the modified {@link TargetRoll}\n+     */\n+    private TargetRoll getQualityMods(TargetRoll mods, Person tech) {\n+        int qualityMod = 0;\n+        switch(quality) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f53af710d9a12459658278bc7593a9028508d8dc"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2341, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}