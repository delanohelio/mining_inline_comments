{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2OTQ4NTY0", "number": 1850, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMjoxMjo1NlrOEPXtXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMTo0OToxMVrOEQYiTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTUyNTQzOnYy", "diffSide": "LEFT", "path": "MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMjoxMjo1NlrOGzC_JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDoyNjoxNFrOG06lvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE3OTQ5Mg==", "bodyText": "Let's leave this here. It is extremely useful for debugging, or if you want to generate some specific units.", "url": "https://github.com/MegaMek/mekhq/pull/1850#discussion_r456179492", "createdAt": "2020-07-17T02:12:56Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java", "diffHunk": "@@ -1301,66 +1318,6 @@ public static Entity createEntityWithCrew(String faction, int skill, Campaign ca\n         return en;\n     }\n \n-    /**\n-     * Generates a new Entity without using a RAT. Useful for \"persistent\" or fixed units.\n-     *\n-     * @param name            Full name (chassis + model) of the entity to generate.\n-     * @param fName            Faction code to use for crew name generation\n-     * @param skill            RandomSkillsGenerator.L_* constant for the average force skill level.\n-     * @param campaign\n-     * @return                A new Entity\n-     */\n-    @Deprecated //Deprecated 15-Feb-2020 as unused, needs the current name system to be implemented if activated\n-    private static Entity getEntityByName(String name, String fName, int skill, Campaign campaign) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "695818813718934f2ebc9b724341b59f1afba80f"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgxNTg3NA==", "bodyText": "This will need to be modified then, as it doesn't work properly as it is currently because of personnel changes, and has not since February. If you want me to I can restore it and fix it?", "url": "https://github.com/MegaMek/mekhq/pull/1850#discussion_r456815874", "createdAt": "2020-07-18T18:33:25Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java", "diffHunk": "@@ -1301,66 +1318,6 @@ public static Entity createEntityWithCrew(String faction, int skill, Campaign ca\n         return en;\n     }\n \n-    /**\n-     * Generates a new Entity without using a RAT. Useful for \"persistent\" or fixed units.\n-     *\n-     * @param name            Full name (chassis + model) of the entity to generate.\n-     * @param fName            Faction code to use for crew name generation\n-     * @param skill            RandomSkillsGenerator.L_* constant for the average force skill level.\n-     * @param campaign\n-     * @return                A new Entity\n-     */\n-    @Deprecated //Deprecated 15-Feb-2020 as unused, needs the current name system to be implemented if activated\n-    private static Entity getEntityByName(String name, String fName, int skill, Campaign campaign) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE3OTQ5Mg=="}, "originalCommit": {"oid": "695818813718934f2ebc9b724341b59f1afba80f"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODEzOTA3MQ==", "bodyText": "Refactored it down so that it just uses the createEntityWithCrew but first grabs the MechSummary. This keeps the current behaviour while being less code.", "url": "https://github.com/MegaMek/mekhq/pull/1850#discussion_r458139071", "createdAt": "2020-07-21T14:26:14Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java", "diffHunk": "@@ -1301,66 +1318,6 @@ public static Entity createEntityWithCrew(String faction, int skill, Campaign ca\n         return en;\n     }\n \n-    /**\n-     * Generates a new Entity without using a RAT. Useful for \"persistent\" or fixed units.\n-     *\n-     * @param name            Full name (chassis + model) of the entity to generate.\n-     * @param fName            Faction code to use for crew name generation\n-     * @param skill            RandomSkillsGenerator.L_* constant for the average force skill level.\n-     * @param campaign\n-     * @return                A new Entity\n-     */\n-    @Deprecated //Deprecated 15-Feb-2020 as unused, needs the current name system to be implemented if activated\n-    private static Entity getEntityByName(String name, String fName, int skill, Campaign campaign) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE3OTQ5Mg=="}, "originalCommit": {"oid": "695818813718934f2ebc9b724341b59f1afba80f"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTUyODc4OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/personnel/Clan.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMjoxNTowNlrOGzDBKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMjoxNToyMFrOGzDBdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE4MDAxMA==", "bodyText": "Let's go through this file and put some documentation on the methods.", "url": "https://github.com/MegaMek/mekhq/pull/1850#discussion_r456180010", "createdAt": "2020-07-17T02:15:06Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/personnel/Clan.java", "diffHunk": "@@ -0,0 +1,293 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package mekhq.campaign.personnel;\n+\n+import megamek.common.Compute;\n+import megamek.common.logging.LogLevel;\n+import megamek.common.util.StringUtil;\n+import mekhq.MekHQ;\n+import mekhq.MekHqXmlUtil;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.w3c.dom.Node;\n+import org.w3c.dom.NodeList;\n+\n+import javax.xml.parsers.DocumentBuilder;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+import java.util.*;\n+\n+/**\n+ * This is used to supply clan data needed to generate bloodnames\n+ * TODO : This should probably be merged into Faction\n+ */\n+public class Clan {\n+    //region Variable Declarations\n+    private static Map<String, Clan> allClans;\n+\n+    private String code;\n+    private String generationCode; // this is used to enable RA name generation using CSR lists, for example\n+    private String fullName;\n+    private int startDate;\n+    private int endDate;\n+    private int abjurationDate;\n+    private List<DatedRecord> rivals;\n+    private List<DatedRecord> nameChanges;\n+    private boolean homeClan;\n+    //endregion Variable Declarations\n+\n+    public Clan() {\n+        startDate = 2807;\n+        endDate = 9999;\n+        abjurationDate = 0;\n+        rivals = new ArrayList<>();\n+        nameChanges = new ArrayList<>();\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (o instanceof Clan) {\n+            return code.equals(((Clan) o).code);\n+        } else if (o instanceof String) {\n+            return code.equals(o);\n+        } else {\n+            return false;\n+        }\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hashCode(getCode());\n+    }\n+\n+    public static Clan getClan(String code) {\n+        return allClans.get(code);\n+    }\n+\n+    public static Collection<Clan> getClans() {\n+        return allClans.values();\n+    }\n+\n+    public String getCode() {\n+        return code;\n+    }\n+\n+    public String getGenerationCode() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "695818813718934f2ebc9b724341b59f1afba80f"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE4MDA4NQ==", "bodyText": "At the very least the public ones.", "url": "https://github.com/MegaMek/mekhq/pull/1850#discussion_r456180085", "createdAt": "2020-07-17T02:15:20Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/personnel/Clan.java", "diffHunk": "@@ -0,0 +1,293 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package mekhq.campaign.personnel;\n+\n+import megamek.common.Compute;\n+import megamek.common.logging.LogLevel;\n+import megamek.common.util.StringUtil;\n+import mekhq.MekHQ;\n+import mekhq.MekHqXmlUtil;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.w3c.dom.Node;\n+import org.w3c.dom.NodeList;\n+\n+import javax.xml.parsers.DocumentBuilder;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+import java.util.*;\n+\n+/**\n+ * This is used to supply clan data needed to generate bloodnames\n+ * TODO : This should probably be merged into Faction\n+ */\n+public class Clan {\n+    //region Variable Declarations\n+    private static Map<String, Clan> allClans;\n+\n+    private String code;\n+    private String generationCode; // this is used to enable RA name generation using CSR lists, for example\n+    private String fullName;\n+    private int startDate;\n+    private int endDate;\n+    private int abjurationDate;\n+    private List<DatedRecord> rivals;\n+    private List<DatedRecord> nameChanges;\n+    private boolean homeClan;\n+    //endregion Variable Declarations\n+\n+    public Clan() {\n+        startDate = 2807;\n+        endDate = 9999;\n+        abjurationDate = 0;\n+        rivals = new ArrayList<>();\n+        nameChanges = new ArrayList<>();\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (o instanceof Clan) {\n+            return code.equals(((Clan) o).code);\n+        } else if (o instanceof String) {\n+            return code.equals(o);\n+        } else {\n+            return false;\n+        }\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hashCode(getCode());\n+    }\n+\n+    public static Clan getClan(String code) {\n+        return allClans.get(code);\n+    }\n+\n+    public static Collection<Clan> getClans() {\n+        return allClans.values();\n+    }\n+\n+    public String getCode() {\n+        return code;\n+    }\n+\n+    public String getGenerationCode() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE4MDAxMA=="}, "originalCommit": {"oid": "695818813718934f2ebc9b724341b59f1afba80f"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTUzMTc3OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMjoxNjozOVrOGzDC3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMjozMToyMVrOGzRJRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE4MDQ0NQ==", "bodyText": "I wonder if anyone actually has saves from before 3.4. I would suggest moving this out into a separate method.", "url": "https://github.com/MegaMek/mekhq/pull/1850#discussion_r456180445", "createdAt": "2020-07-17T02:16:39Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -2156,6 +2109,36 @@ public static Person generateInstanceFromXML(Node wn, Campaign c, Version versio\n                 retVal.setExpectedDueDate(retVal.getDueDate());\n             }\n \n+            //versions before 0.3.4 did not have proper clan phenotypes\n+            if (version.isLowerThan(\"0.3.4\") && c.getFaction().isClan()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "695818813718934f2ebc9b724341b59f1afba80f"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQxMTQ2MA==", "bodyText": "Next part of my person changes following this and genealogy is going to be reworking the xml read/write into a simpler format. This will be part of doing so.", "url": "https://github.com/MegaMek/mekhq/pull/1850#discussion_r456411460", "createdAt": "2020-07-17T12:31:21Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -2156,6 +2109,36 @@ public static Person generateInstanceFromXML(Node wn, Campaign c, Version versio\n                 retVal.setExpectedDueDate(retVal.getDueDate());\n             }\n \n+            //versions before 0.3.4 did not have proper clan phenotypes\n+            if (version.isLowerThan(\"0.3.4\") && c.getFaction().isClan()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE4MDQ0NQ=="}, "originalCommit": {"oid": "695818813718934f2ebc9b724341b59f1afba80f"}, "originalPosition": 146}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NjE0NjcxOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/gui/dialog/CustomizePersonDialog.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMTo0OToxMVrOG0geaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDozNDozMFrOG06_Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzcxMTIwOQ==", "bodyText": "Forgot to add to this: Should there be bonuses here for the other phenotypes?", "url": "https://github.com/MegaMek/mekhq/pull/1850#discussion_r457711209", "createdAt": "2020-07-20T21:49:11Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/gui/dialog/CustomizePersonDialog.java", "diffHunk": "@@ -1315,36 +1295,39 @@ public int getAge() {\n     }\n \n     private void backgroundChanged() {\n-        int pheno = choicePheno.getSelectedIndex();\n         boolean clanner = chkClan.isSelected();\n         clearAllPhenotypeBonuses();\n         if (clanner) {\n-            switch(pheno) {\n-                case Person.PHENOTYPE_MW:\n-                    skillBonus.get(SkillType.S_GUN_MECH).setValue(1);\n-                    skillBonus.get(SkillType.S_PILOT_MECH).setValue(1);\n-                    break;\n-                case Person.PHENOTYPE_AERO:\n-                    skillBonus.get(SkillType.S_GUN_AERO).setValue(1);\n-                    skillBonus.get(SkillType.S_PILOT_AERO).setValue(1);\n-                    skillBonus.get(SkillType.S_GUN_JET).setValue(1);\n-                    skillBonus.get(SkillType.S_PILOT_JET).setValue(1);\n-                    skillBonus.get(SkillType.S_GUN_PROTO).setValue(1);\n-                    break;\n-                case Person.PHENOTYPE_BA:\n-                    skillBonus.get(SkillType.S_GUN_BA).setValue(1);\n-                    break;\n-                case Person.PHENOTYPE_VEE:\n-                    skillBonus.get(SkillType.S_GUN_VEE).setValue(1);\n-                    skillBonus.get(SkillType.S_PILOT_GVEE).setValue(1);\n-                    skillBonus.get(SkillType.S_PILOT_NVEE).setValue(1);\n-                    skillBonus.get(SkillType.S_PILOT_VTOL).setValue(1);\n-                    break;\n+            final Phenotype phenotype = (Phenotype) choicePhenotype.getSelectedItem();\n+            if (phenotype != null) {\n+                // TODO : Windchild should there be more bonus' here for the other phenotypes?\n+                switch (phenotype) {\n+                    case MECHWARRIOR:\n+                        skillBonus.get(SkillType.S_GUN_MECH).setValue(1);\n+                        skillBonus.get(SkillType.S_PILOT_MECH).setValue(1);\n+                        break;\n+                    case AEROSPACE:\n+                        skillBonus.get(SkillType.S_GUN_AERO).setValue(1);\n+                        skillBonus.get(SkillType.S_PILOT_AERO).setValue(1);\n+                        skillBonus.get(SkillType.S_GUN_JET).setValue(1);\n+                        skillBonus.get(SkillType.S_PILOT_JET).setValue(1);\n+                        skillBonus.get(SkillType.S_GUN_PROTO).setValue(1);\n+                        break;\n+                    case ELEMENTAL:\n+                        skillBonus.get(SkillType.S_GUN_BA).setValue(1);\n+                        break;\n+                    case VEHICLE:\n+                        skillBonus.get(SkillType.S_GUN_VEE).setValue(1);\n+                        skillBonus.get(SkillType.S_PILOT_GVEE).setValue(1);\n+                        skillBonus.get(SkillType.S_PILOT_NVEE).setValue(1);\n+                        skillBonus.get(SkillType.S_PILOT_VTOL).setValue(1);\n+                        break;\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "695818813718934f2ebc9b724341b59f1afba80f"}, "originalPosition": 193}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE0NTYxNA==", "bodyText": "I'm not familiar with the rules for it, so I can't say one way or the other. Shouldn't be too hard to implement if that's the case, though.", "url": "https://github.com/MegaMek/mekhq/pull/1850#discussion_r458145614", "createdAt": "2020-07-21T14:34:30Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/gui/dialog/CustomizePersonDialog.java", "diffHunk": "@@ -1315,36 +1295,39 @@ public int getAge() {\n     }\n \n     private void backgroundChanged() {\n-        int pheno = choicePheno.getSelectedIndex();\n         boolean clanner = chkClan.isSelected();\n         clearAllPhenotypeBonuses();\n         if (clanner) {\n-            switch(pheno) {\n-                case Person.PHENOTYPE_MW:\n-                    skillBonus.get(SkillType.S_GUN_MECH).setValue(1);\n-                    skillBonus.get(SkillType.S_PILOT_MECH).setValue(1);\n-                    break;\n-                case Person.PHENOTYPE_AERO:\n-                    skillBonus.get(SkillType.S_GUN_AERO).setValue(1);\n-                    skillBonus.get(SkillType.S_PILOT_AERO).setValue(1);\n-                    skillBonus.get(SkillType.S_GUN_JET).setValue(1);\n-                    skillBonus.get(SkillType.S_PILOT_JET).setValue(1);\n-                    skillBonus.get(SkillType.S_GUN_PROTO).setValue(1);\n-                    break;\n-                case Person.PHENOTYPE_BA:\n-                    skillBonus.get(SkillType.S_GUN_BA).setValue(1);\n-                    break;\n-                case Person.PHENOTYPE_VEE:\n-                    skillBonus.get(SkillType.S_GUN_VEE).setValue(1);\n-                    skillBonus.get(SkillType.S_PILOT_GVEE).setValue(1);\n-                    skillBonus.get(SkillType.S_PILOT_NVEE).setValue(1);\n-                    skillBonus.get(SkillType.S_PILOT_VTOL).setValue(1);\n-                    break;\n+            final Phenotype phenotype = (Phenotype) choicePhenotype.getSelectedItem();\n+            if (phenotype != null) {\n+                // TODO : Windchild should there be more bonus' here for the other phenotypes?\n+                switch (phenotype) {\n+                    case MECHWARRIOR:\n+                        skillBonus.get(SkillType.S_GUN_MECH).setValue(1);\n+                        skillBonus.get(SkillType.S_PILOT_MECH).setValue(1);\n+                        break;\n+                    case AEROSPACE:\n+                        skillBonus.get(SkillType.S_GUN_AERO).setValue(1);\n+                        skillBonus.get(SkillType.S_PILOT_AERO).setValue(1);\n+                        skillBonus.get(SkillType.S_GUN_JET).setValue(1);\n+                        skillBonus.get(SkillType.S_PILOT_JET).setValue(1);\n+                        skillBonus.get(SkillType.S_GUN_PROTO).setValue(1);\n+                        break;\n+                    case ELEMENTAL:\n+                        skillBonus.get(SkillType.S_GUN_BA).setValue(1);\n+                        break;\n+                    case VEHICLE:\n+                        skillBonus.get(SkillType.S_GUN_VEE).setValue(1);\n+                        skillBonus.get(SkillType.S_PILOT_GVEE).setValue(1);\n+                        skillBonus.get(SkillType.S_PILOT_NVEE).setValue(1);\n+                        skillBonus.get(SkillType.S_PILOT_VTOL).setValue(1);\n+                        break;\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzcxMTIwOQ=="}, "originalCommit": {"oid": "695818813718934f2ebc9b724341b59f1afba80f"}, "originalPosition": 193}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2349, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}