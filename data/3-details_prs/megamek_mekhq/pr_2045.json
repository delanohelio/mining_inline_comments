{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMDUxMjc5", "number": 2045, "title": "Aero Fighter refit heat sink tracking improvements", "bodyText": "First commit fixes the way untracked/integrated heat sinks are calculated for Aero Fighters - should be based on engine type (not engine size/rating)\nSecond commit make heat sink cleanup for Aero Fighters more careful not to strip valid heat sinks.", "createdAt": "2020-09-23T21:30:42Z", "url": "https://github.com/MegaMek/mekhq/pull/2045", "merged": true, "mergeCommit": {"oid": "216cef56734130dd49f8b89fb88c237b085d44f7"}, "closed": true, "closedAt": "2020-09-24T17:52:34Z", "author": {"login": "RexPearce"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLzWAkAH2gAyNDkyMDUxMjc5OmM5MTI5OGEwMmY1ZTE4M2NkMjNlNjcwYjk2NTBhM2ZlMGFjODVkNDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMErFCAFqTQ5NTc5NzU5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c91298a02f5e183cd23e670b9650a3fe0ac85d41", "author": {"user": {"login": "RexPearce", "name": null}}, "url": "https://github.com/MegaMek/mekhq/commit/c91298a02f5e183cd23e670b9650a3fe0ac85d41", "committedDate": "2020-09-23T21:19:36Z", "message": "Determine number of aero engine-free heat sinks by engine type, not engine size"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee7e9080db9ddfd9bfba0edf5a61003834879d04", "author": {"user": {"login": "RexPearce", "name": null}}, "url": "https://github.com/MegaMek/mekhq/commit/ee7e9080db9ddfd9bfba0edf5a61003834879d04", "committedDate": "2020-09-23T21:23:37Z", "message": "improved cleanup of integrated heat sinks for Aero"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NTkyMTcx", "url": "https://github.com/MegaMek/mekhq/pull/2045#pullrequestreview-495592171", "createdAt": "2020-09-24T13:48:46Z", "commit": {"oid": "ee7e9080db9ddfd9bfba0edf5a61003834879d04"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzo0ODo0NlrOHXbw3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzo0OToxOFrOHXbzaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNDE3NQ==", "bodyText": "The determination  of \"is aero but not conventional fighter/smallcraft/jumpship\" is used multiple times in this file, here and on line 2480. And probably in other places. Let's place it into a separate function for ease of reuse.", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494334175", "createdAt": "2020-09-24T13:48:46Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1433,20 +1432,37 @@ else if (part instanceof MissingPart) {\n                 suit.setUnit(oldUnit);\n             }\n         }\n+        int expectedHeatSinkParts = 0;\n+        if ((newEntity instanceof Aero) && ((newEntity.getEntityType() &\n+                (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7e9080db9ddfd9bfba0edf5a61003834879d04"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNDgyNQ==", "bodyText": "What about conventional fighters? Those behave the same way as tanks do as I recall.", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494334825", "createdAt": "2020-09-24T13:49:18Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1433,20 +1432,37 @@ else if (part instanceof MissingPart) {\n                 suit.setUnit(oldUnit);\n             }\n         }\n+        int expectedHeatSinkParts = 0;\n+        if ((newEntity instanceof Aero) && ((newEntity.getEntityType() &\n+                (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {\n+            // Only Aerospace Fighters are expected to have heat sink parts (Mechs handled separately)\n+            // SmallCraft, Dropship, Jumpship, Warship, and SpaceStation use SpacecraftCoolingSystem instead\n+            expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -\n+                    untrackedHeatSinkCount(newEntity);\n+        }\n         for(int pid : newUnitParts) {\n             Part part = oldUnit.getCampaign().getPart(pid);\n             if(null == part) {\n                 MekHQ.getLogger().log(getClass(), METHOD_NAME, LogLevel.ERROR,\n                         \"part with id \" + pid + \" not found for refit of \" + getDesc()); //$NON-NLS-1$\n                 continue;\n             }\n-            if (((part instanceof HeatSink) || (part instanceof AeroHeatSink)) &&\n-                    ((newEntity instanceof Tank) || (newEntity instanceof Aero))) {\n-                // Tanks and Aeros do not track heat sink parts (Mechs handled later)\n+            if (part instanceof HeatSink && newEntity instanceof Tank) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7e9080db9ddfd9bfba0edf5a61003834879d04"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NTk1MTc4", "url": "https://github.com/MegaMek/mekhq/pull/2045#pullrequestreview-495595178", "createdAt": "2020-09-24T13:51:44Z", "commit": {"oid": "ee7e9080db9ddfd9bfba0edf5a61003834879d04"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzo1MTo0NFrOHXb67g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzo1MjozM1rOHXb9dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNjc1MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -\n          \n          \n            \n                        expectedHeatSinkParts = ((Aero) newEntity).getHeatSinks() - ((Aero) newEntity).getPodHeatSinks() -", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494336750", "createdAt": "2020-09-24T13:51:44Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1433,20 +1432,37 @@ else if (part instanceof MissingPart) {\n                 suit.setUnit(oldUnit);\n             }\n         }\n+        int expectedHeatSinkParts = 0;\n+        if ((newEntity instanceof Aero) && ((newEntity.getEntityType() &\n+                (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {\n+            // Only Aerospace Fighters are expected to have heat sink parts (Mechs handled separately)\n+            // SmallCraft, Dropship, Jumpship, Warship, and SpaceStation use SpacecraftCoolingSystem instead\n+            expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7e9080db9ddfd9bfba0edf5a61003834879d04"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNzA3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (part instanceof HeatSink && newEntity instanceof Tank) {\n          \n          \n            \n                        if ((part instanceof HeatSink) && (newEntity instanceof Tank)) {", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494337073", "createdAt": "2020-09-24T13:52:09Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1433,20 +1432,37 @@ else if (part instanceof MissingPart) {\n                 suit.setUnit(oldUnit);\n             }\n         }\n+        int expectedHeatSinkParts = 0;\n+        if ((newEntity instanceof Aero) && ((newEntity.getEntityType() &\n+                (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {\n+            // Only Aerospace Fighters are expected to have heat sink parts (Mechs handled separately)\n+            // SmallCraft, Dropship, Jumpship, Warship, and SpaceStation use SpacecraftCoolingSystem instead\n+            expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -\n+                    untrackedHeatSinkCount(newEntity);\n+        }\n         for(int pid : newUnitParts) {\n             Part part = oldUnit.getCampaign().getPart(pid);\n             if(null == part) {\n                 MekHQ.getLogger().log(getClass(), METHOD_NAME, LogLevel.ERROR,\n                         \"part with id \" + pid + \" not found for refit of \" + getDesc()); //$NON-NLS-1$\n                 continue;\n             }\n-            if (((part instanceof HeatSink) || (part instanceof AeroHeatSink)) &&\n-                    ((newEntity instanceof Tank) || (newEntity instanceof Aero))) {\n-                // Tanks and Aeros do not track heat sink parts (Mechs handled later)\n+            if (part instanceof HeatSink && newEntity instanceof Tank) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7e9080db9ddfd9bfba0edf5a61003834879d04"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNzM5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        }\n          \n          \n            \n                        else if (part instanceof AeroHeatSink && newEntity instanceof Aero && !part.isOmniPodded()) {\n          \n          \n            \n                        } else if ((part instanceof AeroHeatSink) && (newEntity instanceof Aero) && !part.isOmniPodded()) {", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494337398", "createdAt": "2020-09-24T13:52:33Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1433,20 +1432,37 @@ else if (part instanceof MissingPart) {\n                 suit.setUnit(oldUnit);\n             }\n         }\n+        int expectedHeatSinkParts = 0;\n+        if ((newEntity instanceof Aero) && ((newEntity.getEntityType() &\n+                (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {\n+            // Only Aerospace Fighters are expected to have heat sink parts (Mechs handled separately)\n+            // SmallCraft, Dropship, Jumpship, Warship, and SpaceStation use SpacecraftCoolingSystem instead\n+            expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -\n+                    untrackedHeatSinkCount(newEntity);\n+        }\n         for(int pid : newUnitParts) {\n             Part part = oldUnit.getCampaign().getPart(pid);\n             if(null == part) {\n                 MekHQ.getLogger().log(getClass(), METHOD_NAME, LogLevel.ERROR,\n                         \"part with id \" + pid + \" not found for refit of \" + getDesc()); //$NON-NLS-1$\n                 continue;\n             }\n-            if (((part instanceof HeatSink) || (part instanceof AeroHeatSink)) &&\n-                    ((newEntity instanceof Tank) || (newEntity instanceof Aero))) {\n-                // Tanks and Aeros do not track heat sink parts (Mechs handled later)\n+            if (part instanceof HeatSink && newEntity instanceof Tank) {\n+                // Unit should not have heat sink parts\n                 // Remove heat sink parts added for supply chain tracking purposes\n                 oldUnit.getCampaign().removePart(part);\n                 continue;\n             }\n+            else if (part instanceof AeroHeatSink && newEntity instanceof Aero && !part.isOmniPodded()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7e9080db9ddfd9bfba0edf5a61003834879d04"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "508a51d9354e5f42b103841569cd6934bc8c40dd", "author": {"user": {"login": "RexPearce", "name": null}}, "url": "https://github.com/MegaMek/mekhq/commit/508a51d9354e5f42b103841569cd6934bc8c40dd", "committedDate": "2020-09-24T15:00:12Z", "message": "style formatting fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5612e3b93445552ea44feb3c87bf582d3b0403b3", "author": {"user": {"login": "RexPearce", "name": null}}, "url": "https://github.com/MegaMek/mekhq/commit/5612e3b93445552ea44feb3c87bf582d3b0403b3", "committedDate": "2020-09-24T15:03:24Z", "message": "style formatting fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "348d2c196b87649d2846c7be91b431abe9e4eb1b", "author": {"user": {"login": "RexPearce", "name": null}}, "url": "https://github.com/MegaMek/mekhq/commit/348d2c196b87649d2846c7be91b431abe9e4eb1b", "committedDate": "2020-09-24T17:25:47Z", "message": "better method of excluding subclasses"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1Nzk3NTk4", "url": "https://github.com/MegaMek/mekhq/pull/2045#pullrequestreview-495797598", "createdAt": "2020-09-24T17:31:00Z", "commit": {"oid": "348d2c196b87649d2846c7be91b431abe9e4eb1b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4212, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}