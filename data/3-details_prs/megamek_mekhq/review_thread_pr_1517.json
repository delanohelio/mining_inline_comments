{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NzYzNTAw", "number": 1517, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMTowMzoyMlrODiiDzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMTowMzoyMlrODiiDzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NTM2MjA0OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/gui/CampaignGUI.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMTowMzoyMlrOFt1Xdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMToxODozOVrOFt1nyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYwNDU5OA==", "bodyText": "Is this still needed?", "url": "https://github.com/MegaMek/mekhq/pull/1517#discussion_r383604598", "createdAt": "2020-02-25T01:03:22Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/CampaignGUI.java", "diffHunk": "@@ -590,619 +576,386 @@ public void removeTab(String tabName) {\n         int index = tabMain.indexOfTab(tabName);\n         if (index >= 0) {\n             CampaignGuiTab tab = (CampaignGuiTab)tabMain.getComponentAt(index);\n-            if (standardTabs.containsKey(tab.tabType())) {\n-                standardTabs.remove(tab.tabType());\n-            }\n+            standardTabs.remove(tab.tabType());\n             tabMain.removeTabAt(index);\n         }\n     }\n \n     private void initMenu() {\n-\n         menuBar = new JMenuBar();\n \n-        /* File Menu */\n+        //region File Menu\n         JMenu menuFile = new JMenu(resourceMap.getString(\"fileMenu.text\")); // NOI18N\n \n-        JMenuItem menuLoad = new JMenuItem(\n-                resourceMap.getString(\"menuLoad.text\")); // NOI18N\n-        menuLoad.addActionListener(new ActionListener() {\n-            @Override\n-            public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                menuLoadXmlActionPerformed(evt);\n-            }\n-        });\n+        JMenuItem menuLoad = new JMenuItem(resourceMap.getString(\"menuLoad.text\")); // NOI18N\n+        menuLoad.addActionListener(this::menuLoadXmlActionPerformed);\n         menuFile.add(menuLoad);\n \n-        JMenuItem menuSave = new JMenuItem(\n-                resourceMap.getString(\"menuSave.text\")); // NOI18N\n-        menuSave.addActionListener(new ActionListener() {\n-            @Override\n-            public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                menuSaveXmlActionPerformed(evt);\n-            }\n-        });\n+        JMenuItem menuSave = new JMenuItem(resourceMap.getString(\"menuSave.text\")); // NOI18N\n+        menuSave.addActionListener(this::menuSaveXmlActionPerformed);\n         menuFile.add(menuSave);\n \n+        //region menuImport\n         JMenu menuImport = new JMenu(resourceMap.getString(\"menuImport.text\")); // NOI18N\n-        JMenu menuExport = new JMenu(resourceMap.getString(\"menuExport.text\")); // NOI18N\n \n-        /*\n-         * TODO: Implement these as \"Export All\" versions\n-         *\n-         * miExportPerson.setText(resourceMap.getString(\"miExportPerson.text\"));\n-         * // NOI18N miExportPerson.addActionListener(new ActionListener() {\n-         * public void actionPerformed(java.awt.event.ActionEvent evt) {\n-         * miExportPersonActionPerformed(evt); } });\n-         * menuExport.add(miExportPerson);\n-         *\n-         * miExportParts.setText(resourceMap.getString(\"miExportParts.text\"));\n-         * // NOI18N miExportParts.addActionListener(new ActionListener() {\n-         * public void actionPerformed(java.awt.event.ActionEvent evt) {\n-         * miExportPartsActionPerformed(evt); } });\n-         * menuExport.add(miExportParts);\n-         */\n+        JMenuItem miImportOptions = new JMenuItem(resourceMap.getString(\"miImportOptions.text\")); // NOI18N\n+        miImportOptions.addActionListener(this::miImportOptionsActionPerformed);\n+        menuImport.add(miImportOptions);\n \n-        JMenu miExportCSVFile = new JMenu(resourceMap.getString(\"menuExportCSV.text\")); // NOI18N\n-        JMenu miExportXMLFile = new JMenu(resourceMap.getString(\"menuExportXML.text\")); // NOI18N\n+        JMenuItem miImportPerson = new JMenuItem(resourceMap.getString(\"miImportPerson.text\")); // NOI18N\n+        miImportPerson.addActionListener(this::miImportPersonActionPerformed);\n+        menuImport.add(miImportPerson);\n+\n+        JMenuItem miImportParts = new JMenuItem(resourceMap.getString(\"miImportParts.text\")); // NOI18N\n+        miImportParts.addActionListener(this::miImportPartsActionPerformed);\n+        menuImport.add(miImportParts);\n+\n+        JMenuItem miLoadForces = new JMenuItem(resourceMap.getString(\"miLoadForces.text\")); // NOI18N\n+        miLoadForces.addActionListener(this::miLoadForcesActionPerformed);\n+        // miLoadForces.setEnabled(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ab5d4b23ab49c3dfb64a2e38e203f79db81e224"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYwNTI3Ng==", "bodyText": "Nope, give me 5", "url": "https://github.com/MegaMek/mekhq/pull/1517#discussion_r383605276", "createdAt": "2020-02-25T01:05:46Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/gui/CampaignGUI.java", "diffHunk": "@@ -590,619 +576,386 @@ public void removeTab(String tabName) {\n         int index = tabMain.indexOfTab(tabName);\n         if (index >= 0) {\n             CampaignGuiTab tab = (CampaignGuiTab)tabMain.getComponentAt(index);\n-            if (standardTabs.containsKey(tab.tabType())) {\n-                standardTabs.remove(tab.tabType());\n-            }\n+            standardTabs.remove(tab.tabType());\n             tabMain.removeTabAt(index);\n         }\n     }\n \n     private void initMenu() {\n-\n         menuBar = new JMenuBar();\n \n-        /* File Menu */\n+        //region File Menu\n         JMenu menuFile = new JMenu(resourceMap.getString(\"fileMenu.text\")); // NOI18N\n \n-        JMenuItem menuLoad = new JMenuItem(\n-                resourceMap.getString(\"menuLoad.text\")); // NOI18N\n-        menuLoad.addActionListener(new ActionListener() {\n-            @Override\n-            public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                menuLoadXmlActionPerformed(evt);\n-            }\n-        });\n+        JMenuItem menuLoad = new JMenuItem(resourceMap.getString(\"menuLoad.text\")); // NOI18N\n+        menuLoad.addActionListener(this::menuLoadXmlActionPerformed);\n         menuFile.add(menuLoad);\n \n-        JMenuItem menuSave = new JMenuItem(\n-                resourceMap.getString(\"menuSave.text\")); // NOI18N\n-        menuSave.addActionListener(new ActionListener() {\n-            @Override\n-            public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                menuSaveXmlActionPerformed(evt);\n-            }\n-        });\n+        JMenuItem menuSave = new JMenuItem(resourceMap.getString(\"menuSave.text\")); // NOI18N\n+        menuSave.addActionListener(this::menuSaveXmlActionPerformed);\n         menuFile.add(menuSave);\n \n+        //region menuImport\n         JMenu menuImport = new JMenu(resourceMap.getString(\"menuImport.text\")); // NOI18N\n-        JMenu menuExport = new JMenu(resourceMap.getString(\"menuExport.text\")); // NOI18N\n \n-        /*\n-         * TODO: Implement these as \"Export All\" versions\n-         *\n-         * miExportPerson.setText(resourceMap.getString(\"miExportPerson.text\"));\n-         * // NOI18N miExportPerson.addActionListener(new ActionListener() {\n-         * public void actionPerformed(java.awt.event.ActionEvent evt) {\n-         * miExportPersonActionPerformed(evt); } });\n-         * menuExport.add(miExportPerson);\n-         *\n-         * miExportParts.setText(resourceMap.getString(\"miExportParts.text\"));\n-         * // NOI18N miExportParts.addActionListener(new ActionListener() {\n-         * public void actionPerformed(java.awt.event.ActionEvent evt) {\n-         * miExportPartsActionPerformed(evt); } });\n-         * menuExport.add(miExportParts);\n-         */\n+        JMenuItem miImportOptions = new JMenuItem(resourceMap.getString(\"miImportOptions.text\")); // NOI18N\n+        miImportOptions.addActionListener(this::miImportOptionsActionPerformed);\n+        menuImport.add(miImportOptions);\n \n-        JMenu miExportCSVFile = new JMenu(resourceMap.getString(\"menuExportCSV.text\")); // NOI18N\n-        JMenu miExportXMLFile = new JMenu(resourceMap.getString(\"menuExportXML.text\")); // NOI18N\n+        JMenuItem miImportPerson = new JMenuItem(resourceMap.getString(\"miImportPerson.text\")); // NOI18N\n+        miImportPerson.addActionListener(this::miImportPersonActionPerformed);\n+        menuImport.add(miImportPerson);\n+\n+        JMenuItem miImportParts = new JMenuItem(resourceMap.getString(\"miImportParts.text\")); // NOI18N\n+        miImportParts.addActionListener(this::miImportPartsActionPerformed);\n+        menuImport.add(miImportParts);\n+\n+        JMenuItem miLoadForces = new JMenuItem(resourceMap.getString(\"miLoadForces.text\")); // NOI18N\n+        miLoadForces.addActionListener(this::miLoadForcesActionPerformed);\n+        // miLoadForces.setEnabled(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYwNDU5OA=="}, "originalCommit": {"oid": "8ab5d4b23ab49c3dfb64a2e38e203f79db81e224"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYwODc3OQ==", "bodyText": "Fixed and pushed", "url": "https://github.com/MegaMek/mekhq/pull/1517#discussion_r383608779", "createdAt": "2020-02-25T01:18:39Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/gui/CampaignGUI.java", "diffHunk": "@@ -590,619 +576,386 @@ public void removeTab(String tabName) {\n         int index = tabMain.indexOfTab(tabName);\n         if (index >= 0) {\n             CampaignGuiTab tab = (CampaignGuiTab)tabMain.getComponentAt(index);\n-            if (standardTabs.containsKey(tab.tabType())) {\n-                standardTabs.remove(tab.tabType());\n-            }\n+            standardTabs.remove(tab.tabType());\n             tabMain.removeTabAt(index);\n         }\n     }\n \n     private void initMenu() {\n-\n         menuBar = new JMenuBar();\n \n-        /* File Menu */\n+        //region File Menu\n         JMenu menuFile = new JMenu(resourceMap.getString(\"fileMenu.text\")); // NOI18N\n \n-        JMenuItem menuLoad = new JMenuItem(\n-                resourceMap.getString(\"menuLoad.text\")); // NOI18N\n-        menuLoad.addActionListener(new ActionListener() {\n-            @Override\n-            public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                menuLoadXmlActionPerformed(evt);\n-            }\n-        });\n+        JMenuItem menuLoad = new JMenuItem(resourceMap.getString(\"menuLoad.text\")); // NOI18N\n+        menuLoad.addActionListener(this::menuLoadXmlActionPerformed);\n         menuFile.add(menuLoad);\n \n-        JMenuItem menuSave = new JMenuItem(\n-                resourceMap.getString(\"menuSave.text\")); // NOI18N\n-        menuSave.addActionListener(new ActionListener() {\n-            @Override\n-            public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                menuSaveXmlActionPerformed(evt);\n-            }\n-        });\n+        JMenuItem menuSave = new JMenuItem(resourceMap.getString(\"menuSave.text\")); // NOI18N\n+        menuSave.addActionListener(this::menuSaveXmlActionPerformed);\n         menuFile.add(menuSave);\n \n+        //region menuImport\n         JMenu menuImport = new JMenu(resourceMap.getString(\"menuImport.text\")); // NOI18N\n-        JMenu menuExport = new JMenu(resourceMap.getString(\"menuExport.text\")); // NOI18N\n \n-        /*\n-         * TODO: Implement these as \"Export All\" versions\n-         *\n-         * miExportPerson.setText(resourceMap.getString(\"miExportPerson.text\"));\n-         * // NOI18N miExportPerson.addActionListener(new ActionListener() {\n-         * public void actionPerformed(java.awt.event.ActionEvent evt) {\n-         * miExportPersonActionPerformed(evt); } });\n-         * menuExport.add(miExportPerson);\n-         *\n-         * miExportParts.setText(resourceMap.getString(\"miExportParts.text\"));\n-         * // NOI18N miExportParts.addActionListener(new ActionListener() {\n-         * public void actionPerformed(java.awt.event.ActionEvent evt) {\n-         * miExportPartsActionPerformed(evt); } });\n-         * menuExport.add(miExportParts);\n-         */\n+        JMenuItem miImportOptions = new JMenuItem(resourceMap.getString(\"miImportOptions.text\")); // NOI18N\n+        miImportOptions.addActionListener(this::miImportOptionsActionPerformed);\n+        menuImport.add(miImportOptions);\n \n-        JMenu miExportCSVFile = new JMenu(resourceMap.getString(\"menuExportCSV.text\")); // NOI18N\n-        JMenu miExportXMLFile = new JMenu(resourceMap.getString(\"menuExportXML.text\")); // NOI18N\n+        JMenuItem miImportPerson = new JMenuItem(resourceMap.getString(\"miImportPerson.text\")); // NOI18N\n+        miImportPerson.addActionListener(this::miImportPersonActionPerformed);\n+        menuImport.add(miImportPerson);\n+\n+        JMenuItem miImportParts = new JMenuItem(resourceMap.getString(\"miImportParts.text\")); // NOI18N\n+        miImportParts.addActionListener(this::miImportPartsActionPerformed);\n+        menuImport.add(miImportParts);\n+\n+        JMenuItem miLoadForces = new JMenuItem(resourceMap.getString(\"miLoadForces.text\")); // NOI18N\n+        miLoadForces.addActionListener(this::miLoadForcesActionPerformed);\n+        // miLoadForces.setEnabled(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYwNDU5OA=="}, "originalCommit": {"oid": "8ab5d4b23ab49c3dfb64a2e38e203f79db81e224"}, "originalPosition": 143}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1933, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}