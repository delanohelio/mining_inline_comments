{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMjUxMDY0", "number": 1800, "title": "Two new unofficial special abilities for techs", "bodyText": "This PR adds two new unofficial special abilities for techs:\n\nEngineer: subtract 2 from all refit rolls\nMr/Ms Fix-It: ignore the first point of penalty for repairing or maintaining poor quality parts\n\nIn addition to the two new abilities, I also refactored a new method getQualityMods in Parts, because both getAllMods and getAllModsforMaintenance need to add those quality modifiers and it was being done slightly differently in each case.\nI have not added the new abilities to any of our predefined game option sets because I am planning to be update all of those with our existing abilities in a separate PR.", "createdAt": "2020-06-11T18:07:59Z", "url": "https://github.com/MegaMek/mekhq/pull/1800", "merged": true, "mergeCommit": {"oid": "1558a0b22e77b8357ea1ee170b78f5fbc2db82e8"}, "closed": true, "closedAt": "2020-06-12T19:13:31Z", "author": {"login": "AaronGullickson"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqSMyzAH2gAyNDMzMjUxMDY0OmY1M2FmNzEwZDlhMTI0NTk2NTgyNzhiYzc1OTNhOTAyODUwOGQ4ZGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqnS89AH2gAyNDMzMjUxMDY0OjdmNGE3ODU1ZjQyNzg0MjFhZTg1YTFmZjAyODBlZWZhNzFkYzgyNjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f53af710d9a12459658278bc7593a9028508d8dc", "author": {"user": {"login": "AaronGullickson", "name": "Aaron Gullickson"}}, "url": "https://github.com/MegaMek/mekhq/commit/f53af710d9a12459658278bc7593a9028508d8dc", "committedDate": "2020-06-11T18:03:10Z", "message": "added two new special abilities for techs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5Mjg2MDA4", "url": "https://github.com/MegaMek/mekhq/pull/1800#pullrequestreview-429286008", "createdAt": "2020-06-11T21:01:25Z", "commit": {"oid": "f53af710d9a12459658278bc7593a9028508d8dc"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMTowMToyNVrOGiuoAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMTo1NzozMVrOGiwNfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA2ODY3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(null != tech && tech.getOptions().booleanOption(\"tech_engineer\")) {\n          \n          \n            \n                    if ((null != tech) && tech.getOptions().booleanOption(\"tech_engineer\")) {", "url": "https://github.com/MegaMek/mekhq/pull/1800#discussion_r439068675", "createdAt": "2020-06-11T21:01:25Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1600,6 +1600,9 @@ else if(oldUnit.getEntity().hasQuirk(\"difficult_maintain\")) {\n         if(customJob) {\n             mods.addModifier(2, \"custom job\");\n         }\n+        if(null != tech && tech.getOptions().booleanOption(\"tech_engineer\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f53af710d9a12459658278bc7593a9028508d8dc"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA3MTk5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(qualityMod > 0 &&\n          \n          \n            \n                            null != tech &&\n          \n          \n            \n                            tech.getOptions().booleanOption(PersonnelOptions.TECH_FIXER)) {\n          \n          \n            \n                    if ((qualityMod > 0) &&\n          \n          \n            \n                            (null != tech) &&\n          \n          \n            \n                            tech.getOptions().booleanOption(PersonnelOptions.TECH_FIXER)) {", "url": "https://github.com/MegaMek/mekhq/pull/1800#discussion_r439071999", "createdAt": "2020-06-11T21:09:03Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/Part.java", "diffHunk": "@@ -1000,29 +981,47 @@ else if (getUnit().getEntity().hasQuirk(\"difficult_maintain\")) {\n         }\n \n         if(campaign.getCampaignOptions().useQualityMaintenance()) {\n-            switch(quality) {\n+            mods = getQualityMods(mods, getUnit().getTech());\n+        }\n+        return mods;\n+    }\n+\n+    /**\n+     * adds the quality modifiers for repair and maintenance of this part to a TargetRoll\n+     * @param mods - the {@link TargetRoll} that quality modifiers should be added to\n+     * @param tech - the {@link Person} that will make the repair or maintenance check, may be null\n+     * @return the modified {@link TargetRoll}\n+     */\n+    private TargetRoll getQualityMods(TargetRoll mods, Person tech) {\n+        int qualityMod = 0;\n+        switch(quality) {\n             case QUALITY_A:\n-                mods.addModifier(3, \"Quality A\");\n+                qualityMod = 3;\n                 break;\n             case QUALITY_B:\n-                mods.addModifier(2, \"Quality B\");\n+                qualityMod = 2;\n                 break;\n             case QUALITY_C:\n-                mods.addModifier(1, \"Quality C\");\n+                qualityMod = 1;\n                 break;\n             case QUALITY_D:\n-                mods.addModifier(0, \"Quality D\");\n+                qualityMod = 0;\n                 break;\n             case QUALITY_E:\n-                mods.addModifier(-1, \"Quality E\");\n+                qualityMod = -1;\n                 break;\n             case QUALITY_F:\n-                mods.addModifier(-2, \"Quality F\");\n+                qualityMod = -2;\n                 break;\n-            }\n         }\n-\n-        return mods;\n+        mods.addModifier(qualityMod, getQualityName(quality, campaign.getCampaignOptions().reverseQualityNames()));\n+        if(qualityMod > 0 &&\n+                null != tech &&\n+                tech.getOptions().booleanOption(PersonnelOptions.TECH_FIXER)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f53af710d9a12459658278bc7593a9028508d8dc"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA5NDY1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    switch(quality) {\n          \n          \n            \n                    switch (quality) {", "url": "https://github.com/MegaMek/mekhq/pull/1800#discussion_r439094652", "createdAt": "2020-06-11T21:57:31Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/Part.java", "diffHunk": "@@ -1000,29 +981,47 @@ else if (getUnit().getEntity().hasQuirk(\"difficult_maintain\")) {\n         }\n \n         if(campaign.getCampaignOptions().useQualityMaintenance()) {\n-            switch(quality) {\n+            mods = getQualityMods(mods, getUnit().getTech());\n+        }\n+        return mods;\n+    }\n+\n+    /**\n+     * adds the quality modifiers for repair and maintenance of this part to a TargetRoll\n+     * @param mods - the {@link TargetRoll} that quality modifiers should be added to\n+     * @param tech - the {@link Person} that will make the repair or maintenance check, may be null\n+     * @return the modified {@link TargetRoll}\n+     */\n+    private TargetRoll getQualityMods(TargetRoll mods, Person tech) {\n+        int qualityMod = 0;\n+        switch(quality) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f53af710d9a12459658278bc7593a9028508d8dc"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f4a7855f4278421ae85a1ff0280eefa71dc8267", "author": {"user": {"login": "AaronGullickson", "name": "Aaron Gullickson"}}, "url": "https://github.com/MegaMek/mekhq/commit/7f4a7855f4278421ae85a1ff0280eefa71dc8267", "committedDate": "2020-06-12T18:37:54Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Justin Bowen <39067288+Windchild292@users.noreply.github.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4298, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}