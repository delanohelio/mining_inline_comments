{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMDUxMjc5", "number": 2045, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzo0ODo0NlrOEnDdwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzo1MjozM1rOEnDlqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5Mzg2NjkwOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzo0ODo0NlrOHXbw3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNzoyODo1N1rOHXlRrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNDE3NQ==", "bodyText": "The determination  of \"is aero but not conventional fighter/smallcraft/jumpship\" is used multiple times in this file, here and on line 2480. And probably in other places. Let's place it into a separate function for ease of reuse.", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494334175", "createdAt": "2020-09-24T13:48:46Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1433,20 +1432,37 @@ else if (part instanceof MissingPart) {\n                 suit.setUnit(oldUnit);\n             }\n         }\n+        int expectedHeatSinkParts = 0;\n+        if ((newEntity instanceof Aero) && ((newEntity.getEntityType() &\n+                (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7e9080db9ddfd9bfba0edf5a61003834879d04"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM3NDA4Mg==", "bodyText": "I wasn't a fan of this either. I searched around to see if there was an operator similar to instanceof that didn't match on sub-classes. There doesn't appear to be one, however I ran across a post that suggested doing the equivalent of \"newEntity.getClass() == Aero.class\", which seems like it would work. In the end, I just went with the method previously used (I think the one you mentioned at line 2480).\n\"newEntity.getClass() == Aero.class\" is technically more precise in that it would exclude TeleMissile and FighterSquadron as well (not sure how those are used).\nWould you prefer I move the original to a function or use the \"newEntity.getClass() == Aero.class\" method?", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494374082", "createdAt": "2020-09-24T14:39:19Z", "author": {"login": "RexPearce"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1433,20 +1432,37 @@ else if (part instanceof MissingPart) {\n                 suit.setUnit(oldUnit);\n             }\n         }\n+        int expectedHeatSinkParts = 0;\n+        if ((newEntity instanceof Aero) && ((newEntity.getEntityType() &\n+                (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNDE3NQ=="}, "originalCommit": {"oid": "ee7e9080db9ddfd9bfba0edf5a61003834879d04"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQzMjY2Mg==", "bodyText": "Let's give that getClass() == Aero.class thing a try. Just make sure to beat up on that code with other non-ASF unit types as well.", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494432662", "createdAt": "2020-09-24T15:57:27Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1433,20 +1432,37 @@ else if (part instanceof MissingPart) {\n                 suit.setUnit(oldUnit);\n             }\n         }\n+        int expectedHeatSinkParts = 0;\n+        if ((newEntity instanceof Aero) && ((newEntity.getEntityType() &\n+                (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNDE3NQ=="}, "originalCommit": {"oid": "ee7e9080db9ddfd9bfba0edf5a61003834879d04"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5MDAyOQ==", "bodyText": "Tested and works well.", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494490029", "createdAt": "2020-09-24T17:28:57Z", "author": {"login": "RexPearce"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1433,20 +1432,37 @@ else if (part instanceof MissingPart) {\n                 suit.setUnit(oldUnit);\n             }\n         }\n+        int expectedHeatSinkParts = 0;\n+        if ((newEntity instanceof Aero) && ((newEntity.getEntityType() &\n+                (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNDE3NQ=="}, "originalCommit": {"oid": "ee7e9080db9ddfd9bfba0edf5a61003834879d04"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5Mzg3MDg3OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzo0OToxOFrOHXbzaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNjowMDoxMVrOHXh4yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNDgyNQ==", "bodyText": "What about conventional fighters? Those behave the same way as tanks do as I recall.", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494334825", "createdAt": "2020-09-24T13:49:18Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1433,20 +1432,37 @@ else if (part instanceof MissingPart) {\n                 suit.setUnit(oldUnit);\n             }\n         }\n+        int expectedHeatSinkParts = 0;\n+        if ((newEntity instanceof Aero) && ((newEntity.getEntityType() &\n+                (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {\n+            // Only Aerospace Fighters are expected to have heat sink parts (Mechs handled separately)\n+            // SmallCraft, Dropship, Jumpship, Warship, and SpaceStation use SpacecraftCoolingSystem instead\n+            expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -\n+                    untrackedHeatSinkCount(newEntity);\n+        }\n         for(int pid : newUnitParts) {\n             Part part = oldUnit.getCampaign().getPart(pid);\n             if(null == part) {\n                 MekHQ.getLogger().log(getClass(), METHOD_NAME, LogLevel.ERROR,\n                         \"part with id \" + pid + \" not found for refit of \" + getDesc()); //$NON-NLS-1$\n                 continue;\n             }\n-            if (((part instanceof HeatSink) || (part instanceof AeroHeatSink)) &&\n-                    ((newEntity instanceof Tank) || (newEntity instanceof Aero))) {\n-                // Tanks and Aeros do not track heat sink parts (Mechs handled later)\n+            if (part instanceof HeatSink && newEntity instanceof Tank) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7e9080db9ddfd9bfba0edf5a61003834879d04"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM4MDk2Nw==", "bodyText": "ConvFighters (and all other subclasses of Aero) should enter line 1457 with expectedHeatSinkParts = 0, and have all heat sink parts removed (except OmniPodded ones, but they'll only be present for Aero Fighters).\nFor readability, I could restore the check for ConvFighters back to line 1450, but I'd have to restore the check for AeroHeatSink as well. Either way works - let me know what you prefer.", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494380967", "createdAt": "2020-09-24T14:48:04Z", "author": {"login": "RexPearce"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1433,20 +1432,37 @@ else if (part instanceof MissingPart) {\n                 suit.setUnit(oldUnit);\n             }\n         }\n+        int expectedHeatSinkParts = 0;\n+        if ((newEntity instanceof Aero) && ((newEntity.getEntityType() &\n+                (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {\n+            // Only Aerospace Fighters are expected to have heat sink parts (Mechs handled separately)\n+            // SmallCraft, Dropship, Jumpship, Warship, and SpaceStation use SpacecraftCoolingSystem instead\n+            expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -\n+                    untrackedHeatSinkCount(newEntity);\n+        }\n         for(int pid : newUnitParts) {\n             Part part = oldUnit.getCampaign().getPart(pid);\n             if(null == part) {\n                 MekHQ.getLogger().log(getClass(), METHOD_NAME, LogLevel.ERROR,\n                         \"part with id \" + pid + \" not found for refit of \" + getDesc()); //$NON-NLS-1$\n                 continue;\n             }\n-            if (((part instanceof HeatSink) || (part instanceof AeroHeatSink)) &&\n-                    ((newEntity instanceof Tank) || (newEntity instanceof Aero))) {\n-                // Tanks and Aeros do not track heat sink parts (Mechs handled later)\n+            if (part instanceof HeatSink && newEntity instanceof Tank) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNDgyNQ=="}, "originalCommit": {"oid": "ee7e9080db9ddfd9bfba0edf5a61003834879d04"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQzNDUwNA==", "bodyText": "I don't think it's necessary, let's leave it as is.", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494434504", "createdAt": "2020-09-24T16:00:11Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1433,20 +1432,37 @@ else if (part instanceof MissingPart) {\n                 suit.setUnit(oldUnit);\n             }\n         }\n+        int expectedHeatSinkParts = 0;\n+        if ((newEntity instanceof Aero) && ((newEntity.getEntityType() &\n+                (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {\n+            // Only Aerospace Fighters are expected to have heat sink parts (Mechs handled separately)\n+            // SmallCraft, Dropship, Jumpship, Warship, and SpaceStation use SpacecraftCoolingSystem instead\n+            expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -\n+                    untrackedHeatSinkCount(newEntity);\n+        }\n         for(int pid : newUnitParts) {\n             Part part = oldUnit.getCampaign().getPart(pid);\n             if(null == part) {\n                 MekHQ.getLogger().log(getClass(), METHOD_NAME, LogLevel.ERROR,\n                         \"part with id \" + pid + \" not found for refit of \" + getDesc()); //$NON-NLS-1$\n                 continue;\n             }\n-            if (((part instanceof HeatSink) || (part instanceof AeroHeatSink)) &&\n-                    ((newEntity instanceof Tank) || (newEntity instanceof Aero))) {\n-                // Tanks and Aeros do not track heat sink parts (Mechs handled later)\n+            if (part instanceof HeatSink && newEntity instanceof Tank) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNDgyNQ=="}, "originalCommit": {"oid": "ee7e9080db9ddfd9bfba0edf5a61003834879d04"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5Mzg4MzE4OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzo1MTo0NFrOHXb67g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzo1MTo0NFrOHXb67g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNjc1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -\n          \n          \n            \n                        expectedHeatSinkParts = ((Aero) newEntity).getHeatSinks() - ((Aero) newEntity).getPodHeatSinks() -", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494336750", "createdAt": "2020-09-24T13:51:44Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1433,20 +1432,37 @@ else if (part instanceof MissingPart) {\n                 suit.setUnit(oldUnit);\n             }\n         }\n+        int expectedHeatSinkParts = 0;\n+        if ((newEntity instanceof Aero) && ((newEntity.getEntityType() &\n+                (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {\n+            // Only Aerospace Fighters are expected to have heat sink parts (Mechs handled separately)\n+            // SmallCraft, Dropship, Jumpship, Warship, and SpaceStation use SpacecraftCoolingSystem instead\n+            expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7e9080db9ddfd9bfba0edf5a61003834879d04"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5Mzg4NTIwOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzo1MjowOVrOHXb8MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzo1MjowOVrOHXb8MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNzA3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (part instanceof HeatSink && newEntity instanceof Tank) {\n          \n          \n            \n                        if ((part instanceof HeatSink) && (newEntity instanceof Tank)) {", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494337073", "createdAt": "2020-09-24T13:52:09Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1433,20 +1432,37 @@ else if (part instanceof MissingPart) {\n                 suit.setUnit(oldUnit);\n             }\n         }\n+        int expectedHeatSinkParts = 0;\n+        if ((newEntity instanceof Aero) && ((newEntity.getEntityType() &\n+                (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {\n+            // Only Aerospace Fighters are expected to have heat sink parts (Mechs handled separately)\n+            // SmallCraft, Dropship, Jumpship, Warship, and SpaceStation use SpacecraftCoolingSystem instead\n+            expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -\n+                    untrackedHeatSinkCount(newEntity);\n+        }\n         for(int pid : newUnitParts) {\n             Part part = oldUnit.getCampaign().getPart(pid);\n             if(null == part) {\n                 MekHQ.getLogger().log(getClass(), METHOD_NAME, LogLevel.ERROR,\n                         \"part with id \" + pid + \" not found for refit of \" + getDesc()); //$NON-NLS-1$\n                 continue;\n             }\n-            if (((part instanceof HeatSink) || (part instanceof AeroHeatSink)) &&\n-                    ((newEntity instanceof Tank) || (newEntity instanceof Aero))) {\n-                // Tanks and Aeros do not track heat sink parts (Mechs handled later)\n+            if (part instanceof HeatSink && newEntity instanceof Tank) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7e9080db9ddfd9bfba0edf5a61003834879d04"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5Mzg4NzE0OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzo1MjozM1rOHXb9dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzo1MjozM1rOHXb9dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNzM5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        }\n          \n          \n            \n                        else if (part instanceof AeroHeatSink && newEntity instanceof Aero && !part.isOmniPodded()) {\n          \n          \n            \n                        } else if ((part instanceof AeroHeatSink) && (newEntity instanceof Aero) && !part.isOmniPodded()) {", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494337398", "createdAt": "2020-09-24T13:52:33Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1433,20 +1432,37 @@ else if (part instanceof MissingPart) {\n                 suit.setUnit(oldUnit);\n             }\n         }\n+        int expectedHeatSinkParts = 0;\n+        if ((newEntity instanceof Aero) && ((newEntity.getEntityType() &\n+                (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {\n+            // Only Aerospace Fighters are expected to have heat sink parts (Mechs handled separately)\n+            // SmallCraft, Dropship, Jumpship, Warship, and SpaceStation use SpacecraftCoolingSystem instead\n+            expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -\n+                    untrackedHeatSinkCount(newEntity);\n+        }\n         for(int pid : newUnitParts) {\n             Part part = oldUnit.getCampaign().getPart(pid);\n             if(null == part) {\n                 MekHQ.getLogger().log(getClass(), METHOD_NAME, LogLevel.ERROR,\n                         \"part with id \" + pid + \" not found for refit of \" + getDesc()); //$NON-NLS-1$\n                 continue;\n             }\n-            if (((part instanceof HeatSink) || (part instanceof AeroHeatSink)) &&\n-                    ((newEntity instanceof Tank) || (newEntity instanceof Aero))) {\n-                // Tanks and Aeros do not track heat sink parts (Mechs handled later)\n+            if (part instanceof HeatSink && newEntity instanceof Tank) {\n+                // Unit should not have heat sink parts\n                 // Remove heat sink parts added for supply chain tracking purposes\n                 oldUnit.getCampaign().removePart(part);\n                 continue;\n             }\n+            else if (part instanceof AeroHeatSink && newEntity instanceof Aero && !part.isOmniPodded()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7e9080db9ddfd9bfba0edf5a61003834879d04"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2259, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}