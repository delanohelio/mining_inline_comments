{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1MDU2NjQ4", "number": 1414, "title": "Overview Hangar Report: Completely reworked Hangar Report", "bodyText": "This is a complete rework and refactor of the Hangar Report. As part of this, Space Stations and Support Vehicles have been added to the list, orderings have been standardized from heaviest to lightest, and the code performance has been significantly improved.\n#219 is fixed as part of this PR.", "createdAt": "2020-01-21T01:28:13Z", "url": "https://github.com/MegaMek/mekhq/pull/1414", "merged": true, "mergeCommit": {"oid": "7681b1497f5f74ca25fb36abbb941de8dfeb13a3"}, "closed": true, "closedAt": "2020-01-22T00:51:17Z", "author": {"login": "Windchild292"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8PbUYAH2gAyMzY1MDU2NjQ4OjQyNTQyY2IzOTRlNmJkZThhOWY2MTg1YjM4NGQ3MDFiN2I3MTMxNGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8q6y0gFqTM0NjI4ODUwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "42542cb394e6bde8a9f6185b384d701b7b71314a", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/42542cb394e6bde8a9f6185b384d701b7b71314a", "committedDate": "2020-01-20T16:48:48Z", "message": "Adding Space Stations to Hangar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42372b6dec21b52a527dbcf11fbb93a6d7d9a9e4", "author": {"user": null}, "url": "https://github.com/MegaMek/mekhq/commit/42372b6dec21b52a527dbcf11fbb93a6d7d9a9e4", "committedDate": "2020-01-20T19:03:29Z", "message": "219: Added Support Vehicles to Hangar, Part 1 of Refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc3f25c8f6378f1f81643343e643d4445dce110e", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/bc3f25c8f6378f1f81643343e643d4445dce110e", "committedDate": "2020-01-20T23:53:11Z", "message": "Finished Refactoring HangerReport"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abd8e3d6d749dec0f2cfa404aeb4452ea8b82d7c", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/abd8e3d6d749dec0f2cfa404aeb4452ea8b82d7c", "committedDate": "2020-01-21T01:16:57Z", "message": "Further Refactoring, adding Rail, Maglev, Satellites, and enabling Fixed-Wing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NjAxNjg5", "url": "https://github.com/MegaMek/mekhq/pull/1414#pullrequestreview-345601689", "createdAt": "2020-01-21T02:10:12Z", "commit": {"oid": "abd8e3d6d749dec0f2cfa404aeb4452ea8b82d7c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMjoxMDoxMlrOFfsv7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMjoxMDoxMlrOFfsv7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc4MzM0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    DefaultMutableTreeNode oSupportWh\n          \n          \n            \n                            // should have been caught by this will otherwise be selected for other unit types", "url": "https://github.com/MegaMek/mekhq/pull/1414#discussion_r368783343", "createdAt": "2020-01-21T02:10:12Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/report/HangarReport.java", "diffHunk": "@@ -42,1144 +42,2227 @@\n import megamek.common.Protomech;\n import megamek.common.SmallCraft;\n import megamek.common.SpaceStation;\n-import megamek.common.SupportTank;\n-import megamek.common.SupportVTOL;\n import megamek.common.Tank;\n-import megamek.common.VTOL;\n import megamek.common.Warship;\n import mekhq.campaign.Campaign;\n import mekhq.campaign.unit.Unit;\n \n-\n-\n /**\n  * @author Jay Lawson\n  * @version %I% %G%\n  * @since 3/12/2012\n  */\n public class HangarReport extends Report {\n+    //Private Variables\n+    private int totalNumberOfUnits = 0;\n+    private int countUnitsInTransit = 0;\n+    private int countUnitsPresent = 0;\n+    private int countDamagedUnits = 0;\n+    private int countDeployedUnits = 0;\n \n     public HangarReport(Campaign c) {\n         super(c);\n     }\n-    \n+\n     public String getTitle() {\n         return \"Hangar Breakdown\";\n     }\n-    \n+\n     public JTree getHangarTree() {\n-    \tDefaultMutableTreeNode top = new DefaultMutableTreeNode(\"Hangar\");\n-        JTree overviewHangarTree = new JTree(top);\n- \n+        //region Variable Declarations\n         // BattleMechs\n         // boolean expandMechs = false;\n         int countMechs = 0;\n+\n         int countBattleMechs = 0;\n-        int countOmniMechs = 0;\n         int colossalMech = 0;\n         int assaultMech = 0;\n         int heavyMech = 0;\n         int mediumMech = 0;\n         int lightMech = 0;\n         int ultralightMech = 0;\n+\n+        int countOmniMechs = 0;\n         int colossalOmniMech = 0;\n         int assaultOmniMech = 0;\n         int heavyOmniMech = 0;\n         int mediumOmniMech = 0;\n         int lightOmniMech = 0;\n         int ultralightOmniMech = 0;\n-        \n+\n         // ASF\n         //boolean expandASF = false;\n         int countASF = 0;\n+\n         int countStandardASF = 0;\n-        int countOmniASF = 0;\n-        int countLightASF = 0;\n-        int countMediumASF = 0;\n         int countHeavyASF = 0;\n-        int countOmniLightASF = 0;\n-        int countOmniMediumASF = 0;\n+        int countMediumASF = 0;\n+        int countLightASF = 0;\n+\n+        int countOmniASF = 0;\n         int countOmniHeavyASF = 0;\n-        \n+        int countOmniMediumASF = 0;\n+        int countOmniLightASF = 0;\n+\n         // Vehicles\n         //boolean expandVees = false;\n         int countVees = 0;\n+\n         int countStandardVees = 0;\n-        int countOmniVees = 0;\n-        int countVTOL = 0;\n-        int countVTOLLight = 0;\n-        int countSub = 0;\n-        int countSubColossal = 0;\n-        int countSubAssault = 0;\n-        int countSubHeavy = 0;\n-        int countSubMedium = 0;\n-        int countSubLight = 0;\n-        int countNaval = 0;\n-        int countNavalColossal = 0;\n-        int countNavalAssault = 0;\n-        int countNavalHeavy = 0;\n-        int countNavalMedium = 0;\n-        int countNavalLight = 0;\n-        int countWiGE = 0;\n-        int countWiGEAssault = 0;\n-        int countWiGEHeavy = 0;\n-        int countWiGEMedium = 0;\n-        int countWiGELight = 0;\n+\n         int countTracked = 0;\n         int countTrackedColossal = 0;\n         int countTrackedAssault = 0;\n         int countTrackedHeavy = 0;\n         int countTrackedMedium = 0;\n         int countTrackedLight = 0;\n+\n         int countWheeled = 0;\n         int countWheeledAssault = 0;\n         int countWheeledHeavy = 0;\n         int countWheeledMedium = 0;\n         int countWheeledLight = 0;\n+\n         int countHover = 0;\n         int countHoverMedium = 0;\n         int countHoverLight = 0;\n+\n+        int countVTOL = 0;\n+        int countVTOLLight = 0;\n+\n+        int countWiGE = 0;\n+        int countWiGEAssault = 0;\n+        int countWiGEHeavy = 0;\n+        int countWiGEMedium = 0;\n+        int countWiGELight = 0;\n+\n+        int countNaval = 0;\n+        int countNavalColossal = 0;\n+        int countNavalAssault = 0;\n+        int countNavalHeavy = 0;\n+        int countNavalMedium = 0;\n+        int countNavalLight = 0;\n+\n+        int countSub = 0;\n+        int countSubColossal = 0;\n+        int countSubAssault = 0;\n+        int countSubHeavy = 0;\n+        int countSubMedium = 0;\n+        int countSubLight = 0;\n+\n         int countHydrofoil = 0;\n         int countHydrofoilAssault = 0;\n         int countHydrofoilHeavy = 0;\n         int countHydrofoilMedium = 0;\n         int countHydrofoilLight = 0;\n-        int countOmniVTOL = 0;\n-        int countOmniVTOLLight = 0;\n-        int countOmniSub = 0;\n-        int countOmniSubColossal = 0;\n-        int countOmniSubAssault = 0;\n-        int countOmniSubHeavy = 0;\n-        int countOmniSubMedium = 0;\n-        int countOmniSubLight = 0;\n-        int countOmniNaval = 0;\n-        int countOmniNavalColossal = 0;\n-        int countOmniNavalAssault = 0;\n-        int countOmniNavalHeavy = 0;\n-        int countOmniNavalMedium = 0;\n-        int countOmniNavalLight = 0;\n-        int countOmniWiGE = 0;\n-        int countOmniWiGEAssault = 0;\n-        int countOmniWiGEHeavy = 0;\n-        int countOmniWiGEMedium = 0;\n-        int countOmniWiGELight = 0;\n+\n+        int countOmniVees = 0;\n+\n         int countOmniTracked = 0;\n         int countOmniTrackedColossal = 0;\n         int countOmniTrackedAssault = 0;\n         int countOmniTrackedHeavy = 0;\n         int countOmniTrackedMedium = 0;\n         int countOmniTrackedLight = 0;\n+\n         int countOmniWheeled = 0;\n         int countOmniWheeledAssault = 0;\n         int countOmniWheeledHeavy = 0;\n         int countOmniWheeledMedium = 0;\n         int countOmniWheeledLight = 0;\n+\n         int countOmniHover = 0;\n         int countOmniHoverMedium = 0;\n         int countOmniHoverLight = 0;\n+\n+        int countOmniVTOL = 0;\n+        int countOmniVTOLLight = 0;\n+\n+        int countOmniWiGE = 0;\n+        int countOmniWiGEAssault = 0;\n+        int countOmniWiGEHeavy = 0;\n+        int countOmniWiGEMedium = 0;\n+        int countOmniWiGELight = 0;\n+\n+        int countOmniNaval = 0;\n+        int countOmniNavalColossal = 0;\n+        int countOmniNavalAssault = 0;\n+        int countOmniNavalHeavy = 0;\n+        int countOmniNavalMedium = 0;\n+        int countOmniNavalLight = 0;\n+\n+        int countOmniSub = 0;\n+        int countOmniSubColossal = 0;\n+        int countOmniSubAssault = 0;\n+        int countOmniSubHeavy = 0;\n+        int countOmniSubMedium = 0;\n+        int countOmniSubLight = 0;\n+\n         int countOmniHydrofoil = 0;\n         int countOmniHydrofoilAssault = 0;\n         int countOmniHydrofoilHeavy = 0;\n         int countOmniHydrofoilMedium = 0;\n         int countOmniHydrofoilLight = 0;\n-        \n-        // Battle Armor and Infantry\n-        //boolean expandInfantry = false;\n-        int countInfantry = 0;\n-        int countFootInfantry = 0;\n-        int countJumpInfantry = 0;\n-        int countMotorizedInfantry = 0;\n-        int countMechanizedInfantry = 0;\n-        int countBA = 0;\n-        int countBAPAL = 0;\n-        int countBALight = 0;\n-        int countBAMedium = 0;\n-        int countBAHeavy = 0;\n-        int countBAAssault = 0;\n-        \n-        // Jumpships, Warships, Dropships, and SmallCraft\n-        //boolean expandSpace = false;\n-        int countSpace = 0;\n-        int countJumpships = 0;\n-        int countWarships = 0;\n-        int countLargeWS = 0;\n-        int countSmallWS = 0;\n-        int countDropships = 0;\n-        int countLargeDS = 0;\n-        int countMediumDS = 0;\n-        int countSmallDS = 0;\n-        int countSmallCraft = 0;\n-        \n-        // Conventional Fighters\n-        int countConv = 0;\n-        \n+\n         // Support Vees\n-        /*boolean expandSupportVees = false;\n+        //boolean expandSupportVees = false;\n         int countSupportVees = 0;\n+\n         int countSupportStandardVees = 0;\n-        int countSupportOmniVees = 0;\n-        int countSupportVTOL = 0;\n-        int countSupportVTOLLight = 0;\n-        int countSupportSub = 0;\n-        int countSupportSubColossal = 0;\n-        int countSupportSubAssault = 0;\n-        int countSupportSubHeavy = 0;\n-        int countSupportSubMedium = 0;\n-        int countSupportSubLight = 0;\n-        int countSupportNaval = 0;\n-        int countSupportNavalColossal = 0;\n-        int countSupportNavalAssault = 0;\n-        int countSupportNavalHeavy = 0;\n-        int countSupportNavalMedium = 0;\n-        int countSupportNavalLight = 0;\n-        int countSupportWiGE = 0;\n-        int countSupportWiGEAssault = 0;\n-        int countSupportWiGEHeavy = 0;\n-        int countSupportWiGEMedium = 0;\n-        int countSupportWiGELight = 0;\n-        int countSupportTracked = 0;\n-        int countSupportTrackedColossal = 0;\n-        int countSupportTrackedAssault = 0;\n-        int countSupportTrackedHeavy = 0;\n-        int countSupportTrackedMedium = 0;\n-        int countSupportTrackedLight = 0;\n+\n         int countSupportWheeled = 0;\n-        int countSupportWheeledAssault = 0;\n-        int countSupportWheeledHeavy = 0;\n+        int countSupportWheeledLarge = 0;\n         int countSupportWheeledMedium = 0;\n-        int countSupportWheeledLight = 0;\n+        int countSupportWheeledSmall = 0;\n+\n+        int countSupportTracked = 0;\n+        int countSupportTrackedLarge = 0;\n+        int countSupportTrackedMedium = 0;\n+        int countSupportTrackedSmall = 0;\n+\n+\n         int countSupportHover = 0;\n+        int countSupportHoverLarge = 0;\n         int countSupportHoverMedium = 0;\n-        int countSupportHoverLight = 0;\n+        int countSupportHoverSmall = 0;\n+\n+        int countSupportVTOL = 0;\n+        int countSupportVTOLLarge = 0;\n+        int countSupportVTOLMedium = 0;\n+        int countSupportVTOLSmall = 0;\n+\n+        int countSupportWiGE = 0;\n+        int countSupportWiGELarge = 0;\n+        int countSupportWiGEMedium = 0;\n+        int countSupportWiGESmall = 0;\n+\n+        int countSupportAirship = 0;\n+        int countSupportAirshipLarge = 0;\n+        int countSupportAirshipMedium = 0;\n+        int countSupportAirshipSmall = 0;\n+\n+        int countSupportFixedWing = 0;\n+        int countSupportFixedWingLarge = 0;\n+        int countSupportFixedWingMedium = 0;\n+        int countSupportFixedWingSmall = 0;\n+\n+        int countSupportNaval = 0;\n+        int countSupportNavalLarge = 0;\n+        int countSupportNavalMedium = 0;\n+        int countSupportNavalSmall = 0;\n+        int countSupportSub = 0;\n+        int countSupportSubLarge = 0;\n+        int countSupportSubMedium = 0;\n+        int countSupportSubSmall = 0;\n         int countSupportHydrofoil = 0;\n-        int countSupportHydrofoilAssault = 0;\n-        int countSupportHydrofoilHeavy = 0;\n+        int countSupportHydrofoilLarge = 0;\n         int countSupportHydrofoilMedium = 0;\n-        int countSupportHydrofoilLight = 0;\n-        int countSupportOmniVTOL = 0;\n-        int countSupportOmniVTOLLight = 0;\n-        int countSupportOmniSub = 0;\n-        int countSupportOmniSubColossal = 0;\n-        int countSupportOmniSubAssault = 0;\n-        int countSupportOmniSubHeavy = 0;\n-        int countSupportOmniSubMedium = 0;\n-        int countSupportOmniSubLight = 0;\n-        int countSupportOmniNaval = 0;\n-        int countSupportOmniNavalColossal = 0;\n-        int countSupportOmniNavalAssault = 0;\n-        int countSupportOmniNavalHeavy = 0;\n-        int countSupportOmniNavalMedium = 0;\n-        int countSupportOmniNavalLight = 0;\n-        int countSupportOmniWiGE = 0;\n-        int countSupportOmniWiGEAssault = 0;\n-        int countSupportOmniWiGEHeavy = 0;\n-        int countSupportOmniWiGEMedium = 0;\n-        int countSupportOmniWiGELight = 0;\n+        int countSupportHydrofoilSmall = 0;\n+\n+        int countSupportSatellite = 0;\n+        int countSupportSatelliteLarge = 0;\n+        int countSupportSatelliteMedium = 0;\n+        int countSupportSatelliteSmall = 0;\n+\n+        int countSupportRail = 0;\n+        int countSupportRailLarge = 0;\n+        int countSupportRailMedium = 0;\n+        int countSupportRailSmall = 0;\n+\n+        int countSupportMaglev = 0;\n+        int countSupportMaglevLarge = 0;\n+        int countSupportMaglevMedium = 0;\n+        int countSupportMaglevSmall = 0;\n+\n+        int countSupportOmniVees = 0;\n+\n         int countSupportOmniTracked = 0;\n-        int countSupportOmniTrackedColossal = 0;\n-        int countSupportOmniTrackedAssault = 0;\n-        int countSupportOmniTrackedHeavy = 0;\n+        int countSupportOmniTrackedLarge = 0;\n         int countSupportOmniTrackedMedium = 0;\n-        int countSupportOmniTrackedLight = 0;\n+        int countSupportOmniTrackedSmall = 0;\n+\n         int countSupportOmniWheeled = 0;\n-        int countSupportOmniWheeledAssault = 0;\n-        int countSupportOmniWheeledHeavy = 0;\n+        int countSupportOmniWheeledLarge = 0;\n         int countSupportOmniWheeledMedium = 0;\n-        int countSupportOmniWheeledLight = 0;\n+        int countSupportOmniWheeledSmall = 0;\n+\n         int countSupportOmniHover = 0;\n+        int countSupportOmniHoverLarge = 0;\n         int countSupportOmniHoverMedium = 0;\n-        int countSupportOmniHoverLight = 0;\n+        int countSupportOmniHoverSmall = 0;\n+\n+        int countSupportOmniVTOL = 0;\n+        int countSupportOmniVTOLLarge = 0;\n+        int countSupportOmniVTOLMedium = 0;\n+        int countSupportOmniVTOLSmall = 0;\n+\n+        int countSupportOmniWiGE = 0;\n+        int countSupportOmniWiGELarge = 0;\n+        int countSupportOmniWiGEMedium = 0;\n+        int countSupportOmniWiGESmall = 0;\n+\n+        int countSupportOmniAirship = 0;\n+        int countSupportOmniAirshipLarge = 0;\n+        int countSupportOmniAirshipMedium = 0;\n+        int countSupportOmniAirshipSmall = 0;\n+\n+        int countSupportOmniFixedWing = 0;\n+        int countSupportOmniFixedWingLarge = 0;\n+        int countSupportOmniFixedWingMedium = 0;\n+        int countSupportOmniFixedWingSmall = 0;\n+\n+        int countSupportOmniNaval = 0;\n+        int countSupportOmniNavalLarge = 0;\n+        int countSupportOmniNavalMedium = 0;\n+        int countSupportOmniNavalSmall = 0;\n+        int countSupportOmniSub = 0;\n+        int countSupportOmniSubLarge = 0;\n+        int countSupportOmniSubMedium = 0;\n+        int countSupportOmniSubSmall = 0;\n         int countSupportOmniHydrofoil = 0;\n-        int countSupportOmniHydrofoilAssault = 0;\n-        int countSupportOmniHydrofoilHeavy = 0;\n+        int countSupportOmniHydrofoilLarge = 0;\n         int countSupportOmniHydrofoilMedium = 0;\n-        int countSupportOmniHydrofoilLight = 0;*/\n-        \n-        // Turrets\n-        int countGE = 0;\n-        \n+        int countSupportOmniHydrofoilSmall = 0;\n+\n+        int countSupportOmniSatellite = 0;\n+        int countSupportOmniSatelliteLarge = 0;\n+        int countSupportOmniSatelliteMedium = 0;\n+        int countSupportOmniSatelliteSmall = 0;\n+\n+        int countSupportOmniRail = 0;\n+        int countSupportOmniRailLarge = 0;\n+        int countSupportOmniRailMedium = 0;\n+        int countSupportOmniRailSmall = 0;\n+\n+        int countSupportOmniMaglev = 0;\n+        int countSupportOmniMaglevLarge = 0;\n+        int countSupportOmniMaglevMedium = 0;\n+        int countSupportOmniMaglevSmall = 0;\n+\n+        // Battle Armor and Infantry\n+        //boolean expandInfantry = false;\n+        int countInfantry = 0;\n+\n+        int countFootInfantry = 0;\n+        int countMotorizedInfantry = 0;\n+        int countJumpInfantry = 0;\n+        int countMechanizedInfantry = 0;\n+\n+        int countBA = 0;\n+        int countBAAssault = 0;\n+        int countBAHeavy = 0;\n+        int countBAMedium = 0;\n+        int countBALight = 0;\n+        int countBAPAL = 0;\n+\n+        // Conventional Fighter\n+        int countConv = 0;\n+\n         // Protomechs\n         //boolean expandProtos = false;\n         int countProtos = 0;\n-        int countLightProtos = 0;\n-        int countMediumProtos = 0;\n-        int countHeavyProtos = 0;\n         int countAssaultProtos = 0;\n-        \n-        \n-        // Gather data and load it into the tree\n-        for (Unit u : getCampaign().getUnits()) {\n-            Entity e = u.getEntity();\n-            if (e instanceof Mech) {\n-                countMechs++;\n-                if (e.isOmni()) {\n-                    countOmniMechs++;\n-                    if (e.getWeightClass() == EntityWeightClass.WEIGHT_ULTRA_LIGHT) {\n-                        ultralightOmniMech++;\n-                    } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                        lightOmniMech++;\n-                    } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM) {\n-                        mediumOmniMech++;\n-                    } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_HEAVY) {\n-                        heavyOmniMech++;\n-                    } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_ASSAULT) {\n-                        assaultOmniMech++;\n-                    } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_COLOSSAL) {\n-                        colossalOmniMech++;\n-                    }\n-                } else {\n-                    countBattleMechs++;\n-                    if (e.getWeightClass() == EntityWeightClass.WEIGHT_ULTRA_LIGHT) {\n-                        ultralightMech++;\n-                    } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                        lightMech++;\n-                    } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM) {\n-                        mediumMech++;\n-                    } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_HEAVY) {\n-                        heavyMech++;\n-                    } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_ASSAULT) {\n-                        assaultMech++;\n-                    } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_COLOSSAL) {\n-                        colossalMech++;\n-                    }\n-                }\n-            } else if (e instanceof ConvFighter) {\n-                countConv++;\n-            } else if (e instanceof SpaceStation) {\n-                continue;\n-            } else if (e instanceof Warship) {\n-                countSpace++;\n-                countWarships++;\n-                if (e.getWeightClass() == EntityWeightClass.WEIGHT_SMALL_WAR) {\n-                    countSmallWS++;\n-                } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_LARGE_WAR) {\n-                    countLargeWS++;\n-                }\n-            } else if (e instanceof Jumpship) {\n-                countSpace++;\n-                countJumpships++;\n-            } else if (e instanceof Dropship) {\n-                countSpace++;\n-                countDropships++;\n-                if (e.getWeightClass() == EntityWeightClass.WEIGHT_SMALL_DROP) {\n-                    countSmallDS++;\n-                } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM_DROP) {\n-                    countMediumDS++;\n-                } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_LARGE_DROP) {\n-                    countLargeDS++;\n-                }\n-            } else if (e instanceof SmallCraft) {\n-                countSpace++;\n-                countSmallCraft++;\n-            } else if (e instanceof Aero) {\n-                countASF++;\n-                if (e.isOmni()) {\n-                    countOmniASF++;\n-                    if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                        countOmniLightASF++;\n-                    } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM) {\n-                        countOmniMediumASF++;\n-                    } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_HEAVY) {\n-                        countOmniHeavyASF++;\n-                    }\n-                } else {\n-                    countStandardASF++;\n-                    if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                        countLightASF++;\n-                    } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM) {\n-                        countMediumASF++;\n-                    } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_HEAVY) {\n-                        countHeavyASF++;\n-                    }\n-                }\n-            } else if (e instanceof Protomech) {\n-                countProtos++;\n-                if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                    countLightProtos++;\n-                } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM) {\n-                    countMediumProtos++;\n-                } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_HEAVY) {\n-                    countHeavyProtos++;\n-                } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_ASSAULT) {\n-                    countAssaultProtos++;\n-                }\n-            } else if (e instanceof GunEmplacement) {\n-                countGE++;\n-            } else if (e instanceof SupportTank || e instanceof SupportVTOL) {\n-                continue;\n-            } else if (e instanceof Tank) {\n-                countVees++;\n-                if (e.isOmni()) {\n-                    countOmniVees++;\n-                    if (e instanceof VTOL) {\n-                        countOmniVTOL++;\n-                        if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                            countOmniVTOLLight++;\n-                        }\n-                    } else if (e.getMovementMode() == EntityMovementMode.TRACKED) {\n-                        countOmniTracked++;\n-                        if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                            countOmniTrackedLight++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM) {\n-                            countOmniTrackedMedium++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_HEAVY) {\n-                            countOmniTrackedHeavy++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_ASSAULT) {\n-                            countOmniTrackedAssault++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_COLOSSAL) {\n-                            countOmniTrackedColossal++;\n-                        }\n-                    } else if (e.getMovementMode() == EntityMovementMode.WHEELED) {\n-                        countOmniWheeled++;\n-                        if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                            countOmniWheeledLight++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM) {\n-                            countOmniWheeledMedium++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_HEAVY) {\n-                            countOmniWheeledHeavy++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_ASSAULT) {\n-                            countOmniWheeledAssault++;\n-                        }\n-                    } else if (e.getMovementMode() == EntityMovementMode.HOVER) {\n-                        countOmniHover++;\n-                        if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                            countOmniHoverLight++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM) {\n-                            countOmniHoverMedium++;\n-                        }\n-                    } else if (e.getMovementMode() == EntityMovementMode.WIGE) {\n-                        countOmniWiGE++;\n-                        if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                            countOmniWiGELight++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM) {\n-                            countOmniWiGEMedium++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_HEAVY) {\n-                            countOmniWiGEHeavy++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_ASSAULT) {\n-                            countOmniWiGEAssault++;\n-                        }\n-                    } else if (e.getMovementMode() == EntityMovementMode.NAVAL) {\n-                        countOmniNaval++;\n-                        if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                            countOmniNavalLight++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM) {\n-                            countOmniNavalMedium++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_HEAVY) {\n-                            countOmniNavalHeavy++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_ASSAULT) {\n-                            countOmniNavalAssault++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_COLOSSAL) {\n-                            countOmniNavalColossal++;\n-                        }\n-                    } else if (e.getMovementMode() == EntityMovementMode.SUBMARINE) {\n-                        countOmniSub++;\n-                        if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                            countOmniSubLight++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM) {\n-                            countOmniSubMedium++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_HEAVY) {\n-                            countOmniSubHeavy++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_ASSAULT) {\n-                            countOmniSubAssault++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_COLOSSAL) {\n-                            countOmniSubColossal++;\n-                        }\n-                    } else if (e.getMovementMode() == EntityMovementMode.HYDROFOIL) {\n-                        if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                            countOmniHydrofoilLight++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM) {\n-                            countOmniHydrofoilMedium++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_HEAVY) {\n-                            countOmniHydrofoilHeavy++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_ASSAULT) {\n-                            countOmniHydrofoilAssault++;\n-                        }\n-                    }\n-                } else {\n-                    countStandardVees++;\n-                    if (e instanceof VTOL) {\n-                        countVTOL++;\n-                        if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                            countVTOLLight++;\n-                        }\n-                    } else if (e.getMovementMode() == EntityMovementMode.TRACKED) {\n-                        countTracked++;\n-                        if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                            countTrackedLight++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM) {\n-                            countTrackedMedium++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_HEAVY) {\n-                            countTrackedHeavy++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_ASSAULT) {\n-                            countTrackedAssault++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_COLOSSAL) {\n-                            countTrackedColossal++;\n-                        }\n-                    } else if (e.getMovementMode() == EntityMovementMode.WHEELED) {\n-                        countWheeled++;\n-                        if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                            countWheeledLight++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM) {\n-                            countWheeledMedium++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_HEAVY) {\n-                            countWheeledHeavy++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_ASSAULT) {\n-                            countWheeledAssault++;\n-                        }\n-                    } else if (e.getMovementMode() == EntityMovementMode.HOVER) {\n-                        countHover++;\n-                        if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                            countHoverLight++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM) {\n-                            countHoverMedium++;\n-                        }\n-                    } else if (e.getMovementMode() == EntityMovementMode.WIGE) {\n-                        countWiGE++;\n-                        if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                            countWiGELight++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM) {\n-                            countWiGEMedium++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_HEAVY) {\n-                            countWiGEHeavy++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_ASSAULT) {\n-                            countWiGEAssault++;\n-                        }\n-                    } else if (e.getMovementMode() == EntityMovementMode.NAVAL) {\n-                        countNaval++;\n-                        if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                            countNavalLight++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM) {\n-                            countNavalMedium++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_HEAVY) {\n-                            countNavalHeavy++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_ASSAULT) {\n-                            countNavalAssault++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_COLOSSAL) {\n-                            countNavalColossal++;\n-                        }\n-                    } else if (e.getMovementMode() == EntityMovementMode.SUBMARINE) {\n-                        countSub++;\n-                        if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                            countSubLight++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM) {\n-                            countSubMedium++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_HEAVY) {\n-                            countSubHeavy++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_ASSAULT) {\n-                            countSubAssault++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_COLOSSAL) {\n-                            countSubColossal++;\n-                        }\n-                    } else if (e.getMovementMode() == EntityMovementMode.HYDROFOIL) {\n-                        if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                            countHydrofoilLight++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM) {\n-                            countHydrofoilMedium++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_HEAVY) {\n-                            countHydrofoilHeavy++;\n-                        } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_ASSAULT) {\n-                            countHydrofoilAssault++;\n-                        }\n-                    }\n-                }\n-            } else if (e instanceof BattleArmor) {\n-                countBA++;\n-                if (e.getWeightClass() == EntityWeightClass.WEIGHT_ULTRA_LIGHT) {\n-                    countBAPAL++;\n-                } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_LIGHT) {\n-                    countBALight++;\n-                } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_MEDIUM) {\n-                    countBAMedium++;\n-                } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_HEAVY) {\n-                    countBAHeavy++;\n-                } else if (e.getWeightClass() == EntityWeightClass.WEIGHT_ASSAULT) {\n-                    countBAAssault++;\n-                }\n-            } else if (e instanceof Infantry) {\n-                countInfantry++;\n-                if (((Infantry) e).isMechanized()) {\n-                    countMechanizedInfantry++;\n-                } else if (e.getMovementMode() == EntityMovementMode.INF_JUMP) {\n-                    countJumpInfantry++;\n-                } else if (e.getMovementMode() == EntityMovementMode.INF_LEG) {\n-                    countFootInfantry++;\n-                } else if (e.getMovementMode() == EntityMovementMode.INF_MOTORIZED) {\n-                    countMotorizedInfantry++;\n-                }\n-            }\n-        }\n-        \n+        int countHeavyProtos = 0;\n+        int countMediumProtos = 0;\n+        int countLightProtos = 0;\n+\n+        // Turrets\n+        int countGE = 0;\n+\n+        // Jumpships, Warships, Dropships, and SmallCraft\n+        //boolean expandSpace = false;\n+        int countSpace = 0;\n+\n+        int countSmallCraft = 0;\n+\n+        int countDropships = 0;\n+        int countLargeDS = 0;\n+        int countMediumDS = 0;\n+        int countSmallDS = 0;\n+\n+        int countJumpships = 0;\n+\n+        int countWarships = 0;\n+        int countLargeWS = 0;\n+        int countSmallWS = 0;\n+\n+        // Space Stations\n+        int countSpaceStations = 0;\n+\n+        //endregion Variable Declarations\n+\n+        //region Tree Creation\n+        DefaultMutableTreeNode top = new DefaultMutableTreeNode(\"Hangar\");\n+        JTree overviewHangarTree = new JTree(top);\n+\n         // Mech Nodes\n-        final DefaultMutableTreeNode mechs = new DefaultMutableTreeNode(\"'Mechs: \"+countMechs);\n-        DefaultMutableTreeNode battlemechs = new DefaultMutableTreeNode(\"BattleMechs: \"+countBattleMechs);\n-        DefaultMutableTreeNode omnis = new DefaultMutableTreeNode(\"OmniMechs: \"+countOmniMechs);\n+        final DefaultMutableTreeNode mechs = new DefaultMutableTreeNode();\n+\n+        DefaultMutableTreeNode battlemechs = new DefaultMutableTreeNode();\n         mechs.add(battlemechs);\n+        DefaultMutableTreeNode colossalMechs = new DefaultMutableTreeNode();\n+        battlemechs.add(colossalMechs);\n+        DefaultMutableTreeNode assaultMechs = new DefaultMutableTreeNode();\n+        battlemechs.add(assaultMechs);\n+        DefaultMutableTreeNode heavyMechs = new DefaultMutableTreeNode();\n+        battlemechs.add(heavyMechs);\n+        DefaultMutableTreeNode mediumMechs = new DefaultMutableTreeNode();\n+        battlemechs.add(mediumMechs);\n+        DefaultMutableTreeNode lightMechs = new DefaultMutableTreeNode();\n+        battlemechs.add(lightMechs);\n+        DefaultMutableTreeNode ultralightMechs = new DefaultMutableTreeNode();\n+        battlemechs.add(ultralightMechs);\n+\n+        DefaultMutableTreeNode omnis = new DefaultMutableTreeNode();\n         mechs.add(omnis);\n-        DefaultMutableTreeNode colossalmechs = new DefaultMutableTreeNode(\"Colossal: \"+colossalMech);\n-        battlemechs.add(colossalmechs);\n-        DefaultMutableTreeNode assaultmechs = new DefaultMutableTreeNode(\"Assault: \"+assaultMech);\n-        battlemechs.add(assaultmechs);\n-        DefaultMutableTreeNode heavymechs = new DefaultMutableTreeNode(\"Heavy: \"+heavyMech);\n-        battlemechs.add(heavymechs);\n-        DefaultMutableTreeNode mediummechs = new DefaultMutableTreeNode(\"Medium: \"+mediumMech);\n-        battlemechs.add(mediummechs);\n-        DefaultMutableTreeNode lightmechs = new DefaultMutableTreeNode(\"Light: \"+lightMech);\n-        battlemechs.add(lightmechs);\n-        DefaultMutableTreeNode ultralightmechs = new DefaultMutableTreeNode(\"Ultralight: \"+ultralightMech);\n-        battlemechs.add(ultralightmechs);\n-        DefaultMutableTreeNode colossalomnis = new DefaultMutableTreeNode(\"Colossal: \"+colossalOmniMech);\n-        omnis.add(colossalomnis);\n-        DefaultMutableTreeNode assaultomnis = new DefaultMutableTreeNode(\"Assault: \"+assaultOmniMech);\n-        omnis.add(assaultomnis);\n-        DefaultMutableTreeNode heavyomnis = new DefaultMutableTreeNode(\"Heavy: \"+heavyOmniMech);\n-        omnis.add(heavyomnis);\n-        DefaultMutableTreeNode mediumomnis = new DefaultMutableTreeNode(\"Medium: \"+mediumOmniMech);\n-        omnis.add(mediumomnis);\n-        DefaultMutableTreeNode lightomnis = new DefaultMutableTreeNode(\"Light: \"+lightOmniMech);\n-        omnis.add(lightomnis);\n-        DefaultMutableTreeNode ultralightomnis = new DefaultMutableTreeNode(\"Ultralight: \"+ultralightOmniMech);\n-        omnis.add(ultralightomnis);\n+        DefaultMutableTreeNode colossalOmniMechs = new DefaultMutableTreeNode();\n+        omnis.add(colossalOmniMechs);\n+        DefaultMutableTreeNode assaultOmniMechs = new DefaultMutableTreeNode();\n+        omnis.add(assaultOmniMechs);\n+        DefaultMutableTreeNode heavyOmniMechs = new DefaultMutableTreeNode();\n+        omnis.add(heavyOmniMechs);\n+        DefaultMutableTreeNode mediumOmniMechs = new DefaultMutableTreeNode();\n+        omnis.add(mediumOmniMechs);\n+        DefaultMutableTreeNode lightOmniMechs = new DefaultMutableTreeNode();\n+        omnis.add(lightOmniMechs);\n+        DefaultMutableTreeNode ultralightOmniMechs = new DefaultMutableTreeNode();\n+        omnis.add(ultralightOmniMechs);\n+\n         top.add(mechs);\n-        \n+\n         // ASF Nodes\n-        final DefaultMutableTreeNode ASF = new DefaultMutableTreeNode(\"'Aerospace Fighters: \"+countASF);\n-        DefaultMutableTreeNode sASF = new DefaultMutableTreeNode(\"Standard Fighters: \"+countStandardASF);\n-        DefaultMutableTreeNode oASF = new DefaultMutableTreeNode(\"OmniFighters: \"+countOmniASF);\n+        final DefaultMutableTreeNode ASF = new DefaultMutableTreeNode();\n+\n+        DefaultMutableTreeNode sASF = new DefaultMutableTreeNode();\n         ASF.add(sASF);\n-        ASF.add(oASF);\n-        DefaultMutableTreeNode sHeavyASF = new DefaultMutableTreeNode(\"Heavy: \"+countHeavyASF);\n+        DefaultMutableTreeNode sHeavyASF = new DefaultMutableTreeNode();\n         sASF.add(sHeavyASF);\n-        DefaultMutableTreeNode sMediumASF = new DefaultMutableTreeNode(\"Medium: \"+countMediumASF);\n+        DefaultMutableTreeNode sMediumASF = new DefaultMutableTreeNode();\n         sASF.add(sMediumASF);\n-        DefaultMutableTreeNode sLightASF = new DefaultMutableTreeNode(\"Light: \"+countLightASF);\n+        DefaultMutableTreeNode sLightASF = new DefaultMutableTreeNode();\n         sASF.add(sLightASF);\n-        DefaultMutableTreeNode oHeavyASF = new DefaultMutableTreeNode(\"Heavy: \"+countOmniHeavyASF);\n+\n+        DefaultMutableTreeNode oASF = new DefaultMutableTreeNode();\n+        ASF.add(oASF);\n+        DefaultMutableTreeNode oHeavyASF = new DefaultMutableTreeNode();\n         oASF.add(oHeavyASF);\n-        DefaultMutableTreeNode oMediumASF = new DefaultMutableTreeNode(\"Medium: \"+countOmniMediumASF);\n+        DefaultMutableTreeNode oMediumASF = new DefaultMutableTreeNode();\n         oASF.add(oMediumASF);\n-        DefaultMutableTreeNode oLightASF = new DefaultMutableTreeNode(\"Light: \"+countOmniLightASF);\n+        DefaultMutableTreeNode oLightASF = new DefaultMutableTreeNode();\n         oASF.add(oLightASF);\n+\n         top.add(ASF);\n-        \n+\n         // Vee Nodes\n-        final DefaultMutableTreeNode vees = new DefaultMutableTreeNode(\"Vehicles: \"+countVees);\n-        DefaultMutableTreeNode sVees = new DefaultMutableTreeNode(\"Standard: \"+countStandardVees);\n-        DefaultMutableTreeNode oVees = new DefaultMutableTreeNode(\"OmniVees: \"+countOmniVees);\n+        final DefaultMutableTreeNode vees = new DefaultMutableTreeNode();\n+\n+        DefaultMutableTreeNode sVees = new DefaultMutableTreeNode();\n         vees.add(sVees);\n-        vees.add(oVees);\n-        DefaultMutableTreeNode sTracked = new DefaultMutableTreeNode(\"Tracked: \"+countTracked);\n+\n+        DefaultMutableTreeNode sTracked = new DefaultMutableTreeNode();\n         sVees.add(sTracked);\n-        DefaultMutableTreeNode sTrackedColossal = new DefaultMutableTreeNode(\"Super Heavy: \"+countTrackedColossal);\n+        DefaultMutableTreeNode sTrackedColossal = new DefaultMutableTreeNode();\n         sTracked.add(sTrackedColossal);\n-        DefaultMutableTreeNode sTrackedAssault = new DefaultMutableTreeNode(\"Assault: \"+countTrackedAssault);\n+        DefaultMutableTreeNode sTrackedAssault = new DefaultMutableTreeNode();\n         sTracked.add(sTrackedAssault);\n-        DefaultMutableTreeNode sTrackedHeavy = new DefaultMutableTreeNode(\"Heavy: \"+countTrackedHeavy);\n+        DefaultMutableTreeNode sTrackedHeavy = new DefaultMutableTreeNode();\n         sTracked.add(sTrackedHeavy);\n-        DefaultMutableTreeNode sTrackedMedium = new DefaultMutableTreeNode(\"Medium: \"+countTrackedMedium);\n+        DefaultMutableTreeNode sTrackedMedium = new DefaultMutableTreeNode();\n         sTracked.add(sTrackedMedium);\n-        DefaultMutableTreeNode sTrackedLight = new DefaultMutableTreeNode(\"Light: \"+countTrackedLight);\n+        DefaultMutableTreeNode sTrackedLight = new DefaultMutableTreeNode();\n         sTracked.add(sTrackedLight);\n-        DefaultMutableTreeNode oTracked = new DefaultMutableTreeNode(\"Tracked: \"+countOmniTracked);\n-        oVees.add(oTracked);\n-        DefaultMutableTreeNode oTrackedColossal = new DefaultMutableTreeNode(\"Super Heavy: \"+countOmniTrackedColossal);\n-        oTracked.add(oTrackedColossal);\n-        DefaultMutableTreeNode oTrackedAssault = new DefaultMutableTreeNode(\"Assault: \"+countOmniTrackedAssault);\n-        oTracked.add(oTrackedAssault);\n-        DefaultMutableTreeNode oTrackedHeavy = new DefaultMutableTreeNode(\"Heavy: \"+countOmniTrackedHeavy);\n-        oTracked.add(oTrackedHeavy);\n-        DefaultMutableTreeNode oTrackedMedium = new DefaultMutableTreeNode(\"Medium: \"+countOmniTrackedMedium);\n-        oTracked.add(oTrackedMedium);\n-        DefaultMutableTreeNode oTrackedLight = new DefaultMutableTreeNode(\"Light: \"+countOmniTrackedLight);\n-        oTracked.add(oTrackedLight);\n-        DefaultMutableTreeNode sWheeled = new DefaultMutableTreeNode(\"Wheeled: \"+countWheeled);\n+\n+        DefaultMutableTreeNode sWheeled = new DefaultMutableTreeNode();\n         sVees.add(sWheeled);\n-        DefaultMutableTreeNode sWheeledAssault = new DefaultMutableTreeNode(\"Assault: \"+countWheeledAssault);\n+        DefaultMutableTreeNode sWheeledAssault = new DefaultMutableTreeNode();\n         sWheeled.add(sWheeledAssault);\n-        DefaultMutableTreeNode sWheeledHeavy = new DefaultMutableTreeNode(\"Heavy: \"+countWheeledHeavy);\n+        DefaultMutableTreeNode sWheeledHeavy = new DefaultMutableTreeNode();\n         sWheeled.add(sWheeledHeavy);\n-        DefaultMutableTreeNode sWheeledMedium = new DefaultMutableTreeNode(\"Medium: \"+countWheeledMedium);\n+        DefaultMutableTreeNode sWheeledMedium = new DefaultMutableTreeNode();\n         sWheeled.add(sWheeledMedium);\n-        DefaultMutableTreeNode sWheeledLight = new DefaultMutableTreeNode(\"Light: \"+countWheeledLight);\n+        DefaultMutableTreeNode sWheeledLight = new DefaultMutableTreeNode();\n         sWheeled.add(sWheeledLight);\n-        DefaultMutableTreeNode oWheeled = new DefaultMutableTreeNode(\"Wheeled: \"+countOmniWheeled);\n-        oVees.add(oWheeled);\n-        DefaultMutableTreeNode oWheeledAssault = new DefaultMutableTreeNode(\"Assault: \"+countOmniWheeledAssault);\n-        oWheeled.add(oWheeledAssault);\n-        DefaultMutableTreeNode oWheeledHeavy = new DefaultMutableTreeNode(\"Heavy: \"+countOmniWheeledHeavy);\n-        oWheeled.add(oWheeledHeavy);\n-        DefaultMutableTreeNode oWheeledMedium = new DefaultMutableTreeNode(\"Medium: \"+countOmniWheeledMedium);\n-        oWheeled.add(oWheeledMedium);\n-        DefaultMutableTreeNode oWheeledLight = new DefaultMutableTreeNode(\"Light: \"+countOmniWheeledLight);\n-        oWheeled.add(oWheeledLight);\n-        DefaultMutableTreeNode sHover = new DefaultMutableTreeNode(\"Hover: \"+countHover);\n+\n+        DefaultMutableTreeNode sHover = new DefaultMutableTreeNode();\n         sVees.add(sHover);\n-        DefaultMutableTreeNode sHoverMedium = new DefaultMutableTreeNode(\"Medium: \"+countHoverMedium);\n+        DefaultMutableTreeNode sHoverMedium = new DefaultMutableTreeNode( );\n         sHover.add(sHoverMedium);\n-        DefaultMutableTreeNode sHoverLight = new DefaultMutableTreeNode(\"Light: \"+countHoverLight);\n+        DefaultMutableTreeNode sHoverLight = new DefaultMutableTreeNode();\n         sHover.add(sHoverLight);\n-        DefaultMutableTreeNode oHover = new DefaultMutableTreeNode(\"Hover: \"+countOmniHover);\n-        oVees.add(oHover);\n-        DefaultMutableTreeNode oHoverMedium = new DefaultMutableTreeNode(\"Medium: \"+countOmniHoverMedium);\n-        oHover.add(oHoverMedium);\n-        DefaultMutableTreeNode oHoverLight = new DefaultMutableTreeNode(\"Light: \"+countOmniHoverLight);\n-        oHover.add(oHoverLight);\n-        DefaultMutableTreeNode sVTOL = new DefaultMutableTreeNode(\"VTOL: \"+countVTOL);\n+\n+        DefaultMutableTreeNode sVTOL = new DefaultMutableTreeNode();\n         sVees.add(sVTOL);\n-        DefaultMutableTreeNode sVTOLLight = new DefaultMutableTreeNode(\"Light: \"+countVTOLLight);\n+        DefaultMutableTreeNode sVTOLLight = new DefaultMutableTreeNode();\n         sVTOL.add(sVTOLLight);\n-        DefaultMutableTreeNode oVTOL = new DefaultMutableTreeNode(\"VTOL: \"+countOmniVTOL);\n-        oVees.add(oVTOL);\n-        DefaultMutableTreeNode oVTOLLight = new DefaultMutableTreeNode(\"Light: \"+countOmniVTOLLight);\n-        oVTOL.add(oVTOLLight);\n-        DefaultMutableTreeNode sWiGE = new DefaultMutableTreeNode(\"WiGE: \"+countWiGE);\n+\n+        DefaultMutableTreeNode sWiGE = new DefaultMutableTreeNode();\n         sVees.add(sWiGE);\n-        DefaultMutableTreeNode sWiGEAssault = new DefaultMutableTreeNode(\"Assault: \"+countWiGEAssault);\n+        DefaultMutableTreeNode sWiGEAssault = new DefaultMutableTreeNode();\n         sWiGE.add(sWiGEAssault);\n-        DefaultMutableTreeNode sWiGEHeavy = new DefaultMutableTreeNode(\"Heavy: \"+countWiGEHeavy);\n+        DefaultMutableTreeNode sWiGEHeavy = new DefaultMutableTreeNode();\n         sWiGE.add(sWiGEHeavy);\n-        DefaultMutableTreeNode sWiGEMedium = new DefaultMutableTreeNode(\"Medium: \"+countWiGEMedium);\n+        DefaultMutableTreeNode sWiGEMedium = new DefaultMutableTreeNode();\n         sWiGE.add(sWiGEMedium);\n-        DefaultMutableTreeNode sWiGELight = new DefaultMutableTreeNode(\"Light: \"+countWiGELight);\n+        DefaultMutableTreeNode sWiGELight = new DefaultMutableTreeNode();\n         sWiGE.add(sWiGELight);\n-        DefaultMutableTreeNode oWiGE = new DefaultMutableTreeNode(\"WiGE: \"+countOmniWiGE);\n-        oVees.add(oWiGE);\n-        DefaultMutableTreeNode oWiGEAssault = new DefaultMutableTreeNode(\"Assault: \"+countOmniWiGEAssault);\n-        oWiGE.add(oWiGEAssault);\n-        DefaultMutableTreeNode oWiGEHeavy = new DefaultMutableTreeNode(\"Heavy: \"+countOmniWiGEHeavy);\n-        oWiGE.add(oWiGEHeavy);\n-        DefaultMutableTreeNode oWiGEMedium = new DefaultMutableTreeNode(\"Medium: \"+countOmniWiGEMedium);\n-        oWiGE.add(oWiGEMedium);\n-        DefaultMutableTreeNode oWiGELight = new DefaultMutableTreeNode(\"Light: \"+countOmniWiGELight);\n-        oWiGE.add(oWiGELight);\n-        DefaultMutableTreeNode sNaval = new DefaultMutableTreeNode(\"Naval: \"+countNaval);\n+\n+        DefaultMutableTreeNode sNaval = new DefaultMutableTreeNode();\n         sVees.add(sNaval);\n-        DefaultMutableTreeNode sNavalColossal = new DefaultMutableTreeNode(\"Super Heavy: \"+countNavalColossal);\n+        DefaultMutableTreeNode sNavalColossal = new DefaultMutableTreeNode();\n         sNaval.add(sNavalColossal);\n-        DefaultMutableTreeNode sNavalAssault = new DefaultMutableTreeNode(\"Assault: \"+countNavalAssault);\n+        DefaultMutableTreeNode sNavalAssault = new DefaultMutableTreeNode();\n         sNaval.add(sNavalAssault);\n-        DefaultMutableTreeNode sNavalHeavy = new DefaultMutableTreeNode(\"Heavy: \"+countNavalHeavy);\n+        DefaultMutableTreeNode sNavalHeavy = new DefaultMutableTreeNode();\n         sNaval.add(sNavalHeavy);\n-        DefaultMutableTreeNode sNavalMedium = new DefaultMutableTreeNode(\"Medium: \"+countNavalMedium);\n+        DefaultMutableTreeNode sNavalMedium = new DefaultMutableTreeNode();\n         sNaval.add(sNavalMedium);\n-        DefaultMutableTreeNode sNavalLight = new DefaultMutableTreeNode(\"Light: \"+countNavalLight);\n+        DefaultMutableTreeNode sNavalLight = new DefaultMutableTreeNode();\n         sNaval.add(sNavalLight);\n-        DefaultMutableTreeNode oNaval = new DefaultMutableTreeNode(\"Naval: \"+countOmniNaval);\n-        oVees.add(oNaval);\n-        DefaultMutableTreeNode oNavalColossal = new DefaultMutableTreeNode(\"Super Heavy: \"+countOmniNavalColossal);\n-        oNaval.add(oNavalColossal);\n-        DefaultMutableTreeNode oNavalAssault = new DefaultMutableTreeNode(\"Assault: \"+countOmniNavalAssault);\n-        oNaval.add(oNavalAssault);\n-        DefaultMutableTreeNode oNavalHeavy = new DefaultMutableTreeNode(\"Heavy: \"+countOmniNavalHeavy);\n-        oNaval.add(oNavalHeavy);\n-        DefaultMutableTreeNode oNavalMedium = new DefaultMutableTreeNode(\"Medium: \"+countOmniNavalMedium);\n-        oNaval.add(oNavalMedium);\n-        DefaultMutableTreeNode oNavalLight = new DefaultMutableTreeNode(\"Light: \"+countOmniNavalLight);\n-        oNaval.add(oNavalLight);\n-        DefaultMutableTreeNode sSub = new DefaultMutableTreeNode(\"Sub: \"+countSub);\n+\n+        DefaultMutableTreeNode sSub = new DefaultMutableTreeNode();\n         sVees.add(sSub);\n-        DefaultMutableTreeNode sSubColossal = new DefaultMutableTreeNode(\"Super Heavy: \"+countSubColossal);\n+        DefaultMutableTreeNode sSubColossal = new DefaultMutableTreeNode();\n         sSub.add(sSubColossal);\n-        DefaultMutableTreeNode sSubAssault = new DefaultMutableTreeNode(\"Assault: \"+countSubAssault);\n+        DefaultMutableTreeNode sSubAssault = new DefaultMutableTreeNode();\n         sSub.add(sSubAssault);\n-        DefaultMutableTreeNode sSubHeavy = new DefaultMutableTreeNode(\"Heavy: \"+countSubHeavy);\n+        DefaultMutableTreeNode sSubHeavy = new DefaultMutableTreeNode();\n         sSub.add(sSubHeavy);\n-        DefaultMutableTreeNode sSubMedium = new DefaultMutableTreeNode(\"Medium: \"+countSubMedium);\n+        DefaultMutableTreeNode sSubMedium = new DefaultMutableTreeNode();\n         sSub.add(sSubMedium);\n-        DefaultMutableTreeNode sSubLight = new DefaultMutableTreeNode(\"Light: \"+countSubLight);\n+        DefaultMutableTreeNode sSubLight = new DefaultMutableTreeNode();\n         sSub.add(sSubLight);\n-        DefaultMutableTreeNode oSub = new DefaultMutableTreeNode(\"Sub: \"+countOmniSub);\n+\n+        DefaultMutableTreeNode sHydrofoil = new DefaultMutableTreeNode();\n+        sVees.add(sHydrofoil);\n+        DefaultMutableTreeNode sHydrofoilAssault = new DefaultMutableTreeNode();\n+        sHydrofoil.add(sHydrofoilAssault);\n+        DefaultMutableTreeNode sHydrofoilHeavy = new DefaultMutableTreeNode();\n+        sHydrofoil.add(sHydrofoilHeavy);\n+        DefaultMutableTreeNode sHydrofoilMedium = new DefaultMutableTreeNode();\n+        sHydrofoil.add(sHydrofoilMedium);\n+        DefaultMutableTreeNode sHydrofoilLight = new DefaultMutableTreeNode();\n+        sHydrofoil.add(sHydrofoilLight);\n+\n+        DefaultMutableTreeNode oVees = new DefaultMutableTreeNode();\n+        vees.add(oVees);\n+\n+        DefaultMutableTreeNode oTracked = new DefaultMutableTreeNode();\n+        oVees.add(oTracked);\n+        DefaultMutableTreeNode oTrackedColossal = new DefaultMutableTreeNode();\n+        oTracked.add(oTrackedColossal);\n+        DefaultMutableTreeNode oTrackedAssault = new DefaultMutableTreeNode();\n+        oTracked.add(oTrackedAssault);\n+        DefaultMutableTreeNode oTrackedHeavy = new DefaultMutableTreeNode();\n+        oTracked.add(oTrackedHeavy);\n+        DefaultMutableTreeNode oTrackedMedium = new DefaultMutableTreeNode();\n+        oTracked.add(oTrackedMedium);\n+        DefaultMutableTreeNode oTrackedLight = new DefaultMutableTreeNode();\n+        oTracked.add(oTrackedLight);\n+\n+        DefaultMutableTreeNode oWheeled = new DefaultMutableTreeNode();\n+        oVees.add(oWheeled);\n+        DefaultMutableTreeNode oWheeledAssault = new DefaultMutableTreeNode();\n+        oWheeled.add(oWheeledAssault);\n+        DefaultMutableTreeNode oWheeledHeavy = new DefaultMutableTreeNode();\n+        oWheeled.add(oWheeledHeavy);\n+        DefaultMutableTreeNode oWheeledMedium = new DefaultMutableTreeNode();\n+        oWheeled.add(oWheeledMedium);\n+        DefaultMutableTreeNode oWheeledLight = new DefaultMutableTreeNode();\n+        oWheeled.add(oWheeledLight);\n+\n+        DefaultMutableTreeNode oHover = new DefaultMutableTreeNode();\n+        oVees.add(oHover);\n+        DefaultMutableTreeNode oHoverMedium = new DefaultMutableTreeNode();\n+        oHover.add(oHoverMedium);\n+        DefaultMutableTreeNode oHoverLight = new DefaultMutableTreeNode();\n+        oHover.add(oHoverLight);\n+\n+        DefaultMutableTreeNode oVTOL = new DefaultMutableTreeNode();\n+        oVees.add(oVTOL);\n+        DefaultMutableTreeNode oVTOLLight = new DefaultMutableTreeNode();\n+        oVTOL.add(oVTOLLight);\n+\n+        DefaultMutableTreeNode oWiGE = new DefaultMutableTreeNode();\n+        oVees.add(oWiGE);\n+        DefaultMutableTreeNode oWiGEAssault = new DefaultMutableTreeNode();\n+        oWiGE.add(oWiGEAssault);\n+        DefaultMutableTreeNode oWiGEHeavy = new DefaultMutableTreeNode();\n+        oWiGE.add(oWiGEHeavy);\n+        DefaultMutableTreeNode oWiGEMedium = new DefaultMutableTreeNode();\n+        oWiGE.add(oWiGEMedium);\n+        DefaultMutableTreeNode oWiGELight = new DefaultMutableTreeNode();\n+        oWiGE.add(oWiGELight);\n+\n+        DefaultMutableTreeNode oNaval = new DefaultMutableTreeNode();\n+        oVees.add(oNaval);\n+        DefaultMutableTreeNode oNavalColossal = new DefaultMutableTreeNode();\n+        oNaval.add(oNavalColossal);\n+        DefaultMutableTreeNode oNavalAssault = new DefaultMutableTreeNode();\n+        oNaval.add(oNavalAssault);\n+        DefaultMutableTreeNode oNavalHeavy = new DefaultMutableTreeNode();\n+        oNaval.add(oNavalHeavy);\n+        DefaultMutableTreeNode oNavalMedium = new DefaultMutableTreeNode();\n+        oNaval.add(oNavalMedium);\n+        DefaultMutableTreeNode oNavalLight = new DefaultMutableTreeNode();\n+        oNaval.add(oNavalLight);\n+\n+        DefaultMutableTreeNode oSub = new DefaultMutableTreeNode();\n         oVees.add(oSub);\n-        DefaultMutableTreeNode oSubColossal = new DefaultMutableTreeNode(\"Super Heavy: \"+countOmniSubColossal);\n+        DefaultMutableTreeNode oSubColossal = new DefaultMutableTreeNode();\n         oSub.add(oSubColossal);\n-        DefaultMutableTreeNode oSubAssault = new DefaultMutableTreeNode(\"Assault: \"+countOmniSubAssault);\n+        DefaultMutableTreeNode oSubAssault = new DefaultMutableTreeNode();\n         oSub.add(oSubAssault);\n-        DefaultMutableTreeNode oSubHeavy = new DefaultMutableTreeNode(\"Heavy: \"+countOmniSubHeavy);\n+        DefaultMutableTreeNode oSubHeavy = new DefaultMutableTreeNode();\n         oSub.add(oSubHeavy);\n-        DefaultMutableTreeNode oSubMedium = new DefaultMutableTreeNode(\"Medium: \"+countOmniSubMedium);\n+        DefaultMutableTreeNode oSubMedium = new DefaultMutableTreeNode();\n         oSub.add(oSubMedium);\n-        DefaultMutableTreeNode oSubLight = new DefaultMutableTreeNode(\"Light: \"+countOmniSubLight);\n+        DefaultMutableTreeNode oSubLight = new DefaultMutableTreeNode();\n         oSub.add(oSubLight);\n-        DefaultMutableTreeNode sHydrofoil = new DefaultMutableTreeNode(\"Hydrofoil: \"+countHydrofoil);\n-        sVees.add(sHydrofoil);\n-        DefaultMutableTreeNode sHydrofoilAssault = new DefaultMutableTreeNode(\"Assault: \"+countHydrofoilAssault);\n-        sHydrofoil.add(sHydrofoilAssault);\n-        DefaultMutableTreeNode sHydrofoilHeavy = new DefaultMutableTreeNode(\"Heavy: \"+countHydrofoilHeavy);\n-        sHydrofoil.add(sHydrofoilHeavy);\n-        DefaultMutableTreeNode sHydrofoilMedium = new DefaultMutableTreeNode(\"Medium: \"+countHydrofoilMedium);\n-        sHydrofoil.add(sHydrofoilMedium);\n-        DefaultMutableTreeNode sHydrofoilLight = new DefaultMutableTreeNode(\"Light: \"+countHydrofoilLight);\n-        sHydrofoil.add(sHydrofoilLight);\n-        DefaultMutableTreeNode oHydrofoil = new DefaultMutableTreeNode(\"Hydrofoil: \"+countOmniHydrofoil);\n+\n+        DefaultMutableTreeNode oHydrofoil = new DefaultMutableTreeNode();\n         oVees.add(oHydrofoil);\n-        DefaultMutableTreeNode oHydrofoilAssault = new DefaultMutableTreeNode(\"Assault: \"+countOmniHydrofoilAssault);\n+        DefaultMutableTreeNode oHydrofoilAssault = new DefaultMutableTreeNode();\n         oHydrofoil.add(oHydrofoilAssault);\n-        DefaultMutableTreeNode oHydrofoilHeavy = new DefaultMutableTreeNode(\"Heavy: \"+countOmniHydrofoilHeavy);\n+        DefaultMutableTreeNode oHydrofoilHeavy = new DefaultMutableTreeNode();\n         oHydrofoil.add(oHydrofoilHeavy);\n-        DefaultMutableTreeNode oHydrofoilMedium = new DefaultMutableTreeNode(\"Medium: \"+countOmniHydrofoilMedium);\n+        DefaultMutableTreeNode oHydrofoilMedium = new DefaultMutableTreeNode();\n         oHydrofoil.add(oHydrofoilMedium);\n-        DefaultMutableTreeNode oHydrofoilLight = new DefaultMutableTreeNode(\"Light: \"+countOmniHydrofoilLight);\n+        DefaultMutableTreeNode oHydrofoilLight = new DefaultMutableTreeNode();\n         oHydrofoil.add(oHydrofoilLight);\n+\n         top.add(vees);\n-        \n-        // Conventional Fighters\n-        final DefaultMutableTreeNode conv = new DefaultMutableTreeNode(\"Conventional Fighters: \"+countConv);\n-        top.add(conv);\n-        \n+\n+        // Support Vee Nodes\n+        final DefaultMutableTreeNode supportVees = new DefaultMutableTreeNode();\n+\n+        // Standard Support Vees\n+        DefaultMutableTreeNode sSupportVees = new DefaultMutableTreeNode();\n+        supportVees.add(sSupportVees);\n+\n+        DefaultMutableTreeNode sSupportWheeled = new DefaultMutableTreeNode();\n+        sSupportVees.add(sSupportWheeled);\n+        DefaultMutableTreeNode sSupportWheeledLarge = new DefaultMutableTreeNode();\n+        sSupportWheeled.add(sSupportWheeledLarge);\n+        DefaultMutableTreeNode sSupportWheeledMedium = new DefaultMutableTreeNode();\n+        sSupportWheeled.add(sWheeledMedium);\n+        DefaultMutableTreeNode sSupportWheeledSmall = new DefaultMutableTreeNode();\n+        sSupportWheeled.add(sSupportWheeledSmall);\n+\n+        DefaultMutableTreeNode sSupportTracked = new DefaultMutableTreeNode();\n+        sSupportVees.add(sSupportTracked);\n+        DefaultMutableTreeNode sSupportTrackedLarge = new DefaultMutableTreeNode();\n+        sSupportTracked.add(sSupportTrackedLarge);\n+        DefaultMutableTreeNode sSupportTrackedMedium = new DefaultMutableTreeNode();\n+        sSupportTracked.add(sSupportTrackedMedium);\n+        DefaultMutableTreeNode sSupportTrackedSmall = new DefaultMutableTreeNode();\n+        sSupportTracked.add(sSupportTrackedSmall);\n+\n+        DefaultMutableTreeNode sSupportHover = new DefaultMutableTreeNode();\n+        sSupportVees.add(sSupportHover);\n+        DefaultMutableTreeNode sSupportHoverLarge = new DefaultMutableTreeNode();\n+        sSupportHover.add(sSupportHoverLarge);\n+        DefaultMutableTreeNode sSupportHoverMedium = new DefaultMutableTreeNode();\n+        sSupportHover.add(sSupportHoverMedium);\n+        DefaultMutableTreeNode sSupportHoverSmall = new DefaultMutableTreeNode();\n+        sSupportHover.add(sSupportHoverSmall);\n+\n+        DefaultMutableTreeNode sSupportVTOL = new DefaultMutableTreeNode();\n+        sSupportVees.add(sSupportVTOL);\n+        DefaultMutableTreeNode sSupportVTOLLarge = new DefaultMutableTreeNode();\n+        sSupportVTOL.add(sSupportVTOLLarge);\n+        DefaultMutableTreeNode sSupportVTOLMedium = new DefaultMutableTreeNode();\n+        sSupportVTOL.add(sSupportVTOLMedium);\n+        DefaultMutableTreeNode sSupportVTOLSmall = new DefaultMutableTreeNode();\n+        sSupportVTOL.add(sSupportVTOLSmall);\n+\n+        DefaultMutableTreeNode sSupportWiGE = new DefaultMutableTreeNode();\n+        sSupportVees.add(sSupportWiGE);\n+        DefaultMutableTreeNode sSupportWiGELarge = new DefaultMutableTreeNode();\n+        sSupportWiGE.add(sSupportWiGELarge);\n+        DefaultMutableTreeNode sSupportWiGEMedium = new DefaultMutableTreeNode();\n+        sSupportWiGE.add(sSupportWiGEMedium);\n+        DefaultMutableTreeNode sSupportWiGESmall = new DefaultMutableTreeNode();\n+        sSupportWiGE.add(sSupportWiGESmall);\n+\n+        DefaultMutableTreeNode sSupportAirship = new DefaultMutableTreeNode();\n+        sSupportVees.add(sSupportAirship);\n+        DefaultMutableTreeNode sSupportAirshipLarge = new DefaultMutableTreeNode();\n+        sSupportAirship.add(sSupportAirshipLarge);\n+        DefaultMutableTreeNode sSupportAirshipMedium = new DefaultMutableTreeNode();\n+        sSupportAirship.add(sSupportAirshipMedium);\n+        DefaultMutableTreeNode sSupportAirshipSmall = new DefaultMutableTreeNode();\n+        sSupportAirship.add(sSupportAirshipSmall);\n+\n+        DefaultMutableTreeNode sSupportFixedWing = new DefaultMutableTreeNode();\n+        sSupportVees.add(sSupportFixedWing);\n+        DefaultMutableTreeNode sSupportFixedWingLarge = new DefaultMutableTreeNode();\n+        sSupportFixedWing.add(sSupportFixedWingLarge);\n+        DefaultMutableTreeNode sSupportFixedWingMedium = new DefaultMutableTreeNode();\n+        sSupportFixedWing.add(sSupportFixedWingMedium);\n+        DefaultMutableTreeNode sSupportFixedWingSmall = new DefaultMutableTreeNode();\n+        sSupportFixedWing.add(sSupportFixedWingSmall);\n+\n+        DefaultMutableTreeNode sSupportNaval = new DefaultMutableTreeNode();\n+        sSupportVees.add(sSupportNaval);\n+        DefaultMutableTreeNode sSupportNavalLarge = new DefaultMutableTreeNode();\n+        sSupportNaval.add(sSupportNavalLarge);\n+        DefaultMutableTreeNode sSupportNavalMedium = new DefaultMutableTreeNode();\n+        sSupportNaval.add(sSupportNavalMedium);\n+        DefaultMutableTreeNode sSupportNavalSmall = new DefaultMutableTreeNode();\n+        sSupportNaval.add(sSupportNavalSmall);\n+\n+        DefaultMutableTreeNode sSupportSub = new DefaultMutableTreeNode();\n+        sSupportVees.add(sSupportSub);\n+        DefaultMutableTreeNode sSupportSubLarge = new DefaultMutableTreeNode();\n+        sSupportSub.add(sSupportSubLarge);\n+        DefaultMutableTreeNode sSupportSubMedium = new DefaultMutableTreeNode();\n+        sSupportSub.add(sSupportSubMedium);\n+        DefaultMutableTreeNode sSupportSubSmall = new DefaultMutableTreeNode();\n+        sSupportSub.add(sSupportSubSmall);\n+\n+        DefaultMutableTreeNode sSupportHydrofoil = new DefaultMutableTreeNode();\n+        sSupportVees.add(sSupportHydrofoil);\n+        DefaultMutableTreeNode sSupportHydrofoilLarge = new DefaultMutableTreeNode();\n+        sSupportHydrofoil.add(sSupportHydrofoilLarge);\n+        DefaultMutableTreeNode sSupportHydrofoilMedium = new DefaultMutableTreeNode();\n+        sSupportHydrofoil.add(sSupportHydrofoilMedium);\n+        DefaultMutableTreeNode sSupportHydrofoilSmall = new DefaultMutableTreeNode();\n+        sSupportHydrofoil.add(sSupportHydrofoilSmall);\n+\n+        DefaultMutableTreeNode sSupportSatellite = new DefaultMutableTreeNode();\n+        sSupportVees.add(sSupportSatellite);\n+        DefaultMutableTreeNode sSupportSatelliteLarge = new DefaultMutableTreeNode();\n+        sSupportSatellite.add(sSupportSatelliteLarge);\n+        DefaultMutableTreeNode sSupportSatelliteMedium = new DefaultMutableTreeNode();\n+        sSupportSatellite.add(sSupportSatelliteMedium);\n+        DefaultMutableTreeNode sSupportSatelliteSmall = new DefaultMutableTreeNode();\n+        sSupportSatellite.add(sSupportSatelliteSmall);\n+\n+        DefaultMutableTreeNode sSupportRail = new DefaultMutableTreeNode();\n+        sSupportVees.add(sSupportRail);\n+        DefaultMutableTreeNode sSupportRailLarge = new DefaultMutableTreeNode();\n+        sSupportRail.add(sSupportRailLarge);\n+        DefaultMutableTreeNode sSupportRailMedium = new DefaultMutableTreeNode();\n+        sSupportRail.add(sSupportRailMedium);\n+        DefaultMutableTreeNode sSupportRailSmall = new DefaultMutableTreeNode();\n+        sSupportRail.add(sSupportRailSmall);\n+\n+        DefaultMutableTreeNode sSupportMaglev = new DefaultMutableTreeNode();\n+        sSupportVees.add(sSupportMaglev);\n+        DefaultMutableTreeNode sSupportMaglevLarge = new DefaultMutableTreeNode();\n+        sSupportMaglev.add(sSupportMaglevLarge);\n+        DefaultMutableTreeNode sSupportMaglevMedium = new DefaultMutableTreeNode();\n+        sSupportMaglev.add(sSupportMaglevMedium);\n+        DefaultMutableTreeNode sSupportMaglevSmall = new DefaultMutableTreeNode();\n+        sSupportMaglev.add(sSupportMaglevSmall);\n+\n+\n+        // Omni Support Vees\n+        DefaultMutableTreeNode oSupportVees = new DefaultMutableTreeNode();\n+        supportVees.add(oSupportVees);\n+\n+        DefaultMutableTreeNode oSupportWh", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abd8e3d6d749dec0f2cfa404aeb4452ea8b82d7c"}, "originalPosition": 1679}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e63a5db64c6b80057100dd1a6ed0644df13f0559", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/e63a5db64c6b80057100dd1a6ed0644df13f0559", "committedDate": "2020-01-21T03:08:56Z", "message": "Fixing typo in comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2Mjg4NTAx", "url": "https://github.com/MegaMek/mekhq/pull/1414#pullrequestreview-346288501", "createdAt": "2020-01-22T00:50:37Z", "commit": {"oid": "e63a5db64c6b80057100dd1a6ed0644df13f0559"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4431, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}