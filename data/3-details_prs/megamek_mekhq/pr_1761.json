{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxOTQyNjgy", "number": 1761, "title": "347/1662: Remember Layered Force Icon Setup", "bodyText": "This fixes #1662 and two of the three requests in #347 (copy/paste icons being left). The last one is possible, but would require significant refactoring outside of the scope of this.\nThere's a bunch of rework and refactoring to do this, and I'd recommend reviewing with whitespace differences off.", "createdAt": "2020-05-22T14:09:23Z", "url": "https://github.com/MegaMek/mekhq/pull/1761", "merged": true, "mergeCommit": {"oid": "70513e63e085d0e82684747a32279793819f9d01"}, "closed": true, "closedAt": "2020-05-22T18:43:28Z", "author": {"login": "Windchild292"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjd6N4AH2gAyNDIxOTQyNjgyOjYwMTNkMDcwMDI3YWQ4MDZkZjA2MTEyYTcxMTg4NjhkZDVmZDhjZTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcj2hr9AFqTQxNzEwNzA1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6013d070027ad806df06112a7118868dd5fd8ce5", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/6013d070027ad806df06112a7118868dd5fd8ce5", "committedDate": "2020-05-21T13:44:16Z", "message": "Initial code cleanup and NPE fixing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2971338a44c18d90a8b64fb7318aaff701419324", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/2971338a44c18d90a8b64fb7318aaff701419324", "committedDate": "2020-05-21T16:01:41Z", "message": "Adding most of the layered force icon code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c1b0bd414ea87072304801101c5c2ae91e6fe48", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/2c1b0bd414ea87072304801101c5c2ae91e6fe48", "committedDate": "2020-05-22T11:59:20Z", "message": "Initial working version, pre-refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94801836958c4e04efe9ad625d5a770e8712b5d3", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/94801836958c4e04efe9ad625d5a770e8712b5d3", "committedDate": "2020-05-22T13:47:28Z", "message": "Refactoring to simplify the code and reduce the length of the reused code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e523ccf9a7ea063ce33060b7e219610bbcf70829", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/e523ccf9a7ea063ce33060b7e219610bbcf70829", "committedDate": "2020-05-22T13:47:48Z", "message": "Force file cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "538bd62886f9b3911a7e1c2fd22b0f863d5a373a", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/538bd62886f9b3911a7e1c2fd22b0f863d5a373a", "committedDate": "2020-05-22T13:52:54Z", "message": "Adding missing copyright header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7deccd8eb21e990de6816d5900abcf33609747cf", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/7deccd8eb21e990de6816d5900abcf33609747cf", "committedDate": "2020-05-22T14:00:08Z", "message": "Applying personal review changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MDU0MDcx", "url": "https://github.com/MegaMek/mekhq/pull/1761#pullrequestreview-417054071", "createdAt": "2020-05-22T16:51:11Z", "commit": {"oid": "7deccd8eb21e990de6816d5900abcf33609747cf"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNjo1MToxMVrOGZdqtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNjo1NzoyNVrOGZd2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM1MzY1Mg==", "bodyText": "Should you break here?", "url": "https://github.com/MegaMek/mekhq/pull/1761#discussion_r429353652", "createdAt": "2020-05-22T16:51:11Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/dialog/ImageChoiceDialog.java", "diffHunk": "@@ -74,125 +76,100 @@\n     private LinkedHashMap<String, Vector<String>> iconMap; // Key = Image Category, Value = Vector of Image Filenames\n     private ImageTableMouseAdapter imagesMouseAdapter;\n     private boolean force;\n-    private JButton btnCancel;\n-    private JButton btnSelect;\n-    private JComboBox<String> comboCategories;\n-    private JScrollPane scrImages;\n     private JTable tableImages;\n     private boolean changed = false;\n \n-    // BEGIN: Layered Images Support\n-    private ImageIcon imageIcon = null;\n+    //region Layered Images Support\n     private JLabel preview = new JLabel();\n     private JTabbedPane tabbedPane = new JTabbedPane();\n     private JTabbedPane layerTabs = new JTabbedPane();\n     private JPanel layerPanel = new JPanel();\n-    // Types\n-    private JScrollPane scrTypes = new JScrollPane();\n-    private JTable tableTypes = new JTable();\n-    private JPanel panelTypes = new JPanel();\n-    private ImageTableModel typesModel = new ImageTableModel();\n-    // Formations\n-    private JScrollPane scrFormations = new JScrollPane();\n-    private JTable tableFormations = new JTable();\n-    private JPanel panelFormations = new JPanel();\n-    private ImageTableModel formationsModel = new ImageTableModel();\n-    // Adjustments\n-    private JScrollPane scrAdjustments = new JScrollPane();\n-    private JTable tableAdjustments = new JTable();\n-    private JPanel panelAdjustments = new JPanel();\n-    private ImageTableModel adjustmentsModel = new ImageTableModel();\n-    // Alphanumerics\n-    private JScrollPane scrAlphanumerics = new JScrollPane();\n-    private JTable tableAlphanumerics = new JTable();\n-    private JPanel panelAlphanumerics = new JPanel();\n-    private ImageTableModel alphanumericsModel = new ImageTableModel();\n-    // Special Modifiers\n-    private JScrollPane scrSpecialModifiers = new JScrollPane();\n-    private JTable tableSpecialModifiers = new JTable();\n-    private JPanel panelSpecialModifiers = new JPanel();\n-    private ImageTableModel specialModel = new ImageTableModel();\n-    // Backgrounds\n-    private JScrollPane scrBackgrounds = new JScrollPane();\n-    private JTable tableBackgrounds = new JTable();\n-    private JPanel panelBackgrounds = new JPanel();\n-    private ImageTableModel backgroundsModel = new ImageTableModel();\n-    // Logos\n-    private JScrollPane scrLogos = new JScrollPane();\n-    private JTable tableLogos = new JTable();\n-    private JPanel panelLogos = new JPanel();\n-    private ImageTableModel logosModel = new ImageTableModel();\n-    // END: Layered Images Support\n-\n-    /** Creates new form ImageChoiceDialog */\n-    public ImageChoiceDialog(Frame parent, boolean modal, String category, String file, DirectoryItems items) {\n-        this(parent, modal, category, file, items, false);\n+\n+    // Combined array format\n+    private JTable[] layeredTables;\n+    //endregion Layered Images Support\n+    //endregion Variable Declarations\n+\n+    //region Constructors\n+    public ImageChoiceDialog(Frame parent, boolean modal, String category, String filename, DirectoryItems items) {\n+        this(parent, modal, category, filename, null, items, false);\n     }\n \n-    /** Creates new form ImageChoiceDialog */\n-    public ImageChoiceDialog(Frame parent, boolean modal, String category, String file, DirectoryItems items, boolean force) {\n+    public ImageChoiceDialog(Frame parent, boolean modal, String category, String filename,\n+                             LinkedHashMap<String, Vector<String>> iconMap, DirectoryItems items,\n+                             boolean force) {\n         super(parent, modal);\n         this.category = category;\n-        filename = file;\n+        this.filename = filename;\n         imagesMouseAdapter = new ImageTableMouseAdapter();\n         this.imageItems = items;\n         this.force = force;\n-        // If we're doing forces, initialize the hashmap for use\n-        if (force) {\n-            iconMap = new LinkedHashMap<>();\n-        }\n-        initComponents();\n-        fillTable((String) comboCategories.getSelectedItem());\n-        int rowIndex = 0;\n-        for(int i = 0; i < imageTableModel.getRowCount(); i++) {\n-            if (imageTableModel.getValueAt(i, 0).equals(filename)) {\n-                rowIndex = i;\n-                break;\n+\n+        // Clone the input iconMap\n+        this.iconMap = new LinkedHashMap<>();\n+        if ((iconMap != null) && !iconMap.isEmpty()) {\n+            for (Map.Entry<String, Vector<String>> entry : iconMap.entrySet()) {\n+                if ((entry.getValue() != null) && !entry.getValue().isEmpty()) {\n+                    this.iconMap.put(entry.getKey(), new Vector<>(entry.getValue()));\n+                }\n             }\n         }\n-        tableImages.setRowSelectionInterval(rowIndex, rowIndex);\n+\n+        initComponents();\n+\n         setLocationRelativeTo(parent);\n         setUserPreferences();\n     }\n+    //endregion Constructors\n \n     private void initComponents() {\n+        ResourceBundle resourceMap = ResourceBundle.getBundle(\"mekhq.resources.ImageChoiceDialog\", new EncodeControl()); //$NON-NLS-1$\n         GridBagConstraints gbc;\n \n-        scrImages = new JScrollPane();\n-        tableImages = new JTable();\n-        comboCategories = new JComboBox<>();\n-        btnSelect = new JButton();\n-        btnCancel = new JButton();\n-        JPanel imagesPanel = new JPanel();\n         getContentPane().setLayout(new GridBagLayout());\n-\n-        ResourceBundle resourceMap = ResourceBundle.getBundle(\"mekhq.resources.ImageChoiceDialog\", new EncodeControl()); //$NON-NLS-1$\n         setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\n         setName(\"Form\"); // NOI18N\n         setTitle(force ? resourceMap.getString(\"Force.title\") : resourceMap.getString(\"Portrait.title\"));\n+\n+        JPanel imagesPanel = new JPanel();\n         imagesPanel.setLayout(new GridBagLayout());\n         imagesPanel.setName(PANEL_IMAGES);\n \n-        scrImages.setName(\"scrImages\"); // NOI18N\n+        DefaultComboBoxModel<String> categoryModel = new DefaultComboBoxModel<>();\n+        String match = null;\n+        categoryModel.addElement(Crew.ROOT_PORTRAIT);\n+        Iterator<String> names = (imageItems != null)\n+                ? imageItems.getCategoryNames() : Collections.emptyIterator();\n+        while (names.hasNext()) {\n+            String name = names.next();\n+            if (!\"\".equals(name)) {\n+                categoryModel.addElement(name);\n+                if (category.equals(name)) {\n+                    match = name;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7deccd8eb21e990de6816d5900abcf33609747cf"}, "originalPosition": 166}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM1NTA3MQ==", "bodyText": "A comment as to why this is , k would help. The iteration makes it seem like it would be , 0 or , 1.", "url": "https://github.com/MegaMek/mekhq/pull/1761#discussion_r429355071", "createdAt": "2020-05-22T16:54:12Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/dialog/ImageChoiceDialog.java", "diffHunk": "@@ -244,132 +200,67 @@ private void initComponents() {\n             gbc.weightx = 1.0;\n             gbc.weighty = 1.0;\n \n-            // Panel for Types\n-            tableTypes.setModel(typesModel);\n-            tableTypes.setName(\"tableTypes\"); // NOI18N\n-            tableTypes.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n-            tableTypes.getSelectionModel().addListSelectionListener(event -> refreshLayeredPreview());\n-            tableTypes.setRowHeight(76);\n-            tableTypes.getColumnModel().getColumn(0).setCellRenderer(typesModel.getRenderer());\n-            tableTypes.addMouseListener(new ImageTableMouseAdapter());\n-            scrTypes.setViewportView(tableTypes);\n-            panelTypes.add(scrTypes, gbc);\n-            typesModel.reset();\n-            typesModel.setCategory(IconPackage.FORCE_TYPE);\n-            Iterator<String> imageNames = (imageItems != null)\n-                    ? imageItems.getItemNames(IconPackage.FORCE_TYPE) : Collections.emptyIterator();\n-            while (imageNames.hasNext()) {\n-                typesModel.addImage(imageNames.next());\n-            }\n-            layerTabs.addTab(resourceMap.getString(\"Force.types\"), panelTypes);\n-\n-            // Panel for Formations\n-            tableFormations.setModel(formationsModel);\n-            tableFormations.setName(\"tableFormations\"); // NOI18N\n-            tableFormations.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n-            tableFormations.getSelectionModel().addListSelectionListener(event -> refreshLayeredPreview());\n-            tableFormations.setRowHeight(76);\n-            tableFormations.getColumnModel().getColumn(0).setCellRenderer(formationsModel.getRenderer());\n-            tableFormations.addMouseListener(new ImageTableMouseAdapter());\n-            scrFormations.setViewportView(tableFormations);\n-            panelFormations.add(scrFormations, gbc);\n-            formationsModel.reset();\n-            formationsModel.setCategory(IconPackage.FORCE_FORMATIONS);\n-            Iterator<String> imageNamesTypes = imageItems.getItemNames(IconPackage.FORCE_FORMATIONS);\n-            while (imageNamesTypes.hasNext()) {\n-                formationsModel.addImage(imageNamesTypes.next());\n-            }\n-            layerTabs.addTab(resourceMap.getString(\"Force.formations\"), panelFormations);\n-\n-            // Panel for Adjustments\n-            tableAdjustments.setModel(adjustmentsModel);\n-            tableAdjustments.setName(\"tableAdjustments\"); // NOI18N\n-            tableAdjustments.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n-            tableAdjustments.getSelectionModel().addListSelectionListener(event -> refreshLayeredPreview());\n-            tableAdjustments.setRowHeight(76);\n-            tableAdjustments.getColumnModel().getColumn(0).setCellRenderer(adjustmentsModel.getRenderer());\n-            tableAdjustments.addMouseListener(new ImageTableMouseAdapter());\n-            scrAdjustments.setViewportView(tableAdjustments);\n-            panelAdjustments.add(scrAdjustments, gbc);\n-            adjustmentsModel.reset();\n-            adjustmentsModel.setCategory(IconPackage.FORCE_ADJUSTMENTS);\n-            Iterator<String> imageNamesAdjustments = imageItems.getItemNames(IconPackage.FORCE_ADJUSTMENTS);\n-            while (imageNamesAdjustments.hasNext()) {\n-                adjustmentsModel.addImage(imageNamesAdjustments.next());\n-            }\n-            layerTabs.addTab(resourceMap.getString(\"Force.adjustments\"), panelAdjustments);\n-\n-            // Panel for Alphanumerics\n-            tableAlphanumerics.setModel(alphanumericsModel);\n-            tableAlphanumerics.setName(\"tableAalphanumerics\"); // NOI18N\n-            tableAlphanumerics.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n-            tableAlphanumerics.getSelectionModel().addListSelectionListener(event -> refreshLayeredPreview());\n-            tableAlphanumerics.setRowHeight(76);\n-            tableAlphanumerics.getColumnModel().getColumn(0).setCellRenderer(alphanumericsModel.getRenderer());\n-            tableAlphanumerics.addMouseListener(new ImageTableMouseAdapter());\n-            scrAlphanumerics.setViewportView(tableAlphanumerics);\n-            panelAlphanumerics.add(scrAlphanumerics, gbc);\n-            alphanumericsModel.reset();\n-            alphanumericsModel.setCategory(IconPackage.FORCE_ALPHANUMERICS);\n-            Iterator<String> imageNamesAlphanumerics = imageItems.getItemNames(IconPackage.FORCE_ALPHANUMERICS);\n-            while (imageNamesAlphanumerics.hasNext()) {\n-                alphanumericsModel.addImage(imageNamesAlphanumerics.next());\n-            }\n-            layerTabs.addTab(resourceMap.getString(\"Force.alphanumerics\"), panelAlphanumerics);\n-\n-            // Panel for SpecialModifiers\n-            tableSpecialModifiers.setModel(specialModel);\n-            tableSpecialModifiers.setName(\"tableSpecialModifiers\"); // NOI18N\n-            tableSpecialModifiers.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n-            tableSpecialModifiers.getSelectionModel().addListSelectionListener(event -> refreshLayeredPreview());\n-            tableSpecialModifiers.setRowHeight(76);\n-            tableSpecialModifiers.getColumnModel().getColumn(0).setCellRenderer(specialModel.getRenderer());\n-            tableSpecialModifiers.addMouseListener(new ImageTableMouseAdapter());\n-            scrSpecialModifiers.setViewportView(tableSpecialModifiers);\n-            panelSpecialModifiers.add(scrSpecialModifiers, gbc);\n-            specialModel.reset();\n-            specialModel.setCategory(IconPackage.FORCE_SPECIAL_MODIFIERS);\n-            Iterator<String> imageNamesSpecial = imageItems.getItemNames(IconPackage.FORCE_SPECIAL_MODIFIERS);\n-            while (imageNamesSpecial.hasNext()) {\n-                specialModel.addImage(imageNamesSpecial.next());\n-            }\n-            layerTabs.addTab(resourceMap.getString(\"Force.special\"), panelSpecialModifiers);\n-\n-            // Panel for Backgrounds\n-            tableBackgrounds.setModel(backgroundsModel);\n-            tableBackgrounds.setName(\"tableBackgrounds\"); // NOI18N\n-            tableBackgrounds.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n-            tableBackgrounds.getSelectionModel().addListSelectionListener(event -> refreshLayeredPreview());\n-            tableBackgrounds.setRowHeight(76);\n-            tableBackgrounds.getColumnModel().getColumn(0).setCellRenderer(backgroundsModel.getRenderer());\n-            tableBackgrounds.addMouseListener(new ImageTableMouseAdapter());\n-            scrBackgrounds.setViewportView(tableBackgrounds);\n-            panelBackgrounds.add(scrBackgrounds, gbc);\n-            backgroundsModel.reset();\n-            backgroundsModel.setCategory(IconPackage.FORCE_BACKGROUNDS);\n-            Iterator<String> imageNamesBackgrounds = imageItems.getItemNames(IconPackage.FORCE_BACKGROUNDS);\n-            while (imageNamesBackgrounds.hasNext()) {\n-                backgroundsModel.addImage(imageNamesBackgrounds.next());\n+            LayeredForceIcon[] layeredForceIcons = LayeredForceIcon.values();\n+            layeredTables = new JTable[layeredForceIcons.length];\n+\n+            for (int i = 0; i < layeredForceIcons.length; i++) {\n+                JScrollPane scrollPane = new JScrollPane();\n+                layeredTables[i] = new JTable();\n+                ImageTableModel tableModel = new ImageTableModel();\n+                JPanel panel = new JPanel();\n+\n+                layeredTables[i].setModel(tableModel);\n+                layeredTables[i].setName(layeredForceIcons[i].getTableName());\n+                layeredTables[i].setSelectionMode(layeredForceIcons[i].getListSelectionModel());\n+                layeredTables[i].setRowHeight(76);\n+                layeredTables[i].getColumnModel().getColumn(0).setCellRenderer(tableModel.getRenderer());\n+                layeredTables[i].addMouseListener(new ImageTableMouseAdapter());\n+                scrollPane.setViewportView(layeredTables[i]);\n+                panel.add(scrollPane, gbc);\n+                tableModel.reset();\n+                tableModel.setCategory(layeredForceIcons[i].getLayerPath());\n+                if (layeredForceIcons[i] != LayeredForceIcon.FRAME) {\n+                    tableModel.addImage(Force.ICON_NONE);\n+                }\n+                Iterator<String> imageIterator = (imageItems != null)\n+                        ? imageItems.getItemNames(layeredForceIcons[i].getLayerPath())\n+                        : Collections.emptyIterator();\n+                while (imageIterator.hasNext()) {\n+                    tableModel.addImage(imageIterator.next());\n+                }\n+                layerTabs.addTab(layeredForceIcons[i].toString(), panel);\n+\n+                // Initialize Initial Values, provided the Icon Map is not empty\n+                if (!iconMap.isEmpty()) {\n+                    if (iconMap.containsKey(layeredForceIcons[i].getLayerPath())) {\n+                        if (layeredForceIcons[i].getListSelectionModel() == ListSelectionModel.SINGLE_SELECTION) {\n+                            // Determine the current selected value\n+                            String selected = iconMap.get(layeredForceIcons[i].getLayerPath()).get(0);\n+                            for (int k = 0; k < tableModel.getRowCount(); k++) {\n+                                if (tableModel.getValueAt(k, 0).equals(selected)) {\n+                                    layeredTables[i].setRowSelectionInterval(k, k);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7deccd8eb21e990de6816d5900abcf33609747cf"}, "originalPosition": 398}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM1NjU5Mg==", "bodyText": "A comment as to why this is <= (no selection or the first) would be good.", "url": "https://github.com/MegaMek/mekhq/pull/1761#discussion_r429356592", "createdAt": "2020-05-22T16:57:25Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/dialog/ImageChoiceDialog.java", "diffHunk": "@@ -478,99 +382,39 @@ public String getFileName() {\n         return filename;\n     }\n \n-    /**\n-     * @return the iconMap\n-     */\n     public LinkedHashMap<String, Vector<String>> getIconMap() {\n         return iconMap;\n     }\n \n-    /**\n-     * @param iconMap the iconMap to set\n-     */\n-    public void setIconMap(LinkedHashMap<String, Vector<String>> iconMap) {\n-        this.iconMap = iconMap;\n-    }\n-\n     private void refreshLayeredPreview() {\n         // Add the image frame\n         iconMap.clear();\n-        Vector<String> frameVector = new Vector<>();\n-        frameVector.add(\"Frame.png\");\n-        iconMap.put(IconPackage.FORCE_FRAME, frameVector);\n+\n         // Check each table for what is, or is not, selected\n-        Vector<String> tmp;\n-        if (tableTypes.getSelectedRow() == -1) {\n-            iconMap.remove(IconPackage.FORCE_TYPE, iconMap.get(IconPackage.FORCE_TYPE));\n-        } else {\n-            tmp = new Vector<>();\n-            for (int index : tableTypes.getSelectedRows()) {\n-                tmp.add((String) tableTypes.getValueAt(index, 0));\n-                iconMap.put(IconPackage.FORCE_TYPE, tmp);\n-            }\n-        }\n-        if (tableFormations.getSelectedRow() == -1) {\n-            iconMap.remove(IconPackage.FORCE_FORMATIONS, iconMap.get(IconPackage.FORCE_FORMATIONS));\n-        } else {\n-            tmp = new Vector<>();\n-            for (int index : tableFormations.getSelectedRows()) {\n-                tmp.add((String) tableFormations.getValueAt(index, 0));\n-                iconMap.put(IconPackage.FORCE_FORMATIONS, tmp);\n-            }\n-        }\n-        if (tableAdjustments.getSelectedRow() == -1) {\n-            iconMap.remove(IconPackage.FORCE_ADJUSTMENTS, iconMap.get(IconPackage.FORCE_ADJUSTMENTS));\n-        } else {\n-            tmp = new Vector<>();\n-            for (int index : tableAdjustments.getSelectedRows()) {\n-                tmp.add((String) tableAdjustments.getValueAt(index, 0));\n-                iconMap.put(IconPackage.FORCE_ADJUSTMENTS, tmp);\n-            }\n-        }\n-        if (tableAlphanumerics.getSelectedRow() == -1) {\n-            iconMap.remove(IconPackage.FORCE_ALPHANUMERICS, iconMap.get(IconPackage.FORCE_ALPHANUMERICS));\n-        } else {\n-            tmp = new Vector<>();\n-            for (int index : tableAlphanumerics.getSelectedRows()) {\n-                tmp.add((String) tableAlphanumerics.getValueAt(index, 0));\n-                iconMap.put(IconPackage.FORCE_ALPHANUMERICS, tmp);\n-            }\n-        }\n-        if (tableSpecialModifiers.getSelectedRow() == -1) {\n-            iconMap.remove(IconPackage.FORCE_SPECIAL_MODIFIERS, iconMap.get(IconPackage.FORCE_SPECIAL_MODIFIERS));\n-        } else {\n-            tmp = new Vector<>();\n-            for (int index : tableSpecialModifiers.getSelectedRows()) {\n-                tmp.add((String) tableSpecialModifiers.getValueAt(index, 0));\n-                iconMap.put(IconPackage.FORCE_SPECIAL_MODIFIERS, tmp);\n-            }\n-        }\n-        if (tableBackgrounds.getSelectedRow() == -1) {\n-            iconMap.remove(IconPackage.FORCE_BACKGROUNDS, iconMap.get(IconPackage.FORCE_BACKGROUNDS));\n-        } else {\n-            tmp = new Vector<>();\n-            for (int index : tableBackgrounds.getSelectedRows()) {\n-                tmp.add((String) tableBackgrounds.getValueAt(index, 0));\n-                iconMap.put(IconPackage.FORCE_BACKGROUNDS, tmp);\n-            }\n-        }\n-        if (tableLogos.getSelectedRow() == -1) {\n-            iconMap.remove(IconPackage.FORCE_LOGOS, iconMap.get(IconPackage.FORCE_LOGOS));\n-        } else {\n-            tmp = new Vector<>();\n-            for (int index : tableLogos.getSelectedRows()) {\n-                tmp.add((String) tableLogos.getValueAt(index, 0));\n-                iconMap.put(IconPackage.FORCE_LOGOS, tmp);\n+        Vector<String> temp;\n+        LayeredForceIcon[] layeredForceIcons = LayeredForceIcon.values();\n+        for (int i = 0; i < layeredTables.length; i++) {\n+            if (layeredTables[i].getSelectedRow() <= 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7deccd8eb21e990de6816d5900abcf33609747cf"}, "originalPosition": 605}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe6f12c3b2b8fec95fe18765618e9e474fdeac17", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/fe6f12c3b2b8fec95fe18765618e9e474fdeac17", "committedDate": "2020-05-22T17:14:13Z", "message": "Applying changes from review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MTA3MDU5", "url": "https://github.com/MegaMek/mekhq/pull/1761#pullrequestreview-417107059", "createdAt": "2020-05-22T18:25:06Z", "commit": {"oid": "fe6f12c3b2b8fec95fe18765618e9e474fdeac17"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4264, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}