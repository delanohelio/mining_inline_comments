{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMTExOTQy", "number": 2052, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxODowODo1OVrOEqCG0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxODoxMTozNlrOEqCHiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTEwMTYxOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/gui/dialog/GMToolsDialog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxODowODo1OVrOHcC4Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxODowODo1OVrOHcC4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE2OTMzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                int originClan;\n          \n          \n            \n                Phenotype selectedPhenotype;\n          \n          \n            \n                int bloodnameYear;\n          \n          \n            \n                private int originClan;\n          \n          \n            \n                private Phenotype selectedPhenotype;\n          \n          \n            \n                private int bloodnameYear;", "url": "https://github.com/MegaMek/mekhq/pull/2052#discussion_r499169335", "createdAt": "2020-10-03T18:08:59Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/dialog/GMToolsDialog.java", "diffHunk": "@@ -84,28 +90,58 @@\n     private JLabel currentCallsign;\n     private JLabel callsignGenerated;\n \n-    private CampaignGUI gui;\n-    private Person person;\n-\n+    private JComboBox<String> originClanPicker;\n+    private JComboBox<Integer> bloodnameEraPicker;\n+    private JComboBox<Phenotype> phenotypePicker;\n+    private JLabel currentBloodname;\n+    private JLabel bloodnameGenerated;\n+    private JLabel originClanGenerated;\n+    private JLabel phenotypeGenerated;\n+    private JLabel bloodnameWarningLabel;\n+    //endregion GUI Variables\n+\n+    //region Previously Generated Information\n     /**\n      * The last unit rolled, used when clicking 'Add Random Unit' after Roll for RAT is clicked\n      */\n     private MechSummary lastRolledUnit;\n \n     /**\n-     * The last name rolled, used when clocking 'Set Generated Name' after Generate Name is clicked\n+     * The last name rolled, used when clicking 'Set Generated Name' after Generate Name is clicked\n      */\n     private String[] lastGeneratedName;\n \n     /**\n-     * The last callsign rolled, used when clocking 'Set Generated Callsign' after Generate Callsign is clicked\n+     * The last callsign rolled, used when clicking 'Set Generated Callsign' after Generate Callsign is clicked\n      */\n     private String lastGeneratedCallsign;\n \n+    /**\n+     * The last bloodname rolled, used when clicking 'Set Generated Bloodname' after Generate Bloodname is clicked\n+     */\n+    private String lastGeneratedBloodname;\n+    //endregion Previously Generated Information\n+\n+    //region Data Sources\n+    private CampaignGUI gui;\n+    private Person person;\n+    private List<Clan> clans = new ArrayList<>();\n+    //endregion Data Sources\n+\n+    //region Bloodname Information\n+    int originClan;\n+    Phenotype selectedPhenotype;\n+    int bloodnameYear;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92fde75e75a6d7c2f377510c11c0f3d474e01ece"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTEwMzQ0OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/gui/dialog/GMToolsDialog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxODoxMTozN1rOHcC5Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxODozNTowNlrOHcDAMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE2OTU2Mg==", "bodyText": "I get errors when building with DefaultLookup.* under JDK11. Perhaps this should move to UIManager?", "url": "https://github.com/MegaMek/mekhq/pull/2052#discussion_r499169562", "createdAt": "2020-10-03T18:11:37Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/dialog/GMToolsDialog.java", "diffHunk": "@@ -413,6 +451,151 @@ private JPanel getCallsignGenerator() {\n     }\n     //endregion Callsign Generator Panel Initialization\n \n+    //region Bloodname Generator Panel Initialization\n+    private JPanel getBloodnameGenerator() {\n+        JPanel namePanel = new JPanel(new GridBagLayout());\n+        namePanel.setName(\"bloodnamePanel\");\n+        namePanel.setBorder(BorderFactory.createTitledBorder(resources.getString(\"bloodnamePanel.text\")));\n+\n+        int gridx = 0, gridy = 0, gridxMax;\n+\n+        JLabel originClanLabel = new JLabel(resources.getString(\"originClanLabel.text\"));\n+        originClanLabel.setName(\"originClanLabel\");\n+        namePanel.add(originClanLabel, newGridBagConstraints(gridx, gridy));\n+\n+        clans.addAll(Clan.getClans());\n+        clans.sort(Comparator.comparing(o -> o.getFullName(bloodnameYear)));\n+        DefaultComboBoxModel<String> originClanModel = new DefaultComboBoxModel<>();\n+        for (Clan clan : clans) {\n+            originClanModel.addElement(clan.getFullName(bloodnameYear));\n+        }\n+        originClanPicker = new JComboBox<>(originClanModel);\n+        originClanPicker.setName(\"originClanPicker\");\n+        originClanPicker.setSelectedIndex(0);\n+        originClanPicker.addActionListener(evt -> validateBloodnameInput());\n+        namePanel.add(originClanPicker, newGridBagConstraints(gridx++, gridy + 1));\n+\n+        JLabel bloodnameEraLabel = new JLabel(resources.getString(\"bloodnameEraLabel.text\"));\n+        bloodnameEraLabel.setName(\"bloodnameEraLabel\");\n+        namePanel.add(bloodnameEraLabel, newGridBagConstraints(gridx, gridy));\n+\n+        bloodnameEraPicker = new JComboBox<>(ERAS);\n+        bloodnameEraPicker.setName(\"bloodnameEraPicker\");\n+        bloodnameEraPicker.setSelectedIndex(0);\n+        bloodnameEraPicker.addActionListener(evt -> validateBloodnameInput());\n+        namePanel.add(bloodnameEraPicker, newGridBagConstraints(gridx++, gridy + 1));\n+\n+        JLabel phenotypeLabel = new JLabel(resources.getString(\"phenotypeLabel.text\"));\n+        phenotypeLabel.setName(\"phenotypeLabel\");\n+        namePanel.add(phenotypeLabel, newGridBagConstraints(gridx, gridy));\n+\n+        DefaultComboBoxModel<Phenotype> phenotypeModel = new DefaultComboBoxModel<>();\n+        phenotypeModel.addElement(Phenotype.GENERAL);\n+        for (Phenotype phenotype : Phenotype.getExternalPhenotypes()) {\n+            phenotypeModel.addElement(phenotype);\n+        }\n+        phenotypePicker = new JComboBox<>(phenotypeModel);\n+        phenotypePicker.setName(\"phenotypePicker\");\n+        phenotypePicker.setSelectedItem(Phenotype.GENERAL);\n+        phenotypePicker.setRenderer(new DefaultListCellRenderer() {\n+            @Override\n+            public Component getListCellRendererComponent(JList<?> list, Object value, int index,\n+                                                          boolean isSelected, boolean cellHasFocus) {\n+                setOpaque(list.isOpaque());\n+                if (isSelected) {\n+                    setBackground(list.getSelectionBackground());\n+                    setForeground(list.getSelectionForeground());\n+                } else {\n+                    setBackground(list.getBackground());\n+                    setForeground(list.getForeground());\n+                }\n+                setFont(list.getFont());\n+\n+                setText((value == null) ? \"\"\n+                        : (value instanceof Phenotype ? ((Phenotype) value).getGroupingName() : \"ERROR\"));\n+\n+                setEnabled(list.isEnabled());\n+\n+                if (cellHasFocus) {\n+                    Border border = null;\n+                    if (isSelected) {\n+                        border = DefaultLookup.getBorder(this, ui, \"List.focusSelectedCellHighlightBorder\");\n+                    }\n+                    if (border == null) {\n+                        border = DefaultLookup.getBorder(this, ui, \"List.focusCellHighlightBorder\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92fde75e75a6d7c2f377510c11c0f3d474e01ece"}, "originalPosition": 258}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE3MTM3Nw==", "bodyText": "Fixed by reworking how the override works", "url": "https://github.com/MegaMek/mekhq/pull/2052#discussion_r499171377", "createdAt": "2020-10-03T18:35:06Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/gui/dialog/GMToolsDialog.java", "diffHunk": "@@ -413,6 +451,151 @@ private JPanel getCallsignGenerator() {\n     }\n     //endregion Callsign Generator Panel Initialization\n \n+    //region Bloodname Generator Panel Initialization\n+    private JPanel getBloodnameGenerator() {\n+        JPanel namePanel = new JPanel(new GridBagLayout());\n+        namePanel.setName(\"bloodnamePanel\");\n+        namePanel.setBorder(BorderFactory.createTitledBorder(resources.getString(\"bloodnamePanel.text\")));\n+\n+        int gridx = 0, gridy = 0, gridxMax;\n+\n+        JLabel originClanLabel = new JLabel(resources.getString(\"originClanLabel.text\"));\n+        originClanLabel.setName(\"originClanLabel\");\n+        namePanel.add(originClanLabel, newGridBagConstraints(gridx, gridy));\n+\n+        clans.addAll(Clan.getClans());\n+        clans.sort(Comparator.comparing(o -> o.getFullName(bloodnameYear)));\n+        DefaultComboBoxModel<String> originClanModel = new DefaultComboBoxModel<>();\n+        for (Clan clan : clans) {\n+            originClanModel.addElement(clan.getFullName(bloodnameYear));\n+        }\n+        originClanPicker = new JComboBox<>(originClanModel);\n+        originClanPicker.setName(\"originClanPicker\");\n+        originClanPicker.setSelectedIndex(0);\n+        originClanPicker.addActionListener(evt -> validateBloodnameInput());\n+        namePanel.add(originClanPicker, newGridBagConstraints(gridx++, gridy + 1));\n+\n+        JLabel bloodnameEraLabel = new JLabel(resources.getString(\"bloodnameEraLabel.text\"));\n+        bloodnameEraLabel.setName(\"bloodnameEraLabel\");\n+        namePanel.add(bloodnameEraLabel, newGridBagConstraints(gridx, gridy));\n+\n+        bloodnameEraPicker = new JComboBox<>(ERAS);\n+        bloodnameEraPicker.setName(\"bloodnameEraPicker\");\n+        bloodnameEraPicker.setSelectedIndex(0);\n+        bloodnameEraPicker.addActionListener(evt -> validateBloodnameInput());\n+        namePanel.add(bloodnameEraPicker, newGridBagConstraints(gridx++, gridy + 1));\n+\n+        JLabel phenotypeLabel = new JLabel(resources.getString(\"phenotypeLabel.text\"));\n+        phenotypeLabel.setName(\"phenotypeLabel\");\n+        namePanel.add(phenotypeLabel, newGridBagConstraints(gridx, gridy));\n+\n+        DefaultComboBoxModel<Phenotype> phenotypeModel = new DefaultComboBoxModel<>();\n+        phenotypeModel.addElement(Phenotype.GENERAL);\n+        for (Phenotype phenotype : Phenotype.getExternalPhenotypes()) {\n+            phenotypeModel.addElement(phenotype);\n+        }\n+        phenotypePicker = new JComboBox<>(phenotypeModel);\n+        phenotypePicker.setName(\"phenotypePicker\");\n+        phenotypePicker.setSelectedItem(Phenotype.GENERAL);\n+        phenotypePicker.setRenderer(new DefaultListCellRenderer() {\n+            @Override\n+            public Component getListCellRendererComponent(JList<?> list, Object value, int index,\n+                                                          boolean isSelected, boolean cellHasFocus) {\n+                setOpaque(list.isOpaque());\n+                if (isSelected) {\n+                    setBackground(list.getSelectionBackground());\n+                    setForeground(list.getSelectionForeground());\n+                } else {\n+                    setBackground(list.getBackground());\n+                    setForeground(list.getForeground());\n+                }\n+                setFont(list.getFont());\n+\n+                setText((value == null) ? \"\"\n+                        : (value instanceof Phenotype ? ((Phenotype) value).getGroupingName() : \"ERROR\"));\n+\n+                setEnabled(list.isEnabled());\n+\n+                if (cellHasFocus) {\n+                    Border border = null;\n+                    if (isSelected) {\n+                        border = DefaultLookup.getBorder(this, ui, \"List.focusSelectedCellHighlightBorder\");\n+                    }\n+                    if (border == null) {\n+                        border = DefaultLookup.getBorder(this, ui, \"List.focusCellHighlightBorder\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE2OTU2Mg=="}, "originalCommit": {"oid": "92fde75e75a6d7c2f377510c11c0f3d474e01ece"}, "originalPosition": 258}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2263, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}