{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwODEyMDM4", "number": 2134, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDoxNzoxNFrOEs0kcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzo1ODoxNlrOEye3Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDM0MDk5OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/CampaignOptions.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDoxNzoxNFrOHgRR6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNDo0Mjo0NlrOHiLYKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU5OTU5Mw==", "bodyText": "\"improving readability\" lol", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503599593", "createdAt": "2020-10-13T00:17:14Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/CampaignOptions.java", "diffHunk": "@@ -3051,7 +3052,7 @@ public void addMassRepairOption(MassRepairOption mro) {\n             massRepairOptions.remove(foundIdx + 1);\n         }\n \n-        massRepairOptions.sort(Comparator.comparingInt(MassRepairOption::getType));\n+        massRepairOptions.sort((mro1, mro2) -> (((Comparable<Integer>) mro1.getType().ordinal()).compareTo(mro2.getType().ordinal())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYyNzM5OA==", "bodyText": "I wish Java would compare enums like most reasonable languages.", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503627398", "createdAt": "2020-10-13T02:14:02Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/CampaignOptions.java", "diffHunk": "@@ -3051,7 +3052,7 @@ public void addMassRepairOption(MassRepairOption mro) {\n             massRepairOptions.remove(foundIdx + 1);\n         }\n \n-        massRepairOptions.sort(Comparator.comparingInt(MassRepairOption::getType));\n+        massRepairOptions.sort((mro1, mro2) -> (((Comparable<Integer>) mro1.getType().ordinal()).compareTo(mro2.getType().ordinal())));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU5OTU5Mw=="}, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYwMDA0MQ==", "bodyText": "Double checking the code, I removed this and swapped the base logic to the stream api. Backend we don't care about ordering", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505600041", "createdAt": "2020-10-15T14:42:46Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/CampaignOptions.java", "diffHunk": "@@ -3051,7 +3052,7 @@ public void addMassRepairOption(MassRepairOption mro) {\n             massRepairOptions.remove(foundIdx + 1);\n         }\n \n-        massRepairOptions.sort(Comparator.comparingInt(MassRepairOption::getType));\n+        massRepairOptions.sort((mro1, mro2) -> (((Comparable<Integer>) mro1.getType().ordinal()).compareTo(mro2.getType().ordinal())));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU5OTU5Mw=="}, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDM0NjI4OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/MissingProtomekSensor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDoyMDoxNlrOHgRU5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzo0ODowNVrOHiIueA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDM1OA==", "bodyText": "I assume ProtomekSensor doesn't have an implementation of getUnitTonnage()?", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503600358", "createdAt": "2020-10-13T00:20:16Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/parts/MissingProtomekSensor.java", "diffHunk": "@@ -112,7 +111,7 @@ public void fix() {\n     @Override\n     public boolean isAcceptableReplacement(Part part, boolean refit) {\n         return part instanceof ProtomekSensor\n-                && getUnitTonnage() == ((ProtomekSensor)part).getUnitTonnage();\n+                && getUnitTonnage() == part.getUnitTonnage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYyNzYwNg==", "bodyText": "Shouldn't need the cast to call it if it overrides the base method. (I don't think)", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503627606", "createdAt": "2020-10-13T02:14:49Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/parts/MissingProtomekSensor.java", "diffHunk": "@@ -112,7 +111,7 @@ public void fix() {\n     @Override\n     public boolean isAcceptableReplacement(Part part, boolean refit) {\n         return part instanceof ProtomekSensor\n-                && getUnitTonnage() == ((ProtomekSensor)part).getUnitTonnage();\n+                && getUnitTonnage() == part.getUnitTonnage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDM1OA=="}, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU1NjYwMA==", "bodyText": "@sixlettervariables is correct, you don't need to cast for an overridden method.", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505556600", "createdAt": "2020-10-15T13:48:05Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/MissingProtomekSensor.java", "diffHunk": "@@ -112,7 +111,7 @@ public void fix() {\n     @Override\n     public boolean isAcceptableReplacement(Part part, boolean refit) {\n         return part instanceof ProtomekSensor\n-                && getUnitTonnage() == ((ProtomekSensor)part).getUnitTonnage();\n+                && getUnitTonnage() == part.getUnitTonnage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDM1OA=="}, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDM0NzEwOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/MissingSpacecraftEngine.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDoyMDo0N1rOHgRVWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzo0ODoxNFrOHiIu3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDQ3Mg==", "bodyText": "I assume SpacecraftEngine doesn't have an implementation of getTonnage()?", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503600472", "createdAt": "2020-10-13T00:20:47Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/parts/MissingSpacecraftEngine.java", "diffHunk": "@@ -79,12 +78,12 @@ public double getTonnage() {\n     public boolean isAcceptableReplacement(Part part, boolean refit) {\n         return part instanceof SpacecraftEngine\n                 && getName().equals(part.getName())\n-                && getTonnage() == ((SpacecraftEngine)part).getTonnage();\n+                && getTonnage() == part.getTonnage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU1NjcwMA==", "bodyText": "Same as above", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505556700", "createdAt": "2020-10-15T13:48:14Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/MissingSpacecraftEngine.java", "diffHunk": "@@ -79,12 +78,12 @@ public double getTonnage() {\n     public boolean isAcceptableReplacement(Part part, boolean refit) {\n         return part instanceof SpacecraftEngine\n                 && getName().equals(part.getName())\n-                && getTonnage() == ((SpacecraftEngine)part).getTonnage();\n+                && getTonnage() == part.getTonnage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDQ3Mg=="}, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDM0ODM1OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/ProtomekArmActuator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDoyMTo0MFrOHgRWEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzo0ODoxNlrOHiIvAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDY1OQ==", "bodyText": "Double check that ProtomekArmActuator doesn't have an implementation of getUnitTonnage()", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503600659", "createdAt": "2020-10-13T00:21:40Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/parts/ProtomekArmActuator.java", "diffHunk": "@@ -85,7 +84,7 @@ public Money getStickerPrice() {\n     @Override\n     public boolean isSamePartType (Part part) {\n         return part instanceof ProtomekArmActuator\n-                && getUnitTonnage() == ((ProtomekArmActuator)part).getUnitTonnage();\n+                && getUnitTonnage() == part.getUnitTonnage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU1NjczNg==", "bodyText": "Same as above", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505556736", "createdAt": "2020-10-15T13:48:16Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/ProtomekArmActuator.java", "diffHunk": "@@ -85,7 +84,7 @@ public Money getStickerPrice() {\n     @Override\n     public boolean isSamePartType (Part part) {\n         return part instanceof ProtomekArmActuator\n-                && getUnitTonnage() == ((ProtomekArmActuator)part).getUnitTonnage();\n+                && getUnitTonnage() == part.getUnitTonnage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDY1OQ=="}, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDM0OTM3OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/ProtomekLegActuator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDoyMjowNVrOHgRWpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzo0ODozNFrOHiIv6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDgwNg==", "bodyText": "Doublecheck that ProtomekLegActuator doesn't have implementation of getUnitTonnage()", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503600806", "createdAt": "2020-10-13T00:22:05Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/parts/ProtomekLegActuator.java", "diffHunk": "@@ -72,7 +71,7 @@ public Money getStickerPrice() {\n     @Override\n     public boolean isSamePartType (Part part) {\n         return part instanceof ProtomekLegActuator\n-                && getUnitTonnage() == ((ProtomekLegActuator)part).getUnitTonnage();\n+                && getUnitTonnage() == part.getUnitTonnage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU1Njk3MQ==", "bodyText": "Same as above", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505556971", "createdAt": "2020-10-15T13:48:34Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/ProtomekLegActuator.java", "diffHunk": "@@ -72,7 +71,7 @@ public Money getStickerPrice() {\n     @Override\n     public boolean isSamePartType (Part part) {\n         return part instanceof ProtomekLegActuator\n-                && getUnitTonnage() == ((ProtomekLegActuator)part).getUnitTonnage();\n+                && getUnitTonnage() == part.getUnitTonnage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDgwNg=="}, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDM1MDI5OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/ProtomekLocation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDoyMjo0MlrOHgRXLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzo0ODozM1rOHiIv2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDk0Mw==", "bodyText": "Double check that ProtomekLocation doesn't have an implementation of getUnitTonnage()", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503600943", "createdAt": "2020-10-13T00:22:42Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/parts/ProtomekLocation.java", "diffHunk": "@@ -165,7 +163,7 @@ public boolean forQuad() {\n     public boolean isSamePartType(Part part) {\n         return part instanceof ProtomekLocation\n                 && getLoc() == ((ProtomekLocation)part).getLoc()\n-                && getUnitTonnage() == ((ProtomekLocation)part).getUnitTonnage()\n+                && getUnitTonnage() == part.getUnitTonnage()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU1Njk1NQ==", "bodyText": "Same as above", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505556955", "createdAt": "2020-10-15T13:48:33Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/ProtomekLocation.java", "diffHunk": "@@ -165,7 +163,7 @@ public boolean forQuad() {\n     public boolean isSamePartType(Part part) {\n         return part instanceof ProtomekLocation\n                 && getLoc() == ((ProtomekLocation)part).getLoc()\n-                && getUnitTonnage() == ((ProtomekLocation)part).getUnitTonnage()\n+                && getUnitTonnage() == part.getUnitTonnage()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDk0Mw=="}, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDM1MDcyOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/ProtomekSensor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDoyMjo1N1rOHgRXcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzo0ODozMlrOHiIvyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMTAwOA==", "bodyText": "Double check that ProtomekSensor doesn't have an implementation of getUnitTonnage()", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503601008", "createdAt": "2020-10-13T00:22:57Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/parts/ProtomekSensor.java", "diffHunk": "@@ -72,7 +70,7 @@ public Money getStickerPrice() {\n     @Override\n     public boolean isSamePartType (Part part) {\n         return part instanceof ProtomekSensor\n-                && getUnitTonnage() == ((ProtomekSensor)part).getUnitTonnage();\n+                && getUnitTonnage() == part.getUnitTonnage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU1NjkzOQ==", "bodyText": "Same as above", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505556939", "createdAt": "2020-10-15T13:48:32Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/ProtomekSensor.java", "diffHunk": "@@ -72,7 +70,7 @@ public Money getStickerPrice() {\n     @Override\n     public boolean isSamePartType (Part part) {\n         return part instanceof ProtomekSensor\n-                && getUnitTonnage() == ((ProtomekSensor)part).getUnitTonnage();\n+                && getUnitTonnage() == part.getUnitTonnage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMTAwOA=="}, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDM1MTQwOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/SpacecraftEngine.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDoyMzoyNFrOHgRXzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzo0ODozMFrOHiIvtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMTEwMw==", "bodyText": "Double check that this doesn't have an implementation of getUnitTonnage()", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503601103", "createdAt": "2020-10-13T00:23:24Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/parts/SpacecraftEngine.java", "diffHunk": "@@ -124,12 +122,12 @@ public Money getStickerPrice() {\n     public boolean isSamePartType(Part part) {\n         return part instanceof SpacecraftEngine\n                 && getName().equals(part.getName())\n-                && getTonnage() == ((SpacecraftEngine)part).getTonnage();\n+                && getTonnage() == part.getTonnage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU1NjkxOQ==", "bodyText": "Same as above", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505556919", "createdAt": "2020-10-15T13:48:30Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/SpacecraftEngine.java", "diffHunk": "@@ -124,12 +122,12 @@ public Money getStickerPrice() {\n     public boolean isSamePartType(Part part) {\n         return part instanceof SpacecraftEngine\n                 && getName().equals(part.getName())\n-                && getTonnage() == ((SpacecraftEngine)part).getTonnage();\n+                && getTonnage() == part.getTonnage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMTEwMw=="}, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDM1MTk5OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/TankLocation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDoyMzozOVrOHgRYGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzo0ODozMFrOHiIvrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMTE3Nw==", "bodyText": "Double check that this doesn't have an implementation of getUnitTonnage()", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503601177", "createdAt": "2020-10-13T00:23:39Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/parts/TankLocation.java", "diffHunk": "@@ -104,8 +103,8 @@ protected void computeCost () {\n     @Override\n     public boolean isSamePartType(Part part) {\n         return part instanceof TankLocation\n-                && getLoc() == ((TankLocation)part).getLoc()\n-                && getUnitTonnage() == ((TankLocation)part).getUnitTonnage();\n+                && getLoc() == ((TankLocation) part).getLoc()\n+                && getUnitTonnage() == part.getUnitTonnage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU1NjkwOA==", "bodyText": "Same as above", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505556908", "createdAt": "2020-10-15T13:48:30Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/TankLocation.java", "diffHunk": "@@ -104,8 +103,8 @@ protected void computeCost () {\n     @Override\n     public boolean isSamePartType(Part part) {\n         return part instanceof TankLocation\n-                && getLoc() == ((TankLocation)part).getLoc()\n-                && getUnitTonnage() == ((TankLocation)part).getUnitTonnage();\n+                && getLoc() == ((TankLocation) part).getLoc()\n+                && getUnitTonnage() == part.getUnitTonnage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMTE3Nw=="}, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDM1NjE5OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/work/IPartWork.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDoyNTo1MlrOHgRabQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNDoyMDoxN1rOHiKSDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMTc3Mw==", "bodyText": "Do all physical weapons have a club flag? Not that this PR will make it any worse, just curious.", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503601773", "createdAt": "2020-10-13T00:25:52Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/work/IPartWork.java", "diffHunk": "@@ -85,39 +85,41 @@ default boolean canChangeWorkMode() {\n      * @return A string containing details regarding the part.\n      */\n     String getDetails(boolean includeRepairDetails);\n+\n     int getLocation();\n-    \n+\n     Unit getUnit();\n-    \n+\n     boolean isSalvaging();\n-    \n+\n     String checkFixable();\n-    \n+\n     void reservePart();\n+\n     void cancelReservation();\n+\n     boolean isBeingWorkedOn();\n-    \n-    int getMassRepairOptionType();\n-    int getRepairPartType();\n-    \n-    public static int findCorrectMassRepairType(IPartWork part) {\n-        if (part instanceof EquipmentPart && ((EquipmentPart)part).getType() instanceof WeaponType) {\n-            return Part.REPAIR_PART_TYPE.WEAPON;\n-        } else {            \n+\n+    PartRepairType getMassRepairOptionType();\n+\n+    PartRepairType getRepairPartType();\n+\n+    static PartRepairType findCorrectMassRepairType(IPartWork part) {\n+        if ((part instanceof EquipmentPart) && (((EquipmentPart) part).getType() instanceof WeaponType)) {\n+            return PartRepairType.WEAPON;\n+        } else {\n             return part.getMassRepairOptionType();\n         }\n     }\n-    \n-    public static int findCorrectRepairType(IPartWork part) {\n-        if ((part instanceof EquipmentPart && ((EquipmentPart)part).getType() instanceof WeaponType) ||\n-                (part instanceof MissingEquipmentPart && ((MissingEquipmentPart)part).getType() instanceof WeaponType)) {\n-            return Part.REPAIR_PART_TYPE.WEAPON;\n+\n+    static PartRepairType findCorrectRepairType(IPartWork part) {\n+        if (((part instanceof EquipmentPart) && (((EquipmentPart) part).getType() instanceof WeaponType))\n+                || ((part instanceof MissingEquipmentPart) && (((MissingEquipmentPart) part).getType() instanceof WeaponType))) {\n+            return PartRepairType.WEAPON;\n+        } else if ((part instanceof EquipmentPart) && (((EquipmentPart) part).getType().hasFlag(MiscType.F_CLUB))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU4MjA5NA==", "bodyText": "No idea, but I'm actually not sure that is properly implemented as it is. However, given the overall PR size, that look can be left until later.", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505582094", "createdAt": "2020-10-15T14:20:17Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/work/IPartWork.java", "diffHunk": "@@ -85,39 +85,41 @@ default boolean canChangeWorkMode() {\n      * @return A string containing details regarding the part.\n      */\n     String getDetails(boolean includeRepairDetails);\n+\n     int getLocation();\n-    \n+\n     Unit getUnit();\n-    \n+\n     boolean isSalvaging();\n-    \n+\n     String checkFixable();\n-    \n+\n     void reservePart();\n+\n     void cancelReservation();\n+\n     boolean isBeingWorkedOn();\n-    \n-    int getMassRepairOptionType();\n-    int getRepairPartType();\n-    \n-    public static int findCorrectMassRepairType(IPartWork part) {\n-        if (part instanceof EquipmentPart && ((EquipmentPart)part).getType() instanceof WeaponType) {\n-            return Part.REPAIR_PART_TYPE.WEAPON;\n-        } else {            \n+\n+    PartRepairType getMassRepairOptionType();\n+\n+    PartRepairType getRepairPartType();\n+\n+    static PartRepairType findCorrectMassRepairType(IPartWork part) {\n+        if ((part instanceof EquipmentPart) && (((EquipmentPart) part).getType() instanceof WeaponType)) {\n+            return PartRepairType.WEAPON;\n+        } else {\n             return part.getMassRepairOptionType();\n         }\n     }\n-    \n-    public static int findCorrectRepairType(IPartWork part) {\n-        if ((part instanceof EquipmentPart && ((EquipmentPart)part).getType() instanceof WeaponType) ||\n-                (part instanceof MissingEquipmentPart && ((MissingEquipmentPart)part).getType() instanceof WeaponType)) {\n-            return Part.REPAIR_PART_TYPE.WEAPON;\n+\n+    static PartRepairType findCorrectRepairType(IPartWork part) {\n+        if (((part instanceof EquipmentPart) && (((EquipmentPart) part).getType() instanceof WeaponType))\n+                || ((part instanceof MissingEquipmentPart) && (((MissingEquipmentPart) part).getType() instanceof WeaponType))) {\n+            return PartRepairType.WEAPON;\n+        } else if ((part instanceof EquipmentPart) && (((EquipmentPart) part).getType().hasFlag(MiscType.F_CLUB))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMTc3Mw=="}, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 137}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDM1NjgxOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/gui/CampaignGUI.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDoyNjoxNlrOHgRavw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNDo0MjoyOFrOHiLXLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMTg1NQ==", "bodyText": "What's with the addition of the 'version' parameter?", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503601855", "createdAt": "2020-10-13T00:26:16Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/gui/CampaignGUI.java", "diffHunk": "@@ -2285,7 +2285,7 @@ protected void loadOptionsFile() {\n             String xn = wn.getNodeName();\n \n             if (xn.equalsIgnoreCase(\"campaignOptions\")) {\n-                options = CampaignOptions.generateCampaignOptionsFromXml(wn);\n+                options = CampaignOptions.generateCampaignOptionsFromXml(wn, version);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU5OTc4OA==", "bodyText": "It was required for a migration issue, but I swapped it to use a check because the alternative value is not valid for MRMS.\nHowever, I think it would make sense to include the version in the options xml itself because of presets.", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505599788", "createdAt": "2020-10-15T14:42:28Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/gui/CampaignGUI.java", "diffHunk": "@@ -2285,7 +2285,7 @@ protected void loadOptionsFile() {\n             String xn = wn.getNodeName();\n \n             if (xn.equalsIgnoreCase(\"campaignOptions\")) {\n-                options = CampaignOptions.generateCampaignOptionsFromXml(wn);\n+                options = CampaignOptions.generateCampaignOptionsFromXml(wn, version);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMTg1NQ=="}, "originalCommit": {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzY2OTM3OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/parts/MissingEnginePart.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzo1MjoyM1rOHpJUOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxODoxODoxMlrOHpKh1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkwNjI5OA==", "bodyText": "Future note: these sorts of changes have been making it difficult to keep some of my branches up to date. Lots of merge conflicts unrelated to changes.", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r512906298", "createdAt": "2020-10-27T17:52:23Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/parts/MissingEnginePart.java", "diffHunk": "@@ -267,17 +266,16 @@ public boolean isInLocation(String loc) {\n              case Engine.XXL_ENGINE:\n                  needsSideTorso = true;\n                  break;\n+             default:\n+                 break;\n          }\n-         if (needsSideTorso\n-                 && (unit.getEntity().getLocationFromAbbr(loc) == Mech.LOC_LT\n-                         || unit.getEntity().getLocationFromAbbr(loc) == Mech.LOC_RT)) {\n-             return true;\n-         }\n-         return false;\n+        return needsSideTorso\n+                && ((unit.getEntity().getLocationFromAbbr(loc) == Mech.LOC_LT)\n+                || (unit.getEntity().getLocationFromAbbr(loc) == Mech.LOC_RT));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3497fc1241221a09d3795363113d240daa017a52"}, "originalPosition": 383}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkyNjE2Ng==", "bodyText": "Parts have been a place that every time I load it I get incredibly annoyed by. This PR clears out a ton of my issues with them.\nSorry that it is causing annoying merge conflicts, but... I had thought you had moved away from working on parts and thus that this would be a good time to finally do the cleanup I had wanted to do.", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r512926166", "createdAt": "2020-10-27T18:18:12Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/parts/MissingEnginePart.java", "diffHunk": "@@ -267,17 +266,16 @@ public boolean isInLocation(String loc) {\n              case Engine.XXL_ENGINE:\n                  needsSideTorso = true;\n                  break;\n+             default:\n+                 break;\n          }\n-         if (needsSideTorso\n-                 && (unit.getEntity().getLocationFromAbbr(loc) == Mech.LOC_LT\n-                         || unit.getEntity().getLocationFromAbbr(loc) == Mech.LOC_RT)) {\n-             return true;\n-         }\n-         return false;\n+        return needsSideTorso\n+                && ((unit.getEntity().getLocationFromAbbr(loc) == Mech.LOC_LT)\n+                || (unit.getEntity().getLocationFromAbbr(loc) == Mech.LOC_RT));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkwNjI5OA=="}, "originalCommit": {"oid": "3497fc1241221a09d3795363113d240daa017a52"}, "originalPosition": 383}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzY4ODkyOnYy", "diffSide": "LEFT", "path": "MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzo1NjoxMVrOHpJgKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzo1NjoxMVrOHpJgKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkwOTM1Mg==", "bodyText": "This change will certainly get me on a merge as I'm reworking a lot of this.", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r512909352", "createdAt": "2020-10-27T17:56:11Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java", "diffHunk": "@@ -701,17 +698,13 @@ public static int getAmountAvailable(Campaign campaign, AmmoType ammoType) {\n         if (campaign.getCampaignOptions().useAmmoByType()) {\n             Predicate<Part> predicate;\n             if (AmmoBin.ALLOWED_BY_TYPE.contains(ammoType.getAmmoType())) {\n-                predicate = part -> {\n-                    return part instanceof AmmoStorage\n-                            && ammoType.equalsAmmoTypeOnly(((AmmoStorage) part).getType())\n-                            && ammoType.getMunitionType() == ((AmmoType) ((AmmoStorage) part).getType()).getMunitionType();\n-                };\n+                predicate = part -> part instanceof AmmoStorage\n+                        && ammoType.equalsAmmoTypeOnly(((AmmoStorage) part).getType())\n+                        && ammoType.getMunitionType() == ((AmmoType) ((AmmoStorage) part).getType()).getMunitionType();\n             } else {\n-                predicate = part -> {\n-                    return part instanceof AmmoStorage\n-                            && ammoType.equals(((AmmoStorage) part).getType())\n-                            && ammoType.getMunitionType() == ((AmmoType) ((AmmoStorage) part).getType()).getMunitionType();\n-                };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3497fc1241221a09d3795363113d240daa017a52"}, "originalPosition": 393}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzY5OTQ3OnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/service/MassRepairOption.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzo1ODoxNlrOHpJm4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxODoxNjo0NlrOHpKd3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkxMTA3NA==", "bodyText": "Can we add an issue to track this fix?", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r512911074", "createdAt": "2020-10-27T17:58:16Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/service/MassRepairOption.java", "diffHunk": "@@ -134,7 +132,14 @@ public void writeToXML(PrintWriter pw1, int indent) {\n \n             try {\n                 MassRepairOption mro = parseFromXML(mroNode);\n-                if ((mro.getType() == -1) || (mro.getType() >= VALID_REPAIR_TYPES.length)) {\n+\n+                // This fixes a migration issue from 0.47.10 to 0.47.11, and will need to be implemented\n+                // properly in future.\n+                if (mro.getType() == PartRepairType.HEAT_SINK) {\n+                    mro.setType(PartRepairType.POD_SPACE);\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3497fc1241221a09d3795363113d240daa017a52"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkyNTE0OA==", "bodyText": "#2172", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r512925148", "createdAt": "2020-10-27T18:16:46Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/service/MassRepairOption.java", "diffHunk": "@@ -134,7 +132,14 @@ public void writeToXML(PrintWriter pw1, int indent) {\n \n             try {\n                 MassRepairOption mro = parseFromXML(mroNode);\n-                if ((mro.getType() == -1) || (mro.getType() >= VALID_REPAIR_TYPES.length)) {\n+\n+                // This fixes a migration issue from 0.47.10 to 0.47.11, and will need to be implemented\n+                // properly in future.\n+                if (mro.getType() == PartRepairType.HEAT_SINK) {\n+                    mro.setType(PartRepairType.POD_SPACE);\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkxMTA3NA=="}, "originalCommit": {"oid": "3497fc1241221a09d3795363113d240daa017a52"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2040, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}