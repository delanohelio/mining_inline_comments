{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzOTU1OTU4", "number": 1544, "title": "Hangar Tab Popup List: Bulk Selection and Rank Fixes", "bodyText": "This is a bunch of changes to improve and modify the hangar tab popup list. I've modified most of the commands so that they work with a single unit or multiple, removes items from the list based on whether or not they are applicable, and added rank to the Hangar Mothball/Activate inputs.\nAdditionally, I added rank to the Warehouse and Repair bay tabs to make it easier to figure out the rank of our active techs.\nAs part of this, number 7 of #1542 will be implemented, and it fixes #1417.", "createdAt": "2020-03-04T23:05:00Z", "url": "https://github.com/MegaMek/mekhq/pull/1544", "merged": true, "mergeCommit": {"oid": "4ce279e32fa90a48e3a35053770f102a4af41131"}, "closed": true, "closedAt": "2020-03-19T01:10:43Z", "author": {"login": "Windchild292"}, "timelineItems": {"totalCount": 35, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKYl2FgH2gAyMzgzOTU1OTU4OjIxZDIyMjI3OTJlNDU3MWY5ODM1OWM4OWIzMjk3ODdhZDJhNTQzZjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOjEzqgH2gAyMzgzOTU1OTU4OmU3Y2ZmOThlZDEwNTM2YzhmNmI0NTAwNWUwYjUyNDEyODBjMTc2NjA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "21d2222792e4571f98359c89b329787ad2a543f7", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/21d2222792e4571f98359c89b329787ad2a543f7", "committedDate": "2020-03-04T15:24:23Z", "message": "Cleaning up minor issues in the code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff6334fed11e57bdc7d36d57e5a02040c34be634", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/ff6334fed11e57bdc7d36d57e5a02040c34be634", "committedDate": "2020-03-04T15:28:30Z", "message": "Switching to try() {} catch to ensure the streams are closed properly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2aa067979cd5003dae3b212cf152342044075bf", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/c2aa067979cd5003dae3b212cf152342044075bf", "committedDate": "2020-03-04T15:33:03Z", "message": "Switching first command to a constant, and fixing id comparison"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "026bb62d3d8c9c174d3872426d8b12160180cd56", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/026bb62d3d8c9c174d3872426d8b12160180cd56", "committedDate": "2020-03-04T16:18:17Z", "message": "Switching to constant commands"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ff2ad70815f127517b2799d1e1c2165a11ac5f6", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/3ff2ad70815f127517b2799d1e1c2165a11ac5f6", "committedDate": "2020-03-04T16:52:23Z", "message": "Modifying GM Mode to improve UX"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d5ac9c27cfe78317e0781adc8cba808b5909511", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/0d5ac9c27cfe78317e0781adc8cba808b5909511", "committedDate": "2020-03-04T17:05:10Z", "message": "Switching to using a variable to permit mass order cancellation and mass GM mode arrivals"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "064c0fbc1fbc64953fcc00163536639257ea2b80", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/064c0fbc1fbc64953fcc00163536639257ea2b80", "committedDate": "2020-03-04T17:24:09Z", "message": "Switching to Bulk GM methods where possible"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64a574811897b25441d19d7bd51068112e91279d", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/64a574811897b25441d19d7bd51068112e91279d", "committedDate": "2020-03-04T18:35:02Z", "message": "Switching more functionality to be bulk select enabled"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27ffae24d13fd2d8f61548a8032d08ee2032ea13", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/27ffae24d13fd2d8f61548a8032d08ee2032ea13", "committedDate": "2020-03-04T18:52:32Z", "message": "Cleaning up single use duplicated statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ee5f4ddec780a8be2ac9206ce46804d8a43ccd8", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/4ee5f4ddec780a8be2ac9206ce46804d8a43ccd8", "committedDate": "2020-03-04T18:54:32Z", "message": "Removing unused newly added static check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25051340fa52cb95bb95b0fe752063e34b33e95d", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/25051340fa52cb95bb95b0fe752063e34b33e95d", "committedDate": "2020-03-04T19:23:11Z", "message": "Removing unneccesary static check additions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baaf77182f2feb28b7e5f3ca1596fb9ab6401470", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/baaf77182f2feb28b7e5f3ca1596fb9ab6401470", "committedDate": "2020-03-04T20:04:54Z", "message": "Enabling bulk assignment of units to a single tech in the Unit Table"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfdcb4ebd7074fbd6fc0eddfc34ba4ef737bad91", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/bfdcb4ebd7074fbd6fc0eddfc34ba4ef737bad91", "committedDate": "2020-03-04T20:50:12Z", "message": "Fixing issues relating to the the names for activation/mothballing and adding ranks to the personnel for standard mothballing/activation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92deac16bfd546421ab114831d8eb247ac14f618", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/92deac16bfd546421ab114831d8eb247ac14f618", "committedDate": "2020-03-04T20:54:14Z", "message": "Cleaning up the code for MassMothballDialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5d19570161687df46419198a8686c23e8a51691", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/a5d19570161687df46419198a8686c23e8a51691", "committedDate": "2020-03-04T21:15:17Z", "message": "Fixing single mothball/activate name order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8905c699ccd122f241629eb94a7fbc3f56a3df4", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/d8905c699ccd122f241629eb94a7fbc3f56a3df4", "committedDate": "2020-03-04T21:28:28Z", "message": "Variable definition fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ad9669b9de28654c35e32edc5a7aac77854ca89", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/9ad9669b9de28654c35e32edc5a7aac77854ca89", "committedDate": "2020-03-04T22:04:04Z", "message": "Fixing getTechs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eebda718ad8fce0d2b4e0b1e2061aecc88ed86a6", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/eebda718ad8fce0d2b4e0b1e2061aecc88ed86a6", "committedDate": "2020-03-04T22:28:32Z", "message": "Adding sorting to the repair tab"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d23112f175f596c72f4d66dfbbe9c637a5c3438", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/6d23112f175f596c72f4d66dfbbe9c637a5c3438", "committedDate": "2020-03-04T22:40:30Z", "message": "Adding time to mass mothball display"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a01e3d2c5aa21cc8e7353fddaf1d1d0e1ad690e1", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/a01e3d2c5aa21cc8e7353fddaf1d1d0e1ad690e1", "committedDate": "2020-03-04T22:46:24Z", "message": "Adding ranks to warehouse and fixing tech sorting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11c1f4ae8ca9e06ce5eca3f10f3095e591a6bc0d", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/11c1f4ae8ca9e06ce5eca3f10f3095e591a6bc0d", "committedDate": "2020-03-04T22:52:23Z", "message": "Making the weights for gbc heavier on the names to help with longer names"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwODAxNTQ5", "url": "https://github.com/MegaMek/mekhq/pull/1544#pullrequestreview-370801549", "createdAt": "2020-03-08T03:07:37Z", "commit": {"oid": "11c1f4ae8ca9e06ce5eca3f10f3095e591a6bc0d"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwMzowNzozN1rOFzS2sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwMzoxODowNlrOFzS4uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMzMDYxMA==", "bodyText": "How is this \"elite first\"?", "url": "https://github.com/MegaMek/mekhq/pull/1544#discussion_r389330610", "createdAt": "2020-03-08T03:07:37Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1887,14 +1898,22 @@ public Person findBestInRole(int role, String skill) {\n         }\n         // also need to loop through and collect engineers on self-crewed vessels\n         for (Unit u : getUnits()) {\n-            if (u.isSelfCrewed() && !(u.getEntity() instanceof Infantry) && null != u.getEngineer()) {\n+            if (u.isSelfCrewed() && !(u.getEntity() instanceof Infantry) && (null != u.getEngineer())) {\n                 techs.add(u.getEngineer());\n             }\n         }\n \n         // Return the tech collection sorted worst to best\n         // Reverse the sort if we've been asked for best to worst\n         if (sorted) {\n+            // First order by the amount of time the person has remaining, with the highest amount\n+            // of time being at the top of the list\n+            if (eliteFirst) {\n+                techs.sort(Comparator.comparingInt(Person::getMinutesLeft));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11c1f4ae8ca9e06ce5eca3f10f3095e591a6bc0d"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMzMTAwNQ==", "bodyText": "Why add these imports?", "url": "https://github.com/MegaMek/mekhq/pull/1544#discussion_r389331005", "createdAt": "2020-03-08T03:15:18Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/gui/utilities/StaticChecks.java", "diffHunk": "@@ -4,7 +4,9 @@\n import java.util.UUID;\n import java.util.Vector;\n \n+import megamek.common.BattleArmor;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11c1f4ae8ca9e06ce5eca3f10f3095e591a6bc0d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMzMTEyOA==", "bodyText": "While you're in this file, there's a bug in this dialog that shows activation time cost to be the same as mothball time cost, where it should be 1/2 the time. Do you think you can track it down?", "url": "https://github.com/MegaMek/mekhq/pull/1544#discussion_r389331128", "createdAt": "2020-03-08T03:18:06Z", "author": {"login": "NickAragua"}, "path": "MekHQ/src/mekhq/gui/dialog/MassMothballDialog.java", "diffHunk": "@@ -106,14 +102,16 @@ public MassMothballDialog(Frame parent, Unit[] units, Campaign campaign, boolean\n         gbc.weightx = 3;\n         JLabel instructionLabel = new JLabel();\n         instructionLabel.setBorder(new LineBorder(Color.BLUE));\n-        instructionLabel.setText(\"<html>Choose the techs to carry out mothball/reactivation operations on the displayed units. <br/>A * indicates that the tech is currently maintaining units.</html>\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11c1f4ae8ca9e06ce5eca3f10f3095e591a6bc0d"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "369e48414655703bdb23ad26b400b59a7ca20348", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/369e48414655703bdb23ad26b400b59a7ca20348", "committedDate": "2020-03-08T03:33:21Z", "message": "Reverting added imports to static checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba63358846c636b64d4497e760bd1f7e7797d2c3", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/ba63358846c636b64d4497e760bd1f7e7797d2c3", "committedDate": "2020-03-08T03:49:38Z", "message": "Fixing bug where activate isn't set"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6af79844f91e5c0c238601bb7153936e349489c9", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/6af79844f91e5c0c238601bb7153936e349489c9", "committedDate": "2020-03-08T03:50:47Z", "message": "Fixing overtime bug in person"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dede139a5606e164be82ac045c49e53b90c7d76b", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/dede139a5606e164be82ac045c49e53b90c7d76b", "committedDate": "2020-03-08T04:01:16Z", "message": "Cleaning up variable declarations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNDE2NTg2", "url": "https://github.com/MegaMek/mekhq/pull/1544#pullrequestreview-371416586", "createdAt": "2020-03-09T18:12:57Z", "commit": {"oid": "11c1f4ae8ca9e06ce5eca3f10f3095e591a6bc0d"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxODoxMjo1N1rOFzz5jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxODoyMDo0NVrOFz0KWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg3MjAxMw==", "bodyText": "This doesn't sort elites first. The code which does is on line 1934:\n                // Return, swapping the value if we're looking to have Elites ordered first\n                return eliteFirst ? -retVal : retVal;\n\nI think the logic should be revised for this block, as it stands it doesn't make much sense (even if it produces the desired results).", "url": "https://github.com/MegaMek/mekhq/pull/1544#discussion_r389872013", "createdAt": "2020-03-09T18:12:57Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1887,14 +1898,22 @@ public Person findBestInRole(int role, String skill) {\n         }\n         // also need to loop through and collect engineers on self-crewed vessels\n         for (Unit u : getUnits()) {\n-            if (u.isSelfCrewed() && !(u.getEntity() instanceof Infantry) && null != u.getEngineer()) {\n+            if (u.isSelfCrewed() && !(u.getEntity() instanceof Infantry) && (null != u.getEngineer())) {\n                 techs.add(u.getEngineer());\n             }\n         }\n \n         // Return the tech collection sorted worst to best\n         // Reverse the sort if we've been asked for best to worst\n         if (sorted) {\n+            // First order by the amount of time the person has remaining, with the highest amount\n+            // of time being at the top of the list\n+            if (eliteFirst) {\n+                techs.sort(Comparator.comparingInt(Person::getMinutesLeft));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMzMDYxMA=="}, "originalCommit": {"oid": "11c1f4ae8ca9e06ce5eca3f10f3095e591a6bc0d"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg3Mjc5MQ==", "bodyText": "A comment explaining the unnamed arguments would be nice. Hard to say what this does outside of an IDE (and even within you have to hover).", "url": "https://github.com/MegaMek/mekhq/pull/1544#discussion_r389872791", "createdAt": "2020-03-09T18:14:23Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/RepairTab.java", "diffHunk": "@@ -856,7 +857,7 @@ public void refreshTaskList() {\n \n     public void refreshTechsList() {\n         int selected = techTable.getSelectedRow();\n-        ArrayList<Person> techs = getCampaign().getTechs(true, null, false, false);\n+        List<Person> techs = getCampaign().getTechs(true, null, true, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11c1f4ae8ca9e06ce5eca3f10f3095e591a6bc0d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg3MzI4NQ==", "bodyText": "A comment here as well would be nice. Also, if getTechs(true, null, true, false) is the new default, how about a descriptively named method on Campaign?", "url": "https://github.com/MegaMek/mekhq/pull/1544#discussion_r389873285", "createdAt": "2020-03-09T18:15:12Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/WarehouseTab.java", "diffHunk": "@@ -670,8 +668,7 @@ protected void updateTechTarget() {\n     }\n \n     public void refreshTechsList() {\n-        ArrayList<Person> techs = getCampaign().getTechs(true, null, false, false);\n-        techsModel.setData(techs);\n+        techsModel.setData(getCampaign().getTechs(true, null, true, false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11c1f4ae8ca9e06ce5eca3f10f3095e591a6bc0d"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg3NDI3MA==", "bodyText": "Could this be moved into a method? This massive if...elseif block is unruly as it stands.", "url": "https://github.com/MegaMek/mekhq/pull/1544#discussion_r389874270", "createdAt": "2020-03-09T18:16:56Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/adapter/UnitTableMouseAdapter.java", "diffHunk": "@@ -244,60 +311,43 @@ public void actionPerformed(ActionEvent action) {\n                 customsDir.mkdir();\n             }\n             for (Unit unit : units) {\n-                String fileName = unit.getEntity().getChassis() + \" \"\n-                        + unit.getEntity().getModel();\n-                try {\n-                    if (unit.getEntity() instanceof Mech) {\n-                        // if this file already exists then don't overwrite\n-                        // it or we will end up with a bunch of copies\n-                        String fileOutName = sCustomsDir + File.separator\n-                                + fileName + \".mtf\";\n-                        String fileNameCampaign = sCustomsDirCampaign\n-                                + File.separator + fileName + \".mtf\";\n-                        if ((new File(fileOutName)).exists()\n-                                || (new File(fileNameCampaign)).exists()) {\n-                            JOptionPane\n-                                    .showMessageDialog(\n-                                            null,\n-                                            \"A file already exists for this unit, cannot tag as custom. (Unit name and model)\",\n-                                            \"File Already Exists\",\n-                                            JOptionPane.ERROR_MESSAGE);\n-                            return;\n-                        }\n-                        FileOutputStream out = new FileOutputStream(\n-                                fileNameCampaign);\n-                        PrintStream p = new PrintStream(out);\n+                String fileName = unit.getEntity().getChassis() + \" \" + unit.getEntity().getModel();\n+                if (unit.getEntity() instanceof Mech) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11c1f4ae8ca9e06ce5eca3f10f3095e591a6bc0d"}, "originalPosition": 312}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg3NjMxNQ==", "bodyText": "Should this be protected by oneSelected? It currently checks if the unit is deployed.", "url": "https://github.com/MegaMek/mekhq/pull/1544#discussion_r389876315", "createdAt": "2020-03-09T18:20:45Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/gui/adapter/UnitTableMouseAdapter.java", "diffHunk": "@@ -605,454 +629,508 @@ public void mouseReleased(MouseEvent e) {\n     }\n \n     private void maybeShowPopup(MouseEvent e) {\n-        JPopupMenu popup = new JPopupMenu();\n         if (e.isPopupTrigger()) {\n+            // Immediately return if there are no units selected\n             if (unitTable.getSelectedRowCount() == 0) {\n                 return;\n             }\n+\n+            //region Variable Declarations and Instantiations\n+            JPopupMenu popup = new JPopupMenu();\n+            JMenuItem menuItem;\n+            JMenu menu;\n+            JCheckBoxMenuItem cbMenuItem;\n+\n+            boolean isGM = gui.getCampaign().isGM();\n+\n             int[] rows = unitTable.getSelectedRows();\n-            int row = unitTable.getSelectedRow();\n             boolean oneSelected = unitTable.getSelectedRowCount() == 1;\n-            Unit unit = unitModel.getUnit(unitTable\n-                    .convertRowIndexToModel(row));\n             Unit[] units = new Unit[rows.length];\n             for (int i = 0; i < rows.length; i++) {\n-                units[i] = unitModel.getUnit(unitTable\n-                        .convertRowIndexToModel(rows[i]));\n+                units[i] = unitModel.getUnit(unitTable.convertRowIndexToModel(rows[i]));\n             }\n-            JMenuItem menuItem = null;\n-            JMenu menu = null;\n-            JCheckBoxMenuItem cbMenuItem = null;\n-            // **lets fill the pop up menu**//\n-            if (oneSelected && !unit.isPresent()) {\n+            Unit unit = units[0];\n+\n+            boolean nonePresent = true; // different menu if there is at least one present unit\n+            for (Unit u : units) {\n+                if (u.isPresent()) {\n+                    nonePresent = false;\n+                    break;\n+                }\n+            }\n+            //endregion Variable Declarations and Instantiations\n+\n+            if (nonePresent) {\n                 menuItem = new JMenuItem(\"Cancel This Delivery\");\n-                menuItem.setActionCommand(\"CANCEL_ORDER\");\n+                menuItem.setActionCommand(COMMAND_CANCEL_ORDER);\n                 menuItem.addActionListener(this);\n                 popup.add(menuItem);\n-                // GM mode\n-                menu = new JMenu(\"GM Mode\");\n-                menuItem = new JMenuItem(\"Deliver Part Now\");\n-                menuItem.setActionCommand(\"ARRIVE\");\n-                menuItem.addActionListener(this);\n-                menuItem.setEnabled(gui.getCampaign().isGM());\n-                menu.add(menuItem);\n-                popup.addSeparator();\n-                popup.add(menu);\n-                popup.show(e.getComponent(), e.getX(), e.getY());\n-                return;\n-            }\n-            // change the location\n-            menu = new JMenu(\"Change site\");\n-            int i;\n-            for (i = 0; i < Unit.SITE_N; i++) {\n-                cbMenuItem = new JCheckBoxMenuItem(Unit.getSiteName(i));\n-                if (StaticChecks.areAllSameSite(units) && unit.getSite() == i) {\n-                    cbMenuItem.setSelected(true);\n-                } else {\n-                    cbMenuItem.setActionCommand(\"CHANGE_SITE:\" + i);\n-                    cbMenuItem.addActionListener(this);\n-                }\n-                menu.add(cbMenuItem);\n-            }\n-            menu.setEnabled(unit.isAvailable());\n-            popup.add(menu);\n-\n-            // swap ammo\n-            if (oneSelected) {\n-                if (unit.getEntity().usesWeaponBays()) {\n-                    menuItem = new JMenuItem(\"Swap ammo...\");\n-                    menuItem.setActionCommand(\"LC_SWAP_AMMO\");\n+                if (isGM) {\n+                    menu = new JMenu(\"GM Mode\");\n+                    menuItem = new JMenuItem(\"Unit Arrives Immediately\");\n+                    menuItem.setActionCommand(COMMAND_ARRIVE);\n                     menuItem.addActionListener(this);\n-                    popup.add(menuItem);\n-                } else {\n-                    menu = new JMenu(\"Swap ammo\");\n-                    JMenu ammoMenu = null;\n-                    for (AmmoBin ammo : unit.getWorkingAmmoBins()) {\n-                        ammoMenu = new JMenu(ammo.getType().getDesc());\n-                        AmmoType curType = (AmmoType) ammo.getType();\n-                        for (AmmoType atype : Utilities.getMunitionsFor(unit\n-                                .getEntity(), curType, gui.getCampaign()\n-                                .getCampaignOptions().getTechLevel())) {\n-                            cbMenuItem = new JCheckBoxMenuItem(atype.getDesc());\n-                            if (atype == curType) {\n-                                cbMenuItem.setSelected(true);\n-                            } else {\n-                                cbMenuItem.setActionCommand(\"SWAP_AMMO:\"\n-                                        + ammo.getId() + \":\"\n-                                        + atype.getInternalName());\n-                                cbMenuItem.addActionListener(this);\n-                            }\n-                            ammoMenu.add(cbMenuItem);\n+                    menu.add(menuItem);\n+                    popup.addSeparator();\n+                    popup.add(menu);\n+                }\n+            } else {\n+                //region Determine if to Display\n+                // this is used to determine whether or not to show parts of the GUI, especially for\n+                // bulk selections\n+                boolean oneMothballed = false;\n+                boolean oneMothballing = false;\n+                boolean oneActive = false;\n+                boolean oneDeployed = false;\n+                boolean oneAvailableUnitBelowMaxCrew = false;\n+                boolean oneNotPresent = false;\n+                boolean oneHasIndividualCamo = false;\n+                boolean oneHasCrew = false;\n+                boolean allUnitsAreRepairable = true;\n+                boolean areAllConventionalInfantry = true;\n+                boolean noConventionalInfantry = true;\n+                boolean areAllRepairFlagged = true;\n+                boolean areAllSalvageFlagged = true;\n+                boolean allRequireSameTechType = true;\n+                String skill = units[0].determineUnitTechSkillType();\n+                int maintenanceTime = 0;\n+                for (Unit u : units) {\n+                    if (u.isMothballed()) {\n+                        oneMothballed = true;\n+                    } else if (u.isMothballing()) {\n+                        oneMothballing = true;\n+                    } else {\n+                        oneActive = true;\n+                    }\n+\n+                    if ((u.getCrew().size() < u.getFullCrewSize()) && u.isAvailable()) {\n+                        oneAvailableUnitBelowMaxCrew = true;\n+                    }\n+\n+                    if (u.isDeployed()) {\n+                        oneDeployed = true;\n+                    }\n+\n+                    if (!u.isPresent()) {\n+                        oneNotPresent = true;\n+                    }\n+\n+                    if (u.isEntityCamo()) {\n+                        oneHasIndividualCamo = true;\n+                    }\n+\n+                    if (u.getCrew().size() > 0) {\n+                        oneHasCrew = true;\n+                    }\n+\n+                    if (!u.isRepairable()) {\n+                        allUnitsAreRepairable = false;\n+                    }\n+\n+                    if (u.isSalvage()) {\n+                        areAllRepairFlagged = false;\n+                    } else {\n+                        areAllSalvageFlagged = false;\n+                    }\n+\n+                    if (u.getEntity().isConventionalInfantry()) {\n+                        noConventionalInfantry = false;\n+                    } else {\n+                        areAllConventionalInfantry = false;\n+                    }\n+\n+                    if (!StringUtil.isNullOrEmpty(skill)) {\n+                        if (!skill.equals(u.determineUnitTechSkillType())) {\n+                            allRequireSameTechType = false;\n+                            skill = \"\"; //little performance saving hack\n+                            continue;\n                         }\n-                        if (ammoMenu.getItemCount() > 20) {\n-                            MenuScroller.setScrollerFor(ammoMenu, 20);\n+                        maintenanceTime += u.getMaintenanceTime();\n+                        if (maintenanceTime > Person.PRIMARY_ROLE_SUPPORT_TIME) {\n+                            skill = \"\"; //little performance saving hack\n                         }\n-                        menu.add(ammoMenu);\n                     }\n-                    menu.setEnabled(unit.isAvailable());\n-                    if (menu.getItemCount() > 20) {\n-                        MenuScroller.setScrollerFor(menu, 20);\n+                }\n+                //endregion Determine if to Display\n+\n+                // change the location\n+                menu = new JMenu(\"Change site\");\n+                boolean allSameSite = StaticChecks.areAllSameSite(units);\n+                for (int i = 0; i < Unit.SITE_N; i++) {\n+                    cbMenuItem = new JCheckBoxMenuItem(Unit.getSiteName(i));\n+                    if (allSameSite && unit.getSite() == i) {\n+                        cbMenuItem.setSelected(true);\n+                    } else {\n+                        cbMenuItem.setActionCommand(COMMAND_CHANGE_SITE + \":\" + i);\n+                        cbMenuItem.addActionListener(this);\n                     }\n-                    popup.add(menu);\n+                    menu.add(cbMenuItem);\n                 }\n-            }\n-            // Select bombs.\n-            if (oneSelected && (unit.getEntity().isBomber())) {\n-                menuItem = new JMenuItem(\"Select Bombs\");\n-                menuItem.setActionCommand(\"BOMBS\");\n-                menuItem.addActionListener(this);\n-                popup.add(menuItem);\n-            }\n-            // Salvage / Repair\n-            if (oneSelected\n-                    && !(unit.getEntity() instanceof Infantry && !(unit\n-                            .getEntity() instanceof BattleArmor))) {\n-                menu = new JMenu(\"Repair Status\");\n                 menu.setEnabled(unit.isAvailable());\n-                cbMenuItem = new JCheckBoxMenuItem(\"Repair\");\n-                if (!unit.isSalvage()) {\n-                    cbMenuItem.setSelected(true);\n+                popup.add(menu);\n+\n+                // swap ammo\n+                if (oneSelected) {\n+                    if (unit.getEntity().usesWeaponBays()) {\n+                        menuItem = new JMenuItem(\"Swap ammo...\");\n+                        menuItem.setActionCommand(COMMAND_LC_SWAP_AMMO);\n+                        menuItem.addActionListener(this);\n+                        popup.add(menuItem);\n+                    } else {\n+                        menu = new JMenu(\"Swap ammo\");\n+                        JMenu ammoMenu;\n+                        for (AmmoBin ammo : unit.getWorkingAmmoBins()) {\n+                            ammoMenu = new JMenu(ammo.getType().getDesc());\n+                            AmmoType curType = (AmmoType) ammo.getType();\n+                            for (AmmoType atype : Utilities.getMunitionsFor(unit\n+                                    .getEntity(), curType, gui.getCampaign()\n+                                    .getCampaignOptions().getTechLevel())) {\n+                                cbMenuItem = new JCheckBoxMenuItem(atype.getDesc());\n+                                if (atype == curType) {\n+                                    cbMenuItem.setSelected(true);\n+                                } else {\n+                                    cbMenuItem.setActionCommand(COMMAND_SWAP_AMMO + \":\" + ammo.getId()\n+                                            + \":\" + atype.getInternalName());\n+                                    cbMenuItem.addActionListener(this);\n+                                }\n+                                ammoMenu.add(cbMenuItem);\n+                            }\n+                            if (ammoMenu.getItemCount() > 20) {\n+                                MenuScroller.setScrollerFor(ammoMenu, 20);\n+                            }\n+                            menu.add(ammoMenu);\n+                        }\n+                        menu.setEnabled(unit.isAvailable());\n+                        if (menu.getItemCount() > 20) {\n+                            MenuScroller.setScrollerFor(menu, 20);\n+                        }\n+                        popup.add(menu);\n+                    }\n                 }\n-                cbMenuItem.setActionCommand(\"REPAIR\");\n-                cbMenuItem.addActionListener(this);\n-                cbMenuItem.setEnabled(unit.isAvailable()\n-                        && unit.isRepairable());\n-                menu.add(cbMenuItem);\n-                cbMenuItem = new JCheckBoxMenuItem(\"Salvage\");\n-                if (unit.isSalvage()) {\n-                    cbMenuItem.setSelected(true);\n+\n+                // Select bombs\n+                if (oneSelected && unit.getEntity().isBomber()) {\n+                    menuItem = new JMenuItem(\"Select Bombs\");\n+                    menuItem.setActionCommand(COMMAND_BOMBS);\n+                    menuItem.addActionListener(this);\n+                    popup.add(menuItem);\n                 }\n-                cbMenuItem.setActionCommand(\"SALVAGE\");\n-                cbMenuItem.addActionListener(this);\n-                cbMenuItem.setEnabled(unit.isAvailable());\n-                menu.add(cbMenuItem);\n-                popup.add(menu);\n-            }\n-            if (oneSelected\n-                    && !(unit.getEntity() instanceof Infantry && !(unit\n-                            .getEntity() instanceof BattleArmor))) {\n-                if (unit.isMothballing()) {\n-                    menuItem = new JMenuItem(\n-                            \"Cancel Mothballing/Activation\");\n-                    menuItem.setActionCommand(COMMAND_CANCEL_MOTHBALL);\n+\n+                // Salvage / Repair\n+                if (noConventionalInfantry) {\n+                    menu = new JMenu(\"Repair Status\");\n+                    cbMenuItem = new JCheckBoxMenuItem(\"Repair\");\n+                    cbMenuItem.setSelected(areAllRepairFlagged);\n+                    cbMenuItem.setActionCommand(COMMAND_REPAIR);\n+                    cbMenuItem.addActionListener(this);\n+                    cbMenuItem.setEnabled(allUnitsAreRepairable);\n+                    menu.add(cbMenuItem);\n+                    cbMenuItem = new JCheckBoxMenuItem(\"Salvage\");\n+                    cbMenuItem.setSelected(areAllSalvageFlagged);\n+                    cbMenuItem.setActionCommand(COMMAND_SALVAGE);\n+                    cbMenuItem.addActionListener(this);\n+                    menu.add(cbMenuItem);\n+                    popup.add(menu);\n+                }\n+\n+                if (oneActive) {\n+                    menuItem = new JMenuItem(oneSelected ? \"Mothball\" : \"Mass Mothball\");\n+                    menuItem.setActionCommand(COMMAND_MOTHBALL);\n                     menuItem.addActionListener(this);\n-                    menuItem.setEnabled(true);\n                     popup.add(menuItem);\n-                } else if (unit.isMothballed()) {\n-                    menuItem = new JMenuItem(\"Activate Unit\");\n+                }\n+\n+                if (oneMothballed) {\n+                    menuItem = new JMenuItem(oneSelected ? \"Activate\" : \"Mass Activate\");\n                     menuItem.setActionCommand(COMMAND_ACTIVATE);\n                     menuItem.addActionListener(this);\n-                    menuItem.setEnabled(true);\n                     popup.add(menuItem);\n-                } else {\n-                    menuItem = new JMenuItem(\"Mothball Unit\");\n-                    menuItem.setActionCommand(COMMAND_MOTHBALL);\n+                }\n+\n+                if (oneMothballing) {\n+                    menuItem = new JMenuItem(\"Cancel Mothballing/Activation\");\n+                    menuItem.setActionCommand(COMMAND_CANCEL_MOTHBALL);\n                     menuItem.addActionListener(this);\n-                    menuItem.setEnabled(unit.isAvailable()\n-                            && (!unit.isSelfCrewed() || null != unit\n-                                    .getEngineer()));\n                     popup.add(menuItem);\n                 }\n-            }\n \n-            if(unitTable.getSelectedRowCount() > 1) {\n-                boolean allMothballed = true;\n-                boolean allAvailable = true;\n+                if (allRequireSameTechType && !StringUtil.isNullOrEmpty(skill)) {\n+                    menu = new JMenu(\"Assign Tech\");\n+                    JMenu menuElite = new JMenu(SkillType.ELITE_NM);\n+                    JMenu menuVeteran = new JMenu(SkillType.VETERAN_NM);\n+                    JMenu menuRegular = new JMenu(SkillType.REGULAR_NM);\n+                    JMenu menuGreen = new JMenu(SkillType.GREEN_NM);\n+                    JMenu menuUltraGreen = new JMenu(SkillType.ULTRA_GREEN_NM);\n \n-                for(int x = 0; x < units.length; x++) {\n-                    // infantry, jumpships and warships cannot be mothballed\n-                    if(units[x].isSelfCrewed()) {\n-                        allMothballed = false;\n-                        allAvailable = false;\n-                        break;\n-                    }\n+                    int techsFound = 0;\n+                    for (Person tech : gui.getCampaign().getTechs()) {\n+                        if (tech.hasSkill(skill)\n+                                && (tech.getMaintenanceTimeUsing() + maintenanceTime)\n+                                        <= Person.PRIMARY_ROLE_SUPPORT_TIME) {\n+\n+                            String skillLvl = \"Unknown\";\n+                            if (null != tech.getSkillForWorkingOn(unit)) {\n+                                skillLvl = SkillType.getExperienceLevelName(\n+                                        tech.getSkillForWorkingOn(unit).getExperienceLevel());\n+                            }\n+\n+                            JMenu subMenu;\n+                            switch (skillLvl) {\n+                                case SkillType.ELITE_NM:\n+                                    subMenu = menuElite;\n+                                    break;\n+                                case SkillType.VETERAN_NM:\n+                                    subMenu = menuVeteran;\n+                                    break;\n+                                case SkillType.REGULAR_NM:\n+                                    subMenu = menuRegular;\n+                                    break;\n+                                case SkillType.GREEN_NM:\n+                                    subMenu = menuGreen;\n+                                    break;\n+                                case SkillType.ULTRA_GREEN_NM:\n+                                    subMenu = menuUltraGreen;\n+                                    break;\n+                                default:\n+                                    subMenu = null;\n+                                    break;\n+                            }\n+\n+                            if (subMenu != null) {\n+                                cbMenuItem = new JCheckBoxMenuItem(tech.getFullTitle()\n+                                        + \" (\" + tech.getMaintenanceTimeUsing() + \"m)\");\n+                                cbMenuItem.setActionCommand(COMMAND_ASSIGN_TECH + \":\" + tech.getId());\n+\n+                                if (tech.getId().equals(unit.getTechId())) {\n+                                    cbMenuItem.setSelected(true);\n+                                } else {\n+                                    cbMenuItem.addActionListener(this);\n+                                }\n \n-                    if(!units[x].isMothballed()) {\n-                        allMothballed = false;\n+                                subMenu.add(cbMenuItem);\n+                                if (cbMenuItem.isSelected()) {\n+                                    subMenu.setIcon(UIManager.getIcon(\"CheckBoxMenuItem.checkIcon\"));\n+                                }\n+                                techsFound++;\n+                            }\n+                        }\n                     }\n+                    if (techsFound > 0) {\n+                        addMenuIfNonEmpty(menu, menuElite, 20);\n+                        addMenuIfNonEmpty(menu, menuVeteran, 20);\n+                        addMenuIfNonEmpty(menu, menuRegular, 20);\n+                        addMenuIfNonEmpty(menu, menuGreen, 20);\n+                        addMenuIfNonEmpty(menu, menuUltraGreen, 20);\n \n-                    if(!units[x].isAvailable()) {\n-                        allAvailable = false;\n+                        popup.add(menu);\n                     }\n                 }\n \n-                if(allAvailable) {\n-                    menuItem = new JMenuItem(\"Mass Mothball\");\n-                    menuItem.setActionCommand(COMMAND_MOTHBALL);\n+                if (oneSelected && unit.requiresMaintenance()) {\n+                    menuItem = new JMenuItem(\"Show Last Maintenance Report\");\n+                    menuItem.setActionCommand(COMMAND_MAINTENANCE_REPORT);\n                     menuItem.addActionListener(this);\n                     popup.add(menuItem);\n-                } else if(allMothballed) {\n-                    menuItem = new JMenuItem(\"Mass Activate\");\n-                    menuItem.setActionCommand(COMMAND_ACTIVATE);\n+                }\n+\n+                if (oneSelected && !unit.isMothballed()\n+                        && gui.getCampaign().getCampaignOptions().usePeacetimeCost()) {\n+                    menuItem = new JMenuItem(\"Show Monthly Supply Cost Report\");\n+                    menuItem.setActionCommand(COMMAND_SUPPLY_COST);\n                     menuItem.addActionListener(this);\n                     popup.add(menuItem);\n                 }\n-            }\n-\n-            if (oneSelected && unit.requiresMaintenance()\n-                    && !unit.isSelfCrewed() && unit.isAvailable()) {\n-                menu = new JMenu(\"Assign Tech\");\n-                JMenu menuElite = new JMenu(SkillType.ELITE_NM);\n-                JMenu menuVeteran = new JMenu(SkillType.VETERAN_NM);\n-                JMenu menuRegular = new JMenu(SkillType.REGULAR_NM);\n-                JMenu menuGreen = new JMenu(SkillType.GREEN_NM);\n-                JMenu menuUltraGreen = new JMenu(SkillType.ULTRA_GREEN_NM);\n-\n-                int techsFound = 0;\n-                for (Person tech : gui.getCampaign().getTechs()) {\n-                    if (tech.canTech(unit.getEntity())\n-                            && (tech.getMaintenanceTimeUsing()\n-                                    + unit.getMaintenanceTime()) <= 480) {\n-                        String skillLvl = \"Unknown\";\n-                        if (null != tech.getSkillForWorkingOn(unit)) {\n-                            skillLvl = SkillType.getExperienceLevelName(\n-                                tech.getSkillForWorkingOn(unit)\n-                                    .getExperienceLevel());\n-                        }\n \n-                        cbMenuItem = new JCheckBoxMenuItem(\n-                                tech.getFullTitle()\n-                                    + \" (\"\n-                                    + tech.getMaintenanceTimeUsing()\n-                                    + \"m)\");\n-                        cbMenuItem.setActionCommand(\"ASSIGN:\" + tech.getId());\n-                        cbMenuItem.setEnabled(true);\n-                        if (null != unit.getTechId()\n-                                && unit.getTechId().equals(tech.getId())) {\n-                            cbMenuItem.setSelected(true);\n-                        } else {\n-                            cbMenuItem.addActionListener(this);\n-                        }\n+                if (areAllConventionalInfantry) {\n+                    menuItem = new JMenuItem(\"Disband\");\n+                    menuItem.setActionCommand(COMMAND_DISBAND);\n+                    menuItem.addActionListener(this);\n+                    popup.add(menuItem);\n+                }\n \n-                        JMenu subMenu = null;\n-                        switch (skillLvl) {\n-                        case SkillType.ELITE_NM:\n-                            subMenu = menuElite;\n-                            break;\n-                        case SkillType.VETERAN_NM:\n-                            subMenu = menuVeteran;\n-                            break;\n-                        case SkillType.REGULAR_NM:\n-                            subMenu = menuRegular;\n-                            break;\n-                        case SkillType.GREEN_NM:\n-                            subMenu = menuGreen;\n-                            break;\n-                        case SkillType.ULTRA_GREEN_NM:\n-                            subMenu = menuUltraGreen;\n-                            break;\n-                        }\n-                        if (subMenu != null) {\n-                            subMenu.add(cbMenuItem);\n-                            if (cbMenuItem.isSelected()) {\n-                                subMenu.setIcon(UIManager.getIcon(\"CheckBoxMenuItem.checkIcon\"));\n-                            }\n-                            techsFound++;\n+                // Customize\n+                if (oneSelected) {\n+                    menu = new JMenu(\"Customize\");\n+                    if (unit.getEntity().isOmni()) {\n+                        menuItem = new JMenuItem(\"Choose configuration...\");\n+                    } else {\n+                        menuItem = new JMenuItem(\"Choose Refit Kit...\");\n+                    }\n+                    menuItem.setActionCommand(COMMAND_REFIT_KIT);\n+                    menuItem.addActionListener(this);\n+                    menuItem.setEnabled(unit.isAvailable()\n+                            && (unit.getEntity() instanceof Mech\n+                            || unit.getEntity() instanceof Tank\n+                            || unit.getEntity() instanceof Aero\n+                            || (unit.getEntity() instanceof Infantry)));\n+                    //TODO : Should ProtoMech be included in the above?\n+                    menu.add(menuItem);\n+                    menuItem = new JMenuItem(\"Refurbish Unit\");\n+                    menuItem.setActionCommand(COMMAND_REFURBISH);\n+                    menuItem.addActionListener(this);\n+                    menuItem.setEnabled(unit.isAvailable()\n+                            && (unit.getEntity() instanceof Mech\n+                            || unit.getEntity() instanceof Tank\n+                            || unit.getEntity() instanceof Aero\n+                            || unit.getEntity() instanceof BattleArmor\n+                            || unit.getEntity() instanceof Protomech));\n+                    menu.add(menuItem);\n+                    if (gui.hasTab(GuiTabType.MEKLAB)) {\n+                        menuItem = new JMenuItem(\"Customize in Mek Lab...\");\n+                        menuItem.setActionCommand(COMMAND_CUSTOMIZE);\n+                        menuItem.addActionListener(this);\n+                        menuItem.setEnabled(unit.isAvailable()\n+                                && !(unit.getEntity() instanceof GunEmplacement));\n+                        menu.add(menuItem);\n+                    }\n+                    if (unit.isRefitting()) {\n+                        menuItem = new JMenuItem(\"Cancel Customization\");\n+                        menuItem.setActionCommand(COMMAND_CANCEL_CUSTOMIZE);\n+                        menuItem.addActionListener(this);\n+                        menu.add(menuItem);\n+                        if (isGM) {\n+                            menuItem = new JMenuItem(\"Complete Refit (GM)\");\n+                            menuItem.setActionCommand(COMMAND_REFIT_GM_COMPLETE);\n+                            menuItem.addActionListener(this);\n+                            menu.add(menuItem);\n                         }\n                     }\n+                    menu.setEnabled(unit.isAvailable(true) && unit.isRepairable());\n+                    popup.add(menu);\n                 }\n-                if (techsFound > 0) {\n-                    addMenuIfNonEmpty(menu, menuElite, 20);\n-                    addMenuIfNonEmpty(menu, menuVeteran, 20);\n-                    addMenuIfNonEmpty(menu, menuRegular, 20);\n-                    addMenuIfNonEmpty(menu, menuGreen, 20);\n-                    addMenuIfNonEmpty(menu, menuUltraGreen, 20);\n \n-                    popup.add(menu);\n+                // fill with personnel\n+                if (oneAvailableUnitBelowMaxCrew) {\n+                    menuItem = new JMenuItem(\"Hire full complement\");\n+                    menuItem.setActionCommand(COMMAND_HIRE_FULL);\n+                    menuItem.addActionListener(this);\n+                    popup.add(menuItem);\n                 }\n-            }\n-            if (oneSelected && unit.requiresMaintenance()) {\n-                menuItem = new JMenuItem(\"Show Last Maintenance Report\");\n-                menuItem.setActionCommand(\"MAINTENANCE_REPORT\");\n-                menuItem.addActionListener(this);\n-                popup.add(menuItem);\n-            }\n-            if (oneSelected && !unit.isMothballed() && gui.getCampaign().getCampaignOptions().usePeacetimeCost()) {\n-                menuItem = new JMenuItem(\"Show Monthly Supply Cost Report\");\n-                menuItem.setActionCommand(\"SUPPLY_COST\");\n-                menuItem.addActionListener(this);\n-                popup.add(menuItem);\n-            }\n-            if (oneSelected && unit.getEntity() instanceof Infantry\n-                    && !(unit.getEntity() instanceof BattleArmor)) {\n-                menuItem = new JMenuItem(\"Disband\");\n-                menuItem.setActionCommand(\"DISBAND\");\n-                menuItem.addActionListener(this);\n-                menuItem.setEnabled(unit.isAvailable());\n-                popup.add(menuItem);\n-            }\n-            // Customize\n-            if (oneSelected) {\n-                menu = new JMenu(\"Customize\");\n-                if (unit.getEntity().isOmni()) {\n-                    menuItem = new JMenuItem(\"Choose configuration...\");\n-                } else {\n-                    menuItem = new JMenuItem(\"Choose Refit Kit...\");\n+\n+                // Camo\n+                if (oneSelected && !unit.isEntityCamo()) {\n+                    menuItem = new JMenuItem(gui.getResourceMap()\n+                            .getString(\"customizeMenu.individualCamo.text\"));\n+                    menuItem.setActionCommand(COMMAND_INDI_CAMO);\n+                    menuItem.addActionListener(this);\n+                    popup.add(menuItem);\n                 }\n-                menuItem.setActionCommand(\"REFIT_KIT\");\n-                menuItem.addActionListener(this);\n-                menuItem.setEnabled(unit.isAvailable()\n-                        && (unit.getEntity() instanceof megamek.common.Mech\n-                                || unit.getEntity() instanceof megamek.common.Tank\n-                                || unit.getEntity() instanceof megamek.common.Aero || (unit\n-                                    .getEntity() instanceof Infantry)));\n-                menu.add(menuItem);\n-                menuItem = new JMenuItem(\"Refurbish Unit\");\n-                menuItem.setActionCommand(\"REFURBISH\");\n-                menuItem.addActionListener(this);\n-                menuItem.setEnabled(unit.isAvailable()\n-                        && (unit.getEntity() instanceof megamek.common.Mech\n-                                || unit.getEntity() instanceof megamek.common.Tank\n-                                || unit.getEntity() instanceof megamek.common.Aero\n-                                || unit.getEntity() instanceof BattleArmor\n-                                || unit.getEntity() instanceof megamek.common.Protomech));\n-                menu.add(menuItem);\n-                if (gui.hasTab(GuiTabType.MEKLAB)) {\n-                    menuItem = new JMenuItem(\"Customize in Mek Lab...\");\n-                    menuItem.setActionCommand(\"CUSTOMIZE\");\n+                if (oneHasIndividualCamo) {\n+                    menuItem = new JMenuItem(gui.getResourceMap()\n+                            .getString(\"customizeMenu.removeIndividualCamo.text\"));\n+                    menuItem.setActionCommand(COMMAND_REMOVE_INDI_CAMO);\n                     menuItem.addActionListener(this);\n-                    menuItem.setEnabled(unit.isAvailable()\n-                            && !(unit.getEntity() instanceof GunEmplacement));\n-                    menu.add(menuItem);\n+                    popup.add(menuItem);\n                 }\n-                if (unit.isRefitting()) {\n-                    menuItem = new JMenuItem(\"Cancel Customization\");\n-                    menuItem.setActionCommand(\"CANCEL_CUSTOMIZE\");\n+\n+                if (oneSelected && !gui.getCampaign().isCustom(unit)) {\n+                    menuItem = new JMenuItem(\"Tag as a custom unit\");\n+                    menuItem.setActionCommand(COMMAND_TAG_CUSTOM);\n                     menuItem.addActionListener(this);\n-                    menuItem.setEnabled(true);\n-                    menu.add(menuItem);\n-                    menuItem = new JMenuItem(\"Complete Refit (GM)\");\n-                    menuItem.setActionCommand(\"REFIT_GM_COMPLETE\");\n+                    popup.add(menuItem);\n+                }\n+\n+                if (oneSelected && gui.getCampaign().getCampaignOptions().useQuirks()) {\n+                    menuItem = new JMenuItem(\"Edit Quirks\");\n+                    menuItem.setActionCommand(COMMAND_QUIRKS);\n                     menuItem.addActionListener(this);\n-                    menuItem.setEnabled(gui.getCampaign().isGM() && unit.isRefitting());\n-                    menu.add(menuItem);\n+                    popup.add(menuItem);\n                 }\n-                menu.setEnabled(unit.isAvailable(true) && unit.isRepairable());\n-                popup.add(menu);\n-            }\n-            // fill with personnel\n-            if (unit.getCrew().size() < unit.getFullCrewSize()) {\n-                menuItem = new JMenuItem(\"Hire full complement\");\n-                menuItem.setActionCommand(\"HIRE_FULL\");\n-                menuItem.addActionListener(this);\n-                menuItem.setEnabled(unit.isAvailable());\n-                popup.add(menuItem);\n-            }\n-            // Camo\n-            if (oneSelected) {\n-                if (!unit.isEntityCamo()) {\n-                    menuItem = new JMenuItem(\n-                            gui.getResourceMap()\n-                                    .getString(\"customizeMenu.individualCamo.text\"));\n-                    menuItem.setActionCommand(\"INDI_CAMO\");\n+\n+                if (oneSelected) {\n+                    menuItem = new JMenuItem(\"Edit Unit History...\");\n+                    menuItem.setActionCommand(COMMAND_CHANGE_HISTORY);\n                     menuItem.addActionListener(this);\n-                    menuItem.setEnabled(true);\n                     popup.add(menuItem);\n-                } else {\n-                    menuItem = new JMenuItem(\n-                            gui.getResourceMap()\n-                                    .getString(\"customizeMenu.removeIndividualCamo.text\"));\n-                    menuItem.setActionCommand(\"REMOVE_INDI_CAMO\");\n+                }\n+\n+                // remove all personnel\n+                if (oneHasCrew) {\n+                    popup.addSeparator();\n+                    menuItem = new JMenuItem(\"Remove all personnel\");\n+                    menuItem.setActionCommand(COMMAND_REMOVE_ALL_PERSONNEL);\n                     menuItem.addActionListener(this);\n-                    menuItem.setEnabled(true);\n                     popup.add(menuItem);\n                 }\n-            }\n-            if (oneSelected && !gui.getCampaign().isCustom(unit)) {\n-                menuItem = new JMenuItem(\"Tag as a custom unit\");\n-                menuItem.setActionCommand(\"TAG_CUSTOM\");\n-                menuItem.addActionListener(this);\n-                menuItem.setEnabled(true);\n-                popup.add(menuItem);\n-            }\n-            if (oneSelected\n-                    && gui.getCampaign().getCampaignOptions().useQuirks()) {\n-                menuItem = new JMenuItem(\"Edit Quirks\");\n-                menuItem.setActionCommand(\"QUIRKS\");\n-                menuItem.addActionListener(this);\n-                popup.add(menuItem);\n-            }\n-            if (oneSelected) {\n-                menuItem = new JMenuItem(\"Edit Unit History...\");\n-                menuItem.setActionCommand(\"CHANGE_HISTORY\");\n-                menuItem.addActionListener(this);\n-                menuItem.setEnabled(true);\n-                popup.add(menuItem);\n-            }\n \n-            // remove all personnel\n-            popup.addSeparator();\n-            menuItem = new JMenuItem(\"Remove all personnel\");\n-            menuItem.setActionCommand(\"REMOVE_ALL_PERSONNEL\");\n-            menuItem.addActionListener(this);\n-            menuItem.setEnabled(!(unit.isUnmanned() && (null == unit.getTech()))\n-                    && !unit.isDeployed());\n-            popup.add(menuItem);\n-\n-            if (oneSelected) {\n-                menuItem = new JMenuItem(\"Name Unit\");\n-                menuItem.setActionCommand(\"FLUFF_NAME\");\n-                menuItem.addActionListener(this);\n-                menuItem.setEnabled(true);\n-                popup.add(menuItem);\n-            }\n-            // sell unit\n-            if (gui.getCampaign().getCampaignOptions().canSellUnits()) {\n-                popup.addSeparator();\n-                menuItem = new JMenuItem(\"Sell Unit\");\n-                menuItem.setActionCommand(\"SELL\");\n-                menuItem.addActionListener(this);\n-                menuItem.setEnabled(!unit.isDeployed());\n-                popup.add(menuItem);\n-            }\n-            // GM mode\n-            menu = new JMenu(\"GM Mode\");\n-            menuItem = new JMenuItem(\"Remove Unit\");\n-            menuItem.setActionCommand(\"REMOVE\");\n-            menuItem.addActionListener(this);\n-            menuItem.setEnabled(gui.getCampaign().isGM());\n-            menu.add(menuItem);\n-            menuItem = new JMenuItem(\"Strip Unit\");\n-            menuItem.setActionCommand(\"STRIP_UNIT\");\n-            menuItem.addActionListener(this);\n-            menuItem.setEnabled(gui.getCampaign().isGM());\n-            menu.add(menuItem);\n-            if (oneSelected) {\n-                menuItem = new JMenuItem(unit.isMothballed() ? \"Activate Unit\" : \"Mothball Unit\");\n-                menuItem.setActionCommand(unit.isMothballed() ? COMMAND_GM_ACTIVATE : COMMAND_GM_MOTHBALL);\n-                menuItem.addActionListener(this);\n-                menuItem.setEnabled(gui.getCampaign().isGM());\n-                menu.add(menuItem);\n-            }\n-            menuItem = new JMenuItem(\"Undeploy Unit\");\n-            menuItem.setActionCommand(\"UNDEPLOY\");\n-            menuItem.addActionListener(this);\n-            menuItem.setEnabled(gui.getCampaign().isGM() && unit.isDeployed());\n-            menu.add(menuItem);\n-            if (unit.getCrew().size() < unit.getFullCrewSize()) {\n-                menuItem = new JMenuItem(\"Add full complement\");\n-                menuItem.setActionCommand(\"HIRE_FULL_GM\");\n-                menuItem.addActionListener(this);\n-                menuItem.setEnabled(unit.isAvailable() && gui.getCampaign().isGM());\n-                menu.add(menuItem);\n+                if (oneSelected) {\n+                    menuItem = new JMenuItem(\"Name Unit\");\n+                    menuItem.setActionCommand(COMMAND_FLUFF_NAME);\n+                    menuItem.addActionListener(this);\n+                    popup.add(menuItem);\n+                }\n+\n+                // sell unit\n+                if (gui.getCampaign().getCampaignOptions().canSellUnits()) {\n+                    popup.addSeparator();\n+                    menuItem = new JMenuItem(\"Sell Unit\");\n+                    menuItem.setActionCommand(COMMAND_SELL);\n+                    menuItem.addActionListener(this);\n+                    menuItem.setEnabled(!unit.isDeployed());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11c1f4ae8ca9e06ce5eca3f10f3095e591a6bc0d"}, "originalPosition": 1551}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63c8252fe870e02c18f7244f7ab65f9a023e4b23", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/63c8252fe870e02c18f7244f7ab65f9a023e4b23", "committedDate": "2020-03-09T18:43:29Z", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_GMMassMothball"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7497b45faad397dc7c11252b1cf4af518fea451b", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/7497b45faad397dc7c11252b1cf4af518fea451b", "committedDate": "2020-03-09T19:07:37Z", "message": "Adding check to ensure that one unit is not deployed before displaying sell option"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e849ee5e68e2021a7395d5089ba0991ccaa038da", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/e849ee5e68e2021a7395d5089ba0991ccaa038da", "committedDate": "2020-03-09T19:15:06Z", "message": "Adding comments to help clarify what the boolean values are doing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b874bfaff8d366b3ce4544c33d9e0b2c44ad0062", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/b874bfaff8d366b3ce4544c33d9e0b2c44ad0062", "committedDate": "2020-03-09T19:23:07Z", "message": "Moving unit custom tag assignment to method addCustomUnitTag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f494763cbb09b598683747babcd66a6ad4afa4b0", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/f494763cbb09b598683747babcd66a6ad4afa4b0", "committedDate": "2020-03-09T19:41:29Z", "message": "Adding or enhancing comments to improve dev readability"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "965450827a43e1abe23bcb34cfa2dac0bfe1abaf", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/965450827a43e1abe23bcb34cfa2dac0bfe1abaf", "committedDate": "2020-03-09T19:43:33Z", "message": "Adding or enhancing comments to improve dev readability"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0Njc3NDUz", "url": "https://github.com/MegaMek/mekhq/pull/1544#pullrequestreview-374677453", "createdAt": "2020-03-14T00:20:39Z", "commit": {"oid": "965450827a43e1abe23bcb34cfa2dac0bfe1abaf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwMDoyMDozOVrOF2WfVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwMDoyMDozOVrOF2WfVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzNTg5NQ==", "bodyText": "I guess I don't follow. If you don't want elites first, why wouldn't you still want the person with the most time left?", "url": "https://github.com/MegaMek/mekhq/pull/1544#discussion_r392535895", "createdAt": "2020-03-14T00:20:39Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1887,14 +1898,22 @@ public Person findBestInRole(int role, String skill) {\n         }\n         // also need to loop through and collect engineers on self-crewed vessels\n         for (Unit u : getUnits()) {\n-            if (u.isSelfCrewed() && !(u.getEntity() instanceof Infantry) && null != u.getEngineer()) {\n+            if (u.isSelfCrewed() && !(u.getEntity() instanceof Infantry) && (null != u.getEngineer())) {\n                 techs.add(u.getEngineer());\n             }\n         }\n \n         // Return the tech collection sorted worst to best\n         // Reverse the sort if we've been asked for best to worst\n         if (sorted) {\n+            // First order by the amount of time the person has remaining, with the highest amount\n+            // of time being at the top of the list\n+            if (eliteFirst) {\n+                techs.sort(Comparator.comparingInt(Person::getMinutesLeft));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMzMDYxMA=="}, "originalCommit": {"oid": "11c1f4ae8ca9e06ce5eca3f10f3095e591a6bc0d"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7cff98ed10536c8f6b45005e0b5241280c17660", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/mekhq/commit/e7cff98ed10536c8f6b45005e0b5241280c17660", "committedDate": "2020-03-17T13:52:57Z", "message": "Fixing merge conflicts"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4495, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}