{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MjA2Njgy", "number": 1620, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxODozNzoyOFrODutvoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxODo0MTo1MFrODutxJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMzEwNTYwOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxODozNzoyOFrOGAzzvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxODozNzoyOFrOGAzzvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMjAxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    return (int) (rhs.getEntity().getWeight() - lhs.getEntity().getWeight());\n          \n          \n            \n                                    return Double.compare(rhs.getEntity().getWeight(), lhs.getEntity().getWeight());", "url": "https://github.com/MegaMek/mekhq/pull/1620#discussion_r403502012", "createdAt": "2020-04-04T18:37:28Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1150,18 +1151,50 @@ public Unit addUnit(Entity en, boolean allowNewPilots, int days) {\n         return units.values();\n     }\n \n-    public ArrayList<Unit> getUnits(boolean weightSorted, boolean alphaSorted) {\n-        ArrayList<Unit> sortedUnits = getCopyOfUnits();\n-        if (alphaSorted || weightSorted) {\n-            if (alphaSorted) {\n-                sortedUnits.sort(Comparator.comparing(Unit::getName));\n-            }\n-            if (weightSorted) {\n+    public List<Unit> getUnits(boolean weightSorted) {\n+        return getUnits(false, weightSorted, false);\n+    }\n+\n+    /**\n+     * This returns a list of the current units, sorted alphabetically and potentially by other methods\n+     * @param weightSorted      True if the unit list is sorted by weight descending, otherwise false\n+     * @param weightClassSorted True if the unit list is sorted by weight class in format heaviest to lightest, otherwise false\n+     * @param unitTypeSorted    True if the unit list is sorted by the unit type\n+     * @return a copy of the units in the campaign with the applicable sort format\n+     */\n+    public List<Unit> getUnits(boolean weightClassSorted, boolean weightSorted,\n+                               boolean unitTypeSorted) {\n+        List<Unit> units = getCopyOfUnits();\n+\n+        // Natural order sorting the units alphabetically is the default for getSortedUnits\n+        Comparator<String> naturalOrderComparator = new NaturalOrderComparator();\n+        units.sort((o1, o2) -> naturalOrderComparator.compare(o1.getName(), o2.getName()));\n+\n+        if (weightClassSorted || weightSorted || unitTypeSorted) {\n+            // We need to determine these by both the weight sorted and weight class sorted values,\n+            // as to properly sort by weight class and weight we should do both at the same time\n+            if (weightSorted && weightClassSorted) {\n+                units.sort((lhs, rhs) -> {\n+                    int weightClass1 = lhs.getEntity().getWeightClass();\n+                    int weightClass2 = rhs.getEntity().getWeightClass();\n+                    if (weightClass1 == weightClass2) {\n+                        return (int) (rhs.getEntity().getWeight() - lhs.getEntity().getWeight());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf7ea705096a76af1a299d07eae0bccac722d154"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMzEwNzcyOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxODozOTozMFrOGAz0ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxODozOTozMFrOGAz0ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMjI3NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            units.sort((lhs, rhs) -> Double.compare(rhs.getEntity().getWeight(), lhs.getEntity().getWeight()));\n          \n          \n            \n                            units.sort(Comparator.comparingDouble(o -> o.getEntity().getWeight()));", "url": "https://github.com/MegaMek/mekhq/pull/1620#discussion_r403502275", "createdAt": "2020-04-04T18:39:30Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1150,18 +1151,50 @@ public Unit addUnit(Entity en, boolean allowNewPilots, int days) {\n         return units.values();\n     }\n \n-    public ArrayList<Unit> getUnits(boolean weightSorted, boolean alphaSorted) {\n-        ArrayList<Unit> sortedUnits = getCopyOfUnits();\n-        if (alphaSorted || weightSorted) {\n-            if (alphaSorted) {\n-                sortedUnits.sort(Comparator.comparing(Unit::getName));\n-            }\n-            if (weightSorted) {\n+    public List<Unit> getUnits(boolean weightSorted) {\n+        return getUnits(false, weightSorted, false);\n+    }\n+\n+    /**\n+     * This returns a list of the current units, sorted alphabetically and potentially by other methods\n+     * @param weightSorted      True if the unit list is sorted by weight descending, otherwise false\n+     * @param weightClassSorted True if the unit list is sorted by weight class in format heaviest to lightest, otherwise false\n+     * @param unitTypeSorted    True if the unit list is sorted by the unit type\n+     * @return a copy of the units in the campaign with the applicable sort format\n+     */\n+    public List<Unit> getUnits(boolean weightClassSorted, boolean weightSorted,\n+                               boolean unitTypeSorted) {\n+        List<Unit> units = getCopyOfUnits();\n+\n+        // Natural order sorting the units alphabetically is the default for getSortedUnits\n+        Comparator<String> naturalOrderComparator = new NaturalOrderComparator();\n+        units.sort((o1, o2) -> naturalOrderComparator.compare(o1.getName(), o2.getName()));\n+\n+        if (weightClassSorted || weightSorted || unitTypeSorted) {\n+            // We need to determine these by both the weight sorted and weight class sorted values,\n+            // as to properly sort by weight class and weight we should do both at the same time\n+            if (weightSorted && weightClassSorted) {\n+                units.sort((lhs, rhs) -> {\n+                    int weightClass1 = lhs.getEntity().getWeightClass();\n+                    int weightClass2 = rhs.getEntity().getWeightClass();\n+                    if (weightClass1 == weightClass2) {\n+                        return (int) (rhs.getEntity().getWeight() - lhs.getEntity().getWeight());\n+                    } else {\n+                        return weightClass2 - weightClass1;\n+                    }\n+                });\n+            } else if (weightClassSorted) {\n+                units.sort(Comparator.comparingInt(o -> o.getEntity().getWeightClass()));\n+            } else if (weightSorted) {\n                 // Sorted in descending order of weights\n-                sortedUnits.sort((lhs, rhs) -> Double.compare(rhs.getEntity().getWeight(), lhs.getEntity().getWeight()));\n+                units.sort((lhs, rhs) -> Double.compare(rhs.getEntity().getWeight(), lhs.getEntity().getWeight()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf7ea705096a76af1a299d07eae0bccac722d154"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMzEwODkxOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxODo0MToxNFrOGAz1XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxODo0MToxNFrOGAz1XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMjQyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Comparator<String> naturalOrderComparator = new NaturalOrderComparator();\n          \n          \n            \n                    units.sort((o1, o2) -> naturalOrderComparator.compare(o1.getName(), o2.getName()));\n          \n          \n            \n                    units.sort(Comparator.comparing(o -> o.getName(), new NaturalOrderComparator()));", "url": "https://github.com/MegaMek/mekhq/pull/1620#discussion_r403502429", "createdAt": "2020-04-04T18:41:14Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1150,18 +1151,50 @@ public Unit addUnit(Entity en, boolean allowNewPilots, int days) {\n         return units.values();\n     }\n \n-    public ArrayList<Unit> getUnits(boolean weightSorted, boolean alphaSorted) {\n-        ArrayList<Unit> sortedUnits = getCopyOfUnits();\n-        if (alphaSorted || weightSorted) {\n-            if (alphaSorted) {\n-                sortedUnits.sort(Comparator.comparing(Unit::getName));\n-            }\n-            if (weightSorted) {\n+    public List<Unit> getUnits(boolean weightSorted) {\n+        return getUnits(false, weightSorted, false);\n+    }\n+\n+    /**\n+     * This returns a list of the current units, sorted alphabetically and potentially by other methods\n+     * @param weightSorted      True if the unit list is sorted by weight descending, otherwise false\n+     * @param weightClassSorted True if the unit list is sorted by weight class in format heaviest to lightest, otherwise false\n+     * @param unitTypeSorted    True if the unit list is sorted by the unit type\n+     * @return a copy of the units in the campaign with the applicable sort format\n+     */\n+    public List<Unit> getUnits(boolean weightClassSorted, boolean weightSorted,\n+                               boolean unitTypeSorted) {\n+        List<Unit> units = getCopyOfUnits();\n+\n+        // Natural order sorting the units alphabetically is the default for getSortedUnits\n+        Comparator<String> naturalOrderComparator = new NaturalOrderComparator();\n+        units.sort((o1, o2) -> naturalOrderComparator.compare(o1.getName(), o2.getName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf7ea705096a76af1a299d07eae0bccac722d154"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMzEwOTUxOnYy", "diffSide": "RIGHT", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxODo0MTo1MFrOGAz1rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxOTowNDowMVrOGAz_DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMjUwOA==", "bodyText": "Are these mutually exclusive or \"then by\"?", "url": "https://github.com/MegaMek/mekhq/pull/1620#discussion_r403502508", "createdAt": "2020-04-04T18:41:50Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1150,18 +1151,50 @@ public Unit addUnit(Entity en, boolean allowNewPilots, int days) {\n         return units.values();\n     }\n \n-    public ArrayList<Unit> getUnits(boolean weightSorted, boolean alphaSorted) {\n-        ArrayList<Unit> sortedUnits = getCopyOfUnits();\n-        if (alphaSorted || weightSorted) {\n-            if (alphaSorted) {\n-                sortedUnits.sort(Comparator.comparing(Unit::getName));\n-            }\n-            if (weightSorted) {\n+    public List<Unit> getUnits(boolean weightSorted) {\n+        return getUnits(false, weightSorted, false);\n+    }\n+\n+    /**\n+     * This returns a list of the current units, sorted alphabetically and potentially by other methods\n+     * @param weightSorted      True if the unit list is sorted by weight descending, otherwise false\n+     * @param weightClassSorted True if the unit list is sorted by weight class in format heaviest to lightest, otherwise false\n+     * @param unitTypeSorted    True if the unit list is sorted by the unit type\n+     * @return a copy of the units in the campaign with the applicable sort format\n+     */\n+    public List<Unit> getUnits(boolean weightClassSorted, boolean weightSorted,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf7ea705096a76af1a299d07eae0bccac722d154"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMzE3NA==", "bodyText": "Currently, they are applied as a then by, although you can do the first or the second alone. I'm going to replace it with an enum-based sorter method to handle all the possible use cases. I'm 99% code done for that, it just needs to be updated with a few of the comments here.", "url": "https://github.com/MegaMek/mekhq/pull/1620#discussion_r403503174", "createdAt": "2020-04-04T18:48:23Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1150,18 +1151,50 @@ public Unit addUnit(Entity en, boolean allowNewPilots, int days) {\n         return units.values();\n     }\n \n-    public ArrayList<Unit> getUnits(boolean weightSorted, boolean alphaSorted) {\n-        ArrayList<Unit> sortedUnits = getCopyOfUnits();\n-        if (alphaSorted || weightSorted) {\n-            if (alphaSorted) {\n-                sortedUnits.sort(Comparator.comparing(Unit::getName));\n-            }\n-            if (weightSorted) {\n+    public List<Unit> getUnits(boolean weightSorted) {\n+        return getUnits(false, weightSorted, false);\n+    }\n+\n+    /**\n+     * This returns a list of the current units, sorted alphabetically and potentially by other methods\n+     * @param weightSorted      True if the unit list is sorted by weight descending, otherwise false\n+     * @param weightClassSorted True if the unit list is sorted by weight class in format heaviest to lightest, otherwise false\n+     * @param unitTypeSorted    True if the unit list is sorted by the unit type\n+     * @return a copy of the units in the campaign with the applicable sort format\n+     */\n+    public List<Unit> getUnits(boolean weightClassSorted, boolean weightSorted,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMjUwOA=="}, "originalCommit": {"oid": "cf7ea705096a76af1a299d07eae0bccac722d154"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMzcwNg==", "bodyText": "If that's the case, then this would be easier to understand if you chained the comparators:\nComparator<Unit> comparator = Comparator.comparing(u -> u.getName(), new NaturalOrderComparator());\n...\nif (expr) {\n    comparator = comparator.thenComparing(...);\n}\n\nif (otherExpr) {\n    comparator = comparator.thenComparing(...);\n}\n\nunits.sort(comparator);", "url": "https://github.com/MegaMek/mekhq/pull/1620#discussion_r403503706", "createdAt": "2020-04-04T18:52:48Z", "author": {"login": "sixlettervariables"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1150,18 +1151,50 @@ public Unit addUnit(Entity en, boolean allowNewPilots, int days) {\n         return units.values();\n     }\n \n-    public ArrayList<Unit> getUnits(boolean weightSorted, boolean alphaSorted) {\n-        ArrayList<Unit> sortedUnits = getCopyOfUnits();\n-        if (alphaSorted || weightSorted) {\n-            if (alphaSorted) {\n-                sortedUnits.sort(Comparator.comparing(Unit::getName));\n-            }\n-            if (weightSorted) {\n+    public List<Unit> getUnits(boolean weightSorted) {\n+        return getUnits(false, weightSorted, false);\n+    }\n+\n+    /**\n+     * This returns a list of the current units, sorted alphabetically and potentially by other methods\n+     * @param weightSorted      True if the unit list is sorted by weight descending, otherwise false\n+     * @param weightClassSorted True if the unit list is sorted by weight class in format heaviest to lightest, otherwise false\n+     * @param unitTypeSorted    True if the unit list is sorted by the unit type\n+     * @return a copy of the units in the campaign with the applicable sort format\n+     */\n+    public List<Unit> getUnits(boolean weightClassSorted, boolean weightSorted,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMjUwOA=="}, "originalCommit": {"oid": "cf7ea705096a76af1a299d07eae0bccac722d154"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwNDkwOQ==", "bodyText": "I'm opening a PR to replace this either later today or tomorrow with the enum (didn't want to distract from the main portion of this. Is it okay if I just leave it like this, and implement it in a final case then?", "url": "https://github.com/MegaMek/mekhq/pull/1620#discussion_r403504909", "createdAt": "2020-04-04T19:04:01Z", "author": {"login": "Windchild292"}, "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1150,18 +1151,50 @@ public Unit addUnit(Entity en, boolean allowNewPilots, int days) {\n         return units.values();\n     }\n \n-    public ArrayList<Unit> getUnits(boolean weightSorted, boolean alphaSorted) {\n-        ArrayList<Unit> sortedUnits = getCopyOfUnits();\n-        if (alphaSorted || weightSorted) {\n-            if (alphaSorted) {\n-                sortedUnits.sort(Comparator.comparing(Unit::getName));\n-            }\n-            if (weightSorted) {\n+    public List<Unit> getUnits(boolean weightSorted) {\n+        return getUnits(false, weightSorted, false);\n+    }\n+\n+    /**\n+     * This returns a list of the current units, sorted alphabetically and potentially by other methods\n+     * @param weightSorted      True if the unit list is sorted by weight descending, otherwise false\n+     * @param weightClassSorted True if the unit list is sorted by weight class in format heaviest to lightest, otherwise false\n+     * @param unitTypeSorted    True if the unit list is sorted by the unit type\n+     * @return a copy of the units in the campaign with the applicable sort format\n+     */\n+    public List<Unit> getUnits(boolean weightClassSorted, boolean weightSorted,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMjUwOA=="}, "originalCommit": {"oid": "cf7ea705096a76af1a299d07eae0bccac722d154"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2395, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}