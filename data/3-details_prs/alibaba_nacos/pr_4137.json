{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NDMzMDc0", "number": 4137, "title": "[ISSUE-#4115] Refactor client naming event handle logic", "bodyText": "Please do not create a Pull Request without creating an issue first.\nWhat is the purpose of the change\nissue-#4115", "createdAt": "2020-11-04T14:46:16Z", "url": "https://github.com/alibaba/nacos/pull/4137", "merged": true, "mergeCommit": {"oid": "5c38d0b5b8bd93c7d879130216b91d75227e3a1d"}, "closed": true, "closedAt": "2020-11-13T03:58:13Z", "author": {"login": "horizonzy"}, "timelineItems": {"totalCount": 32, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZJvTGgH2gAyNTE1NDMzMDc0OjVjMWU1MTgyOGVkZTAwNDE3YmQ0YmVmNTMyMDVmZmNiZDg3YzIwZWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdb8dBwAFqTUyOTYyNDUxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5c1e51828ede00417bd4bef53205ffcbd87c20ea", "author": {"user": {"login": "horizonzy", "name": "\u8d75\u5ef6"}}, "url": "https://github.com/alibaba/nacos/commit/5c1e51828ede00417bd4bef53205ffcbd87c20ea", "committedDate": "2020-11-04T08:46:09Z", "message": "refactor and supply api to async handle instances change event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d216bcca2b78b20d3f51814e8c1e27a57c92fbaa", "author": {"user": {"login": "horizonzy", "name": "\u8d75\u5ef6"}}, "url": "https://github.com/alibaba/nacos/commit/d216bcca2b78b20d3f51814e8c1e27a57c92fbaa", "committedDate": "2020-11-04T14:44:04Z", "message": "add async handle way to callback event listener"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzODgyNTg4", "url": "https://github.com/alibaba/nacos/pull/4137#pullrequestreview-523882588", "createdAt": "2020-11-05T02:29:04Z", "commit": {"oid": "d216bcca2b78b20d3f51814e8c1e27a57c92fbaa"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b73b06400bf63fd35086e0e6555c0af285d4792", "author": {"user": {"login": "horizonzy", "name": "\u8d75\u5ef6"}}, "url": "https://github.com/alibaba/nacos/commit/8b73b06400bf63fd35086e0e6555c0af285d4792", "committedDate": "2020-11-05T05:14:30Z", "message": "refactor EventListener, supply getExecutor to handle event async and compatible old version."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9e9e9c0659a67049a00539ff5e187d376c4d62a", "author": {"user": {"login": "horizonzy", "name": "\u8d75\u5ef6"}}, "url": "https://github.com/alibaba/nacos/commit/d9e9e9c0659a67049a00539ff5e187d376c4d62a", "committedDate": "2020-11-05T05:20:29Z", "message": "remove unnecessary code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3a1550bf18868abffadf9cd1f087aa8180ede0d", "author": {"user": {"login": "horizonzy", "name": "\u8d75\u5ef6"}}, "url": "https://github.com/alibaba/nacos/commit/c3a1550bf18868abffadf9cd1f087aa8180ede0d", "committedDate": "2020-11-05T05:43:32Z", "message": "ignore abstract class name check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94379790c539e6c87684a4072388fa6a3201e650", "author": {"user": {"login": "horizonzy", "name": "\u8d75\u5ef6"}}, "url": "https://github.com/alibaba/nacos/commit/94379790c539e6c87684a4072388fa6a3201e650", "committedDate": "2020-11-05T06:57:03Z", "message": "fix EmptyLineSeparator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c730ebf81a271b97ab06c0636ef2df4d42ef5452", "author": {"user": {"login": "horizonzy", "name": "\u8d75\u5ef6"}}, "url": "https://github.com/alibaba/nacos/commit/c730ebf81a271b97ab06c0636ef2df4d42ef5452", "committedDate": "2020-11-05T07:09:18Z", "message": "remove unuseful import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzOTczNzAx", "url": "https://github.com/alibaba/nacos/pull/4137#pullrequestreview-523973701", "createdAt": "2020-11-05T07:09:08Z", "commit": {"oid": "94379790c539e6c87684a4072388fa6a3201e650"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNzowOTowOFrOHt183w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNzowOTowOFrOHt183w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgzMTkwMw==", "bodyText": "\u8fd9\u91cc\u5efa\u8bae\u4f7f\u7528\u62bd\u8c61\u5b9e\u73b0\u6269\u5c55\u65b9\u5f0f\u6765\u589e\u52a0getExecutor\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u628aEventListener \u4fee\u6539\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u4e4b\u524d\u7684\u7248\u672c\u51fa\u73b0\u517c\u5bb9\u6027\u95ee\u9898\u3002", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r517831903", "createdAt": "2020-11-05T07:09:08Z", "author": {"login": "Maijh97"}, "path": "api/src/main/java/com/alibaba/nacos/api/naming/listener/EventListener.java", "diffHunk": "@@ -16,17 +16,29 @@\n \n package com.alibaba.nacos.api.naming.listener;\n \n+import java.util.concurrent.Executor;\n+\n /**\n  * Event Listener.\n  *\n  * @author Nacos\n  */\n-public interface EventListener {\n+@SuppressWarnings(\"PMD.AbstractClassShouldStartWithAbstractNamingRule\")\n+public abstract class EventListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94379790c539e6c87684a4072388fa6a3201e650"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cbbfcc25f9fb18d40825e57f3fd7da48a58b681", "author": {"user": {"login": "horizonzy", "name": "\u8d75\u5ef6"}}, "url": "https://github.com/alibaba/nacos/commit/5cbbfcc25f9fb18d40825e57f3fd7da48a58b681", "committedDate": "2020-11-05T08:23:10Z", "message": "compatible old client sdk, add abstractEventListener to support async handle naming event."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bc66da924ed69e2963aed1d54de1caa1c3b4b99", "author": {"user": {"login": "horizonzy", "name": "\u8d75\u5ef6"}}, "url": "https://github.com/alibaba/nacos/commit/4bc66da924ed69e2963aed1d54de1caa1c3b4b99", "committedDate": "2020-11-05T08:39:46Z", "message": "remove unuseful import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca30c11322e187a775aa6418a775c066db2b5d0c", "author": {"user": {"login": "horizonzy", "name": "\u8d75\u5ef6"}}, "url": "https://github.com/alibaba/nacos/commit/ca30c11322e187a775aa6418a775c066db2b5d0c", "committedDate": "2020-11-06T06:09:01Z", "message": "refactor InstanceChangeListener. decouple AbstractEventListener's executor and InstanceChangeListener's executor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86485e4337de146b9e8efa44e29e7ff1f9a73c25", "author": {"user": {"login": "horizonzy", "name": "\u8d75\u5ef6"}}, "url": "https://github.com/alibaba/nacos/commit/86485e4337de146b9e8efa44e29e7ff1f9a73c25", "committedDate": "2020-11-06T10:52:03Z", "message": "1.remove key if listeners is empty.\n2.fix getSubscribeServices"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0OTM1NTU5", "url": "https://github.com/alibaba/nacos/pull/4137#pullrequestreview-524935559", "createdAt": "2020-11-06T08:17:21Z", "commit": {"oid": "ca30c11322e187a775aa6418a775c066db2b5d0c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwODoxNzoyMVrOHukEhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwODoxNzoyMVrOHukEhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU4NzUyNA==", "bodyText": "public Executor getExecutor() {\n    return null;\n}", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r518587524", "createdAt": "2020-11-06T08:17:21Z", "author": {"login": "chuntaojun"}, "path": "api/src/main/java/com/alibaba/nacos/api/naming/listener/AbstractEventListener.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.api.naming.listener;\n+\n+import java.util.concurrent.Executor;\n+\n+/**\n+ * Abstract event listener, to support handle event by user custom executor.\n+ *\n+ * @author horizonzy\n+ * @since 1.4.0\n+ */\n+public abstract class AbstractEventListener implements EventListener {\n+    \n+    /**\n+     * Get executor for execute this receive.\n+     *\n+     * @return Executor\n+     */\n+    public abstract Executor getExecutor();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca30c11322e187a775aa6418a775c066db2b5d0c"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NjUxMzIz", "url": "https://github.com/alibaba/nacos/pull/4137#pullrequestreview-525651323", "createdAt": "2020-11-07T12:57:34Z", "commit": {"oid": "86485e4337de146b9e8efa44e29e7ff1f9a73c25"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMjo1NzozNFrOHvH7jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMjo1OTo0N1rOHvH8Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE3NTA1NQ==", "bodyText": "why you add this @SuppressWarnings", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r519175055", "createdAt": "2020-11-07T12:57:34Z", "author": {"login": "chuntaojun"}, "path": "client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java", "diffHunk": "@@ -404,6 +441,7 @@ private void resetFailCount() {\n             failCount = 0;\n         }\n         \n+        @SuppressWarnings(\"checkstyle:EmptyLineSeparator\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86485e4337de146b9e8efa44e29e7ff1f9a73c25"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE3NTA3OQ==", "bodyText": "Properties within an event should be immutable", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r519175079", "createdAt": "2020-11-07T12:58:09Z", "author": {"login": "chuntaojun"}, "path": "client/src/main/java/com/alibaba/nacos/client/naming/event/InstancesChangeEvent.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.client.naming.event;\n+\n+import com.alibaba.nacos.api.naming.pojo.Instance;\n+import com.alibaba.nacos.common.notify.Event;\n+\n+import java.util.List;\n+\n+/**\n+ * Instances change event.\n+ *\n+ * @author horizonzy\n+ * @since 1.4.0\n+ */\n+public class InstancesChangeEvent extends Event {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86485e4337de146b9e8efa44e29e7ff1f9a73c25"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE3NTI0Mg==", "bodyText": "Boolean => boolean", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r519175242", "createdAt": "2020-11-07T12:59:47Z", "author": {"login": "chuntaojun"}, "path": "client/src/main/java/com/alibaba/nacos/client/naming/event/InstancesChangeNotifier.java", "diffHunk": "@@ -0,0 +1,148 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.client.naming.event;\n+\n+import com.alibaba.nacos.api.common.Constants;\n+import com.alibaba.nacos.api.naming.listener.AbstractEventListener;\n+import com.alibaba.nacos.api.naming.listener.EventListener;\n+import com.alibaba.nacos.api.naming.listener.NamingEvent;\n+import com.alibaba.nacos.api.naming.pojo.ServiceInfo;\n+import com.alibaba.nacos.common.notify.Event;\n+import com.alibaba.nacos.common.notify.listener.Subscriber;\n+import com.alibaba.nacos.common.utils.CollectionUtils;\n+import com.alibaba.nacos.common.utils.ConcurrentHashSet;\n+import com.alibaba.nacos.common.utils.StringUtils;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ * A subscriber to notify eventListener callback.\n+ *\n+ * @author horizonzy\n+ * @since 1.4.0\n+ */\n+public class InstancesChangeNotifier extends Subscriber<InstancesChangeEvent> {\n+    \n+    private final Map<String, ConcurrentHashSet<EventListener>> listenerMap = new ConcurrentHashMap<String, ConcurrentHashSet<EventListener>>();\n+    \n+    private final Object lock = new Object();\n+    \n+    /**\n+     * register listener.\n+     *\n+     * @param serviceName combineServiceName, such as 'xxx@@xxx'\n+     * @param clusters    clusters, concat by ','. such as 'xxx,yyy'\n+     * @param listener    custom listener\n+     */\n+    public void registerListener(String serviceName, String clusters, EventListener listener) {\n+        String key = combineListenKey(serviceName, clusters);\n+        ConcurrentHashSet<EventListener> eventListeners = listenerMap.get(key);\n+        if (eventListeners == null) {\n+            synchronized (lock) {\n+                eventListeners = listenerMap.get(key);\n+                if (eventListeners == null) {\n+                    eventListeners = new ConcurrentHashSet<EventListener>();\n+                    listenerMap.put(key, eventListeners);\n+                }\n+            }\n+        }\n+        eventListeners.add(listener);\n+    }\n+    \n+    /**\n+     * deregister listener.\n+     *\n+     * @param serviceName combineServiceName, such as 'xxx@@xxx'\n+     * @param clusters    clusters, concat by ','. such as 'xxx,yyy'\n+     * @param listener    custom listener\n+     */\n+    public void deregisterListener(String serviceName, String clusters, EventListener listener) {\n+        String key = combineListenKey(serviceName, clusters);\n+        ConcurrentHashSet<EventListener> eventListeners = listenerMap.get(key);\n+        if (eventListeners == null) {\n+            return;\n+        }\n+        eventListeners.remove(listener);\n+        if (CollectionUtils.isEmpty(eventListeners)) {\n+            listenerMap.remove(key);\n+        }\n+    }\n+    \n+    /**\n+     * check serviceName,clusters is subscribed.\n+     *\n+     * @param serviceName combineServiceName, such as 'xxx@@xxx'\n+     * @param clusters    clusters, concat by ','. such as 'xxx,yyy'\n+     * @return is serviceName,clusters subscribed\n+     */\n+    public Boolean isSubscribed(String serviceName, String clusters) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86485e4337de146b9e8efa44e29e7ff1f9a73c25"}, "originalPosition": 95}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77082af0a4c80da20c5b1e7ccdfb3b6b77b6eaff", "author": {"user": {"login": "horizonzy", "name": "\u8d75\u5ef6"}}, "url": "https://github.com/alibaba/nacos/commit/77082af0a4c80da20c5b1e7ccdfb3b6b77b6eaff", "committedDate": "2020-11-07T13:15:48Z", "message": "revert notify center code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7325f696d602530bfd89f7099e42c2ac1ab64b9", "author": {"user": {"login": "horizonzy", "name": "\u8d75\u5ef6"}}, "url": "https://github.com/alibaba/nacos/commit/b7325f696d602530bfd89f7099e42c2ac1ab64b9", "committedDate": "2020-11-07T13:32:35Z", "message": "code quality enhance"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1ODkzODY4", "url": "https://github.com/alibaba/nacos/pull/4137#pullrequestreview-525893868", "createdAt": "2020-11-09T02:54:10Z", "commit": {"oid": "b7325f696d602530bfd89f7099e42c2ac1ab64b9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwMjo1NDoxMFrOHvdaZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwMjo1NDoxMFrOHvdaZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUyNzAxNQ==", "bodyText": "Should we abstract this method to EvenListener?", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r519527015", "createdAt": "2020-11-09T02:54:10Z", "author": {"login": "KomachiSion"}, "path": "api/src/main/java/com/alibaba/nacos/api/naming/listener/AbstractEventListener.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.api.naming.listener;\n+\n+import java.util.concurrent.Executor;\n+\n+/**\n+ * Abstract event listener, to support handle event by user custom executor.\n+ *\n+ * @author horizonzy\n+ * @since 1.4.0\n+ */\n+public abstract class AbstractEventListener implements EventListener {\n+    \n+    /**\n+     * Get executor for execute this receive.\n+     *\n+     * @return Executor\n+     */\n+    public Executor getExecutor() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7325f696d602530bfd89f7099e42c2ac1ab64b9"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTQwMzA2", "url": "https://github.com/alibaba/nacos/pull/4137#pullrequestreview-526940306", "createdAt": "2020-11-10T08:01:47Z", "commit": {"oid": "b7325f696d602530bfd89f7099e42c2ac1ab64b9"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTUxMjUw", "url": "https://github.com/alibaba/nacos/pull/4137#pullrequestreview-526951250", "createdAt": "2020-11-10T08:17:41Z", "commit": {"oid": "b7325f696d602530bfd89f7099e42c2ac1ab64b9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15ee1f8730bea671819761568e8f94303e18de75", "author": {"user": {"login": "horizonzy", "name": "\u8d75\u5ef6"}}, "url": "https://github.com/alibaba/nacos/commit/15ee1f8730bea671819761568e8f94303e18de75", "committedDate": "2020-11-10T08:24:22Z", "message": "upgrade @since 1.4.0 -> 1.4.1"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MjI5NDU4", "url": "https://github.com/alibaba/nacos/pull/4137#pullrequestreview-527229458", "createdAt": "2020-11-10T14:00:58Z", "commit": {"oid": "15ee1f8730bea671819761568e8f94303e18de75"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNDowMDo1OVrOHwd4Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNDowMDo1OVrOHwd4Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU4MzI1OQ==", "bodyText": "Why abstract this method?\nI understand the design of publisher should shutdown the subscriber.\n@zongtanghu @chuntaojun What do you think about at that time?", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r520583259", "createdAt": "2020-11-10T14:00:59Z", "author": {"login": "KomachiSion"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/EventPublisher.java", "diffHunk": "@@ -71,4 +73,12 @@\n      * @param event      {@link Event}\n      */\n     void notifySubscriber(Subscriber subscriber, Event event);\n-}\n\\ No newline at end of file\n+    \n+    /**\n+     * Get current Subscribers.\n+     *\n+     * @return subscribers\n+     */\n+    Set<Subscriber> getSubscribers();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15ee1f8730bea671819761568e8f94303e18de75"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3Nzc5ODM5", "url": "https://github.com/alibaba/nacos/pull/4137#pullrequestreview-527779839", "createdAt": "2020-11-11T01:30:50Z", "commit": {"oid": "15ee1f8730bea671819761568e8f94303e18de75"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMTozMDo1MFrOHw3Fgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMTozMDo1MFrOHw3Fgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk5NjIyNw==", "bodyText": "\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528ServiceInfo#getKey()\u65b9\u6cd5\u66ff\u6362\u3002", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r520996227", "createdAt": "2020-11-11T01:30:50Z", "author": {"login": "Maijh97"}, "path": "client/src/main/java/com/alibaba/nacos/client/naming/event/InstancesChangeNotifier.java", "diffHunk": "@@ -0,0 +1,148 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.client.naming.event;\n+\n+import com.alibaba.nacos.api.common.Constants;\n+import com.alibaba.nacos.api.naming.listener.AbstractEventListener;\n+import com.alibaba.nacos.api.naming.listener.EventListener;\n+import com.alibaba.nacos.api.naming.listener.NamingEvent;\n+import com.alibaba.nacos.api.naming.pojo.ServiceInfo;\n+import com.alibaba.nacos.common.notify.Event;\n+import com.alibaba.nacos.common.notify.listener.Subscriber;\n+import com.alibaba.nacos.common.utils.CollectionUtils;\n+import com.alibaba.nacos.common.utils.ConcurrentHashSet;\n+import com.alibaba.nacos.common.utils.StringUtils;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ * A subscriber to notify eventListener callback.\n+ *\n+ * @author horizonzy\n+ * @since 1.4.1\n+ */\n+public class InstancesChangeNotifier extends Subscriber<InstancesChangeEvent> {\n+    \n+    private final Map<String, ConcurrentHashSet<EventListener>> listenerMap = new ConcurrentHashMap<String, ConcurrentHashSet<EventListener>>();\n+    \n+    private final Object lock = new Object();\n+    \n+    /**\n+     * register listener.\n+     *\n+     * @param serviceName combineServiceName, such as 'xxx@@xxx'\n+     * @param clusters    clusters, concat by ','. such as 'xxx,yyy'\n+     * @param listener    custom listener\n+     */\n+    public void registerListener(String serviceName, String clusters, EventListener listener) {\n+        String key = combineListenKey(serviceName, clusters);\n+        ConcurrentHashSet<EventListener> eventListeners = listenerMap.get(key);\n+        if (eventListeners == null) {\n+            synchronized (lock) {\n+                eventListeners = listenerMap.get(key);\n+                if (eventListeners == null) {\n+                    eventListeners = new ConcurrentHashSet<EventListener>();\n+                    listenerMap.put(key, eventListeners);\n+                }\n+            }\n+        }\n+        eventListeners.add(listener);\n+    }\n+    \n+    /**\n+     * deregister listener.\n+     *\n+     * @param serviceName combineServiceName, such as 'xxx@@xxx'\n+     * @param clusters    clusters, concat by ','. such as 'xxx,yyy'\n+     * @param listener    custom listener\n+     */\n+    public void deregisterListener(String serviceName, String clusters, EventListener listener) {\n+        String key = combineListenKey(serviceName, clusters);\n+        ConcurrentHashSet<EventListener> eventListeners = listenerMap.get(key);\n+        if (eventListeners == null) {\n+            return;\n+        }\n+        eventListeners.remove(listener);\n+        if (CollectionUtils.isEmpty(eventListeners)) {\n+            listenerMap.remove(key);\n+        }\n+    }\n+    \n+    /**\n+     * check serviceName,clusters is subscribed.\n+     *\n+     * @param serviceName combineServiceName, such as 'xxx@@xxx'\n+     * @param clusters    clusters, concat by ','. such as 'xxx,yyy'\n+     * @return is serviceName,clusters subscribed\n+     */\n+    public boolean isSubscribed(String serviceName, String clusters) {\n+        String key = combineListenKey(serviceName, clusters);\n+        ConcurrentHashSet<EventListener> eventListeners = listenerMap.get(key);\n+        return CollectionUtils.isNotEmpty(eventListeners);\n+    }\n+    \n+    public List<ServiceInfo> getSubscribeServices() {\n+        List<ServiceInfo> serviceInfos = new ArrayList<ServiceInfo>();\n+        for (String key : listenerMap.keySet()) {\n+            serviceInfos.add(ServiceInfo.fromKey(key));\n+        }\n+        return serviceInfos;\n+    }\n+    \n+    @Override\n+    public void onEvent(InstancesChangeEvent event) {\n+        String key = combineListenKey(event.getServiceName(), event.getClusters());\n+        ConcurrentHashSet<EventListener> eventListeners = listenerMap.get(key);\n+        if (CollectionUtils.isEmpty(eventListeners)) {\n+            return;\n+        }\n+        for (final EventListener listener : eventListeners) {\n+            final com.alibaba.nacos.api.naming.listener.Event namingEvent = transferToNamingEvent(event);\n+            if (listener instanceof AbstractEventListener && ((AbstractEventListener) listener).getExecutor() != null) {\n+                ((AbstractEventListener) listener).getExecutor().execute(new Runnable() {\n+                    @Override\n+                    public void run() {\n+                        listener.onEvent(namingEvent);\n+                    }\n+                });\n+                continue;\n+            }\n+            listener.onEvent(namingEvent);\n+        }\n+    }\n+    \n+    private com.alibaba.nacos.api.naming.listener.Event transferToNamingEvent(\n+            InstancesChangeEvent instancesChangeEvent) {\n+        return new NamingEvent(instancesChangeEvent.getServiceName(), instancesChangeEvent.getGroupName(),\n+                instancesChangeEvent.getClusters(), instancesChangeEvent.getHosts());\n+    }\n+    \n+    @Override\n+    public Class<? extends Event> subscribeType() {\n+        return InstancesChangeEvent.class;\n+    }\n+    \n+    private String combineListenKey(String serviceName, String clusters) {\n+        if (!StringUtils.isEmpty(clusters)) {\n+            return serviceName + Constants.SERVICE_INFO_SPLITER + clusters;\n+        }\n+        return serviceName;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15ee1f8730bea671819761568e8f94303e18de75"}, "originalPosition": 147}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfc544dcb591b3f2dc625eba51d28091aa403c3a", "author": {"user": {"login": "horizonzy", "name": "\u8d75\u5ef6"}}, "url": "https://github.com/alibaba/nacos/commit/dfc544dcb591b3f2dc625eba51d28091aa403c3a", "committedDate": "2020-11-11T01:46:31Z", "message": "change combineListenKey to ServiceInfo.getKey"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MDI3NjY1", "url": "https://github.com/alibaba/nacos/pull/4137#pullrequestreview-527027665", "createdAt": "2020-11-10T09:49:04Z", "commit": {"oid": "15ee1f8730bea671819761568e8f94303e18de75"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOTo0OTowNFrOHwUXBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOTo0OTowNFrOHwUXBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyNzI2OQ==", "bodyText": "This is not at the instance level, so do not close shutdown at the instance level", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r520427269", "createdAt": "2020-11-10T09:49:04Z", "author": {"login": "chuntaojun"}, "path": "client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java", "diffHunk": "@@ -371,6 +407,7 @@ public void shutdown() throws NacosException {\n         ThreadUtils.shutdownThreadPool(executor, NAMING_LOGGER);\n         pushReceiver.shutdown();\n         failoverReactor.shutdown();\n+        NotifyCenter.shutdown();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15ee1f8730bea671819761568e8f94303e18de75"}, "originalPosition": 129}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbbe51c2b61524613f4e0d143a313c6e8b886404", "author": {"user": {"login": "horizonzy", "name": "\u8d75\u5ef6"}}, "url": "https://github.com/alibaba/nacos/commit/dbbe51c2b61524613f4e0d143a313c6e8b886404", "committedDate": "2020-11-11T03:35:47Z", "message": "just deregisterSubscriber when hostReactor shutdown"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "479dbd9e9e2e8758b3032e7d1c8095353f0fe86c", "author": {"user": {"login": "horizonzy", "name": "\u8d75\u5ef6"}}, "url": "https://github.com/alibaba/nacos/commit/479dbd9e9e2e8758b3032e7d1c8095353f0fe86c", "committedDate": "2020-11-11T03:37:25Z", "message": "not export getSubscribers()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MDM1ODc0", "url": "https://github.com/alibaba/nacos/pull/4137#pullrequestreview-529035874", "createdAt": "2020-11-12T12:25:30Z", "commit": {"oid": "479dbd9e9e2e8758b3032e7d1c8095353f0fe86c"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MTAxMDA3", "url": "https://github.com/alibaba/nacos/pull/4137#pullrequestreview-529101007", "createdAt": "2020-11-12T13:48:08Z", "commit": {"oid": "479dbd9e9e2e8758b3032e7d1c8095353f0fe86c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMzo0ODowOFrOHx7geA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMzo0ODowOFrOHx7geA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjExNzI0MA==", "bodyText": "notifier = new InstancesChangeNotifier(); => this.notifier = new InstancesChangeNotifier();", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r522117240", "createdAt": "2020-11-12T13:48:08Z", "author": {"login": "chuntaojun"}, "path": "client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java", "diffHunk": "@@ -108,6 +111,10 @@ public Thread newThread(Runnable r) {\n         this.updatingMap = new ConcurrentHashMap<String, Object>();\n         this.failoverReactor = new FailoverReactor(this, cacheDir);\n         this.pushReceiver = new PushReceiver(this);\n+        \n+        NotifyCenter.registerToPublisher(InstancesChangeEvent.class, 16384);\n+        notifier = new InstancesChangeNotifier();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "479dbd9e9e2e8758b3032e7d1c8095353f0fe86c"}, "originalPosition": 66}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3334c5bb8be29ec324f74c2cc7c3ef225901135b", "author": {"user": {"login": "horizonzy", "name": "\u8d75\u5ef6"}}, "url": "https://github.com/alibaba/nacos/commit/3334c5bb8be29ec324f74c2cc7c3ef225901135b", "committedDate": "2020-11-12T14:05:03Z", "message": "add this key word, and move code place."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MTYyMTIz", "url": "https://github.com/alibaba/nacos/pull/4137#pullrequestreview-529162123", "createdAt": "2020-11-12T14:50:26Z", "commit": {"oid": "3334c5bb8be29ec324f74c2cc7c3ef225901135b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NjI0NTE4", "url": "https://github.com/alibaba/nacos/pull/4137#pullrequestreview-529624518", "createdAt": "2020-11-13T00:59:12Z", "commit": {"oid": "3334c5bb8be29ec324f74c2cc7c3ef225901135b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4209, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}