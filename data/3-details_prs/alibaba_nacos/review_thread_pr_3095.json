{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NzAyNzE4", "number": 3095, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOTowNDo0N1rOEGQz1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOToyMjo0MlrOEGROBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDAyMzI2OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOTowNDo0N1rOGk8rDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOTowNDo0N1rOGk8rDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5NTk4MQ==", "bodyText": "Maybe rename to HttpClientBeanCache or HttpClientBeanHolder will be better.", "url": "https://github.com/alibaba/nacos/pull/3095#discussion_r441395981", "createdAt": "2020-06-17T09:04:47Z", "author": {"login": "KomachiSion"}, "path": "common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanFactory.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.http;\n+\n+import com.alibaba.nacos.common.http.client.NacosAsyncRestTemplate;\n+import com.alibaba.nacos.common.http.client.NacosRestTemplate;\n+import com.alibaba.nacos.common.utils.ExceptionUtil;\n+import com.alibaba.nacos.common.utils.ThreadUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+/**\n+ * Create a rest template\n+ * to ensure that each custom client config and rest template are in one-to-one correspondence\n+ *\n+ * @author mai.jh\n+ * @date 2020/6/16\n+ */\n+@SuppressWarnings(\"all\")\n+public final class HttpClientBeanFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef7a135e9fd42281b6cfc6cb39fd40263be8d4cc"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDAzMDQ5OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOTowNjo0NVrOGk8vxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOTowNjo0NVrOGk8vxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5NzE4OQ==", "bodyText": "merge these line to single line to remove tmp variable.\nlike return getNacosRestTemplate(new DefaultHttpClientConfig());", "url": "https://github.com/alibaba/nacos/pull/3095#discussion_r441397189", "createdAt": "2020-06-17T09:06:45Z", "author": {"login": "KomachiSion"}, "path": "common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanFactory.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.http;\n+\n+import com.alibaba.nacos.common.http.client.NacosAsyncRestTemplate;\n+import com.alibaba.nacos.common.http.client.NacosRestTemplate;\n+import com.alibaba.nacos.common.utils.ExceptionUtil;\n+import com.alibaba.nacos.common.utils.ThreadUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+/**\n+ * Create a rest template\n+ * to ensure that each custom client config and rest template are in one-to-one correspondence\n+ *\n+ * @author mai.jh\n+ * @date 2020/6/16\n+ */\n+@SuppressWarnings(\"all\")\n+public final class HttpClientBeanFactory {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(HttpClientManager.class);\n+\n+    private static final int TIMEOUT = Integer.getInteger(\"nacos.http.timeout\", 5000);\n+\n+    private static HttpClientConfig HTTP_CLIENT_CONFIG = HttpClientConfig.builder()\n+        .setConTimeOutMillis(TIMEOUT).setReadTimeOutMillis(TIMEOUT >> 1).build();\n+\n+    private static final Map<String, NacosRestTemplate> singletonRest = new HashMap<String, NacosRestTemplate>(10);\n+    private static final Map<String, NacosAsyncRestTemplate> singletonAsyncRest = new HashMap<String, NacosAsyncRestTemplate>(10);\n+\n+    private static final AtomicBoolean alreadyShutdown = new AtomicBoolean(false);\n+\n+    static {\n+        ThreadUtils.addShutdownHook(new Runnable() {\n+            @Override\n+            public void run() {\n+                shutdown();\n+            }\n+        });\n+    }\n+\n+    public static NacosRestTemplate getNacosRestTemplate() {\n+        HttpClientFactory httpClientFactory = new DefaultHttpClientConfig();\n+        return getNacosRestTemplate(httpClientFactory);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef7a135e9fd42281b6cfc6cb39fd40263be8d4cc"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDAzNTYyOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOTowODoxMFrOGk8y9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOTowODoxMFrOGk8y9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5ODAwNQ==", "bodyText": "Same as above description.", "url": "https://github.com/alibaba/nacos/pull/3095#discussion_r441398005", "createdAt": "2020-06-17T09:08:10Z", "author": {"login": "KomachiSion"}, "path": "common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanFactory.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.http;\n+\n+import com.alibaba.nacos.common.http.client.NacosAsyncRestTemplate;\n+import com.alibaba.nacos.common.http.client.NacosRestTemplate;\n+import com.alibaba.nacos.common.utils.ExceptionUtil;\n+import com.alibaba.nacos.common.utils.ThreadUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+/**\n+ * Create a rest template\n+ * to ensure that each custom client config and rest template are in one-to-one correspondence\n+ *\n+ * @author mai.jh\n+ * @date 2020/6/16\n+ */\n+@SuppressWarnings(\"all\")\n+public final class HttpClientBeanFactory {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(HttpClientManager.class);\n+\n+    private static final int TIMEOUT = Integer.getInteger(\"nacos.http.timeout\", 5000);\n+\n+    private static HttpClientConfig HTTP_CLIENT_CONFIG = HttpClientConfig.builder()\n+        .setConTimeOutMillis(TIMEOUT).setReadTimeOutMillis(TIMEOUT >> 1).build();\n+\n+    private static final Map<String, NacosRestTemplate> singletonRest = new HashMap<String, NacosRestTemplate>(10);\n+    private static final Map<String, NacosAsyncRestTemplate> singletonAsyncRest = new HashMap<String, NacosAsyncRestTemplate>(10);\n+\n+    private static final AtomicBoolean alreadyShutdown = new AtomicBoolean(false);\n+\n+    static {\n+        ThreadUtils.addShutdownHook(new Runnable() {\n+            @Override\n+            public void run() {\n+                shutdown();\n+            }\n+        });\n+    }\n+\n+    public static NacosRestTemplate getNacosRestTemplate() {\n+        HttpClientFactory httpClientFactory = new DefaultHttpClientConfig();\n+        return getNacosRestTemplate(httpClientFactory);\n+    }\n+\n+    public static NacosRestTemplate getNacosRestTemplate(HttpClientFactory httpClientFactory) {\n+        if (httpClientFactory == null) {\n+            throw new NullPointerException(\"httpClientFactory is null\");\n+        }\n+        String factoryName = httpClientFactory.getClass().getName();\n+        NacosRestTemplate nacosRestTemplate = singletonRest.get(factoryName);\n+        if (nacosRestTemplate == null) {\n+            synchronized (singletonRest) {\n+                nacosRestTemplate = singletonRest.get(factoryName);\n+                if (nacosRestTemplate != null) {\n+                    return nacosRestTemplate;\n+                }\n+                nacosRestTemplate = httpClientFactory.createNacosRestTemplate();\n+                singletonRest.put(factoryName, nacosRestTemplate);\n+            }\n+        }\n+        return nacosRestTemplate;\n+    }\n+\n+    public static NacosAsyncRestTemplate getNacosAsyncRestTemplate() {\n+        HttpClientFactory httpClientFactory = new DefaultHttpClientConfig();\n+        return getNacosAsyncRestTemplate(httpClientFactory);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef7a135e9fd42281b6cfc6cb39fd40263be8d4cc"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDA3NDk0OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/http/AbstractHttpClientFactoryWrapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOToxODo0MlrOGk9MPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOToxODo0MlrOGk9MPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQwNDQ3Ng==", "bodyText": "AbstractHttpClientFactory is enough.", "url": "https://github.com/alibaba/nacos/pull/3095#discussion_r441404476", "createdAt": "2020-06-17T09:18:42Z", "author": {"login": "KomachiSion"}, "path": "common/src/main/java/com/alibaba/nacos/common/http/AbstractHttpClientFactoryWrapper.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.http;\n+\n+import com.alibaba.nacos.common.http.client.DefaultAsyncHttpClientRequest;\n+import com.alibaba.nacos.common.http.client.DefaultHttpClientRequest;\n+import com.alibaba.nacos.common.http.client.NacosAsyncRestTemplate;\n+import com.alibaba.nacos.common.http.client.NacosRestTemplate;\n+import org.apache.http.client.config.RequestConfig;\n+import org.apache.http.impl.client.HttpClients;\n+import org.apache.http.impl.nio.client.HttpAsyncClients;\n+\n+/**\n+ * AbstractHttpClientFactory\n+ * Let the creator only specify the http client config\n+ *\n+ * @author mai.jh\n+ * @date 2020/6/15\n+ */\n+public abstract class AbstractHttpClientFactoryWrapper implements HttpClientFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef7a135e9fd42281b6cfc6cb39fd40263be8d4cc"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDA3NzgxOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/com/alibaba/nacos/client/naming/net/NamingHttpClientManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOToxOTozM1rOGk9OGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOToxOTozM1rOGk9OGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQwNDk1NQ==", "bodyText": "NamingHttpClientFactory will be better. NamingHttpClientConfig make other think it is a config pojo.", "url": "https://github.com/alibaba/nacos/pull/3095#discussion_r441404955", "createdAt": "2020-06-17T09:19:33Z", "author": {"login": "KomachiSion"}, "path": "client/src/main/java/com/alibaba/nacos/client/naming/net/NamingHttpClientManager.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.client.naming.net;\n+\n+import com.alibaba.nacos.common.http.*;\n+import com.alibaba.nacos.common.http.client.NacosRestTemplate;\n+\n+/**\n+ * http Manager\n+ *\n+ * @author mai.jh\n+ * @date 2020/6/14\n+ */\n+public class NamingHttpClientManager {\n+\n+    private static final int READ_TIME_OUT_MILLIS = Integer\n+        .getInteger(\"com.alibaba.nacos.client.naming.rtimeout\", 50000);\n+    private static final int CON_TIME_OUT_MILLIS = Integer\n+        .getInteger(\"com.alibaba.nacos.client.naming.ctimeout\", 3000);\n+    private static final boolean ENABLE_HTTPS = Boolean\n+        .getBoolean(\"com.alibaba.nacos.client.naming.tls.enable\");\n+    private static final int MAX_REDIRECTS = 5;\n+\n+    private static final HttpClientFactory HTTP_CLIENT_FACTORY = new NamingHttpClientConfig();\n+\n+    public static String getPrefix() {\n+        if (ENABLE_HTTPS) {\n+            return \"https://\";\n+        }\n+        return \"http://\";\n+    }\n+\n+    public static NacosRestTemplate getNacosRestTemplate() {\n+        return HttpClientBeanFactory.getNacosRestTemplate(HTTP_CLIENT_FACTORY);\n+    }\n+\n+    private static class NamingHttpClientConfig extends AbstractHttpClientFactoryWrapper {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef7a135e9fd42281b6cfc6cb39fd40263be8d4cc"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDA4MjAwOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/http/DefaultHttpClientConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOToyMDoyOFrOGk9QiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOToyMDoyOFrOGk9QiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQwNTU3Nw==", "bodyText": "Same problem as NamingHttpClientConfig. DefaultHttpClientFactory will be better.", "url": "https://github.com/alibaba/nacos/pull/3095#discussion_r441405577", "createdAt": "2020-06-17T09:20:28Z", "author": {"login": "KomachiSion"}, "path": "common/src/main/java/com/alibaba/nacos/common/http/DefaultHttpClientConfig.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.http;\n+\n+/**\n+ * default http client factory\n+ *\n+ * @author mai.jh\n+ * @date 2020/6/15\n+ */\n+public class DefaultHttpClientConfig extends AbstractHttpClientFactoryWrapper {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef7a135e9fd42281b6cfc6cb39fd40263be8d4cc"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDA5MDI5OnYy", "diffSide": "RIGHT", "path": "example/src/main/java/com/alibaba/nacos/example/NamingExample.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOToyMjo0MlrOGk9V2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOToyMjo0MlrOGk9V2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQwNjkzOA==", "bodyText": "Why add this two blank line? Please remove.", "url": "https://github.com/alibaba/nacos/pull/3095#discussion_r441406938", "createdAt": "2020-06-17T09:22:42Z", "author": {"login": "KomachiSion"}, "path": "example/src/main/java/com/alibaba/nacos/example/NamingExample.java", "diffHunk": "@@ -55,4 +55,6 @@ public void onEvent(Event event) {\n             }\n         });\n     }\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef7a135e9fd42281b6cfc6cb39fd40263be8d4cc"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4419, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}