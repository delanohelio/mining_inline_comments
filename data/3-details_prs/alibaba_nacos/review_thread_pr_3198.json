{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMTc1MzEx", "number": 3198, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNjozMjo1OVrOEJjYmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwMToxNjo1NFrOENp0QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDUyMzc3OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/http/client/DefaultHttpClientRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNjozMjo1OVrOGqGhtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNjozMjo1OVrOGqGhtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwMDMxMA==", "bodyText": "I think the method name is not good.", "url": "https://github.com/alibaba/nacos/pull/3198#discussion_r446800310", "createdAt": "2020-06-29T06:32:59Z", "author": {"login": "KomachiSion"}, "path": "common/src/main/java/com/alibaba/nacos/common/http/client/DefaultHttpClientRequest.java", "diffHunk": "@@ -69,7 +71,24 @@ static HttpRequestBase build(URI uri, String method, RequestHttpEntity requestHt\n         } else {\n             httpMethod.initEntity(requestHttpEntity.getBody(), headers.getValue(HttpHeaderConsts.CONTENT_TYPE));\n         }\n-        return httpMethod.getRequestBase();\n+        HttpRequestBase requestBase = httpMethod.getRequestBase();\n+        getConfig(requestBase, requestHttpEntity.getHttpClientConfig());\n+        return requestBase;\n+    }\n+    \n+    /**\n+     * Replace the HTTP config created by default with the HTTP config specified in the request\n+     *\n+     * @param requestBase requestBase\n+     * @param httpClientConfig http config\n+     */\n+    private static void getConfig(HttpRequestBase requestBase, HttpClientConfig httpClientConfig) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "299b2f94ac1768096d3879b91803b88cf25cb190"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDU3NDAwOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/http/client/InterceptingHttpClientRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNjo1MTo1MlrOGqG-0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNjo1MTo1MlrOGqG-0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwNzc2Mw==", "bodyText": "iterator is a abstract name, use interceptors maybe better.", "url": "https://github.com/alibaba/nacos/pull/3198#discussion_r446807763", "createdAt": "2020-06-29T06:51:52Z", "author": {"login": "KomachiSion"}, "path": "common/src/main/java/com/alibaba/nacos/common/http/client/InterceptingHttpClientRequest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.http.client;\n+\n+import com.alibaba.nacos.common.model.RequestHttpEntity;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.Iterator;\n+\n+/**\n+ * Wrap http client request and perform corresponding interception\n+ *\n+ * @author mai.jh\n+ */\n+public class InterceptingHttpClientRequest implements HttpClientRequest {\n+    \n+    private final HttpClientRequest httpClientRequest;\n+    \n+    private final Iterator<HttpClientRequestInterceptor> iterator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "299b2f94ac1768096d3879b91803b88cf25cb190"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDYwOTExOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzowMzo0MVrOGqHTMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzowMzo0MVrOGqHTMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgxMjk3OQ==", "bodyText": "change this constructer as this(null, header, query, null)?", "url": "https://github.com/alibaba/nacos/pull/3198#discussion_r446812979", "createdAt": "2020-06-29T07:03:41Z", "author": {"login": "KomachiSion"}, "path": "common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java", "diffHunk": "@@ -31,19 +32,36 @@\n     \n     private final Header headers = Header.newInstance();\n     \n+    private final HttpClientConfig httpClientConfig;\n+    \n     private final Query query;\n     \n     private Object body;\n     \n     public RequestHttpEntity(Header header, Query query) {\n         handleHeader(header);\n         this.query = query;\n+        this.httpClientConfig = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "299b2f94ac1768096d3879b91803b88cf25cb190"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDYxMDEzOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzowNDowMlrOGqHTxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzowNDowMlrOGqHTxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgxMzEyNA==", "bodyText": "change this constructer as this(httpClientConfig, header, query, null)?", "url": "https://github.com/alibaba/nacos/pull/3198#discussion_r446813124", "createdAt": "2020-06-29T07:04:02Z", "author": {"login": "KomachiSion"}, "path": "common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java", "diffHunk": "@@ -31,19 +32,36 @@\n     \n     private final Header headers = Header.newInstance();\n     \n+    private final HttpClientConfig httpClientConfig;\n+    \n     private final Query query;\n     \n     private Object body;\n     \n     public RequestHttpEntity(Header header, Query query) {\n         handleHeader(header);\n         this.query = query;\n+        this.httpClientConfig = null;\n+    }\n+    \n+    public RequestHttpEntity(HttpClientConfig httpClientConfig, Header header, Query query) {\n+        handleHeader(header);\n+        this.httpClientConfig = httpClientConfig;\n+        this.query = query;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "299b2f94ac1768096d3879b91803b88cf25cb190"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDYxMDc0OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzowNDoxNlrOGqHUKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzowNDoxNlrOGqHUKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgxMzIyNw==", "bodyText": "change this constructer as this(null, header, query, body)?", "url": "https://github.com/alibaba/nacos/pull/3198#discussion_r446813227", "createdAt": "2020-06-29T07:04:16Z", "author": {"login": "KomachiSion"}, "path": "common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java", "diffHunk": "@@ -31,19 +32,36 @@\n     \n     private final Header headers = Header.newInstance();\n     \n+    private final HttpClientConfig httpClientConfig;\n+    \n     private final Query query;\n     \n     private Object body;\n     \n     public RequestHttpEntity(Header header, Query query) {\n         handleHeader(header);\n         this.query = query;\n+        this.httpClientConfig = null;\n+    }\n+    \n+    public RequestHttpEntity(HttpClientConfig httpClientConfig, Header header, Query query) {\n+        handleHeader(header);\n+        this.httpClientConfig = httpClientConfig;\n+        this.query = query;\n     }\n     \n     public RequestHttpEntity(Header header, Query query, Object body) {\n         handleHeader(header);\n         this.query = query;\n         this.body = body;\n+        this.httpClientConfig = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "299b2f94ac1768096d3879b91803b88cf25cb190"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDY2MTQ0OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/http/client/InterceptingHttpClientRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzoyMToxNFrOGqHy1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzoyMToxNFrOGqHy1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgyMTA3Ng==", "bodyText": "the Iterate method is too obscure, I suggest change this method.", "url": "https://github.com/alibaba/nacos/pull/3198#discussion_r446821076", "createdAt": "2020-06-29T07:21:14Z", "author": {"login": "KomachiSion"}, "path": "common/src/main/java/com/alibaba/nacos/common/http/client/InterceptingHttpClientRequest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.http.client;\n+\n+import com.alibaba.nacos.common.model.RequestHttpEntity;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.Iterator;\n+\n+/**\n+ * Wrap http client request and perform corresponding interception\n+ *\n+ * @author mai.jh\n+ */\n+public class InterceptingHttpClientRequest implements HttpClientRequest {\n+    \n+    private final HttpClientRequest httpClientRequest;\n+    \n+    private final Iterator<HttpClientRequestInterceptor> iterator;\n+    \n+    public InterceptingHttpClientRequest(HttpClientRequest httpClientRequest,\n+            Iterator<HttpClientRequestInterceptor> iterator) {\n+        this.httpClientRequest = httpClientRequest;\n+        this.iterator = iterator;\n+    }\n+    \n+    @Override\n+    public HttpClientResponse execute(URI uri, String httpMethod, RequestHttpEntity requestHttpEntity)\n+            throws Exception {\n+        if (iterator.hasNext()) {\n+            HttpClientRequestInterceptor nextInterceptor = iterator.next();\n+            return nextInterceptor.intercept(uri, httpMethod, requestHttpEntity, this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09aa8f97000982253ab4a673a6f4111035073b30"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzUyMDY0OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwMToxNjo1NFrOGwYuAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwMzoyMzo1OFrOGwaQaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM4OTgyNQ==", "bodyText": "Should we print the interceptor name or class name?", "url": "https://github.com/alibaba/nacos/pull/3198#discussion_r453389825", "createdAt": "2020-07-13T01:16:54Z", "author": {"login": "KomachiSion"}, "path": "common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java", "diffHunk": "@@ -336,6 +460,16 @@ public NacosRestTemplate(HttpClientRequest requestClient) {\n         }\n     }\n     \n+    private HttpClientRequest requestClient() {\n+        if (CollectionUtils.isNotEmpty(interceptors)) {\n+            if (LOGGER.isDebugEnabled()) {\n+                LOGGER.debug(\"Execute via interceptor\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2abb429da398d56943c98b5fd071e6e6071367c4"}, "originalPosition": 204}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxNTAxNw==", "bodyText": "okay", "url": "https://github.com/alibaba/nacos/pull/3198#discussion_r453415017", "createdAt": "2020-07-13T03:23:58Z", "author": {"login": "Maijh97"}, "path": "common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java", "diffHunk": "@@ -336,6 +460,16 @@ public NacosRestTemplate(HttpClientRequest requestClient) {\n         }\n     }\n     \n+    private HttpClientRequest requestClient() {\n+        if (CollectionUtils.isNotEmpty(interceptors)) {\n+            if (LOGGER.isDebugEnabled()) {\n+                LOGGER.debug(\"Execute via interceptor\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM4OTgyNQ=="}, "originalCommit": {"oid": "2abb429da398d56943c98b5fd071e6e6071367c4"}, "originalPosition": 204}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4445, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}