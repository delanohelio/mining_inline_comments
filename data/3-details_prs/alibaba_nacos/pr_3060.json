{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzOTkzNDY3", "number": 3060, "title": "Upgrade the database driver version of Mysql to 8 # 3036 #2993 #1868", "bodyText": "What is the purpose of the change\nUpgrade the database driver version of Mysql to 8\nBrief changelog\n\nUpgrade the database driver version of Mysql to 8\nOptimize data source configuration code\n\n#3036\n#2993\n#2676\n#1868\nVerifying this change\n\nUpgrade the database driver version of Mysql to 8\nOptimize data source configuration code\n\nFollow this checklist to help us incorporate your contribution quickly and easily:\n\n Make sure there is a Github issue filed for the change (usually before you start working on it). Trivial changes like typos do not require a Github issue. Your pull request should address just this issue, without pulling in other changes - one PR resolves one issue.\n Format the pull request title like [ISSUE #123] Fix UnknownException when host config not exist. Each commit in the pull request should have a meaningful subject line and body.\n Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n Write necessary unit-test to verify your logic correction, more mock a little better when cross module dependency exist. If the new feature or significant change is committed, please remember to add integration-test in test module.\n Run mvn -B clean package apache-rat:check findbugs:findbugs -Dmaven.test.skip=true to make sure basic checks pass. Run mvn clean install -DskipITs to make sure unit-test pass. Run mvn clean test-compile failsafe:integration-test  to make sure integration-test pass.", "createdAt": "2020-06-13T11:16:05Z", "url": "https://github.com/alibaba/nacos/pull/3060", "merged": true, "mergeCommit": {"oid": "1323de0db85f46c7fa03712561a2e626d478d0cf"}, "closed": true, "closedAt": "2020-06-15T02:40:20Z", "author": {"login": "paderlol"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcq1bAVAH2gAyNDMzOTkzNDY3OjFiNTVlNjhmZDQxOTcyODc4ZmY4ZDgyM2Y3ZGZjZWE2YTIzZWViMWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrXYpnAFqTQzMDI5MDI4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1b55e68fd41972878ff8d823f7dfcea6a23eeb1f", "author": {"user": {"login": "paderlol", "name": "paderlol"}}, "url": "https://github.com/alibaba/nacos/commit/1b55e68fd41972878ff8d823f7dfcea6a23eeb1f", "committedDate": "2020-06-13T11:05:22Z", "message": "Upgrade the database driver version of Mysql to 8 # 3036 #2993 #1868"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMTM1MjQw", "url": "https://github.com/alibaba/nacos/pull/3060#pullrequestreview-430135240", "createdAt": "2020-06-13T12:13:30Z", "commit": {"oid": "1b55e68fd41972878ff8d823f7dfcea6a23eeb1f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxMjoxMzozMVrOGjXRTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxMjoxMzozMVrOGjXRTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTczNDYwNw==", "bodyText": "\u6211\u89c9\u5f97\u8fd9\u4e2a\u5de5\u5177\u662f\u4e0d\u662f\u53ef\u4ee5\u4e0b\u6c89\u5230CollectionUtils\u91cc\u9762\uff1f", "url": "https://github.com/alibaba/nacos/pull/3060#discussion_r439734607", "createdAt": "2020-06-13T12:13:31Z", "author": {"login": "chuntaojun"}, "path": "config/src/main/java/com/alibaba/nacos/config/server/service/datasource/ExternalDataSourceProperties.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package com.alibaba.nacos.config.server.service.datasource;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.commons.collections.CollectionUtils;\n+import org.springframework.boot.context.properties.bind.Bindable;\n+import org.springframework.boot.context.properties.bind.Binder;\n+import org.springframework.core.env.Environment;\n+\n+import com.google.common.base.Preconditions;\n+import com.zaxxer.hikari.HikariDataSource;\n+\n+/**\n+ * Properties of external DataSource\n+ *\n+ * @author Nacos\n+ */\n+public class ExternalDataSourceProperties {\n+\n+    private final static String JDBC_DRIVER_NAME = \"com.mysql.cj.jdbc.Driver\";\n+    public static final long CONNECTION_TIMEOUT_MS = 3000L;\n+    public static final long VALIDATION_TIMEOUT = 10L;\n+    public static final String TEST_QUERY = \"SELECT 1 FROM dual\";\n+    public static final int DEFAULT_MAX_POOL_SIZE = 20;\n+    public static final int DEFAULT_MINIMUM_IDLE = 50;\n+\n+    private Integer num;\n+    private List<String> url = new ArrayList<>();\n+    private List<String> user = new ArrayList<>();\n+    private List<String> password = new ArrayList<>();\n+    private List<Integer> maxPoolSize = new ArrayList<>();\n+    private List<Integer> minIdle = new ArrayList<>();\n+\n+    public void setNum(Integer num) {\n+        this.num = num;\n+    }\n+\n+    public void setUrl(List<String> url) {\n+        this.url = url;\n+    }\n+\n+    public void setUser(List<String> user) {\n+        this.user = user;\n+    }\n+\n+    public void setPassword(List<String> password) {\n+        this.password = password;\n+    }\n+\n+    public void setMaxPoolSize(List<Integer> maxPoolSize) {\n+        this.maxPoolSize = maxPoolSize;\n+    }\n+\n+    public void setMinIdle(List<Integer> minIdle) {\n+        this.minIdle = minIdle;\n+    }\n+\n+    /**\n+     *\n+     * @param environment\n+     *            {@link Environment}\n+     * @param callback\n+     *            Callback function when constructing data source\n+     * @return List of {@link HikariDataSource}\n+     */\n+    List<HikariDataSource> build(Environment environment, Callback<HikariDataSource> callback) {\n+        List<HikariDataSource> dataSources = new ArrayList<>();\n+        Binder.get(environment).bind(\"db\", Bindable.ofInstance(this));\n+        Preconditions.checkArgument(Objects.nonNull(num), \"db.num is null\");\n+        Preconditions.checkArgument(CollectionUtils.isNotEmpty(user), \"db.user or db.user.[index] is null\");\n+        Preconditions.checkArgument(CollectionUtils.isNotEmpty(password), \"db.password or db.password.[index] is null\");\n+        for (int index = 0; index < num; index++) {\n+            int currentSize = index + 1;\n+            Preconditions.checkArgument(url.size() >= currentSize, \"db.url.%s is null\", index);\n+            HikariDataSource ds = new HikariDataSource();\n+            ds.setDriverClassName(JDBC_DRIVER_NAME);\n+            ds.setJdbcUrl(url.get(index).trim());\n+            ds.setUsername(defaultIfNull(user, index, user.get(0)).trim());\n+            ds.setPassword(defaultIfNull(password, index, password.get(0)).trim());\n+            ds.setConnectionTimeout(CONNECTION_TIMEOUT_MS);\n+            ds.setMaximumPoolSize(defaultIfNull(maxPoolSize, index, DEFAULT_MAX_POOL_SIZE));\n+            ds.setMinimumIdle(defaultIfNull(minIdle, index, DEFAULT_MINIMUM_IDLE));\n+            // Check the connection pool every 10 minutes\n+            ds.setValidationTimeout(TimeUnit.MINUTES.toMillis(VALIDATION_TIMEOUT));\n+            ds.setConnectionTestQuery(TEST_QUERY);\n+            dataSources.add(ds);\n+            callback.accept(ds);\n+        }\n+        Preconditions.checkArgument(CollectionUtils.isNotEmpty(dataSources), \"no datasource available\");\n+        return dataSources;\n+    }\n+\n+    static <T> T defaultIfNull(List<T> collection, int index, T defaultValue) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b55e68fd41972878ff8d823f7dfcea6a23eeb1f"}, "originalPosition": 108}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf6b4c4f0e2837923d583aa207486baaf5085623", "author": {"user": {"login": "paderlol", "name": "paderlol"}}, "url": "https://github.com/alibaba/nacos/commit/cf6b4c4f0e2837923d583aa207486baaf5085623", "committedDate": "2020-06-13T14:06:04Z", "message": "Tool method extract"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMTQzNjEz", "url": "https://github.com/alibaba/nacos/pull/3060#pullrequestreview-430143613", "createdAt": "2020-06-13T14:38:41Z", "commit": {"oid": "cf6b4c4f0e2837923d583aa207486baaf5085623"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "768713ec05f7fa9f51a337446184ef47baaba1b4", "author": {"user": {"login": "paderlol", "name": "paderlol"}}, "url": "https://github.com/alibaba/nacos/commit/768713ec05f7fa9f51a337446184ef47baaba1b4", "committedDate": "2020-06-14T09:18:17Z", "message": "Merge branch 'develop' of https://github.com/alibaba/nacos into develop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8295a3ef96d32de9123e252c6b8bb13215226ee0", "author": {"user": {"login": "paderlol", "name": "paderlol"}}, "url": "https://github.com/alibaba/nacos/commit/8295a3ef96d32de9123e252c6b8bb13215226ee0", "committedDate": "2020-06-14T09:55:25Z", "message": "Add ut for ExternalDataSourceProperties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "477e0ad1f331004d30c2809d3c9106cd3ec005a4", "author": {"user": {"login": "paderlol", "name": "paderlol"}}, "url": "https://github.com/alibaba/nacos/commit/477e0ad1f331004d30c2809d3c9106cd3ec005a4", "committedDate": "2020-06-14T09:57:33Z", "message": "Add license for ExternalDataSourceProperties"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMjA2NTE3", "url": "https://github.com/alibaba/nacos/pull/3060#pullrequestreview-430206517", "createdAt": "2020-06-14T10:30:47Z", "commit": {"oid": "477e0ad1f331004d30c2809d3c9106cd3ec005a4"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "855a637ac5e36fe3abb0bbba19e7e6d871bed16c", "author": {"user": {"login": "paderlol", "name": "paderlol"}}, "url": "https://github.com/alibaba/nacos/commit/855a637ac5e36fe3abb0bbba19e7e6d871bed16c", "committedDate": "2020-06-14T11:11:54Z", "message": "Fix word spelling errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMjkwMjg2", "url": "https://github.com/alibaba/nacos/pull/3060#pullrequestreview-430290286", "createdAt": "2020-06-15T02:39:34Z", "commit": {"oid": "855a637ac5e36fe3abb0bbba19e7e6d871bed16c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4351, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}