{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwNDg0NjA0", "number": 3763, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMzowNToxMFrOEgxByw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMzowNjo0N1rOEgxCrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzkzMTYzOnYy", "diffSide": "RIGHT", "path": "naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMzowNToxMFrOHNu16Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMzowNToxMFrOHNu16Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2MTAwMQ==", "bodyText": "In this part, I suggest that you refactor like following:\nif (!result.ok()) {\n    Loggers.RAFT.warn(...);\n    return;\n}\n\nthe other codes do not changed except remove `return 0`", "url": "https://github.com/alibaba/nacos/pull/3763#discussion_r484161001", "createdAt": "2020-09-07T03:05:10Z", "author": {"login": "KomachiSion"}, "path": "naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java", "diffHunk": "@@ -287,21 +294,28 @@ public void signalDelete(final String key) throws Exception {\n             \n             for (final String server : peers.allServersWithoutMySelf()) {\n                 String url = buildUrl(server, API_ON_DEL);\n-                HttpClient.asyncHttpDeleteLarge(url, null, json.toString(), new AsyncCompletionHandler<Integer>() {\n+                asyncRestTemplate.delete(url, Header.EMPTY, json.toString(), String.class, new Callback<String>() {\n                     @Override\n-                    public Integer onCompleted(Response response) throws Exception {\n-                        if (response.getStatusCode() != HttpURLConnection.HTTP_OK) {\n+                    public void onReceive(RestResult<String> result) {\n+                        if (result.ok()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92152fef6bac447a3b7b77e94f3ba025917ddba5"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzkzMzMzOnYy", "diffSide": "RIGHT", "path": "naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMzowNjoxN1rOHNu21A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMzowNjoxN1rOHNu21A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2MTIzNg==", "bodyText": "Same suggest as above. Otherwise others code do not change in fact, but the author changed.", "url": "https://github.com/alibaba/nacos/pull/3763#discussion_r484161236", "createdAt": "2020-09-07T03:06:17Z", "author": {"login": "KomachiSion"}, "path": "naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java", "diffHunk": "@@ -458,22 +472,29 @@ private void sendVote() {\n             for (final String server : peers.allServersWithoutMySelf()) {\n                 final String url = buildUrl(server, API_VOTE);\n                 try {\n-                    HttpClient.asyncHttpPost(url, null, params, new AsyncCompletionHandler<Integer>() {\n+                    asyncRestTemplate.postForm(url, Header.EMPTY, params, String.class, new Callback<String>() {\n                         @Override\n-                        public Integer onCompleted(Response response) throws Exception {\n-                            if (response.getStatusCode() != HttpURLConnection.HTTP_OK) {\n-                                Loggers.RAFT\n-                                        .error(\"NACOS-RAFT vote failed: {}, url: {}\", response.getResponseBody(), url);\n-                                return 1;\n+                        public void onReceive(RestResult<String> result) {\n+                            if (result.ok()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92152fef6bac447a3b7b77e94f3ba025917ddba5"}, "originalPosition": 147}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzkzMzc2OnYy", "diffSide": "RIGHT", "path": "naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMzowNjozOVrOHNu3Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMzowNjozOVrOHNu3Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2MTI5NQ==", "bodyText": "Same suggest as above.", "url": "https://github.com/alibaba/nacos/pull/3763#discussion_r484161295", "createdAt": "2020-09-07T03:06:39Z", "author": {"login": "KomachiSion"}, "path": "naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java", "diffHunk": "@@ -605,29 +626,35 @@ private void sendBeat() throws IOException, InterruptedException {\n                     if (Loggers.RAFT.isDebugEnabled()) {\n                         Loggers.RAFT.debug(\"send beat to server \" + server);\n                     }\n-                    HttpClient.asyncHttpPostLarge(url, null, compressedBytes, new AsyncCompletionHandler<Integer>() {\n-                        @Override\n-                        public Integer onCompleted(Response response) throws Exception {\n-                            if (response.getStatusCode() != HttpURLConnection.HTTP_OK) {\n-                                Loggers.RAFT.error(\"NACOS-RAFT beat failed: {}, peer: {}\", response.getResponseBody(),\n-                                        server);\n-                                MetricsMonitor.getLeaderSendBeatFailedException().increment();\n-                                return 1;\n-                            }\n-                            \n-                            peers.update(JacksonUtils.toObj(response.getResponseBody(), RaftPeer.class));\n-                            if (Loggers.RAFT.isDebugEnabled()) {\n-                                Loggers.RAFT.debug(\"receive beat response from: {}\", url);\n-                            }\n-                            return 0;\n-                        }\n-                        \n-                        @Override\n-                        public void onThrowable(Throwable t) {\n-                            Loggers.RAFT.error(\"NACOS-RAFT error while sending heart-beat to peer: {} {}\", server, t);\n-                            MetricsMonitor.getLeaderSendBeatFailedException().increment();\n-                        }\n-                    });\n+                    asyncRestTemplate.post(url, Header.newInstance(), Query.EMPTY, compressedBytes, String.class,\n+                            new Callback<String>() {\n+                                @Override\n+                                public void onReceive(RestResult<String> result) {\n+                                    if (result.ok()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92152fef6bac447a3b7b77e94f3ba025917ddba5"}, "originalPosition": 209}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzkzMzg5OnYy", "diffSide": "RIGHT", "path": "naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMzowNjo0N1rOHNu3Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMzowNjo0N1rOHNu3Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2MTMxNQ==", "bodyText": "Same suggest as above.", "url": "https://github.com/alibaba/nacos/pull/3763#discussion_r484161315", "createdAt": "2020-09-07T03:06:47Z", "author": {"login": "KomachiSion"}, "path": "naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java", "diffHunk": "@@ -745,88 +772,103 @@ public RaftPeer receivedBeat(JsonNode beat) throws Exception {\n                             processedCount, beatDatums.size(), datums.size());\n                     \n                     // update datum entry\n-                    String url = buildUrl(remote.ip, API_GET) + \"?keys=\" + URLEncoder.encode(keys, \"UTF-8\");\n-                    HttpClient.asyncHttpGet(url, null, null, new AsyncCompletionHandler<Integer>() {\n-                        @Override\n-                        public Integer onCompleted(Response response) throws Exception {\n-                            if (response.getStatusCode() != HttpURLConnection.HTTP_OK) {\n-                                return 1;\n-                            }\n-                            \n-                            List<JsonNode> datumList = JacksonUtils\n-                                    .toObj(response.getResponseBody(), new TypeReference<List<JsonNode>>() {\n-                                    });\n-                            \n-                            for (JsonNode datumJson : datumList) {\n-                                Datum newDatum = null;\n-                                OPERATE_LOCK.lock();\n-                                try {\n-                                    \n-                                    Datum oldDatum = getDatum(datumJson.get(\"key\").asText());\n-                                    \n-                                    if (oldDatum != null && datumJson.get(\"timestamp\").asLong() <= oldDatum.timestamp\n-                                            .get()) {\n-                                        Loggers.RAFT\n-                                                .info(\"[NACOS-RAFT] timestamp is smaller than that of mine, key: {}, remote: {}, local: {}\",\n-                                                        datumJson.get(\"key\").asText(),\n-                                                        datumJson.get(\"timestamp\").asLong(), oldDatum.timestamp);\n-                                        continue;\n+                    String url = buildUrl(remote.ip, API_GET);\n+                    asyncRestTemplate.get(url, Header.EMPTY, Query.newInstance().addParam(\"keys\", keys), String.class,\n+                            new Callback<String>() {\n+                                @Override\n+                                public void onReceive(RestResult<String> result) {\n+                                    if (result.ok()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92152fef6bac447a3b7b77e94f3ba025917ddba5"}, "originalPosition": 272}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4349, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}