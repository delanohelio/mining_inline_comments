{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxMTQ0NDY2", "number": 3773, "reviewThreads": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzo0Njo1MFrOEg0cJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMjo0ODozMVrOE1DY0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODQ5MDYwOnYy", "diffSide": "RIGHT", "path": "address/src/main/java/com/alibaba/nacos/address/util/AddressServerParamCheckUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzo0Njo1MFrOHNz8Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzo0Njo1MFrOHNz8Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI0NDU4Mw==", "bodyText": "It is best Util class not to depend on Util class.\nI see AddressServerParamCheckUtil only one method, I think it can be merged into IpUtil.", "url": "https://github.com/alibaba/nacos/pull/3773#discussion_r484244583", "createdAt": "2020-09-07T07:46:50Z", "author": {"login": "KomachiSion"}, "path": "address/src/main/java/com/alibaba/nacos/address/util/AddressServerParamCheckUtil.java", "diffHunk": "@@ -16,8 +16,7 @@\n \n package com.alibaba.nacos.address.util;\n \n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n+import com.alibaba.nacos.common.utils.IpUtil;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "938b8f404792dcf3b12e801d5254c05f12f996e5"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODU0OTE5OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/utils/IpUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzo1NTozN1rOHN0d7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzo1NTozN1rOHN0d7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI1MzE2NQ==", "bodyText": "Remove unused codes", "url": "https://github.com/alibaba/nacos/pull/3773#discussion_r484253165", "createdAt": "2020-09-07T07:55:37Z", "author": {"login": "KomachiSion"}, "path": "common/src/main/java/com/alibaba/nacos/common/utils/IpUtil.java", "diffHunk": "@@ -0,0 +1,175 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.utils;\n+\n+import java.net.InetAddress;\n+import java.net.UnknownHostException;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+/**\n+ * ip tool.\n+ *\n+ * @author Nacos\n+ */\n+public class IpUtil {\n+    \n+    public static final boolean PREFER_IPV6_ADDRESSES = Boolean.parseBoolean(System.getProperty(\"java.net.preferIPv6Addresses\"));\n+    \n+    public static final String IPV6_START_MARK = \"[\";\n+    \n+    public static final String IPV6_END_MARK = \"]\";\n+    \n+    public static final int SPLIT_IP_PORT_RESULT_LENGTH = 2;\n+    \n+    private static final String LOCAL_HOST_IP_V4 = \"127.0.0.1\";\n+    \n+    private static final String LOCAL_HOST_IP_V6 = \"[::1]\";\n+    \n+    private static Pattern ipv4Pattern = Pattern.compile(\"\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\");\n+    \n+    /**\n+     * get localhost ip.\n+     * @return java.lang.String\n+     */\n+    public static String localHostIp() {\n+        if (PREFER_IPV6_ADDRESSES) {\n+            return LOCAL_HOST_IP_V6;\n+        }\n+        return LOCAL_HOST_IP_V4;\n+    }\n+    \n+    /**\n+     * check whether the ip address is IPv4.\n+     *\n+     * @param addr ip address\n+     * @return boolean\n+     */\n+    public static boolean isIpv4(String addr) {\n+        try {\n+            return InetAddress.getByName(addr).getAddress().length == 4;\n+        } catch (UnknownHostException e) {\n+            return false;\n+        }\n+    }\n+    \n+    /**\n+     * check whether the ip address is IPv6.\n+     *\n+     * @param addr ip address\n+     * @return boolean\n+     */\n+    public static boolean isIpv6(String addr) {\n+        try {\n+            return InetAddress.getByName(addr).getAddress().length == 16;\n+        } catch (UnknownHostException e) {\n+            return false;\n+        }\n+    }\n+    \n+    /**\n+     * check whether the str is ip address (IPv4 or IPv6).\n+     *\n+     * @param addr ip address str\n+     * @return boolean\n+     */\n+    public static boolean isIp(String addr) {\n+        try {\n+            InetAddress.getByName(addr);\n+            return true;\n+        } catch (UnknownHostException e) {\n+            return false;\n+        }\n+    }\n+    \n+    /**\n+     * Check if the address contains a port.\n+     * 2020/9/3 14:53\n+     * @param address address string\n+     * @return boolean\n+     */\n+    public static boolean containsPort(String address) {\n+        return splitIpPortStr(address).length == 2;\n+    }\n+    \n+    /**\n+     * Split IP and port strings, support IPv4 and IPv6, IP in IPv6 must be enclosed with [].\n+     *\n+     * @param str ip and port string\n+     * @return java.lang.String[]\n+     */\n+    public static String[] splitIpPortStr(String str) {\n+        if (StringUtils.isBlank(str)) {\n+            throw new IllegalArgumentException(\"ip and port string cannot be empty!\");\n+        }\n+        String[] serverAddrArr;\n+        if (str.startsWith(IPV6_START_MARK) && StringUtils.containsIgnoreCase(str, IPV6_END_MARK)) {\n+            if (str.endsWith(IPV6_END_MARK)) {\n+                serverAddrArr = new String[1];\n+                serverAddrArr[0] = str;\n+            } else {\n+                serverAddrArr = new String[2];\n+                serverAddrArr[0] = str.substring(0, (str.indexOf(IPV6_END_MARK) + 1));\n+                serverAddrArr[1] = str.substring((str.indexOf(IPV6_END_MARK) + 2));\n+            }\n+            if (!isIpv6(serverAddrArr[0])) {\n+                throw new IllegalArgumentException(\"The IPv6 address(\\\"\" + serverAddrArr[0] + \"\\\") is incorrect.\");\n+            }\n+        } else {\n+            serverAddrArr = str.split(\":\");\n+            if (serverAddrArr.length > SPLIT_IP_PORT_RESULT_LENGTH) {\n+                throw new IllegalArgumentException(\"The IP address(\\\"\" + str\n+                        + \"\\\") is incorrect. If it is an IPv6 address, please use [] to enclose the IP part!\");\n+            }\n+            if (!isIpv4(serverAddrArr[0])) {\n+                throw new IllegalArgumentException(\"The IPv4 address(\\\"\" + serverAddrArr[0] + \"\\\") is incorrect.\");\n+            }\n+        }\n+        return serverAddrArr;\n+    }\n+    \n+    /**\n+     * Resolve the IP from the string containing the IP address.\n+     * @param str string containing IP address\n+     * @return java.lang.String\n+     */\n+    public static String getIpFromString(String str) {\n+        if (StringUtils.isBlank(str)) {\n+            return \"\";\n+        }\n+        String result = \"\";\n+        if (StringUtils.containsIgnoreCase(str, IPV6_START_MARK) && StringUtils.containsIgnoreCase(str, IPV6_END_MARK)) {\n+            result = str.substring(str.indexOf(IPV6_START_MARK), (str.indexOf(IPV6_END_MARK) + 1));\n+            if (!isIpv6(result)) {\n+                result = \"\";\n+                //throw new IllegalArgumentException(\"The IPv6 address(\\\"\" + result + \"\\\") is incorrect.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "938b8f404792dcf3b12e801d5254c05f12f996e5"}, "originalPosition": 159}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODYxMjc5OnYy", "diffSide": "RIGHT", "path": "naming/src/main/java/com/alibaba/nacos/naming/core/Instance.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwODowOToxOFrOHN1EMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwODowOToxOFrOHN1EMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI2Mjk2Mg==", "bodyText": "Is the same behavior when provider without port like 11.11.11.11 ?", "url": "https://github.com/alibaba/nacos/pull/3773#discussion_r484262962", "createdAt": "2020-09-07T08:09:18Z", "author": {"login": "KomachiSion"}, "path": "naming/src/main/java/com/alibaba/nacos/naming/core/Instance.java", "diffHunk": "@@ -117,19 +115,18 @@ public static Instance fromString(String config) {\n         }\n         \n         String provider = ipAddressAttributes[0];\n-        Matcher matcher = IP_PATTERN.matcher(provider);\n-        if (!matcher.matches()) {\n+        String[] providerAddr = IpUtil.splitIpPortStr(provider);\n+        if (providerAddr.length != IpUtil.SPLIT_IP_PORT_RESULT_LENGTH) {\n+            // not ip:port string", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "938b8f404792dcf3b12e801d5254c05f12f996e5"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODYyNDUxOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/utils/IpUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwODoxMjo0MVrOHN1LLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwODoxMjo0MVrOHN1LLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI2NDc1MA==", "bodyText": "Can 2 replaced with SPLIT_IP_PORT_RESULT_LENGTH", "url": "https://github.com/alibaba/nacos/pull/3773#discussion_r484264750", "createdAt": "2020-09-07T08:12:41Z", "author": {"login": "KomachiSion"}, "path": "common/src/main/java/com/alibaba/nacos/common/utils/IpUtil.java", "diffHunk": "@@ -0,0 +1,175 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.utils;\n+\n+import java.net.InetAddress;\n+import java.net.UnknownHostException;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+/**\n+ * ip tool.\n+ *\n+ * @author Nacos\n+ */\n+public class IpUtil {\n+    \n+    public static final boolean PREFER_IPV6_ADDRESSES = Boolean.parseBoolean(System.getProperty(\"java.net.preferIPv6Addresses\"));\n+    \n+    public static final String IPV6_START_MARK = \"[\";\n+    \n+    public static final String IPV6_END_MARK = \"]\";\n+    \n+    public static final int SPLIT_IP_PORT_RESULT_LENGTH = 2;\n+    \n+    private static final String LOCAL_HOST_IP_V4 = \"127.0.0.1\";\n+    \n+    private static final String LOCAL_HOST_IP_V6 = \"[::1]\";\n+    \n+    private static Pattern ipv4Pattern = Pattern.compile(\"\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\");\n+    \n+    /**\n+     * get localhost ip.\n+     * @return java.lang.String\n+     */\n+    public static String localHostIp() {\n+        if (PREFER_IPV6_ADDRESSES) {\n+            return LOCAL_HOST_IP_V6;\n+        }\n+        return LOCAL_HOST_IP_V4;\n+    }\n+    \n+    /**\n+     * check whether the ip address is IPv4.\n+     *\n+     * @param addr ip address\n+     * @return boolean\n+     */\n+    public static boolean isIpv4(String addr) {\n+        try {\n+            return InetAddress.getByName(addr).getAddress().length == 4;\n+        } catch (UnknownHostException e) {\n+            return false;\n+        }\n+    }\n+    \n+    /**\n+     * check whether the ip address is IPv6.\n+     *\n+     * @param addr ip address\n+     * @return boolean\n+     */\n+    public static boolean isIpv6(String addr) {\n+        try {\n+            return InetAddress.getByName(addr).getAddress().length == 16;\n+        } catch (UnknownHostException e) {\n+            return false;\n+        }\n+    }\n+    \n+    /**\n+     * check whether the str is ip address (IPv4 or IPv6).\n+     *\n+     * @param addr ip address str\n+     * @return boolean\n+     */\n+    public static boolean isIp(String addr) {\n+        try {\n+            InetAddress.getByName(addr);\n+            return true;\n+        } catch (UnknownHostException e) {\n+            return false;\n+        }\n+    }\n+    \n+    /**\n+     * Check if the address contains a port.\n+     * 2020/9/3 14:53\n+     * @param address address string\n+     * @return boolean\n+     */\n+    public static boolean containsPort(String address) {\n+        return splitIpPortStr(address).length == 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "938b8f404792dcf3b12e801d5254c05f12f996e5"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODYyNjI5OnYy", "diffSide": "RIGHT", "path": "naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwODoxMzoxMFrOHN1MTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwODoxMzoxMFrOHN1MTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI2NTAzNw==", "bodyText": "replaced with IpUtil.containPort?", "url": "https://github.com/alibaba/nacos/pull/3773#discussion_r484265037", "createdAt": "2020-09-07T08:13:10Z", "author": {"login": "KomachiSion"}, "path": "naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java", "diffHunk": "@@ -796,7 +797,8 @@ public int getPagedService(String namespaceId, int startPage, int pageSize, Stri\n                 contained = false;\n                 List<Instance> instances = service.allIPs();\n                 for (Instance instance : instances) {\n-                    if (containedInstance.contains(\":\")) {\n+                    String[] containedInstanceIpPort = IpUtil.splitIpPortStr(containedInstance);\n+                    if (containedInstanceIpPort.length == IpUtil.SPLIT_IP_PORT_RESULT_LENGTH) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "938b8f404792dcf3b12e801d5254c05f12f996e5"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTIxMzc0OnYy", "diffSide": "RIGHT", "path": "naming/src/main/java/com/alibaba/nacos/naming/core/Instance.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDo1MTozOFrOHN6siw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDo1MTozOFrOHN6siw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1NTIxMQ==", "bodyText": "possible for OutOfIndexException\uff1f", "url": "https://github.com/alibaba/nacos/pull/3773#discussion_r484355211", "createdAt": "2020-09-07T10:51:38Z", "author": {"login": "KomachiSion"}, "path": "naming/src/main/java/com/alibaba/nacos/naming/core/Instance.java", "diffHunk": "@@ -117,19 +115,19 @@ public static Instance fromString(String config) {\n         }\n         \n         String provider = ipAddressAttributes[0];\n-        Matcher matcher = IP_PATTERN.matcher(provider);\n-        if (!matcher.matches()) {\n+        String[] providerAddr;\n+        try {\n+            providerAddr = IpUtil.splitIpPortStr(provider);\n+        } catch (Exception ex) {\n             return null;\n         }\n         \n-        int expectedGroupCount = 2;\n-        \n         int port = 0;\n-        if (NumberUtils.isNumber(matcher.group(expectedGroupCount))) {\n-            port = Integer.parseInt(matcher.group(expectedGroupCount));\n+        if (NumberUtils.isNumber(providerAddr[1])) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4f234d4ebf0d291fc703928a3222ef298c5cbef"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDk3NDY1OnYy", "diffSide": "RIGHT", "path": "common/src/test/java/com/alibaba/nacos/common/utils/IpUtilTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwMjoxMDoyMFrOHOKafA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwMjoxMDoyMFrOHOKafA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYxMjczMg==", "bodyText": "format test method name to describe what situation the method test", "url": "https://github.com/alibaba/nacos/pull/3773#discussion_r484612732", "createdAt": "2020-09-08T02:10:20Z", "author": {"login": "KomachiSion"}, "path": "common/src/test/java/com/alibaba/nacos/common/utils/IpUtilTest.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.utils;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.net.InetAddress;\n+import java.net.NetworkInterface;\n+import java.util.Enumeration;\n+\n+/**\n+ * test IpUtil.\n+ * @ClassName: IpUtilTest\n+ * @date 2020/9/3 10:31\n+ */\n+public class IpUtilTest {\n+    \n+    @Test\n+    public void test111(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "601f0b4609747c750b0ef70582aadf46e235c8e4"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDk3NDg2OnYy", "diffSide": "RIGHT", "path": "common/src/test/java/com/alibaba/nacos/common/utils/IpUtilTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwMjoxMDoyOVrOHOKamg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwMjoxMDoyOVrOHOKamg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYxMjc2Mg==", "bodyText": "remove unused codes", "url": "https://github.com/alibaba/nacos/pull/3773#discussion_r484612762", "createdAt": "2020-09-08T02:10:29Z", "author": {"login": "KomachiSion"}, "path": "common/src/test/java/com/alibaba/nacos/common/utils/IpUtilTest.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.utils;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.net.InetAddress;\n+import java.net.NetworkInterface;\n+import java.util.Enumeration;\n+\n+/**\n+ * test IpUtil.\n+ * @ClassName: IpUtilTest\n+ * @date 2020/9/3 10:31\n+ */\n+public class IpUtilTest {\n+    \n+    @Test\n+    public void test111(){\n+        try {\n+            Enumeration<NetworkInterface> en = NetworkInterface.getNetworkInterfaces();\n+            while (en.hasMoreElements()) {\n+                NetworkInterface ni = en.nextElement();\n+                Enumeration<InetAddress> ads = ni.getInetAddresses();\n+                while (ads.hasMoreElements()) {\n+                    InetAddress ip = ads.nextElement();\n+                    System.out.println(ip.getHostAddress());\n+                    // Compatible group does not regulate 11 network segments\n+                    if (!ip.isLoopbackAddress() && ip.getHostAddress().indexOf(\":\") == -1\n+                        /* && ip.isSiteLocalAddress() */) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "601f0b4609747c750b0ef70582aadf46e235c8e4"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDk5MjQ2OnYy", "diffSide": "RIGHT", "path": "address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwMjoyMjoxN1rOHOKksA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwMjoyMjoxN1rOHOKksA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYxNTM0NA==", "bodyText": "IpUtil.checkOK(str) I think is better", "url": "https://github.com/alibaba/nacos/pull/3773#discussion_r484615344", "createdAt": "2020-09-08T02:22:17Z", "author": {"login": "chuntaojun"}, "path": "address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java", "diffHunk": "@@ -87,8 +87,8 @@ public ResponseEntity postCluster(@RequestParam(required = false) String product\n             clusterObj.setHealthChecker(new AbstractHealthChecker.None());\n             serviceManager.createServiceIfAbsent(Constants.DEFAULT_NAMESPACE_ID, serviceName, false, clusterObj);\n             String[] ipArray = addressServerManager.splitIps(ips);\n-            String checkResult = AddressServerParamCheckUtil.checkIps(ipArray);\n-            if (AddressServerParamCheckUtil.CHECK_OK.equals(checkResult)) {\n+            String checkResult = IpUtil.checkIps(ipArray);\n+            if (IpUtil.CHECK_OK.equals(checkResult)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87ab5f16bec8bd640463dbc19e1b8aabb9dd06fc"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDk5NjEyOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/tls/SelfHostnameVerifier.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwMjoyNDo0NVrOHOKm7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwMjoyNDo0NVrOHOKm7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYxNTkxOA==", "bodyText": "Ip => IP", "url": "https://github.com/alibaba/nacos/pull/3773#discussion_r484615918", "createdAt": "2020-09-08T02:24:45Z", "author": {"login": "chuntaojun"}, "path": "common/src/main/java/com/alibaba/nacos/common/tls/SelfHostnameVerifier.java", "diffHunk": "@@ -38,7 +38,7 @@\n     \n     private static ConcurrentHashMap<String, Boolean> hosts = new ConcurrentHashMap<String, Boolean>();\n     \n-    private static final String[] LOCALHOST_HOSTNAME = new String[] {\"localhost\", \"127.0.0.1\"};\n+    private static final String[] LOCALHOST_HOSTNAME = new String[] {\"localhost\", IpUtil.localHostIp()};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87ab5f16bec8bd640463dbc19e1b8aabb9dd06fc"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDk5NzM5OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/utils/IpUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwMjoyNToyNFrOHOKnjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwMjoyNToyNFrOHOKnjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYxNjA3Nw==", "bodyText": "IpUtil => IPUtil", "url": "https://github.com/alibaba/nacos/pull/3773#discussion_r484616077", "createdAt": "2020-09-08T02:25:24Z", "author": {"login": "chuntaojun"}, "path": "common/src/main/java/com/alibaba/nacos/common/utils/IpUtil.java", "diffHunk": "@@ -0,0 +1,210 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.utils;\n+\n+import java.net.InetAddress;\n+import java.net.UnknownHostException;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+/**\n+ * ip tool.\n+ *\n+ * @author Nacos\n+ */\n+public class IpUtil {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87ab5f16bec8bd640463dbc19e1b8aabb9dd06fc"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTA2MzY5OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/com/alibaba/nacos/client/config/utils/ParamUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwMzowODo1NFrOHOLOog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwMzowODo1NFrOHOLOog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYyNjA4Mg==", "bodyText": "\u8fd9\u79cd\u5730\u65b9\u73b0\u5728\u662f\u4e0d\u662f\u5e94\u8be5\u7528isIp\u66ff\u6362isIpv4\u4e86\uff1f", "url": "https://github.com/alibaba/nacos/pull/3773#discussion_r484626082", "createdAt": "2020-09-08T03:08:54Z", "author": {"login": "wangweizZZ"}, "path": "client/src/main/java/com/alibaba/nacos/client/config/utils/ParamUtils.java", "diffHunk": "@@ -190,7 +190,7 @@ public static void checkBetaIps(String betaIps) throws NacosException {\n         }\n         String[] ipsArr = betaIps.split(\",\");\n         for (String ip : ipsArr) {\n-            if (!IpUtils.isIpv4(ip)) {\n+            if (!IpUtil.isIpv4(ip)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87ab5f16bec8bd640463dbc19e1b8aabb9dd06fc"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjc4NTUyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/alibaba/nacos/core/utils/WebUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMzoyMjo1MlrOHbtbIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMzoyMjo1MlrOHbtbIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgxNzgyNw==", "bodyText": "\u4e3a\u4ec0\u4e48\u8981\u52a0\u8fd9\u4e2a\u5224\u65ad\uff1f", "url": "https://github.com/alibaba/nacos/pull/3773#discussion_r498817827", "createdAt": "2020-10-02T13:22:52Z", "author": {"login": "chuntaojun"}, "path": "core/src/main/java/com/alibaba/nacos/core/utils/WebUtils.java", "diffHunk": "@@ -93,6 +93,11 @@ private static String resolveValue(String value, String encoding) {\n         try {\n             value = HttpUtils.decode(new String(value.getBytes(StandardCharsets.UTF_8), encoding), encoding);\n         } catch (UnsupportedEncodingException ignore) {\n+        } catch (Exception ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba31524c6c39e482c703c184845e3400d61120e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MDYxODA0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/alibaba/nacos/core/utils/WebUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMjoyNjoyNlrOHtHCEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMjoyNjoyNlrOHtHCEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA2MzE4Nw==", "bodyText": "Please do not change the code style.", "url": "https://github.com/alibaba/nacos/pull/3773#discussion_r517063187", "createdAt": "2020-11-04T02:26:26Z", "author": {"login": "Maijh97"}, "path": "core/src/main/java/com/alibaba/nacos/core/utils/WebUtils.java", "diffHunk": "@@ -42,7 +42,7 @@\n  * @author nkorange\n  */\n public class WebUtils {\n-    \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99cbf16b1cfa5eb4f22e3a7836c5d35b1911afc4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MDYzOTAwOnYy", "diffSide": "RIGHT", "path": "naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMjozODozOVrOHtHOFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMjozODozOVrOHtHOFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA2NjI2MQ==", "bodyText": "Here \":\" can use IPUtil.IP_PORT_SPLITER.", "url": "https://github.com/alibaba/nacos/pull/3773#discussion_r517066261", "createdAt": "2020-11-04T02:38:39Z", "author": {"login": "Maijh97"}, "path": "naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java", "diffHunk": "@@ -955,7 +956,7 @@ public int getPagedService(String namespaceId, int startPage, int pageSize, Stri\n                 contained = false;\n                 List<Instance> instances = service.allIPs();\n                 for (Instance instance : instances) {\n-                    if (containedInstance.contains(\":\")) {\n+                    if (IPUtil.containsPort(containedInstance)) {\n                         if (StringUtils.equals(instance.getIp() + \":\" + instance.getPort(), containedInstance)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99cbf16b1cfa5eb4f22e3a7836c5d35b1911afc4"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MDYzOTI4OnYy", "diffSide": "RIGHT", "path": "naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatCheckTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMjozODo0OFrOHtHOOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMjozODo0OFrOHtHOOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA2NjI5Ng==", "bodyText": "Here \":\" can use IPUtil.IP_PORT_SPLITER.", "url": "https://github.com/alibaba/nacos/pull/3773#discussion_r517066296", "createdAt": "2020-11-04T02:38:48Z", "author": {"login": "Maijh97"}, "path": "naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatCheckTask.java", "diffHunk": "@@ -135,7 +136,7 @@ private void deleteIp(Instance instance) {\n                     .appendParam(\"ephemeral\", \"true\").appendParam(\"clusterName\", instance.getClusterName())\n                     .appendParam(\"serviceName\", service.getName()).appendParam(\"namespaceId\", service.getNamespaceId());\n             \n-            String url = \"http://127.0.0.1:\" + ApplicationUtils.getPort() + ApplicationUtils.getContextPath()\n+            String url = \"http://\" + IPUtil.localHostIP() + \":\" + ApplicationUtils.getPort() + ApplicationUtils.getContextPath()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99cbf16b1cfa5eb4f22e3a7836c5d35b1911afc4"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MDY0MzE1OnYy", "diffSide": "RIGHT", "path": "sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMjo0MDo1OFrOHtHQVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMjo0MDo1OFrOHtHQVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA2NjgzNg==", "bodyText": "Please do not change the code style.", "url": "https://github.com/alibaba/nacos/pull/3773#discussion_r517066836", "createdAt": "2020-11-04T02:40:58Z", "author": {"login": "Maijh97"}, "path": "sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java", "diffHunk": "@@ -87,20 +81,20 @@ public void run() {\n                 if (StringUtils.isBlank(nacosIP)) {\n                     nacosIP = ApplicationUtils.getProperty(IP_ADDRESS);\n                 }\n-                \n-                boolean illegalIP = !StringUtils.isBlank(nacosIP) && !(isIP(nacosIP) || isDomain(nacosIP));\n-                if (illegalIP) {\n-                    throw new RuntimeException(\"nacos address \" + nacosIP + \" is not ip\");\n+                if (!StringUtils.isBlank(nacosIP)) {\n+                    if (!(IPUtil.isIP(nacosIP) || isDomain(nacosIP))) {\n+                        throw new RuntimeException(\"nacos address \" + nacosIP + \" is not ip\");\n+                    }\n                 }\n                 String tmpSelfIP = nacosIP;\n                 if (StringUtils.isBlank(tmpSelfIP)) {\n                     preferHostnameOverIP = Boolean.getBoolean(SYSTEM_PREFER_HOSTNAME_OVER_IP);\n-                    \n+    ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99cbf16b1cfa5eb4f22e3a7836c5d35b1911afc4"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MDY0MzQwOnYy", "diffSide": "RIGHT", "path": "sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMjo0MTowOVrOHtHQeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMjo0MTowOVrOHtHQeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA2Njg3NA==", "bodyText": "Please do not change the code style.", "url": "https://github.com/alibaba/nacos/pull/3773#discussion_r517066874", "createdAt": "2020-11-04T02:41:09Z", "author": {"login": "Maijh97"}, "path": "sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java", "diffHunk": "@@ -87,20 +81,20 @@ public void run() {\n                 if (StringUtils.isBlank(nacosIP)) {\n                     nacosIP = ApplicationUtils.getProperty(IP_ADDRESS);\n                 }\n-                \n-                boolean illegalIP = !StringUtils.isBlank(nacosIP) && !(isIP(nacosIP) || isDomain(nacosIP));\n-                if (illegalIP) {\n-                    throw new RuntimeException(\"nacos address \" + nacosIP + \" is not ip\");\n+                if (!StringUtils.isBlank(nacosIP)) {\n+                    if (!(IPUtil.isIP(nacosIP) || isDomain(nacosIP))) {\n+                        throw new RuntimeException(\"nacos address \" + nacosIP + \" is not ip\");\n+                    }\n                 }\n                 String tmpSelfIP = nacosIP;\n                 if (StringUtils.isBlank(tmpSelfIP)) {\n                     preferHostnameOverIP = Boolean.getBoolean(SYSTEM_PREFER_HOSTNAME_OVER_IP);\n-                    \n+    \n                     if (!preferHostnameOverIP) {\n                         preferHostnameOverIP = Boolean\n                                 .parseBoolean(ApplicationUtils.getProperty(PREFER_HOSTNAME_OVER_IP));\n                     }\n-                    \n+    ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99cbf16b1cfa5eb4f22e3a7836c5d35b1911afc4"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MDY1NDkwOnYy", "diffSide": "RIGHT", "path": "sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMjo0ODozMVrOHtHXJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMjo0ODozMVrOHtHXJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA2ODU4Mg==", "bodyText": "IPUtil.PREFER_IPV6_ADDRESSES ? address instanceof Inet6Address : address instanceof Inet4Address\nHere is a separate line, which is more readable.", "url": "https://github.com/alibaba/nacos/pull/3773#discussion_r517068582", "createdAt": "2020-11-04T02:48:31Z", "author": {"login": "Maijh97"}, "path": "sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java", "diffHunk": "@@ -159,8 +160,9 @@ public static InetAddress findFirstNonLoopbackAddress() {\n                     if (!ignoreInterface(ifc.getDisplayName())) {\n                         for (Enumeration<InetAddress> addrs = ifc.getInetAddresses(); addrs.hasMoreElements(); ) {\n                             InetAddress address = addrs.nextElement();\n-                            if (address instanceof Inet4Address && !address.isLoopbackAddress() && isPreferredAddress(\n-                                    address)) {\n+                            if ((IPUtil.PREFER_IPV6_ADDRESSES ? address instanceof Inet6Address\n+                                    : address instanceof Inet4Address) && !address.isLoopbackAddress()\n+                                    && isPreferredAddress(address)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99cbf16b1cfa5eb4f22e3a7836c5d35b1911afc4"}, "originalPosition": 89}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4356, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}