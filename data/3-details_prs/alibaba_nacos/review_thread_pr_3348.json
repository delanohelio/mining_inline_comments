{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5ODQ0NTY3", "number": 3348, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwOTozNjoxMlrOEPDTbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMDowNDo1N1rOEPD94g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MjE4MjIxOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwOTozNjoxMlrOGyjEfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwOTozNjoxMlrOGyjEfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY1NjU3NQ==", "bodyText": "do not change intend please", "url": "https://github.com/alibaba/nacos/pull/3348#discussion_r455656575", "createdAt": "2020-07-16T09:36:12Z", "author": {"login": "KomachiSion"}, "path": "client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java", "diffHunk": "@@ -226,54 +222,46 @@ private boolean publishConfigInner(String tenant, String dataId, String group, S\n         cr.setContent(content);\n         configFilterChainManager.doFilter(cr, null);\n         content = cr.getContent();\n-        \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45c19b10daaa6869728d91b07e12ba517b0d55e1"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MjE4NDMxOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwOTozNjo0MlrOGyjFxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwOTozNjo0MlrOGyjFxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY1NjkwMA==", "bodyText": "do not change intend please", "url": "https://github.com/alibaba/nacos/pull/3348#discussion_r455656900", "createdAt": "2020-07-16T09:36:42Z", "author": {"login": "KomachiSion"}, "path": "client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java", "diffHunk": "@@ -226,54 +222,46 @@ private boolean publishConfigInner(String tenant, String dataId, String group, S\n         cr.setContent(content);\n         configFilterChainManager.doFilter(cr, null);\n         content = cr.getContent();\n-        \n+\n         String url = Constants.CONFIG_CONTROLLER_PATH;\n-        List<String> params = new ArrayList<String>();\n-        params.add(\"dataId\");\n-        params.add(dataId);\n-        params.add(\"group\");\n-        params.add(group);\n-        params.add(\"content\");\n-        params.add(content);\n+        Map<String, String> params = new HashMap<String, String>(6);\n+        params.put(\"dataId\", dataId);\n+        params.put(\"group\", group);\n+        params.put(\"content\", content);\n         if (StringUtils.isNotEmpty(tenant)) {\n-            params.add(\"tenant\");\n-            params.add(tenant);\n+            params.put(\"tenant\", tenant);\n         }\n         if (StringUtils.isNotEmpty(appName)) {\n-            params.add(\"appName\");\n-            params.add(appName);\n+            params.put(\"appName\", appName);\n         }\n         if (StringUtils.isNotEmpty(tag)) {\n-            params.add(\"tag\");\n-            params.add(tag);\n+            params.put(\"tag\", tag);\n         }\n-        \n-        List<String> headers = new ArrayList<String>();\n+        Map<String, String> headers = new HashMap<String, String>(1);\n         if (StringUtils.isNotEmpty(betaIps)) {\n-            headers.add(\"betaIps\");\n-            headers.add(betaIps);\n+            headers.put(\"betaIps\", betaIps);\n         }\n-        \n-        HttpResult result = null;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45c19b10daaa6869728d91b07e12ba517b0d55e1"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MjE4NDU3OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwOTozNjo0NlrOGyjF6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwOTozNjo0NlrOGyjF6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY1NjkzOQ==", "bodyText": "do not change intend please", "url": "https://github.com/alibaba/nacos/pull/3348#discussion_r455656939", "createdAt": "2020-07-16T09:36:46Z", "author": {"login": "KomachiSion"}, "path": "client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java", "diffHunk": "@@ -226,54 +222,46 @@ private boolean publishConfigInner(String tenant, String dataId, String group, S\n         cr.setContent(content);\n         configFilterChainManager.doFilter(cr, null);\n         content = cr.getContent();\n-        \n+\n         String url = Constants.CONFIG_CONTROLLER_PATH;\n-        List<String> params = new ArrayList<String>();\n-        params.add(\"dataId\");\n-        params.add(dataId);\n-        params.add(\"group\");\n-        params.add(group);\n-        params.add(\"content\");\n-        params.add(content);\n+        Map<String, String> params = new HashMap<String, String>(6);\n+        params.put(\"dataId\", dataId);\n+        params.put(\"group\", group);\n+        params.put(\"content\", content);\n         if (StringUtils.isNotEmpty(tenant)) {\n-            params.add(\"tenant\");\n-            params.add(tenant);\n+            params.put(\"tenant\", tenant);\n         }\n         if (StringUtils.isNotEmpty(appName)) {\n-            params.add(\"appName\");\n-            params.add(appName);\n+            params.put(\"appName\", appName);\n         }\n         if (StringUtils.isNotEmpty(tag)) {\n-            params.add(\"tag\");\n-            params.add(tag);\n+            params.put(\"tag\", tag);\n         }\n-        \n-        List<String> headers = new ArrayList<String>();\n+        Map<String, String> headers = new HashMap<String, String>(1);\n         if (StringUtils.isNotEmpty(betaIps)) {\n-            headers.add(\"betaIps\");\n-            headers.add(betaIps);\n+            headers.put(\"betaIps\", betaIps);\n         }\n-        \n-        HttpResult result = null;\n+\n+        HttpRestResult<String> result = null;\n         try {\n             result = agent.httpPost(url, headers, params, encode, POST_TIMEOUT);\n-        } catch (IOException ioe) {\n-            LOGGER.warn(\"[{}] [publish-single] exception, dataId={}, group={}, msg={}\", agent.getName(), dataId, group,\n-                    ioe.toString());\n+        } catch (Exception ex) {\n+            LOGGER.warn(\"[{}] [publish-single] exception, dataId={}, group={}, msg={}\", agent.getName(), dataId,\n+                group, ex.toString());\n             return false;\n         }\n-        \n-        if (HttpURLConnection.HTTP_OK == result.code) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45c19b10daaa6869728d91b07e12ba517b0d55e1"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MjIwMzM5OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwOTo0MTo0OVrOGyjRrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMDoyMTozNFrOGykrGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY1OTk1MQ==", "bodyText": "Where are these logic from?", "url": "https://github.com/alibaba/nacos/pull/3348#discussion_r455659951", "createdAt": "2020-07-16T09:41:49Z", "author": {"login": "KomachiSion"}, "path": "client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java", "diffHunk": "@@ -358,29 +354,37 @@ public void start() throws NacosException {\n         serverListMgr.start();\n     }\n     \n-    private List<String> getSpasHeaders(List<String> paramValues) throws IOException {\n-        List<String> newHeaders = new ArrayList<String>();\n+    private Header getSpasHeaders(Map<String, String> paramValues, String encode) throws Exception {\n+        Header header = Header.newInstance();\n         // STS \u4e34\u65f6\u51ed\u8bc1\u9274\u6743\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e AK/SK \u9274\u6743\n         if (StsConfig.getInstance().isStsOn()) {\n             StsCredential stsCredential = getStsCredential();\n             accessKey = stsCredential.accessKeyId;\n             secretKey = stsCredential.accessKeySecret;\n-            newHeaders.add(\"Spas-SecurityToken\");\n-            newHeaders.add(stsCredential.securityToken);\n+            header.addParam(\"Spas-SecurityToken\", stsCredential.securityToken);\n         }\n         \n         if (StringUtils.isNotEmpty(accessKey) && StringUtils.isNotEmpty(secretKey)) {\n-            newHeaders.add(\"Spas-AccessKey\");\n-            newHeaders.add(accessKey);\n-            List<String> signHeaders = SpasAdapter.getSignHeaders(paramValues, secretKey);\n+            header.addParam(\"Spas-AccessKey\", accessKey);\n+            Map<String, String> signHeaders = SpasAdapter.getSignHeaders(paramValues, secretKey);\n             if (signHeaders != null) {\n-                newHeaders.addAll(signHeaders);\n+                header.addAll(signHeaders);\n             }\n         }\n-        return newHeaders;\n+        String ts = String.valueOf(System.currentTimeMillis());\n+        String token = MD5Utils.md5Hex(ts + ParamUtil.getAppKey(), Constants.ENCODE);\n+        \n+        header.addParam(Constants.CLIENT_APPNAME_HEADER, ParamUtil.getAppName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45c19b10daaa6869728d91b07e12ba517b0d55e1"}, "originalPosition": 323}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY4Mjg0Mg==", "bodyText": "This logic comes from the old HttpSimpleClient#setHeaders method.", "url": "https://github.com/alibaba/nacos/pull/3348#discussion_r455682842", "createdAt": "2020-07-16T10:21:34Z", "author": {"login": "Maijh97"}, "path": "client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java", "diffHunk": "@@ -358,29 +354,37 @@ public void start() throws NacosException {\n         serverListMgr.start();\n     }\n     \n-    private List<String> getSpasHeaders(List<String> paramValues) throws IOException {\n-        List<String> newHeaders = new ArrayList<String>();\n+    private Header getSpasHeaders(Map<String, String> paramValues, String encode) throws Exception {\n+        Header header = Header.newInstance();\n         // STS \u4e34\u65f6\u51ed\u8bc1\u9274\u6743\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e AK/SK \u9274\u6743\n         if (StsConfig.getInstance().isStsOn()) {\n             StsCredential stsCredential = getStsCredential();\n             accessKey = stsCredential.accessKeyId;\n             secretKey = stsCredential.accessKeySecret;\n-            newHeaders.add(\"Spas-SecurityToken\");\n-            newHeaders.add(stsCredential.securityToken);\n+            header.addParam(\"Spas-SecurityToken\", stsCredential.securityToken);\n         }\n         \n         if (StringUtils.isNotEmpty(accessKey) && StringUtils.isNotEmpty(secretKey)) {\n-            newHeaders.add(\"Spas-AccessKey\");\n-            newHeaders.add(accessKey);\n-            List<String> signHeaders = SpasAdapter.getSignHeaders(paramValues, secretKey);\n+            header.addParam(\"Spas-AccessKey\", accessKey);\n+            Map<String, String> signHeaders = SpasAdapter.getSignHeaders(paramValues, secretKey);\n             if (signHeaders != null) {\n-                newHeaders.addAll(signHeaders);\n+                header.addAll(signHeaders);\n             }\n         }\n-        return newHeaders;\n+        String ts = String.valueOf(System.currentTimeMillis());\n+        String token = MD5Utils.md5Hex(ts + ParamUtil.getAppKey(), Constants.ENCODE);\n+        \n+        header.addParam(Constants.CLIENT_APPNAME_HEADER, ParamUtil.getAppName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY1OTk1MQ=="}, "originalCommit": {"oid": "45c19b10daaa6869728d91b07e12ba517b0d55e1"}, "originalPosition": 323}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MjI5MDkwOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/com/alibaba/nacos/client/utils/EnvUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMDowNDo1N1rOGykH1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMDozNzoxN1rOGylMCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY3MzgxNQ==", "bodyText": "Is these method refactor correctly? I see the input is come from httpclient.", "url": "https://github.com/alibaba/nacos/pull/3348#discussion_r455673815", "createdAt": "2020-07-16T10:04:57Z", "author": {"login": "KomachiSion"}, "path": "client/src/main/java/com/alibaba/nacos/client/utils/EnvUtil.java", "diffHunk": "@@ -30,45 +28,42 @@\n     \n     public static final Logger LOGGER = LogUtils.logger(EnvUtil.class);\n     \n-    public static void setSelfEnv(Map<String, List<String>> headers) {\n+    public static void setSelfEnv(Header headers) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45c19b10daaa6869728d91b07e12ba517b0d55e1"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY5MTI3NQ==", "bodyText": "Correct, the original input is also from the http client, this method is called by the ServerListManager#getApacheServerList method.", "url": "https://github.com/alibaba/nacos/pull/3348#discussion_r455691275", "createdAt": "2020-07-16T10:37:17Z", "author": {"login": "Maijh97"}, "path": "client/src/main/java/com/alibaba/nacos/client/utils/EnvUtil.java", "diffHunk": "@@ -30,45 +28,42 @@\n     \n     public static final Logger LOGGER = LogUtils.logger(EnvUtil.class);\n     \n-    public static void setSelfEnv(Map<String, List<String>> headers) {\n+    public static void setSelfEnv(Header headers) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY3MzgxNQ=="}, "originalCommit": {"oid": "45c19b10daaa6869728d91b07e12ba517b0d55e1"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4371, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}