{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNzk3ODAx", "number": 2841, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjozNjo0OVrOD-fZJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzowOToyN1rOD-2baw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODUyNjQ1OnYy", "diffSide": "RIGHT", "path": "config/src/main/java/com/alibaba/nacos/config/server/filter/TransferToLeaderFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjozNjo0OVrOGYn39Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjozNjo0OVrOGYn39Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3MjMwOQ==", "bodyText": "Using logger is better way, right ?", "url": "https://github.com/alibaba/nacos/pull/2841#discussion_r428472309", "createdAt": "2020-05-21T06:36:49Z", "author": {"login": "EasonFeng5870"}, "path": "config/src/main/java/com/alibaba/nacos/config/server/filter/TransferToLeaderFilter.java", "diffHunk": "@@ -174,6 +174,9 @@ public void doFilter(ServletRequest request, ServletResponse response,\n \t\t\t\t\tString headerName = headerNames.nextElement();\n \t\t\t\t\theaders.set(headerName, req.getHeader(headerName));\n \t\t\t\t}\n+\n+\t\t\t\tSystem.out.println(reqUrl);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6ff9031c512c1caadca7535f0f1f97df5c7b66c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjI3Nzc2OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/http/HttpClientManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNjo1OToxNlrOGZMsrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNjo1OToxNlrOGZMsrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA3NTYzMQ==", "bodyText": "Here, you can print the expcetion error info.", "url": "https://github.com/alibaba/nacos/pull/2841#discussion_r429075631", "createdAt": "2020-05-22T06:59:16Z", "author": {"login": "zongtanghu"}, "path": "common/src/main/java/com/alibaba/nacos/common/http/HttpClientManager.java", "diffHunk": "@@ -69,4 +66,18 @@ public static NAsyncHttpClient getAsyncHttpClient() {\n \t\treturn ASYNC_HTTP_CLIENT;\n \t}\n \n+\tpublic static void shutdown() {\n+\t\tif (!alreadyShutdown.compareAndSet(false, true)) {\n+\t\t\treturn;\n+\t\t}\n+\t\tlogger.warn(\"[HttpClientManager] Start destroying HttpClient\");\n+\t\ttry {\n+\t\t\tSYNC_HTTP_CLIENT.close();\n+\t\t\tASYNC_HTTP_CLIENT.close();\n+\t\t}\n+\t\tcatch (Exception ignore) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e52484a464cbbcd2b3644e09b9724599f23a2b8"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjI5Mzk4OnYy", "diffSide": "RIGHT", "path": "config/src/main/java/com/alibaba/nacos/config/server/filter/CurcuitFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzowNjozM1rOGZM26w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzowNjozM1rOGZM26w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA3ODI1MQ==", "bodyText": "This variabler's meaning is uncertain.Maybe, isOpenService, is better.", "url": "https://github.com/alibaba/nacos/pull/2841#discussion_r429078251", "createdAt": "2020-05-22T07:06:33Z", "author": {"login": "zongtanghu"}, "path": "config/src/main/java/com/alibaba/nacos/config/server/filter/CurcuitFilter.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.config.server.filter;\n+\n+import com.alibaba.nacos.common.utils.ExceptionUtil;\n+import com.alibaba.nacos.common.utils.Observable;\n+import com.alibaba.nacos.common.utils.Observer;\n+import com.alibaba.nacos.config.server.constant.Constants;\n+import com.alibaba.nacos.config.server.model.event.RaftDBErrorEvent;\n+import com.alibaba.nacos.config.server.model.event.RaftDBErrorRecoverEvent;\n+import com.alibaba.nacos.consistency.cp.CPProtocol;\n+import com.alibaba.nacos.core.cluster.Member;\n+import com.alibaba.nacos.core.cluster.MemberMetaDataConstants;\n+import com.alibaba.nacos.core.cluster.ServerMemberManager;\n+import com.alibaba.nacos.core.code.ControllerMethodsCache;\n+import com.alibaba.nacos.core.notify.Event;\n+import com.alibaba.nacos.core.notify.NotifyCenter;\n+import com.alibaba.nacos.core.notify.listener.SmartSubscribe;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import javax.annotation.PostConstruct;\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+import java.security.AccessControlException;\n+import java.util.List;\n+\n+/**\n+ * If the embedded distributed storage is enabled, all requests are routed to the Leader\n+ * node for processing, and the maximum number of forwards for a single request cannot\n+ * exceed three\n+ *\n+ * @author <a href=\"mailto:liaochuntao@live.com\">liaochuntao</a>\n+ */\n+@SuppressWarnings(\"all\")\n+public class CurcuitFilter implements Filter {\n+\n+\t@Autowired\n+\tprivate ServerMemberManager memberManager;\n+\n+\t@Autowired\n+\tprivate CPProtocol protocol;\n+\n+\t@Autowired\n+\tprivate ControllerMethodsCache controllerMethodsCache;\n+\n+\tprivate volatile boolean downgrading = false;\n+\tprivate volatile boolean openService = false;\n+\n+\t@PostConstruct\n+\tprotected void init() {\n+\t\tlistenerSelfInCluster();\n+\t\tregisterSubscribe();\n+\t}\n+\n+\t@Override\n+\tpublic void doFilter(ServletRequest request, ServletResponse response,\n+\t\t\tFilterChain chain) throws IOException, ServletException {\n+\n+\t\tHttpServletRequest req = (HttpServletRequest) request;\n+\t\tHttpServletResponse resp = (HttpServletResponse) response;\n+\n+\t\tif (!openService) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e52484a464cbbcd2b3644e09b9724599f23a2b8"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjMwMDU5OnYy", "diffSide": "RIGHT", "path": "consistency/src/main/java/com/alibaba/nacos/consistency/utils/ProtobufUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzowOToyN1rOGZM67A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzowOToyN1rOGZM67A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA3OTI3Ng==", "bodyText": "Maybe, the class name can be changed to ProtobufSerializer is better!", "url": "https://github.com/alibaba/nacos/pull/2841#discussion_r429079276", "createdAt": "2020-05-22T07:09:27Z", "author": {"login": "zongtanghu"}, "path": "consistency/src/main/java/com/alibaba/nacos/consistency/utils/ProtobufUtils.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ *\n+ *  * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *  *\n+ *  * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  * you may not use this file except in compliance with the License.\n+ *  * You may obtain a copy of the License at\n+ *  *\n+ *  *      http://www.apache.org/licenses/LICENSE-2.0\n+ *  *\n+ *  * Unless required by applicable law or agreed to in writing, software\n+ *  * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  * See the License for the specific language governing permissions and\n+ *  * limitations under the License.\n+ *\n+ */\n+\n+package com.alibaba.nacos.consistency.utils;\n+\n+import com.alibaba.nacos.consistency.entity.GetRequest;\n+import com.alibaba.nacos.consistency.entity.Log;\n+import com.alibaba.nacos.consistency.exception.ConsistencyException;\n+import com.google.protobuf.Message;\n+\n+/**\n+ * @author <a href=\"mailto:liaochuntao@live.com\">liaochuntao</a>\n+ */\n+public final class ProtobufUtils {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e52484a464cbbcd2b3644e09b9724599f23a2b8"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4474, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}