{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3Njk4Njgy", "number": 3145, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNjozMzoyMVrOEHcXHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDoxNToxNlrOEINi7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MjQwMTU2OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultPublisher.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNjozMzoyMVrOGmze-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNjozMzoyMVrOGmze-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM0MjU4Nw==", "bodyText": "\u8fd9\u4e2a\u7684\u5b58\u5728\u662f\u56e0\u4e3asharePublisher\uff0c\u5efa\u8baesharePublisher\u91cd\u5199DefaultPublisher\u7684receiveEvent\u65b9\u6cd5\uff0c\u6bd4\u5bf9\u4e8b\u4ef6\u7684\u7b7e\u540d\u4fe1\u606f\uff0c\u907f\u514d\u51fa\u73b0ClassCastException", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r443342587", "createdAt": "2020-06-22T06:33:21Z", "author": {"login": "chuntaojun"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultPublisher.java", "diffHunk": "@@ -175,10 +175,16 @@ void receiveEvent(Event event) {\n                 continue;\n             }\n             \n-            final String targetName = ClassUtils.getName(subscriber.subscribeType());\n-            if (!Objects.equals(sourceName, targetName)) {\n-                continue;\n+            // Because unifying smartSubscriber and subscriber, so here need to think of compatibility.\n+            // To smartSubscriber, the subscribeType() method returns null by default.\n+            if (subscriber.subscribeType() != null) {\n+                \n+                final String targetName = ClassUtils.getName(subscriber.subscribeType());\n+                if (!Objects.equals(sourceName, targetName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e530808ad3c28ca3b1dfc36dea12472c1ec2752"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MzMzMTY1OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultPublisher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMToyNTo1NVrOGm8lKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMTozMDo1OFrOGm8uRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ5MTYyNg==", "bodyText": "Why change it to protected? It seems that there are no subClass.", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r443491626", "createdAt": "2020-06-22T11:25:55Z", "author": {"login": "KomachiSion"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultPublisher.java", "diffHunk": "@@ -42,21 +40,21 @@\n  */\n public class DefaultPublisher extends Thread implements EventPublisher {\n     \n-    private static final Logger LOGGER = LoggerFactory.getLogger(NotifyCenter.class);\n+    protected static final Logger LOGGER = LoggerFactory.getLogger(NotifyCenter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aced465e8c8cf87793d4c54147fe67016cde8ddb"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ5Mzk1Ng==", "bodyText": "I implement DefaultSharePublisher which is a subclass of DefaultPublisher  to separate sharePublish from defaultPublisher.", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r443493956", "createdAt": "2020-06-22T11:30:58Z", "author": {"login": "zongtanghu"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultPublisher.java", "diffHunk": "@@ -42,21 +40,21 @@\n  */\n public class DefaultPublisher extends Thread implements EventPublisher {\n     \n-    private static final Logger LOGGER = LoggerFactory.getLogger(NotifyCenter.class);\n+    protected static final Logger LOGGER = LoggerFactory.getLogger(NotifyCenter.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ5MTYyNg=="}, "originalCommit": {"oid": "aced465e8c8cf87793d4c54147fe67016cde8ddb"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2Mzk5MTQ0OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNDoyNToxOFrOGnDBcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNzoyMjoxOVrOGncd-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU5NzE3MQ==", "bodyText": "SmartSubscriber\u4ecd\u7136\u4f1a\u6709\u95ee\u9898", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r443597171", "createdAt": "2020-06-22T14:25:18Z", "author": {"login": "chuntaojun"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.notify;\n+\n+import com.alibaba.nacos.common.notify.listener.Subscriber;\n+import com.alibaba.nacos.common.utils.ClassUtils;\n+import com.alibaba.nacos.common.utils.Objects;\n+\n+/**\n+ * The default share event publisher implementation for slow event.\n+ *\n+ * @author zongtanghu\n+ */\n+public class DefaultSharePublisher extends DefaultPublisher {\n+    \n+    @Override\n+    public void receiveEvent(Event event) {\n+        final long currentEventSequence = event.sequence();\n+        final String sourceName = ClassUtils.getName(event);\n+        \n+        // Notification single event listener\n+        for (Subscriber subscriber : subscribers) {\n+            // Whether to ignore expiration events\n+            if (subscriber.ignoreExpireEvent() && lastEventSequence > currentEventSequence) {\n+                LOGGER.debug(\"[NotifyCenter] the {} is unacceptable to this subscriber, because had expire\",\n+                        event.getClass());\n+                continue;\n+            }\n+            \n+            final String targetName = ClassUtils.getName(subscriber.subscribeType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aced465e8c8cf87793d4c54147fe67016cde8ddb"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAxNDA3Mw==", "bodyText": "The code has already adjusted by previous commit.", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r444014073", "createdAt": "2020-06-23T07:22:19Z", "author": {"login": "zongtanghu"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.notify;\n+\n+import com.alibaba.nacos.common.notify.listener.Subscriber;\n+import com.alibaba.nacos.common.utils.ClassUtils;\n+import com.alibaba.nacos.common.utils.Objects;\n+\n+/**\n+ * The default share event publisher implementation for slow event.\n+ *\n+ * @author zongtanghu\n+ */\n+public class DefaultSharePublisher extends DefaultPublisher {\n+    \n+    @Override\n+    public void receiveEvent(Event event) {\n+        final long currentEventSequence = event.sequence();\n+        final String sourceName = ClassUtils.getName(event);\n+        \n+        // Notification single event listener\n+        for (Subscriber subscriber : subscribers) {\n+            // Whether to ignore expiration events\n+            if (subscriber.ignoreExpireEvent() && lastEventSequence > currentEventSequence) {\n+                LOGGER.debug(\"[NotifyCenter] the {} is unacceptable to this subscriber, because had expire\",\n+                        event.getClass());\n+                continue;\n+            }\n+            \n+            final String targetName = ClassUtils.getName(subscriber.subscribeType());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU5NzE3MQ=="}, "originalCommit": {"oid": "aced465e8c8cf87793d4c54147fe67016cde8ddb"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NjYwMDg1OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNzoxODoyNFrOGncV8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMToxNToxM1rOGnkjCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAxMjAxNg==", "bodyText": "\u6216\u8bb8\u8fd9\u91cc\u53ef\u4ee5\u5728\u52a0\u901f\u4e0b\u6027\u80fd\uff0cMap<Class<? extends SlowEvent>, Set>, \u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u6bcf\u4e2a\u90fd\u53bbequals", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r444012016", "createdAt": "2020-06-23T07:18:24Z", "author": {"login": "chuntaojun"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.notify;\n+\n+import com.alibaba.nacos.common.notify.listener.SmartSubscriber;\n+import com.alibaba.nacos.common.notify.listener.Subscriber;\n+import com.alibaba.nacos.common.utils.ClassUtils;\n+import com.alibaba.nacos.common.utils.Objects;\n+\n+/**\n+ * The default share event publisher implementation for slow event.\n+ *\n+ * @author zongtanghu\n+ */\n+public class DefaultSharePublisher extends DefaultPublisher {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96ade10e2989e82b947834422f7aab21f39f20fc"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE0NjQ0MQ==", "bodyText": "The part codes of improving peformance has already been committed.", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r444146441", "createdAt": "2020-06-23T11:15:13Z", "author": {"login": "zongtanghu"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.notify;\n+\n+import com.alibaba.nacos.common.notify.listener.SmartSubscriber;\n+import com.alibaba.nacos.common.notify.listener.Subscriber;\n+import com.alibaba.nacos.common.utils.ClassUtils;\n+import com.alibaba.nacos.common.utils.Objects;\n+\n+/**\n+ * The default share event publisher implementation for slow event.\n+ *\n+ * @author zongtanghu\n+ */\n+public class DefaultSharePublisher extends DefaultPublisher {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAxMjAxNg=="}, "originalCommit": {"oid": "96ade10e2989e82b947834422f7aab21f39f20fc"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODEzNzU2OnYy", "diffSide": "RIGHT", "path": "common/src/test/java/com/alibaba/nacos/common/notify/NotifyCenterTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNDoxNzo1NVrOGnrdgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMToyMzozOVrOGn_yyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI1OTcxMw==", "bodyText": "ut test method also use Camel Naming", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r444259713", "createdAt": "2020-06-23T14:17:55Z", "author": {"login": "KomachiSion"}, "path": "common/src/test/java/com/alibaba/nacos/common/notify/NotifyCenterTest.java", "diffHunk": "@@ -0,0 +1,538 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.notify;\n+\n+import com.alibaba.nacos.common.notify.listener.SmartSubscriber;\n+import com.alibaba.nacos.common.notify.listener.Subscriber;\n+import com.alibaba.nacos.common.utils.ThreadUtils;\n+import org.junit.Assert;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+/**\n+ * @author <a href=\"mailto:liaochuntao@live.com\">liaochuntao</a>\n+ * @author zongtanghu\n+ */\n+@FixMethodOrder(value = MethodSorters.NAME_ASCENDING)\n+public class NotifyCenterTest {\n+    \n+    private static class TestSlowEvent extends SlowEvent {\n+    }\n+    \n+    private static class TestEvent extends Event {\n+        \n+        @Override\n+        public long sequence() {\n+            return System.currentTimeMillis();\n+        }\n+    }\n+    \n+    static {\n+        System.setProperty(\"nacos.core.notify.share-buffer-size\", \"8\");\n+    }\n+    \n+    @Test\n+    public void test_a_event_can_listen() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c337a86b0a4b357f4cb785dc62a2c1432e4112b"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU5Mjg0MA==", "bodyText": "Yeah, I have already renamed these ut test method name in next commit, please review again, thanks.", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r444592840", "createdAt": "2020-06-24T01:23:39Z", "author": {"login": "zongtanghu"}, "path": "common/src/test/java/com/alibaba/nacos/common/notify/NotifyCenterTest.java", "diffHunk": "@@ -0,0 +1,538 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.notify;\n+\n+import com.alibaba.nacos.common.notify.listener.SmartSubscriber;\n+import com.alibaba.nacos.common.notify.listener.Subscriber;\n+import com.alibaba.nacos.common.utils.ThreadUtils;\n+import org.junit.Assert;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+/**\n+ * @author <a href=\"mailto:liaochuntao@live.com\">liaochuntao</a>\n+ * @author zongtanghu\n+ */\n+@FixMethodOrder(value = MethodSorters.NAME_ASCENDING)\n+public class NotifyCenterTest {\n+    \n+    private static class TestSlowEvent extends SlowEvent {\n+    }\n+    \n+    private static class TestEvent extends Event {\n+        \n+        @Override\n+        public long sequence() {\n+            return System.currentTimeMillis();\n+        }\n+    }\n+    \n+    static {\n+        System.setProperty(\"nacos.core.notify.share-buffer-size\", \"8\");\n+    }\n+    \n+    @Test\n+    public void test_a_event_can_listen() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI1OTcxMw=="}, "originalCommit": {"oid": "9c337a86b0a4b357f4cb785dc62a2c1432e4112b"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDI3MDk1OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultPublisher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMjoxMzoxMlrOGoAkLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMjozOTowNlrOGoA-tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYwNTQ4Ng==", "bodyText": "\u8fd9\u5e94\u8be5\u662fDefaultSharePublisher\u7279\u6709\u7684\u65b9\u6cd5\u624d\u662f", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r444605486", "createdAt": "2020-06-24T02:13:12Z", "author": {"login": "chuntaojun"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultPublisher.java", "diffHunk": "@@ -125,12 +127,12 @@ private boolean hasSubscriber() {\n     }\n     \n     @Override\n-    public void addSubscriber(Subscriber subscriber) {\n+    public void addSubscriber(Subscriber subscriber, Class<? extends Event> subscribeType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82d5e11b8fb7de71715e15b5a27ccd32a37feef7"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYxMjI3OQ==", "bodyText": "Okay, I will adjust this codes.", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r444612279", "createdAt": "2020-06-24T02:39:06Z", "author": {"login": "zongtanghu"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultPublisher.java", "diffHunk": "@@ -125,12 +127,12 @@ private boolean hasSubscriber() {\n     }\n     \n     @Override\n-    public void addSubscriber(Subscriber subscriber) {\n+    public void addSubscriber(Subscriber subscriber, Class<? extends Event> subscribeType) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYwNTQ4Ng=="}, "originalCommit": {"oid": "82d5e11b8fb7de71715e15b5a27ccd32a37feef7"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDI3MjI0OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultPublisher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMjoxMzo1NlrOGoAk8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMjozOToyMFrOGoA--A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYwNTY4MQ==", "bodyText": "\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u8981\u8c03\u6574\u4e3apublic\u4fee\u9970\uff1f", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r444605681", "createdAt": "2020-06-24T02:13:56Z", "author": {"login": "chuntaojun"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultPublisher.java", "diffHunk": "@@ -162,9 +164,13 @@ public boolean isInitialized() {\n         return initialized;\n     }\n     \n-    void receiveEvent(Event event) {\n+    /**\n+     * Receive and notifySubscriber to process the event.\n+     *\n+     * @param event {@link Event}.\n+     */\n+    public void receiveEvent(Event event) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82d5e11b8fb7de71715e15b5a27ccd32a37feef7"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYxMjM0NA==", "bodyText": "I will revert this part.", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r444612344", "createdAt": "2020-06-24T02:39:20Z", "author": {"login": "zongtanghu"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultPublisher.java", "diffHunk": "@@ -162,9 +164,13 @@ public boolean isInitialized() {\n         return initialized;\n     }\n     \n-    void receiveEvent(Event event) {\n+    /**\n+     * Receive and notifySubscriber to process the event.\n+     *\n+     * @param event {@link Event}.\n+     */\n+    public void receiveEvent(Event event) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYwNTY4MQ=="}, "originalCommit": {"oid": "82d5e11b8fb7de71715e15b5a27ccd32a37feef7"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDI3NTExOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMjoxNTozNVrOGoAmqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDozNDowN1rOGoCmag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYwNjEyMg==", "bodyText": "\u8fd9\u91cc\u5e76\u975e\u539f\u5b50\u64cd\u4f5c\uff0c\u9700\u8981\u6ce8\u610f", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r444606122", "createdAt": "2020-06-24T02:15:35Z", "author": {"login": "chuntaojun"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.notify;\n+\n+import com.alibaba.nacos.common.notify.listener.Subscriber;\n+import com.alibaba.nacos.common.utils.ConcurrentHashSet;\n+\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ * The default share event publisher implementation for slow event.\n+ *\n+ * @author zongtanghu\n+ */\n+public class DefaultSharePublisher extends DefaultPublisher {\n+    \n+    private final Map<Class<? extends SlowEvent>, Set<Subscriber>> subMappings = new ConcurrentHashMap<Class<? extends SlowEvent>, Set<Subscriber>>();\n+    \n+    @Override\n+    public void addSubscriber(Subscriber subscriber, Class<? extends Event> subscribeType) {\n+        // Actually, do a classification based on the slowEvent type.\n+        Class<? extends SlowEvent> subSlowEventType = (Class<? extends SlowEvent>) subscribeType;\n+        // For adding to parent class attributes synchronization.\n+        subscribers.add(subscriber);\n+        Set<Subscriber> sets = subMappings.get(subSlowEventType);\n+        \n+        if (sets == null) {\n+            Set<Subscriber> newSet = new ConcurrentHashSet<Subscriber>();\n+            newSet.add(subscriber);\n+            subMappings.put(subSlowEventType, newSet);\n+            return;\n+        }\n+        \n+        sets.add(subscriber);\n+    }\n+    \n+    @Override\n+    public void removeSubscriber(Subscriber subscriber, Class<? extends Event> subscribeType) {\n+        // Actually, do a classification based on the slowEvent type.\n+        Class<? extends SlowEvent> subSlowEventType = (Class<? extends SlowEvent>) subscribeType;\n+        // For removing to parent class attributes synchronization.\n+        subscribers.remove(subscriber);\n+    \n+        Set<Subscriber> sets = subMappings.get(subSlowEventType);\n+    \n+        if (sets != null && sets.contains(subscriber)) {\n+            sets.remove(subscriber);\n+            if (sets.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82d5e11b8fb7de71715e15b5a27ccd32a37feef7"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzODgyNg==", "bodyText": "I revert this codes and fix the other same issue.", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r444638826", "createdAt": "2020-06-24T04:34:07Z", "author": {"login": "zongtanghu"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.notify;\n+\n+import com.alibaba.nacos.common.notify.listener.Subscriber;\n+import com.alibaba.nacos.common.utils.ConcurrentHashSet;\n+\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ * The default share event publisher implementation for slow event.\n+ *\n+ * @author zongtanghu\n+ */\n+public class DefaultSharePublisher extends DefaultPublisher {\n+    \n+    private final Map<Class<? extends SlowEvent>, Set<Subscriber>> subMappings = new ConcurrentHashMap<Class<? extends SlowEvent>, Set<Subscriber>>();\n+    \n+    @Override\n+    public void addSubscriber(Subscriber subscriber, Class<? extends Event> subscribeType) {\n+        // Actually, do a classification based on the slowEvent type.\n+        Class<? extends SlowEvent> subSlowEventType = (Class<? extends SlowEvent>) subscribeType;\n+        // For adding to parent class attributes synchronization.\n+        subscribers.add(subscriber);\n+        Set<Subscriber> sets = subMappings.get(subSlowEventType);\n+        \n+        if (sets == null) {\n+            Set<Subscriber> newSet = new ConcurrentHashSet<Subscriber>();\n+            newSet.add(subscriber);\n+            subMappings.put(subSlowEventType, newSet);\n+            return;\n+        }\n+        \n+        sets.add(subscriber);\n+    }\n+    \n+    @Override\n+    public void removeSubscriber(Subscriber subscriber, Class<? extends Event> subscribeType) {\n+        // Actually, do a classification based on the slowEvent type.\n+        Class<? extends SlowEvent> subSlowEventType = (Class<? extends SlowEvent>) subscribeType;\n+        // For removing to parent class attributes synchronization.\n+        subscribers.remove(subscriber);\n+    \n+        Set<Subscriber> sets = subMappings.get(subSlowEventType);\n+    \n+        if (sets != null && sets.contains(subscriber)) {\n+            sets.remove(subscriber);\n+            if (sets.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYwNjEyMg=="}, "originalCommit": {"oid": "82d5e11b8fb7de71715e15b5a27ccd32a37feef7"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDI3Njc0OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/notify/EventPublisher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMjoxNjoyMlrOGoAnkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMjozOTowOFrOGoA-ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYwNjM1Mg==", "bodyText": "\u540c\u4e0a\uff0c\u8fd9\u4e2a\u63a5\u53e3\u672c\u4e0d\u662f\u4e00\u4e2a\u516c\u5171\u63a5\u53e3\uff0c\u4ed6\u53ea\u662f\u9002\u7528\u4e8eSharePublisher", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r444606352", "createdAt": "2020-06-24T02:16:22Z", "author": {"login": "chuntaojun"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/EventPublisher.java", "diffHunk": "@@ -46,15 +46,17 @@\n      * Add listener.\n      *\n      * @param subscriber {@link Subscriber}\n+     * @param subscribeType type of subscribe\n      */\n-    void addSubscriber(Subscriber subscriber);\n+    void addSubscriber(Subscriber subscriber, Class<? extends Event> subscribeType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82d5e11b8fb7de71715e15b5a27ccd32a37feef7"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYxMjI5MQ==", "bodyText": "Okay, I will adjust this codes.", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r444612291", "createdAt": "2020-06-24T02:39:08Z", "author": {"login": "zongtanghu"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/EventPublisher.java", "diffHunk": "@@ -46,15 +46,17 @@\n      * Add listener.\n      *\n      * @param subscriber {@link Subscriber}\n+     * @param subscribeType type of subscribe\n      */\n-    void addSubscriber(Subscriber subscriber);\n+    void addSubscriber(Subscriber subscriber, Class<? extends Event> subscribeType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYwNjM1Mg=="}, "originalCommit": {"oid": "82d5e11b8fb7de71715e15b5a27ccd32a37feef7"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDQ1Nzg4OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDoxNDowOFrOGoCVew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDozNDo1NlrOGoCnHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzNDQ5MQ==", "bodyText": "\u8fd9\u91cc\u53ef\u80fd\u8fd8\u662f\u4f1a\u6709\u539f\u5b50\u6027\u7684\u95ee\u9898\uff0c\u53ef\u80fd\u5b58\u5728\u4e24\u4e2a\u7ebf\u7a0b\u540c\u65f6\u53bbaddSubscriber\uff0cget\u540e\u7684\u7ed3\u679c\u540c\u65f6\u4e3anull", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r444634491", "createdAt": "2020-06-24T04:14:08Z", "author": {"login": "chuntaojun"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.notify;\n+\n+import com.alibaba.nacos.common.notify.listener.Subscriber;\n+import com.alibaba.nacos.common.utils.ConcurrentHashSet;\n+\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ * The default share event publisher implementation for slow event.\n+ *\n+ * @author zongtanghu\n+ */\n+public class DefaultSharePublisher extends DefaultPublisher {\n+    \n+    private final Map<Class<? extends SlowEvent>, Set<Subscriber>> subMappings = new ConcurrentHashMap<Class<? extends SlowEvent>, Set<Subscriber>>();\n+    \n+    /**\n+     * Add listener for default share publisher.\n+     *\n+     * @param subscriber {@link Subscriber}\n+     * @param subscribeType subscribe event type, such as slow event or general event.\n+     */\n+    public void addSubscriber(Subscriber subscriber, Class<? extends Event> subscribeType) {\n+        // Actually, do a classification based on the slowEvent type.\n+        Class<? extends SlowEvent> subSlowEventType = (Class<? extends SlowEvent>) subscribeType;\n+        // For adding to parent class attributes synchronization.\n+        subscribers.add(subscriber);\n+        Set<Subscriber> sets = subMappings.get(subSlowEventType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f21146470ac7429dfdcaf56000ee4b7698a85c50"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzOTAwNw==", "bodyText": "I will fix and resolve the same other issue.", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r444639007", "createdAt": "2020-06-24T04:34:56Z", "author": {"login": "zongtanghu"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.notify;\n+\n+import com.alibaba.nacos.common.notify.listener.Subscriber;\n+import com.alibaba.nacos.common.utils.ConcurrentHashSet;\n+\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ * The default share event publisher implementation for slow event.\n+ *\n+ * @author zongtanghu\n+ */\n+public class DefaultSharePublisher extends DefaultPublisher {\n+    \n+    private final Map<Class<? extends SlowEvent>, Set<Subscriber>> subMappings = new ConcurrentHashMap<Class<? extends SlowEvent>, Set<Subscriber>>();\n+    \n+    /**\n+     * Add listener for default share publisher.\n+     *\n+     * @param subscriber {@link Subscriber}\n+     * @param subscribeType subscribe event type, such as slow event or general event.\n+     */\n+    public void addSubscriber(Subscriber subscriber, Class<? extends Event> subscribeType) {\n+        // Actually, do a classification based on the slowEvent type.\n+        Class<? extends SlowEvent> subSlowEventType = (Class<? extends SlowEvent>) subscribeType;\n+        // For adding to parent class attributes synchronization.\n+        subscribers.add(subscriber);\n+        Set<Subscriber> sets = subMappings.get(subSlowEventType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzNDQ5MQ=="}, "originalCommit": {"oid": "f21146470ac7429dfdcaf56000ee4b7698a85c50"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDQ1OTI2OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDoxNDo1NFrOGoCWQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDozMzoxNVrOGoClng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzNDY4OA==", "bodyText": "\u8fd9\u91cc\u5e94\u8be5\u4e0d\u518d\u9700\u8981\u8c03\u7528 subscribers.add(subscriber)", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r444634688", "createdAt": "2020-06-24T04:14:54Z", "author": {"login": "chuntaojun"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.notify;\n+\n+import com.alibaba.nacos.common.notify.listener.Subscriber;\n+import com.alibaba.nacos.common.utils.ConcurrentHashSet;\n+\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ * The default share event publisher implementation for slow event.\n+ *\n+ * @author zongtanghu\n+ */\n+public class DefaultSharePublisher extends DefaultPublisher {\n+    \n+    private final Map<Class<? extends SlowEvent>, Set<Subscriber>> subMappings = new ConcurrentHashMap<Class<? extends SlowEvent>, Set<Subscriber>>();\n+    \n+    /**\n+     * Add listener for default share publisher.\n+     *\n+     * @param subscriber {@link Subscriber}\n+     * @param subscribeType subscribe event type, such as slow event or general event.\n+     */\n+    public void addSubscriber(Subscriber subscriber, Class<? extends Event> subscribeType) {\n+        // Actually, do a classification based on the slowEvent type.\n+        Class<? extends SlowEvent> subSlowEventType = (Class<? extends SlowEvent>) subscribeType;\n+        // For adding to parent class attributes synchronization.\n+        subscribers.add(subscriber);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f21146470ac7429dfdcaf56000ee4b7698a85c50"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzODYyMg==", "bodyText": "I suggest to retain.", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r444638622", "createdAt": "2020-06-24T04:33:15Z", "author": {"login": "zongtanghu"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.notify;\n+\n+import com.alibaba.nacos.common.notify.listener.Subscriber;\n+import com.alibaba.nacos.common.utils.ConcurrentHashSet;\n+\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ * The default share event publisher implementation for slow event.\n+ *\n+ * @author zongtanghu\n+ */\n+public class DefaultSharePublisher extends DefaultPublisher {\n+    \n+    private final Map<Class<? extends SlowEvent>, Set<Subscriber>> subMappings = new ConcurrentHashMap<Class<? extends SlowEvent>, Set<Subscriber>>();\n+    \n+    /**\n+     * Add listener for default share publisher.\n+     *\n+     * @param subscriber {@link Subscriber}\n+     * @param subscribeType subscribe event type, such as slow event or general event.\n+     */\n+    public void addSubscriber(Subscriber subscriber, Class<? extends Event> subscribeType) {\n+        // Actually, do a classification based on the slowEvent type.\n+        Class<? extends SlowEvent> subSlowEventType = (Class<? extends SlowEvent>) subscribeType;\n+        // For adding to parent class attributes synchronization.\n+        subscribers.add(subscriber);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzNDY4OA=="}, "originalCommit": {"oid": "f21146470ac7429dfdcaf56000ee4b7698a85c50"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDQ1OTk3OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDoxNToxNlrOGoCWog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDozMzoxOFrOGoClqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzNDc4Ng==", "bodyText": "\u540c\u7406\uff0c\u8fd9\u4e2a\u4e5f\u4e0d\u518d\u9700\u8981\u8c03\u7528\u4e86", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r444634786", "createdAt": "2020-06-24T04:15:16Z", "author": {"login": "chuntaojun"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.notify;\n+\n+import com.alibaba.nacos.common.notify.listener.Subscriber;\n+import com.alibaba.nacos.common.utils.ConcurrentHashSet;\n+\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ * The default share event publisher implementation for slow event.\n+ *\n+ * @author zongtanghu\n+ */\n+public class DefaultSharePublisher extends DefaultPublisher {\n+    \n+    private final Map<Class<? extends SlowEvent>, Set<Subscriber>> subMappings = new ConcurrentHashMap<Class<? extends SlowEvent>, Set<Subscriber>>();\n+    \n+    /**\n+     * Add listener for default share publisher.\n+     *\n+     * @param subscriber {@link Subscriber}\n+     * @param subscribeType subscribe event type, such as slow event or general event.\n+     */\n+    public void addSubscriber(Subscriber subscriber, Class<? extends Event> subscribeType) {\n+        // Actually, do a classification based on the slowEvent type.\n+        Class<? extends SlowEvent> subSlowEventType = (Class<? extends SlowEvent>) subscribeType;\n+        // For adding to parent class attributes synchronization.\n+        subscribers.add(subscriber);\n+        Set<Subscriber> sets = subMappings.get(subSlowEventType);\n+        \n+        if (sets == null) {\n+            Set<Subscriber> newSet = new ConcurrentHashSet<Subscriber>();\n+            newSet.add(subscriber);\n+            subMappings.put(subSlowEventType, newSet);\n+            return;\n+        }\n+        \n+        sets.add(subscriber);\n+    }\n+    \n+    /**\n+     * Remove listener for default share publisher.\n+     *\n+     * @param subscriber {@link Subscriber}\n+     * @param subscribeType subscribe event type, such as slow event or general event.\n+     */\n+    public void removeSubscriber(Subscriber subscriber, Class<? extends Event> subscribeType) {\n+        // Actually, do a classification based on the slowEvent type.\n+        Class<? extends SlowEvent> subSlowEventType = (Class<? extends SlowEvent>) subscribeType;\n+        // For removing to parent class attributes synchronization.\n+        subscribers.remove(subscriber);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f21146470ac7429dfdcaf56000ee4b7698a85c50"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzODYzMw==", "bodyText": "I suggest to retain.", "url": "https://github.com/alibaba/nacos/pull/3145#discussion_r444638633", "createdAt": "2020-06-24T04:33:18Z", "author": {"login": "zongtanghu"}, "path": "common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.notify;\n+\n+import com.alibaba.nacos.common.notify.listener.Subscriber;\n+import com.alibaba.nacos.common.utils.ConcurrentHashSet;\n+\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ * The default share event publisher implementation for slow event.\n+ *\n+ * @author zongtanghu\n+ */\n+public class DefaultSharePublisher extends DefaultPublisher {\n+    \n+    private final Map<Class<? extends SlowEvent>, Set<Subscriber>> subMappings = new ConcurrentHashMap<Class<? extends SlowEvent>, Set<Subscriber>>();\n+    \n+    /**\n+     * Add listener for default share publisher.\n+     *\n+     * @param subscriber {@link Subscriber}\n+     * @param subscribeType subscribe event type, such as slow event or general event.\n+     */\n+    public void addSubscriber(Subscriber subscriber, Class<? extends Event> subscribeType) {\n+        // Actually, do a classification based on the slowEvent type.\n+        Class<? extends SlowEvent> subSlowEventType = (Class<? extends SlowEvent>) subscribeType;\n+        // For adding to parent class attributes synchronization.\n+        subscribers.add(subscriber);\n+        Set<Subscriber> sets = subMappings.get(subSlowEventType);\n+        \n+        if (sets == null) {\n+            Set<Subscriber> newSet = new ConcurrentHashSet<Subscriber>();\n+            newSet.add(subscriber);\n+            subMappings.put(subSlowEventType, newSet);\n+            return;\n+        }\n+        \n+        sets.add(subscriber);\n+    }\n+    \n+    /**\n+     * Remove listener for default share publisher.\n+     *\n+     * @param subscriber {@link Subscriber}\n+     * @param subscribeType subscribe event type, such as slow event or general event.\n+     */\n+    public void removeSubscriber(Subscriber subscriber, Class<? extends Event> subscribeType) {\n+        // Actually, do a classification based on the slowEvent type.\n+        Class<? extends SlowEvent> subSlowEventType = (Class<? extends SlowEvent>) subscribeType;\n+        // For removing to parent class attributes synchronization.\n+        subscribers.remove(subscriber);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzNDc4Ng=="}, "originalCommit": {"oid": "f21146470ac7429dfdcaf56000ee4b7698a85c50"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4437, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}