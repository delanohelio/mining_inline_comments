{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NzE0OTkz", "number": 3452, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMTo0Njo0NVrOESNaNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMTo0ODo1NlrOESNbQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTI5NTI2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/alibaba/nacos/core/cluster/ServerMemberManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMTo0Njo0NVrOG3ROTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMTo0Njo0NVrOG3ROTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYwNzA1Mg==", "bodyText": "Why not use interface rather than Abstract class\uff1f", "url": "https://github.com/alibaba/nacos/pull/3452#discussion_r460607052", "createdAt": "2020-07-27T01:46:45Z", "author": {"login": "KomachiSion"}, "path": "core/src/main/java/com/alibaba/nacos/core/cluster/ServerMemberManager.java", "diffHunk": "@@ -454,7 +454,7 @@ protected void executeBody() {\n             try {\n                 asyncHttpClient\n                         .post(url, Header.newInstance().addParam(Constants.NACOS_SERVER_HEADER, VersionUtils.version),\n-                                Query.EMPTY, getSelf(), reference.getType(), new Callback<String>() {\n+                                Query.EMPTY, getSelf(), reference.getType(), new AbstractCallback<String>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5733c5114513b01a1a1ac7704f4e923e68db74c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTI5NjY1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/alibaba/nacos/core/controller/NacosClusterController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMTo0Nzo0NFrOG3RPFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMTo0Nzo0NFrOG3RPFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYwNzI1Mg==", "bodyText": "Same question as above", "url": "https://github.com/alibaba/nacos/pull/3452#discussion_r460607252", "createdAt": "2020-07-27T01:47:44Z", "author": {"login": "KomachiSion"}, "path": "core/src/main/java/com/alibaba/nacos/core/controller/NacosClusterController.java", "diffHunk": "@@ -162,7 +162,7 @@ public NacosClusterController(ServerMemberManager memberManager) {\n             final String url = HttpUtils\n                     .buildUrl(false, member.getAddress(), ApplicationUtils.getContextPath(), Commons.NACOS_CORE_CONTEXT,\n                             \"/cluster/server/leave\");\n-            asyncHttpClient.post(url, Header.EMPTY, Query.EMPTY, params, genericType.getType(), new Callback<String>() {\n+            asyncHttpClient.post(url, Header.EMPTY, Query.EMPTY, params, genericType.getType(), new AbstractCallback<String>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5733c5114513b01a1a1ac7704f4e923e68db74c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTI5Nzk1OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/alibaba/nacos/common/http/AbstractCallback.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMTo0ODo1NlrOG3RP7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMTo0ODo1NlrOG3RP7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYwNzQ2OQ==", "bodyText": "An abstract class but without any default implement and no more abstract method?", "url": "https://github.com/alibaba/nacos/pull/3452#discussion_r460607469", "createdAt": "2020-07-27T01:48:56Z", "author": {"login": "KomachiSion"}, "path": "common/src/main/java/com/alibaba/nacos/common/http/AbstractCallback.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.http;\n+\n+import com.alibaba.nacos.common.model.RestResult;\n+\n+/**\n+ * Abstract callback.\n+ *\n+ * @author mai.jh\n+ */\n+public abstract class AbstractCallback<T> implements Callback<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5733c5114513b01a1a1ac7704f4e923e68db74c"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4378, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}