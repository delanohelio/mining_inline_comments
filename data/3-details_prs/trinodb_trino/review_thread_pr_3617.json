{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMTU1OTEz", "number": 3617, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwODozNDoyNFrOD5Tgcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjoyNjozMFrOD5exhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDE1MDI2OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HivePageSource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwODozNDoyNFrOGQfiog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwODozNDoyNFrOGQfiog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk0NzE3MA==", "bodyText": "I originally said UTC to answer \"but which zone?\" (timestamp with time zone requires some zone, but we have just point in time), but the zone doesn't really matter.\nWe could keep it simpler and leave this code piece intact.", "url": "https://github.com/trinodb/trino/pull/3617#discussion_r419947170", "createdAt": "2020-05-05T08:34:24Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HivePageSource.java", "diffHunk": "@@ -211,7 +213,11 @@ else if (type.equals(DATE)) {\n                     prefilledValue = datePartitionKey(columnValue, name);\n                 }\n                 else if (type.equals(TIMESTAMP) || type.equals(TIMESTAMP_WITH_TIME_ZONE)) {\n-                    prefilledValue = timestampPartitionKey(columnValue, hiveStorageTimeZone, name, type.equals(TIMESTAMP_WITH_TIME_ZONE));\n+                    DateTimeZone zone = hiveStorageTimeZone;\n+                    if (isFileModifiedTimeColumnHandle(column)) {\n+                        zone = UTC;\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDE1OTE0OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveColumnHandle.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwODozNjo1N1rOGQfoIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwODozNjo1N1rOGQfoIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk0ODU3Nw==", "bodyText": "Add\n// TODO introduce HiveType.HIVE_TIMESTAMP_WITH_TIME_ZONE\n\n-- we cannot add this type here before we upgrade to Hive 3.1, but we should eventually clean this up", "url": "https://github.com/trinodb/trino/pull/3617#discussion_r419948577", "createdAt": "2020-05-05T08:36:57Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveColumnHandle.java", "diffHunk": "@@ -58,8 +59,8 @@\n \n     public static final int FILE_MODIFIED_TIME_COLUMN_INDEX = -14;\n     public static final String FILE_MODIFIED_TIME_COLUMN_NAME = \"$file_modified_time\";\n-    public static final HiveType FILE_MODIFIED_TIME_TYPE = HIVE_LONG;\n-    public static final Type FILE_MODIFIED_TIME_TYPE_SIGNATURE = BIGINT;\n+    public static final HiveType FILE_MODIFIED_TIME_TYPE = HiveType.HIVE_TIMESTAMP;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDE2MDM3OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestHiveIntegrationSmokeTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwODozNzoxN1rOGQfo3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwODozNzoxN1rOGQfo3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk0ODc2Nw==", "bodyText": "ZonedDateTime -> Instant\n(file modification times are points in time, zoneless)", "url": "https://github.com/trinodb/trino/pull/3617#discussion_r419948767", "createdAt": "2020-05-05T08:37:17Z", "author": {"login": "findepi"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestHiveIntegrationSmokeTest.java", "diffHunk": "@@ -3812,17 +3813,17 @@ public void testFileModifiedTimeHiddenColumn()\n         assertEquals(getPartitions(\"test_file_modified_time\").size(), 3);\n \n         MaterializedResult results = computeActual(format(\"SELECT *, \\\"%s\\\" FROM test_file_modified_time\", FILE_MODIFIED_TIME_COLUMN_NAME));\n-        Map<Integer, Long> fileModifiedTimeMap = new HashMap<>();\n+        Map<Integer, ZonedDateTime> fileModifiedTimeMap = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTk5NjIzOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveUtil.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjoyNjozMFrOGQxd9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxOTo0NjozMFrOGQ49Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI0MDg4NQ==", "bodyText": "@findepi, I removed the fixed zone in UTC time, but had add a change to pass the hive storage zone through to here. Otherwise the time was printed in UTC but was tagged with the hiveStorageTimeZone.", "url": "https://github.com/trinodb/trino/pull/3617#discussion_r420240885", "createdAt": "2020-05-05T16:26:30Z", "author": {"login": "alexjo2144"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveUtil.java", "diffHunk": "@@ -988,7 +995,7 @@ public static String getPrefilledColumnValue(HiveColumnHandle columnHandle, Hive\n             return String.valueOf(fileSize);\n         }\n         if (isFileModifiedTimeColumnHandle(columnHandle)) {\n-            return String.valueOf(fileModifiedTime);\n+            return HIVE_TIMESTAMP_PARSER.withZone(hiveStorageTimeZone).print(fileModifiedTime);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM0NzAyNg==", "bodyText": "What is the value being formatted here?\nsth like\n2020-05-05T21:15:22.579\n\nor with zone\n2020-05-05T19:15:22.595Z\n\n?\nIf you format with zone, you shouldn't need hiveStorageTimeZone param\ncan you try this?", "url": "https://github.com/trinodb/trino/pull/3617#discussion_r420347026", "createdAt": "2020-05-05T19:16:31Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveUtil.java", "diffHunk": "@@ -988,7 +995,7 @@ public static String getPrefilledColumnValue(HiveColumnHandle columnHandle, Hive\n             return String.valueOf(fileSize);\n         }\n         if (isFileModifiedTimeColumnHandle(columnHandle)) {\n-            return String.valueOf(fileModifiedTime);\n+            return HIVE_TIMESTAMP_PARSER.withZone(hiveStorageTimeZone).print(fileModifiedTime);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI0MDg4NQ=="}, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM2MzUyNg==", "bodyText": "The Hive timestamp format is like the first one, without a zone. https://github.com/prestosql/presto/blob/master/presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveUtil.java#L205\nThe page source is hardcoded to use this parser (without zone in the format) for all TIMESTAMP_WITH_TIME_ZONE columns including these pre-filled values. It gets around that by specifying the time zone as hiveStorageTimeZone https://github.com/prestosql/presto/blob/master/presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveUtil.java#L368", "url": "https://github.com/trinodb/trino/pull/3617#discussion_r420363526", "createdAt": "2020-05-05T19:46:30Z", "author": {"login": "alexjo2144"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveUtil.java", "diffHunk": "@@ -988,7 +995,7 @@ public static String getPrefilledColumnValue(HiveColumnHandle columnHandle, Hive\n             return String.valueOf(fileSize);\n         }\n         if (isFileModifiedTimeColumnHandle(columnHandle)) {\n-            return String.valueOf(fileModifiedTime);\n+            return HIVE_TIMESTAMP_PARSER.withZone(hiveStorageTimeZone).print(fileModifiedTime);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI0MDg4NQ=="}, "originalCommit": null, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 21, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}