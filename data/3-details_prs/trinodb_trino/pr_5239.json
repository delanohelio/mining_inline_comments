{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMjQ1ODA4", "number": 5239, "title": "Close postgres test resources in order", "bodyText": "Close PSQL test resources in order\nBefore this change query runner was closed before testing PSQL server.\nThat led to situation that there was a time where query runner was up\nand running but without a dependant service.\nIn case of PSQL testing this was not causing any issue as query runner\nwas not used during that time, but this reveals a generic tests infra\nissue that may affect other tests.", "createdAt": "2020-09-21T12:03:55Z", "url": "https://github.com/trinodb/trino/pull/5239", "merged": true, "mergeCommit": {"oid": "5f9d7aebacf46313fa67a8a025fca69692a59c2b"}, "closed": true, "closedAt": "2020-09-22T09:20:57Z", "author": {"login": "kokosing"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLSlUFgFqTQ5MzE3NzAzMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLUKQDAFqTQ5MzI1MDc3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMTc3MDMx", "url": "https://github.com/trinodb/trino/pull/5239#pullrequestreview-493177031", "createdAt": "2020-09-22T07:09:26Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzowOToyN1rOHVszTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzowOToyN1rOHVszTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUxNjE3Mg==", "bodyText": "Regarding commit message:\nBefore this change query runner was closed before testing PSQL server.\nThat led to situation that there was a time where query runner was up\nand running but without a dependant service.\n\nI think you meant:\nBefore this change testing PSQL server was closed before query runner", "url": "https://github.com/trinodb/trino/pull/5239#discussion_r492516172", "createdAt": "2020-09-22T07:09:27Z", "author": {"login": "losipiuk"}, "path": "presto-postgresql/src/test/java/io/prestosql/plugin/postgresql/TestPostgreSqlCaseInsensitiveMapping.java", "diffHunk": "@@ -17,7 +17,6 @@\n import com.google.common.collect.ImmutableSet;\n import io.prestosql.testing.AbstractTestQueryFramework;\n import io.prestosql.testing.QueryRunner;\n-import org.testng.annotations.AfterClass;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMTc4MTI2", "url": "https://github.com/trinodb/trino/pull/5239#pullrequestreview-493178126", "createdAt": "2020-09-22T07:11:11Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzoxMToxMlrOHVs2rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzoxMToxMlrOHVs2rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUxNzAzOQ==", "bodyText": "rename to registerForClosing", "url": "https://github.com/trinodb/trino/pull/5239#discussion_r492517039", "createdAt": "2020-09-22T07:11:12Z", "author": {"login": "losipiuk"}, "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestQueryFramework.java", "diffHunk": "@@ -459,4 +464,10 @@ protected OperatorStats searchScanFilterAndProjectOperatorStats(QueryId queryId,\n                 .filter(summary -> nodeId.equals(summary.getPlanNodeId()) && summary.getOperatorType().equals(\"ScanFilterAndProjectOperator\"))\n                 .collect(MoreCollectors.onlyElement());\n     }\n+\n+    @CanIgnoreReturnValue\n+    protected final <T extends Closeable> T registerResource(T resource)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMTc4Nzkw", "url": "https://github.com/trinodb/trino/pull/5239#pullrequestreview-493178790", "createdAt": "2020-09-22T07:12:23Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMTg2NTI1", "url": "https://github.com/trinodb/trino/pull/5239#pullrequestreview-493186525", "createdAt": "2020-09-22T07:25:02Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzoyNTowMlrOHVtQkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzoyNjoxNVrOHVtTIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUyMzY2Nw==", "bodyText": "registerResource is misleading, as you're registering a callback\n(the declaration looks legit, but the call site like this looks weird)", "url": "https://github.com/trinodb/trino/pull/5239#discussion_r492523667", "createdAt": "2020-09-22T07:25:02Z", "author": {"login": "findepi"}, "path": "presto-postgresql/src/test/java/io/prestosql/plugin/postgresql/TestPostgreSqlDistributedQueries.java", "diffHunk": "@@ -33,6 +32,10 @@ protected QueryRunner createQueryRunner()\n             throws Exception\n     {\n         postgreSqlServer = new TestingPostgreSqlServer();\n+        registerResource(() -> {\n+            postgreSqlServer.close();\n+            postgreSqlServer = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUyNDMyMA==", "bodyText": "That led to situation that there was a time where query runner was up\nand running but without a dependant service.\n\nWas it a problem?", "url": "https://github.com/trinodb/trino/pull/5239#discussion_r492524320", "createdAt": "2020-09-22T07:26:15Z", "author": {"login": "findepi"}, "path": "presto-postgresql/src/test/java/io/prestosql/plugin/postgresql/TestPostgreSqlDistributedQueries.java", "diffHunk": "@@ -44,12 +47,6 @@ protected QueryRunner createQueryRunner()\n                 TpchTable.getTables());\n     }\n \n-    @AfterClass(alwaysRun = true)\n-    public final void destroy()\n-    {\n-        postgreSqlServer.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ff3b217b9931d42d4cc78a3d835150ed02cc07d", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/9ff3b217b9931d42d4cc78a3d835150ed02cc07d", "committedDate": "2020-09-22T07:55:51Z", "message": "Remove extra this"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2647b1b7d0193c54bbe7c4b8c4dcb3727e07d7f", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/e2647b1b7d0193c54bbe7c4b8c4dcb3727e07d7f", "committedDate": "2020-09-22T07:55:51Z", "message": "Close Postgres test resources in order\n\nBefore this change testing Postgres server was closed before the query runner.\nThat led to the situation where query runner was up\nand running but without a dependant service.\n\nIn case of Postgres testing this was not causing any issue as query runner\nwas not used during that time, but this reveals a generic tests infra\nissue that may affect other tests."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "e2647b1b7d0193c54bbe7c4b8c4dcb3727e07d7f", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/e2647b1b7d0193c54bbe7c4b8c4dcb3727e07d7f", "committedDate": "2020-09-22T07:55:51Z", "message": "Close Postgres test resources in order\n\nBefore this change testing Postgres server was closed before the query runner.\nThat led to the situation where query runner was up\nand running but without a dependant service.\n\nIn case of Postgres testing this was not causing any issue as query runner\nwas not used during that time, but this reveals a generic tests infra\nissue that may affect other tests."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjU0ODAw", "url": "https://github.com/trinodb/trino/pull/5239#pullrequestreview-493254800", "createdAt": "2020-09-22T08:57:02Z", "commit": {"oid": "e2647b1b7d0193c54bbe7c4b8c4dcb3727e07d7f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjUwNzcw", "url": "https://github.com/trinodb/trino/pull/5239#pullrequestreview-493250770", "createdAt": "2020-09-22T08:51:56Z", "commit": {"oid": "e2647b1b7d0193c54bbe7c4b8c4dcb3727e07d7f"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODo1MTo1N1rOHVwU-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODo1NzozMlrOHVwivw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU3Mzk0NA==", "bodyText": "when good order is now maintained,... = null is excessive, it doesn't help much (or even at all) now, but hurts readability a lot, postgreSqlServer = closeAfterClass(new ...) is enough", "url": "https://github.com/trinodb/trino/pull/5239#discussion_r492573944", "createdAt": "2020-09-22T08:51:57Z", "author": {"login": "iirekm"}, "path": "presto-postgresql/src/test/java/io/prestosql/plugin/postgresql/TestPostgreSqlCaseInsensitiveMapping.java", "diffHunk": "@@ -41,20 +40,18 @@\n     protected QueryRunner createQueryRunner()\n             throws Exception\n     {\n-        this.postgreSqlServer = new TestingPostgreSqlServer();\n+        postgreSqlServer = new TestingPostgreSqlServer();\n+        closeAfterClass(() -> {\n+            postgreSqlServer.close();\n+            postgreSqlServer = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2647b1b7d0193c54bbe7c4b8c4dcb3727e07d7f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU3NDcwOA==", "bodyText": "for better readabillity afterClassClose, or something alike, because we also have after-method 'close' in many tests", "url": "https://github.com/trinodb/trino/pull/5239#discussion_r492574708", "createdAt": "2020-09-22T08:53:12Z", "author": {"login": "iirekm"}, "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestQueryFramework.java", "diffHunk": "@@ -100,8 +104,9 @@ protected abstract QueryRunner createQueryRunner()\n \n     @AfterClass(alwaysRun = true)\n     public void close()\n+            throws IOException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2647b1b7d0193c54bbe7c4b8c4dcb3727e07d7f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU3NzE5Mw==", "bodyText": "nit: use Closer from starburst-presto", "url": "https://github.com/trinodb/trino/pull/5239#discussion_r492577193", "createdAt": "2020-09-22T08:57:07Z", "author": {"login": "iirekm"}, "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestQueryFramework.java", "diffHunk": "@@ -83,14 +86,15 @@\n     private QueryRunner queryRunner;\n     private H2QueryRunner h2QueryRunner;\n     private SqlParser sqlParser;\n+    private final Closer afterClassCloser = Closer.create();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2647b1b7d0193c54bbe7c4b8c4dcb3727e07d7f"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU3NzQ3MQ==", "bodyText": "beforeClass or something alike to not confuse z before-method initializations", "url": "https://github.com/trinodb/trino/pull/5239#discussion_r492577471", "createdAt": "2020-09-22T08:57:32Z", "author": {"login": "iirekm"}, "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestQueryFramework.java", "diffHunk": "@@ -83,14 +86,15 @@\n     private QueryRunner queryRunner;\n     private H2QueryRunner h2QueryRunner;\n     private SqlParser sqlParser;\n+    private final Closer afterClassCloser = Closer.create();\n     private io.prestosql.sql.query.QueryAssertions queryAssertions;\n \n     @BeforeClass\n     public void init()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2647b1b7d0193c54bbe7c4b8c4dcb3727e07d7f"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3689, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}