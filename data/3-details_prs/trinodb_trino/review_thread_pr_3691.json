{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1OTM4MzUw", "number": 3691, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMDoyMjowOVrOD7LdSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTo1ODoyN1rOD7azDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMzgwMjk3OnYy", "diffSide": "RIGHT", "path": "presto-kudu/src/main/java/io/prestosql/plugin/kudu/KuduMetadata.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMDoyMjowOVrOGTWI-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMToxMDo0MlrOGTXsxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjkzODg3Mg==", "bodyText": "why is it not guaranteed?", "url": "https://github.com/trinodb/trino/pull/3691#discussion_r422938872", "createdAt": "2020-05-11T10:22:09Z", "author": {"login": "kokosing"}, "path": "presto-kudu/src/main/java/io/prestosql/plugin/kudu/KuduMetadata.java", "diffHunk": "@@ -450,8 +453,29 @@ public ConnectorTableProperties getTableProperties(ConnectorSession session, Con\n                 handle.getTable(clientSession),\n                 handle.getConstraint(),\n                 Optional.of(desiredColumns.build()),\n-                handle.isDeleteHandle());\n+                handle.isDeleteHandle(),\n+                handle.getLimit());\n \n         return Optional.of(new ProjectionApplicationResult<>(handle, projections, assignmentList.build()));\n     }\n+\n+    @Override\n+    public Optional<LimitApplicationResult<ConnectorTableHandle>> applyLimit(ConnectorSession session, ConnectorTableHandle table, long limit)\n+    {\n+        KuduTableHandle handle = (KuduTableHandle) table;\n+\n+        if (handle.getLimit().isPresent() && handle.getLimit().getAsLong() <= limit) {\n+            return Optional.empty();\n+        }\n+\n+        handle = new KuduTableHandle(\n+                handle.getSchemaTableName(),\n+                handle.getTable(clientSession),\n+                handle.getConstraint(),\n+                handle.getDesiredColumns(),\n+                handle.isDeleteHandle(),\n+                OptionalLong.of(limit));\n+\n+        return Optional.of(new LimitApplicationResult<>(handle, false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "132c5aad4f2457f7886948cc154bc68eca949e96"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk2NDQyMw==", "bodyText": "I think it creates limit for each partition so we can't guarantee a global limit but the limit is applied per partition", "url": "https://github.com/trinodb/trino/pull/3691#discussion_r422964423", "createdAt": "2020-05-11T11:10:42Z", "author": {"login": "Praveen2112"}, "path": "presto-kudu/src/main/java/io/prestosql/plugin/kudu/KuduMetadata.java", "diffHunk": "@@ -450,8 +453,29 @@ public ConnectorTableProperties getTableProperties(ConnectorSession session, Con\n                 handle.getTable(clientSession),\n                 handle.getConstraint(),\n                 Optional.of(desiredColumns.build()),\n-                handle.isDeleteHandle());\n+                handle.isDeleteHandle(),\n+                handle.getLimit());\n \n         return Optional.of(new ProjectionApplicationResult<>(handle, projections, assignmentList.build()));\n     }\n+\n+    @Override\n+    public Optional<LimitApplicationResult<ConnectorTableHandle>> applyLimit(ConnectorSession session, ConnectorTableHandle table, long limit)\n+    {\n+        KuduTableHandle handle = (KuduTableHandle) table;\n+\n+        if (handle.getLimit().isPresent() && handle.getLimit().getAsLong() <= limit) {\n+            return Optional.empty();\n+        }\n+\n+        handle = new KuduTableHandle(\n+                handle.getSchemaTableName(),\n+                handle.getTable(clientSession),\n+                handle.getConstraint(),\n+                handle.getDesiredColumns(),\n+                handle.isDeleteHandle(),\n+                OptionalLong.of(limit));\n+\n+        return Optional.of(new LimitApplicationResult<>(handle, false));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjkzODg3Mg=="}, "originalCommit": {"oid": "132c5aad4f2457f7886948cc154bc68eca949e96"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjMxNjI4OnYy", "diffSide": "RIGHT", "path": "presto-kudu/src/main/java/io/prestosql/plugin/kudu/KuduMetadata.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTo1ODoyN1rOGTu30g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwOToyNTo1OFrOGUpKUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0NDA4Mg==", "bodyText": "if limit is present, we cannot apply filter, can we?", "url": "https://github.com/trinodb/trino/pull/3691#discussion_r423344082", "createdAt": "2020-05-11T21:58:27Z", "author": {"login": "findepi"}, "path": "presto-kudu/src/main/java/io/prestosql/plugin/kudu/KuduMetadata.java", "diffHunk": "@@ -394,7 +396,8 @@ public ConnectorTableProperties getTableProperties(ConnectorSession session, Con\n                 handle.getTable(clientSession),\n                 newDomain,\n                 handle.getDesiredColumns(),\n-                handle.isDeleteHandle());\n+                handle.isDeleteHandle(),\n+                handle.getLimit());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "132c5aad4f2457f7886948cc154bc68eca949e96"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI4NTUwNg==", "bodyText": "Yes !! The applyLimit will be invoked only during this pattern TableScan -> Limit so in case of filters only if it is fully applied by the connector then limit might be pushed down", "url": "https://github.com/trinodb/trino/pull/3691#discussion_r424285506", "createdAt": "2020-05-13T09:04:03Z", "author": {"login": "Praveen2112"}, "path": "presto-kudu/src/main/java/io/prestosql/plugin/kudu/KuduMetadata.java", "diffHunk": "@@ -394,7 +396,8 @@ public ConnectorTableProperties getTableProperties(ConnectorSession session, Con\n                 handle.getTable(clientSession),\n                 newDomain,\n                 handle.getDesiredColumns(),\n-                handle.isDeleteHandle());\n+                handle.isDeleteHandle(),\n+                handle.getLimit());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0NDA4Mg=="}, "originalCommit": {"oid": "132c5aad4f2457f7886948cc154bc68eca949e96"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI5ODIwOA==", "bodyText": "Consider the cases:\nOutput -> Filter -> Limit -> Scan\n\nand\nOutput -> Limit -> Filter -> Scan\n\nsince we implement both applyLimit and applyFilter, how do we distinguish which one took place?", "url": "https://github.com/trinodb/trino/pull/3691#discussion_r424298208", "createdAt": "2020-05-13T09:24:43Z", "author": {"login": "findepi"}, "path": "presto-kudu/src/main/java/io/prestosql/plugin/kudu/KuduMetadata.java", "diffHunk": "@@ -394,7 +396,8 @@ public ConnectorTableProperties getTableProperties(ConnectorSession session, Con\n                 handle.getTable(clientSession),\n                 newDomain,\n                 handle.getDesiredColumns(),\n-                handle.isDeleteHandle());\n+                handle.isDeleteHandle(),\n+                handle.getLimit());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0NDA4Mg=="}, "originalCommit": {"oid": "132c5aad4f2457f7886948cc154bc68eca949e96"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI5OTA5MA==", "bodyText": "I realized we had this discussion some time ago with JDBC connectors, but cannot find it now. @martint @electrum ?\nUnfortunately we didn't capture much of the thinking in the code, and it looks as if this was not addressed.", "url": "https://github.com/trinodb/trino/pull/3691#discussion_r424299090", "createdAt": "2020-05-13T09:25:58Z", "author": {"login": "findepi"}, "path": "presto-kudu/src/main/java/io/prestosql/plugin/kudu/KuduMetadata.java", "diffHunk": "@@ -394,7 +396,8 @@ public ConnectorTableProperties getTableProperties(ConnectorSession session, Con\n                 handle.getTable(clientSession),\n                 newDomain,\n                 handle.getDesiredColumns(),\n-                handle.isDeleteHandle());\n+                handle.isDeleteHandle(),\n+                handle.getLimit());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0NDA4Mg=="}, "originalCommit": {"oid": "132c5aad4f2457f7886948cc154bc68eca949e96"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 87, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}