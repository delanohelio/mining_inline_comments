{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NDc2MTEz", "number": 5409, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwODozMzowMlrOEqNrdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDowMDozOVrOEqP0dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjk5NzY0OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/CachingJdbcClientFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwODozMzowMlrOHcSuGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDoyNzo0NlrOHcW6bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyODg5MA==", "bodyText": "Why do you stress it is caching related. I guess it should be generic and should be named JdbcClientFactory.", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499428890", "createdAt": "2020-10-05T08:33:02Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/CachingJdbcClientFactory.java", "diffHunk": "@@ -0,0 +1,19 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc;\n+\n+public interface CachingJdbcClientFactory", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eb03f634c4bd72a20fa3b6c5686fc3395652697"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5NzU4MQ==", "bodyText": "Guice wants to know what you bind.", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499497581", "createdAt": "2020-10-05T10:27:46Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/CachingJdbcClientFactory.java", "diffHunk": "@@ -0,0 +1,19 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc;\n+\n+public interface CachingJdbcClientFactory", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyODg5MA=="}, "originalCommit": {"oid": "4eb03f634c4bd72a20fa3b6c5686fc3395652697"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNzAwMDU2OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/DefaultCachingJdbcClientFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwODozMzo1NVrOHcSv6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDoyOToyMVrOHcW9yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyOTM1Mg==", "bodyText": "TransactionalCachingJdbcClientFactory?", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499429352", "createdAt": "2020-10-05T08:33:55Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/DefaultCachingJdbcClientFactory.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc;\n+\n+import io.airlift.units.Duration;\n+\n+import javax.inject.Inject;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class DefaultCachingJdbcClientFactory", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eb03f634c4bd72a20fa3b6c5686fc3395652697"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5ODQ0Mg==", "bodyText": "\"Default....\" indicates this is the default impl\n\"Transactional...\" indicates the role -- it's suitable within interface name (which is used for managing Guice binds)", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499498442", "createdAt": "2020-10-05T10:29:21Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/DefaultCachingJdbcClientFactory.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc;\n+\n+import io.airlift.units.Duration;\n+\n+import javax.inject.Inject;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class DefaultCachingJdbcClientFactory", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyOTM1Mg=="}, "originalCommit": {"oid": "4eb03f634c4bd72a20fa3b6c5686fc3395652697"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNzMyODE3OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/DefaultCachingJdbcClientFactory.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwOTo1NTozNlrOHcVzqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDozMDoyMFrOHcW_2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3OTQ2Ng==", "bodyText": "Where does 1d come from?\nsounds like \"almost infinity\"\nuse io.prestosql.plugin.jdbc.BaseJdbcConfig#getMetadataCacheTtl here", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499479466", "createdAt": "2020-10-05T09:55:36Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/DefaultCachingJdbcClientFactory.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc;\n+\n+import io.airlift.units.Duration;\n+\n+import javax.inject.Inject;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class DefaultCachingJdbcClientFactory\n+        implements CachingJdbcClientFactory\n+{\n+    private final JdbcClient jdbcClient;\n+\n+    @Inject\n+    public DefaultCachingJdbcClientFactory(JdbcClient jdbcClient)\n+    {\n+        this.jdbcClient = requireNonNull(jdbcClient, \"jdbcClient is null\");\n+    }\n+\n+    @Override\n+    public JdbcClient create()\n+    {\n+        return new CachingJdbcClient(jdbcClient, new Duration(1, TimeUnit.DAYS), true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eb03f634c4bd72a20fa3b6c5686fc3395652697"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4OTAzMA==", "bodyText": "sounds like \"almost infinity\"\n\nThat makes sense within single transaction. The value was moved from previous code version (see JdbcMetadataFactory)", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499489030", "createdAt": "2020-10-05T10:12:03Z", "author": {"login": "sopel39"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/DefaultCachingJdbcClientFactory.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc;\n+\n+import io.airlift.units.Duration;\n+\n+import javax.inject.Inject;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class DefaultCachingJdbcClientFactory\n+        implements CachingJdbcClientFactory\n+{\n+    private final JdbcClient jdbcClient;\n+\n+    @Inject\n+    public DefaultCachingJdbcClientFactory(JdbcClient jdbcClient)\n+    {\n+        this.jdbcClient = requireNonNull(jdbcClient, \"jdbcClient is null\");\n+    }\n+\n+    @Override\n+    public JdbcClient create()\n+    {\n+        return new CachingJdbcClient(jdbcClient, new Duration(1, TimeUnit.DAYS), true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3OTQ2Ng=="}, "originalCommit": {"oid": "4eb03f634c4bd72a20fa3b6c5686fc3395652697"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5NDYxNg==", "bodyText": "1d is neither \"reasonably short for something\" not \"infinite\"\nI am OK not changing this, but maybe \"TODO use infinity for in-transaction cache\"", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499494616", "createdAt": "2020-10-05T10:22:40Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/DefaultCachingJdbcClientFactory.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc;\n+\n+import io.airlift.units.Duration;\n+\n+import javax.inject.Inject;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class DefaultCachingJdbcClientFactory\n+        implements CachingJdbcClientFactory\n+{\n+    private final JdbcClient jdbcClient;\n+\n+    @Inject\n+    public DefaultCachingJdbcClientFactory(JdbcClient jdbcClient)\n+    {\n+        this.jdbcClient = requireNonNull(jdbcClient, \"jdbcClient is null\");\n+    }\n+\n+    @Override\n+    public JdbcClient create()\n+    {\n+        return new CachingJdbcClient(jdbcClient, new Duration(1, TimeUnit.DAYS), true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3OTQ2Ng=="}, "originalCommit": {"oid": "4eb03f634c4bd72a20fa3b6c5686fc3395652697"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5Njk2NQ==", "bodyText": "I am OK not changing this, but maybe \"TODO use infinity for in-transaction cache\"\n\nI don't think planner will ask for stats after one day ;)", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499496965", "createdAt": "2020-10-05T10:26:39Z", "author": {"login": "sopel39"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/DefaultCachingJdbcClientFactory.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc;\n+\n+import io.airlift.units.Duration;\n+\n+import javax.inject.Inject;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class DefaultCachingJdbcClientFactory\n+        implements CachingJdbcClientFactory\n+{\n+    private final JdbcClient jdbcClient;\n+\n+    @Inject\n+    public DefaultCachingJdbcClientFactory(JdbcClient jdbcClient)\n+    {\n+        this.jdbcClient = requireNonNull(jdbcClient, \"jdbcClient is null\");\n+    }\n+\n+    @Override\n+    public JdbcClient create()\n+    {\n+        return new CachingJdbcClient(jdbcClient, new Duration(1, TimeUnit.DAYS), true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3OTQ2Ng=="}, "originalCommit": {"oid": "4eb03f634c4bd72a20fa3b6c5686fc3395652697"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5ODk3MQ==", "bodyText": "this is about any caching, not related to stats\nif i have a very long running transaction, it does not make sense to flush state after 24h.\nif we want to limit trx length, we should do this explciitly (& somewhere else)", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499498971", "createdAt": "2020-10-05T10:30:20Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/DefaultCachingJdbcClientFactory.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc;\n+\n+import io.airlift.units.Duration;\n+\n+import javax.inject.Inject;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class DefaultCachingJdbcClientFactory\n+        implements CachingJdbcClientFactory\n+{\n+    private final JdbcClient jdbcClient;\n+\n+    @Inject\n+    public DefaultCachingJdbcClientFactory(JdbcClient jdbcClient)\n+    {\n+        this.jdbcClient = requireNonNull(jdbcClient, \"jdbcClient is null\");\n+    }\n+\n+    @Override\n+    public JdbcClient create()\n+    {\n+        return new CachingJdbcClient(jdbcClient, new Duration(1, TimeUnit.DAYS), true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3OTQ2Ng=="}, "originalCommit": {"oid": "4eb03f634c4bd72a20fa3b6c5686fc3395652697"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNzMzMTIxOnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/DefaultCachingJdbcClientFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwOTo1NjoyN1rOHcV1jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDoxMzoxMVrOHcWbPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3OTk1MQ==", "bodyText": "Does it mean CachingJdbcClient is no longer @Inject-ed and https://github.com/prestosql/presto/blob/142c8e20fb14535064667f8a7978525aa6e1f6f5/presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/CachingJdbcClient.java#L62-L66 ctor should be removed?\nor (likely), this is only for per-trnasaction cache?\nthen what about other cache?", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499479951", "createdAt": "2020-10-05T09:56:27Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/DefaultCachingJdbcClientFactory.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc;\n+\n+import io.airlift.units.Duration;\n+\n+import javax.inject.Inject;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class DefaultCachingJdbcClientFactory\n+        implements CachingJdbcClientFactory\n+{\n+    private final JdbcClient jdbcClient;\n+\n+    @Inject", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eb03f634c4bd72a20fa3b6c5686fc3395652697"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4OTU5OQ==", "bodyText": "CachingJdbcClient is still created by Guava. There are two caches:\n\nper-transaction cache\nglobal cache (created by Guava) that is cross transactions.\n\nThis is similar mechanism to what we have in Hive", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499489599", "createdAt": "2020-10-05T10:13:11Z", "author": {"login": "sopel39"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/DefaultCachingJdbcClientFactory.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc;\n+\n+import io.airlift.units.Duration;\n+\n+import javax.inject.Inject;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class DefaultCachingJdbcClientFactory\n+        implements CachingJdbcClientFactory\n+{\n+    private final JdbcClient jdbcClient;\n+\n+    @Inject", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3OTk1MQ=="}, "originalCommit": {"oid": "4eb03f634c4bd72a20fa3b6c5686fc3395652697"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNzM0ODM5OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/CachingJdbcClientFactory.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDowMDozOVrOHcV_jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMjowNTo1OVrOHcaBIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4MjUxMQ==", "bodyText": "Should JdbcClient become closeable?", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499482511", "createdAt": "2020-10-05T10:00:39Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/CachingJdbcClientFactory.java", "diffHunk": "@@ -0,0 +1,19 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc;\n+\n+public interface CachingJdbcClientFactory\n+{\n+    JdbcClient create();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eb03f634c4bd72a20fa3b6c5686fc3395652697"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5NzYzMw==", "bodyText": "is in-transaction state explicitly closed?", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499497633", "createdAt": "2020-10-05T10:27:51Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/CachingJdbcClientFactory.java", "diffHunk": "@@ -0,0 +1,19 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc;\n+\n+public interface CachingJdbcClientFactory\n+{\n+    JdbcClient create();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4MjUxMQ=="}, "originalCommit": {"oid": "4eb03f634c4bd72a20fa3b6c5686fc3395652697"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU0ODQ1MQ==", "bodyText": "Should JdbcClient become closeable?\n\nYou shouldn't close delegate JdbcClient, which is shared", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499548451", "createdAt": "2020-10-05T12:05:59Z", "author": {"login": "sopel39"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/CachingJdbcClientFactory.java", "diffHunk": "@@ -0,0 +1,19 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc;\n+\n+public interface CachingJdbcClientFactory\n+{\n+    JdbcClient create();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4MjUxMQ=="}, "originalCommit": {"oid": "4eb03f634c4bd72a20fa3b6c5686fc3395652697"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4582, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}