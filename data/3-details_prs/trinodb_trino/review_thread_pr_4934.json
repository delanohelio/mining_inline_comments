{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxOTcyNTY1", "number": 4934, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxOTozMTo1N1rOEbPggA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNDowMzo1NFrOEsdwIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MDAxMDg4OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HdfsConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxOTozMTo1N1rOHFHNyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNDowNzo1OVrOHfua3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEyMzE0Ng==", "bodyText": "Use primitive type to avoid object allocation.", "url": "https://github.com/trinodb/trino/pull/4934#discussion_r475123146", "createdAt": "2020-08-22T19:31:57Z", "author": {"login": "phd3"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HdfsConfig.java", "diffHunk": "@@ -49,6 +49,7 @@\n     private HostAndPort socksProxy;\n     private boolean wireEncryptionEnabled;\n     private int fileSystemMaxCacheSize = 1000;\n+    private Integer dfsReplication;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzAyODQ0NQ==", "bodyText": "dropped in favor of #4934 (comment)", "url": "https://github.com/trinodb/trino/pull/4934#discussion_r503028445", "createdAt": "2020-10-12T04:07:59Z", "author": {"login": "phd3"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HdfsConfig.java", "diffHunk": "@@ -49,6 +49,7 @@\n     private HostAndPort socksProxy;\n     private boolean wireEncryptionEnabled;\n     private int fileSystemMaxCacheSize = 1000;\n+    private Integer dfsReplication;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEyMzE0Ng=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDU5OTUwOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HdfsConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNDowMToyN1rOHfuVug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxODoxOToxMFrOHiUegQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzAyNzEzMA==", "bodyText": "nit: I think it'd be good to still want to have the @Min(1) annotation, so that invalid values (eg. 0) can be detected during server startup. @agrawalreetika thoughts?\n(The annotation seems to work for Integer class. It also lets null objects go through.)", "url": "https://github.com/trinodb/trino/pull/4934#discussion_r503027130", "createdAt": "2020-10-12T04:01:27Z", "author": {"login": "phd3"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HdfsConfig.java", "diffHunk": "@@ -216,4 +217,17 @@ public HdfsConfig setFileSystemMaxCacheSize(int fileSystemMaxCacheSize)\n         this.fileSystemMaxCacheSize = fileSystemMaxCacheSize;\n         return this;\n     }\n+\n+    public Integer getDfsReplication()\n+    {\n+        return dfsReplication;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc0OTEyMQ==", "bodyText": "Thanks, @phd3 for your suggestion. This looks like a very valid to cover to avoid null.", "url": "https://github.com/trinodb/trino/pull/4934#discussion_r505749121", "createdAt": "2020-10-15T18:19:10Z", "author": {"login": "agrawalreetika"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HdfsConfig.java", "diffHunk": "@@ -216,4 +217,17 @@ public HdfsConfig setFileSystemMaxCacheSize(int fileSystemMaxCacheSize)\n         this.fileSystemMaxCacheSize = fileSystemMaxCacheSize;\n         return this;\n     }\n+\n+    public Integer getDfsReplication()\n+    {\n+        return dfsReplication;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzAyNzEzMA=="}, "originalCommit": null, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDYwMjU2OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/connector/hive.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNDowMzo1NFrOHfuXjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNDowMzo1NFrOHfuXjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzAyNzU5Ng==", "bodyText": "nit: file system would be better for the documentation IMO.", "url": "https://github.com/trinodb/trino/pull/4934#discussion_r503027596", "createdAt": "2020-10-12T04:03:54Z", "author": {"login": "phd3"}, "path": "presto-docs/src/main/sphinx/connector/hive.rst", "diffHunk": "@@ -232,6 +232,8 @@ Property Name                                      Description\n \n ``hive.hdfs.presto.keytab``                        HDFS client keytab location.\n \n+``hive.dfs.replication``                           Hadoop fileSystem replication factor.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3261, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}