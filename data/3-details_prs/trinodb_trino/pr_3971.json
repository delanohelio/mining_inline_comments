{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNDUxOTM3", "number": 3971, "title": "Verify that dynamic filters in plan are above table scan", "bodyText": "", "createdAt": "2020-06-08T23:38:24Z", "url": "https://github.com/trinodb/trino/pull/3971", "merged": true, "mergeCommit": {"oid": "b36baf5002bd656cf4715c3cf0b234e7e7a6c427"}, "closed": true, "closedAt": "2020-06-09T10:47:35Z", "author": {"login": "raunaqmorarka"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpdN3RABqjM0MjI5NDcwNDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcphpkfgBqjM0MjM5MzIwMTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2OTA1NDIx", "url": "https://github.com/trinodb/trino/pull/3971#pullrequestreview-426905421", "createdAt": "2020-06-09T08:30:05Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODozMDowNlrOGg-W5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODozMTozMVrOGg-aeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyOTI4NQ==", "bodyText": "nit: each argument in newline", "url": "https://github.com/trinodb/trino/pull/3971#discussion_r437229285", "createdAt": "2020-06-09T08:30:06Z", "author": {"login": "sopel39"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/optimizations/TestRemoveUnsupportedDynamicFilters.java", "diffHunk": "@@ -182,6 +182,39 @@ public void testUnmatchedDynamicFilter()\n                                         tableScan(\"lineitem\", ImmutableMap.of(\"LINEITEM_OK\", \"orderkey\"))))));\n     }\n \n+    @Test\n+    public void testRemoveDynamicFilterNotAboveTableScan()\n+    {\n+        PlanNode root = builder.output(\n+                ImmutableList.of(),\n+                ImmutableList.of(),\n+                builder.join(\n+                        INNER,\n+                        builder.filter(\n+                                combineConjuncts(\n+                                        metadata,\n+                                        PlanBuilder.expression(\"LINEITEM_OK > 0\"),\n+                                        createDynamicFilterExpression(metadata, \"DF\", BIGINT, ordersOrderKeySymbol.toSymbolReference())),\n+                                builder.values(lineitemOrderKeySymbol)),\n+                        ordersTableScanNode,\n+                        ImmutableList.of(new JoinNode.EquiJoinClause(lineitemOrderKeySymbol, ordersOrderKeySymbol)),\n+                        ImmutableList.of(),\n+                        ImmutableList.of(),\n+                        Optional.empty(),\n+                        Optional.empty(),\n+                        Optional.empty(),\n+                        ImmutableMap.of(\"DF\", ordersOrderKeySymbol)));\n+        assertPlan(\n+                removeUnsupportedDynamicFilters(root),\n+                output(\n+                        join(\n+                                INNER,\n+                                ImmutableList.of(equiJoinClause(\"LINEITEM_OK\", \"ORDERS_OK\")),\n+                                filter(\"LINEITEM_OK > 0\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIzMDIwMA==", "bodyText": "You should use io.prestosql.sql.planner.assertions.PlanMatchPattern#filter(io.prestosql.sql.tree.Expression, io.prestosql.sql.tree.Expression, io.prestosql.sql.planner.assertions.PlanMatchPattern) instead. This filter method doesn't validate dynamic filters.", "url": "https://github.com/trinodb/trino/pull/3971#discussion_r437230200", "createdAt": "2020-06-09T08:31:31Z", "author": {"login": "sopel39"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/optimizations/TestRemoveUnsupportedDynamicFilters.java", "diffHunk": "@@ -182,6 +182,39 @@ public void testUnmatchedDynamicFilter()\n                                         tableScan(\"lineitem\", ImmutableMap.of(\"LINEITEM_OK\", \"orderkey\"))))));\n     }\n \n+    @Test\n+    public void testRemoveDynamicFilterNotAboveTableScan()\n+    {\n+        PlanNode root = builder.output(\n+                ImmutableList.of(),\n+                ImmutableList.of(),\n+                builder.join(\n+                        INNER,\n+                        builder.filter(\n+                                combineConjuncts(\n+                                        metadata,\n+                                        PlanBuilder.expression(\"LINEITEM_OK > 0\"),\n+                                        createDynamicFilterExpression(metadata, \"DF\", BIGINT, ordersOrderKeySymbol.toSymbolReference())),\n+                                builder.values(lineitemOrderKeySymbol)),\n+                        ordersTableScanNode,\n+                        ImmutableList.of(new JoinNode.EquiJoinClause(lineitemOrderKeySymbol, ordersOrderKeySymbol)),\n+                        ImmutableList.of(),\n+                        ImmutableList.of(),\n+                        Optional.empty(),\n+                        Optional.empty(),\n+                        Optional.empty(),\n+                        ImmutableMap.of(\"DF\", ordersOrderKeySymbol)));\n+        assertPlan(\n+                removeUnsupportedDynamicFilters(root),\n+                output(\n+                        join(\n+                                INNER,\n+                                ImmutableList.of(equiJoinClause(\"LINEITEM_OK\", \"ORDERS_OK\")),\n+                                filter(\"LINEITEM_OK > 0\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyOTI4NQ=="}, "originalCommit": null, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2OTM3OTQw", "url": "https://github.com/trinodb/trino/pull/3971#pullrequestreview-426937940", "createdAt": "2020-06-09T09:05:41Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTowNTo0MlrOGg_4VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTowNTo0OFrOGg_4pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1NDIyOQ==", "bodyText": "static import expression", "url": "https://github.com/trinodb/trino/pull/3971#discussion_r437254229", "createdAt": "2020-06-09T09:05:42Z", "author": {"login": "sopel39"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/optimizations/TestRemoveUnsupportedDynamicFilters.java", "diffHunk": "@@ -182,6 +182,41 @@ public void testUnmatchedDynamicFilter()\n                                         tableScan(\"lineitem\", ImmutableMap.of(\"LINEITEM_OK\", \"orderkey\"))))));\n     }\n \n+    @Test\n+    public void testRemoveDynamicFilterNotAboveTableScan()\n+    {\n+        PlanNode root = builder.output(\n+                ImmutableList.of(),\n+                ImmutableList.of(),\n+                builder.join(\n+                        INNER,\n+                        builder.filter(\n+                                combineConjuncts(\n+                                        metadata,\n+                                        PlanBuilder.expression(\"LINEITEM_OK > 0\"),\n+                                        createDynamicFilterExpression(metadata, \"DF\", BIGINT, ordersOrderKeySymbol.toSymbolReference())),\n+                                builder.values(lineitemOrderKeySymbol)),\n+                        ordersTableScanNode,\n+                        ImmutableList.of(new JoinNode.EquiJoinClause(lineitemOrderKeySymbol, ordersOrderKeySymbol)),\n+                        ImmutableList.of(),\n+                        ImmutableList.of(),\n+                        Optional.empty(),\n+                        Optional.empty(),\n+                        Optional.empty(),\n+                        ImmutableMap.of(\"DF\", ordersOrderKeySymbol)));\n+        assertPlan(\n+                removeUnsupportedDynamicFilters(root),\n+                output(\n+                        join(\n+                                INNER,\n+                                ImmutableList.of(equiJoinClause(\"LINEITEM_OK\", \"ORDERS_OK\")),\n+                                filter(\n+                                        PlanBuilder.expression(\"LINEITEM_OK > 0\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1NDMxMQ==", "bodyText": "static import expression", "url": "https://github.com/trinodb/trino/pull/3971#discussion_r437254311", "createdAt": "2020-06-09T09:05:48Z", "author": {"login": "sopel39"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/sanity/TestDynamicFiltersChecker.java", "diffHunk": "@@ -140,6 +140,31 @@ public void testUnmatchedDynamicFilter()\n         validatePlan(root);\n     }\n \n+    @Test(expectedExceptions = VerifyException.class, expectedExceptionsMessageRegExp = \"Dynamic filters \\\\[Descriptor\\\\{id=DF, input=\\\"ORDERS_OK\\\"\\\\}\\\\] present in filter predicate whose source is not a table scan.\")\n+    public void testDynamicFilterNotAboveTableScan()\n+    {\n+        PlanNode root = builder.output(\n+                ImmutableList.of(),\n+                ImmutableList.of(),\n+                builder.join(\n+                        INNER,\n+                        builder.filter(\n+                                combineConjuncts(\n+                                        metadata,\n+                                        PlanBuilder.expression(\"LINEITEM_OK > 0\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f01be4feb5e2acfe7c5ce7f312cf79a829a9011a", "author": {"user": {"login": "raunaqmorarka", "name": "Raunaq Morarka"}}, "url": "https://github.com/trinodb/trino/commit/f01be4feb5e2acfe7c5ce7f312cf79a829a9011a", "committedDate": "2020-06-09T09:28:16Z", "message": "Verify dynamic filters are above table scan in DynamicFiltersChecker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24bf458ea534f2ec6302fab5aec6a87580a98a09", "author": {"user": {"login": "raunaqmorarka", "name": "Raunaq Morarka"}}, "url": "https://github.com/trinodb/trino/commit/24bf458ea534f2ec6302fab5aec6a87580a98a09", "committedDate": "2020-06-09T09:28:21Z", "message": "Add test to verify that dynamic filters not above table scan are removed"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "24bf458ea534f2ec6302fab5aec6a87580a98a09", "author": {"user": {"login": "raunaqmorarka", "name": "Raunaq Morarka"}}, "url": "https://github.com/trinodb/trino/commit/24bf458ea534f2ec6302fab5aec6a87580a98a09", "committedDate": "2020-06-09T09:28:21Z", "message": "Add test to verify that dynamic filters not above table scan are removed"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 628, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}