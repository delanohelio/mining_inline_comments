{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNzUwMjQ4", "number": 3632, "title": "Improve Domain#overlaps", "bodyText": "Avoid overhead of computing intersection for checking Domain overlap by short circuiting where possible\nRefactor TupleDomainParquetPredicate to use Domain#overlaps", "createdAt": "2020-05-05T20:59:32Z", "url": "https://github.com/trinodb/trino/pull/3632", "merged": true, "mergeCommit": {"oid": "42a1b77a1a2fcd984c0af526ba02647a6f27ffe1"}, "closed": true, "closedAt": "2020-05-13T05:20:22Z", "author": {"login": "raunaqmorarka"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgoU1UgFqTQxMDI2NjAwMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgtquLgBqjMzMjk4MTU0MTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMjY2MDAy", "url": "https://github.com/trinodb/trino/pull/3632#pullrequestreview-410266002", "createdAt": "2020-05-12T17:28:25Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNzoyODoyNlrOGURVIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODowMjowOFrOGUSnVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkwODY0MA==", "bodyText": "else is redundant", "url": "https://github.com/trinodb/trino/pull/3632#discussion_r423908640", "createdAt": "2020-05-12T17:28:26Z", "author": {"login": "martint"}, "path": "presto-spi/src/main/java/io/prestosql/spi/predicate/EquatableValueSet.java", "diffHunk": "@@ -243,6 +243,25 @@ else if (otherValueSet.isWhiteList()) {\n         }\n     }\n \n+    @Override\n+    public boolean overlaps(ValueSet other)\n+    {\n+        EquatableValueSet otherValueSet = checkCompatibility(other);\n+\n+        if (whiteList && otherValueSet.isWhiteList()) {\n+            return intersectOverlaps(entries, otherValueSet.entries);\n+        }\n+        else if (whiteList) {\n+            return !otherValueSet.entries.containsAll(entries);\n+        }\n+        else if (otherValueSet.isWhiteList()) {\n+            return !entries.containsAll(otherValueSet.entries);\n+        }\n+        else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkwOTU2Ng==", "bodyText": "I'd just name this method setsOverlap or overlap.", "url": "https://github.com/trinodb/trino/pull/3632#discussion_r423909566", "createdAt": "2020-05-12T17:29:52Z", "author": {"login": "martint"}, "path": "presto-spi/src/main/java/io/prestosql/spi/predicate/EquatableValueSet.java", "diffHunk": "@@ -283,6 +302,16 @@ public String toString(ConnectorSession session)\n                 .collect(toLinkedSet());\n     }\n \n+    private static <T> boolean intersectOverlaps(Set<T> set1, Set<T> set2)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkyOTY4NQ==", "bodyText": "Iterate over the set with fewest elements.", "url": "https://github.com/trinodb/trino/pull/3632#discussion_r423929685", "createdAt": "2020-05-12T18:02:08Z", "author": {"login": "martint"}, "path": "presto-spi/src/main/java/io/prestosql/spi/predicate/EquatableValueSet.java", "diffHunk": "@@ -283,6 +302,16 @@ public String toString(ConnectorSession session)\n                 .collect(toLinkedSet());\n     }\n \n+    private static <T> boolean intersectOverlaps(Set<T> set1, Set<T> set2)\n+    {\n+        for (T element : set1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9c2f731e3380e05390302e50f482d6c3face274", "author": {"user": {"login": "raunaqmorarka", "name": "Raunaq Morarka"}}, "url": "https://github.com/trinodb/trino/commit/d9c2f731e3380e05390302e50f482d6c3face274", "committedDate": "2020-05-13T00:23:49Z", "message": "Improve Domain#overlaps\n\nAvoid overhead of computing intersection for checking Domain overlap by short circuiting where possible\nRefactor TupleDomainParquetPredicate to use Domain#overlaps"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "d9c2f731e3380e05390302e50f482d6c3face274", "author": {"user": {"login": "raunaqmorarka", "name": "Raunaq Morarka"}}, "url": "https://github.com/trinodb/trino/commit/d9c2f731e3380e05390302e50f482d6c3face274", "committedDate": "2020-05-13T00:23:49Z", "message": "Improve Domain#overlaps\n\nAvoid overhead of computing intersection for checking Domain overlap by short circuiting where possible\nRefactor TupleDomainParquetPredicate to use Domain#overlaps"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1399, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}