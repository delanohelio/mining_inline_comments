{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTYxNzMx", "number": 4393, "title": "Fix fails query if bucket number exceeds declared bucket size", "bodyText": "fix #4378", "createdAt": "2020-07-09T01:16:53Z", "url": "https://github.com/trinodb/trino/pull/4393", "merged": true, "mergeCommit": {"oid": "48806bddc54a7f2427ae2dd6044f4f5cbe58e30f"}, "closed": true, "closedAt": "2020-07-13T20:31:06Z", "author": {"login": "ArvinZheng"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczL2_BAFqTQ0NTQ1NTYyMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABczsGzAABqjM1MzU3MjIyOTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NDU1NjIz", "url": "https://github.com/trinodb/trino/pull/4393#pullrequestreview-445455623", "createdAt": "2020-07-09T09:43:12Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwOTo0MzoxMlrOGvJuGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwOTo0NTowMFrOGvJyFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA5NTUxMw==", "bodyText": "nit: each argument in newline", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r452095513", "createdAt": "2020-07-09T09:43:12Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/BackgroundHiveSplitLoader.java", "diffHunk": "@@ -636,6 +639,23 @@ private static boolean shouldUseFileSplitsFromInputFormat(InputFormat<?, ?> inpu\n         return splitList;\n     }\n \n+    @VisibleForTesting\n+    static void validateFileBuckets(ListMultimap<Integer, LocatedFileStatus> bucketFiles, int partitionBucketCount, String tableName, String partitionName)\n+    {\n+        Integer highestBucketNumber = Collections.max(bucketFiles.keySet());\n+        // validate the bucket number detected from files, fail the query if the highest bucket number detected from file\n+        // exceeds the allowed highest number\n+        if (highestBucketNumber >= partitionBucketCount) {\n+            throw new PrestoException(HIVE_INVALID_BUCKET_FILES, format(", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA5NjUzNQ==", "bodyText": "remove catch, throwing an exception will cause test to fail anyway", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r452096535", "createdAt": "2020-07-09T09:45:00Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestBackgroundHiveSplitLoader.java", "diffHunk": "@@ -566,6 +569,41 @@ public void testHive2VersionedFullAcidTableFails()\n         deleteRecursively(tablePath, ALLOW_INSECURE);\n     }\n \n+    @Test\n+    public void testValidateFileBuckets()\n+    {\n+        ListMultimap<Integer, LocatedFileStatus> bucketFiles = ArrayListMultimap.create();\n+        bucketFiles.put(1, null);\n+        bucketFiles.put(3, null);\n+        bucketFiles.put(4, null);\n+        bucketFiles.put(6, null);\n+        bucketFiles.put(9, null);\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 1, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number declared (0) for partition: partitionName\");\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 5, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number declared (4) for partition: partitionName\");\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 9, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number declared (8) for partition: partitionName\");\n+\n+        boolean noErrors = true;\n+        try {\n+            BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 10, \"tableName\", \"partitionName\");\n+            BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 20, \"tableName\", \"partitionName\");\n+            BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 30, \"tableName\", \"partitionName\");\n+        }\n+        catch (Throwable e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MTk4MjUy", "url": "https://github.com/trinodb/trino/pull/4393#pullrequestreview-446198252", "createdAt": "2020-07-10T07:57:47Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNzo1Nzo0N1rOGvttLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNzo1ODoyOVrOGvtubQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY4NTEwMA==", "bodyText": "static import", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r452685100", "createdAt": "2020-07-10T07:57:47Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestBackgroundHiveSplitLoader.java", "diffHunk": "@@ -566,6 +570,41 @@ public void testHive2VersionedFullAcidTableFails()\n         deleteRecursively(tablePath, ALLOW_INSECURE);\n     }\n \n+    @Test\n+    public void testValidateFileBuckets()\n+    {\n+        ListMultimap<Integer, LocatedFileStatus> bucketFiles = ArrayListMultimap.create();\n+        bucketFiles.put(1, null);\n+        bucketFiles.put(3, null);\n+        bucketFiles.put(4, null);\n+        bucketFiles.put(6, null);\n+        bucketFiles.put(9, null);\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 1, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number \" +\n+                        \"declared (0) for partition: partitionName\");\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 5, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number \" +\n+                        \"declared (4) for partition: partitionName\");\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 9, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number \" +\n+                        \"declared (8) for partition: partitionName\");\n+\n+        try {\n+            BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 10, \"tableName\", \"partitionName\");\n+            BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 20, \"tableName\", \"partitionName\");\n+            BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 30, \"tableName\", \"partitionName\");\n+        }\n+        catch (Throwable e) {\n+            Assert.shouldNeverReachHere();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY4NTQyMQ==", "bodyText": "static import max", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r452685421", "createdAt": "2020-07-10T07:58:29Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/BackgroundHiveSplitLoader.java", "diffHunk": "@@ -636,6 +639,28 @@ private static boolean shouldUseFileSplitsFromInputFormat(InputFormat<?, ?> inpu\n         return splitList;\n     }\n \n+    @VisibleForTesting\n+    static void validateFileBuckets(ListMultimap<Integer, LocatedFileStatus> bucketFiles, int partitionBucketCount, String tableName, String partitionName)\n+    {\n+        if (bucketFiles.isEmpty()) {\n+            return;\n+        }\n+\n+        Integer highestBucketNumber = Collections.max(bucketFiles.keySet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MTk5MDk2", "url": "https://github.com/trinodb/trino/pull/4393#pullrequestreview-446199096", "createdAt": "2020-07-10T07:59:07Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNzo1OTowN1rOGvtvvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNzo1OTowN1rOGvtvvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY4NTc1Ng==", "bodyText": "each arg in newline", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r452685756", "createdAt": "2020-07-10T07:59:07Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/BackgroundHiveSplitLoader.java", "diffHunk": "@@ -636,6 +639,28 @@ private static boolean shouldUseFileSplitsFromInputFormat(InputFormat<?, ?> inpu\n         return splitList;\n     }\n \n+    @VisibleForTesting\n+    static void validateFileBuckets(ListMultimap<Integer, LocatedFileStatus> bucketFiles, int partitionBucketCount, String tableName, String partitionName)\n+    {\n+        if (bucketFiles.isEmpty()) {\n+            return;\n+        }\n+\n+        Integer highestBucketNumber = Collections.max(bucketFiles.keySet());\n+        // validate the bucket number detected from files, fail the query if the highest bucket number detected from file\n+        // exceeds the allowed highest number\n+        if (highestBucketNumber >= partitionBucketCount) {\n+            throw new PrestoException(\n+                    HIVE_INVALID_BUCKET_FILES,\n+                    format(\"Hive table '%s' is corrupt. The highest bucket number in the directory (%s) is greater than the highest bucket \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjQyMjA4", "url": "https://github.com/trinodb/trino/pull/4393#pullrequestreview-445242208", "createdAt": "2020-07-09T02:06:07Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMjowNjowN1rOGu_KOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMjoxMzo0N1rOGwHFNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkyMjQ4OQ==", "bodyText": "No need to do this. If any of the checks throw, the test will fail automatically.", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r451922489", "createdAt": "2020-07-09T02:06:07Z", "author": {"login": "electrum"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestBackgroundHiveSplitLoader.java", "diffHunk": "@@ -566,6 +569,41 @@ public void testHive2VersionedFullAcidTableFails()\n         deleteRecursively(tablePath, ALLOW_INSECURE);\n     }\n \n+    @Test\n+    public void testValidateFileBuckets()\n+    {\n+        ListMultimap<Integer, LocatedFileStatus> bucketFiles = ArrayListMultimap.create();\n+        bucketFiles.put(1, null);\n+        bucketFiles.put(3, null);\n+        bucketFiles.put(4, null);\n+        bucketFiles.put(6, null);\n+        bucketFiles.put(9, null);\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 1, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number declared (0) for partition: partitionName\");\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 5, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number declared (4) for partition: partitionName\");\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 9, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number declared (8) for partition: partitionName\");\n+\n+        boolean noErrors = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5Nzk4Nw==", "bodyText": "This can be declared as int", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r453097987", "createdAt": "2020-07-10T22:03:57Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/BackgroundHiveSplitLoader.java", "diffHunk": "@@ -636,6 +639,27 @@ private static boolean shouldUseFileSplitsFromInputFormat(InputFormat<?, ?> inpu\n         return splitList;\n     }\n \n+    @VisibleForTesting\n+    static void validateFileBuckets(ListMultimap<Integer, LocatedFileStatus> bucketFiles, int partitionBucketCount, String tableName, String partitionName)\n+    {\n+        if (bucketFiles.isEmpty()) {\n+            return;\n+        }\n+\n+        Integer highestBucketNumber = max(bucketFiles.keySet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5ODMyNQ==", "bodyText": "Remove - 1 after changing error message", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r453098325", "createdAt": "2020-07-10T22:05:04Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/BackgroundHiveSplitLoader.java", "diffHunk": "@@ -636,6 +639,27 @@ private static boolean shouldUseFileSplitsFromInputFormat(InputFormat<?, ?> inpu\n         return splitList;\n     }\n \n+    @VisibleForTesting\n+    static void validateFileBuckets(ListMultimap<Integer, LocatedFileStatus> bucketFiles, int partitionBucketCount, String tableName, String partitionName)\n+    {\n+        if (bucketFiles.isEmpty()) {\n+            return;\n+        }\n+\n+        Integer highestBucketNumber = max(bucketFiles.keySet());\n+        // validate the bucket number detected from files, fail the query if the highest bucket number detected from file\n+        // exceeds the allowed highest number\n+        if (highestBucketNumber >= partitionBucketCount) {\n+            throw new PrestoException(HIVE_INVALID_BUCKET_FILES, format(\n+                    \"Hive table '%s' is corrupt. The highest bucket number in the directory (%s) is greater than the highest bucket number \" +\n+                            \"declared (%s) for partition: %s\",\n+                    tableName,\n+                    highestBucketNumber,\n+                    partitionBucketCount - 1,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5ODcxMQ==", "bodyText": "Static import validateFileBuckets for readability", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r453098711", "createdAt": "2020-07-10T22:06:15Z", "author": {"login": "electrum"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestBackgroundHiveSplitLoader.java", "diffHunk": "@@ -566,6 +571,41 @@ public void testHive2VersionedFullAcidTableFails()\n         deleteRecursively(tablePath, ALLOW_INSECURE);\n     }\n \n+    @Test\n+    public void testValidateFileBuckets()\n+    {\n+        ListMultimap<Integer, LocatedFileStatus> bucketFiles = ArrayListMultimap.create();\n+        bucketFiles.put(1, null);\n+        bucketFiles.put(3, null);\n+        bucketFiles.put(4, null);\n+        bucketFiles.put(6, null);\n+        bucketFiles.put(9, null);\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 1, \"tableName\", \"partitionName\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5OTI4NQ==", "bodyText": "These are expected to be positive test cases that don't throw. Having try/catch is strange, as any exception will cause a test failure. By this logic, we would need try/catch in every test, as we normally expect that a test will not throw.", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r453099285", "createdAt": "2020-07-10T22:08:11Z", "author": {"login": "electrum"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestBackgroundHiveSplitLoader.java", "diffHunk": "@@ -566,6 +569,41 @@ public void testHive2VersionedFullAcidTableFails()\n         deleteRecursively(tablePath, ALLOW_INSECURE);\n     }\n \n+    @Test\n+    public void testValidateFileBuckets()\n+    {\n+        ListMultimap<Integer, LocatedFileStatus> bucketFiles = ArrayListMultimap.create();\n+        bucketFiles.put(1, null);\n+        bucketFiles.put(3, null);\n+        bucketFiles.put(4, null);\n+        bucketFiles.put(6, null);\n+        bucketFiles.put(9, null);\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 1, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number declared (0) for partition: partitionName\");\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 5, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number declared (4) for partition: partitionName\");\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 9, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number declared (8) for partition: partitionName\");\n+\n+        boolean noErrors = true;\n+        try {\n+            BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 10, \"tableName\", \"partitionName\");\n+            BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 20, \"tableName\", \"partitionName\");\n+            BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 30, \"tableName\", \"partitionName\");\n+        }\n+        catch (Throwable e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA5NjUzNQ=="}, "originalCommit": null, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEwMDg1NA==", "bodyText": "You can do this using\nassertPrestoExceptionThrownBy(() -> validateFileBuckets(bucketFiles, 1, \"tableName\", \"partitionName\"))\n        .hasErrorCode(HIVE_INVALID_BUCKET_FILES)\n        .hasMessage(...);", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r453100854", "createdAt": "2020-07-10T22:13:47Z", "author": {"login": "electrum"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestBackgroundHiveSplitLoader.java", "diffHunk": "@@ -566,6 +571,41 @@ public void testHive2VersionedFullAcidTableFails()\n         deleteRecursively(tablePath, ALLOW_INSECURE);\n     }\n \n+    @Test\n+    public void testValidateFileBuckets()\n+    {\n+        ListMultimap<Integer, LocatedFileStatus> bucketFiles = ArrayListMultimap.create();\n+        bucketFiles.put(1, null);\n+        bucketFiles.put(3, null);\n+        bucketFiles.put(4, null);\n+        bucketFiles.put(6, null);\n+        bucketFiles.put(9, null);\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 1, \"tableName\", \"partitionName\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5ODcxMQ=="}, "originalCommit": null, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "944b80b5373a05e3d700e325f898d427969236e4", "author": {"user": {"login": "ArvinZheng", "name": "Arvin.Z"}}, "url": "https://github.com/trinodb/trino/commit/944b80b5373a05e3d700e325f898d427969236e4", "committedDate": "2020-07-10T23:15:59Z", "message": "Fail query if there are invalid buckets"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "944b80b5373a05e3d700e325f898d427969236e4", "author": {"user": {"login": "ArvinZheng", "name": "Arvin.Z"}}, "url": "https://github.com/trinodb/trino/commit/944b80b5373a05e3d700e325f898d427969236e4", "committedDate": "2020-07-10T23:15:59Z", "message": "Fail query if there are invalid buckets"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 26, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}