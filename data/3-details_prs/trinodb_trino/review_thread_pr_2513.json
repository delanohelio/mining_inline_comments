{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzMDc2MTAz", "number": 2513, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMjoyODo0MVrODYfKdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMjozNToyOFrODYfQ2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDAyOTk4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/testing/TestingConnectorSession.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMjoyODo0MVrOFeXxeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMjoyODo0MVrOFeXxeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM5MTA5Nw==", "bodyText": "set it at creation time instead?", "url": "https://github.com/trinodb/trino/pull/2513#discussion_r367391097", "createdAt": "2020-01-16T12:28:41Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/testing/TestingConnectorSession.java", "diffHunk": "@@ -161,4 +151,59 @@ public String toString()\n                 .omitNullValues()\n                 .toString();\n     }\n+\n+    public static Builder builder()\n+    {\n+        return new Builder();\n+    }\n+\n+    public static class Builder\n+    {\n+        private ConnectorIdentity identity = new ConnectorIdentity(\"user\", Optional.empty(), Optional.empty());\n+        private Optional<String> source = Optional.of(\"test\");\n+        private TimeZoneKey timeZoneKey = UTC_KEY;\n+        private Locale locale = ENGLISH;\n+        private Optional<String> traceToken = Optional.empty();\n+        private long startTime = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDAzMjQyOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/testing/TestingConnectorSession.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMjoyOTo1MVrOFeXzFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMDo0Njo1MlrOFe1SBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM5MTUxMQ==", "bodyText": "why optional? You cannot change it.\nAlso, make fields that you cannot modify finals", "url": "https://github.com/trinodb/trino/pull/2513#discussion_r367391511", "createdAt": "2020-01-16T12:29:51Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/testing/TestingConnectorSession.java", "diffHunk": "@@ -161,4 +151,59 @@ public String toString()\n                 .omitNullValues()\n                 .toString();\n     }\n+\n+    public static Builder builder()\n+    {\n+        return new Builder();\n+    }\n+\n+    public static class Builder\n+    {\n+        private ConnectorIdentity identity = new ConnectorIdentity(\"user\", Optional.empty(), Optional.empty());\n+        private Optional<String> source = Optional.of(\"test\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg3NDU2Nw==", "bodyText": "why optional?\n\nBecause constructor requires optional", "url": "https://github.com/trinodb/trino/pull/2513#discussion_r367874567", "createdAt": "2020-01-17T10:46:52Z", "author": {"login": "kokosing"}, "path": "presto-main/src/main/java/io/prestosql/testing/TestingConnectorSession.java", "diffHunk": "@@ -161,4 +151,59 @@ public String toString()\n                 .omitNullValues()\n                 .toString();\n     }\n+\n+    public static Builder builder()\n+    {\n+        return new Builder();\n+    }\n+\n+    public static class Builder\n+    {\n+        private ConnectorIdentity identity = new ConnectorIdentity(\"user\", Optional.empty(), Optional.empty());\n+        private Optional<String> source = Optional.of(\"test\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM5MTUxMQ=="}, "originalCommit": null, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDA0MDE0OnYy", "diffSide": "RIGHT", "path": "presto-memory/src/test/java/io/prestosql/plugin/memory/TestMemoryPagesStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMjozMzowOVrOFeX3yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMjozMzowOVrOFeX3yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM5MjcxMg==", "bodyText": "static import?", "url": "https://github.com/trinodb/trino/pull/2513#discussion_r367392712", "createdAt": "2020-01-16T12:33:09Z", "author": {"login": "sopel39"}, "path": "presto-memory/src/test/java/io/prestosql/plugin/memory/TestMemoryPagesStore.java", "diffHunk": "@@ -129,7 +127,7 @@ private void insertToTable(long tableId, Page page, Long... activeTableIds)\n     {\n         ConnectorPageSink pageSink = pageSinkProvider.createPageSink(\n                 MemoryTransactionHandle.INSTANCE,\n-                SESSION,\n+                TestingConnectorSession.SESSION,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDA0MTY4OnYy", "diffSide": "LEFT", "path": "presto-raptor-legacy/src/test/java/io/prestosql/plugin/raptor/legacy/TestRaptorConnector.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMjozMzo0NlrOFeX4tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMjozMzo0NlrOFeX4tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM5Mjk0OQ==", "bodyText": "you are not setting userTimeZone when creating new session", "url": "https://github.com/trinodb/trino/pull/2513#discussion_r367392949", "createdAt": "2020-01-16T12:33:46Z", "author": {"login": "sopel39"}, "path": "presto-raptor-legacy/src/test/java/io/prestosql/plugin/raptor/legacy/TestRaptorConnector.java", "diffHunk": "@@ -217,16 +215,9 @@ public void testTemporalShardSplit()\n     private void assertSplitShard(Type temporalType, String min, String max, String userTimeZone, int expectedSplits)\n             throws Exception\n     {\n-        ConnectorSession session = new TestingConnectorSession(\n-                \"user\",\n-                Optional.of(\"test\"),\n-                Optional.empty(),\n-                getTimeZoneKey(userTimeZone),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDA0NjMyOnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/operator/scalar/TestDateTimeFunctionsBase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMjozNToyOFrOFeX7ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMDo0NzoxNlrOFe1Suw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM5MzY3NA==", "bodyText": "locale was also not ENGLISH", "url": "https://github.com/trinodb/trino/pull/2513#discussion_r367393674", "createdAt": "2020-01-16T12:35:28Z", "author": {"login": "sopel39"}, "path": "presto-main/src/test/java/io/prestosql/operator/scalar/TestDateTimeFunctionsBase.java", "diffHunk": "@@ -161,7 +157,12 @@ public void testCurrentDateTimezone()\n     private void assertCurrentDateAtInstant(TimeZoneKey timeZoneKey, long instant)\n     {\n         long expectedDays = epochDaysInZone(timeZoneKey, instant);\n-        long dateTimeCalculation = currentDate(new TestingConnectorSession(\"test\", Optional.empty(), Optional.empty(), timeZoneKey, US, instant, ImmutableList.of(), ImmutableMap.of(), isLegacyTimestamp(session)));\n+        TestingConnectorSession connectorSession = TestingConnectorSession.builder()\n+                .setStartTime(instant)\n+                .setTimeZoneKey(timeZoneKey)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg3NDc0Nw==", "bodyText": "And still it is. It is default.", "url": "https://github.com/trinodb/trino/pull/2513#discussion_r367874747", "createdAt": "2020-01-17T10:47:16Z", "author": {"login": "kokosing"}, "path": "presto-main/src/test/java/io/prestosql/operator/scalar/TestDateTimeFunctionsBase.java", "diffHunk": "@@ -161,7 +157,12 @@ public void testCurrentDateTimezone()\n     private void assertCurrentDateAtInstant(TimeZoneKey timeZoneKey, long instant)\n     {\n         long expectedDays = epochDaysInZone(timeZoneKey, instant);\n-        long dateTimeCalculation = currentDate(new TestingConnectorSession(\"test\", Optional.empty(), Optional.empty(), timeZoneKey, US, instant, ImmutableList.of(), ImmutableMap.of(), isLegacyTimestamp(session)));\n+        TestingConnectorSession connectorSession = TestingConnectorSession.builder()\n+                .setStartTime(instant)\n+                .setTimeZoneKey(timeZoneKey)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM5MzY3NA=="}, "originalCommit": null, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1022, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}