{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MDY5NTEy", "number": 4752, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQyMDo0NjoyMFrOEWgxiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQyMDo0NjoyMFrOEWgxiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMDQxMDk3OnYy", "diffSide": "RIGHT", "path": "presto-local-file/src/main/java/io/prestosql/plugin/localfile/LocalFileRecordCursor.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQyMDo0NjoyMFrOG92G3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQyMzoxODoyNlrOG92yJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUwMjgxNQ==", "bodyText": "Technically, we should round here in case the parsed instant has more precision that milliseconds.", "url": "https://github.com/trinodb/trino/pull/4752#discussion_r467502815", "createdAt": "2020-08-08T20:46:20Z", "author": {"login": "martint"}, "path": "presto-local-file/src/main/java/io/prestosql/plugin/localfile/LocalFileRecordCursor.java", "diffHunk": "@@ -246,6 +248,14 @@ public void close()\n         reader.close();\n     }\n \n+    private static long parseTimestamp(String value)\n+    {\n+        OffsetDateTime time = OffsetDateTime.parse(value, ISO_FORMATTER);\n+        long epochMillis = time.toInstant().toEpochMilli();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUwODk2MA==", "bodyText": "for log parsing, the truncation (not rounding) may be a more expected behavior, as this is what log printer does", "url": "https://github.com/trinodb/trino/pull/4752#discussion_r467508960", "createdAt": "2020-08-08T22:06:29Z", "author": {"login": "findepi"}, "path": "presto-local-file/src/main/java/io/prestosql/plugin/localfile/LocalFileRecordCursor.java", "diffHunk": "@@ -246,6 +248,14 @@ public void close()\n         reader.close();\n     }\n \n+    private static long parseTimestamp(String value)\n+    {\n+        OffsetDateTime time = OffsetDateTime.parse(value, ISO_FORMATTER);\n+        long epochMillis = time.toInstant().toEpochMilli();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUwMjgxNQ=="}, "originalCommit": null, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUxMzg5Mw==", "bodyText": "The connector only parses Airlift HTTP logs which use milliseconds, but I can make this round:\nOffsetDateTime time = OffsetDateTime.parse(value, ISO_FORMATTER)\n        .plus(500, ChronoUnit.MICROS)\n        .truncatedTo(ChronoUnit.MILLIS);", "url": "https://github.com/trinodb/trino/pull/4752#discussion_r467513893", "createdAt": "2020-08-08T23:18:26Z", "author": {"login": "electrum"}, "path": "presto-local-file/src/main/java/io/prestosql/plugin/localfile/LocalFileRecordCursor.java", "diffHunk": "@@ -246,6 +248,14 @@ public void close()\n         reader.close();\n     }\n \n+    private static long parseTimestamp(String value)\n+    {\n+        OffsetDateTime time = OffsetDateTime.parse(value, ISO_FORMATTER);\n+        long epochMillis = time.toInstant().toEpochMilli();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUwMjgxNQ=="}, "originalCommit": null, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3412, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}