{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxODYyNjU5", "number": 3820, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMToyMTozNFrOD-6ocQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMToyODo0N1rOD-6vtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Mjk4OTI5OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/RubixConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMToyMTozNFrOGZTr7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMTozMTo0NlrOGZT73w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5MDEyNw==", "bodyText": "This means that we no longer need cache directory on coordinator if this property is set to false.\nCan you please update documentation accordingly?", "url": "https://github.com/trinodb/trino/pull/3820#discussion_r429190127", "createdAt": "2020-05-22T11:21:34Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/RubixConfig.java", "diffHunk": "@@ -59,6 +59,7 @@ public static ReadMode fromString(String value)\n     private String cacheLocation;\n     private int bookKeeperServerPort = CacheConfig.DEFAULT_BOOKKEEPER_SERVER_PORT;\n     private int dataTransferServerPort = CacheConfig.DEFAULT_DATA_TRANSFER_SERVER_PORT;\n+    private boolean startServerOnCoordinator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5NDIwNw==", "bodyText": "Cache directories are still validated in setupServer, so it's still required to have cache directory on coordinator", "url": "https://github.com/trinodb/trino/pull/3820#discussion_r429194207", "createdAt": "2020-05-22T11:31:46Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/RubixConfig.java", "diffHunk": "@@ -59,6 +59,7 @@ public static ReadMode fromString(String value)\n     private String cacheLocation;\n     private int bookKeeperServerPort = CacheConfig.DEFAULT_BOOKKEEPER_SERVER_PORT;\n     private int dataTransferServerPort = CacheConfig.DEFAULT_DATA_TRANSFER_SERVER_PORT;\n+    private boolean startServerOnCoordinator;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5MDEyNw=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzAwMTk0OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/RubixInitializer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMToyNjoyMFrOGZTzgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMTozMjoyMVrOGZT8tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5MjA2Ng==", "bodyText": "The commit message is misleading. We are still startin up rubix server on coordinator to get statistics from workers.\nPlease be more specific.", "url": "https://github.com/trinodb/trino/pull/3820#discussion_r429192066", "createdAt": "2020-05-22T11:26:20Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/RubixInitializer.java", "diffHunk": "@@ -143,6 +153,28 @@ private void waitForCoordinator()\n     }\n \n     private void startRubix()\n+    {\n+        Configuration configuration = getRubixConfiguration();\n+\n+        MetricRegistry metricRegistry = new MetricRegistry();\n+        bookKeeperServer = new BookKeeperServer();\n+        BookKeeper bookKeeper = bookKeeperServer.startServer(configuration, metricRegistry);\n+        LocalDataTransferServer.startServer(configuration, metricRegistry, bookKeeper);\n+\n+        CachingFileSystem.setLocalBookKeeper(bookKeeper, \"catalog=\" + catalogName);\n+        log.info(\"Rubix initialized successfully\");\n+        rubixConfigurationInitializer.initializationDone();\n+    }\n+\n+    private void setupRubixMetrics()\n+    {\n+        Configuration configuration = getRubixConfiguration();\n+        bookKeeperServer = new BookKeeperServer();\n+        bookKeeperServer.setupServer(configuration, new MetricRegistry());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5NDQyMw==", "bodyText": "We don't start servers themselves. We just setup them and have metrics registered.", "url": "https://github.com/trinodb/trino/pull/3820#discussion_r429194423", "createdAt": "2020-05-22T11:32:21Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/RubixInitializer.java", "diffHunk": "@@ -143,6 +153,28 @@ private void waitForCoordinator()\n     }\n \n     private void startRubix()\n+    {\n+        Configuration configuration = getRubixConfiguration();\n+\n+        MetricRegistry metricRegistry = new MetricRegistry();\n+        bookKeeperServer = new BookKeeperServer();\n+        BookKeeper bookKeeper = bookKeeperServer.startServer(configuration, metricRegistry);\n+        LocalDataTransferServer.startServer(configuration, metricRegistry, bookKeeper);\n+\n+        CachingFileSystem.setLocalBookKeeper(bookKeeper, \"catalog=\" + catalogName);\n+        log.info(\"Rubix initialized successfully\");\n+        rubixConfigurationInitializer.initializationDone();\n+    }\n+\n+    private void setupRubixMetrics()\n+    {\n+        Configuration configuration = getRubixConfiguration();\n+        bookKeeperServer = new BookKeeperServer();\n+        bookKeeperServer.setupServer(configuration, new MetricRegistry());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5MjA2Ng=="}, "originalCommit": null, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzAwNzkxOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/RubixInitializer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMToyODo0N1rOGZT3Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMTozMzozNFrOGZT-vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5MzAzNA==", "bodyText": "I think it will be more readable if this was called from startRubix. Technically it is also starting of rubix services. We just start a subset of those on coordinator.", "url": "https://github.com/trinodb/trino/pull/3820#discussion_r429193034", "createdAt": "2020-05-22T11:28:47Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/RubixInitializer.java", "diffHunk": "@@ -104,6 +108,12 @@ public RubixInitializer(\n     @PostConstruct\n     public void initializeRubix()\n     {\n+        if (nodeManager.getCurrentNode().isCoordinator() && !startServerOnCoordinator) {\n+            // setup JMX metrics on master (instead of starting server) so that JMX connector can be used\n+            setupRubixMetrics();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5NDk0MQ==", "bodyText": "I think it will be more readable if this was called from startRubix\n\nWe don't start server (no sockets are opened), we just set it up and register metrics.", "url": "https://github.com/trinodb/trino/pull/3820#discussion_r429194941", "createdAt": "2020-05-22T11:33:34Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/RubixInitializer.java", "diffHunk": "@@ -104,6 +108,12 @@ public RubixInitializer(\n     @PostConstruct\n     public void initializeRubix()\n     {\n+        if (nodeManager.getCurrentNode().isCoordinator() && !startServerOnCoordinator) {\n+            // setup JMX metrics on master (instead of starting server) so that JMX connector can be used\n+            setupRubixMetrics();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5MzAzNA=="}, "originalCommit": null, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4915, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}