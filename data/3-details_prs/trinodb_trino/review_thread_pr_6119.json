{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4NTY0MDQ5", "number": 6119, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjo1NjozMVrOE9_KFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjo1NzoyMVrOE9_LIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDMzMzY2OnYy", "diffSide": "RIGHT", "path": "presto-cli/src/main/java/io/prestosql/cli/TerminalUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjo1NjozMVrOH69eow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjo1NjozMVrOH69eow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU4NjcyMw==", "bodyText": "private?", "url": "https://github.com/trinodb/trino/pull/6119#discussion_r531586723", "createdAt": "2020-11-27T12:56:31Z", "author": {"login": "findepi"}, "path": "presto-cli/src/main/java/io/prestosql/cli/TerminalUtils.java", "diffHunk": "@@ -14,30 +14,53 @@\n package io.prestosql.cli;\n \n import org.jline.terminal.Terminal;\n+import org.jline.terminal.TerminalBuilder;\n \n import java.io.IOException;\n-\n-import static org.jline.terminal.TerminalBuilder.terminal;\n+import java.io.UncheckedIOException;\n+import java.nio.charset.Charset;\n \n public class TerminalUtils\n {\n-    private static final boolean REAL_TERMINAL = detectRealTerminal();\n+    private static final Terminal TERMINAL_INSTANCE = createTerminal();\n \n     private TerminalUtils() {}\n \n+    public static boolean isRealTerminal(Terminal terminal)\n+    {\n+        return !Terminal.TYPE_DUMB.equals(terminal.getType()) &&\n+                !Terminal.TYPE_DUMB_COLOR.equals(terminal.getType());\n+    }\n+\n     public static boolean isRealTerminal()\n     {\n-        return REAL_TERMINAL;\n+        return isRealTerminal(getTerminal());\n+    }\n+\n+    public static int terminalWidth()\n+    {\n+        return getTerminal().getWidth();\n     }\n \n-    private static boolean detectRealTerminal()\n+    public static Charset terminalEncoding()\n     {\n-        try (Terminal terminal = terminal()) {\n-            return !Terminal.TYPE_DUMB.equals(terminal.getType()) &&\n-                    !Terminal.TYPE_DUMB_COLOR.equals(terminal.getType());\n+        return getTerminal().encoding();\n+    }\n+\n+    public static Terminal createTerminal()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDMzNjM0OnYy", "diffSide": "RIGHT", "path": "presto-cli/src/main/java/io/prestosql/cli/TerminalUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjo1NzoyMVrOH69gVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjo1NzoyMVrOH69gVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU4NzE1OQ==", "bodyText": "i'd place getTerminal, and createTerminal at the top, close to the singleton declaration", "url": "https://github.com/trinodb/trino/pull/6119#discussion_r531587159", "createdAt": "2020-11-27T12:57:21Z", "author": {"login": "findepi"}, "path": "presto-cli/src/main/java/io/prestosql/cli/TerminalUtils.java", "diffHunk": "@@ -14,30 +14,53 @@\n package io.prestosql.cli;\n \n import org.jline.terminal.Terminal;\n+import org.jline.terminal.TerminalBuilder;\n \n import java.io.IOException;\n-\n-import static org.jline.terminal.TerminalBuilder.terminal;\n+import java.io.UncheckedIOException;\n+import java.nio.charset.Charset;\n \n public class TerminalUtils\n {\n-    private static final boolean REAL_TERMINAL = detectRealTerminal();\n+    private static final Terminal TERMINAL_INSTANCE = createTerminal();\n \n     private TerminalUtils() {}\n \n+    public static boolean isRealTerminal(Terminal terminal)\n+    {\n+        return !Terminal.TYPE_DUMB.equals(terminal.getType()) &&\n+                !Terminal.TYPE_DUMB_COLOR.equals(terminal.getType());\n+    }\n+\n     public static boolean isRealTerminal()\n     {\n-        return REAL_TERMINAL;\n+        return isRealTerminal(getTerminal());\n+    }\n+\n+    public static int terminalWidth()\n+    {\n+        return getTerminal().getWidth();\n     }\n \n-    private static boolean detectRealTerminal()\n+    public static Charset terminalEncoding()\n     {\n-        try (Terminal terminal = terminal()) {\n-            return !Terminal.TYPE_DUMB.equals(terminal.getType()) &&\n-                    !Terminal.TYPE_DUMB_COLOR.equals(terminal.getType());\n+        return getTerminal().encoding();\n+    }\n+\n+    public static Terminal createTerminal()\n+    {\n+        try {\n+            return TerminalBuilder.builder()\n+                    .name(\"Presto\")\n+                    .build();\n         }\n         catch (IOException e) {\n-            return false;\n+            throw new UncheckedIOException(e);\n         }\n     }\n+\n+    public static Terminal getTerminal()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4691, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}