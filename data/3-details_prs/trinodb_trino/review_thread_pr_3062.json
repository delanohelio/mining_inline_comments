{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MzkxMjE3", "number": 3062, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjozMzoxNFrODnJ0Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODo0MjoyN1rODnYBJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzgxOTE1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/operator/LookupJoinPageBuilder.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjozMzoxNFrOF0_Ecw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODo0MToyMlrOF1Va7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwMzYwMw==", "bodyText": "Can you great greatly off estimates when initial data is outlier?", "url": "https://github.com/trinodb/trino/pull/3062#discussion_r391103603", "createdAt": "2020-03-11T16:33:14Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/operator/LookupJoinPageBuilder.java", "diffHunk": "@@ -179,11 +181,23 @@ private void appendProbeIndex(JoinProbe probe)\n         if (previousPosition == position) {\n             return;\n         }\n+        estimatedProbeBlockBytes += getEstimatedProbeRowSize(probe);\n+    }\n+\n+    private int getEstimatedProbeRowSize(JoinProbe probe)\n+    {\n+        if (estimatedProbeRowSize != -1) {\n+            return estimatedProbeRowSize;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxMzY2NQ==", "bodyText": "the estimate per row is always the same. It was always the same previously too.\nblock.getSizeInBytes() / block.getPositionCount(); takes into account entire block size", "url": "https://github.com/trinodb/trino/pull/3062#discussion_r391313665", "createdAt": "2020-03-11T22:48:48Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/operator/LookupJoinPageBuilder.java", "diffHunk": "@@ -179,11 +181,23 @@ private void appendProbeIndex(JoinProbe probe)\n         if (previousPosition == position) {\n             return;\n         }\n+        estimatedProbeBlockBytes += getEstimatedProbeRowSize(probe);\n+    }\n+\n+    private int getEstimatedProbeRowSize(JoinProbe probe)\n+    {\n+        if (estimatedProbeRowSize != -1) {\n+            return estimatedProbeRowSize;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwMzYwMw=="}, "originalCommit": null, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2OTgwNg==", "bodyText": "i missed the reset call, thanks", "url": "https://github.com/trinodb/trino/pull/3062#discussion_r391469806", "createdAt": "2020-03-12T08:41:22Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/operator/LookupJoinPageBuilder.java", "diffHunk": "@@ -179,11 +181,23 @@ private void appendProbeIndex(JoinProbe probe)\n         if (previousPosition == position) {\n             return;\n         }\n+        estimatedProbeBlockBytes += getEstimatedProbeRowSize(probe);\n+    }\n+\n+    private int getEstimatedProbeRowSize(JoinProbe probe)\n+    {\n+        if (estimatedProbeRowSize != -1) {\n+            return estimatedProbeRowSize;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwMzYwMw=="}, "originalCommit": null, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNjE0NTY1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/operator/LookupJoinPageBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODo0MjoyN1rOF1VdFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODo0MjoyN1rOF1VdFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3MDM1Ng==", "bodyText": "i'd prefer to use a local var and populate the class state (field) only when fully calculated.\n(one variable more, but makes code easier to reason about)", "url": "https://github.com/trinodb/trino/pull/3062#discussion_r391470356", "createdAt": "2020-03-12T08:42:27Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/operator/LookupJoinPageBuilder.java", "diffHunk": "@@ -179,11 +181,23 @@ private void appendProbeIndex(JoinProbe probe)\n         if (previousPosition == position) {\n             return;\n         }\n+        estimatedProbeBlockBytes += getEstimatedProbeRowSize(probe);\n+    }\n+\n+    private int getEstimatedProbeRowSize(JoinProbe probe)\n+    {\n+        if (estimatedProbeRowSize != -1) {\n+            return estimatedProbeRowSize;\n+        }\n+\n+        estimatedProbeRowSize = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 544, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}