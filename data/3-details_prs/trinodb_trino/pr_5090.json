{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxMzY1Mzc1", "number": 5090, "title": "Use task status version for task status long polling notifications", "bodyText": "", "createdAt": "2020-09-07T12:55:07Z", "url": "https://github.com/trinodb/trino/pull/5090", "merged": true, "mergeCommit": {"oid": "83bcdffc4c8dd0ce377c5f12609c69b9088ba6a0"}, "closed": true, "closedAt": "2020-09-16T08:44:42Z", "author": {"login": "sopel39"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdGipPeABqjM3MzcwNzgxNzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJQgupgFqTQ4OTE3NzMzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzOTM2OTI3", "url": "https://github.com/trinodb/trino/pull/5090#pullrequestreview-483936927", "createdAt": "2020-09-08T09:03:02Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwOTowMzowM1rOHOTsPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwOTowMzowM1rOHOTsPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc2NDczNQ==", "bodyText": "is it fine if taskStateMachine.getState(); in the next line gives a newly updated state (let's say versionNumber is set to V which corresponds to a state S1 - but before the getState call executes in the next line, the state is changed to S2 with current versionNumber as V+1?", "url": "https://github.com/trinodb/trino/pull/5090#discussion_r484764735", "createdAt": "2020-09-08T09:03:03Z", "author": {"login": "rohangarg"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlTask.java", "diffHunk": "@@ -219,11 +230,18 @@ public TaskStatus getTaskStatus()\n         }\n     }\n \n+    private void notifyStatusChanged()\n+    {\n+        taskStatusVersion.incrementAndGet();\n+        taskStatusVersionChange.complete(null, taskNotificationExecutor);\n+    }\n+\n     private TaskStatus createTaskStatus(TaskHolder taskHolder)\n     {\n-        // Always return a new TaskStatus with a larger version number;\n-        // otherwise a client will not accept the update\n-        long versionNumber = nextTaskStatusVersion.getAndIncrement();\n+        // Obtain task status version before building actual TaskStatus object.\n+        // This way any task updates won't be lost since all updates happen\n+        // before version number is increased.\n+        long versionNumber = taskStatusVersion.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzOTU3NjA4", "url": "https://github.com/trinodb/trino/pull/5090#pullrequestreview-483957608", "createdAt": "2020-09-08T09:29:09Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwOToyOTowOVrOHOUqKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwOToyOTowOVrOHOUqKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc4MDU4Nw==", "bodyText": "do we not want to send the notification in case the following block (L160-170) returns from the listener?\n            while (true) {\n                TaskHolder taskHolder = taskHolderReference.get();\n                if (taskHolder.isFinished()) {\n                    // another concurrent worker already set the final state\n                    return;\n                }\n                if (taskHolderReference.compareAndSet(taskHolder, new TaskHolder(createTaskInfo(taskHolder), taskHolder.getIoStats()))) {\n                    break;\n                }\n            }\n\nAlthough, I don't know if the return block is possible during runtime.", "url": "https://github.com/trinodb/trino/pull/5090#discussion_r484780587", "createdAt": "2020-09-08T09:29:09Z", "author": {"login": "rohangarg"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlTask.java", "diffHunk": "@@ -177,6 +185,9 @@ private void initialize(Function<SqlTask, ?> onDone, CounterStat failedTasks)\n             catch (Exception e) {\n                 log.warn(e, \"Error running task cleanup callback %s\", SqlTask.this.taskId);\n             }\n+\n+            // notify that task is finished\n+            notifyStatusChanged();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MDYxMjQ2", "url": "https://github.com/trinodb/trino/pull/5090#pullrequestreview-484061246", "createdAt": "2020-09-08T11:59:34Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MDY2NzQ2", "url": "https://github.com/trinodb/trino/pull/5090#pullrequestreview-488066746", "createdAt": "2020-09-14T19:12:49Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxOToxMjo0OVrOHRjBng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxOToxMzoxMVrOHRjCVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE2MTY5NA==", "bodyText": "I'm pretty sure there is a race here.  The task could finish between this check and creating the listener below, and in that case the listener may never be notified.  If you call createNewListener() before this check, I believe it will eliminate the race.  Something like:\nCompletableFuture<?> listener = taskStatusVersionChange.createNewListener();\nif (callersCurrentVersion < taskStatusVersion.get() || taskHolderReference.get().isFinished()) {\n    listener.cancel(true);\n    return immediateFuture(getTaskStatus());\n}\nreturn Futures.transform(listener, input -> getTaskStatus(), directExecutor());", "url": "https://github.com/trinodb/trino/pull/5090#discussion_r488161694", "createdAt": "2020-09-14T19:12:49Z", "author": {"login": "dain"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlTask.java", "diffHunk": "@@ -340,32 +358,24 @@ private TaskInfo createTaskInfo(TaskHolder taskHolder)\n                 needsPlan.get());\n     }\n \n-    public ListenableFuture<TaskStatus> getTaskStatus(TaskState callersCurrentState)\n+    public ListenableFuture<TaskStatus> getTaskStatus(long callersCurrentVersion)\n     {\n-        requireNonNull(callersCurrentState, \"callersCurrentState is null\");\n-\n-        if (callersCurrentState.isDone()) {\n+        if (callersCurrentVersion < taskStatusVersion.get() || taskHolderReference.get().isFinished()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE2MTg3Nw==", "bodyText": "same problem", "url": "https://github.com/trinodb/trino/pull/5090#discussion_r488161877", "createdAt": "2020-09-14T19:13:11Z", "author": {"login": "dain"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlTask.java", "diffHunk": "@@ -340,32 +358,24 @@ private TaskInfo createTaskInfo(TaskHolder taskHolder)\n                 needsPlan.get());\n     }\n \n-    public ListenableFuture<TaskStatus> getTaskStatus(TaskState callersCurrentState)\n+    public ListenableFuture<TaskStatus> getTaskStatus(long callersCurrentVersion)\n     {\n-        requireNonNull(callersCurrentState, \"callersCurrentState is null\");\n-\n-        if (callersCurrentState.isDone()) {\n+        if (callersCurrentVersion < taskStatusVersion.get() || taskHolderReference.get().isFinished()) {\n+            // return immediately if caller has older task status version or final task info is available\n             return immediateFuture(getTaskStatus());\n         }\n \n-        ListenableFuture<TaskState> futureTaskState = taskStateMachine.getStateChange(callersCurrentState);\n-        return Futures.transform(futureTaskState, input -> getTaskStatus(), directExecutor());\n+        return Futures.transform(taskStatusVersionChange.createNewListener(), input -> getTaskStatus(), directExecutor());\n     }\n \n-    public ListenableFuture<TaskInfo> getTaskInfo(TaskState callersCurrentState)\n+    public ListenableFuture<TaskInfo> getTaskInfo(long callersCurrentVersion)\n     {\n-        requireNonNull(callersCurrentState, \"callersCurrentState is null\");\n-\n-        // If the caller's current state is already done, just return the current\n-        // state of this task as it will either be done or possibly still running\n-        // (due to a bug in the caller), since we cannot transition from a done\n-        // state.\n-        if (callersCurrentState.isDone()) {\n+        if (callersCurrentVersion < taskStatusVersion.get() || taskHolderReference.get().isFinished()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 111}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fc7267cb9fb1e6702a216437f9f590c50e61ef8", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/7fc7267cb9fb1e6702a216437f9f590c50e61ef8", "committedDate": "2020-09-15T13:40:48Z", "message": "Use task status version for task status long polling notifications"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "7fc7267cb9fb1e6702a216437f9f590c50e61ef8", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/7fc7267cb9fb1e6702a216437f9f590c50e61ef8", "committedDate": "2020-09-15T13:40:48Z", "message": "Use task status version for task status long polling notifications"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MTc3MzM0", "url": "https://github.com/trinodb/trino/pull/5090#pullrequestreview-489177334", "createdAt": "2020-09-15T23:36:47Z", "commit": {"oid": "7fc7267cb9fb1e6702a216437f9f590c50e61ef8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3900, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}