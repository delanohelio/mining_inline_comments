{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MTI5NzYz", "number": 5442, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMDowMjowOVrOErGv1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMDowNTowMlrOErGz6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjM0Nzc1OnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMDowMjowOVrOHdr59A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMDoyNTo0OVrOHdsv1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDEwMA==", "bodyText": "can getTablePath be smart enough for that?", "url": "https://github.com/trinodb/trino/pull/5442#discussion_r500890100", "createdAt": "2020-10-07T10:02:09Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "diffHunk": "@@ -399,6 +394,8 @@ public void testFilesForAbortedTransactionsIgnored()\n             QueryResult onePartitionQueryResult = query(selectFromOnePartitionsSql);\n             assertThat(onePartitionQueryResult).containsExactly(row(1), row(2));\n \n+            String tableLocation = getTablePath(tableName, 1); // pass 1 to trim /delta_... suffix", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9aa991a66827b17e0d9956994e1a61ed0cba58dd"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkwMzg5Mg==", "bodyText": "AC as a2e1871", "url": "https://github.com/trinodb/trino/pull/5442#discussion_r500903892", "createdAt": "2020-10-07T10:25:49Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "diffHunk": "@@ -399,6 +394,8 @@ public void testFilesForAbortedTransactionsIgnored()\n             QueryResult onePartitionQueryResult = query(selectFromOnePartitionsSql);\n             assertThat(onePartitionQueryResult).containsExactly(row(1), row(2));\n \n+            String tableLocation = getTablePath(tableName, 1); // pass 1 to trim /delta_... suffix", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDEwMA=="}, "originalCommit": {"oid": "9aa991a66827b17e0d9956994e1a61ed0cba58dd"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjM0OTk3OnYy", "diffSide": "LEFT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMDowMjo0MVrOHdr7VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMDoyNzoxMVrOHdsyoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDQ1Mg==", "bodyText": "why gone?", "url": "https://github.com/trinodb/trino/pull/5442#discussion_r500890452", "createdAt": "2020-10-07T10:02:41Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "diffHunk": "@@ -407,26 +404,23 @@ public void testFilesForAbortedTransactionsIgnored()\n             client.allocateTableWriteIds(\"default\", tableName, Collections.singletonList(transaction)).get(0).getWriteId();\n             client.abortTransaction(transaction);\n \n-            String deltaA = warehouseDirectory + \"/\" + tableName + \"/delta_0000001_0000001_0000/bucket_00000\";\n-            String deltaB = warehouseDirectory + \"/\" + tableName + \"/delta_0000002_0000002_0000/bucket_00000\";\n-            String deltaC = warehouseDirectory + \"/\" + tableName + \"/delta_0000003_0000003_0000/bucket_00000\";\n+            String deltaA = tableLocation + \"/delta_0000001_0000001_0000\";\n+            String deltaB = tableLocation + \"/delta_0000002_0000002_0000\";\n+            String deltaC = tableLocation + \"/delta_0000003_0000003_0000\";\n \n             // Delete original `delta-B`, `delta-C`\n-            hdfsClient.delete(deltaB);\n-            hdfsClient.delete(deltaC);\n-\n-            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n-            hdfsClient.loadFile(deltaA, byteArrayOutputStream);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9aa991a66827b17e0d9956994e1a61ed0cba58dd"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5NDI0OA==", "bodyText": "Files are read as part of hdfsCopyAll", "url": "https://github.com/trinodb/trino/pull/5442#discussion_r500894248", "createdAt": "2020-10-07T10:09:28Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "diffHunk": "@@ -407,26 +404,23 @@ public void testFilesForAbortedTransactionsIgnored()\n             client.allocateTableWriteIds(\"default\", tableName, Collections.singletonList(transaction)).get(0).getWriteId();\n             client.abortTransaction(transaction);\n \n-            String deltaA = warehouseDirectory + \"/\" + tableName + \"/delta_0000001_0000001_0000/bucket_00000\";\n-            String deltaB = warehouseDirectory + \"/\" + tableName + \"/delta_0000002_0000002_0000/bucket_00000\";\n-            String deltaC = warehouseDirectory + \"/\" + tableName + \"/delta_0000003_0000003_0000/bucket_00000\";\n+            String deltaA = tableLocation + \"/delta_0000001_0000001_0000\";\n+            String deltaB = tableLocation + \"/delta_0000002_0000002_0000\";\n+            String deltaC = tableLocation + \"/delta_0000003_0000003_0000\";\n \n             // Delete original `delta-B`, `delta-C`\n-            hdfsClient.delete(deltaB);\n-            hdfsClient.delete(deltaC);\n-\n-            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n-            hdfsClient.loadFile(deltaA, byteArrayOutputStream);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDQ1Mg=="}, "originalCommit": {"oid": "9aa991a66827b17e0d9956994e1a61ed0cba58dd"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5NjYyOQ==", "bodyText": "here we were creating empty delta_0000001_0000001_0000/bucket_00000 file. who does that now?", "url": "https://github.com/trinodb/trino/pull/5442#discussion_r500896629", "createdAt": "2020-10-07T10:13:25Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "diffHunk": "@@ -407,26 +404,23 @@ public void testFilesForAbortedTransactionsIgnored()\n             client.allocateTableWriteIds(\"default\", tableName, Collections.singletonList(transaction)).get(0).getWriteId();\n             client.abortTransaction(transaction);\n \n-            String deltaA = warehouseDirectory + \"/\" + tableName + \"/delta_0000001_0000001_0000/bucket_00000\";\n-            String deltaB = warehouseDirectory + \"/\" + tableName + \"/delta_0000002_0000002_0000/bucket_00000\";\n-            String deltaC = warehouseDirectory + \"/\" + tableName + \"/delta_0000003_0000003_0000/bucket_00000\";\n+            String deltaA = tableLocation + \"/delta_0000001_0000001_0000\";\n+            String deltaB = tableLocation + \"/delta_0000002_0000002_0000\";\n+            String deltaC = tableLocation + \"/delta_0000003_0000003_0000\";\n \n             // Delete original `delta-B`, `delta-C`\n-            hdfsClient.delete(deltaB);\n-            hdfsClient.delete(deltaC);\n-\n-            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n-            hdfsClient.loadFile(deltaA, byteArrayOutputStream);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDQ1Mg=="}, "originalCommit": {"oid": "9aa991a66827b17e0d9956994e1a61ed0cba58dd"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkwNDYwOQ==", "bodyText": "No we were not. delta_0000001_0000001_0000 were created on initial insert. And so it remains.\nloadFile is 'read file from hdfs'. Yeah - naming could be better.", "url": "https://github.com/trinodb/trino/pull/5442#discussion_r500904609", "createdAt": "2020-10-07T10:27:11Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "diffHunk": "@@ -407,26 +404,23 @@ public void testFilesForAbortedTransactionsIgnored()\n             client.allocateTableWriteIds(\"default\", tableName, Collections.singletonList(transaction)).get(0).getWriteId();\n             client.abortTransaction(transaction);\n \n-            String deltaA = warehouseDirectory + \"/\" + tableName + \"/delta_0000001_0000001_0000/bucket_00000\";\n-            String deltaB = warehouseDirectory + \"/\" + tableName + \"/delta_0000002_0000002_0000/bucket_00000\";\n-            String deltaC = warehouseDirectory + \"/\" + tableName + \"/delta_0000003_0000003_0000/bucket_00000\";\n+            String deltaA = tableLocation + \"/delta_0000001_0000001_0000\";\n+            String deltaB = tableLocation + \"/delta_0000002_0000002_0000\";\n+            String deltaC = tableLocation + \"/delta_0000003_0000003_0000\";\n \n             // Delete original `delta-B`, `delta-C`\n-            hdfsClient.delete(deltaB);\n-            hdfsClient.delete(deltaC);\n-\n-            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n-            hdfsClient.loadFile(deltaA, byteArrayOutputStream);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDQ1Mg=="}, "originalCommit": {"oid": "9aa991a66827b17e0d9956994e1a61ed0cba58dd"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjM1MzMzOnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMDowMzozNlrOHdr9Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMDoxNjoyOVrOHdsaUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDk3MA==", "bodyText": "target.parent ?", "url": "https://github.com/trinodb/trino/pull/5442#discussion_r500890970", "createdAt": "2020-10-07T10:03:36Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "diffHunk": "@@ -438,6 +432,28 @@ public void testFilesForAbortedTransactionsIgnored()\n         }\n     }\n \n+    private void hdfsDeleteAll(String directory)\n+    {\n+        if (!hdfsClient.exist(directory)) {\n+            return;\n+        }\n+        for (String file : hdfsClient.listDirectory(directory)) {\n+            hdfsClient.delete(directory + \"/\" + file);\n+        }\n+    }\n+\n+    private void hdfsCopyAll(String source, String target)\n+    {\n+        if (!hdfsClient.exist(target)) {\n+            hdfsClient.createDirectory(target);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9aa991a66827b17e0d9956994e1a61ed0cba58dd"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5NTYwMg==", "bodyText": "Not needed for current usecases. As this is local helper function I do not want to bloat it too much. If we decide to make a general helper util from it it would need to be smareter.\nBut then probably it should just be extension of HdfsClient interface.", "url": "https://github.com/trinodb/trino/pull/5442#discussion_r500895602", "createdAt": "2020-10-07T10:11:35Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "diffHunk": "@@ -438,6 +432,28 @@ public void testFilesForAbortedTransactionsIgnored()\n         }\n     }\n \n+    private void hdfsDeleteAll(String directory)\n+    {\n+        if (!hdfsClient.exist(directory)) {\n+            return;\n+        }\n+        for (String file : hdfsClient.listDirectory(directory)) {\n+            hdfsClient.delete(directory + \"/\" + file);\n+        }\n+    }\n+\n+    private void hdfsCopyAll(String source, String target)\n+    {\n+        if (!hdfsClient.exist(target)) {\n+            hdfsClient.createDirectory(target);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDk3MA=="}, "originalCommit": {"oid": "9aa991a66827b17e0d9956994e1a61ed0cba58dd"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5ODM4NA==", "bodyText": "i misread the code", "url": "https://github.com/trinodb/trino/pull/5442#discussion_r500898384", "createdAt": "2020-10-07T10:16:29Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "diffHunk": "@@ -438,6 +432,28 @@ public void testFilesForAbortedTransactionsIgnored()\n         }\n     }\n \n+    private void hdfsDeleteAll(String directory)\n+    {\n+        if (!hdfsClient.exist(directory)) {\n+            return;\n+        }\n+        for (String file : hdfsClient.listDirectory(directory)) {\n+            hdfsClient.delete(directory + \"/\" + file);\n+        }\n+    }\n+\n+    private void hdfsCopyAll(String source, String target)\n+    {\n+        if (!hdfsClient.exist(target)) {\n+            hdfsClient.createDirectory(target);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDk3MA=="}, "originalCommit": {"oid": "9aa991a66827b17e0d9956994e1a61ed0cba58dd"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjM1ODE3OnYy", "diffSide": "LEFT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMDowNTowMlrOHdsAcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMDowNTowMlrOHdsAcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MTc2Mg==", "bodyText": "folow up We should try to remove warehouse_directory_path property\ncc @wendigo", "url": "https://github.com/trinodb/trino/pull/5442#discussion_r500891762", "createdAt": "2020-10-07T10:05:02Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "diffHunk": "@@ -71,10 +70,6 @@\n     @Inject\n     private TestHiveMetastoreClientFactory testHiveMetastoreClientFactory;\n \n-    @Inject\n-    @Named(\"databases.hive.warehouse_directory_path\")\n-    private String warehouseDirectory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9aa991a66827b17e0d9956994e1a61ed0cba58dd"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4622, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}