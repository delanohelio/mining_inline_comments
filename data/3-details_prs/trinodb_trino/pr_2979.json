{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMjk3MjI0", "number": 2979, "title": "Remove duplicated logic", "bodyText": "Remove logic duplication between isRangeSupported and createRange /\ncalculateRangeForPartitioningKey, by removing the isRangeSupported\nmethod.", "createdAt": "2020-03-02T10:21:09Z", "url": "https://github.com/trinodb/trino/pull/2979", "merged": true, "mergeCommit": {"oid": "2505c1c4dfd8b6c9d44563395ec30085a97a13e0"}, "closed": true, "closedAt": "2020-03-05T16:22:43Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJrxtigBqjMwODc0OTM4Mzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKsQyWgFqTM2OTYwNDgzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NjI1OTc1", "url": "https://github.com/trinodb/trino/pull/2979#pullrequestreview-368625975", "createdAt": "2020-03-04T09:37:24Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwOTozNzoyNVrOFxmAyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwOTozODo1N1rOFxmEVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU0NzMzOQ==", "bodyText": "you should filter by isPresent here (or peek validate the optional)", "url": "https://github.com/trinodb/trino/pull/2979#discussion_r387547339", "createdAt": "2020-03-04T09:37:25Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/statistics/MetastoreHiveStatisticsProvider.java", "diffHunk": "@@ -550,18 +550,21 @@ private static OptionalDouble getPartitionRowCount(String partitionName, Map<Str\n     @VisibleForTesting\n     static Optional<DoubleRange> calculateRangeForPartitioningKey(HiveColumnHandle column, Type type, List<HivePartition> partitions)\n     {\n-        if (!isRangeSupported(type)) {\n-            return Optional.empty();\n-        }\n-\n-        List<Double> values = partitions.stream()\n+        List<OptionalDouble> convertedValues = partitions.stream()\n                 .map(HivePartition::getKeys)\n                 .map(keys -> keys.get(column))\n                 .filter(value -> !value.isNull())\n                 .map(NullableValue::getValue)\n                 .map(value -> convertPartitionValueToDouble(type, value))\n                 .collect(toImmutableList());\n \n+        if (convertedValues.stream().noneMatch(OptionalDouble::isPresent)) {\n+            return Optional.empty();\n+        }\n+        List<Double> values = convertedValues.stream()\n+                .map(OptionalDouble::getAsDouble)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU0ODI0NA==", "bodyText": "could you add a comment here? It seems that all or none value will be present.\nMaybe change the condition to !convertedValues.stream().allMatch(Optional::isPresent)", "url": "https://github.com/trinodb/trino/pull/2979#discussion_r387548244", "createdAt": "2020-03-04T09:38:57Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/statistics/MetastoreHiveStatisticsProvider.java", "diffHunk": "@@ -550,18 +550,21 @@ private static OptionalDouble getPartitionRowCount(String partitionName, Map<Str\n     @VisibleForTesting\n     static Optional<DoubleRange> calculateRangeForPartitioningKey(HiveColumnHandle column, Type type, List<HivePartition> partitions)\n     {\n-        if (!isRangeSupported(type)) {\n-            return Optional.empty();\n-        }\n-\n-        List<Double> values = partitions.stream()\n+        List<OptionalDouble> convertedValues = partitions.stream()\n                 .map(HivePartition::getKeys)\n                 .map(keys -> keys.get(column))\n                 .filter(value -> !value.isNull())\n                 .map(NullableValue::getValue)\n                 .map(value -> convertPartitionValueToDouble(type, value))\n                 .collect(toImmutableList());\n \n+        if (convertedValues.stream().noneMatch(OptionalDouble::isPresent)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NDA1MzU4", "url": "https://github.com/trinodb/trino/pull/2979#pullrequestreview-369405358", "createdAt": "2020-03-05T09:20:44Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "784fa375a50a78fef34b1f1cb41fa8c7a1ce179b", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/784fa375a50a78fef34b1f1cb41fa8c7a1ce179b", "committedDate": "2020-03-05T09:50:09Z", "message": "Remove duplicated logic\n\nRemove logic duplication between `isRangeSupported` and `createRange` /\n`calculateRangeForPartitioningKey`, by removing the `isRangeSupported`\nmethod."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e68f1f1b28dbd30249cb250e4131bbead7461851", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/e68f1f1b28dbd30249cb250e4131bbead7461851", "committedDate": "2020-03-05T09:54:03Z", "message": "Expose conversion method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "e68f1f1b28dbd30249cb250e4131bbead7461851", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/e68f1f1b28dbd30249cb250e4131bbead7461851", "committedDate": "2020-03-05T09:54:03Z", "message": "Expose conversion method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NjA0ODM3", "url": "https://github.com/trinodb/trino/pull/2979#pullrequestreview-369604837", "createdAt": "2020-03-05T14:19:29Z", "commit": {"oid": "e68f1f1b28dbd30249cb250e4131bbead7461851"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1623, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}