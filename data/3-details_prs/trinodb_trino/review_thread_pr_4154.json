{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MTM1NzU3", "number": 4154, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOToyNDo0OVrOEH40ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOToyNDo0OVrOEH40ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NzA2NDI3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestLogicalPlanner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOToyNDo0OVrOGng64Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNToyNDo1MFrOGnukHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA4NzAwOQ==", "bodyText": "what does this case test specifically vs previous case? Consider adding a comment", "url": "https://github.com/trinodb/trino/pull/4154#discussion_r444087009", "createdAt": "2020-06-23T09:24:49Z", "author": {"login": "sopel39"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestLogicalPlanner.java", "diffHunk": "@@ -250,6 +250,28 @@ public void testAllFieldsDereferenceFromNonDeterministic()\n                                         project(\n                                                 ImmutableMap.of(\"rand\", expression(\"rand()\")),\n                                                 values())))));\n+\n+        assertPlan(\"SELECT (rand(), rand()).* FROM (VALUES 1) t(x)\",\n+                any(\n+                        project(\n+                                ImmutableMap.of(\n+                                        \"output_1\", expression(\"CAST(r AS ROW(f0 double,f1 double)).f0\"),\n+                                        \"output_2\", expression(\"CAST(r AS ROW(f0 double,f1 double)).f1\")),\n+                                project(\n+                                        ImmutableMap.of(\"r\", expression(\"ROW(rand(), rand())\")),\n+                                        values()))));\n+\n+        assertPlan(\"SELECT (rand(), rand()).* FROM (VALUES 1, 2) t(x) ORDER BY 1\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMxMDU1Nw==", "bodyText": "It's to check that the ORDER BY clause doesn't \"duplicate\" the expression, which would result in incorrect results due to non-determinism.", "url": "https://github.com/trinodb/trino/pull/4154#discussion_r444310557", "createdAt": "2020-06-23T15:24:50Z", "author": {"login": "martint"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestLogicalPlanner.java", "diffHunk": "@@ -250,6 +250,28 @@ public void testAllFieldsDereferenceFromNonDeterministic()\n                                         project(\n                                                 ImmutableMap.of(\"rand\", expression(\"rand()\")),\n                                                 values())))));\n+\n+        assertPlan(\"SELECT (rand(), rand()).* FROM (VALUES 1) t(x)\",\n+                any(\n+                        project(\n+                                ImmutableMap.of(\n+                                        \"output_1\", expression(\"CAST(r AS ROW(f0 double,f1 double)).f0\"),\n+                                        \"output_2\", expression(\"CAST(r AS ROW(f0 double,f1 double)).f1\")),\n+                                project(\n+                                        ImmutableMap.of(\"r\", expression(\"ROW(rand(), rand())\")),\n+                                        values()))));\n+\n+        assertPlan(\"SELECT (rand(), rand()).* FROM (VALUES 1, 2) t(x) ORDER BY 1\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA4NzAwOQ=="}, "originalCommit": null, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4178, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}