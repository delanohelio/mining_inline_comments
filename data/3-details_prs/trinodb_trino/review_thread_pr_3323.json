{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MDQxOTk4", "number": 3323, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODowNjo0OFrODvriZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODo0NjoyMlrODvsc6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzIyOTgwOnYy", "diffSide": "RIGHT", "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/TestCassandraIntegrationSmokeTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODowNjo0OFrOGCP3vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODoyMjowN1rOGCkOnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxMDM2Ng==", "bodyText": "nit; unrelated change", "url": "https://github.com/trinodb/trino/pull/3323#discussion_r405010366", "createdAt": "2020-04-07T18:06:48Z", "author": {"login": "losipiuk"}, "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/TestCassandraIntegrationSmokeTest.java", "diffHunk": "@@ -481,15 +499,15 @@ public void testNestedCollectionType()\n \n         session.execute(\"INSERT INTO keyspace_test_nested_collection.table_set (column_5, nested_collection) VALUES (1, {{1, 2, 3}})\");\n         assertEquals(execute(\"SELECT nested_collection FROM cassandra.keyspace_test_nested_collection.table_set\").getMaterializedRows().get(0),\n-                     new MaterializedRow(DEFAULT_PRECISION, \"[[1,2,3]]\"));\n+                new MaterializedRow(DEFAULT_PRECISION, \"[[1,2,3]]\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAzMjY1Mg==", "bodyText": "separate commit?", "url": "https://github.com/trinodb/trino/pull/3323#discussion_r405032652", "createdAt": "2020-04-07T18:43:37Z", "author": {"login": "kokosing"}, "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/TestCassandraIntegrationSmokeTest.java", "diffHunk": "@@ -481,15 +499,15 @@ public void testNestedCollectionType()\n \n         session.execute(\"INSERT INTO keyspace_test_nested_collection.table_set (column_5, nested_collection) VALUES (1, {{1, 2, 3}})\");\n         assertEquals(execute(\"SELECT nested_collection FROM cassandra.keyspace_test_nested_collection.table_set\").getMaterializedRows().get(0),\n-                     new MaterializedRow(DEFAULT_PRECISION, \"[[1,2,3]]\"));\n+                new MaterializedRow(DEFAULT_PRECISION, \"[[1,2,3]]\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxMDM2Ng=="}, "originalCommit": null, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM0MzkwMQ==", "bodyText": "thanks", "url": "https://github.com/trinodb/trino/pull/3323#discussion_r405343901", "createdAt": "2020-04-08T08:22:07Z", "author": {"login": "findepi"}, "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/TestCassandraIntegrationSmokeTest.java", "diffHunk": "@@ -481,15 +499,15 @@ public void testNestedCollectionType()\n \n         session.execute(\"INSERT INTO keyspace_test_nested_collection.table_set (column_5, nested_collection) VALUES (1, {{1, 2, 3}})\");\n         assertEquals(execute(\"SELECT nested_collection FROM cassandra.keyspace_test_nested_collection.table_set\").getMaterializedRows().get(0),\n-                     new MaterializedRow(DEFAULT_PRECISION, \"[[1,2,3]]\"));\n+                new MaterializedRow(DEFAULT_PRECISION, \"[[1,2,3]]\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxMDM2Ng=="}, "originalCommit": null, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzIzMzgzOnYy", "diffSide": "RIGHT", "path": "presto-elasticsearch/pom.xml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODowNzo1NVrOGCP6UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODoyMjo1NFrOGCkQeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxMTAyNQ==", "bodyText": "Are we trying to maintain a specific order of dependencies in pom.xml?", "url": "https://github.com/trinodb/trino/pull/3323#discussion_r405011025", "createdAt": "2020-04-07T18:07:55Z", "author": {"login": "losipiuk"}, "path": "presto-elasticsearch/pom.xml", "diffHunk": "@@ -367,6 +367,12 @@\n             <scope>test</scope>\n         </dependency>\n \n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAzNDAwNg==", "bodyText": "\"We\" (I try to) do. Order by scope, group id, alphabetically (group id, artifact id). Scope order is compile, provided, test. Group id order is presto, airlift, rest.", "url": "https://github.com/trinodb/trino/pull/3323#discussion_r405034006", "createdAt": "2020-04-07T18:45:59Z", "author": {"login": "kokosing"}, "path": "presto-elasticsearch/pom.xml", "diffHunk": "@@ -367,6 +367,12 @@\n             <scope>test</scope>\n         </dependency>\n \n+        <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxMTAyNQ=="}, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM0NDM3OA==", "bodyText": "i don't think there is any specific order in these files.\ni tried to introduce in some, but without clear written rules, this is descending into chaos quickly", "url": "https://github.com/trinodb/trino/pull/3323#discussion_r405344378", "createdAt": "2020-04-08T08:22:54Z", "author": {"login": "findepi"}, "path": "presto-elasticsearch/pom.xml", "diffHunk": "@@ -367,6 +367,12 @@\n             <scope>test</scope>\n         </dependency>\n \n+        <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxMTAyNQ=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzM3OTYxOnYy", "diffSide": "RIGHT", "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearchIntegrationSmokeTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODo0NjoyMlrOGCRU5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODoyNDowOVrOGCkTnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAzNDIxMg==", "bodyText": "Please post an issue.", "url": "https://github.com/trinodb/trino/pull/3323#discussion_r405034212", "createdAt": "2020-04-07T18:46:22Z", "author": {"login": "kokosing"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearchIntegrationSmokeTest.java", "diffHunk": "@@ -95,6 +97,15 @@ public void testDescribeTable()\n         assertEquals(actualColumns, expectedColumns);\n     }\n \n+    @Override\n+    public void testShowCreateTable()\n+    {\n+        // TODO Fix SHOW CREATE TABLE", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM0NTE4MA==", "bodyText": "#3385", "url": "https://github.com/trinodb/trino/pull/3323#discussion_r405345180", "createdAt": "2020-04-08T08:24:09Z", "author": {"login": "findepi"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearchIntegrationSmokeTest.java", "diffHunk": "@@ -95,6 +97,15 @@ public void testDescribeTable()\n         assertEquals(actualColumns, expectedColumns);\n     }\n \n+    @Override\n+    public void testShowCreateTable()\n+    {\n+        // TODO Fix SHOW CREATE TABLE", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAzNDIxMg=="}, "originalCommit": null, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 297, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}