{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4ODkwNDEy", "number": 3761, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxMjo0MDowOVrOD9FfDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxMjo0MjozNlrOD9FfkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Mzc5NTk3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/testing/TestingConnectorSession.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxMjo0MDowOVrOGWaJVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxMjo0MDowOVrOGWaJVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE1MDIzMQ==", "bodyText": "rename field and ctor to start", "url": "https://github.com/trinodb/trino/pull/3761#discussion_r426150231", "createdAt": "2020-05-16T12:40:09Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/testing/TestingConnectorSession.java", "diffHunk": "@@ -48,7 +49,7 @@\n     private final TimeZoneKey timeZoneKey;\n     private final Locale locale;\n     private final Optional<String> traceToken;\n-    private final long startTime;\n+    private final Instant startTime;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Mzc5NjA2OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/testing/TestingConnectorSession.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxMjo0MDoyMVrOGWaJZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxMjo0MDoyMVrOGWaJZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE1MDI0Ng==", "bodyText": "start", "url": "https://github.com/trinodb/trino/pull/3761#discussion_r426150246", "createdAt": "2020-05-16T12:40:21Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/testing/TestingConnectorSession.java", "diffHunk": "@@ -164,7 +165,7 @@ public static Builder builder()\n         private TimeZoneKey timeZoneKey = UTC_KEY;\n         private final Locale locale = ENGLISH;\n         private final Optional<String> traceToken = Optional.empty();\n-        private Optional<Long> startTime = Optional.empty();\n+        private Optional<Instant> startTime = Optional.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Mzc5NjE3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/testing/TestingConnectorSession.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxMjo0MDo0MFrOGWaJew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxMjo0MDo0MFrOGWaJew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE1MDI2Nw==", "bodyText": "setStart", "url": "https://github.com/trinodb/trino/pull/3761#discussion_r426150267", "createdAt": "2020-05-16T12:40:40Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/testing/TestingConnectorSession.java", "diffHunk": "@@ -181,7 +182,7 @@ public Builder setTimeZoneKey(TimeZoneKey timeZoneKey)\n             return this;\n         }\n \n-        public Builder setStartTime(long startTime)\n+        public Builder setStartTime(Instant startTime)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Mzc5Njc3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/operator/scalar/TestDateTimeFunctions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxMjo0MTo1NVrOGWaJzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QwMjoxODo1NVrOGWdv6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE1MDM1MQ==", "bodyText": "In session builder you can leave an overload taking millis, this would improve readability of the code here.", "url": "https://github.com/trinodb/trino/pull/3761#discussion_r426150351", "createdAt": "2020-05-16T12:41:55Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/operator/scalar/TestDateTimeFunctions.java", "diffHunk": "@@ -50,7 +52,7 @@ public void testFormatDateCannotImplicitlyAddTimeZoneToTimestampLiteral()\n     public void testLocalTime()\n     {\n         Session localSession = Session.builder(session)\n-                .setStartTime(new DateTime(2017, 3, 1, 14, 30, 0, 0, DATE_TIME_ZONE).getMillis())\n+                .setStartTime(Instant.ofEpochMilli(new DateTime(2017, 3, 1, 14, 30, 0, 0, DATE_TIME_ZONE).getMillis()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIwOTI1OA==", "bodyText": "We want to discourage usages where it's constructing the Instant from millis. Ideally, all these calls should use Java's datetime to instant conversions instead of using Joda's DateTime .", "url": "https://github.com/trinodb/trino/pull/3761#discussion_r426209258", "createdAt": "2020-05-17T02:18:55Z", "author": {"login": "martint"}, "path": "presto-main/src/test/java/io/prestosql/operator/scalar/TestDateTimeFunctions.java", "diffHunk": "@@ -50,7 +52,7 @@ public void testFormatDateCannotImplicitlyAddTimeZoneToTimestampLiteral()\n     public void testLocalTime()\n     {\n         Session localSession = Session.builder(session)\n-                .setStartTime(new DateTime(2017, 3, 1, 14, 30, 0, 0, DATE_TIME_ZONE).getMillis())\n+                .setStartTime(Instant.ofEpochMilli(new DateTime(2017, 3, 1, 14, 30, 0, 0, DATE_TIME_ZONE).getMillis()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE1MDM1MQ=="}, "originalCommit": null, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Mzc5NzI4OnYy", "diffSide": "RIGHT", "path": "presto-spi/src/main/java/io/prestosql/spi/connector/ConnectorSession.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxMjo0MjozNlrOGWaKCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMToyMzo1MlrOGWjr3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE1MDQxMA==", "bodyText": "add @Deprecated too?\n(should we have a static check?)", "url": "https://github.com/trinodb/trino/pull/3761#discussion_r426150410", "createdAt": "2020-05-16T12:42:36Z", "author": {"login": "findepi"}, "path": "presto-spi/src/main/java/io/prestosql/spi/connector/ConnectorSession.java", "diffHunk": "@@ -38,7 +39,15 @@ default String getUser()\n \n     Optional<String> getTraceToken();\n \n-    long getStartTime();\n+    /**\n+     * @deprecated use {@link #getStart()} instead\n+     */\n+    default long getStartTime()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIwOTI5Mg==", "bodyText": "What do you mean by a static check?", "url": "https://github.com/trinodb/trino/pull/3761#discussion_r426209292", "createdAt": "2020-05-17T02:19:46Z", "author": {"login": "martint"}, "path": "presto-spi/src/main/java/io/prestosql/spi/connector/ConnectorSession.java", "diffHunk": "@@ -38,7 +39,15 @@ default String getUser()\n \n     Optional<String> getTraceToken();\n \n-    long getStartTime();\n+    /**\n+     * @deprecated use {@link #getStart()} instead\n+     */\n+    default long getStartTime()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE1MDQxMA=="}, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIxMzg0Mg==", "bodyText": "Using deprecated in the Javadoc without the annotation.", "url": "https://github.com/trinodb/trino/pull/3761#discussion_r426213842", "createdAt": "2020-05-17T03:45:44Z", "author": {"login": "electrum"}, "path": "presto-spi/src/main/java/io/prestosql/spi/connector/ConnectorSession.java", "diffHunk": "@@ -38,7 +39,15 @@ default String getUser()\n \n     Optional<String> getTraceToken();\n \n-    long getStartTime();\n+    /**\n+     * @deprecated use {@link #getStart()} instead\n+     */\n+    default long getStartTime()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE1MDQxMA=="}, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMwNjUyNw==", "bodyText": "That makes sense. Is it even feasible to do that with checkstyle?", "url": "https://github.com/trinodb/trino/pull/3761#discussion_r426306527", "createdAt": "2020-05-17T21:23:52Z", "author": {"login": "martint"}, "path": "presto-spi/src/main/java/io/prestosql/spi/connector/ConnectorSession.java", "diffHunk": "@@ -38,7 +39,15 @@ default String getUser()\n \n     Optional<String> getTraceToken();\n \n-    long getStartTime();\n+    /**\n+     * @deprecated use {@link #getStart()} instead\n+     */\n+    default long getStartTime()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE1MDQxMA=="}, "originalCommit": null, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4843, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}