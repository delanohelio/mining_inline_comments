{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4NTY0MDQ5", "number": 6119, "title": "Fix terminal width detection in the CLI", "bodyText": "Since JLine 3.14.0 only one system Terminal can exist at once. When trying to create another system Terminal instance, a dumb terminal will be created instead that reports its width as zero. To avoid that, we create a Terminal instance only once.\nSupersedes #6113\nRepro case:\npackage pl.wendigo.jline;\n\nimport java.io.IOException;\nimport java.io.UncheckedIOException;\n\nimport static java.lang.String.format;\nimport static org.jline.terminal.TerminalBuilder.terminal;\n\npublic class Terminal\n{\n    public static void main(String[] args)\n    {\n        try {\n            System.out.println(format(\"Terminal width is %d\", terminal().getWidth()));\n            System.out.println(format(\"Terminal width is %d\", terminal().getWidth()));\n        }\n        catch (IOException e) {\n            throw new UncheckedIOException(e);\n        }\n    }\n}\n\nwill result in:\nTerminal width is 313\nNov 27, 2020 12:35:49 PM org.jline.utils.Log logr\nWARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)\nTerminal width is 0", "createdAt": "2020-11-27T11:40:16Z", "url": "https://github.com/trinodb/trino/pull/6119", "merged": true, "mergeCommit": {"oid": "d5cf3ab266c9b8c9fd850ad89c4792c879f9401f"}, "closed": true, "closedAt": "2020-12-01T14:30:04Z", "author": {"login": "wendigo"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgmgEfABqjQwNDU4OTgzNTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdhTCzwAFqTU0MDQ5MzQ5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5OTYwMjcw", "url": "https://github.com/trinodb/trino/pull/6119#pullrequestreview-539960270", "createdAt": "2020-11-27T12:56:31Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjo1NjozMVrOH69eow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjo1NzoyMVrOH69gVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU4NjcyMw==", "bodyText": "private?", "url": "https://github.com/trinodb/trino/pull/6119#discussion_r531586723", "createdAt": "2020-11-27T12:56:31Z", "author": {"login": "findepi"}, "path": "presto-cli/src/main/java/io/prestosql/cli/TerminalUtils.java", "diffHunk": "@@ -14,30 +14,53 @@\n package io.prestosql.cli;\n \n import org.jline.terminal.Terminal;\n+import org.jline.terminal.TerminalBuilder;\n \n import java.io.IOException;\n-\n-import static org.jline.terminal.TerminalBuilder.terminal;\n+import java.io.UncheckedIOException;\n+import java.nio.charset.Charset;\n \n public class TerminalUtils\n {\n-    private static final boolean REAL_TERMINAL = detectRealTerminal();\n+    private static final Terminal TERMINAL_INSTANCE = createTerminal();\n \n     private TerminalUtils() {}\n \n+    public static boolean isRealTerminal(Terminal terminal)\n+    {\n+        return !Terminal.TYPE_DUMB.equals(terminal.getType()) &&\n+                !Terminal.TYPE_DUMB_COLOR.equals(terminal.getType());\n+    }\n+\n     public static boolean isRealTerminal()\n     {\n-        return REAL_TERMINAL;\n+        return isRealTerminal(getTerminal());\n+    }\n+\n+    public static int terminalWidth()\n+    {\n+        return getTerminal().getWidth();\n     }\n \n-    private static boolean detectRealTerminal()\n+    public static Charset terminalEncoding()\n     {\n-        try (Terminal terminal = terminal()) {\n-            return !Terminal.TYPE_DUMB.equals(terminal.getType()) &&\n-                    !Terminal.TYPE_DUMB_COLOR.equals(terminal.getType());\n+        return getTerminal().encoding();\n+    }\n+\n+    public static Terminal createTerminal()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU4NzE1OQ==", "bodyText": "i'd place getTerminal, and createTerminal at the top, close to the singleton declaration", "url": "https://github.com/trinodb/trino/pull/6119#discussion_r531587159", "createdAt": "2020-11-27T12:57:21Z", "author": {"login": "findepi"}, "path": "presto-cli/src/main/java/io/prestosql/cli/TerminalUtils.java", "diffHunk": "@@ -14,30 +14,53 @@\n package io.prestosql.cli;\n \n import org.jline.terminal.Terminal;\n+import org.jline.terminal.TerminalBuilder;\n \n import java.io.IOException;\n-\n-import static org.jline.terminal.TerminalBuilder.terminal;\n+import java.io.UncheckedIOException;\n+import java.nio.charset.Charset;\n \n public class TerminalUtils\n {\n-    private static final boolean REAL_TERMINAL = detectRealTerminal();\n+    private static final Terminal TERMINAL_INSTANCE = createTerminal();\n \n     private TerminalUtils() {}\n \n+    public static boolean isRealTerminal(Terminal terminal)\n+    {\n+        return !Terminal.TYPE_DUMB.equals(terminal.getType()) &&\n+                !Terminal.TYPE_DUMB_COLOR.equals(terminal.getType());\n+    }\n+\n     public static boolean isRealTerminal()\n     {\n-        return REAL_TERMINAL;\n+        return isRealTerminal(getTerminal());\n+    }\n+\n+    public static int terminalWidth()\n+    {\n+        return getTerminal().getWidth();\n     }\n \n-    private static boolean detectRealTerminal()\n+    public static Charset terminalEncoding()\n     {\n-        try (Terminal terminal = terminal()) {\n-            return !Terminal.TYPE_DUMB.equals(terminal.getType()) &&\n-                    !Terminal.TYPE_DUMB_COLOR.equals(terminal.getType());\n+        return getTerminal().encoding();\n+    }\n+\n+    public static Terminal createTerminal()\n+    {\n+        try {\n+            return TerminalBuilder.builder()\n+                    .name(\"Presto\")\n+                    .build();\n         }\n         catch (IOException e) {\n-            return false;\n+            throw new UncheckedIOException(e);\n         }\n     }\n+\n+    public static Terminal getTerminal()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f6ec1a60e20cec408559d3d772405711fe7174c", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/9f6ec1a60e20cec408559d3d772405711fe7174c", "committedDate": "2020-11-27T13:48:56Z", "message": "Fix terminal width detection in CLI\n\nSince JLine 3.14.0 only one system Terminal can exist at once.\nWhen trying to create another system Terminal instance, a dumb terminal will be created instead\nthat reports its width as zero. To avoid that, we create a Terminal instance only once.\n\nThis behavior was introduced in https://github.com/jline/jline3/commit/c3317"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "9f6ec1a60e20cec408559d3d772405711fe7174c", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/9f6ec1a60e20cec408559d3d772405711fe7174c", "committedDate": "2020-11-27T13:48:56Z", "message": "Fix terminal width detection in CLI\n\nSince JLine 3.14.0 only one system Terminal can exist at once.\nWhen trying to create another system Terminal instance, a dumb terminal will be created instead\nthat reports its width as zero. To avoid that, we create a Terminal instance only once.\n\nThis behavior was introduced in https://github.com/jline/jline3/commit/c3317"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDkzNDk2", "url": "https://github.com/trinodb/trino/pull/6119#pullrequestreview-540493496", "createdAt": "2020-11-29T16:08:00Z", "commit": {"oid": "9f6ec1a60e20cec408559d3d772405711fe7174c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2387, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}