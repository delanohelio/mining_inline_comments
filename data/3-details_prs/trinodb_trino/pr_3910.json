{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2ODkyNTYz", "number": 3910, "title": "Run code formatter", "bodyText": "", "createdAt": "2020-06-03T00:12:18Z", "url": "https://github.com/trinodb/trino/pull/3910", "merged": true, "mergeCommit": {"oid": "67368f6a033176b37c6264912751a00c04b51707"}, "closed": true, "closedAt": "2020-06-03T03:40:53Z", "author": {"login": "electrum"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcneMj4AFqTQyMzEzODQxMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcng3CCAFqTQyMzE5MzQ0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMTM4NDEx", "url": "https://github.com/trinodb/trino/pull/3910#pullrequestreview-423138411", "createdAt": "2020-06-03T00:14:41Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMDoxNDo0MlrOGeIBEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMDoxNjozOVrOGeIDGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0MTgwOQ==", "bodyText": "First argument should go on the next line", "url": "https://github.com/trinodb/trino/pull/3910#discussion_r434241809", "createdAt": "2020-06-03T00:14:42Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/JoniRegexpFunctions.java", "diffHunk": "@@ -333,8 +333,8 @@ public static long regexpPosition(@SqlType(\"varchar(x)\") Slice source, @SqlType(\n     @LiteralParameters(\"x\")\n     @SqlType(StandardTypes.INTEGER)\n     public static long regexpPosition(@SqlType(\"varchar(x)\") Slice source,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0MTkwNg==", "bodyText": "First argument should go on the next line", "url": "https://github.com/trinodb/trino/pull/3910#discussion_r434241906", "createdAt": "2020-06-03T00:15:01Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/JoniRegexpFunctions.java", "diffHunk": "@@ -344,9 +344,9 @@ public static long regexpPosition(@SqlType(\"varchar(x)\") Slice source,\n     @LiteralParameters(\"x\")\n     @SqlType(StandardTypes.INTEGER)\n     public static long regexpPosition(@SqlType(\"varchar(x)\") Slice source,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0MjAwNw==", "bodyText": "First argument should go on the next line", "url": "https://github.com/trinodb/trino/pull/3910#discussion_r434242007", "createdAt": "2020-06-03T00:15:24Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/Re2JRegexpFunctions.java", "diffHunk": "@@ -129,8 +129,8 @@ public static long regexpPosition(@SqlType(\"varchar(x)\") Slice source, @SqlType(\n     @LiteralParameters(\"x\")\n     @SqlType(StandardTypes.INTEGER)\n     public static long regexpPosition(@SqlType(\"varchar(x)\") Slice source,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0MjAyMw==", "bodyText": "First argument should go on the next line", "url": "https://github.com/trinodb/trino/pull/3910#discussion_r434242023", "createdAt": "2020-06-03T00:15:30Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/Re2JRegexpFunctions.java", "diffHunk": "@@ -140,9 +140,9 @@ public static long regexpPosition(@SqlType(\"varchar(x)\") Slice source,\n     @LiteralParameters(\"x\")\n     @SqlType(StandardTypes.INTEGER)\n     public static long regexpPosition(@SqlType(\"varchar(x)\") Slice source,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0MjIxNQ==", "bodyText": "This is less readable than before", "url": "https://github.com/trinodb/trino/pull/3910#discussion_r434242215", "createdAt": "2020-06-03T00:16:11Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/sql/gen/JoinCompiler.java", "diffHunk": "@@ -684,10 +684,10 @@ private void generatePositionNotDistinctFromRowWithPageMethod(\n             // At that point, we'll be able to fully deprecate Type.equalTo (and friends) and remove this hack.\n             if (type.getJavaType().equals(Slice.class) && (\n                     type instanceof CharType ||\n-                    type instanceof JsonType ||\n-                    type instanceof DecimalType ||\n-                    type instanceof VarbinaryType ||\n-                    type instanceof VarcharType)) {\n+                            type instanceof JsonType ||\n+                            type instanceof DecimalType ||\n+                            type instanceof VarbinaryType ||\n+                            type instanceof VarcharType)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0MjMzMQ==", "bodyText": "This is less readable than before", "url": "https://github.com/trinodb/trino/pull/3910#discussion_r434242331", "createdAt": "2020-06-03T00:16:39Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/iterative/rule/PushDownNegationsExpressionRewriter.java", "diffHunk": "@@ -81,9 +81,9 @@ public Expression rewriteNotExpression(NotExpression node, Void context, Express\n                 checkState(leftType != null && rightType != null, \"missing type for expression\");\n                 if ((typeHasNaN(leftType) || typeHasNaN(rightType)) && (\n                         operator == GREATER_THAN_OR_EQUAL ||\n-                        operator == GREATER_THAN ||\n-                        operator == LESS_THAN_OR_EQUAL ||\n-                        operator == LESS_THAN)) {\n+                                operator == GREATER_THAN ||\n+                                operator == LESS_THAN_OR_EQUAL ||\n+                                operator == LESS_THAN)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e85c0e446fe11a3993e0b388426f3781c8874aee", "author": {"user": {"login": "electrum", "name": "David Phillips"}}, "url": "https://github.com/trinodb/trino/commit/e85c0e446fe11a3993e0b388426f3781c8874aee", "committedDate": "2020-06-03T02:19:51Z", "message": "Run code formatter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "e85c0e446fe11a3993e0b388426f3781c8874aee", "author": {"user": {"login": "electrum", "name": "David Phillips"}}, "url": "https://github.com/trinodb/trino/commit/e85c0e446fe11a3993e0b388426f3781c8874aee", "committedDate": "2020-06-03T02:19:51Z", "message": "Run code formatter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMTkzNDQz", "url": "https://github.com/trinodb/trino/pull/3910#pullrequestreview-423193443", "createdAt": "2020-06-03T03:26:12Z", "commit": {"oid": "e85c0e446fe11a3993e0b388426f3781c8874aee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 554, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}