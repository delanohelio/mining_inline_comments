{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2OTk2MzE0", "number": 5043, "title": "Add DynamicFilter#isAwaitable method", "bodyText": "DynamicFilter#isAwaitable method can be used together with\nDynamicFilter#isBlocked to wait for narrowed dynamic filters.\nSome dynamic filters cannot be waited for (e.g for replicated joins).\nTherefore existing DynamicFilter#isComplete method cannot be used\nto determine if one can still wait for dynamic filter to be narrowed\n(isComplete could return false while isBlocked would return completed\nfuture immediatelly)", "createdAt": "2020-09-01T10:53:00Z", "url": "https://github.com/trinodb/trino/pull/5043", "merged": true, "mergeCommit": {"oid": "cb300dcec0f2d6d0e27ac46b42d721d58ead3653"}, "closed": true, "closedAt": "2020-09-11T09:53:46Z", "author": {"login": "sopel39"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdElipmAFqTQ3OTY0MDk1NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHyTDPABqjM3NTUzNDc5NjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NjQwOTU0", "url": "https://github.com/trinodb/trino/pull/5043#pullrequestreview-479640954", "createdAt": "2020-09-01T11:17:16Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNzc5NTM0", "url": "https://github.com/trinodb/trino/pull/5043#pullrequestreview-481779534", "createdAt": "2020-09-03T12:17:17Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMjoxNzoxN1rOHMj4tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMjoxNzoxN1rOHMj4tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkzMjkxOA==", "bodyText": "Should there be short-circuiting here to declare the filter as complete as soon as one of the filters is an all ? (and equivalent change in isBlocked)", "url": "https://github.com/trinodb/trino/pull/5043#discussion_r482932918", "createdAt": "2020-09-03T12:17:17Z", "author": {"login": "raunaqmorarka"}, "path": "presto-main/src/main/java/io/prestosql/server/DynamicFilterService.java", "diffHunk": "@@ -223,8 +224,7 @@ public DynamicFilter createDynamicFilter(QueryId queryId, List<DynamicFilters.De\n             @Override\n             public boolean isComplete()\n             {\n-                return dynamicFilters.stream()\n-                        .allMatch(context.getDynamicFilterSummaries()::containsKey);\n+                return lazyDynamicFilterFutures.stream().allMatch(Future::isDone);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1MTE1MjYw", "url": "https://github.com/trinodb/trino/pull/5043#pullrequestreview-485115260", "createdAt": "2020-09-09T15:13:11Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NjM3OTEx", "url": "https://github.com/trinodb/trino/pull/5043#pullrequestreview-486637911", "createdAt": "2020-09-11T09:10:19Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOToxMDoxOVrOHQVVxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOToxNDowN1rOHQVk6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg4ODkwMA==", "bodyText": "or !isBlocked.isDone() ?", "url": "https://github.com/trinodb/trino/pull/5043#discussion_r486888900", "createdAt": "2020-09-11T09:10:19Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/LocalDynamicFiltersCollector.java", "diffHunk": "@@ -154,6 +154,12 @@ public synchronized boolean isComplete()\n             return futuresLeft == 0;\n         }\n \n+        @Override\n+        public synchronized boolean isAwaitable()\n+        {\n+            return futuresLeft > 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg5MDQwMg==", "bodyText": "Grammar wise it could be phrased as\nReturns a future, which ...", "url": "https://github.com/trinodb/trino/pull/5043#discussion_r486890402", "createdAt": "2020-09-11T09:11:42Z", "author": {"login": "findepi"}, "path": "presto-spi/src/main/java/io/prestosql/spi/connector/DynamicFilter.java", "diffHunk": "@@ -43,7 +49,9 @@ public boolean isComplete()\n     };\n \n     /**\n-     * Block until dynamic filter is narrowed down.\n+     * Returned future blocks until dynamic filter is narrowed down. Future\n+     * completes immediately if filter cannot be narrowed down more or filter\n+     * cannot be waited for (consult result of {@link DynamicFilter#isAwaitable()} method).", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg5MjE2Mw==", "bodyText": "why not just !splitProduced.get() ?", "url": "https://github.com/trinodb/trino/pull/5043#discussion_r486892163", "createdAt": "2020-09-11T09:13:31Z", "author": {"login": "findepi"}, "path": "presto-tests/src/test/java/io/prestosql/execution/TestLazyCoordinatorDynamicFiltering.java", "diffHunk": "@@ -211,7 +211,7 @@ public void close()\n                         @Override\n                         public boolean isFinished()\n                         {\n-                            if (!dynamicFilter.isComplete() || !splitProduced.get()) {\n+                            if (dynamicFilter.isAwaitable() || !splitProduced.get()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg5Mjc3OQ==", "bodyText": "nit: why not fmt this just like isComplete above?", "url": "https://github.com/trinodb/trino/pull/5043#discussion_r486892779", "createdAt": "2020-09-11T09:14:07Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/server/DynamicFilterService.java", "diffHunk": "@@ -227,6 +227,12 @@ public boolean isComplete()\n                         .allMatch(context.getDynamicFilterSummaries()::containsKey);\n             }\n \n+            @Override\n+            public boolean isAwaitable()\n+            {\n+                return lazyDynamicFilterFutures.stream().anyMatch(future -> !future.isDone());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2bba56a5baf8724c67ad8f23289418547358451", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/c2bba56a5baf8724c67ad8f23289418547358451", "committedDate": "2020-09-11T09:50:26Z", "message": "Add DynamicFilter#isAwaitable method\n\nDynamicFilter#isAwaitable method can be used together with\nDynamicFilter#isBlocked to wait for narrowed dynamic filters.\nSome dynamic filters cannot be waited for (e.g for replicated joins).\nTherefore existing DynamicFilter#isComplete method cannot be used\nto determine if one can still wait for dynamic filter to be narrowed\n(isComplete could return false while isBlocked would return completed\nfuture immediatelly)."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "c2bba56a5baf8724c67ad8f23289418547358451", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/c2bba56a5baf8724c67ad8f23289418547358451", "committedDate": "2020-09-11T09:50:26Z", "message": "Add DynamicFilter#isAwaitable method\n\nDynamicFilter#isAwaitable method can be used together with\nDynamicFilter#isBlocked to wait for narrowed dynamic filters.\nSome dynamic filters cannot be waited for (e.g for replicated joins).\nTherefore existing DynamicFilter#isComplete method cannot be used\nto determine if one can still wait for dynamic filter to be narrowed\n(isComplete could return false while isBlocked would return completed\nfuture immediatelly)."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3822, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}