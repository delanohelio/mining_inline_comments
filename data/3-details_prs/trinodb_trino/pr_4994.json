{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0MzY4Mzgy", "number": 4994, "title": "Fix IndexOutOfBounds non-nested-loop joins with no columns on build side", "bodyText": "Queries that involve an outer join or are pure non-equi joins get planned\nas regular lookup joins. If the right side doesn't contain any columns (i.e.,\ndue to column pruning), calls to PagesIndex.compact() will fail with\nArrayIndexOutOfBounds -- this can happen if there's not enough local memory\navailable and the operator attempts to optimize the organization of the\nPagesIndex.", "createdAt": "2020-08-27T00:06:05Z", "url": "https://github.com/trinodb/trino/pull/4994", "merged": true, "mergeCommit": {"oid": "e7199dba8e2551cd6d70cae891c8e2e14200a678"}, "closed": true, "closedAt": "2020-09-01T23:35:59Z", "author": {"login": "martint"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdC079FAH2gAyNDc0MzY4MzgyOjYxOTdkYjQxNzY3MTg4MjBiOWM4YWIwMzgwMjY4NDE4YjcwZmEyZjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEvYA5ABqjM3MTcxMTg0OTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6197db4176718820b9c8ab0380268418b70fa2f9", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/6197db4176718820b9c8ab0380268418b70fa2f9", "committedDate": "2020-08-27T00:05:38Z", "message": "Fix IndexOutOfBounds non-nested-loop joins with no columns on build side\n\nQueries that involve an outer join or are pure non-equi joins get planned\nas regular lookup joins. If the right side doesn't contain any columns (i.e.,\ndue to column pruning), calls to PagesIndex.compact() will fail with\nArrayIndexOutOfBounds -- this can happen if there's not enough local memory\navailable and the operator attempts to optimize the organization of the\nPagesIndex."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2MTc1ODE4", "url": "https://github.com/trinodb/trino/pull/4994#pullrequestreview-476175818", "createdAt": "2020-08-27T00:07:29Z", "commit": {"oid": "6197db4176718820b9c8ab0380268418b70fa2f9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MTE0MDYx", "url": "https://github.com/trinodb/trino/pull/4994#pullrequestreview-477114061", "createdAt": "2020-08-27T22:00:24Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMjowMDoyNFrOHIivdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMjowMDoyNFrOHIivdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcxOTg2MA==", "bodyText": "Seems like a shame to add this memory overhead in all cases when in practice it's only necessary for empty channels. Maybe we only use this when channels.length == 0? It'll definitely make the code uglier but it seems maybe worthwhile to avoid the extra memory penalty when it can be avoided.", "url": "https://github.com/trinodb/trino/pull/4994#discussion_r478719860", "createdAt": "2020-08-27T22:00:24Z", "author": {"login": "pettyjamesm"}, "path": "presto-main/src/main/java/io/prestosql/operator/PagesIndex.java", "diffHunk": "@@ -84,8 +85,10 @@\n     private final List<Type> types;\n     private final LongArrayList valueAddresses;\n     private final ObjectArrayList<Block>[] channels;\n+    private final IntArrayList positionCounts;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MjMzNzE4", "url": "https://github.com/trinodb/trino/pull/4994#pullrequestreview-478233718", "createdAt": "2020-08-30T20:57:51Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NDU1ODY4", "url": "https://github.com/trinodb/trino/pull/4994#pullrequestreview-478455868", "createdAt": "2020-08-31T09:27:14Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwOToyNzoxNFrOHJxTTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwOToyNzoxNFrOHJxTTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAwNjk4OA==", "bodyText": "please update io.prestosql.operator.PagesIndex#calculateEstimatedSize method too", "url": "https://github.com/trinodb/trino/pull/4994#discussion_r480006988", "createdAt": "2020-08-31T09:27:14Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/operator/PagesIndex.java", "diffHunk": "@@ -112,6 +115,8 @@ private PagesIndex(\n             channels[i] = ObjectArrayList.wrap(new Block[1024], 0);\n         }\n \n+        positionCounts = new IntArrayList(1024);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c2cb15ff0d75094bb49ec5a0358e2e39f28e0f1", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/4c2cb15ff0d75094bb49ec5a0358e2e39f28e0f1", "committedDate": "2020-09-01T22:44:22Z", "message": "Fix IndexOutOfBounds when spilling lookup join with no build-side columns\n\nThis can happen for non-nested-loop joins (outer joins or non-equi joins)\nwith no columns on the build side due to column pruning when the system\ndecides to spill the PagesIndex"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "4c2cb15ff0d75094bb49ec5a0358e2e39f28e0f1", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/4c2cb15ff0d75094bb49ec5a0358e2e39f28e0f1", "committedDate": "2020-09-01T22:44:22Z", "message": "Fix IndexOutOfBounds when spilling lookup join with no build-side columns\n\nThis can happen for non-nested-loop joins (outer joins or non-equi joins)\nwith no columns on the build side due to column pruning when the system\ndecides to spill the PagesIndex"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4210, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}