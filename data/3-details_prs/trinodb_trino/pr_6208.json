{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNjI3NzIz", "number": 6208, "title": "Convert array elements to proper representation", "bodyText": "Fixes #6048 and fixes #6251\nExtracted from #307", "createdAt": "2020-12-04T16:05:19Z", "url": "https://github.com/trinodb/trino/pull/6208", "merged": true, "mergeCommit": {"oid": "fb8bf99066560f59e11663939b025180079ee4a0"}, "closed": true, "closedAt": "2020-12-08T12:40:40Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdi-zM5AH2gAyNTMyNjI3NzIzOmI2M2ZiM2NiYWExMjA1Nzk1NTdjOTQyNGY0MmU1OWQ3ZWY1N2E4NTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdj5bhVAFqTU0NjM5ODAxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b63fb3cbaa120579557c9424f42e59d7ef57a851", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/b63fb3cbaa120579557c9424f42e59d7ef57a851", "committedDate": "2020-12-04T21:40:42Z", "message": "Use literal expected values in TestJdbcCompatibility\n\nRemove `roundedTimestamp` used for computing expected values, replacing\nit with explicit expected values."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c8146cee45a49cf2cdb59bf66d61a4feebb5d2e", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/1c8146cee45a49cf2cdb59bf66d61a4feebb5d2e", "committedDate": "2020-12-04T21:41:54Z", "message": "Fix typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d871a60d959bbdd12259dcb584f87b6f0977ae6c", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/d871a60d959bbdd12259dcb584f87b6f0977ae6c", "committedDate": "2020-12-04T21:41:54Z", "message": "Remove excessive use of String.valueOf in ResultSet\n\nIn all changed places the type of the value is known, so its client\nrepresentation is known too."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "27dc861d21e7a47a58f16509dd7f76afd54bb368", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/27dc861d21e7a47a58f16509dd7f76afd54bb368", "committedDate": "2020-12-05T07:49:36Z", "message": "Fix TIME/TIMESTAMP TZ column declaration for result set\n\nThis makes the `ResultSetMetaData` metadata consistent with\n`java.sql.DatabaseMetaData#getColumns` (as implemented in\n`io.prestosql.connector.system.jdbc.ColumnJdbcTable#jdbcDataType`)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3261dfeb6711d6ee7d0dde76a764bec683d7fc3", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/f3261dfeb6711d6ee7d0dde76a764bec683d7fc3", "committedDate": "2020-12-05T07:49:36Z", "message": "Add test for SQL Array element type introspection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8193862a1e5d9bce7d18b8425dd30cb862d10ad", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/d8193862a1e5d9bce7d18b8425dd30cb862d10ad", "committedDate": "2020-12-05T07:49:36Z", "message": "Use AssertJ for comparing arrays\n\nTestNG's `Assert.assertEquals` behavior to print array toString when\nvalues do not match is not useful."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98b72c47aadb8f5d46d4b7ef8cfdaaed3f024136", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/98b72c47aadb8f5d46d4b7ef8cfdaaed3f024136", "committedDate": "2020-12-05T07:49:36Z", "message": "Define type conversions in terms of source type name\n\nKeying conversions by source class is not sufficient. Different SQL\ntypes having same client representation (e.g. `String`) need to be\nhandled separately."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0741dbb04115bf11507244c9271e1f2204009c37", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/0741dbb04115bf11507244c9271e1f2204009c37", "committedDate": "2020-12-05T07:49:36Z", "message": "Add runtime type checks when invoking type conversion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65936e719fd40adfc8342a3e7f0e94d8e97da742", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/65936e719fd40adfc8342a3e7f0e94d8e97da742", "committedDate": "2020-12-05T07:49:36Z", "message": "Unify ResultSet.getObject logic with type conversions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0453aa9beb6fbcf0a2ba4c9b7375655bc4e9d07", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/f0453aa9beb6fbcf0a2ba4c9b7375655bc4e9d07", "committedDate": "2020-12-05T07:49:36Z", "message": "Allow SQLException within convertFromClientRepresentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89efdab6cfcb37eba3ed72ccae332cc50f9d1e5d", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/89efdab6cfcb37eba3ed72ccae332cc50f9d1e5d", "committedDate": "2020-12-05T07:49:36Z", "message": "Convert array elements to proper representation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9225541aef7866cb4427352e5b5456e789df55c2", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/9225541aef7866cb4427352e5b5456e789df55c2", "committedDate": "2020-12-05T07:49:37Z", "message": "Fix product test README examples"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "9225541aef7866cb4427352e5b5456e789df55c2", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/9225541aef7866cb4427352e5b5456e789df55c2", "committedDate": "2020-12-05T07:49:37Z", "message": "Fix product test README examples"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MzU4NzIz", "url": "https://github.com/trinodb/trino/pull/6208#pullrequestreview-546358723", "createdAt": "2020-12-07T17:12:41Z", "commit": {"oid": "b63fb3cbaa120579557c9424f42e59d7ef57a851"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzoxMjo0MVrOIAxRlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzoxMjo0MVrOIAxRlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY3ODIyOQ==", "bodyText": "Use literal expected values in TestJdbcCompatibility LGTM", "url": "https://github.com/trinodb/trino/pull/6208#discussion_r537678229", "createdAt": "2020-12-07T17:12:41Z", "author": {"login": "losipiuk"}, "path": "presto-test-jdbc-compatibility-old-driver/src/test/java/io/prestosql/TestJdbcCompatibility.java", "diffHunk": "@@ -146,27 +139,53 @@ public void testSelectTimestampWithTimeZone()\n             throw new SkipException(\"This version reports PARAMETRIC_DATETIME client capability but TIMESTAMP WITH TIME ZONE is not supported\");\n         }\n \n-        String query = format(\"SELECT timestamp '2012-10-31 01:00 %s'\", TESTED_TZ);\n+        String query = \"SELECT timestamp '2012-10-31 01:00 Australia/Eucla'\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63fb3cbaa120579557c9424f42e59d7ef57a851"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MzYzODQ0", "url": "https://github.com/trinodb/trino/pull/6208#pullrequestreview-546363844", "createdAt": "2020-12-07T17:18:26Z", "commit": {"oid": "27dc861d21e7a47a58f16509dd7f76afd54bb368"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzoxODoyNlrOIAxiTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzoxODoyNlrOIAxiTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY4MjUwOA==", "bodyText": "Fix TIME/TIMESTAMP TZ column declaration for result set is backward incompatible. Do we care?", "url": "https://github.com/trinodb/trino/pull/6208#discussion_r537682508", "createdAt": "2020-12-07T17:18:26Z", "author": {"login": "losipiuk"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/AbstractPrestoResultSet.java", "diffHunk": "@@ -562,9 +562,11 @@ public Object getObject(int columnIndex)\n                 // TODO (https://github.com/prestosql/presto/issues/6048) move to convertFromClientRepresentation\n                 return getDate(columnIndex);\n             case Types.TIME:\n+            case Types.TIME_WITH_TIMEZONE:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27dc861d21e7a47a58f16509dd7f76afd54bb368"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MzY5MzU2", "url": "https://github.com/trinodb/trino/pull/6208#pullrequestreview-546369356", "createdAt": "2020-12-07T17:24:45Z", "commit": {"oid": "d8193862a1e5d9bce7d18b8425dd30cb862d10ad"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzoyNDo0NlrOIAx1Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzoyNDo0NlrOIAx1Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY4NzMwMg==", "bodyText": "can you mechanically change other assertEquals to assertThat.equalsTo?\nA thought - if we want such migration maybe we should create a series of good-first-issue issues to migrate individual modules.", "url": "https://github.com/trinodb/trino/pull/6208#discussion_r537687302", "createdAt": "2020-12-07T17:24:46Z", "author": {"login": "losipiuk"}, "path": "presto-jdbc/src/test/java/io/prestosql/jdbc/BaseTestJdbcResultSet.java", "diffHunk": "@@ -632,12 +633,12 @@ public void testArray()\n         try (ConnectedStatement connectedStatement = newStatement()) {\n             checkRepresentation(connectedStatement.getStatement(), \"ARRAY[1, 2]\", Types.ARRAY, (rs, column) -> {\n                 Array array = rs.getArray(column);\n-                assertEquals(array.getArray(), new int[] {1, 2});\n+                assertThat(array.getArray()).isEqualTo(new int[] {1, 2});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8193862a1e5d9bce7d18b8425dd30cb862d10ad"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MzgyMjky", "url": "https://github.com/trinodb/trino/pull/6208#pullrequestreview-546382292", "createdAt": "2020-12-07T17:40:21Z", "commit": {"oid": "65936e719fd40adfc8342a3e7f0e94d8e97da742"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzo0MDoyMVrOIAyf2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzo0MDoyMVrOIAyf2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY5ODI2NA==", "bodyText": "can you replace resultTimeZone field with constant and reference the constant also here?", "url": "https://github.com/trinodb/trino/pull/6208#discussion_r537698264", "createdAt": "2020-12-07T17:40:21Z", "author": {"login": "losipiuk"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/AbstractPrestoResultSet.java", "diffHunk": "@@ -125,10 +125,36 @@\n     // Since January 1, 1900 UTC is still December 31, 1899 in other zones, we are adding a 1 year margin.\n     private static final long START_OF_MODERN_ERA_SECONDS = java.time.LocalDate.of(1901, 1, 1).toEpochDay() * SECONDS_PER_DAY;\n \n-    private static final TypeConversions TYPE_CONVERSIONS =\n+    @VisibleForTesting\n+    static final Map<String, Class<?>> DEFAULT_OBJECT_REPRESENTATION = ImmutableMap.<String, Class<?>>builder()\n+            .put(\"decimal\", BigDecimal.class)\n+            .put(\"date\", java.sql.Date.class)\n+            .put(\"time\", java.sql.Time.class)\n+            .put(\"time with time zone\", java.sql.Time.class)\n+            .put(\"timestamp\", java.sql.Timestamp.class)\n+            .put(\"timestamp with time zone\", java.sql.Timestamp.class)\n+            .put(\"interval year to month\", PrestoIntervalYearMonth.class)\n+            .put(\"interval day to second\", PrestoIntervalDayTime.class)\n+            .put(\"map\", Map.class)\n+            .put(\"row\", Row.class)\n+            .build();\n+\n+    @VisibleForTesting\n+    static final TypeConversions TYPE_CONVERSIONS =\n             TypeConversions.builder()\n-                    .add(\"array\", PrestoArray.class, List.class, array -> asList((Object[]) array.getArray()))\n-                    .add(\"row\", Row.class, Map.class, row -> {\n+                    .add(\"decimal\", String.class, BigDecimal.class, AbstractPrestoResultSet::parseBigDecimal)\n+                    .add(\"date\", String.class, Date.class, string -> parseDate(string, DateTimeZone.forID(ZoneId.systemDefault().getId())))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65936e719fd40adfc8342a3e7f0e94d8e97da742"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MzgyOTQy", "url": "https://github.com/trinodb/trino/pull/6208#pullrequestreview-546382942", "createdAt": "2020-12-07T17:41:08Z", "commit": {"oid": "65936e719fd40adfc8342a3e7f0e94d8e97da742"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzo0MTowOFrOIAyiHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzo0MTowOFrOIAyiHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY5ODg0NA==", "bodyText": "same here", "url": "https://github.com/trinodb/trino/pull/6208#discussion_r537698844", "createdAt": "2020-12-07T17:41:08Z", "author": {"login": "losipiuk"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/AbstractPrestoResultSet.java", "diffHunk": "@@ -125,10 +125,36 @@\n     // Since January 1, 1900 UTC is still December 31, 1899 in other zones, we are adding a 1 year margin.\n     private static final long START_OF_MODERN_ERA_SECONDS = java.time.LocalDate.of(1901, 1, 1).toEpochDay() * SECONDS_PER_DAY;\n \n-    private static final TypeConversions TYPE_CONVERSIONS =\n+    @VisibleForTesting\n+    static final Map<String, Class<?>> DEFAULT_OBJECT_REPRESENTATION = ImmutableMap.<String, Class<?>>builder()\n+            .put(\"decimal\", BigDecimal.class)\n+            .put(\"date\", java.sql.Date.class)\n+            .put(\"time\", java.sql.Time.class)\n+            .put(\"time with time zone\", java.sql.Time.class)\n+            .put(\"timestamp\", java.sql.Timestamp.class)\n+            .put(\"timestamp with time zone\", java.sql.Timestamp.class)\n+            .put(\"interval year to month\", PrestoIntervalYearMonth.class)\n+            .put(\"interval day to second\", PrestoIntervalDayTime.class)\n+            .put(\"map\", Map.class)\n+            .put(\"row\", Row.class)\n+            .build();\n+\n+    @VisibleForTesting\n+    static final TypeConversions TYPE_CONVERSIONS =\n             TypeConversions.builder()\n-                    .add(\"array\", PrestoArray.class, List.class, array -> asList((Object[]) array.getArray()))\n-                    .add(\"row\", Row.class, Map.class, row -> {\n+                    .add(\"decimal\", String.class, BigDecimal.class, AbstractPrestoResultSet::parseBigDecimal)\n+                    .add(\"date\", String.class, Date.class, string -> parseDate(string, DateTimeZone.forID(ZoneId.systemDefault().getId())))\n+                    .add(\"time\", String.class, Time.class, string -> parseTime(string, ZoneId.systemDefault()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65936e719fd40adfc8342a3e7f0e94d8e97da742"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MzgzMTgw", "url": "https://github.com/trinodb/trino/pull/6208#pullrequestreview-546383180", "createdAt": "2020-12-07T17:41:23Z", "commit": {"oid": "65936e719fd40adfc8342a3e7f0e94d8e97da742"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzo0MToyNFrOIAyi0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzo0MToyNFrOIAyi0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY5OTAyNg==", "bodyText": "and here", "url": "https://github.com/trinodb/trino/pull/6208#discussion_r537699026", "createdAt": "2020-12-07T17:41:24Z", "author": {"login": "losipiuk"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/AbstractPrestoResultSet.java", "diffHunk": "@@ -125,10 +125,36 @@\n     // Since January 1, 1900 UTC is still December 31, 1899 in other zones, we are adding a 1 year margin.\n     private static final long START_OF_MODERN_ERA_SECONDS = java.time.LocalDate.of(1901, 1, 1).toEpochDay() * SECONDS_PER_DAY;\n \n-    private static final TypeConversions TYPE_CONVERSIONS =\n+    @VisibleForTesting\n+    static final Map<String, Class<?>> DEFAULT_OBJECT_REPRESENTATION = ImmutableMap.<String, Class<?>>builder()\n+            .put(\"decimal\", BigDecimal.class)\n+            .put(\"date\", java.sql.Date.class)\n+            .put(\"time\", java.sql.Time.class)\n+            .put(\"time with time zone\", java.sql.Time.class)\n+            .put(\"timestamp\", java.sql.Timestamp.class)\n+            .put(\"timestamp with time zone\", java.sql.Timestamp.class)\n+            .put(\"interval year to month\", PrestoIntervalYearMonth.class)\n+            .put(\"interval day to second\", PrestoIntervalDayTime.class)\n+            .put(\"map\", Map.class)\n+            .put(\"row\", Row.class)\n+            .build();\n+\n+    @VisibleForTesting\n+    static final TypeConversions TYPE_CONVERSIONS =\n             TypeConversions.builder()\n-                    .add(\"array\", PrestoArray.class, List.class, array -> asList((Object[]) array.getArray()))\n-                    .add(\"row\", Row.class, Map.class, row -> {\n+                    .add(\"decimal\", String.class, BigDecimal.class, AbstractPrestoResultSet::parseBigDecimal)\n+                    .add(\"date\", String.class, Date.class, string -> parseDate(string, DateTimeZone.forID(ZoneId.systemDefault().getId())))\n+                    .add(\"time\", String.class, Time.class, string -> parseTime(string, ZoneId.systemDefault()))\n+                    .add(\"time with time zone\", String.class, Time.class, AbstractPrestoResultSet::parseTimeWithTimeZone)\n+                    .add(\"timestamp\", String.class, Timestamp.class, string -> parseTimestamp(string, ZoneId.systemDefault()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65936e719fd40adfc8342a3e7f0e94d8e97da742"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MzkyMzcy", "url": "https://github.com/trinodb/trino/pull/6208#pullrequestreview-546392372", "createdAt": "2020-12-07T17:52:29Z", "commit": {"oid": "f0453aa9beb6fbcf0a2ba4c9b7375655bc4e9d07"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzo1MjoyOVrOIAzB0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzo1MjoyOVrOIAzB0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcwNjk2Mg==", "bodyText": "nit: extract", "url": "https://github.com/trinodb/trino/pull/6208#discussion_r537706962", "createdAt": "2020-12-07T17:52:29Z", "author": {"login": "losipiuk"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/AbstractPrestoResultSet.java", "diffHunk": "@@ -610,21 +612,22 @@ private static Object convertFromClientRepresentation(ClientTypeSignature column\n         switch (columnType.getRawType()) {\n             case \"array\": {\n                 ClientTypeSignature elementType = getOnlyElement(columnType.getArgumentsAsTypeSignatures());\n-                return ((List<?>) value).stream()\n-                        .map(element -> convertFromClientRepresentation(elementType, element))\n-                        .collect(toList());\n+                List<Object> converted = Lists.newArrayListWithExpectedSize(((List<?>) value).size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0453aa9beb6fbcf0a2ba4c9b7375655bc4e9d07"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2Mzk1NjE2", "url": "https://github.com/trinodb/trino/pull/6208#pullrequestreview-546395616", "createdAt": "2020-12-07T17:56:27Z", "commit": {"oid": "89efdab6cfcb37eba3ed72ccae332cc50f9d1e5d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzo1NjoyOFrOIAzM2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzo1NjoyOFrOIAzM2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcwOTc4NQ==", "bodyText": "is the \"else\" code path needed only for \"plugin types\" ?", "url": "https://github.com/trinodb/trino/pull/6208#discussion_r537709785", "createdAt": "2020-12-07T17:56:28Z", "author": {"login": "losipiuk"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/AbstractPrestoResultSet.java", "diffHunk": "@@ -649,7 +649,10 @@ private static Object convertFromClientRepresentation(ClientTypeSignature column\n             }\n         }\n \n-        // TODO (https://github.com/prestosql/presto/issues/6048) add conversions for decimal, date, time, timestamp, interval\n+        Class<?> defaultRepresentation = DEFAULT_OBJECT_REPRESENTATION.get(columnType.getRawType());\n+        if (defaultRepresentation != null) {\n+            return TYPE_CONVERSIONS.convert(columnType, value, defaultRepresentation);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89efdab6cfcb37eba3ed72ccae332cc50f9d1e5d"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2Mzk4MDE4", "url": "https://github.com/trinodb/trino/pull/6208#pullrequestreview-546398018", "createdAt": "2020-12-07T17:59:14Z", "commit": {"oid": "9225541aef7866cb4427352e5b5456e789df55c2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2039, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}