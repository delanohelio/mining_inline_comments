{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0Mzk1NTUw", "number": 4725, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDo1OToxNlrOEYO_NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDo1OTozOFrOEYO_pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODQ2ODM3OnYy", "diffSide": "RIGHT", "path": "presto-pinot/src/main/java/io/prestosql/pinot/PinotSegmentPageSource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDo1OToxNlrOHAdemA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDo1OToxNlrOHAdemA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI0NTAxNg==", "bodyText": "Why .closeEntry()?", "url": "https://github.com/trinodb/trino/pull/4725#discussion_r470245016", "createdAt": "2020-08-13T20:59:16Z", "author": {"login": "martint"}, "path": "presto-pinot/src/main/java/io/prestosql/pinot/PinotSegmentPageSource.java", "diffHunk": "@@ -366,8 +371,8 @@ Block getArrayBlock(int rowIndex, int columnIndex)\n             case FLOAT_ARRAY:\n                 float[] floatArray = currentDataTable.getDataTable().getFloatArray(rowIndex, columnIndex);\n                 blockBuilder = elementType.createBlockBuilder(null, floatArray.length);\n-                for (double element : floatArray) {\n-                    elementType.writeDouble(blockBuilder, element);\n+                for (float element : floatArray) {\n+                    blockBuilder.writeInt(floatToIntBits(element)).closeEntry();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODQ2OTQ4OnYy", "diffSide": "RIGHT", "path": "presto-pinot/src/main/java/io/prestosql/pinot/decoders/RealDecoder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDo1OTozOFrOHAdfWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDo1OTozOFrOHAdfWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI0NTIwOA==", "bodyText": "Why .closeEntry()", "url": "https://github.com/trinodb/trino/pull/4725#discussion_r470245208", "createdAt": "2020-08-13T20:59:38Z", "author": {"login": "martint"}, "path": "presto-pinot/src/main/java/io/prestosql/pinot/decoders/RealDecoder.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.pinot.decoders;\n+\n+import io.prestosql.spi.block.BlockBuilder;\n+\n+import java.util.function.Supplier;\n+\n+import static java.lang.Float.floatToIntBits;\n+\n+public class RealDecoder\n+        implements Decoder\n+{\n+    @Override\n+    public void decode(Supplier<Object> getter, BlockBuilder output)\n+    {\n+        output.writeInt(floatToIntBits(((Number) getter.get()).floatValue())).closeEntry();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3622, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}