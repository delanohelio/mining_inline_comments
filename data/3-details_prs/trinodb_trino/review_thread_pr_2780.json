{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMDIxNTI5", "number": 2780, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNzo0MTozOFrODei58Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMjoxNTo0MFrODfBvBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzU1NzYxOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/installation/jdbc.rst", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNzo0MTozOFrOFnvVqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxODo1ODoyNlrOFnxwGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIxNDM3Ng==", "bodyText": "A list of key-value pairs defining catalog and authorization role to use for the catalog. For example,  the configurationcatalog1:roleA;catalog2:roleB causes Presto to use roleA to connect to catalog1 and roleB to connect to catalog2.", "url": "https://github.com/trinodb/trino/pull/2780#discussion_r377214376", "createdAt": "2020-02-10T17:41:38Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/installation/jdbc.rst", "diffHunk": "@@ -109,6 +109,24 @@ Name                                   Description\n ``KerberosKeytabPath``                 Kerberos keytab file.\n ``KerberosCredentialCachePath``        Kerberos credential cache.\n ``extraCredentials``                   Extra credentials for connecting to external services. The\n-                                       extraCredentials is a list of key-value pairs. Example:\n+                                       ``extraCredentials`` is a list of key-value pairs. Example:\n                                        ``foo:bar;abc:xyz`` will create credentials ``abc=xyz`` and ``foo=bar``\n+``roles``                              Authorization roles that will be set for catalogs. The", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI0Mzk3Mg==", "bodyText": "I like the original phrasing better, since it first tells you what it is, rather than starting off with the exact format.\nAuthorization roles to use for catalogs, specified as a list of key-value pairs for the\ncatalog and role. For example, ``catalog1:roleA;catalog2:roleB`` will set ``roleA``\nfor ``catalog1`` and ``roleB`` for ``catalog2``.", "url": "https://github.com/trinodb/trino/pull/2780#discussion_r377243972", "createdAt": "2020-02-10T18:39:51Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/installation/jdbc.rst", "diffHunk": "@@ -109,6 +109,24 @@ Name                                   Description\n ``KerberosKeytabPath``                 Kerberos keytab file.\n ``KerberosCredentialCachePath``        Kerberos credential cache.\n ``extraCredentials``                   Extra credentials for connecting to external services. The\n-                                       extraCredentials is a list of key-value pairs. Example:\n+                                       ``extraCredentials`` is a list of key-value pairs. Example:\n                                        ``foo:bar;abc:xyz`` will create credentials ``abc=xyz`` and ``foo=bar``\n+``roles``                              Authorization roles that will be set for catalogs. The", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIxNDM3Ng=="}, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI1MzkxMg==", "bodyText": "Lets not use future tense at least please.", "url": "https://github.com/trinodb/trino/pull/2780#discussion_r377253912", "createdAt": "2020-02-10T18:58:26Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/installation/jdbc.rst", "diffHunk": "@@ -109,6 +109,24 @@ Name                                   Description\n ``KerberosKeytabPath``                 Kerberos keytab file.\n ``KerberosCredentialCachePath``        Kerberos credential cache.\n ``extraCredentials``                   Extra credentials for connecting to external services. The\n-                                       extraCredentials is a list of key-value pairs. Example:\n+                                       ``extraCredentials`` is a list of key-value pairs. Example:\n                                        ``foo:bar;abc:xyz`` will create credentials ``abc=xyz`` and ``foo=bar``\n+``roles``                              Authorization roles that will be set for catalogs. The", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIxNDM3Ng=="}, "originalCommit": null, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzU4MjA5OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/installation/jdbc.rst", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNzo0ODozM1rOFnvkhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxODo1OTowOFrOFnxxmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIxODE4MQ==", "bodyText": "A list of key-value pairs to set session properties globally and specifically for catalogs. The format for global properties is propertyname:value. Catalog-specific properties use the catalog name as a prefix catalog.propertyname:value. Multiple properties are separated by ;.", "url": "https://github.com/trinodb/trino/pull/2780#discussion_r377218181", "createdAt": "2020-02-10T17:48:33Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/installation/jdbc.rst", "diffHunk": "@@ -109,6 +109,24 @@ Name                                   Description\n ``KerberosKeytabPath``                 Kerberos keytab file.\n ``KerberosCredentialCachePath``        Kerberos credential cache.\n ``extraCredentials``                   Extra credentials for connecting to external services. The\n-                                       extraCredentials is a list of key-value pairs. Example:\n+                                       ``extraCredentials`` is a list of key-value pairs. Example:\n                                        ``foo:bar;abc:xyz`` will create credentials ``abc=xyz`` and ``foo=bar``\n+``roles``                              Authorization roles that will be set for catalogs. The\n+                                       ``roles`` is a list of key-value pairs, where key represents a reference to \n+                                       Presto catalog and value represents role to be set. Example:\n+                                       ``catalog1:none;catalog2:all;catalog3:role`` will set:\n+\n+                                       - ``none`` role in ``catalog1``\n+                                       - ``all`` role in ``catalog2``\n+                                       - ``role`` role in ``catalog1``\n+\n+``sessionProperties``                  Session properties that will be set globally and for catalogs. The", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI0NjU0Nw==", "bodyText": "Similarly, I like the original better.\nSession properties to set for the system and for catalogs, specified as a list of key-value pairs.\nFor example, ``abc:xyz;example.foo:bar`` will set the system property ``abc`` to the value ``xyz``\nand the ``foo`` property for catalog ``example`` to the value ``bar``.", "url": "https://github.com/trinodb/trino/pull/2780#discussion_r377246547", "createdAt": "2020-02-10T18:44:50Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/installation/jdbc.rst", "diffHunk": "@@ -109,6 +109,24 @@ Name                                   Description\n ``KerberosKeytabPath``                 Kerberos keytab file.\n ``KerberosCredentialCachePath``        Kerberos credential cache.\n ``extraCredentials``                   Extra credentials for connecting to external services. The\n-                                       extraCredentials is a list of key-value pairs. Example:\n+                                       ``extraCredentials`` is a list of key-value pairs. Example:\n                                        ``foo:bar;abc:xyz`` will create credentials ``abc=xyz`` and ``foo=bar``\n+``roles``                              Authorization roles that will be set for catalogs. The\n+                                       ``roles`` is a list of key-value pairs, where key represents a reference to \n+                                       Presto catalog and value represents role to be set. Example:\n+                                       ``catalog1:none;catalog2:all;catalog3:role`` will set:\n+\n+                                       - ``none`` role in ``catalog1``\n+                                       - ``all`` role in ``catalog2``\n+                                       - ``role`` role in ``catalog1``\n+\n+``sessionProperties``                  Session properties that will be set globally and for catalogs. The", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIxODE4MQ=="}, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI1NDI5Nw==", "bodyText": "again .. no future tense. Otherwise this is also fine by me.", "url": "https://github.com/trinodb/trino/pull/2780#discussion_r377254297", "createdAt": "2020-02-10T18:59:08Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/installation/jdbc.rst", "diffHunk": "@@ -109,6 +109,24 @@ Name                                   Description\n ``KerberosKeytabPath``                 Kerberos keytab file.\n ``KerberosCredentialCachePath``        Kerberos credential cache.\n ``extraCredentials``                   Extra credentials for connecting to external services. The\n-                                       extraCredentials is a list of key-value pairs. Example:\n+                                       ``extraCredentials`` is a list of key-value pairs. Example:\n                                        ``foo:bar;abc:xyz`` will create credentials ``abc=xyz`` and ``foo=bar``\n+``roles``                              Authorization roles that will be set for catalogs. The\n+                                       ``roles`` is a list of key-value pairs, where key represents a reference to \n+                                       Presto catalog and value represents role to be set. Example:\n+                                       ``catalog1:none;catalog2:all;catalog3:role`` will set:\n+\n+                                       - ``none`` role in ``catalog1``\n+                                       - ``all`` role in ``catalog2``\n+                                       - ``role`` role in ``catalog1``\n+\n+``sessionProperties``                  Session properties that will be set globally and for catalogs. The", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIxODE4MQ=="}, "originalCommit": null, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzczMTk4OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/installation/jdbc.rst", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxODozNjo0OVrOFnxDSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxODozNjo0OVrOFnxDSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI0MjQ0MQ==", "bodyText": "Extra credentials for connecting to external services, specified as a list of key-value pairs.\nFor example, ``foo:bar;abc:xyz`` will create the credential named ``abc`` with value ``xyz``\nand the credential named ``foo`` with value ``bar``.", "url": "https://github.com/trinodb/trino/pull/2780#discussion_r377242441", "createdAt": "2020-02-10T18:36:49Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/installation/jdbc.rst", "diffHunk": "@@ -109,6 +109,24 @@ Name                                   Description\n ``KerberosKeytabPath``                 Kerberos keytab file.\n ``KerberosCredentialCachePath``        Kerberos credential cache.\n ``extraCredentials``                   Extra credentials for connecting to external services. The", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzODYwODcxOnYy", "diffSide": "RIGHT", "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/ConnectionProperties.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMjoxNTo0MFrOFofuBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMjoxNTo0MFrOFofuBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAwNzA0NA==", "bodyText": "Maybe change this so that it's consistent with the other one\n\"%s key '%s' contains spaces or is not printable ASCII\"", "url": "https://github.com/trinodb/trino/pull/2780#discussion_r378007044", "createdAt": "2020-02-12T02:15:40Z", "author": {"login": "electrum"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/ConnectionProperties.java", "diffHunk": "@@ -307,23 +307,46 @@ public ExtraCredentials()\n         // E.g., `jdbc:presto://example.net:8080/?extraCredentials=abc:xyz;foo:bar` will create credentials `abc=xyz` and `foo=bar`\n         public static Map<String, String> parseExtraCredentials(String extraCredentialString)\n         {\n-            return Splitter.on(';').splitToList(extraCredentialString).stream()\n-                    .map(ExtraCredentials::parseSingleCredential)\n-                    .collect(toImmutableMap(entry -> entry.get(0), entry -> entry.get(1)));\n+            return new MapPropertyParser(\"extraCredentials\").parse(extraCredentialString);\n+        }\n+    }\n+\n+    private static class MapPropertyParser\n+    {\n+        private static final CharMatcher PRINTABLE_ASCII = CharMatcher.inRange((char) 0x21, (char) 0x7E);\n+        private static final Splitter MAP_ENTRIES_SPLITTER = Splitter.on(';');\n+        private static final Splitter MAP_ENTRY_SPLITTER = Splitter.on(':');\n+\n+        private final String mapName;\n+\n+        private MapPropertyParser(String mapName)\n+        {\n+            this.mapName = requireNonNull(mapName, \"mapName is null\");\n+        }\n+\n+        /**\n+         * Parses map in a form: key1:value1;key2:value2\n+         */\n+        public Map<String, String> parse(String map)\n+        {\n+            return MAP_ENTRIES_SPLITTER.splitToList(map).stream()\n+                    .map(this::parseEntry)\n+                    .collect(toImmutableMap(Map.Entry::getKey, Map.Entry::getValue));\n         }\n \n-        public static List<String> parseSingleCredential(String credential)\n+        private Map.Entry<String, String> parseEntry(String credential)\n         {\n-            List<String> nameValue = Splitter.on(':').limit(2).splitToList(credential);\n-            checkArgument(nameValue.size() == 2, \"Malformed credential: %s\", credential);\n-            String name = nameValue.get(0);\n-            String value = nameValue.get(1);\n-            checkArgument(!name.isEmpty(), \"Credential name is empty\");\n-            checkArgument(!value.isEmpty(), \"Credential value is empty\");\n-\n-            checkArgument(PRINTABLE_ASCII.matchesAllOf(name), \"Credential name contains spaces or is not printable ASCII: %s\", name);\n-            checkArgument(PRINTABLE_ASCII.matchesAllOf(value), \"Credential value contains spaces or is not printable ASCII: %s\", name);\n-            return nameValue;\n+            List<String> keyValue = MAP_ENTRY_SPLITTER.limit(2).splitToList(credential);\n+            checkArgument(keyValue.size() == 2, \"Malformed %s: %s\", mapName, credential);\n+            String key = keyValue.get(0);\n+            String value = keyValue.get(1);\n+            checkArgument(!key.isEmpty(), \"%s key is empty\", mapName);\n+            checkArgument(!value.isEmpty(), \"%s key is empty\", mapName);\n+\n+            checkArgument(PRINTABLE_ASCII.matchesAllOf(key), \"%s key contains spaces or is not printable ASCII: %s\", mapName, key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 74}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 900, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}