{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NTUxOTc0", "number": 3311, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMzozMDowMFrODuJ7KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNjo0NzoxM1rOD88bHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzIzNjg4OnYy", "diffSide": "RIGHT", "path": "presto-cli/src/main/java/io/prestosql/cli/FormatUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMzozMDowMFrOGAADiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMzozMDowMFrOGAADiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY1NDA4OA==", "bodyText": "I don't think we want to round here, since that would mean 59.5 would be the effective cutoff. We can do\nif (duration.toMillis() >= MINUTES.toMillis(1)) {", "url": "https://github.com/trinodb/trino/pull/3311#discussion_r402654088", "createdAt": "2020-04-02T23:30:00Z", "author": {"login": "electrum"}, "path": "presto-cli/src/main/java/io/prestosql/cli/FormatUtils.java", "diffHunk": "@@ -165,6 +165,24 @@ public static String formatTime(Duration duration)\n         return format(\"%s:%02d\", minutes, seconds);\n     }\n \n+    public static String formatFinalTime(Duration duration)\n+    {\n+        int totalSeconds = Ints.saturatedCast(duration.roundTo(SECONDS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzIzODE0OnYy", "diffSide": "RIGHT", "path": "presto-cli/src/main/java/io/prestosql/cli/FormatUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMzozMDo0NFrOGAAEVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMzozMDo0NFrOGAAEVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY1NDI5Mg==", "bodyText": "This can delegate to formatTime", "url": "https://github.com/trinodb/trino/pull/3311#discussion_r402654292", "createdAt": "2020-04-02T23:30:44Z", "author": {"login": "electrum"}, "path": "presto-cli/src/main/java/io/prestosql/cli/FormatUtils.java", "diffHunk": "@@ -165,6 +165,24 @@ public static String formatTime(Duration duration)\n         return format(\"%s:%02d\", minutes, seconds);\n     }\n \n+    public static String formatFinalTime(Duration duration)\n+    {\n+        int totalSeconds = Ints.saturatedCast(duration.roundTo(SECONDS));\n+\n+        if (totalSeconds >= 60) {\n+            int minutes = totalSeconds / 60;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzIzOTUzOnYy", "diffSide": "RIGHT", "path": "presto-cli/src/main/java/io/prestosql/cli/FormatUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMzozMTozNFrOGAAFRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMzozMTozNFrOGAAFRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY1NDUzNQ==", "bodyText": "Nit: the \"else\" is redundant, since the \"if\" always returns\nif (... above cutoff...) {\n    return formatTime(...);\n}\n\n... format with millis ...", "url": "https://github.com/trinodb/trino/pull/3311#discussion_r402654535", "createdAt": "2020-04-02T23:31:34Z", "author": {"login": "electrum"}, "path": "presto-cli/src/main/java/io/prestosql/cli/FormatUtils.java", "diffHunk": "@@ -165,6 +165,24 @@ public static String formatTime(Duration duration)\n         return format(\"%s:%02d\", minutes, seconds);\n     }\n \n+    public static String formatFinalTime(Duration duration)\n+    {\n+        int totalSeconds = Ints.saturatedCast(duration.roundTo(SECONDS));\n+\n+        if (totalSeconds >= 60) {\n+            int minutes = totalSeconds / 60;\n+            int seconds = totalSeconds % 60;\n+\n+            return format(\"%s:%02d\", minutes, seconds);\n+        } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjMxMTM0OnYy", "diffSide": "RIGHT", "path": "presto-cli/src/main/java/io/prestosql/cli/FormatUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNjo0NzoxM1rOGWMZ5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNjo0NzoxM1rOGWMZ5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkyNTA5Mw==", "bodyText": "Actually, this could be simplified to:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    int seconds = (int) (totalMillis / 1000);\n          \n          \n            \n                    int millis = (int) (totalMillis % 1000) / 10;\n          \n          \n            \n            \n          \n          \n            \n                    return format(\"%s.%02d\", seconds, millis);\n          \n          \n            \n                    return format(\"%.2f\", totalMillis / 1000.0);", "url": "https://github.com/trinodb/trino/pull/3311#discussion_r425925093", "createdAt": "2020-05-15T16:47:13Z", "author": {"login": "martint"}, "path": "presto-cli/src/main/java/io/prestosql/cli/FormatUtils.java", "diffHunk": "@@ -165,6 +166,20 @@ public static String formatTime(Duration duration)\n         return format(\"%s:%02d\", minutes, seconds);\n     }\n \n+    public static String formatFinalTime(Duration duration)\n+    {\n+        long totalMillis = duration.toMillis();\n+\n+        if (totalMillis >= MINUTES.toMillis(1)) {\n+            return formatTime(duration);\n+        }\n+\n+        int seconds = (int) (totalMillis / 1000);\n+        int millis = (int) (totalMillis % 1000) / 10;\n+\n+        return format(\"%s.%02d\", seconds, millis);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 289, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}