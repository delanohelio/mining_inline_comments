{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxNDkyNTg5", "number": 2970, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOTo0NTozOFrODj7l9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOTo0NjozMFrODj7m3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDAzMTI1OnYy", "diffSide": "RIGHT", "path": "presto-parser/src/main/java/io/prestosql/sql/parser/ErrorHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOTo0NTozOFrOFwAvZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOTo0NTozOFrOFwAvZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4ODEwMw==", "bodyText": "Maybe use an immutable set here so that it's clear we aren't modifying it later", "url": "https://github.com/trinodb/trino/pull/2970#discussion_r385888103", "createdAt": "2020-02-28T19:45:38Z", "author": {"login": "electrum"}, "path": "presto-parser/src/main/java/io/prestosql/sql/parser/ErrorHandler.java", "diffHunk": "@@ -226,7 +249,13 @@ private boolean isReachable(ATNState target, RuleStartState from)\n \n         private Set<Integer> process(ParsingState start, int precedence)\n         {\n-            Set<Integer> endTokens = new HashSet<>();\n+            Set<Integer> endTokens = memo.get(start);\n+\n+            if (endTokens != null) {\n+                return endTokens;\n+            }\n+\n+            endTokens = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDAzMzU4OnYy", "diffSide": "RIGHT", "path": "presto-parser/src/test/java/io/prestosql/sql/parser/TestSqlParserErrorHandling.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOTo0NjozMFrOFwAw4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOTo1NToxM1rOFwBEsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4ODQ4Mg==", "bodyText": "repeat(\"OR (f()\\n\", 21) +", "url": "https://github.com/trinodb/trino/pull/2970#discussion_r385888482", "createdAt": "2020-02-28T19:46:30Z", "author": {"login": "electrum"}, "path": "presto-parser/src/test/java/io/prestosql/sql/parser/TestSqlParserErrorHandling.java", "diffHunk": "@@ -163,6 +163,36 @@ public void testPossibleExponentialBacktracking()\n                 \"line 1:375: mismatched input '<EOF>'. Expecting: '%', '*', '+', '-', '/', 'AT', 'THEN', '||'\");\n     }\n \n+    @Test\n+    public void testPossibleExponentialBacktracking2()\n+    {\n+        testStatement(\"SELECT id FROM t WHERE\\n\" +\n+                        \"(f()\\n\" +\n+                        \"OR (f()\\n\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg5MzU1Mw==", "bodyText": "I had it like that because it's easier to copy and use in the CLI, or elsewhere than having to write a program to generate the query programmatically.", "url": "https://github.com/trinodb/trino/pull/2970#discussion_r385893553", "createdAt": "2020-02-28T19:55:13Z", "author": {"login": "martint"}, "path": "presto-parser/src/test/java/io/prestosql/sql/parser/TestSqlParserErrorHandling.java", "diffHunk": "@@ -163,6 +163,36 @@ public void testPossibleExponentialBacktracking()\n                 \"line 1:375: mismatched input '<EOF>'. Expecting: '%', '*', '+', '-', '/', 'AT', 'THEN', '||'\");\n     }\n \n+    @Test\n+    public void testPossibleExponentialBacktracking2()\n+    {\n+        testStatement(\"SELECT id FROM t WHERE\\n\" +\n+                        \"(f()\\n\" +\n+                        \"OR (f()\\n\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4ODQ4Mg=="}, "originalCommit": null, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 839, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}