{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5NzMyNTc0", "number": 4648, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNzozOToxNlrOET9e6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMTozNzo1NlrOEUPjFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzY1NzM5OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/server/security/InsecureAuthenticatorConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNzozOToxNlrOG5-_jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNzozOToxNlrOG5-_jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1NDA5NQ==", "bodyText": "add unit test", "url": "https://github.com/trinodb/trino/pull/4648#discussion_r463454095", "createdAt": "2020-07-31T07:39:16Z", "author": {"login": "kokosing"}, "path": "presto-main/src/main/java/io/prestosql/server/security/InsecureAuthenticatorConfig.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.server.security;\n+\n+import io.airlift.configuration.Config;\n+import io.airlift.configuration.validation.FileExists;\n+\n+import java.io.File;\n+import java.util.Optional;\n+\n+public class InsecureAuthenticatorConfig", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzY2MTY2OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/server/security/AuthenticationFilter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNzo0MDo1NVrOG5_CJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxODowNDozNlrOG6RWeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1NDc1OQ==", "bodyText": "can you please add some unit tests for this feature?", "url": "https://github.com/trinodb/trino/pull/4648#discussion_r463454759", "createdAt": "2020-07-31T07:40:55Z", "author": {"login": "kokosing"}, "path": "presto-main/src/main/java/io/prestosql/server/security/AuthenticationFilter.java", "diffHunk": "@@ -41,14 +41,20 @@\n     private final List<Authenticator> authenticators;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1NDg3NA==", "bodyText": "I updated the existing test in TestResourceSecurity", "url": "https://github.com/trinodb/trino/pull/4648#discussion_r463754874", "createdAt": "2020-07-31T18:04:36Z", "author": {"login": "dain"}, "path": "presto-main/src/main/java/io/prestosql/server/security/AuthenticationFilter.java", "diffHunk": "@@ -41,14 +41,20 @@\n     private final List<Authenticator> authenticators;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1NDc1OQ=="}, "originalCommit": null, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjYxNzE4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/server/security/InsecureAuthenticator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMTozNzo1NlrOG6afNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMTozNzo1NlrOG6afNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkwNDU2NQ==", "bodyText": "Shouldn't this be the original user? That's what we do for PasswordAuthenticator (at least for the built-in ones, as a custom password authenticator can return any principal).", "url": "https://github.com/trinodb/trino/pull/4648#discussion_r463904565", "createdAt": "2020-08-01T01:37:56Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/server/security/InsecureAuthenticator.java", "diffHunk": "@@ -48,8 +60,14 @@ public Identity authenticate(ContainerRequestContext request)\n             throw new AuthenticationException(\"Basic authentication or \" + PRESTO_USER + \" must be sent\", BasicAuthCredentials.AUTHENTICATE_HEADER);\n         }\n \n-        return Identity.forUser(user)\n-                .withPrincipal(new BasicPrincipal(user))\n-                .build();\n+        try {\n+            String authenticatedUser = userMapping.mapUser(user);\n+            return Identity.forUser(authenticatedUser)\n+                    .withPrincipal(new BasicPrincipal(authenticatedUser))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3560, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}