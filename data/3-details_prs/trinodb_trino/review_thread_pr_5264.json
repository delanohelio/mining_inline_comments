{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwOTQzOTQ1", "number": 5264, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMzozMzo0OVrOEmFhOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMToxMzozNlrOEmhqBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MzcxNzcwOnYy", "diffSide": "RIGHT", "path": "presto-memsql/src/test/java/io/prestosql/plugin/memsql/TestMemSqlIntegrationSmokeTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMzozMzo0OVrOHV6RqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMzozMzo0OVrOHV6RqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjczNjkzNg==", "bodyText": "#5263", "url": "https://github.com/trinodb/trino/pull/5264#discussion_r492736936", "createdAt": "2020-09-22T13:33:49Z", "author": {"login": "findepi"}, "path": "presto-memsql/src/test/java/io/prestosql/plugin/memsql/TestMemSqlIntegrationSmokeTest.java", "diffHunk": "@@ -181,6 +182,19 @@ public void testInsertIntoNotNullColumn()\n         assertUpdate(\"DROP TABLE test_insert_not_null\");\n     }\n \n+    @Test\n+    public void testLimitPushdown()\n+    {\n+        assertThat(query(\"SELECT name FROM nation LIMIT 30\")).isCorrectlyPushedDown(); // Use high limit for result determinism\n+\n+        // with filter over numeric column\n+        assertThat(query(\"SELECT name FROM nation WHERE regionkey = 3 LIMIT 5\")).isCorrectlyPushedDown();\n+\n+        // with filter over varchar column\n+        // TODO (https://github.com/prestosql/presto/issues/5263) should be `.isNotFullyPushedDown(FilterNode.class)`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aad2e55bfc95d6769303709b4276702e3dd857ab"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NzA3OTA5OnYy", "diffSide": "RIGHT", "path": "presto-druid/src/test/java/io/prestosql/plugin/druid/TestDruidIntegrationSmokeTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzoyOTowOFrOHWaCcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo0OTozMVrOHWlWNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI1NzMyOA==", "bodyText": "what about aggregation and project? We have at the moment 4 variables (predicate, limit, projection and aggregation).\nHaving dedicated tests per each pushdown gives 4 tests, for pairs another 12 tests, for triples another test 4 tests, and for all cases at once another 1 tests. 21 in total.\nWhat are your thoughts to tackle that?", "url": "https://github.com/trinodb/trino/pull/5264#discussion_r493257328", "createdAt": "2020-09-23T07:29:08Z", "author": {"login": "kokosing"}, "path": "presto-druid/src/test/java/io/prestosql/plugin/druid/TestDruidIntegrationSmokeTest.java", "diffHunk": "@@ -272,4 +272,17 @@ public void testFilteringForTablesAndColumns()\n         actualColumns = computeActual(\"DESCRIBE \" + datasourceB);\n         Assert.assertEquals(actualColumns, expectedColumns);\n     }\n+\n+    @Test\n+    public void testLimitPushdown()\n+    {\n+        assertThat(query(\"SELECT name FROM nation LIMIT 30\")).isCorrectlyPushedDown(); // Use high limit for result determinism\n+\n+        // with filter over numeric column\n+        assertThat(query(\"SELECT name FROM nation WHERE regionkey = 3 LIMIT 5\")).isCorrectlyPushedDown();\n+\n+        // with filter over varchar column\n+        assertThat(query(\"SELECT name FROM nation WHERE name < 'EEE' LIMIT 5\")).isCorrectlyPushedDown();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aad2e55bfc95d6769303709b4276702e3dd857ab"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0MjYxMw==", "bodyText": "what about aggregation and project?\n\nagg pushdown with limit does not work today -- #5261\n\nWhat are your thoughts to tackle that?\n\ni want to organize pushdown test around top level thing that is pushed down (eg agg pushdown tests won't cover LIMIT (applied after agg), unless the LIMIT is in subquery)\ni also want to order them by the ordering in which they are appledi in JdbcTableHandle", "url": "https://github.com/trinodb/trino/pull/5264#discussion_r493442613", "createdAt": "2020-09-23T10:49:31Z", "author": {"login": "findepi"}, "path": "presto-druid/src/test/java/io/prestosql/plugin/druid/TestDruidIntegrationSmokeTest.java", "diffHunk": "@@ -272,4 +272,17 @@ public void testFilteringForTablesAndColumns()\n         actualColumns = computeActual(\"DESCRIBE \" + datasourceB);\n         Assert.assertEquals(actualColumns, expectedColumns);\n     }\n+\n+    @Test\n+    public void testLimitPushdown()\n+    {\n+        assertThat(query(\"SELECT name FROM nation LIMIT 30\")).isCorrectlyPushedDown(); // Use high limit for result determinism\n+\n+        // with filter over numeric column\n+        assertThat(query(\"SELECT name FROM nation WHERE regionkey = 3 LIMIT 5\")).isCorrectlyPushedDown();\n+\n+        // with filter over varchar column\n+        assertThat(query(\"SELECT name FROM nation WHERE name < 'EEE' LIMIT 5\")).isCorrectlyPushedDown();\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI1NzMyOA=="}, "originalCommit": {"oid": "aad2e55bfc95d6769303709b4276702e3dd857ab"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODMyNzc0OnYy", "diffSide": "RIGHT", "path": "presto-druid/src/test/java/io/prestosql/plugin/druid/TestDruidIntegrationSmokeTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMToxMzozNlrOHWmn4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTozOTo1MFrOHWn-vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ2MzUyMA==", "bodyText": "why not to add basic test case to io.prestosql.plugin.jdbc.TestJdbcIntegrationSmokeTest?", "url": "https://github.com/trinodb/trino/pull/5264#discussion_r493463520", "createdAt": "2020-09-23T11:13:36Z", "author": {"login": "sopel39"}, "path": "presto-druid/src/test/java/io/prestosql/plugin/druid/TestDruidIntegrationSmokeTest.java", "diffHunk": "@@ -272,4 +272,17 @@ public void testFilteringForTablesAndColumns()\n         actualColumns = computeActual(\"DESCRIBE \" + datasourceB);\n         Assert.assertEquals(actualColumns, expectedColumns);\n     }\n+\n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ4NTc1Nw==", "bodyText": "TestJdbcIntegrationSmokeTest is not generic\ndid you mean AbstractTestIntegrationSmokeTest?\ni thought about that.\nSome connnectors do not support limit pushdown, some support partially (eg mysql & varchars)....\nYet, i am OK if we revisit this later.\nwould you be ok to coninue with current approach?", "url": "https://github.com/trinodb/trino/pull/5264#discussion_r493485757", "createdAt": "2020-09-23T11:39:50Z", "author": {"login": "findepi"}, "path": "presto-druid/src/test/java/io/prestosql/plugin/druid/TestDruidIntegrationSmokeTest.java", "diffHunk": "@@ -272,4 +272,17 @@ public void testFilteringForTablesAndColumns()\n         actualColumns = computeActual(\"DESCRIBE \" + datasourceB);\n         Assert.assertEquals(actualColumns, expectedColumns);\n     }\n+\n+    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ2MzUyMA=="}, "originalCommit": null, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3045, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}