{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MDcyMzQz", "number": 5808, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwODo1MjozM1rOE1IFbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjo1NTo1OFrOE1UAxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MTQyNDQ0OnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveViews.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwODo1MjozNFrOHtOYBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMzoxMzowMlrOHtXeEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE4MzQ5NA==", "bodyText": "we need to use something else that hive catalog name here.", "url": "https://github.com/trinodb/trino/pull/5808#discussion_r517183494", "createdAt": "2020-11-04T08:52:34Z", "author": {"login": "kokosing"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveViews.java", "diffHunk": "@@ -101,10 +103,15 @@ public void testShowCreateView()\n     {\n         onHive().executeQuery(\"DROP VIEW IF EXISTS hive_show_view\");\n \n-        onHive().executeQuery(\"CREATE VIEW hive_show_view AS SELECT * FROM nation\");\n+        onHive().executeQuery(\"CREATE VIEW hive_show_view AS SELECT n_nationkey FROM nation\");\n \n-        // view SQL depends on Hive distribution\n-        assertThat(query(\"SHOW CREATE VIEW hive_show_view\")).hasRowsCount(1);\n+        QueryResult result = query(\"SHOW CREATE VIEW hive_show_view\");\n+\n+        assertThat(result).hasRowsCount(1);\n+        String actualSql = (String) result.row(0).get(0);\n+        assertEquals(\n+                actualSql.replaceAll(\"\\n\", \" \").replaceAll(\"\\\\s+\", \" \"),\n+                \"CREATE VIEW hive.default.hive_show_view AS SELECT \\\"n_nationkey\\\" FROM \\\"default\\\".\\\"nation\\\"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMzMjQ5OQ==", "bodyText": "In product tests we have few hive catalogs mapped to same metastore.\nSo you can access the Hive view from two of them within single test.", "url": "https://github.com/trinodb/trino/pull/5808#discussion_r517332499", "createdAt": "2020-11-04T13:13:02Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveViews.java", "diffHunk": "@@ -101,10 +103,15 @@ public void testShowCreateView()\n     {\n         onHive().executeQuery(\"DROP VIEW IF EXISTS hive_show_view\");\n \n-        onHive().executeQuery(\"CREATE VIEW hive_show_view AS SELECT * FROM nation\");\n+        onHive().executeQuery(\"CREATE VIEW hive_show_view AS SELECT n_nationkey FROM nation\");\n \n-        // view SQL depends on Hive distribution\n-        assertThat(query(\"SHOW CREATE VIEW hive_show_view\")).hasRowsCount(1);\n+        QueryResult result = query(\"SHOW CREATE VIEW hive_show_view\");\n+\n+        assertThat(result).hasRowsCount(1);\n+        String actualSql = (String) result.row(0).get(0);\n+        assertEquals(\n+                actualSql.replaceAll(\"\\n\", \" \").replaceAll(\"\\\\s+\", \" \"),\n+                \"CREATE VIEW hive.default.hive_show_view AS SELECT \\\"n_nationkey\\\" FROM \\\"default\\\".\\\"nation\\\"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE4MzQ5NA=="}, "originalCommit": null, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MjM4Nzc3OnYy", "diffSide": "LEFT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveViews.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMzoxNDoxN1rOHtXg7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMzoxNDoxN1rOHtXg7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMzMzIyOA==", "bodyText": "what was wrong about *?\ncan we test both cases, with * and with explicit column(s)?\n(nation table has few columns, it doesn't hurt to enumerate all of them)", "url": "https://github.com/trinodb/trino/pull/5808#discussion_r517333228", "createdAt": "2020-11-04T13:14:17Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveViews.java", "diffHunk": "@@ -101,10 +103,15 @@ public void testShowCreateView()\n     {\n         onHive().executeQuery(\"DROP VIEW IF EXISTS hive_show_view\");\n \n-        onHive().executeQuery(\"CREATE VIEW hive_show_view AS SELECT * FROM nation\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MjM5MDE5OnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveViews.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMzoxNDo1NFrOHtXiPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMzoxNDo1NFrOHtXiPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMzMzU2NQ==", "bodyText": "keeping actualSql intact is OK.\nalso, if we used to output nicely formatted result and in the future we stop doing that, i would like the test to tell me so.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            actualSql.replaceAll(\"\\n\", \" \").replaceAll(\"\\\\s+\", \" \"),\n          \n          \n            \n                            actualSql,", "url": "https://github.com/trinodb/trino/pull/5808#discussion_r517333565", "createdAt": "2020-11-04T13:14:54Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveViews.java", "diffHunk": "@@ -101,10 +103,15 @@ public void testShowCreateView()\n     {\n         onHive().executeQuery(\"DROP VIEW IF EXISTS hive_show_view\");\n \n-        onHive().executeQuery(\"CREATE VIEW hive_show_view AS SELECT * FROM nation\");\n+        onHive().executeQuery(\"CREATE VIEW hive_show_view AS SELECT n_nationkey FROM nation\");\n \n-        // view SQL depends on Hive distribution\n-        assertThat(query(\"SHOW CREATE VIEW hive_show_view\")).hasRowsCount(1);\n+        QueryResult result = query(\"SHOW CREATE VIEW hive_show_view\");\n+\n+        assertThat(result).hasRowsCount(1);\n+        String actualSql = (String) result.row(0).get(0);\n+        assertEquals(\n+                actualSql.replaceAll(\"\\n\", \" \").replaceAll(\"\\\\s+\", \" \"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MzM3ODYwOnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveViews.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjo1NTo1OFrOHthH4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjo1NTo1OFrOHthH4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ5MDY1Ng==", "bodyText": "Might be worth calling out in the comment that the hive_with_external_writes catalog points to the same HMS instance", "url": "https://github.com/trinodb/trino/pull/5808#discussion_r517490656", "createdAt": "2020-11-04T16:55:58Z", "author": {"login": "alexjo2144"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveViews.java", "diffHunk": "@@ -100,11 +103,26 @@ public void testExistingView()\n     public void testShowCreateView()\n     {\n         onHive().executeQuery(\"DROP VIEW IF EXISTS hive_show_view\");\n-\n         onHive().executeQuery(\"CREATE VIEW hive_show_view AS SELECT * FROM nation\");\n \n-        // view SQL depends on Hive distribution\n-        assertThat(query(\"SHOW CREATE VIEW hive_show_view\")).hasRowsCount(1);\n+        String showCreateViewSql = \"SHOW CREATE VIEW %s.default.hive_show_view\";\n+        String expectedResult = \"CREATE VIEW %s.default.hive_show_view AS\\n\" +\n+                \"SELECT\\n\" +\n+                \"  \\\"n_nationkey\\\"\\n\" +\n+                \", \\\"n_name\\\"\\n\" +\n+                \", \\\"n_regionkey\\\"\\n\" +\n+                \", \\\"n_comment\\\"\\n\" +\n+                \"FROM\\n\" +\n+                \"  \\\"default\\\".\\\"nation\\\"\";\n+\n+        QueryResult actualResult = query(format(showCreateViewSql, \"hive\"));\n+        assertThat(actualResult).hasRowsCount(1);\n+        assertEquals((String) actualResult.row(0).get(0), format(expectedResult, \"hive\"));\n+\n+        // Validate the translated view sql for a catalog name other than \"hive\"\n+        actualResult = query(format(showCreateViewSql, \"hive_with_external_writes\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4930, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}