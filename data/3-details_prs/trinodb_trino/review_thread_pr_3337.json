{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4NTAxMjcw", "number": 3337, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDoxMzo1NlrODu6dXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo1NTowN1rOETZ2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTE4ODc3OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcTableHandle.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDoxMzo1NlrOGBDBVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDoxMzo1NlrOGBDBVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1MTI1Mw==", "bodyText": "RemoteTableName (like SchemaTableName)", "url": "https://github.com/trinodb/trino/pull/3337#discussion_r403751253", "createdAt": "2020-04-05T20:13:56Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcTableHandle.java", "diffHunk": "@@ -32,11 +32,7 @@\n         implements ConnectorTableHandle\n {\n     private final SchemaTableName schemaTableName;\n-\n-    // catalog, schema and table names are reported by the remote database\n-    private final String catalogName;\n-    private final String schemaName;\n-    private final String tableName;\n+    private final RemoteTable remoteTable;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTE4OTE3OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcTableHandle.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDoxNDowOVrOGBDBgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDoxNDowOVrOGBDBgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1MTI5Nw==", "bodyText": "@Deprecated", "url": "https://github.com/trinodb/trino/pull/3337#discussion_r403751297", "createdAt": "2020-04-05T20:14:09Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcTableHandle.java", "diffHunk": "@@ -45,19 +41,26 @@ public JdbcTableHandle(SchemaTableName schemaTableName, @Nullable String catalog\n         this(schemaTableName, catalogName, schemaName, tableName, TupleDomain.all(), OptionalLong.empty());\n     }\n \n+    public JdbcTableHandle(", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTE4OTc1OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcTableHandle.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDoxNTowMFrOGBDB0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDoxNTowMFrOGBDB0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1MTM3OA==", "bodyText": "no longer @JsonProperty\n\n\nmake @Deprecated ?", "url": "https://github.com/trinodb/trino/pull/3337#discussion_r403751378", "createdAt": "2020-04-05T20:15:00Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcTableHandle.java", "diffHunk": "@@ -69,23 +72,27 @@ public SchemaTableName getSchemaTableName()\n     }\n \n     @JsonProperty\n+    public RemoteTable getRemoteTable()\n+    {\n+        return remoteTable;\n+    }\n+\n     @Nullable\n     public String getCatalogName()\n     {\n-        return catalogName;\n+        return remoteTable.getCatalogName().orElse(null);\n     }\n \n-    @JsonProperty\n     @Nullable\n     public String getSchemaName()\n     {\n-        return schemaName;\n+        return remoteTable.getSchemaName().orElse(null);\n     }\n \n     @JsonProperty\n     public String getTableName()\n     {\n-        return tableName;\n+        return remoteTable.getTableName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTE4OTc3OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcTableHandle.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDoxNTowMlrOGBDB1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDoxNTowMlrOGBDB1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1MTM4MQ==", "bodyText": "make @Deprecated ?", "url": "https://github.com/trinodb/trino/pull/3337#discussion_r403751381", "createdAt": "2020-04-05T20:15:02Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcTableHandle.java", "diffHunk": "@@ -69,23 +72,27 @@ public SchemaTableName getSchemaTableName()\n     }\n \n     @JsonProperty\n+    public RemoteTable getRemoteTable()\n+    {\n+        return remoteTable;\n+    }\n+\n     @Nullable\n     public String getCatalogName()\n     {\n-        return catalogName;\n+        return remoteTable.getCatalogName().orElse(null);\n     }\n \n-    @JsonProperty\n     @Nullable\n     public String getSchemaName()\n     {\n-        return schemaName;\n+        return remoteTable.getSchemaName().orElse(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTE4OTc4OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcTableHandle.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDoxNTowNFrOGBDB1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDoxNTowNFrOGBDB1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1MTM4Mg==", "bodyText": "make @Deprecated ?", "url": "https://github.com/trinodb/trino/pull/3337#discussion_r403751382", "createdAt": "2020-04-05T20:15:04Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcTableHandle.java", "diffHunk": "@@ -69,23 +72,27 @@ public SchemaTableName getSchemaTableName()\n     }\n \n     @JsonProperty\n+    public RemoteTable getRemoteTable()\n+    {\n+        return remoteTable;\n+    }\n+\n     @Nullable\n     public String getCatalogName()\n     {\n-        return catalogName;\n+        return remoteTable.getCatalogName().orElse(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTE5MTA1OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/RemoteTable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDoxNjozOFrOGBDCbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDoxNjozOFrOGBDCbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1MTUzNQ==", "bodyText": "replace this with a class javadoc:\n/**\n * Qualified table name reported by the remote database.\n */", "url": "https://github.com/trinodb/trino/pull/3337#discussion_r403751535", "createdAt": "2020-04-05T20:16:38Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/RemoteTable.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.prestosql.plugin.jdbc;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.common.base.Joiner;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class RemoteTable\n+{\n+    // catalog, schema and table names are reported by the remote database", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTE5MzQ0OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/RemoteTable.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDoxODo1OFrOGBDDkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMzowOTowM1rOGCua0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1MTgyNA==", "bodyText": "By convention, we use @JsonProperty(\"xxxx\") (named params).\nThis may be redundant now since airlift/airbase@d6de168 ...\nHowever, then I am not sure whether @JsonProperty adds anything. Maybe it's totally redundant?", "url": "https://github.com/trinodb/trino/pull/3337#discussion_r403751824", "createdAt": "2020-04-05T20:18:58Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/RemoteTable.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.prestosql.plugin.jdbc;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.common.base.Joiner;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class RemoteTable\n+{\n+    // catalog, schema and table names are reported by the remote database\n+    private final Optional<String> catalogName;\n+    private final Optional<String> schemaName;\n+    private final String tableName;\n+\n+    @JsonCreator\n+    public RemoteTable(\n+            @JsonProperty Optional<String> catalogName,\n+            @JsonProperty Optional<String> schemaName,\n+            @JsonProperty String tableName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1MTg2MQ==", "bodyText": "BTW add JSON roundtrip test.", "url": "https://github.com/trinodb/trino/pull/3337#discussion_r403751861", "createdAt": "2020-04-05T20:19:15Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/RemoteTable.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.prestosql.plugin.jdbc;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.common.base.Joiner;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class RemoteTable\n+{\n+    // catalog, schema and table names are reported by the remote database\n+    private final Optional<String> catalogName;\n+    private final Optional<String> schemaName;\n+    private final String tableName;\n+\n+    @JsonCreator\n+    public RemoteTable(\n+            @JsonProperty Optional<String> catalogName,\n+            @JsonProperty Optional<String> schemaName,\n+            @JsonProperty String tableName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1MTgyNA=="}, "originalCommit": null, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUxMDg2Nw==", "bodyText": "@JsonProperty is not needed. Thanks for this idea. Good to know. Test was also nice.", "url": "https://github.com/trinodb/trino/pull/3337#discussion_r405510867", "createdAt": "2020-04-08T13:09:03Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/RemoteTable.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.prestosql.plugin.jdbc;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.common.base.Joiner;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class RemoteTable\n+{\n+    // catalog, schema and table names are reported by the remote database\n+    private final Optional<String> catalogName;\n+    private final Optional<String> schemaName;\n+    private final String tableName;\n+\n+    @JsonCreator\n+    public RemoteTable(\n+            @JsonProperty Optional<String> catalogName,\n+            @JsonProperty Optional<String> schemaName,\n+            @JsonProperty String tableName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1MTgyNA=="}, "originalCommit": null, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTE5NDgzOnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDoyMDozMFrOGBDEPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDoyMDozMFrOGBDEPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1MTk5Nw==", "bodyText": "is it? the code looks like it's not", "url": "https://github.com/trinodb/trino/pull/3337#discussion_r403751997", "createdAt": "2020-04-05T20:20:30Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "diffHunk": "@@ -690,6 +692,7 @@ protected String getTableSchemaName(ResultSet resultSet)\n         return resultSet.getString(\"TABLE_SCHEM\");\n     }\n \n+    @Nullable", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTE5NTM5OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDoyMTozNFrOGBDEkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNjoyMDo1NVrOGDyIbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1MjA4MQ==", "bodyText": "Maybe add TODO in the body, to remove special treatment for \"\" values.\n(isNullOrEmpty => != null)", "url": "https://github.com/trinodb/trino/pull/3337#discussion_r403752081", "createdAt": "2020-04-05T20:21:34Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "diffHunk": "@@ -896,7 +899,12 @@ protected String quoted(String name)\n         return identifierQuote + name + identifierQuote;\n     }\n \n-    protected String quoted(String catalog, String schema, String table)\n+    protected String quoted(RemoteTable remoteTable)\n+    {\n+        return quoted(remoteTable.getCatalogName().orElse(null), remoteTable.getSchemaName().orElse(null), remoteTable.getTableName());\n+    }\n+\n+    protected String quoted(@Nullable String catalog, @Nullable String schema, String table)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUyMzIzMQ==", "bodyText": "I am not sure. That would require me to know that special value \"\" is not special in some database. Maybe there a RDBMS that uses empty string instead of null?", "url": "https://github.com/trinodb/trino/pull/3337#discussion_r405523231", "createdAt": "2020-04-08T13:26:43Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "diffHunk": "@@ -896,7 +899,12 @@ protected String quoted(String name)\n         return identifierQuote + name + identifierQuote;\n     }\n \n-    protected String quoted(String catalog, String schema, String table)\n+    protected String quoted(RemoteTable remoteTable)\n+    {\n+        return quoted(remoteTable.getCatalogName().orElse(null), remoteTable.getSchemaName().orElse(null), remoteTable.getTableName());\n+    }\n+\n+    protected String quoted(@Nullable String catalog, @Nullable String schema, String table)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1MjA4MQ=="}, "originalCommit": null, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYyMDI3MA==", "bodyText": "I agree", "url": "https://github.com/trinodb/trino/pull/3337#discussion_r406620270", "createdAt": "2020-04-10T06:20:55Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "diffHunk": "@@ -896,7 +899,12 @@ protected String quoted(String name)\n         return identifierQuote + name + identifierQuote;\n     }\n \n-    protected String quoted(String catalog, String schema, String table)\n+    protected String quoted(RemoteTable remoteTable)\n+    {\n+        return quoted(remoteTable.getCatalogName().orElse(null), remoteTable.getSchemaName().orElse(null), remoteTable.getTableName());\n+    }\n+\n+    protected String quoted(@Nullable String catalog, @Nullable String schema, String table)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1MjA4MQ=="}, "originalCommit": null, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTE5NjAwOnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/RemoteTable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDoyMjoxMVrOGBDE4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDoyMjoxMVrOGBDE4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1MjE2MA==", "bodyText": "final\n(this module is intended to be extended by external parties, so we should be more paranoid the eg in presto-main)", "url": "https://github.com/trinodb/trino/pull/3337#discussion_r403752160", "createdAt": "2020-04-05T20:22:11Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/RemoteTable.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.prestosql.plugin.jdbc;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.common.base.Joiner;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class RemoteTable", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzgxNzM3OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo1NDo0OFrOG5HzpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo1NDo0OFrOG5HzpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0OTkyNA==", "bodyText": "Maybe introduce a variable for RemoteTableName", "url": "https://github.com/trinodb/trino/pull/3337#discussion_r462549924", "createdAt": "2020-07-29T19:54:48Z", "author": {"login": "electrum"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "diffHunk": "@@ -455,7 +455,7 @@ protected JdbcOutputTableHandle createTable(ConnectorSession session, ConnectorT\n                 columnList.add(getColumnSql(session, column, columnName));\n             }\n \n-            String sql = createTableSql(catalog, remoteSchema, tableName, columnList.build());\n+            String sql = createTableSql(new RemoteTableName(Optional.ofNullable(catalog), Optional.ofNullable(remoteSchema), tableName), columnList.build());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzgxODc3OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo1NTowN1rOG5H0bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo1NTowN1rOG5H0bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU1MDEyNA==", "bodyText": "This would be easier to read with wrapping", "url": "https://github.com/trinodb/trino/pull/3337#discussion_r462550124", "createdAt": "2020-07-29T19:55:07Z", "author": {"login": "electrum"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "diffHunk": "@@ -921,6 +921,11 @@ protected String quoted(String name)\n         return identifierQuote + name + identifierQuote;\n     }\n \n+    protected String quoted(RemoteTableName remoteTableName)\n+    {\n+        return quoted(remoteTableName.getCatalogName().orElse(null), remoteTableName.getSchemaName().orElse(null), remoteTableName.getTableName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 312, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}