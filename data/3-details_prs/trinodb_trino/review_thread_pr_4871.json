{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5NDUwMjk3", "number": 4871, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMzoxNzo0N1rOEZeihA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMzoxNzo0N1rOEZeihA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTUwMjEyOnYy", "diffSide": "LEFT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/utils/QueryAssertions.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMzoxNzo0N1rOHCT5xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNjowOToyOVrOHCbtGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE4NTI4NQ==", "bodyText": "why so?", "url": "https://github.com/trinodb/trino/pull/4871#discussion_r472185285", "createdAt": "2020-08-18T13:17:47Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/utils/QueryAssertions.java", "diffHunk": "@@ -20,15 +20,32 @@\n \n import java.util.function.Supplier;\n \n-import static io.prestosql.testing.assertions.Assert.assertEventually;\n import static java.lang.String.format;\n import static org.testng.Assert.fail;\n \n public final class QueryAssertions\n {\n     public static void assertContainsEventually(Supplier<QueryResult> all, QueryResult expectedSubset, Duration timeout)\n     {\n-        assertEventually(timeout, () -> assertContains(all.get(), expectedSubset));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMxMjY0NA==", "bodyText": "It is copied from Presto main", "url": "https://github.com/trinodb/trino/pull/4871#discussion_r472312644", "createdAt": "2020-08-18T16:08:46Z", "author": {"login": "kokosing"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/utils/QueryAssertions.java", "diffHunk": "@@ -20,15 +20,32 @@\n \n import java.util.function.Supplier;\n \n-import static io.prestosql.testing.assertions.Assert.assertEventually;\n import static java.lang.String.format;\n import static org.testng.Assert.fail;\n \n public final class QueryAssertions\n {\n     public static void assertContainsEventually(Supplier<QueryResult> all, QueryResult expectedSubset, Duration timeout)\n     {\n-        assertEventually(timeout, () -> assertContains(all.get(), expectedSubset));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE4NTI4NQ=="}, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMxMzExNA==", "bodyText": "Oh... It is copied below. So no need to inline it.", "url": "https://github.com/trinodb/trino/pull/4871#discussion_r472313114", "createdAt": "2020-08-18T16:09:29Z", "author": {"login": "kokosing"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/utils/QueryAssertions.java", "diffHunk": "@@ -20,15 +20,32 @@\n \n import java.util.function.Supplier;\n \n-import static io.prestosql.testing.assertions.Assert.assertEventually;\n import static java.lang.String.format;\n import static org.testng.Assert.fail;\n \n public final class QueryAssertions\n {\n     public static void assertContainsEventually(Supplier<QueryResult> all, QueryResult expectedSubset, Duration timeout)\n     {\n-        assertEventually(timeout, () -> assertContains(all.get(), expectedSubset));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE4NTI4NQ=="}, "originalCommit": null, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3500, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}