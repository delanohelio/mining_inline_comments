{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2MTkyMjcy", "number": 5030, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMDowNjowM1rOEePhdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMDowNjowM1rOEePhdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMTQ3MDYwOnYy", "diffSide": "LEFT", "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryExecution.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMDowNjowM1rOHJyc6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMDowNjowM1rOHJyc6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAyNTgzNQ==", "bodyText": "Please add checkState(isDone(), \"Expected query to be in done state\") so that the reader knows unregisterDynamicFilteringQuery is called from done state. This is important to understand dependencies between registerDynamicFilteringQuery and unregisterDynamicFilteringQuery", "url": "https://github.com/trinodb/trino/pull/5030#discussion_r480025835", "createdAt": "2020-08-31T10:06:03Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryExecution.java", "diffHunk": "@@ -221,9 +226,6 @@ private synchronized void registerDynamicFilteringQuery(PlanRoot plan)\n \n     private synchronized void unregisterDynamicFilteringQuery(DynamicFiltersStats finalDynamicFiltersStats)\n     {\n-        if (!isDone()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3092, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}