{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5MDE2ODY1", "number": 5074, "title": "tablesample handling code cleanup", "bodyText": "", "createdAt": "2020-09-03T21:58:46Z", "url": "https://github.com/trinodb/trino/pull/5074", "merged": true, "mergeCommit": {"oid": "9144e4be927cb468db7167c5cd456fe219d95b4c"}, "closed": true, "closedAt": "2020-09-04T11:45:22Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFXYeCAH2gAyNDc5MDE2ODY1Ojg3OTdlNjE4M2EzMDM3YzZjYjZiZTM0NDRjNjgxNzFiOWM2YTY1ZTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFh6AegBqjM3Mjg4OTA3MDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8797e6183a3037c6cb6be3444c68171b9c6a65e3", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/8797e6183a3037c6cb6be3444c68171b9c6a65e3", "committedDate": "2020-09-03T21:21:24Z", "message": "Fix indentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5aaf43834e4321a9464f3f246aa143be88007e5f", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/5aaf43834e4321a9464f3f246aa143be88007e5f", "committedDate": "2020-09-03T21:39:37Z", "message": "Extract variable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "042216ecbf0cb89b41e6569e7fc2f49aa5072412", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/042216ecbf0cb89b41e6569e7fc2f49aa5072412", "committedDate": "2020-09-03T21:53:52Z", "message": "Add TABLESAMPLE test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07eb8b2e2fd4d0f076c5d4853e67d8a5c34a6ad6", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/07eb8b2e2fd4d0f076c5d4853e67d8a5c34a6ad6", "committedDate": "2020-09-03T21:53:52Z", "message": "Reject TABLESAMPLE when ratio expression not a number"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMjQ1NzU4", "url": "https://github.com/trinodb/trino/pull/5074#pullrequestreview-482245758", "createdAt": "2020-09-03T22:31:40Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMjozMTo0MFrOHM5j5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMjozMTo0MFrOHM5j5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI4ODAzNw==", "bodyText": "This is only needed if samplePercentageType != DOUBLE", "url": "https://github.com/trinodb/trino/pull/5074#discussion_r483288037", "createdAt": "2020-09-03T22:31:40Z", "author": {"login": "dain"}, "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/StatementAnalyzer.java", "diffHunk": "@@ -1465,29 +1468,38 @@ protected Scope visitSampledRelation(SampledRelation relation, Optional<Scope> s\n                     accessControl,\n                     sqlParser,\n                     TypeProvider.empty(),\n-                    ImmutableList.of(relation.getSamplePercentage()),\n+                    ImmutableList.of(samplePercentage),\n                     analysis.getParameters(),\n                     WarningCollector.NOOP,\n                     analysis.isDescribe())\n                     .getExpressionTypes();\n \n-            ExpressionInterpreter samplePercentageEval = expressionOptimizer(relation.getSamplePercentage(), metadata, session, expressionTypes);\n+            Type samplePercentageType = expressionTypes.get(NodeRef.of(samplePercentage));\n+            if (!typeCoercion.canCoerce(samplePercentageType, DOUBLE)) {\n+                throw semanticException(TYPE_MISMATCH, samplePercentage, \"Sample percentage should be a numeric expression\");\n+            }\n+\n+            ExpressionInterpreter samplePercentageEval = expressionOptimizer(samplePercentage, metadata, session, expressionTypes);\n \n             Object samplePercentageObject = samplePercentageEval.optimize(symbol -> {\n-                throw semanticException(EXPRESSION_NOT_CONSTANT, relation.getSamplePercentage(), \"Sample percentage cannot contain column references\");\n+                throw semanticException(EXPRESSION_NOT_CONSTANT, samplePercentage, \"Sample percentage cannot contain column references\");\n             });\n \n-            if (!(samplePercentageObject instanceof Number)) {\n-                throw semanticException(TYPE_MISMATCH, relation.getSamplePercentage(), \"Sample percentage should evaluate to a numeric expression\");\n+            ResolvedFunction coercion = metadata.getCoercion(samplePercentageType, DOUBLE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 75}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e19d0f156b2255e4c90884db90bba646fda581d2", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/e19d0f156b2255e4c90884db90bba646fda581d2", "committedDate": "2020-09-04T09:36:47Z", "message": "Fix TABLESAMPLE with DECIMAL"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "e19d0f156b2255e4c90884db90bba646fda581d2", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/e19d0f156b2255e4c90884db90bba646fda581d2", "committedDate": "2020-09-04T09:36:47Z", "message": "Fix TABLESAMPLE with DECIMAL"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3873, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}