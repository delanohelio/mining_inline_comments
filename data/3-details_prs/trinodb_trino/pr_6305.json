{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2OTM1NzIw", "number": 6305, "title": "Expose PrestoDriverUri class", "bodyText": "", "createdAt": "2020-12-11T14:23:03Z", "url": "https://github.com/trinodb/trino/pull/6305", "merged": true, "mergeCommit": {"oid": "3feb519b16295894b4db90e44854a006c6fff251"}, "closed": true, "closedAt": "2020-12-15T07:24:54Z", "author": {"login": "wendigo"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlK3RFgFqTU1MDI3NjE4NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmVFewgFqTU1MjE2NDAwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMjc2MTg0", "url": "https://github.com/trinodb/trino/pull/6305#pullrequestreview-550276184", "createdAt": "2020-12-11T16:49:12Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNjo0OToxMlrOIEBIQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNjo1MTo0MlrOIEBPEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA4MzcxMw==", "bodyText": "\"initialize\" them also when uri's provided is empty:\nthis.schema.set(uri.getSchema().orElse(null))\n...\n\nalso, catalog is set twice", "url": "https://github.com/trinodb/trino/pull/6305#discussion_r541083713", "createdAt": "2020-12-11T16:49:12Z", "author": {"login": "findepi"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoConnection.java", "diffHunk": "@@ -106,8 +106,9 @@\n         requireNonNull(uri, \"uri is null\");\n         this.jdbcUri = uri.getJdbcUri();\n         this.httpUri = uri.getHttpUri();\n-        this.schema.set(uri.getSchema());\n-        this.catalog.set(uri.getCatalog());\n+        uri.getSchema().ifPresent(value -> schema.set(value));\n+        uri.getCatalog().ifPresent(value -> catalog.set(value));\n+        this.catalog.set(uri.getCatalog().orElse(null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA4NDUxNw==", "bodyText": "Add rationale to the cmt mesg. Perhaps\nThis allows applications using Presto JDBC to validate connection string without need to\nopen a connection, or when opening a connection is not possible.", "url": "https://github.com/trinodb/trino/pull/6305#discussion_r541084517", "createdAt": "2020-12-11T16:50:21Z", "author": {"login": "findepi"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoDriverUri.java", "diffHunk": "@@ -81,7 +81,7 @@\n /**\n  * Parses and extracts parameters from a Presto JDBC URL.\n  */\n-final class PrestoDriverUri\n+public final class PrestoDriverUri", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA4NDc2Mw==", "bodyText": "unrelated", "url": "https://github.com/trinodb/trino/pull/6305#discussion_r541084763", "createdAt": "2020-12-11T16:50:41Z", "author": {"login": "findepi"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoDriverUri.java", "diffHunk": "@@ -343,6 +344,7 @@ private void initCatalogAndSchema()\n         path = path.substring(1);\n \n         List<String> parts = Splitter.on(\"/\").splitToList(path);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA4NTQ1Nw==", "bodyText": "unrelated?", "url": "https://github.com/trinodb/trino/pull/6305#discussion_r541085457", "createdAt": "2020-12-11T16:51:42Z", "author": {"login": "findepi"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoDriverUri.java", "diffHunk": "@@ -352,16 +354,22 @@ private void initCatalogAndSchema()\n             throw new SQLException(\"Invalid path segments in URL: \" + uri);\n         }\n \n-        if (parts.get(0).isEmpty()) {\n+        if (parts.size() == 0) {\n+            return;\n+        }\n+\n+        if (Strings.isNullOrEmpty(parts.get(0))) {\n             throw new SQLException(\"Catalog name is empty: \" + uri);\n         }\n-        catalog = parts.get(0);\n+\n+        catalog = Optional.ofNullable(parts.get(0));\n \n         if (parts.size() > 1) {\n-            if (parts.get(1).isEmpty()) {\n+            if (Strings.isNullOrEmpty(parts.get(1))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwODY2OTU0", "url": "https://github.com/trinodb/trino/pull/6305#pullrequestreview-550866954", "createdAt": "2020-12-12T22:25:23Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQyMjoyNToyM1rOIEsZTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQyMjoyNToyM1rOIEsZTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTc5MjU5MA==", "bodyText": "the this.catalog is set twice", "url": "https://github.com/trinodb/trino/pull/6305#discussion_r541792590", "createdAt": "2020-12-12T22:25:23Z", "author": {"login": "findepi"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoConnection.java", "diffHunk": "@@ -106,8 +106,9 @@\n         requireNonNull(uri, \"uri is null\");\n         this.jdbcUri = uri.getJdbcUri();\n         this.httpUri = uri.getHttpUri();\n-        this.schema.set(uri.getSchema());\n-        this.catalog.set(uri.getCatalog());\n+        uri.getSchema().ifPresent(value -> schema.set(value));\n+        uri.getCatalog().ifPresent(value -> catalog.set(value));\n+        this.catalog.set(uri.getCatalog().orElse(null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMTE1MjYz", "url": "https://github.com/trinodb/trino/pull/6305#pullrequestreview-551115263", "createdAt": "2020-12-14T07:56:51Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzo1Njo1MVrOIFD5OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODowNTowN1rOIFEJrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3NzU5Mg==", "bodyText": "This is not reachable, by means of conditions above (a bit implicitly).\nIf you want to have some form of assumption validation, use verify for that\nverify(!parts.isEmpty(), \"parts cannot be empty: %s\", parts); // empty path is handled above", "url": "https://github.com/trinodb/trino/pull/6305#discussion_r542177592", "createdAt": "2020-12-14T07:56:51Z", "author": {"login": "findepi"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoDriverUri.java", "diffHunk": "@@ -352,16 +352,22 @@ private void initCatalogAndSchema()\n             throw new SQLException(\"Invalid path segments in URL: \" + uri);\n         }\n \n+        if (parts.size() == 0) {\n+            return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3ODY4Ng==", "bodyText": "What's the benefit?\nespecially that the production code is using String only?\nI think i'd rather not have this change. -- I am fine with hiding the constructor with a factory method, but i don't like additional overloads.", "url": "https://github.com/trinodb/trino/pull/6305#discussion_r542178686", "createdAt": "2020-12-14T07:58:56Z", "author": {"login": "findepi"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoDriverUri.java", "diffHunk": "@@ -119,6 +119,24 @@ private PrestoDriverUri(URI uri, Properties driverProperties)\n         initCatalogAndSchema();\n     }\n \n+    public static PrestoDriverUri create(URI uri, Properties properties)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE4MTgwNA==", "bodyText": "We have this validation in PrestoDriver, see io.prestosql.jdbc.PrestoDriver#DRIVER_URL_START\nOf course, now that PrestoDriverUri is public, it needs its own validation.\n\nmake the Make PrestoDriverUri accessible outside of package commit last, since all others are actually prerequisites for that\nin this validation here, use io.prestosql.jdbc.PrestoDriver#DRIVER_URL_START const (move it from driver to here)", "url": "https://github.com/trinodb/trino/pull/6305#discussion_r542181804", "createdAt": "2020-12-14T08:05:07Z", "author": {"login": "findepi"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoDriverUri.java", "diffHunk": "@@ -84,6 +84,7 @@\n public final class PrestoDriverUri\n {\n     private static final String JDBC_URL_START = \"jdbc:\";\n+    private static final String JDBC_SCHEME = \"presto\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMzIyNjI1", "url": "https://github.com/trinodb/trino/pull/6305#pullrequestreview-551322625", "createdAt": "2020-12-14T12:33:26Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMjozMzoyNlrOIFOUcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMjozNTozMFrOIFOZCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0ODQwMQ==", "bodyText": "Please add a test case verifying \"presto://...\" is not a valid URL\n(apparently before your change it was parsed successfully)", "url": "https://github.com/trinodb/trino/pull/6305#discussion_r542348401", "createdAt": "2020-12-14T12:33:26Z", "author": {"login": "findepi"}, "path": "presto-jdbc/src/test/java/io/prestosql/jdbc/TestPrestoDriverUri.java", "diffHunk": "@@ -68,17 +77,17 @@ public void testInvalidUrls()\n         assertInvalid(\"jdbc:presto://localhost:8080/hive/default?SSL=true&SSLVerification=\", \"Connection property 'SSLVerification' value is empty\");\n \n         // property in url multiple times\n-        assertInvalid(\"presto://localhost:8080/blackhole?password=a&password=b\", \"Connection property 'password' is in URL multiple times\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0OTQ5NQ==", "bodyText": "from cmt msg:\n\nPreviously we would parse uri with invalid scheme and without jdbc: prefix\nthat could cause java.lang.StringIndexOutOfBoundsException\n\nthis is not quite accurate, since the code was not reachable\nalso, the cmt title could be improved to suggest the validation is moved not _added:\nVerify if Presto JDBC url is not malformed within PrestoDriverUri", "url": "https://github.com/trinodb/trino/pull/6305#discussion_r542349495", "createdAt": "2020-12-14T12:35:20Z", "author": {"login": "findepi"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoDriver.java", "diffHunk": "@@ -93,7 +91,7 @@ public Connection connect(String url, Properties info)\n     public boolean acceptsURL(String url)\n             throws SQLException\n     {\n-        return url.startsWith(DRIVER_URL_START);\n+        return PrestoDriverUri.acceptsURL(url);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0OTU3OA==", "bodyText": "We do not need this overload, do we?", "url": "https://github.com/trinodb/trino/pull/6305#discussion_r542349578", "createdAt": "2020-12-14T12:35:30Z", "author": {"login": "findepi"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoDriverUri.java", "diffHunk": "@@ -119,6 +119,18 @@ private PrestoDriverUri(URI uri, Properties driverProperties)\n         initCatalogAndSchema();\n     }\n \n+    public static PrestoDriverUri create(String url, Properties properties)\n+            throws SQLException\n+    {\n+        return new PrestoDriverUri(url, properties);\n+    }\n+\n+    public static PrestoDriverUri create(String url)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 19}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "02cb50e568a231d631655c38554386439f95f648", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/02cb50e568a231d631655c38554386439f95f648", "committedDate": "2020-12-14T20:30:55Z", "message": "Make catalog and schema optional in PrestoDriverUri"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "85282868ac2a0029d99b0b6ce944e91b793c9647", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/85282868ac2a0029d99b0b6ce944e91b793c9647", "committedDate": "2020-12-14T21:23:22Z", "message": "Use PrestoDriverUri by static builder methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20fd93f322dce127bc115ac31ec406ee1661082b", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/20fd93f322dce127bc115ac31ec406ee1661082b", "committedDate": "2020-12-14T21:23:47Z", "message": "Verify if Presto JDBC uri is not malformed\n\nPreviously we would parse uri with invalid scheme and without jdbc: prefix\nthat could cause java.lang.StringIndexOutOfBoundsException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdf986aa35cc8b584b62c26c2b6feaa01258310d", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/cdf986aa35cc8b584b62c26c2b6feaa01258310d", "committedDate": "2020-12-14T21:23:48Z", "message": "Make PrestoDriverUri accessible outside of package\n\nThis allows applications using Presto JDBC to validate connection string without need to\nopen a connection, or when opening a connection is not possible."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "cdf986aa35cc8b584b62c26c2b6feaa01258310d", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/cdf986aa35cc8b584b62c26c2b6feaa01258310d", "committedDate": "2020-12-14T21:23:48Z", "message": "Make PrestoDriverUri accessible outside of package\n\nThis allows applications using Presto JDBC to validate connection string without need to\nopen a connection, or when opening a connection is not possible."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMTY0MDA2", "url": "https://github.com/trinodb/trino/pull/6305#pullrequestreview-552164006", "createdAt": "2020-12-15T07:20:21Z", "commit": {"oid": "cdf986aa35cc8b584b62c26c2b6feaa01258310d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2185, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}