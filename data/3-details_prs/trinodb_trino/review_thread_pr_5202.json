{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4NTM0NTcw", "number": 5202, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTo1ODoxMFrOEkddCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTo1OToxMlrOEkdetw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjY2NzYxOnYy", "diffSide": "RIGHT", "path": "presto-testing/src/main/java/io/prestosql/testing/datatype/DataTypeTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTo1ODoxMFrOHTapag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMDoxNTowN1rOHTbPYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEyMTU3OA==", "bodyText": "what about the below?", "url": "https://github.com/trinodb/trino/pull/5202#discussion_r490121578", "createdAt": "2020-09-17T09:58:10Z", "author": {"login": "kokosing"}, "path": "presto-testing/src/main/java/io/prestosql/testing/datatype/DataTypeTest.java", "diffHunk": "@@ -122,7 +123,7 @@ private String buildPrestoQueryWithWhereClauses(TestTable testTable)\n \n     private void checkResults(List<Type> expectedTypes, List<Object> expectedResults, MaterializedResult materializedRows)\n     {\n-        assertEquals(materializedRows.getTypes(), expectedTypes);\n+        assertThat(materializedRows.getTypes()).isEqualTo(expectedTypes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzMTI5OQ==", "bodyText": "changing to verify", "url": "https://github.com/trinodb/trino/pull/5202#discussion_r490131299", "createdAt": "2020-09-17T10:15:07Z", "author": {"login": "findepi"}, "path": "presto-testing/src/main/java/io/prestosql/testing/datatype/DataTypeTest.java", "diffHunk": "@@ -122,7 +123,7 @@ private String buildPrestoQueryWithWhereClauses(TestTable testTable)\n \n     private void checkResults(List<Type> expectedTypes, List<Object> expectedResults, MaterializedResult materializedRows)\n     {\n-        assertEquals(materializedRows.getTypes(), expectedTypes);\n+        assertThat(materializedRows.getTypes()).isEqualTo(expectedTypes);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEyMTU3OA=="}, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjY3MTkxOnYy", "diffSide": "RIGHT", "path": "presto-benchto-benchmarks/src/test/java/io/prestosql/sql/planner/AbstractCostBasedPlanTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTo1OToxMlrOHTasAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTo1OToxMlrOHTasAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEyMjI0Mw==", "bodyText": "The former name may encourage \"put here anything approach\".\n\nActually that was a goal ;)", "url": "https://github.com/trinodb/trino/pull/5202#discussion_r490122243", "createdAt": "2020-09-17T09:59:12Z", "author": {"login": "kokosing"}, "path": "presto-benchto-benchmarks/src/test/java/io/prestosql/sql/planner/AbstractCostBasedPlanTest.java", "diffHunk": "@@ -43,7 +43,7 @@\n import static io.prestosql.sql.planner.LogicalPlanner.Stage.OPTIMIZED_AND_VALIDATED;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2984, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}