{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMDYwMjc0", "number": 3614, "title": "Improve predicate push into RowNumberNode", "bodyText": "", "createdAt": "2020-05-04T16:40:08Z", "url": "https://github.com/trinodb/trino/pull/3614", "merged": true, "mergeCommit": {"oid": "4bafa8409a5255ae0ace88b05b78e9b77c4129e3"}, "closed": true, "closedAt": "2020-05-15T06:10:57Z", "author": {"login": "kasiafi"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgpzmwAFqTQxMDM1NTA5Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg9JtCABqjMzMzMzNTkzMDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMzU1MDkz", "url": "https://github.com/trinodb/trino/pull/3614#pullrequestreview-410355093", "createdAt": "2020-05-12T19:27:09Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOToyNzoxMFrOGUVpjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOTo1MjoxNFrOGUWg1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3OTQwNA==", "bodyText": "Make commit message more explicit: \"Verify arguments to RowNumberNode constructor\"", "url": "https://github.com/trinodb/trino/pull/3614#discussion_r423979404", "createdAt": "2020-05-12T19:27:10Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/plan/RowNumberNode.java", "diffHunk": "@@ -63,6 +63,7 @@ public RowNumberNode(\n         checkArgument(!orderSensitive || partitionBy.isEmpty(), \"unexpected partitioning in order sensitive node\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk5MzU1Nw==", "bodyText": "I'm not sure I understand why this line changed. Can you explain?", "url": "https://github.com/trinodb/trino/pull/3614#discussion_r423993557", "createdAt": "2020-05-12T19:52:14Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/optimizations/WindowFilterPushDown.java", "diffHunk": "@@ -169,8 +171,11 @@ public PlanNode visitFilter(FilterNode node, RewriteContext<Void> context)\n                 OptionalInt upperBound = extractUpperBound(tupleDomain, rowNumberSymbol);\n \n                 if (upperBound.isPresent()) {\n+                    if (upperBound.getAsInt() <= 0) {\n+                        return new ValuesNode(node.getId(), node.getOutputSymbols(), ImmutableList.of());\n+                    }\n                     source = mergeLimit(((RowNumberNode) source), upperBound.getAsInt());\n-                    return rewriteFilterSource(node, source, rowNumberSymbol, upperBound.getAsInt());\n+                    return rewriteFilterSource(node, source, rowNumberSymbol, ((RowNumberNode) source).getMaxRowCountPerPartition().get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0142fcd53f5e91c7ce043caeaa7121f560a83cb9", "author": {"user": {"login": "kasiafi", "name": null}}, "url": "https://github.com/trinodb/trino/commit/0142fcd53f5e91c7ce043caeaa7121f560a83cb9", "committedDate": "2020-05-13T18:25:33Z", "message": "Verify arguments to RowNumberNode constructor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ef26dd200cfeadf4a2c0c543279a05ccd8399fc", "author": {"user": {"login": "kasiafi", "name": null}}, "url": "https://github.com/trinodb/trino/commit/4ef26dd200cfeadf4a2c0c543279a05ccd8399fc", "committedDate": "2020-05-13T18:26:00Z", "message": "Improve Filter predicate push into RowNumber\n\nChanges WindowFilterPushdown when processing FilterNode on top of:\n- RowNumberNode,\n- WindowNode transformed into TopNRowNumberNode.\n\nchange 1. When extracting the upper bound for row number symbol from Filter predicate,\nalso non-positive values are extracted (previously only positive values were considered).\nNow, if the upper bound for row number symbol is 0 or negative, the plan is replaced\nwith empty values.\n\nchange 2. After adding limit to RowNumberNode / TopNRowNumberNode, the newly established\nrange for row number symbol is compared with the Filter predicate. Previously, equality\ncheck was performed. Filter predicate was considered satisfied only if it defined a range\nthat was lower-unbounded, upper-closed on the exact maxRowCount value (e.g. \"row_number <= 5\").\nNow it is checked that the range for row number symbol is _contained_ in the range defined\nby the Filter predicate. This allows to determine that the predicate is satisfied in more cases\ne.g. maxRowCountPerPartition = 5 satisfies predicate \"row_number > -3 AND row_number < 10\".\nAs a result, filter is simplified or even removed from the plan."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "4ef26dd200cfeadf4a2c0c543279a05ccd8399fc", "author": {"user": {"login": "kasiafi", "name": null}}, "url": "https://github.com/trinodb/trino/commit/4ef26dd200cfeadf4a2c0c543279a05ccd8399fc", "committedDate": "2020-05-13T18:26:00Z", "message": "Improve Filter predicate push into RowNumber\n\nChanges WindowFilterPushdown when processing FilterNode on top of:\n- RowNumberNode,\n- WindowNode transformed into TopNRowNumberNode.\n\nchange 1. When extracting the upper bound for row number symbol from Filter predicate,\nalso non-positive values are extracted (previously only positive values were considered).\nNow, if the upper bound for row number symbol is 0 or negative, the plan is replaced\nwith empty values.\n\nchange 2. After adding limit to RowNumberNode / TopNRowNumberNode, the newly established\nrange for row number symbol is compared with the Filter predicate. Previously, equality\ncheck was performed. Filter predicate was considered satisfied only if it defined a range\nthat was lower-unbounded, upper-closed on the exact maxRowCount value (e.g. \"row_number <= 5\").\nNow it is checked that the range for row number symbol is _contained_ in the range defined\nby the Filter predicate. This allows to determine that the predicate is satisfied in more cases\ne.g. maxRowCountPerPartition = 5 satisfies predicate \"row_number > -3 AND row_number < 10\".\nAs a result, filter is simplified or even removed from the plan."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1368, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}