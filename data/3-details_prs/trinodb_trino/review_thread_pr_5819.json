{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NDY4MzQy", "number": 5819, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjoxMjozNlrOE1S1-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjo1MDoxM1rOE1T3Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MzE4NzE0OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestHiveDynamicPartitionPruning.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjoxMjozNlrOHtfQRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjozMDowNFrOHtgBXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ2MDAzOA==", "bodyText": "slightly tangential to this PR, but this property seems to get overriden, since setSingleExtraProperty replaces the previously set properties?", "url": "https://github.com/trinodb/trino/pull/5819#discussion_r517460038", "createdAt": "2020-11-04T16:12:36Z", "author": {"login": "phd3"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestHiveDynamicPartitionPruning.java", "diffHunk": "@@ -63,11 +63,11 @@ protected QueryRunner createQueryRunner()\n             throws Exception\n     {\n         return HiveQueryRunner.builder()\n-                .setInitialTables(getTables())\n-                .setHiveProperties(ImmutableMap.of(\"hive.dynamic-filtering-probe-blocking-timeout\", \"1h\"))\n                 // Reduced partitioned join limit for large DF to enable DF min/max collection with ENABLE_LARGE_DYNAMIC_FILTERS\n                 .setSingleExtraProperty(\"dynamic-filtering.large-partitioned.max-distinct-values-per-driver\", \"100\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4e0d030776c0e40547dde263d22d224156eaf3d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ2ODYyNw==", "bodyText": "Good catch.", "url": "https://github.com/trinodb/trino/pull/5819#discussion_r517468627", "createdAt": "2020-11-04T16:24:45Z", "author": {"login": "findepi"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestHiveDynamicPartitionPruning.java", "diffHunk": "@@ -63,11 +63,11 @@ protected QueryRunner createQueryRunner()\n             throws Exception\n     {\n         return HiveQueryRunner.builder()\n-                .setInitialTables(getTables())\n-                .setHiveProperties(ImmutableMap.of(\"hive.dynamic-filtering-probe-blocking-timeout\", \"1h\"))\n                 // Reduced partitioned join limit for large DF to enable DF min/max collection with ENABLE_LARGE_DYNAMIC_FILTERS\n                 .setSingleExtraProperty(\"dynamic-filtering.large-partitioned.max-distinct-values-per-driver\", \"100\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ2MDAzOA=="}, "originalCommit": {"oid": "a4e0d030776c0e40547dde263d22d224156eaf3d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ3MjYwNg==", "bodyText": "Added a fix for this.\ncc @raunaqmorarka", "url": "https://github.com/trinodb/trino/pull/5819#discussion_r517472606", "createdAt": "2020-11-04T16:30:04Z", "author": {"login": "findepi"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestHiveDynamicPartitionPruning.java", "diffHunk": "@@ -63,11 +63,11 @@ protected QueryRunner createQueryRunner()\n             throws Exception\n     {\n         return HiveQueryRunner.builder()\n-                .setInitialTables(getTables())\n-                .setHiveProperties(ImmutableMap.of(\"hive.dynamic-filtering-probe-blocking-timeout\", \"1h\"))\n                 // Reduced partitioned join limit for large DF to enable DF min/max collection with ENABLE_LARGE_DYNAMIC_FILTERS\n                 .setSingleExtraProperty(\"dynamic-filtering.large-partitioned.max-distinct-values-per-driver\", \"100\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ2MDAzOA=="}, "originalCommit": {"oid": "a4e0d030776c0e40547dde263d22d224156eaf3d"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MzM1MzgzOnYy", "diffSide": "RIGHT", "path": "presto-testing/src/main/java/io/prestosql/testing/DistributedQueryRunner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjo1MDoxM1rOHtg4UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNzowNzo0M1rOHthm3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ4NjY3Mw==", "bodyText": "nitL May be Add the given key and value to the extra properties or remove the comment?", "url": "https://github.com/trinodb/trino/pull/5819#discussion_r517486673", "createdAt": "2020-11-04T16:50:13Z", "author": {"login": "phd3"}, "path": "presto-testing/src/main/java/io/prestosql/testing/DistributedQueryRunner.java", "diffHunk": "@@ -554,18 +554,17 @@ public Builder setNodeCount(int nodeCount)\n \n         public Builder setExtraProperties(Map<String, String> extraProperties)\n         {\n-            this.extraProperties = extraProperties;\n+            this.extraProperties = new HashMap<>(extraProperties);\n             return this;\n         }\n \n         /**\n          * Sets extra properties being equal to a map containing given key and value.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ5ODU5MQ==", "bodyText": "Removed altogether.", "url": "https://github.com/trinodb/trino/pull/5819#discussion_r517498591", "createdAt": "2020-11-04T17:07:43Z", "author": {"login": "findepi"}, "path": "presto-testing/src/main/java/io/prestosql/testing/DistributedQueryRunner.java", "diffHunk": "@@ -554,18 +554,17 @@ public Builder setNodeCount(int nodeCount)\n \n         public Builder setExtraProperties(Map<String, String> extraProperties)\n         {\n-            this.extraProperties = extraProperties;\n+            this.extraProperties = new HashMap<>(extraProperties);\n             return this;\n         }\n \n         /**\n          * Sets extra properties being equal to a map containing given key and value.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ4NjY3Mw=="}, "originalCommit": null, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4943, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}