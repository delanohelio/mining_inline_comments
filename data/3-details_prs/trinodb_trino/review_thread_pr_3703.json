{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NDM4OTkz", "number": 3703, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMDozNjoyOVrOD7l29w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwODo0NTowOVrOD7-Czw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODEyODU1OnYy", "diffSide": "LEFT", "path": "presto-main/src/main/java/io/prestosql/server/ServerConfig.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMDozNjoyOVrOGUAiAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNzo1Mzo0NFrOGUSTMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzMzQxMQ==", "bodyText": "Let's run this in a separate PR to get feedback (if any) on this.", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r423633411", "createdAt": "2020-05-12T10:36:29Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/server/ServerConfig.java", "diffHunk": "@@ -16,14 +16,11 @@\n import io.airlift.configuration.Config;\n import io.airlift.units.Duration;\n \n-import javax.validation.constraints.NotNull;\n-\n import static java.util.concurrent.TimeUnit.MINUTES;\n \n public class ServerConfig\n {\n     private boolean coordinator = true;\n-    private String prestoVersion = getClass().getPackage().getImplementationVersion();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg2MjIyOA==", "bodyText": "This is required for the next change. This config was added in ancient times for no good reason. I can get it merged first if you\u2019re concerned.", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r423862228", "createdAt": "2020-05-12T16:16:57Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/server/ServerConfig.java", "diffHunk": "@@ -16,14 +16,11 @@\n import io.airlift.configuration.Config;\n import io.airlift.units.Duration;\n \n-import javax.validation.constraints.NotNull;\n-\n import static java.util.concurrent.TimeUnit.MINUTES;\n \n public class ServerConfig\n {\n     private boolean coordinator = true;\n-    private String prestoVersion = getClass().getPackage().getImplementationVersion();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzMzQxMQ=="}, "originalCommit": null, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkyNDUzMA==", "bodyText": "I extracted this to #3708", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r423924530", "createdAt": "2020-05-12T17:53:44Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/server/ServerConfig.java", "diffHunk": "@@ -16,14 +16,11 @@\n import io.airlift.configuration.Config;\n import io.airlift.units.Duration;\n \n-import javax.validation.constraints.NotNull;\n-\n import static java.util.concurrent.TimeUnit.MINUTES;\n \n public class ServerConfig\n {\n     private boolean coordinator = true;\n-    private String prestoVersion = getClass().getPackage().getImplementationVersion();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzMzQxMQ=="}, "originalCommit": null, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODEzOTY5OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/version/EmbedVersion.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMDozOTo0OFrOGUAoyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNzoxMToxOVrOGUQsgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzNTE0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Class<?> generatedClass = createClass(format(\"Presto_%s_\", version));\n          \n          \n            \n                    Class<?> generatedClass = createClass(format(\"Presto_%s___\", version));\n          \n      \n    \n    \n  \n\n-- that was intentional, to visually separate version string (which may be short or longer) from the timestamp digits unconditionally appended to the class name later on.", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r423635147", "createdAt": "2020-05-12T10:39:48Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/version/EmbedVersion.java", "diffHunk": "@@ -47,18 +46,23 @@\n     private final MethodHandle callableConstructor;\n \n     @Inject\n-    public EmbedVersion(ServerConfig serverConfig)\n+    public EmbedVersion(NodeVersion version)\n     {\n-        Class<?> generatedClass = createClass(serverConfig);\n+        this(version.getVersion());\n+    }\n+\n+    public EmbedVersion(String version)\n+    {\n+        Class<?> generatedClass = createClass(format(\"Presto_%s_\", version));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg2MzU4MA==", "bodyText": "There are two underscores with this change (the class code adds one). We added three here to separate when there were two versions (now there is only one). I\u2019m fine making it longer, but it didn\u2019t seem necessary.", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r423863580", "createdAt": "2020-05-12T16:18:50Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/version/EmbedVersion.java", "diffHunk": "@@ -47,18 +46,23 @@\n     private final MethodHandle callableConstructor;\n \n     @Inject\n-    public EmbedVersion(ServerConfig serverConfig)\n+    public EmbedVersion(NodeVersion version)\n     {\n-        Class<?> generatedClass = createClass(serverConfig);\n+        this(version.getVersion());\n+    }\n+\n+    public EmbedVersion(String version)\n+    {\n+        Class<?> generatedClass = createClass(format(\"Presto_%s_\", version));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzNTE0Nw=="}, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg5ODI0MQ==", "bodyText": "I updated this to match your suggestion.", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r423898241", "createdAt": "2020-05-12T17:11:19Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/version/EmbedVersion.java", "diffHunk": "@@ -47,18 +46,23 @@\n     private final MethodHandle callableConstructor;\n \n     @Inject\n-    public EmbedVersion(ServerConfig serverConfig)\n+    public EmbedVersion(NodeVersion version)\n     {\n-        Class<?> generatedClass = createClass(serverConfig);\n+        this(version.getVersion());\n+    }\n+\n+    public EmbedVersion(String version)\n+    {\n+        Class<?> generatedClass = createClass(format(\"Presto_%s_\", version));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzNTE0Nw=="}, "originalCommit": null, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODE0NDA1OnYy", "diffSide": "RIGHT", "path": "presto-server-main/src/main/java/io/prestosql/server/PrestoServer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMDo0MTowOVrOGUArrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNzoxOToyOFrOGUQ_zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzNTg4NQ==", "bodyText": "remove redundant braces", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r423635885", "createdAt": "2020-05-12T10:41:09Z", "author": {"login": "findepi"}, "path": "presto-server-main/src/main/java/io/prestosql/server/PrestoServer.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.server;\n+\n+import com.google.common.base.StandardSystemProperty;\n+import com.google.common.primitives.Ints;\n+\n+import static com.google.common.base.MoreObjects.firstNonNull;\n+import static java.lang.String.format;\n+\n+public final class PrestoServer\n+{\n+    public static void main(String[] args)\n+    {\n+        String javaVersion = firstNonNull(StandardSystemProperty.JAVA_VERSION.value(), \"null\");\n+        Integer major = Ints.tryParse(javaVersion);\n+        if ((major == null) || (major < 11)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg2OTY2OQ==", "bodyText": "This is standard formatting. You can find thousands of examples of this in the code base. You can also find plenty without braces. I usually write them for and/or for clarify and visual separation.", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r423869669", "createdAt": "2020-05-12T16:27:35Z", "author": {"login": "electrum"}, "path": "presto-server-main/src/main/java/io/prestosql/server/PrestoServer.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.server;\n+\n+import com.google.common.base.StandardSystemProperty;\n+import com.google.common.primitives.Ints;\n+\n+import static com.google.common.base.MoreObjects.firstNonNull;\n+import static java.lang.String.format;\n+\n+public final class PrestoServer\n+{\n+    public static void main(String[] args)\n+    {\n+        String javaVersion = firstNonNull(StandardSystemProperty.JAVA_VERSION.value(), \"null\");\n+        Integer major = Ints.tryParse(javaVersion);\n+        if ((major == null) || (major < 11)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzNTg4NQ=="}, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkwMzE4Mg==", "bodyText": "I checked and we actually have far more without parentheses, so I will change this.", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r423903182", "createdAt": "2020-05-12T17:19:28Z", "author": {"login": "electrum"}, "path": "presto-server-main/src/main/java/io/prestosql/server/PrestoServer.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.server;\n+\n+import com.google.common.base.StandardSystemProperty;\n+import com.google.common.primitives.Ints;\n+\n+import static com.google.common.base.MoreObjects.firstNonNull;\n+import static java.lang.String.format;\n+\n+public final class PrestoServer\n+{\n+    public static void main(String[] args)\n+    {\n+        String javaVersion = firstNonNull(StandardSystemProperty.JAVA_VERSION.value(), \"null\");\n+        Integer major = Ints.tryParse(javaVersion);\n+        if ((major == null) || (major < 11)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzNTg4NQ=="}, "originalCommit": null, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODE0NTcxOnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMDo0MTo0M1rOGUAszA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNzoxNDoyOVrOGUQz2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzNjE3Mg==", "bodyText": "revert the rename, this is going to be annoyance for developers within the community (all the saved launch configurations...)\ncall the new class simply Main", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r423636172", "createdAt": "2020-05-12T10:41:43Z", "author": {"login": "findepi"}, "path": "README.md", "diffHunk": "@@ -39,7 +39,7 @@ After opening the project in IntelliJ, double check that the Java SDK is properl\n \n Presto comes with sample configuration that should work out-of-the-box for development. Use the following options to create a run configuration:\n \n-* Main Class: `io.prestosql.server.PrestoServer`\n+* Main Class: `io.prestosql.server.Server`", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzODM5OA==", "bodyText": "add some summary of changes (and purpose) to the Run PrestoServer main on Java 8 for version check commit, or split it up, as the purpose is hard to infer from the diff.", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r423638398", "createdAt": "2020-05-12T10:45:45Z", "author": {"login": "findepi"}, "path": "README.md", "diffHunk": "@@ -39,7 +39,7 @@ After opening the project in IntelliJ, double check that the Java SDK is properl\n \n Presto comes with sample configuration that should work out-of-the-box for development. Use the following options to create a run configuration:\n \n-* Main Class: `io.prestosql.server.PrestoServer`\n+* Main Class: `io.prestosql.server.Server`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzNjE3Mg=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg2NjAxNw==", "bodyText": "No, keeping the class name is intentional as it shows up in jps and other JVM tools. Minimizing the administrator visible changes outweighs the minor developer inconvenience (it\u2019s one change of the class name your IDE run configuration \u2014 we had a far larger change when we moved all the tests to a new package).", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r423866017", "createdAt": "2020-05-12T16:22:20Z", "author": {"login": "electrum"}, "path": "README.md", "diffHunk": "@@ -39,7 +39,7 @@ After opening the project in IntelliJ, double check that the Java SDK is properl\n \n Presto comes with sample configuration that should work out-of-the-box for development. Use the following options to create a run configuration:\n \n-* Main Class: `io.prestosql.server.PrestoServer`\n+* Main Class: `io.prestosql.server.Server`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzNjE3Mg=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkwMDEyMw==", "bodyText": "Good idea, I added a commit description. The purpose is to fail with a friendly error message rather than unsupported class file version.", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r423900123", "createdAt": "2020-05-12T17:14:29Z", "author": {"login": "electrum"}, "path": "README.md", "diffHunk": "@@ -39,7 +39,7 @@ After opening the project in IntelliJ, double check that the Java SDK is properl\n \n Presto comes with sample configuration that should work out-of-the-box for development. Use the following options to create a run configuration:\n \n-* Main Class: `io.prestosql.server.PrestoServer`\n+* Main Class: `io.prestosql.server.Server`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzNjE3Mg=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjA1OTg2OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwODozNzo0M1rOGUnTpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzo1NjozMVrOGU9IMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI2ODcwOQ==", "bodyText": "Build server for Java 11\n\nMaybe add to cmt msg some hint that requiring Java 11+ for compilation (of every module) is conscious choice.", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r424268709", "createdAt": "2020-05-13T08:37:43Z", "author": {"login": "findepi"}, "path": "pom.xml", "diffHunk": "@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.airlift</groupId>\n         <artifactId>airbase</artifactId>\n-        <version>100</version>\n+        <version>101</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyNjIyNw==", "bodyText": "Good idea, updated", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r424626227", "createdAt": "2020-05-13T17:56:31Z", "author": {"login": "electrum"}, "path": "pom.xml", "diffHunk": "@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.airlift</groupId>\n         <artifactId>airbase</artifactId>\n-        <version>100</version>\n+        <version>101</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI2ODcwOQ=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjA2NTkxOnYy", "diffSide": "RIGHT", "path": "presto-server-main/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwODozOToxMFrOGUnXQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzo1Njo1MFrOGU9I5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI2OTYzMg==", "bodyText": "needed?", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r424269632", "createdAt": "2020-05-13T08:39:10Z", "author": {"login": "findepi"}, "path": "presto-server-main/pom.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>io.prestosql</groupId>\n+        <artifactId>presto-root</artifactId>\n+        <version>334-SNAPSHOT</version>\n+    </parent>\n+\n+    <artifactId>presto-server-main</artifactId>\n+    <name>presto-server-main</name>\n+\n+    <properties>\n+        <air.main.basedir>${project.parent.basedir}</air.main.basedir>\n+        <air.check.skip-enforcer>true</air.check.skip-enforcer>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyNjQwNQ==", "bodyText": "Yes, I'll add a comment", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r424626405", "createdAt": "2020-05-13T17:56:50Z", "author": {"login": "electrum"}, "path": "presto-server-main/pom.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>io.prestosql</groupId>\n+        <artifactId>presto-root</artifactId>\n+        <version>334-SNAPSHOT</version>\n+    </parent>\n+\n+    <artifactId>presto-server-main</artifactId>\n+    <name>presto-server-main</name>\n+\n+    <properties>\n+        <air.main.basedir>${project.parent.basedir}</air.main.basedir>\n+        <air.check.skip-enforcer>true</air.check.skip-enforcer>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI2OTYzMg=="}, "originalCommit": null, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjA3MTc4OnYy", "diffSide": "RIGHT", "path": "presto-server-main/src/main/java/io/prestosql/server/PrestoServer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwODo0MDozNlrOGUna3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowMDo0OFrOGU9SnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI3MDU1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String javaVersion = firstNonNull(StandardSystemProperty.JAVA_VERSION.value(), \"null\");\n          \n          \n            \n                    String javaVersion = Strings.nullToEmpty(StandardSystemProperty.JAVA_VERSION.value());", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r424270556", "createdAt": "2020-05-13T08:40:36Z", "author": {"login": "findepi"}, "path": "presto-server-main/src/main/java/io/prestosql/server/PrestoServer.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.server;\n+\n+import com.google.common.base.StandardSystemProperty;\n+import com.google.common.primitives.Ints;\n+\n+import static com.google.common.base.MoreObjects.firstNonNull;\n+import static java.lang.String.format;\n+\n+public final class PrestoServer\n+{\n+    private PrestoServer() {}\n+\n+    public static void main(String[] args)\n+    {\n+        String javaVersion = firstNonNull(StandardSystemProperty.JAVA_VERSION.value(), \"null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyODg5Mw==", "bodyText": "This was intentional so the message would be (found null) instead of (found ). In practice, this should be impossible anyway, so I'll change it to your suggestion.", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r424628893", "createdAt": "2020-05-13T18:00:48Z", "author": {"login": "electrum"}, "path": "presto-server-main/src/main/java/io/prestosql/server/PrestoServer.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.server;\n+\n+import com.google.common.base.StandardSystemProperty;\n+import com.google.common.primitives.Ints;\n+\n+import static com.google.common.base.MoreObjects.firstNonNull;\n+import static java.lang.String.format;\n+\n+public final class PrestoServer\n+{\n+    private PrestoServer() {}\n+\n+    public static void main(String[] args)\n+    {\n+        String javaVersion = firstNonNull(StandardSystemProperty.JAVA_VERSION.value(), \"null\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI3MDU1Ng=="}, "originalCommit": null, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjA4MDg5OnYy", "diffSide": "RIGHT", "path": "presto-server-main/src/main/java/io/prestosql/server/PrestoServer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwODo0Mjo0NlrOGUngmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODozNjo0M1rOGU-mbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI3MjAyNQ==", "bodyText": "Can the sys prop return sth like 11.0.3?\n(then we would get null here)", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r424272025", "createdAt": "2020-05-13T08:42:46Z", "author": {"login": "findepi"}, "path": "presto-server-main/src/main/java/io/prestosql/server/PrestoServer.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.server;\n+\n+import com.google.common.base.StandardSystemProperty;\n+import com.google.common.primitives.Ints;\n+\n+import static com.google.common.base.MoreObjects.firstNonNull;\n+import static java.lang.String.format;\n+\n+public final class PrestoServer\n+{\n+    private PrestoServer() {}\n+\n+    public static void main(String[] args)\n+    {\n+        String javaVersion = firstNonNull(StandardSystemProperty.JAVA_VERSION.value(), \"null\");\n+        Integer major = Ints.tryParse(javaVersion);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1MDM1MQ==", "bodyText": "Thanks, I somehow dropped the split on . when refactoring this.", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r424650351", "createdAt": "2020-05-13T18:36:43Z", "author": {"login": "electrum"}, "path": "presto-server-main/src/main/java/io/prestosql/server/PrestoServer.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.server;\n+\n+import com.google.common.base.StandardSystemProperty;\n+import com.google.common.primitives.Ints;\n+\n+import static com.google.common.base.MoreObjects.firstNonNull;\n+import static java.lang.String.format;\n+\n+public final class PrestoServer\n+{\n+    private PrestoServer() {}\n+\n+    public static void main(String[] args)\n+    {\n+        String javaVersion = firstNonNull(StandardSystemProperty.JAVA_VERSION.value(), \"null\");\n+        Integer major = Ints.tryParse(javaVersion);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI3MjAyNQ=="}, "originalCommit": null, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjA5MTAzOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/server/Server.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwODo0NTowOVrOGUnmxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODo1MTozOVrOGU_JLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI3MzYwNA==", "bodyText": "Add a comment that this main method is for developers' only.\nIn fact, maybe we remove this method at all?\nWe could change README -- instead of changing the class name, you could change the module name to use the new module.", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r424273604", "createdAt": "2020-05-13T08:45:09Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/server/Server.java", "diffHunk": "@@ -55,20 +55,18 @@\n import java.nio.file.Paths;\n import java.util.Set;\n \n-import static com.google.common.base.MoreObjects.firstNonNull;\n import static com.google.common.collect.ImmutableSet.toImmutableSet;\n import static io.airlift.discovery.client.ServiceAnnouncement.ServiceAnnouncementBuilder;\n import static io.airlift.discovery.client.ServiceAnnouncement.serviceAnnouncement;\n import static io.prestosql.server.PrestoSystemRequirements.verifyJvmRequirements;\n import static io.prestosql.server.PrestoSystemRequirements.verifySystemTimeIsReasonable;\n import static java.nio.file.LinkOption.NOFOLLOW_LINKS;\n \n-public class PrestoServer\n+public class Server\n {\n     public static void main(String[] args)\n     {\n-        String version = PrestoServer.class.getPackage().getImplementationVersion();\n-        new PrestoServer().start(firstNonNull(version, \"unknown\"));\n+        new Server().start(\"testversion\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1OTI0Nw==", "bodyText": "We'd have to move the etc directory as well, but that seems better. I was thinking this would be a temporary change, but it seems good to keep this special main method around to provide a good error message when we update the JVM requirement.", "url": "https://github.com/trinodb/trino/pull/3703#discussion_r424659247", "createdAt": "2020-05-13T18:51:39Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/server/Server.java", "diffHunk": "@@ -55,20 +55,18 @@\n import java.nio.file.Paths;\n import java.util.Set;\n \n-import static com.google.common.base.MoreObjects.firstNonNull;\n import static com.google.common.collect.ImmutableSet.toImmutableSet;\n import static io.airlift.discovery.client.ServiceAnnouncement.ServiceAnnouncementBuilder;\n import static io.airlift.discovery.client.ServiceAnnouncement.serviceAnnouncement;\n import static io.prestosql.server.PrestoSystemRequirements.verifyJvmRequirements;\n import static io.prestosql.server.PrestoSystemRequirements.verifySystemTimeIsReasonable;\n import static java.nio.file.LinkOption.NOFOLLOW_LINKS;\n \n-public class PrestoServer\n+public class Server\n {\n     public static void main(String[] args)\n     {\n-        String version = PrestoServer.class.getPackage().getImplementationVersion();\n-        new PrestoServer().start(firstNonNull(version, \"unknown\"));\n+        new Server().start(\"testversion\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI3MzYwNA=="}, "originalCommit": null, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 108, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}