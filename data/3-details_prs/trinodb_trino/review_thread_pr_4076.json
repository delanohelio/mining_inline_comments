{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NDUwOTUw", "number": 4076, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMToyNzowNlrOEHFXkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNjozMjo1NFrOENJ_BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1ODYzNDQwOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/SystemSessionProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMToyNzowNlrOGmRhvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQxMzozMDoyNFrOGmmk6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc4NjIzNg==", "bodyText": "I think this name is a little confusing with the change in https://github.com/prestosql/presto/pull/2083/files (query_max_input_data_size). How about query_max_scan_raw_bytes? Or query_max_raw_input_size as the method name for stage stats suggests.", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r442786236", "createdAt": "2020-06-19T11:27:06Z", "author": {"login": "Lewuathe"}, "path": "presto-main/src/main/java/io/prestosql/SystemSessionProperties.java", "diffHunk": "@@ -67,6 +68,7 @@\n     public static final String QUERY_MAX_RUN_TIME = \"query_max_run_time\";\n     public static final String RESOURCE_OVERCOMMIT = \"resource_overcommit\";\n     public static final String QUERY_MAX_CPU_TIME = \"query_max_cpu_time\";\n+    public static final String QUERY_MAX_SCAN_BYTES = \"query_max_scan_bytes\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzMTExNQ==", "bodyText": "Could you also add a test in TestQueryManager as #2083 does?\n\nThanks for you reply, I will add a testcase and fix the comments.", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r443131115", "createdAt": "2020-06-20T13:30:24Z", "author": {"login": "shenh062326"}, "path": "presto-main/src/main/java/io/prestosql/SystemSessionProperties.java", "diffHunk": "@@ -67,6 +68,7 @@\n     public static final String QUERY_MAX_RUN_TIME = \"query_max_run_time\";\n     public static final String RESOURCE_OVERCOMMIT = \"resource_overcommit\";\n     public static final String QUERY_MAX_CPU_TIME = \"query_max_cpu_time\";\n+    public static final String QUERY_MAX_SCAN_BYTES = \"query_max_scan_bytes\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc4NjIzNg=="}, "originalCommit": null, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1ODY2MDQ1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryExecution.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMTozNzoyM1rOGmRx4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMTozNzoyM1rOGmRx4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc5MDM2OQ==", "bodyText": "Since DataSize(double size, Unit unit) construtor is deprecated, we can use DataSize.ofBytes(long) instead.", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r442790369", "createdAt": "2020-06-19T11:37:23Z", "author": {"login": "Lewuathe"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryExecution.java", "diffHunk": "@@ -335,6 +336,21 @@ public Duration getTotalCpuTime()\n         return scheduler.getTotalCpuTime();\n     }\n \n+    @Override\n+    public DataSize getScannedBytes()\n+    {\n+        SqlQueryScheduler scheduler = queryScheduler.get();\n+        Optional<QueryInfo> finalQueryInfo = stateMachine.getFinalQueryInfo();\n+        if (finalQueryInfo.isPresent()) {\n+            return finalQueryInfo.get().getQueryStats().getRawInputDataSize();\n+        }\n+        if (scheduler == null) {\n+            return DataSize.succinctBytes(0);\n+        }\n+        StageInfo root = scheduler.getStageInfo();\n+        return new DataSize(stateMachine.getScanedBytes(root), BYTE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1ODY2NjU1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMTo0MDowMFrOGmR1wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMTo0MDowMFrOGmR1wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc5MTM2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (limit.getValue() > 0) { // only check when limit are setted\n          \n          \n            \n                        if (limit.getValue() > 0) { // only check when limits are set", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r442791360", "createdAt": "2020-06-19T11:40:00Z", "author": {"login": "Lewuathe"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryManager.java", "diffHunk": "@@ -313,4 +323,21 @@ private void enforceCpuLimits()\n             }\n         }\n     }\n+\n+\n+    /**\n+     * Enforce query scan bytes limits\n+     */\n+    private void enforceScanLimits()\n+    {\n+        for (QueryExecution query : queryTracker.getAllQueries()) {\n+            DataSize limit = getQueryMaxScanBytes(query.getSession());\n+            if (limit.getValue() > 0) { // only check when limit are setted", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDk0OTU1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryManager.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQxNjoxMzoxMVrOGmnPHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNjoyMTozM1rOGqtXQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE0MTkxNg==", "bodyText": "You can make this function similar to https://github.com/prestosql/presto/blob/0050a9801f85e3411a4bb74fc0e8ea6ead50d41c/presto-main/src/main/java/io/prestosql/execution/SqlQueryManager.java#L335 just use query.getQueryInfo().getQueryStats().getPhysicalInputDataSize() instead.\nBoth getScanedBytes functions shouldn't be needed.", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r443141916", "createdAt": "2020-06-20T16:13:11Z", "author": {"login": "raunaqmorarka"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryManager.java", "diffHunk": "@@ -313,4 +323,21 @@ private void enforceCpuLimits()\n             }\n         }\n     }\n+\n+\n+    /**\n+     * Enforce query scan bytes limits\n+     */\n+    private void enforceScanLimits()\n+    {\n+        for (QueryExecution query : queryTracker.getAllQueries()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc1NDIxNw==", "bodyText": "As mentioned by @losipiuk in #2083 (comment)  , there may be performance issues with getQueryInfo. And physicalInputDataSize is not in BasicQueryInfo. should I add physicalInputDataSize to BasicQueryInfo, or add new functions to get physicalInputDataSize.\nlosipiuk 29 days ago Member\nI am a bit concerned about performance impact from frequent calling to getQueryInfo(). Can you use more lightweight getBasicQueryInfo instead?", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r444754217", "createdAt": "2020-06-24T09:09:05Z", "author": {"login": "shenh062326"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryManager.java", "diffHunk": "@@ -313,4 +323,21 @@ private void enforceCpuLimits()\n             }\n         }\n     }\n+\n+\n+    /**\n+     * Enforce query scan bytes limits\n+     */\n+    private void enforceScanLimits()\n+    {\n+        for (QueryExecution query : queryTracker.getAllQueries()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE0MTkxNg=="}, "originalCommit": null, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcyODgyOQ==", "bodyText": "@raunaqmorarka Can you take a look at this?", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r446728829", "createdAt": "2020-06-29T01:33:25Z", "author": {"login": "shenh062326"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryManager.java", "diffHunk": "@@ -313,4 +323,21 @@ private void enforceCpuLimits()\n             }\n         }\n     }\n+\n+\n+    /**\n+     * Enforce query scan bytes limits\n+     */\n+    private void enforceScanLimits()\n+    {\n+        for (QueryExecution query : queryTracker.getAllQueries()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE0MTkxNg=="}, "originalCommit": null, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk4MTEwMg==", "bodyText": "We can add physicalInputDataSize to BasicQueryStats and switch to using query.getBasicQueryInfo().getBasicQueryStats().getPhysicalInputDataSize()", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r446981102", "createdAt": "2020-06-29T13:42:49Z", "author": {"login": "raunaqmorarka"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryManager.java", "diffHunk": "@@ -313,4 +323,21 @@ private void enforceCpuLimits()\n             }\n         }\n     }\n+\n+\n+    /**\n+     * Enforce query scan bytes limits\n+     */\n+    private void enforceScanLimits()\n+    {\n+        for (QueryExecution query : queryTracker.getAllQueries()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE0MTkxNg=="}, "originalCommit": null, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzNjYxMA==", "bodyText": "Done", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r447436610", "createdAt": "2020-06-30T06:21:33Z", "author": {"login": "shenh062326"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryManager.java", "diffHunk": "@@ -313,4 +323,21 @@ private void enforceCpuLimits()\n             }\n         }\n     }\n+\n+\n+    /**\n+     * Enforce query scan bytes limits\n+     */\n+    private void enforceScanLimits()\n+    {\n+        for (QueryExecution query : queryTracker.getAllQueries()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE0MTkxNg=="}, "originalCommit": null, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MzQ0MDg1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMjowMzoyMlrOGm9qcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQwMjozMDowM1rOGp5vsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUwOTM2MQ==", "bodyText": "There should be a config limit in QueryManagerConfig as well.\nBut we shouldn't allow users to bypass the server config limit through session override.\nCan follow this PR for those changes https://github.com/prestosql/presto/pull/2083/files", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r443509361", "createdAt": "2020-06-22T12:03:22Z", "author": {"login": "raunaqmorarka"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryManager.java", "diffHunk": "@@ -313,4 +323,21 @@ private void enforceCpuLimits()\n             }\n         }\n     }\n+\n+\n+    /**\n+     * Enforce query scan bytes limits\n+     */\n+    private void enforceScanLimits()\n+    {\n+        for (QueryExecution query : queryTracker.getAllQueries()) {\n+            DataSize limit = getQueryMaxScanPhysicalBytes(query.getSession());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU5MDg5OA==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r446590898", "createdAt": "2020-06-28T02:30:03Z", "author": {"login": "shenh062326"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryManager.java", "diffHunk": "@@ -313,4 +323,21 @@ private void enforceCpuLimits()\n             }\n         }\n     }\n+\n+\n+    /**\n+     * Enforce query scan bytes limits\n+     */\n+    private void enforceScanLimits()\n+    {\n+        for (QueryExecution query : queryTracker.getAllQueries()) {\n+            DataSize limit = getQueryMaxScanPhysicalBytes(query.getSession());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUwOTM2MQ=="}, "originalCommit": null, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzQ3NDc0OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/execution/QueryManagerConfig.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODowMjo1MFrOGrbNzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMTo0MTozNVrOGr6mMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE4Nzg1Mw==", "bodyText": "Add @NotNull and return Optional<DataSize>", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r448187853", "createdAt": "2020-07-01T08:02:50Z", "author": {"login": "raunaqmorarka"}, "path": "presto-main/src/main/java/io/prestosql/execution/QueryManagerConfig.java", "diffHunk": "@@ -295,6 +297,18 @@ public QueryManagerConfig setQueryMaxCpuTime(Duration queryMaxCpuTime)\n         return this;\n     }\n \n+    public DataSize getQueryMaxScanPhysicalBytes()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI3MzAyNg==", "bodyText": "I will fix the comments.", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r448273026", "createdAt": "2020-07-01T10:35:11Z", "author": {"login": "shenh062326"}, "path": "presto-main/src/main/java/io/prestosql/execution/QueryManagerConfig.java", "diffHunk": "@@ -295,6 +297,18 @@ public QueryManagerConfig setQueryMaxCpuTime(Duration queryMaxCpuTime)\n         return this;\n     }\n \n+    public DataSize getQueryMaxScanPhysicalBytes()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE4Nzg1Mw=="}, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcwMjAwMA==", "bodyText": "Done", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r448702000", "createdAt": "2020-07-02T01:41:35Z", "author": {"login": "shenh062326"}, "path": "presto-main/src/main/java/io/prestosql/execution/QueryManagerConfig.java", "diffHunk": "@@ -295,6 +297,18 @@ public QueryManagerConfig setQueryMaxCpuTime(Duration queryMaxCpuTime)\n         return this;\n     }\n \n+    public DataSize getQueryMaxScanPhysicalBytes()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE4Nzg1Mw=="}, "originalCommit": null, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzQ3Nzc2OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/execution/QueryManagerConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODowMzo0NFrOGrbPpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwNjo1MzozOFrOGr_tqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE4ODMyNg==", "bodyText": "Change to Optional<DataSize> and make the default Optional.empty()", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r448188326", "createdAt": "2020-07-01T08:03:44Z", "author": {"login": "raunaqmorarka"}, "path": "presto-main/src/main/java/io/prestosql/execution/QueryManagerConfig.java", "diffHunk": "@@ -60,6 +61,7 @@\n     private Duration queryMaxRunTime = new Duration(100, TimeUnit.DAYS);\n     private Duration queryMaxExecutionTime = new Duration(100, TimeUnit.DAYS);\n     private Duration queryMaxCpuTime = new Duration(1_000_000_000, TimeUnit.DAYS);\n+    private DataSize queryMaxScanPhysicalBytes;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc4NTgzNQ==", "bodyText": "Done", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r448785835", "createdAt": "2020-07-02T06:53:38Z", "author": {"login": "shenh062326"}, "path": "presto-main/src/main/java/io/prestosql/execution/QueryManagerConfig.java", "diffHunk": "@@ -60,6 +61,7 @@\n     private Duration queryMaxRunTime = new Duration(100, TimeUnit.DAYS);\n     private Duration queryMaxExecutionTime = new Duration(100, TimeUnit.DAYS);\n     private Duration queryMaxCpuTime = new Duration(1_000_000_000, TimeUnit.DAYS);\n+    private DataSize queryMaxScanPhysicalBytes;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE4ODMyNg=="}, "originalCommit": null, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzQ4MjYzOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/execution/QueryManagerConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODowNToxNVrOGrbStg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwNjo1Mzo0M1rOGr_t2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE4OTExMA==", "bodyText": "this.queryMaxScanPhysicalBytes = Optional.ofNullable(queryMaxScanPhysicalBytes)", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r448189110", "createdAt": "2020-07-01T08:05:15Z", "author": {"login": "raunaqmorarka"}, "path": "presto-main/src/main/java/io/prestosql/execution/QueryManagerConfig.java", "diffHunk": "@@ -295,6 +297,18 @@ public QueryManagerConfig setQueryMaxCpuTime(Duration queryMaxCpuTime)\n         return this;\n     }\n \n+    public DataSize getQueryMaxScanPhysicalBytes()\n+    {\n+        return queryMaxScanPhysicalBytes;\n+    }\n+\n+    @Config(\"query.max-scan-physical-bytes\")\n+    public QueryManagerConfig setQueryMaxScanPhysicalBytes(DataSize queryMaxScanPhysicalBytes)\n+    {\n+        this.queryMaxScanPhysicalBytes = queryMaxScanPhysicalBytes;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc4NTg4MA==", "bodyText": "Done", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r448785880", "createdAt": "2020-07-02T06:53:43Z", "author": {"login": "shenh062326"}, "path": "presto-main/src/main/java/io/prestosql/execution/QueryManagerConfig.java", "diffHunk": "@@ -295,6 +297,18 @@ public QueryManagerConfig setQueryMaxCpuTime(Duration queryMaxCpuTime)\n         return this;\n     }\n \n+    public DataSize getQueryMaxScanPhysicalBytes()\n+    {\n+        return queryMaxScanPhysicalBytes;\n+    }\n+\n+    @Config(\"query.max-scan-physical-bytes\")\n+    public QueryManagerConfig setQueryMaxScanPhysicalBytes(DataSize queryMaxScanPhysicalBytes)\n+    {\n+        this.queryMaxScanPhysicalBytes = queryMaxScanPhysicalBytes;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE4OTExMA=="}, "originalCommit": null, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzQ4NTM2OnYy", "diffSide": "RIGHT", "path": "presto-tpch/src/main/java/io/prestosql/plugin/tpch/TpchRecordSet.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODowNTo1OVrOGrbUUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwOTo0Mjo1NlrOGsqmSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE4OTUyMw==", "bodyText": "is this needed ?", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r448189523", "createdAt": "2020-07-01T08:05:59Z", "author": {"login": "raunaqmorarka"}, "path": "presto-tpch/src/main/java/io/prestosql/plugin/tpch/TpchRecordSet.java", "diffHunk": "@@ -109,7 +109,8 @@ public TpchRecordCursor(Iterator<E> rows, TpchTable<E> table, List<TpchColumn<E>\n         @Override\n         public long getCompletedBytes()\n         {\n-            return 0;\n+            // for test\n+            return 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI3Mjg4OQ==", "bodyText": "If return 0, the testcase testQueryScanExceeded won't exceed query.max-scan-physical-bytes, even set query.max-scan-physical-bytes to 0B.", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r448272889", "createdAt": "2020-07-01T10:34:53Z", "author": {"login": "shenh062326"}, "path": "presto-tpch/src/main/java/io/prestosql/plugin/tpch/TpchRecordSet.java", "diffHunk": "@@ -109,7 +109,8 @@ public TpchRecordCursor(Iterator<E> rows, TpchTable<E> table, List<TpchColumn<E>\n         @Override\n         public long getCompletedBytes()\n         {\n-            return 0;\n+            // for test\n+            return 10;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE4OTUyMw=="}, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ4ODQ1Nw==", "bodyText": "But this 10 looks a bit arbitrary number, either we have to fetch the completed bytes for a TPCH connector or we can try with a connector which exposes the completedBytes. Can we try with a query like this\nSELECT * FROM system.runtime.nodes", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r449488457", "createdAt": "2020-07-03T09:42:56Z", "author": {"login": "Praveen2112"}, "path": "presto-tpch/src/main/java/io/prestosql/plugin/tpch/TpchRecordSet.java", "diffHunk": "@@ -109,7 +109,8 @@ public TpchRecordCursor(Iterator<E> rows, TpchTable<E> table, List<TpchColumn<E>\n         @Override\n         public long getCompletedBytes()\n         {\n-            return 0;\n+            // for test\n+            return 10;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE4OTUyMw=="}, "originalCommit": null, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMTM4Njk2OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/server/BasicQueryStats.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwNzo1ODozM1rOGsnaOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMToyNDo1MlrOGtTWbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzNjIxNw==", "bodyText": "It would be better if we split the changes into two parts, first commit would add physicalInputDataSize to basic query stats and next one would add support restriction", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r449436217", "createdAt": "2020-07-03T07:58:33Z", "author": {"login": "Praveen2112"}, "path": "presto-main/src/main/java/io/prestosql/server/BasicQueryStats.java", "diffHunk": "@@ -79,6 +80,7 @@ public BasicQueryStats(\n             @JsonProperty(\"completedDrivers\") int completedDrivers,\n             @JsonProperty(\"rawInputDataSize\") DataSize rawInputDataSize,\n             @JsonProperty(\"rawInputPositions\") long rawInputPositions,\n+            @JsonProperty(\"physicalInputDataSize\") DataSize physicalInputDataSize,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcyMzYwOA==", "bodyText": "Sounds good, I will split it into two pull request.", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r449723608", "createdAt": "2020-07-04T00:29:57Z", "author": {"login": "shenh062326"}, "path": "presto-main/src/main/java/io/prestosql/server/BasicQueryStats.java", "diffHunk": "@@ -79,6 +80,7 @@ public BasicQueryStats(\n             @JsonProperty(\"completedDrivers\") int completedDrivers,\n             @JsonProperty(\"rawInputDataSize\") DataSize rawInputDataSize,\n             @JsonProperty(\"rawInputPositions\") long rawInputPositions,\n+            @JsonProperty(\"physicalInputDataSize\") DataSize physicalInputDataSize,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzNjIxNw=="}, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE1NjE0Mg==", "bodyText": "Add a other pull request #4354 to add physicalInputDataSize to basic query stats.", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r450156142", "createdAt": "2020-07-06T11:24:52Z", "author": {"login": "shenh062326"}, "path": "presto-main/src/main/java/io/prestosql/server/BasicQueryStats.java", "diffHunk": "@@ -79,6 +80,7 @@ public BasicQueryStats(\n             @JsonProperty(\"completedDrivers\") int completedDrivers,\n             @JsonProperty(\"rawInputDataSize\") DataSize rawInputDataSize,\n             @JsonProperty(\"rawInputPositions\") long rawInputPositions,\n+            @JsonProperty(\"physicalInputDataSize\") DataSize physicalInputDataSize,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzNjIxNw=="}, "originalCommit": null, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjMwNTMzOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/ExceededScanLimitException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNjozMjo1NFrOGvrc2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNjozMjo1NFrOGvrc2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY0ODE1Mg==", "bodyText": "It's super trivial but...\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    super(EXCEEDED_SCAN_LIMIT, \"Exceeded Scan limit of \" + limit.toString());\n          \n          \n            \n                    super(EXCEEDED_SCAN_LIMIT, \"Exceeded scan limit of \" + limit.toString());", "url": "https://github.com/trinodb/trino/pull/4076#discussion_r452648152", "createdAt": "2020-07-10T06:32:54Z", "author": {"login": "Lewuathe"}, "path": "presto-main/src/main/java/io/prestosql/ExceededScanLimitException.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql;\n+\n+import io.airlift.units.DataSize;\n+import io.prestosql.spi.PrestoException;\n+\n+import static io.prestosql.spi.StandardErrorCode.EXCEEDED_SCAN_LIMIT;\n+\n+public class ExceededScanLimitException\n+        extends PrestoException\n+{\n+    public ExceededScanLimitException(DataSize limit)\n+    {\n+        super(EXCEEDED_SCAN_LIMIT, \"Exceeded Scan limit of \" + limit.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4111, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}