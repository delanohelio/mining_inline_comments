{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2ODgxNzIw", "number": 6302, "title": "Validate connection-url format for JDBC connectors", "bodyText": "", "createdAt": "2020-12-11T13:05:13Z", "url": "https://github.com/trinodb/trino/pull/6302", "merged": true, "mergeCommit": {"oid": "f2322e93fa8b17e12268db812efadf2d6396a907"}, "closed": true, "closedAt": "2020-12-16T07:10:19Z", "author": {"login": "wendigo"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlIRwUABqjQxMDA0NTc3NjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmaT0OABqjQxMTQ1NjQ3NjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMTIxMTAw", "url": "https://github.com/trinodb/trino/pull/6302#pullrequestreview-550121100", "createdAt": "2020-12-11T14:00:37Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNDowMDozN1rOID5_Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNDowMDozN1rOID5_Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk2NjcyNg==", "bodyText": "Are we sure this is really sattisfied by all databases? I would rather not break someones deployment by over-strict validation.", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r540966726", "createdAt": "2020-12-11T14:00:37Z", "author": {"login": "losipiuk"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +51,23 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue\n+    public boolean isConnectionUrlValid()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMjg0ODAx", "url": "https://github.com/trinodb/trino/pull/6302#pullrequestreview-550284801", "createdAt": "2020-12-11T16:54:45Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNjo1NDo0NVrOIEBXmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNjo1NToyMVrOIEBZMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA4NzY0MA==", "bodyText": "This should be done with a regex validator", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r541087640", "createdAt": "2020-12-11T16:54:45Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +51,23 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue\n+    public boolean isConnectionUrlValid()\n+    {\n+        String connectionUrl = getConnectionUrl();\n+        if (!connectionUrl.startsWith(\"jdbc:\")) {\n+            return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA4ODA0OA==", "bodyText": "I do not know whether this is safe to assume. Looks reasonable, but let's not add this without more testing.", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r541088048", "createdAt": "2020-12-11T16:55:21Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +51,23 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue\n+    public boolean isConnectionUrlValid()\n+    {\n+        String connectionUrl = getConnectionUrl();\n+        if (!connectionUrl.startsWith(\"jdbc:\")) {\n+            return false;\n+        }\n+\n+        try {\n+            URI.create(connectionUrl.substring(5));\n+            return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMTEwNzEw", "url": "https://github.com/trinodb/trino/pull/6302#pullrequestreview-551110710", "createdAt": "2020-12-14T07:49:07Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzo0OTowN1rOIFDqHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzo0OToyN1rOIFDqxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3MzcyNw==", "bodyText": "Use @javax.validation.constraints.Pattern", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542173727", "createdAt": "2020-12-14T07:49:07Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +50,18 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue(message = \"Invalid JDBC URL: has not jdbc:<subprotocol>:<subname> format.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3Mzg5Mw==", "bodyText": ".* doesn't match everything. While new lines are probably invalid, let's not validate that. you can use (?s:.*) to match everything, or you can use javax.validation.constraints.Pattern(flag=...) for that\nthe braces are redundant\nthe ? is redundant\n\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (connectionUrl.matches(\"^jdbc:([a-zA-Z0-9]+):.*?$\")) {\n          \n          \n            \n                    if (connectionUrl.matches(\"^jdbc:[a-zA-Z0-9]+:(?s:.*)$\")) {", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542173893", "createdAt": "2020-12-14T07:49:27Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +50,18 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue(message = \"Invalid JDBC URL: has not jdbc:<subprotocol>:<subname> format.\")\n+    public boolean isConnectionUrlValidJdbcUri()\n+    {\n+        String connectionUrl = getConnectionUrl();\n+        // Per JDBC 4.3 section 9.4 JDBC url must follow format jdbc:<protocol>:<subname>\n+        if (connectionUrl.matches(\"^jdbc:([a-zA-Z0-9]+):.*?$\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMTU5Mzk3", "url": "https://github.com/trinodb/trino/pull/6302#pullrequestreview-551159397", "createdAt": "2020-12-14T08:58:09Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMzMxNjUw", "url": "https://github.com/trinodb/trino/pull/6302#pullrequestreview-551331650", "createdAt": "2020-12-14T12:46:40Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMjo0Njo0MVrOIFOyGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMjo0Njo0MVrOIFOyGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM1NTk5Mw==", "bodyText": "I didn't know about the case insensitivity.  Also, it feels like not needed, since it matters for jdbc prefix only, but whatever.\nWhat about using a shorter pattern, like:\njdbc:(?:.*)\n\ni intentionally omitted the subprotocol part\nalso, the ^ and $ are not required, as pattern is matched\nthen you can also omit the message, as the auto-generated one should be usable (is it?)", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542355993", "createdAt": "2020-12-14T12:46:41Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -37,6 +39,8 @@\n     private boolean cacheMissing;\n \n     @NotNull\n+    // Some drivers match case insensitive in Driver.acceptURL\n+    @Pattern(regexp = \"^jdbc:[a-z0-9]+:(?s:.*)$\", flags = CASE_INSENSITIVE, message = \"Invalid JDBC URL: has not jdbc:<subprotocol>:<subname> format.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 19}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMTY5NTAy", "url": "https://github.com/trinodb/trino/pull/6302#pullrequestreview-552169502", "createdAt": "2020-12-15T07:30:36Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzozMDozNlrOIF8srw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzozMTowMFrOIF8tag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEwODI3MQ==", "bodyText": "The default message is good enough:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Pattern(regexp = \"^jdbc:[a-z0-9]+:(?s:.*)$\", flags = CASE_INSENSITIVE, message = \"Invalid JDBC URL: must match the following regular expression {regexp}\")\n          \n          \n            \n                @Pattern(regexp = \"jdbc:[a-z0-9]+:(?s:.*)\", flags = CASE_INSENSITIVE)", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r543108271", "createdAt": "2020-12-15T07:30:36Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -37,6 +39,8 @@\n     private boolean cacheMissing;\n \n     @NotNull\n+    // Some drivers match case insensitive in Driver.acceptURL\n+    @Pattern(regexp = \"^jdbc:[a-z0-9]+:(?s:.*)$\", flags = CASE_INSENSITIVE, message = \"Invalid JDBC URL: must match the following regular expression {regexp}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEwODQ1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .hasMessageContaining(\"Invalid JDBC URL: must match the following regular expression ^jdbc:[a-z0-9]+:(?s:.*)$\");\n          \n          \n            \n                            .hasMessageContaining(\"Invalid configuration property connection-url: must match the following regular expression: jdbc:[a-z0-9]+:(?s:.*)\");", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r543108458", "createdAt": "2020-12-15T07:31:00Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/test/java/io/prestosql/plugin/jdbc/TestBaseJdbcConfig.java", "diffHunk": "@@ -65,4 +67,21 @@ public void testExplicitPropertyMappings()\n \n         assertEquals(expected.getJdbcTypesMappedToVarchar(), ImmutableSet.of(\"mytype\", \"struct_type1\"));\n     }\n+\n+    @Test\n+    public void testConnectionUrlIsValid()\n+    {\n+        assertThatThrownBy(() -> buildConfig(ImmutableMap.of(\"connection-url\", \"jdbc:\")))\n+                .hasMessageContaining(\"Invalid JDBC URL: must match the following regular expression ^jdbc:[a-z0-9]+:(?s:.*)$\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "988fbfefb02a9eb5d93cb5669c2a5b5f6b79355f", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/988fbfefb02a9eb5d93cb5669c2a5b5f6b79355f", "committedDate": "2020-12-15T13:25:19Z", "message": "Validate connection-url format for JDBC connectors"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "988fbfefb02a9eb5d93cb5669c2a5b5f6b79355f", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/988fbfefb02a9eb5d93cb5669c2a5b5f6b79355f", "committedDate": "2020-12-15T13:25:19Z", "message": "Validate connection-url format for JDBC connectors"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2176, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}