{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNDI1NTYy", "number": 4949, "title": "Require identifying flakiness's exception", "bodyText": "When marking a @Flaky test for retry, require identification of a\nflakiness by providing matching exception pattern. This prevents further\nregressions and helps as a code documentation.", "createdAt": "2020-08-24T10:33:59Z", "url": "https://github.com/trinodb/trino/pull/4949", "merged": true, "mergeCommit": {"oid": "d12c018aa6acb787c95601a4e06f3c6140305846"}, "closed": true, "closedAt": "2020-08-25T09:28:53Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCAIWKABqjM2ODQ4MDMxMTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCQn25ABqjM2ODgzMDQyNzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMzgxOTI4", "url": "https://github.com/trinodb/trino/pull/4949#pullrequestreview-473381928", "createdAt": "2020-08-24T11:34:17Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMTozNDoxOFrOHFgcbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMTozNDoxOFrOHFgcbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUzNjQ5NA==", "bodyText": "Would match be better name?", "url": "https://github.com/trinodb/trino/pull/4949#discussion_r475536494", "createdAt": "2020-08-24T11:34:18Z", "author": {"login": "findepi"}, "path": "presto-testng-services/src/main/java/io/prestosql/testng/services/Flaky.java", "diffHunk": "@@ -28,4 +29,10 @@\n public @interface Flaky\n {\n     String issue();\n+\n+    /**\n+     * A test is retried when it fails with a stacktrace, which string representation matches given regular expression.\n+     * The pattern is searched for, as if {@link Matcher#find()} was used.\n+     */\n+    String matching();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMzg0NDAz", "url": "https://github.com/trinodb/trino/pull/4949#pullrequestreview-473384403", "createdAt": "2020-08-24T11:38:21Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMTozODoyMVrOHFgjnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMTozOTowNVrOHFglBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUzODMzMg==", "bodyText": "exceptionMessageRegExp? It doesn't have to be super user friendly :)", "url": "https://github.com/trinodb/trino/pull/4949#discussion_r475538332", "createdAt": "2020-08-24T11:38:21Z", "author": {"login": "kokosing"}, "path": "presto-testng-services/src/main/java/io/prestosql/testng/services/Flaky.java", "diffHunk": "@@ -28,4 +29,10 @@\n public @interface Flaky\n {\n     String issue();\n+\n+    /**\n+     * A test is retried when it fails with a stacktrace, which string representation matches given regular expression.\n+     * The pattern is searched for, as if {@link Matcher#find()} was used.\n+     */\n+    String matching();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUzNjQ5NA=="}, "originalCommit": null, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUzODY5NQ==", "bodyText": "can you please use regexp here?", "url": "https://github.com/trinodb/trino/pull/4949#discussion_r475538695", "createdAt": "2020-08-24T11:39:05Z", "author": {"login": "kokosing"}, "path": "presto-testng-services/src/test/java/io/prestosql/testng/services/TestFlakyTestRetryAnalyzer.java", "diffHunk": "@@ -48,13 +48,13 @@ public void testNoRetrying()\n \n     @Override\n     @Test\n-    @Flaky(issue = \"intentionally flaky for @Flaky test purposes\")\n+    @Flaky(issue = \"intentionally flaky for @Flaky test purposes\", matching = \"I am trying hard to fail!\")\n     public void testRetryingOverriddenTest()\n     {\n         super.testRetryingOverriddenTest();\n     }\n \n-    @Flaky(issue = \"intentionally flaky for @Flaky test purposes\")\n+    @Flaky(issue = \"intentionally flaky for @Flaky test purposes\", matching = \"I am trying hard to fail!\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "416c0dd13906fe44f9081d5a215ce404b0d2bde9", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/416c0dd13906fe44f9081d5a215ce404b0d2bde9", "committedDate": "2020-08-25T05:46:58Z", "message": "Require identifying flakiness's exception\n\nWhen marking a `@Flaky` test for retry, require identification of a\nflakiness by providing matching exception pattern. This prevents further\nregressions and helps as a code documentation."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "416c0dd13906fe44f9081d5a215ce404b0d2bde9", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/416c0dd13906fe44f9081d5a215ce404b0d2bde9", "committedDate": "2020-08-25T05:46:58Z", "message": "Require identifying flakiness's exception\n\nWhen marking a `@Flaky` test for retry, require identification of a\nflakiness by providing matching exception pattern. This prevents further\nregressions and helps as a code documentation."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4117, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}