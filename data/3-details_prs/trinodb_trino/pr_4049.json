{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MzE5ODY0", "number": 4049, "title": "Add support for Hive ACID direct insert", "bodyText": "This PR adds preliminary support for reading tables where data was inserted using ACID direct insert (https://issues.apache.org/jira/browse/HIVE-21164)", "createdAt": "2020-06-16T16:06:07Z", "url": "https://github.com/trinodb/trino/pull/4049", "merged": true, "mergeCommit": {"oid": "1785960967f3e8087ce7de7d3544215f7bb4614a"}, "closed": true, "closedAt": "2020-06-25T08:41:03Z", "author": {"login": "wendigo"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcr5LJBgFqTQzMTczMTM1OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcufKT1gBqjM0Nzg5ODQ0MjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNzMxMzU4", "url": "https://github.com/trinodb/trino/pull/4049#pullrequestreview-431731358", "createdAt": "2020-06-16T17:24:31Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoyNDozMVrOGklqmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzo0NjowNFrOGkmbzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxOTAzMw==", "bodyText": "Stores information about Acid properties of a partition.", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r441019033", "createdAt": "2020-06-16T17:24:31Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/AcidInfo.java", "diffHunk": "@@ -27,15 +27,15 @@\n import static java.util.Objects.requireNonNull;\n \n /**\n- * Stores information about ACID DELETE_DELTA for a Partition\n+ * Stores information about Acid properties.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxOTMwMQ==", "bodyText": "rename argument.", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r441019301", "createdAt": "2020-06-16T17:25:00Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HivePageSourceProvider.java", "diffHunk": "@@ -149,7 +149,7 @@ public ConnectorPageSource createPageSource(ConnectorTransactionHandle transacti\n             TableToPartitionMapping tableToPartitionMapping,\n             Optional<BucketConversion> bucketConversion,\n             boolean s3SelectPushdownEnabled,\n-            Optional<DeleteDeltaLocations> deleteDeltaLocations)\n+            Optional<AcidInfo> deleteDeltaLocations)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxOTM1OA==", "bodyText": "rename argument", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r441019358", "createdAt": "2020-06-16T17:25:06Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/InternalHiveSplit.java", "diffHunk": "@@ -55,7 +55,7 @@\n     private final TableToPartitionMapping tableToPartitionMapping;\n     private final Optional<BucketConversion> bucketConversion;\n     private final boolean s3SelectPushdownEnabled;\n-    private final Optional<DeleteDeltaLocations> deleteDeltaLocations;\n+    private final Optional<AcidInfo> deleteDeltaLocations;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxOTQwNQ==", "bodyText": "rename argument", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r441019405", "createdAt": "2020-06-16T17:25:12Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/InternalHiveSplit.java", "diffHunk": "@@ -76,7 +76,7 @@ public InternalHiveSplit(\n             TableToPartitionMapping tableToPartitionMapping,\n             Optional<BucketConversion> bucketConversion,\n             boolean s3SelectPushdownEnabled,\n-            Optional<DeleteDeltaLocations> deleteDeltaLocations)\n+            Optional<AcidInfo> deleteDeltaLocations)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxOTU3OQ==", "bodyText": "rename getter", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r441019579", "createdAt": "2020-06-16T17:25:30Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/InternalHiveSplit.java", "diffHunk": "@@ -219,7 +219,7 @@ public int getEstimatedSizeInBytes()\n         return result;\n     }\n \n-    public Optional<DeleteDeltaLocations> getDeleteDeltaLocations()\n+    public Optional<AcidInfo> getDeleteDeltaLocations()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxOTkzMg==", "bodyText": "rename argument", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r441019932", "createdAt": "2020-06-16T17:26:05Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/orc/OrcPageSourceFactory.java", "diffHunk": "@@ -203,7 +203,7 @@ private static OrcPageSource createOrcPageSource(\n             TupleDomain<HiveColumnHandle> effectivePredicate,\n             DateTimeZone hiveStorageTimeZone,\n             OrcReaderOptions options,\n-            Optional<DeleteDeltaLocations> deleteDeltaLocations,\n+            Optional<AcidInfo> deleteDeltaLocations,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAyMDE1Nw==", "bodyText": "rename variable.", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r441020157", "createdAt": "2020-06-16T17:26:27Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/orc/TestOrcDeletedRows.java", "diffHunk": "@@ -58,7 +58,7 @@ public void setUp()\n     @Test\n     public void testDeleteLocations()\n     {\n-        DeleteDeltaLocations.Builder deleteDeltaLocationsBuilder = DeleteDeltaLocations.builder(partitionDirectory);\n+        AcidInfo.Builder deleteDeltaLocationsBuilder = AcidInfo.builder(partitionDirectory);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAyMDI3OQ==", "bodyText": "rename argument", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r441020279", "createdAt": "2020-06-16T17:26:39Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/orc/TestOrcDeletedRows.java", "diffHunk": "@@ -81,13 +81,13 @@ public void testDeleteLocations()\n         assertEquals(block.getPositionCount(), 10);\n     }\n \n-    private void addDeleteDelta(DeleteDeltaLocations.Builder deleteDeltaLocationsBuilder, long minWriteId, long maxWriteId, int statementId)\n+    private void addDeleteDelta(AcidInfo.Builder deleteDeltaLocationsBuilder, long minWriteId, long maxWriteId, int statementId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAyMDM5Mg==", "bodyText": "rename variable", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r441020392", "createdAt": "2020-06-16T17:26:50Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/orc/TestOrcPageSourceFactory.java", "diffHunk": "@@ -113,15 +113,15 @@ public void testDeletedRows()\n             throws Exception\n     {\n         Path partitionLocation = new Path(getClass().getClassLoader().getResource(\"nation_delete_deltas\") + \"/\");\n-        Optional<DeleteDeltaLocations> deleteDeltaLocations = DeleteDeltaLocations.builder(partitionLocation)\n+        Optional<AcidInfo> deleteDeltaLocations = AcidInfo.builder(partitionLocation)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAyMDQ1NQ==", "bodyText": "rename argument", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r441020455", "createdAt": "2020-06-16T17:26:55Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/orc/TestOrcPageSourceFactory.java", "diffHunk": "@@ -113,15 +113,15 @@ public void testDeletedRows()\n             throws Exception\n     {\n         Path partitionLocation = new Path(getClass().getClassLoader().getResource(\"nation_delete_deltas\") + \"/\");\n-        Optional<DeleteDeltaLocations> deleteDeltaLocations = DeleteDeltaLocations.builder(partitionLocation)\n+        Optional<AcidInfo> deleteDeltaLocations = AcidInfo.builder(partitionLocation)\n                 .addDeleteDelta(new Path(partitionLocation, deleteDeltaSubdir(3L, 3L, 0)), 3L, 3L, 0)\n                 .addDeleteDelta(new Path(partitionLocation, deleteDeltaSubdir(4L, 4L, 0)), 4L, 4L, 0)\n                 .build();\n \n         assertRead(ImmutableSet.copyOf(NationColumn.values()), OptionalLong.empty(), deleteDeltaLocations, nationKey -> nationKey == 5 || nationKey == 19);\n     }\n \n-    private static void assertRead(Set<NationColumn> columns, OptionalLong nationKeyPredicate, Optional<DeleteDeltaLocations> deleteDeltaLocations, LongPredicate deletedRows)\n+    private static void assertRead(Set<NationColumn> columns, OptionalLong nationKeyPredicate, Optional<AcidInfo> deleteDeltaLocations, LongPredicate deletedRows)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAyMDUyMQ==", "bodyText": "rename argument", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r441020521", "createdAt": "2020-06-16T17:27:02Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/orc/TestOrcPageSourceFactory.java", "diffHunk": "@@ -145,7 +145,7 @@ private static void assertRead(Set<NationColumn> columns, OptionalLong nationKey\n         assertEqualsByColumns(columns, actual, expected);\n     }\n \n-    private static List<Nation> readFile(Set<NationColumn> columns, TupleDomain<HiveColumnHandle> tupleDomain, Optional<DeleteDeltaLocations> deleteDeltaLocations)\n+    private static List<Nation> readFile(Set<NationColumn> columns, TupleDomain<HiveColumnHandle> tupleDomain, Optional<AcidInfo> deleteDeltaLocations)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAyMTQ1MQ==", "bodyText": "Does this equal make sense originally? Are deleteDeltas ordered?", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r441021451", "createdAt": "2020-06-16T17:28:35Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/AcidInfo.java", "diffHunk": "@@ -69,13 +88,15 @@ public boolean equals(Object o)\n \n         AcidInfo that = (AcidInfo) o;\n         return partitionLocation.equals(that.partitionLocation) &&\n-                deleteDeltas.equals(that.deleteDeltas);\n+                deleteDeltas.equals(that.deleteDeltas) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAyMzM5NA==", "bodyText": "adding new pattern should not be part of this commit.", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r441023394", "createdAt": "2020-06-16T17:31:43Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/BackgroundHiveSplitLoader.java", "diffHunk": "@@ -112,13 +112,16 @@\n public class BackgroundHiveSplitLoader\n         implements HiveSplitLoader\n {\n+    private static final Pattern DIRECT_INSERT_BUCKET_PATTERN = Pattern.compile(\"bucket_(\\\\d+)(_\\\\d+)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAyMzkyMw==", "bodyText": "ACID_BUCKET_PATTERN?", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r441023923", "createdAt": "2020-06-16T17:32:39Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/BackgroundHiveSplitLoader.java", "diffHunk": "@@ -112,16 +112,15 @@\n public class BackgroundHiveSplitLoader\n         implements HiveSplitLoader\n {\n-    private static final Pattern DIRECT_INSERT_BUCKET_PATTERN = Pattern.compile(\"bucket_(\\\\d+)(_\\\\d+)\");\n+    private static final Pattern BUCKET_PATTERN = Pattern.compile(\"bucket_(\\\\d+)(_\\\\d+)?$\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAyNTAxOA==", "bodyText": "Can you rewrite it in less concise, but more readable form. Do not use elvis.", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r441025018", "createdAt": "2020-06-16T17:34:34Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/BackgroundHiveSplitLoader.java", "diffHunk": "@@ -648,6 +655,18 @@ static OptionalInt getBucketNumber(String name)\n         return OptionalInt.empty();\n     }\n \n+    static Optional<String> getAttemptId(String bucketFilename)\n+    {\n+        Matcher matcher = BUCKET_PATTERN.matcher(bucketFilename);\n+\n+        if (matcher.matches() && matcher.groupCount() == 2) {\n+            // https://github.com/apache/hive/blob/ffee30e6267e85f00a22767262192abb9681cfb7/ql/src/java/org/apache/hadoop/hive/ql/io/AcidUtils.java#L444\n+            return Optional.ofNullable(matcher.group(2) != null ? matcher.group(2).substring(1) : null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzMDM0OA==", "bodyText": "I am not following the logic here very much. Why not set the new immediately when you create AcidInfo object in loadPartition", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r441030348", "createdAt": "2020-06-16T17:43:54Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/BackgroundHiveSplitLoader.java", "diffHunk": "@@ -534,12 +533,20 @@ private static boolean shouldUseFileSplitsFromInputFormat(InputFormat<?, ?> inpu\n     private Iterator<InternalHiveSplit> createInternalHiveSplitIterator(Path path, FileSystem fileSystem, InternalHiveSplitFactory splitFactory, boolean splittable, Optional<AcidInfo> acidInfo)\n     {\n         return Streams.stream(new HiveFileIterator(table, path, fileSystem, directoryLister, namenodeStats, recursiveDirWalkerEnabled ? RECURSE : IGNORED, ignoreAbsentPartitions))\n-                .map(status -> splitFactory.createInternalHiveSplit(status, OptionalInt.empty(), splittable, acidInfo))\n+                .map(status -> splitFactory.createInternalHiveSplit(status, OptionalInt.empty(), splittable, setIfDirectInsert(acidInfo, status.getPath())))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzMTYzMQ==", "bodyText": "drop (it is by default). It depends on distribution.", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r441031631", "createdAt": "2020-06-16T17:46:04Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/orc/OrcDeletedRows.java", "diffHunk": "@@ -214,12 +217,20 @@ private void loadValidPositions()\n         return deletedRows;\n     }\n \n-    private static Path createPath(String partitionLocation, AcidInfo.DeleteDeltaInfo deleteDeltaInfo, String fileName)\n+    private static Path createPath(AcidInfo acidInfo, AcidInfo.DeleteDeltaInfo deleteDeltaInfo, String fileName)\n     {\n-        Path directory = new Path(partitionLocation, deleteDeltaSubdir(\n+        Path directory = new Path(acidInfo.getPartitionLocation(), deleteDeltaSubdir(\n                 deleteDeltaInfo.getMinWriteId(),\n                 deleteDeltaInfo.getMaxWriteId(),\n                 deleteDeltaInfo.getStatementId()));\n+\n+        if (acidInfo.isDirectInsert()) {\n+            checkArgument(acidInfo.getBucketId().isPresent(), \"bucketId is missing\");\n+            // When direct insert is enabled (it is by default) base and delta directories contain bucket_[id]_[attemptId] files", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMTg1ODY5", "url": "https://github.com/trinodb/trino/pull/4049#pullrequestreview-433185869", "createdAt": "2020-06-18T11:22:35Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMToyMjozNVrOGlq-Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMToyMjozNVrOGlq-Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE1NDUzNA==", "bodyText": "It should be just enough to cut the last _.* part of the original filename, right? It seems a bit safer as we are not recreating whole filename manually which may be error prone. E.g. here we are asssuming that bucket id is formated on 5 digits. while BUCKET_WITH_OPTIONAL_ATTEMPT_ID_PATTERN does not enforce that.\nAlso if we go with this approach we could get rid of bucketId from AcidInfo.\nWould that work?", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r442154534", "createdAt": "2020-06-18T11:22:35Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/orc/OrcDeletedRows.java", "diffHunk": "@@ -214,12 +217,20 @@ private void loadValidPositions()\n         return deletedRows;\n     }\n \n-    private static Path createPath(String partitionLocation, AcidInfo.DeleteDeltaInfo deleteDeltaInfo, String fileName)\n+    private static Path createPath(AcidInfo acidInfo, AcidInfo.DeleteDeltaInfo deleteDeltaInfo, String fileName)\n     {\n-        Path directory = new Path(partitionLocation, deleteDeltaSubdir(\n+        Path directory = new Path(acidInfo.getPartitionLocation(), deleteDeltaSubdir(\n                 deleteDeltaInfo.getMinWriteId(),\n                 deleteDeltaInfo.getMaxWriteId(),\n                 deleteDeltaInfo.getStatementId()));\n+\n+        if (acidInfo.isDirectInsert()) {\n+            checkArgument(acidInfo.getBucketId().isPresent(), \"bucketId is missing\");\n+            // When direct insert is enabled base and delta directories contain bucket_[id]_[attemptId] files\n+            // but delete delta directories contain bucket files without attemptId.\n+            return new Path(directory, format(\"bucket_%05d\", acidInfo.getBucketId().getAsInt()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMTg3NDcw", "url": "https://github.com/trinodb/trino/pull/4049#pullrequestreview-433187470", "createdAt": "2020-06-18T11:25:02Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMToyNTowMlrOGlrCpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMToyNTowMlrOGlrCpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE1NTY4Nw==", "bodyText": "the comment above is not valid any more. The filename may be different. Please update.", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r442155687", "createdAt": "2020-06-18T11:25:02Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/BackgroundHiveSplitLoader.java", "diffHunk": "@@ -625,7 +636,7 @@ private static boolean shouldUseFileSplitsFromInputFormat(InputFormat<?, ?> inpu\n                 for (LocatedFileStatus file : bucketFiles.get(partitionBucketNumber)) {\n                     // OrcDeletedRows will load only delete delta files matching current bucket (same file name),\n                     // so we can pass all delete delta locations here, without filtering.\n-                    splitFactory.createInternalHiveSplit(file, OptionalInt.of(readBucketNumber), splittable, acidInfo)\n+                    splitFactory.createInternalHiveSplit(file, OptionalInt.of(readBucketNumber), splittable, setIfDirectInsert(acidInfo, file.getPath()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NjY3MTIx", "url": "https://github.com/trinodb/trino/pull/4049#pullrequestreview-434667121", "createdAt": "2020-06-22T07:30:13Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNzozMDoxM1rOGm07Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNzozNTo1OVrOGm1Fbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM2NjE2Mw==", "bodyText": "nit: you  can put it inside lambda", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r443366163", "createdAt": "2020-06-22T07:30:13Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/BackgroundHiveSplitLoader.java", "diffHunk": "@@ -531,12 +534,20 @@ private static boolean shouldUseFileSplitsFromInputFormat(InputFormat<?, ?> inpu\n     private Iterator<InternalHiveSplit> createInternalHiveSplitIterator(Path path, FileSystem fileSystem, InternalHiveSplitFactory splitFactory, boolean splittable, Optional<AcidInfo> acidInfo)\n     {\n         return Streams.stream(new HiveFileIterator(table, path, fileSystem, directoryLister, namenodeStats, recursiveDirWalkerEnabled ? RECURSE : IGNORED, ignoreAbsentPartitions))\n-                .map(status -> splitFactory.createInternalHiveSplit(status, OptionalInt.empty(), splittable, acidInfo))\n+                .map(status -> splitFactory.createInternalHiveSplit(status, OptionalInt.empty(), splittable, setIfDirectInsert(acidInfo, status.getPath())))\n                 .filter(Optional::isPresent)\n                 .map(Optional::get)\n                 .iterator();\n     }\n \n+    private static Optional<AcidInfo> setIfDirectInsert(Optional<AcidInfo> acidInfo, Path filename)\n+    {\n+        Optional<String> attemptId = getAttemptId(filename.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM2ODgxNQ==", "bodyText": "going further from this place it look that actually we do not need even directId flag in AcidInfo. Right? We can just check for attemptId in fileName here.", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r443368815", "createdAt": "2020-06-22T07:35:59Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/orc/OrcDeletedRows.java", "diffHunk": "@@ -214,12 +216,20 @@ private void loadValidPositions()\n         return deletedRows;\n     }\n \n-    private static Path createPath(String partitionLocation, AcidInfo.DeleteDeltaInfo deleteDeltaInfo, String fileName)\n+    private static Path createPath(AcidInfo acidInfo, AcidInfo.DeleteDeltaInfo deleteDeltaInfo, String fileName)\n     {\n-        Path directory = new Path(partitionLocation, deleteDeltaSubdir(\n+        Path directory = new Path(acidInfo.getPartitionLocation(), deleteDeltaSubdir(\n                 deleteDeltaInfo.getMinWriteId(),\n                 deleteDeltaInfo.getMaxWriteId(),\n                 deleteDeltaInfo.getStatementId()));\n+\n+        if (acidInfo.isDirectInsert()) {\n+            verify(CharMatcher.is('_').countIn(fileName) >= 2, \"Filename should contain attemptId\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NjUwOTU3", "url": "https://github.com/trinodb/trino/pull/4049#pullrequestreview-435650957", "createdAt": "2020-06-23T10:30:12Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDozMDoxM1rOGnjNFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDozNjoyMlrOGnjY7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEyNDQzNw==", "bodyText": "Copy directInsert field too.", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r444124437", "createdAt": "2020-06-23T10:30:13Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/AcidInfo.java", "diffHunk": "@@ -161,22 +172,34 @@ public static Builder builder(Path partitionPath)\n         return new Builder(partitionPath);\n     }\n \n+    public static Builder builder(AcidInfo acidInfo)\n+    {\n+        return new Builder(acidInfo);\n+    }\n+\n     public static class Builder\n     {\n-        private final Path partitionLocation;\n+        private final String partitionLocation;\n         private final ImmutableList.Builder<DeleteDeltaInfo> deleteDeltaInfoBuilder = ImmutableList.builder();\n+        private boolean directInsert;\n \n         private Builder(Path partitionPath)\n         {\n-            partitionLocation = requireNonNull(partitionPath, \"partitionPath is null\");\n+            partitionLocation = requireNonNull(partitionPath, \"partitionPath is null\").toString();\n+        }\n+\n+        private Builder(AcidInfo acidInfo)\n+        {\n+            partitionLocation = acidInfo.getPartitionLocation();\n+            deleteDeltaInfoBuilder.addAll(acidInfo.deleteDeltas);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEyNDg5OQ==", "bodyText": "This change seems unrelated. Consider reverting.", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r444124899", "createdAt": "2020-06-23T10:31:06Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/AcidInfo.java", "diffHunk": "@@ -161,22 +172,34 @@ public static Builder builder(Path partitionPath)\n         return new Builder(partitionPath);\n     }\n \n+    public static Builder builder(AcidInfo acidInfo)\n+    {\n+        return new Builder(acidInfo);\n+    }\n+\n     public static class Builder\n     {\n-        private final Path partitionLocation;\n+        private final String partitionLocation;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEyNjc2MA==", "bodyText": "checking matcher.groupCount() == 2 is wrong, since the group count is statically defined in the pattern\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (matcher.matches() && matcher.groupCount() == 2 && matcher.group(2) != null) {\n          \n          \n            \n                    if (matcher.matches() && matcher.group(2) != null) {", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r444126760", "createdAt": "2020-06-23T10:35:01Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/BackgroundHiveSplitLoader.java", "diffHunk": "@@ -645,6 +656,17 @@ static OptionalInt getBucketNumber(String name)\n         return OptionalInt.empty();\n     }\n \n+    @VisibleForTesting\n+    static Optional<String> getAttemptId(String bucketFilename)\n+    {\n+        Matcher matcher = BUCKET_WITH_OPTIONAL_ATTEMPT_ID_PATTERN.matcher(bucketFilename);\n+        if (matcher.matches() && matcher.groupCount() == 2 && matcher.group(2) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEyNzQ3MA==", "bodyText": "bump", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r444127470", "createdAt": "2020-06-23T10:36:22Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/orc/OrcDeletedRows.java", "diffHunk": "@@ -214,12 +216,20 @@ private void loadValidPositions()\n         return deletedRows;\n     }\n \n-    private static Path createPath(String partitionLocation, AcidInfo.DeleteDeltaInfo deleteDeltaInfo, String fileName)\n+    private static Path createPath(AcidInfo acidInfo, AcidInfo.DeleteDeltaInfo deleteDeltaInfo, String fileName)\n     {\n-        Path directory = new Path(partitionLocation, deleteDeltaSubdir(\n+        Path directory = new Path(acidInfo.getPartitionLocation(), deleteDeltaSubdir(\n                 deleteDeltaInfo.getMinWriteId(),\n                 deleteDeltaInfo.getMaxWriteId(),\n                 deleteDeltaInfo.getStatementId()));\n+\n+        if (acidInfo.isDirectInsert()) {\n+            verify(CharMatcher.is('_').countIn(fileName) >= 2, \"Filename should contain attemptId\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM2ODgxNQ=="}, "originalCommit": null, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NTE5OTEy", "url": "https://github.com/trinodb/trino/pull/4049#pullrequestreview-436519912", "createdAt": "2020-06-24T10:26:46Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMDoyNjo0NlrOGoMS_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMDoyNjo0NlrOGoMS_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc5NzY5NA==", "bodyText": "since we generally discard attemptId information, this could be hasAttemptId", "url": "https://github.com/trinodb/trino/pull/4049#discussion_r444797694", "createdAt": "2020-06-24T10:26:46Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/BackgroundHiveSplitLoader.java", "diffHunk": "@@ -645,6 +656,17 @@ static OptionalInt getBucketNumber(String name)\n         return OptionalInt.empty();\n     }\n \n+    @VisibleForTesting\n+    static Optional<String> getAttemptId(String bucketFilename)\n+    {\n+        Matcher matcher = BUCKET_WITH_OPTIONAL_ATTEMPT_ID_PATTERN.matcher(bucketFilename);\n+        if (matcher.matches() && matcher.group(2) != null) {\n+            return Optional.of(matcher.group(2).substring(1));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 117}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "98a9885d966b359c87bf19fa9f8b3a4029f01d71", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/98a9885d966b359c87bf19fa9f8b3a4029f01d71", "committedDate": "2020-06-24T19:24:43Z", "message": "Rename DeleteDeltaLocations to AcidInfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c47f481fda57508f47a650d23eedc303cacfe0f0", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/c47f481fda57508f47a650d23eedc303cacfe0f0", "committedDate": "2020-06-24T19:24:43Z", "message": "Support Hive direct insert"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "c47f481fda57508f47a650d23eedc303cacfe0f0", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/c47f481fda57508f47a650d23eedc303cacfe0f0", "committedDate": "2020-06-24T19:24:43Z", "message": "Support Hive direct insert"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 392, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}