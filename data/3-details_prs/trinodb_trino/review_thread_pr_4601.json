{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MjYzNDY2", "number": 4601, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMToxNzo1OFrOESj7vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMToyMzoyOVrOESkCXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODk4NTU5OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/StatementAnalyzer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMToxNzo1OFrOG3z7_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzoxMjozNlrOG4L3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3NTgwNA==", "bodyText": "nonConstantErrorContext isn't defined anywhere in this commit or prior to it, so this will produce a compile-time error.", "url": "https://github.com/trinodb/trino/pull/4601#discussion_r461175804", "createdAt": "2020-07-27T21:17:58Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/StatementAnalyzer.java", "diffHunk": "@@ -2747,18 +2747,23 @@ private OptionalLong analyzeParameterAsRowCount(Parameter parameter, Scope scope\n                 // validate parameter index\n                 analyzeExpression(parameter, scope);\n                 Expression providedValue = analysis.getParameters().get(NodeRef.of(parameter));\n+                Object value;\n                 try {\n-                    return OptionalLong.of((long) ExpressionInterpreter.evaluateConstantExpression(\n+                    value = ExpressionInterpreter.evaluateConstantExpression(\n                             providedValue,\n                             BIGINT,\n                             metadata,\n                             session,\n                             accessControl,\n-                            analysis.getParameters()));\n+                            analysis.getParameters());\n                 }\n                 catch (VerifyException e) {\n                     throw semanticException(INVALID_ARGUMENTS, parameter, \"Non constant parameter value for LIMIT: %s\", providedValue);\n                 }\n+                if (value == null) {\n+                    throw semanticException(INVALID_ARGUMENTS, parameter, \"Parameter value provided for %s is NULL: %s\", nonConstantErrorContext, providedValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU2Nzc5Mw==", "bodyText": "I messed the order of commits during rebase.", "url": "https://github.com/trinodb/trino/pull/4601#discussion_r461567793", "createdAt": "2020-07-28T13:12:36Z", "author": {"login": "kasiafi"}, "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/StatementAnalyzer.java", "diffHunk": "@@ -2747,18 +2747,23 @@ private OptionalLong analyzeParameterAsRowCount(Parameter parameter, Scope scope\n                 // validate parameter index\n                 analyzeExpression(parameter, scope);\n                 Expression providedValue = analysis.getParameters().get(NodeRef.of(parameter));\n+                Object value;\n                 try {\n-                    return OptionalLong.of((long) ExpressionInterpreter.evaluateConstantExpression(\n+                    value = ExpressionInterpreter.evaluateConstantExpression(\n                             providedValue,\n                             BIGINT,\n                             metadata,\n                             session,\n                             accessControl,\n-                            analysis.getParameters()));\n+                            analysis.getParameters());\n                 }\n                 catch (VerifyException e) {\n                     throw semanticException(INVALID_ARGUMENTS, parameter, \"Non constant parameter value for LIMIT: %s\", providedValue);\n                 }\n+                if (value == null) {\n+                    throw semanticException(INVALID_ARGUMENTS, parameter, \"Parameter value provided for %s is NULL: %s\", nonConstantErrorContext, providedValue);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3NTgwNA=="}, "originalCommit": null, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTAwMjU0OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/StatementAnalyzer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMToyMzoyOVrOG30GSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzoxMTo1NVrOG4L1dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3ODQ0MQ==", "bodyText": "What does \"non constant\" refer to in nonConstantErrorContext?", "url": "https://github.com/trinodb/trino/pull/4601#discussion_r461178441", "createdAt": "2020-07-27T21:23:29Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/StatementAnalyzer.java", "diffHunk": "@@ -2736,7 +2738,7 @@ else if (node.getRowCount() instanceof LongLiteral) {\n             return false;\n         }\n \n-        private OptionalLong analyzeParameterAsRowCount(Parameter parameter, Scope scope)\n+        private OptionalLong analyzeParameterAsRowCount(Parameter parameter, Scope scope, String nonConstantErrorContext)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU2NzM1MQ==", "bodyText": "It refers to a failure to resolve expression as a constant of a given type. I'll rename it to context.", "url": "https://github.com/trinodb/trino/pull/4601#discussion_r461567351", "createdAt": "2020-07-28T13:11:55Z", "author": {"login": "kasiafi"}, "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/StatementAnalyzer.java", "diffHunk": "@@ -2736,7 +2738,7 @@ else if (node.getRowCount() instanceof LongLiteral) {\n             return false;\n         }\n \n-        private OptionalLong analyzeParameterAsRowCount(Parameter parameter, Scope scope)\n+        private OptionalLong analyzeParameterAsRowCount(Parameter parameter, Scope scope, String nonConstantErrorContext)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3ODQ0MQ=="}, "originalCommit": null, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3525, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}