{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MDc2MDAz", "number": 3324, "title": "Verify connector's applyProjection result", "bodyText": "", "createdAt": "2020-04-03T09:55:04Z", "url": "https://github.com/trinodb/trino/pull/3324", "merged": true, "mergeCommit": {"oid": "2422757b0f2a5b1571486daaf4070714c8b384fe"}, "closed": true, "closedAt": "2020-04-21T18:34:56Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUDMveAFqTM4NzM4NzAzMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZ0gJfAFqTM5NzM4MzIwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Mzg3MDMw", "url": "https://github.com/trinodb/trino/pull/3324#pullrequestreview-387387030", "createdAt": "2020-04-03T16:02:27Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjowMjoyN1rOGAbyig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjowNTo1MFrOGAb6Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEwODQ5MA==", "bodyText": "Be explicit about it (and throw a proper exception):\nif (!result.getProjections().stream().allMatch(Objects::isNull)) {\n    throw new PrestoException(...);\n}\n\nif (!result.getAssignments().stream().allMatch(Objects::isNull)) {\n    throw new PrestoException(...);\n}", "url": "https://github.com/trinodb/trino/pull/3324#discussion_r403108490", "createdAt": "2020-04-03T16:02:27Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/metadata/MetadataManager.java", "diffHunk": "@@ -1099,10 +1099,16 @@ public void validateScan(Session session, TableHandle table)\n \n         ConnectorSession connectorSession = session.toConnectorSession(catalogName);\n         return metadata.applyProjection(connectorSession, table.getConnectorHandle(), projections, assignments)\n-                .map(result -> new ProjectionApplicationResult<>(\n-                        new TableHandle(catalogName, result.getHandle(), table.getTransaction(), Optional.empty()),\n-                        result.getProjections(),\n-                        result.getAssignments()));\n+                .map(result -> {\n+                    // verify no nulls\n+                    List<ConnectorExpression> newProjections = ImmutableList.copyOf(result.getProjections());\n+                    List<ProjectionApplicationResult.Assignment> newAssignments = ImmutableList.copyOf(result.getAssignments());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzExMDA5Mg==", "bodyText": "Throw a PrestoException (we'll need a new error code similar to FUNCTION_IMPLEMENTATION_ERROR)", "url": "https://github.com/trinodb/trino/pull/3324#discussion_r403110092", "createdAt": "2020-04-03T16:05:12Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/metadata/MetadataManager.java", "diffHunk": "@@ -1104,6 +1104,13 @@ public void validateScan(Session session, TableHandle table)\n                     List<ConnectorExpression> newProjections = ImmutableList.copyOf(result.getProjections());\n                     List<ProjectionApplicationResult.Assignment> newAssignments = ImmutableList.copyOf(result.getAssignments());\n \n+                    verify(", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzExMDQzNA==", "bodyText": "Throw a proper PrestoException", "url": "https://github.com/trinodb/trino/pull/3324#discussion_r403110434", "createdAt": "2020-04-03T16:05:50Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/metadata/MetadataManager.java", "diffHunk": "@@ -1111,6 +1113,15 @@ public void validateScan(Session session, TableHandle table)\n                             projections.size(),\n                             table);\n \n+                    Set<String> assignedVariables = newAssignments.stream()\n+                            .map(ProjectionApplicationResult.Assignment::getVariable)\n+                            .collect(toImmutableSet());\n+                    newProjections.stream()\n+                            .flatMap(connectorExpression -> ConnectorExpressions.extractVariables(connectorExpression).stream())\n+                            .map(Variable::getName)\n+                            .filter(variableName -> !assignedVariables.contains(variableName))\n+                            .findAny().ifPresent(variableName -> { throw new IllegalStateException(\"Unbound variable: \" + variableName); });", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "640093b7447450d5286cbd25708eb53506df0cf6", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/640093b7447450d5286cbd25708eb53506df0cf6", "committedDate": "2020-04-18T16:30:32Z", "message": "Verify connector did not return nulls"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fa4c41416e2fb53791a58905a0ae60b78e29ea9", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/3fa4c41416e2fb53791a58905a0ae60b78e29ea9", "committedDate": "2020-04-18T16:30:32Z", "message": "Verify projections returned from applyProjection()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49c1a04549280ac0584ab4bf4cfdf265b13e09ab", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/49c1a04549280ac0584ab4bf4cfdf265b13e09ab", "committedDate": "2020-04-18T16:30:32Z", "message": "Verify projections wrt assignments in applyProjection"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "49c1a04549280ac0584ab4bf4cfdf265b13e09ab", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/49c1a04549280ac0584ab4bf4cfdf265b13e09ab", "committedDate": "2020-04-18T16:30:32Z", "message": "Verify projections wrt assignments in applyProjection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzgzMjA0", "url": "https://github.com/trinodb/trino/pull/3324#pullrequestreview-397383204", "createdAt": "2020-04-21T14:24:22Z", "commit": {"oid": "49c1a04549280ac0584ab4bf4cfdf265b13e09ab"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1736, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}