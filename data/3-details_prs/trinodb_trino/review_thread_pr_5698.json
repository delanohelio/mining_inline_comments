{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMjU4ODAx", "number": 5698, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMjoyMToyNFrOEyHC4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNzo0MTowOVrOEyN30Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwOTc5NjgxOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/MetastoreUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMjoyMToyNFrOHokjZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMzowMzoxNVrOHoljBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMwMzk3NA==", "bodyText": "What's the issue? Add some details to the commit message and a test.", "url": "https://github.com/trinodb/trino/pull/5698#discussion_r512303974", "createdAt": "2020-10-26T22:21:24Z", "author": {"login": "martint"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/MetastoreUtil.java", "diffHunk": "@@ -441,7 +441,7 @@ else if (type instanceof TinyintType\n         for (HiveColumnHandle partitionKey : partitionKeys) {\n             String name = partitionKey.getName();\n             Domain domain = effectivePredicate.getDomains().get().get(partitionKey);\n-            if (domain != null && domain.isNullableSingleValue()) {\n+            if (domain != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMyMDI2Mw==", "bodyText": "I'll update the description and add a test for this method. There's no good way to test this end to end, as it's basically a side effect (the metastore returns the result regardless as the filter is just a hint).", "url": "https://github.com/trinodb/trino/pull/5698#discussion_r512320263", "createdAt": "2020-10-26T23:03:15Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/MetastoreUtil.java", "diffHunk": "@@ -441,7 +441,7 @@ else if (type instanceof TinyintType\n         for (HiveColumnHandle partitionKey : partitionKeys) {\n             String name = partitionKey.getName();\n             Domain domain = effectivePredicate.getDomains().get().get(partitionKey);\n-            if (domain != null && domain.isNullableSingleValue()) {\n+            if (domain != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMwMzk3NA=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwOTk3NDAwOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/metastore/TestMetastoreUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMzozMzoxM1rOHomKzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMzozMzoxM1rOHomKzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMzMDQ0NA==", "bodyText": "Indentation", "url": "https://github.com/trinodb/trino/pull/5698#discussion_r512330444", "createdAt": "2020-10-26T23:33:13Z", "author": {"login": "martint"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/metastore/TestMetastoreUtil.java", "diffHunk": "@@ -153,4 +167,34 @@ public void testHiveSchemaPartition()\n         Properties actual = MetastoreUtil.getHiveSchema(ThriftMetastoreUtil.fromMetastoreApiPartition(TEST_PARTITION_WITH_UNSUPPORTED_FIELDS), ThriftMetastoreUtil.fromMetastoreApiTable(TEST_TABLE_WITH_UNSUPPORTED_FIELDS, TEST_SCHEMA));\n         assertEquals(actual, expected);\n     }\n+\n+    @Test\n+    public void testComputePartitionKeyFilter()\n+    {\n+        HiveColumnHandle dsColumn = partitionColumn(\"ds\");\n+        HiveColumnHandle typeColumn = partitionColumn(\"type\");\n+        List<HiveColumnHandle> partitionKeys = ImmutableList.of(dsColumn, typeColumn);\n+\n+        Domain dsDomain = Domain.create(ValueSet.ofRanges(Range.lessThan(VARCHAR, utf8Slice(\"2018-05-06\"))), false);\n+        Domain typeDomain = Domain.create(ValueSet.of(VARCHAR, utf8Slice(\"fruit\")), false);\n+\n+        TupleDomain<HiveColumnHandle> tupleDomain = TupleDomain.withColumnDomains(ImmutableMap.<HiveColumnHandle, Domain>builder()\n+                .put(bucketColumnHandle(), Domain.create(ValueSet.of(INTEGER, 123L), false))\n+                .put(dsColumn, dsDomain)\n+                .put(typeColumn, typeDomain)\n+                .build());\n+\n+        TupleDomain<String> filter = computePartitionKeyFilter(partitionKeys, tupleDomain);\n+        assertThat(filter.getDomains())\n+                .as(\"output contains only the partition keys\")\n+                .contains(ImmutableMap.<String, Domain>builder()\n+                .put(\"ds\", dsDomain)\n+                .put(\"type\", typeDomain)\n+                .build());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDkxNTM3OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/metastore/TestMetastoreUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNzo0MTowOVrOHouvnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzowNTo0NFrOHpHICg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ3MDk0Mw==", "bodyText": "There are many layers between query and metastore communication and we already had regressions more than once. Can we also have an end-to-end test with Glue metastore showing the functionality works as intended?\nThis could go into TestHiveGlueMetastore to use real Glue. We probably should add GlueMetastoreStats metric to account for size of responses being pulled from the service.", "url": "https://github.com/trinodb/trino/pull/5698#discussion_r512470943", "createdAt": "2020-10-27T07:41:09Z", "author": {"login": "findepi"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/metastore/TestMetastoreUtil.java", "diffHunk": "@@ -153,4 +167,34 @@ public void testHiveSchemaPartition()\n         Properties actual = MetastoreUtil.getHiveSchema(ThriftMetastoreUtil.fromMetastoreApiPartition(TEST_PARTITION_WITH_UNSUPPORTED_FIELDS), ThriftMetastoreUtil.fromMetastoreApiTable(TEST_TABLE_WITH_UNSUPPORTED_FIELDS, TEST_SCHEMA));\n         assertEquals(actual, expected);\n     }\n+\n+    @Test\n+    public void testComputePartitionKeyFilter()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ba28c52ec7c17b34007f80c7e67ba987f3049d5"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3MDQxMA==", "bodyText": "TestHiveGlueMetastore is doing low level tests of the metastore calls, so it wouldn't help with this issue. I filed #5709 to add product tests that work end-to-end.", "url": "https://github.com/trinodb/trino/pull/5698#discussion_r512870410", "createdAt": "2020-10-27T17:05:44Z", "author": {"login": "electrum"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/metastore/TestMetastoreUtil.java", "diffHunk": "@@ -153,4 +167,34 @@ public void testHiveSchemaPartition()\n         Properties actual = MetastoreUtil.getHiveSchema(ThriftMetastoreUtil.fromMetastoreApiPartition(TEST_PARTITION_WITH_UNSUPPORTED_FIELDS), ThriftMetastoreUtil.fromMetastoreApiTable(TEST_TABLE_WITH_UNSUPPORTED_FIELDS, TEST_SCHEMA));\n         assertEquals(actual, expected);\n     }\n+\n+    @Test\n+    public void testComputePartitionKeyFilter()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ3MDk0Mw=="}, "originalCommit": {"oid": "0ba28c52ec7c17b34007f80c7e67ba987f3049d5"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4539, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}