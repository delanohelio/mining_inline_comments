{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1MDg5NzEx", "number": 4535, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjo1OTowNVrOERItrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTo1NDo0NVrOERw_pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDA0MDEyOnYy", "diffSide": "RIGHT", "path": "presto-elasticsearch/src/main/java/io/prestosql/elasticsearch/ElasticsearchMetadata.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjo1OTowNVrOG1rtaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjo1OTowNVrOG1rtaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk0Mzg1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    client.getAliases().entrySet().stream()\n          \n          \n            \n                            .filter(entry -> indexes.contains(entry.getKey()))\n          \n          \n            \n                            .flatMap(entry -> entry.getValue().stream().map(alias -> new SchemaTableName(this.schemaName, alias)))\n          \n          \n            \n                    client.getAliases().entrySet().stream()\n          \n          \n            \n                            .filter(entry -> indexes.contains(entry.getKey()))\n          \n          \n            \n                            .flatMap(entry -> entry.getValue().stream())\n          \n          \n            \n                            .map(alias -> new SchemaTableName(this.schemaName, alias))", "url": "https://github.com/trinodb/trino/pull/4535#discussion_r458943851", "createdAt": "2020-07-22T16:59:05Z", "author": {"login": "losipiuk"}, "path": "presto-elasticsearch/src/main/java/io/prestosql/elasticsearch/ElasticsearchMetadata.java", "diffHunk": "@@ -339,13 +341,15 @@ else if (type instanceof ObjectType) {\n         }\n \n         ImmutableList.Builder<SchemaTableName> result = ImmutableList.builder();\n+        Set<String> indexes = client.getIndexes().stream().collect(toUnmodifiableSet());\n \n-        client.getIndexes().stream()\n+        indexes.stream()\n                 .map(index -> new SchemaTableName(this.schemaName, index))\n                 .forEach(result::add);\n \n-        client.getAliases().stream()\n-                .map(index -> new SchemaTableName(this.schemaName, index))\n+        client.getAliases().entrySet().stream()\n+                .filter(entry -> indexes.contains(entry.getKey()))\n+                .flatMap(entry -> entry.getValue().stream().map(alias -> new SchemaTableName(this.schemaName, alias)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDYzMzI0OnYy", "diffSide": "RIGHT", "path": "presto-elasticsearch/src/main/java/io/prestosql/elasticsearch/client/ElasticsearchClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTo1Mjo0MFrOG2porg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTo1Mjo0MFrOG2porg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk1ODQ0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if (docsCount + deletedDocsCount == 0) {\n          \n          \n            \n                                if (docsCount == 0 && deletedDocsCount == 0) {", "url": "https://github.com/trinodb/trino/pull/4535#discussion_r459958446", "createdAt": "2020-07-24T09:52:40Z", "author": {"login": "findepi"}, "path": "presto-elasticsearch/src/main/java/io/prestosql/elasticsearch/client/ElasticsearchClient.java", "diffHunk": "@@ -447,12 +447,22 @@ private int shardPreference(SearchShardsResponse.Shard left, SearchShardsRespons\n \n     public List<String> getIndexes()\n     {\n-        return doRequest(\"/_cat/indices?h=index&format=json&s=index:asc\", body -> {\n+        return doRequest(\"/_cat/indices?h=index,docs.count,docs.deleted&format=json&s=index:asc\", body -> {\n             try {\n                 ImmutableList.Builder<String> result = ImmutableList.builder();\n                 JsonNode root = OBJECT_MAPPER.readTree(body);\n                 for (int i = 0; i < root.size(); i++) {\n-                    result.add(root.get(i).get(\"index\").asText());\n+                    String index = root.get(i).get(\"index\").asText();\n+                    // make sure the index has mappings we can use to derive the schema\n+                    int docsCount = root.get(i).get(\"docs.count\").asInt();\n+                    int deletedDocsCount = root.get(i).get(\"docs.deleted\").asInt();\n+                    if (docsCount + deletedDocsCount == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDYzNzM0OnYy", "diffSide": "RIGHT", "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/BaseElasticsearchSmokeTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTo1NDowMFrOG2prHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjoxNTo1NFrOG2tJkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk1OTA3MA==", "bodyText": "is it equiv to createIndex(indexName, '{}')?", "url": "https://github.com/trinodb/trino/pull/4535#discussion_r459959070", "createdAt": "2020-07-24T09:54:00Z", "author": {"login": "findepi"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/BaseElasticsearchSmokeTest.java", "diffHunk": "@@ -840,6 +892,12 @@ private void addAlias(String index, String alias)\n \n     protected abstract String indexMapping(@Language(\"JSON\") String properties);\n \n+    private void createIndex(String indexName)\n+            throws IOException\n+    {\n+        client.getLowLevelClient().performRequest(\"PUT\", \"/\" + indexName, ImmutableMap.of());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAxNjAxNg==", "bodyText": "No, ElasticsearchClient expects at least one property to be present when processing mappings.", "url": "https://github.com/trinodb/trino/pull/4535#discussion_r460016016", "createdAt": "2020-07-24T12:15:54Z", "author": {"login": "aalbu"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/BaseElasticsearchSmokeTest.java", "diffHunk": "@@ -840,6 +892,12 @@ private void addAlias(String index, String alias)\n \n     protected abstract String indexMapping(@Language(\"JSON\") String properties);\n \n+    private void createIndex(String indexName)\n+            throws IOException\n+    {\n+        client.getLowLevelClient().performRequest(\"PUT\", \"/\" + indexName, ImmutableMap.of());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk1OTA3MA=="}, "originalCommit": null, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDYzOTc1OnYy", "diffSide": "RIGHT", "path": "presto-elasticsearch/src/main/java/io/prestosql/elasticsearch/ElasticsearchMetadata.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTo1NDo0NVrOG2psfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTo1NDo0NVrOG2psfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk1OTQyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Set<String> indexes = client.getIndexes().stream().collect(toUnmodifiableSet());\n          \n          \n            \n                    Set<String> indexes = ImmutableSet.copyOf(client.getIndexes());", "url": "https://github.com/trinodb/trino/pull/4535#discussion_r459959423", "createdAt": "2020-07-24T09:54:45Z", "author": {"login": "findepi"}, "path": "presto-elasticsearch/src/main/java/io/prestosql/elasticsearch/ElasticsearchMetadata.java", "diffHunk": "@@ -339,13 +341,15 @@ else if (type instanceof ObjectType) {\n         }\n \n         ImmutableList.Builder<SchemaTableName> result = ImmutableList.builder();\n+        Set<String> indexes = client.getIndexes().stream().collect(toUnmodifiableSet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3719, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}