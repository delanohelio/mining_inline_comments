{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0Njc2Njc1", "number": 3020, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMjowOTowMFrODlxmjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMjowOToyM1rODlxm4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTM2NTg4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/sql/query/TestShowQueries.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMjowOTowMFrOFy2oOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMjowOTowMFrOFy2oOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg2ODE1Mg==", "bodyText": "This row would match even without ESCAPE. It would be nice to have a test that would actually verify that ESCAPE works.\nLike having columns: a_ and aa then LIKE 'a$_' ESCAPE '$' would only match a_. Can you write such test?", "url": "https://github.com/trinodb/trino/pull/3020#discussion_r388868152", "createdAt": "2020-03-06T12:09:00Z", "author": {"login": "kokosing"}, "path": "presto-main/src/test/java/io/prestosql/sql/query/TestShowQueries.java", "diffHunk": "@@ -91,4 +91,23 @@ public void testListingEmptyCatalogs()\n             assertions.getQueryRunner().getAccessControl().reset();\n         });\n     }\n+\n+    @Test\n+    public void testShowColumnsLike()\n+    {\n+        assertions.assertQuery(\"SHOW COLUMNS FROM system.runtime.nodes LIKE 'node%'\",\n+                \"VALUES \" +\n+                        \"(CAST('node_id' AS VARCHAR), CAST('varchar' AS VARCHAR) , CAST('' AS VARCHAR), CAST('' AS VARCHAR)),\" +\n+                        \"(CAST('node_version' AS VARCHAR), CAST('varchar' AS VARCHAR) , CAST('' AS VARCHAR), CAST('' AS VARCHAR))\");\n+    }\n+\n+    @Test\n+    public void testShowColumnsWithLikeWithEscape()\n+    {\n+        assertions.assertFails(\"SHOW COLUMNS FROM system.runtime.nodes LIKE 't$_%' ESCAPE ''\", \"Escape string must be a single character\");\n+        assertions.assertFails(\"SHOW COLUMNS FROM system.runtime.nodes LIKE 't$_%' ESCAPE '$$'\", \"Escape string must be a single character\");\n+        assertions.assertQuery(\n+                \"SHOW COLUMNS FROM system.runtime.nodes LIKE '%ode$_id' ESCAPE '$'\",\n+                \"VALUES (CAST('node_id' AS VARCHAR), CAST('varchar' AS VARCHAR), CAST('' AS VARCHAR), CAST('' AS VARCHAR))\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTM2Njc1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/sql/query/TestShowQueries.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMjowOToyM1rOFy2ovA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMjowOToyM1rOFy2ovA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg2ODI4NA==", "bodyText": "can you add tests for SHOW COLUMNS:\n\nwithout LIKE\nwith LIKE but with no wildcards\nempty and null LIKE\nempty, null and incorrect ESCAPE\nwith wrong types given for LIKE and ESCAPE\nwithout LIKE and with ESCAPE (this one in TestSqlParser)", "url": "https://github.com/trinodb/trino/pull/3020#discussion_r388868284", "createdAt": "2020-03-06T12:09:23Z", "author": {"login": "kokosing"}, "path": "presto-main/src/test/java/io/prestosql/sql/query/TestShowQueries.java", "diffHunk": "@@ -91,4 +91,23 @@ public void testListingEmptyCatalogs()\n             assertions.getQueryRunner().getAccessControl().reset();\n         });\n     }\n+\n+    @Test\n+    public void testShowColumnsLike()\n+    {\n+        assertions.assertQuery(\"SHOW COLUMNS FROM system.runtime.nodes LIKE 'node%'\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 857, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}