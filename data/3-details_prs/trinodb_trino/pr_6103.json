{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4MDMwNzkx", "number": 6103, "title": "Drop extra query-completed event for queries failing during preparation", "bodyText": "", "createdAt": "2020-11-26T12:00:32Z", "url": "https://github.com/trinodb/trino/pull/6103", "merged": true, "mergeCommit": {"oid": "ff2d42ac5a7f50bf47469e3595edf884dbd6891c"}, "closed": true, "closedAt": "2020-11-27T09:02:36Z", "author": {"login": "losipiuk"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgVASeAFqTUzOTQyMTkwOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgWYbGABqjQwNDM0NDMwNDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5NDIxOTA4", "url": "https://github.com/trinodb/trino/pull/6103#pullrequestreview-539421908", "createdAt": "2020-11-26T15:48:06Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNTo0ODowNlrOH6gkvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNTo1MDowOFrOH6gpMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTExMzE0OQ==", "bodyText": "Add a comment why we're doing this, otherwise the first impression is \"flaky!\" and the second is \"let's fix that\"", "url": "https://github.com/trinodb/trino/pull/6103#discussion_r531113149", "createdAt": "2020-11-26T15:48:06Z", "author": {"login": "findepi"}, "path": "presto-tests/src/test/java/io/prestosql/execution/EventsAwaitingQueries.java", "diffHunk": "@@ -64,7 +67,7 @@ MaterializedResult runQueryAndWaitForEvents(@Language(\"SQL\") String sql, int num\n         }\n \n         eventsCollector.waitForEvents(10);\n-\n+        Thread.sleep(extraWaitTime.toMillis());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTExMzQ0Nw==", "bodyText": "if you added 1s everywhere, then maybe we do not need this parametric and we can do 1s unconditionally?", "url": "https://github.com/trinodb/trino/pull/6103#discussion_r531113447", "createdAt": "2020-11-26T15:48:36Z", "author": {"login": "findepi"}, "path": "presto-tests/src/test/java/io/prestosql/execution/TestEventListenerWithSplits.java", "diffHunk": "@@ -90,7 +91,7 @@ protected QueryRunner createQueryRunner()\n         queryRunner.getCoordinator().getResourceGroupManager().get()\n                 .setConfigurationManager(\"file\", ImmutableMap.of(\"resource-groups.config-file\", getResourceFilePath(\"resource_groups_config_simple.json\")));\n \n-        queries = new EventsAwaitingQueries(generatedEvents, queryRunner);\n+        queries = new EventsAwaitingQueries(generatedEvents, queryRunner, Duration.ofSeconds(1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTExNDI4OA==", "bodyText": "maybe\nassertFailedQuery(\"This is NOT a SQL statement and will fail to parse\",", "url": "https://github.com/trinodb/trino/pull/6103#discussion_r531114288", "createdAt": "2020-11-26T15:50:08Z", "author": {"login": "findepi"}, "path": "presto-tests/src/test/java/io/prestosql/execution/TestEventListenerBasic.java", "diffHunk": "@@ -131,6 +131,13 @@ public void testAnalysisFailure()\n         assertFailedQuery(\"EXPLAIN (TYPE IO) SELECT sum(bogus) FROM lineitem\", \"line 1:30: Column 'bogus' cannot be resolved\");\n     }\n \n+    @Test\n+    public void testParseError()\n+            throws Exception\n+    {\n+        assertFailedQuery(\"describe formatted table blah\", \"line 1:20: mismatched input 'table'. Expecting: '.', <EOF>\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cacc7e845e7e6889904b983b8de55033a040c8b", "author": {"user": {"login": "losipiuk", "name": "\u0141ukasz Osipiuk"}}, "url": "https://github.com/trinodb/trino/commit/3cacc7e845e7e6889904b983b8de55033a040c8b", "committedDate": "2020-11-26T17:24:46Z", "message": "Add extra wait time for query Events in tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cac3b664b6d2b214d9420695c3259f9192c4dc61", "author": {"user": {"login": "losipiuk", "name": "\u0141ukasz Osipiuk"}}, "url": "https://github.com/trinodb/trino/commit/cac3b664b6d2b214d9420695c3259f9192c4dc61", "committedDate": "2020-11-26T17:27:06Z", "message": "Drop extra query-completed event for queries failing during preparation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "cac3b664b6d2b214d9420695c3259f9192c4dc61", "author": {"user": {"login": "losipiuk", "name": "\u0141ukasz Osipiuk"}}, "url": "https://github.com/trinodb/trino/commit/cac3b664b6d2b214d9420695c3259f9192c4dc61", "committedDate": "2020-11-26T17:27:06Z", "message": "Drop extra query-completed event for queries failing during preparation"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2369, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}