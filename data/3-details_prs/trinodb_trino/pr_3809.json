{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMjQ1MzAw", "number": 3809, "title": "Small fixups", "bodyText": "", "createdAt": "2020-05-21T09:19:01Z", "url": "https://github.com/trinodb/trino/pull/3809", "merged": true, "mergeCommit": {"oid": "07eefdf46c832e7e239a3cd64c71010f98fb4f56"}, "closed": true, "closedAt": "2020-05-21T12:32:13Z", "author": {"login": "sopel39"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjaLsQAFqTQxNjAwMTAwOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjaaDMgBqjMzNTk5ODQ2MDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MDAxMDA5", "url": "https://github.com/trinodb/trino/pull/3809#pullrequestreview-416001009", "createdAt": "2020-05-21T09:22:05Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwOToyMjowNVrOGYsKFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwOToyMzo0MFrOGYsNDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU0MjQ4Nw==", "bodyText": "This is redundant not because synchronization is not needed, but because it's already surrounded by synchronized (failedIrreversibleOperationDescriptions).\nMaybe introduce a local Object lock instead of synchronizing on lists?", "url": "https://github.com/trinodb/trino/pull/3809#discussion_r428542487", "createdAt": "2020-05-21T09:22:05Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/SemiTransactionalHiveMetastore.java", "diffHunk": "@@ -1686,10 +1686,8 @@ private void executeIrreversibleMetastoreOperations()\n                         synchronized (failedIrreversibleOperationDescriptions) {\n                             failedIrreversibleOperationDescriptions.add(irreversibleMetastoreOperation.getDescription());\n                             // A limit is needed to avoid having a huge exception object. 5 was chosen arbitrarily.\n-                            synchronized (suppressedExceptions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU0MzA5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // none of the futures should fail because all exceptions are being caught\n          \n          \n            \n                            // none of the futures should fail because all exceptions are being handled explicitly", "url": "https://github.com/trinodb/trino/pull/3809#discussion_r428543090", "createdAt": "2020-05-21T09:23:21Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/SemiTransactionalHiveMetastore.java", "diffHunk": "@@ -1695,7 +1695,8 @@ private void executeIrreversibleMetastoreOperations()\n             }\n \n             for (CompletableFuture<?> dropFuture : dropFutures.build()) {\n-                MoreFutures.getFutureValue(dropFuture, PrestoException.class);\n+                // none of the futures should fail because all exceptions are being caught", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU0MzI0Ng==", "bodyText": "can static import", "url": "https://github.com/trinodb/trino/pull/3809#discussion_r428543246", "createdAt": "2020-05-21T09:23:40Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/SemiTransactionalHiveMetastore.java", "diffHunk": "@@ -1695,7 +1695,8 @@ private void executeIrreversibleMetastoreOperations()\n             }\n \n             for (CompletableFuture<?> dropFuture : dropFutures.build()) {\n-                MoreFutures.getFutureValue(dropFuture, PrestoException.class);\n+                // none of the futures should fail because all exceptions are being caught\n+                MoreFutures.getFutureValue(dropFuture);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "457b4a1068c6dbd2f3509b8dd27a7f8b69d947cf", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/457b4a1068c6dbd2f3509b8dd27a7f8b69d947cf", "committedDate": "2020-05-21T09:36:13Z", "message": "Remove redundant synchronization\n\nAll threads already synchronize on\nfailedIrreversibleOperationDescriptions\nso this nested synchronization is not needed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "209d02a76ce39f7fd18591f5f6d34efd992604fb", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/209d02a76ce39f7fd18591f5f6d34efd992604fb", "committedDate": "2020-05-21T09:38:27Z", "message": "Make it explicit that none of the futures should fail"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6cea5af949ecd36e724c98087153f2517bc3a6f", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/b6cea5af949ecd36e724c98087153f2517bc3a6f", "committedDate": "2020-05-21T09:38:48Z", "message": "Static import MoreFutures#getFutureValue"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "b6cea5af949ecd36e724c98087153f2517bc3a6f", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/b6cea5af949ecd36e724c98087153f2517bc3a6f", "committedDate": "2020-05-21T09:38:48Z", "message": "Static import MoreFutures#getFutureValue"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1217, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}