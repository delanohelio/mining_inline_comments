{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MDIyNDMy", "number": 2853, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTo1NDoxM1rODhsSIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTo1Njo0OFrODhsU4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NjU1MTM5OnYy", "diffSide": "LEFT", "path": "presto-main/src/main/java/io/prestosql/sql/planner/optimizations/UnaliasSymbolReferences.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTo1NDoxM1rOFskdng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTo1NDoxM1rOFskdng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI3OTA3MA==", "bodyText": "This should be safe to remove (equi should be on same type), so you can extract this to a preparatory cleanup", "url": "https://github.com/trinodb/trino/pull/2853#discussion_r382279070", "createdAt": "2020-02-20T21:54:13Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/optimizations/UnaliasSymbolReferences.java", "diffHunk": "@@ -521,8 +521,9 @@ public PlanNode visitJoin(JoinNode node, RewriteContext<Void> context)\n \n             if (node.getType() == INNER) {\n                 canonicalCriteria.stream()\n-                        .filter(clause -> types.get(clause.getLeft()).equals(types.get(clause.getRight())))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NjU1Nzg2OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/sql/planner/optimizations/UnaliasSymbolReferences.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTo1NjozOVrOFskhzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMDowNTo0M1rOFsxuyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4MDE0Mg==", "bodyText": "I think this is correct except for RIGHT joins. Maybe map equi-condition symbols to left symbol for all joins except RIGHT, and map to right symbols otherwise?", "url": "https://github.com/trinodb/trino/pull/2853#discussion_r382280142", "createdAt": "2020-02-20T21:56:39Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/optimizations/UnaliasSymbolReferences.java", "diffHunk": "@@ -521,8 +521,9 @@ public PlanNode visitJoin(JoinNode node, RewriteContext<Void> context)\n \n             if (node.getType() == INNER) {\n                 canonicalCriteria.stream()\n-                        .filter(clause -> types.get(clause.getLeft()).equals(types.get(clause.getRight())))\n-                        .filter(clause -> node.getOutputSymbols().contains(clause.getLeft()))\n+                        // Map right equi-condition symbols to left symbols. This helps to\n+                        // reuse join node partitioning better as partitioning properties are\n+                        // only derived from probe side symbols", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ3MTE3NQ==", "bodyText": "good catch!", "url": "https://github.com/trinodb/trino/pull/2853#discussion_r382471175", "createdAt": "2020-02-21T09:13:31Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/optimizations/UnaliasSymbolReferences.java", "diffHunk": "@@ -521,8 +521,9 @@ public PlanNode visitJoin(JoinNode node, RewriteContext<Void> context)\n \n             if (node.getType() == INNER) {\n                 canonicalCriteria.stream()\n-                        .filter(clause -> types.get(clause.getLeft()).equals(types.get(clause.getRight())))\n-                        .filter(clause -> node.getOutputSymbols().contains(clause.getLeft()))\n+                        // Map right equi-condition symbols to left symbols. This helps to\n+                        // reuse join node partitioning better as partitioning properties are\n+                        // only derived from probe side symbols", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4MDE0Mg=="}, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ5NjQ1Nw==", "bodyText": "Actually, this is invalid unalias, as one might explicitly check outer equi symbol", "url": "https://github.com/trinodb/trino/pull/2853#discussion_r382496457", "createdAt": "2020-02-21T10:05:43Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/optimizations/UnaliasSymbolReferences.java", "diffHunk": "@@ -521,8 +521,9 @@ public PlanNode visitJoin(JoinNode node, RewriteContext<Void> context)\n \n             if (node.getType() == INNER) {\n                 canonicalCriteria.stream()\n-                        .filter(clause -> types.get(clause.getLeft()).equals(types.get(clause.getRight())))\n-                        .filter(clause -> node.getOutputSymbols().contains(clause.getLeft()))\n+                        // Map right equi-condition symbols to left symbols. This helps to\n+                        // reuse join node partitioning better as partitioning properties are\n+                        // only derived from probe side symbols", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4MDE0Mg=="}, "originalCommit": null, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NjU1ODQxOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/sql/planner/optimizations/UnaliasSymbolReferences.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTo1Njo0OFrOFskiGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTo1Njo0OFrOFskiGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4MDIxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    // Map right equi-condition symbols to left symbols. This helps to\n          \n          \n            \n                                    // Map right equi-condition symbol to left symbol. This helps to", "url": "https://github.com/trinodb/trino/pull/2853#discussion_r382280217", "createdAt": "2020-02-20T21:56:48Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/optimizations/UnaliasSymbolReferences.java", "diffHunk": "@@ -521,8 +521,9 @@ public PlanNode visitJoin(JoinNode node, RewriteContext<Void> context)\n \n             if (node.getType() == INNER) {\n                 canonicalCriteria.stream()\n-                        .filter(clause -> types.get(clause.getLeft()).equals(types.get(clause.getRight())))\n-                        .filter(clause -> node.getOutputSymbols().contains(clause.getLeft()))\n+                        // Map right equi-condition symbols to left symbols. This helps to", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 946, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}