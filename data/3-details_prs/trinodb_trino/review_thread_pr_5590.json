{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1NTI2MDA3", "number": 5590, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMTo0OTo0OFrOEvRoVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMTowMDowNVrOEvuCwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDA3MzgxOnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/docker/DockerFiles.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMTo0OTo0OFrOHkKiHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMTo0OTo0OFrOHkKiHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY4MzM1OA==", "bodyText": "file -> relativePath", "url": "https://github.com/trinodb/trino/pull/5590#discussion_r507683358", "createdAt": "2020-10-19T11:49:48Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/docker/DockerFiles.java", "diffHunk": "@@ -130,4 +141,9 @@ public static Path createTemporaryDirectoryForDocker()\n         }));\n         return temporaryDirectoryForDocker;\n     }\n+\n+    public interface HostDirectory\n+    {\n+        String getPath(String file);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDA4MjY3OnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/docker/DockerFiles.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMTo1MjowNlrOHkKnKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMjowNzozM1rOHkLIEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY4NDY0OQ==", "bodyText": "The implementation is tied to a host directory, but the abstraction defined by the interface could be better described as \"file provider\" or \"resource provider\", not imposing implementation constraints.\nin such a case this could be\ninterface ResourceProvider {\n String getPathOnHost(String resourceName)\n}", "url": "https://github.com/trinodb/trino/pull/5590#discussion_r507684649", "createdAt": "2020-10-19T11:52:06Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/docker/DockerFiles.java", "diffHunk": "@@ -130,4 +141,9 @@ public static Path createTemporaryDirectoryForDocker()\n         }));\n         return temporaryDirectoryForDocker;\n     }\n+\n+    public interface HostDirectory", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY5MDAyOQ==", "bodyText": "interface ResourceProvider {\n String getPath(String resourceName)\n}\n\n?", "url": "https://github.com/trinodb/trino/pull/5590#discussion_r507690029", "createdAt": "2020-10-19T12:01:49Z", "author": {"login": "kokosing"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/docker/DockerFiles.java", "diffHunk": "@@ -130,4 +141,9 @@ public static Path createTemporaryDirectoryForDocker()\n         }));\n         return temporaryDirectoryForDocker;\n     }\n+\n+    public interface HostDirectory", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY4NDY0OQ=="}, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY5MzA3NQ==", "bodyText": "Can be, although getPathOnHost was intentional.\nYou could also make the method reutrn Path, but that would not play as nice with TC APIs.\nup to you", "url": "https://github.com/trinodb/trino/pull/5590#discussion_r507693075", "createdAt": "2020-10-19T12:07:33Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/docker/DockerFiles.java", "diffHunk": "@@ -130,4 +141,9 @@ public static Path createTemporaryDirectoryForDocker()\n         }));\n         return temporaryDirectoryForDocker;\n     }\n+\n+    public interface HostDirectory", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY4NDY0OQ=="}, "originalCommit": null, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDcyODk2OnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/docker/DockerFiles.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMTowMDowNVrOHk2tUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMTowMDowNVrOHk2tUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQwNzEyMQ==", "bodyText": "should public synchronized String getDockerFilesHostPath() above also return Path?", "url": "https://github.com/trinodb/trino/pull/5590#discussion_r508407121", "createdAt": "2020-10-20T11:00:05Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/docker/DockerFiles.java", "diffHunk": "@@ -70,12 +70,12 @@ public synchronized String getDockerFilesHostPath()\n         return dockerFilesHostPath.toString();\n     }\n \n-    public String getDockerFilesHostPath(String file)\n+    public Path getDockerFilesHostPath(String file)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4457, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}