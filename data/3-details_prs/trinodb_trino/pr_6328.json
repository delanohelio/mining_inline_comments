{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MTI2MjAz", "number": 6328, "title": "Add a backup Coordinator to test multi coordinators", "bodyText": "add a backup Coordinator to test #6237", "createdAt": "2020-12-14T04:47:30Z", "url": "https://github.com/trinodb/trino/pull/6328", "merged": true, "mergeCommit": {"oid": "056c0e2bb8b69de7bbb441035e5489a01a5b2adf"}, "closed": true, "closedAt": "2021-01-28T11:59:58Z", "author": {"login": "yangruochen"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABduEHE1AFqTU2NDA2NjgyNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdz2-SigFqTU3NjEwMzMxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0MDY2ODI0", "url": "https://github.com/trinodb/trino/pull/6328#pullrequestreview-564066824", "createdAt": "2021-01-08T08:05:05Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwODowNTowNlrOIQI_sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwODowNTowNlrOIQI_sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzc5NTUwNw==", "bodyText": "final", "url": "https://github.com/trinodb/trino/pull/6328#discussion_r553795507", "createdAt": "2021-01-08T08:05:06Z", "author": {"login": "losipiuk"}, "path": "presto-testing/src/main/java/io/prestosql/testing/DistributedQueryRunner.java", "diffHunk": "@@ -81,6 +81,7 @@\n \n     private final TestingDiscoveryServer discoveryServer;\n     private final TestingPrestoServer coordinator;\n+    private TestingPrestoServer backupCoordinator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0MDY2OTcx", "url": "https://github.com/trinodb/trino/pull/6328#pullrequestreview-564066971", "createdAt": "2021-01-08T08:05:24Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwODowNToyNFrOIQJAHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwODowNToyNFrOIQJAHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzc5NTYxNQ==", "bodyText": "setSingleBackupCoordinatorProperty", "url": "https://github.com/trinodb/trino/pull/6328#discussion_r553795615", "createdAt": "2021-01-08T08:05:24Z", "author": {"login": "losipiuk"}, "path": "presto-testing/src/main/java/io/prestosql/testing/DistributedQueryRunner.java", "diffHunk": "@@ -594,6 +638,11 @@ public Builder setSingleCoordinatorProperty(String key, String value)\n             return setCoordinatorProperties(ImmutableMap.of(key, value));\n         }\n \n+        public Builder setBackupSingleCoordinatorProperty(String key, String value)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 95}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0MDY4Mzcw", "url": "https://github.com/trinodb/trino/pull/6328#pullrequestreview-564068370", "createdAt": "2021-01-08T08:08:23Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwODowODoyM1rOIQJEfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwODowODoyM1rOIQJEfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzc5NjczMw==", "bodyText": "If we are to determine if we should use backup coordinator based on existence of backupCoordinatorProperties then declare it as Optional<Map<String, String> and use isPresent() for check.", "url": "https://github.com/trinodb/trino/pull/6328#discussion_r553796733", "createdAt": "2021-01-08T08:08:23Z", "author": {"login": "losipiuk"}, "path": "presto-testing/src/main/java/io/prestosql/testing/DistributedQueryRunner.java", "diffHunk": "@@ -104,9 +105,31 @@ private DistributedQueryRunner(\n             Optional<Path> baseDataDir,\n             List<SystemAccessControl> systemAccessControls)\n             throws Exception\n+    {\n+        this(defaultSession, nodeCount, extraProperties, coordinatorProperties, null, environment, additionalModule, baseDataDir, systemAccessControls);\n+    }\n+\n+    private DistributedQueryRunner(\n+            Session defaultSession,\n+            int nodeCount,\n+            Map<String, String> extraProperties,\n+            Map<String, String> coordinatorProperties,\n+            Map<String, String> backupCoordinatorProperties,\n+            String environment,\n+            Module additionalModule,\n+            Optional<Path> baseDataDir,\n+            List<SystemAccessControl> systemAccessControls)\n+            throws Exception\n     {\n         requireNonNull(defaultSession, \"defaultSession is null\");\n \n+        if (backupCoordinatorProperties != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY3MjE0MDI5", "url": "https://github.com/trinodb/trino/pull/6328#pullrequestreview-567214029", "createdAt": "2021-01-13T13:22:32Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxMzoyMjozMlrOISu94g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxMzoyMjozMlrOISu94g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjUxNDc4Ng==", "bodyText": "add checkArgument(nodeCount >2, ... in the backupCoordinatorProperties.isPresent() section in the constructor and drop it from this if", "url": "https://github.com/trinodb/trino/pull/6328#discussion_r556514786", "createdAt": "2021-01-13T13:22:32Z", "author": {"login": "losipiuk"}, "path": "testing/trino-testing/src/main/java/io/trino/testing/DistributedQueryRunner.java", "diffHunk": "@@ -147,6 +155,20 @@ private DistributedQueryRunner(\n                     baseDataDir,\n                     systemAccessControls));\n             servers.add(coordinator);\n+            if (nodeCount >= 2 && backupCoordinatorProperties.isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwMzQ5MTQ1", "url": "https://github.com/trinodb/trino/pull/6328#pullrequestreview-570349145", "createdAt": "2021-01-18T10:18:39Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQxMDoxODozOVrOIVijVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQxMDoxODozOVrOIVijVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQ1NzEwOA==", "bodyText": "Why do we need this. I would very much prefer that we do not need to set explicit listen ports and use random ones. With 8080 used by tests it is very probable to get a port conflict on test run", "url": "https://github.com/trinodb/trino/pull/6328#discussion_r559457108", "createdAt": "2021-01-18T10:18:39Z", "author": {"login": "losipiuk"}, "path": "testing/trino-testing/src/main/java/io/trino/testing/DistributedQueryRunner.java", "diffHunk": "@@ -107,6 +110,14 @@ private DistributedQueryRunner(\n     {\n         requireNonNull(defaultSession, \"defaultSession is null\");\n \n+        if (backupCoordinatorProperties.isPresent()) {\n+            requireNonNull(coordinatorProperties, \"coordinatorProperties cannot be null, if backupCoordinatorProperties is not null!\");\n+            requireNonNull(coordinatorProperties.get(\"http-server.http.port\"), \"the http-server.http.port of coordinatorProperties cannot be null, if backupCoordinatorProperties is not null!\");\n+            requireNonNull(backupCoordinatorProperties.get().get(\"http-server.http.port\"), \"the http-server.http.port of backupCoordinatorProperties cannot be null, if backupCoordinatorProperties is not null!\");\n+            Assertions.assertNotEquals(coordinatorProperties.get(\"http-server.http.port\"), backupCoordinatorProperties.get().get(\"http-server.http.port\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwMzUxNTQ5", "url": "https://github.com/trinodb/trino/pull/6328#pullrequestreview-570351549", "createdAt": "2021-01-18T10:21:38Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQxMDoyMTozOFrOIViqPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQxMDoyMTozOFrOIViqPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQ1ODg3Nw==", "bodyText": "I did not notice that before. We should not need a specific port assignement.\nWith that said it may not make sense any more to specify if backup coordinator should be used or not based on existence of backup coordinator properties.\nPlease leave the setSingleBackupCoordinatorProperty method but add another one to explicitly specify that we want to use backup coordinator: enableBackupCoordinator()", "url": "https://github.com/trinodb/trino/pull/6328#discussion_r559458877", "createdAt": "2021-01-18T10:21:38Z", "author": {"login": "losipiuk"}, "path": "testing/trino-tests/src/test/java/io/trino/connector/system/runtime/TestSystemConnector.java", "diffHunk": "@@ -75,7 +75,10 @@ protected QueryRunner createQueryRunner()\n                 .setSchema(\"default\")\n                 .build();\n \n-        DistributedQueryRunner queryRunner = DistributedQueryRunner.builder(defaultSession).build();\n+        DistributedQueryRunner queryRunner = DistributedQueryRunner.builder(defaultSession)\n+                .setSingleCoordinatorProperty(\"http-server.http.port\", \"8080\")\n+                .setSingleBackupCoordinatorProperty(\"http-server.http.port\", \"8081\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc1MjQ5NDg4", "url": "https://github.com/trinodb/trino/pull/6328#pullrequestreview-575249488", "createdAt": "2021-01-25T10:18:37Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxMDoxODozOFrOIZf44g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxMDoxODozOFrOIZf44g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzYwNzc3OA==", "bodyText": "Use Optional.of we do not expect null to be passed here", "url": "https://github.com/trinodb/trino/pull/6328#discussion_r563607778", "createdAt": "2021-01-25T10:18:38Z", "author": {"login": "losipiuk"}, "path": "testing/trino-testing/src/main/java/io/trino/testing/DistributedQueryRunner.java", "diffHunk": "@@ -584,6 +614,12 @@ public Builder setCoordinatorProperties(Map<String, String> coordinatorPropertie\n             return this;\n         }\n \n+        public Builder setBackupCoordinatorProperties(Map<String, String> backupCoordinatorProperties)\n+        {\n+            this.backupCoordinatorProperties = Optional.ofNullable(backupCoordinatorProperties);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 94}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2bd90946b28d21fca7c19b7042d5252d540d786", "author": {"user": {"login": "yangruochen", "name": null}}, "url": "https://github.com/trinodb/trino/commit/b2bd90946b28d21fca7c19b7042d5252d540d786", "committedDate": "2021-01-26T07:42:18Z", "message": "Add a backup Coordinator to test multi coordinators"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "b2bd90946b28d21fca7c19b7042d5252d540d786", "author": {"user": {"login": "yangruochen", "name": null}}, "url": "https://github.com/trinodb/trino/commit/b2bd90946b28d21fca7c19b7042d5252d540d786", "committedDate": "2021-01-26T07:42:18Z", "message": "Add a backup Coordinator to test multi coordinators"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc2MTAzMzE4", "url": "https://github.com/trinodb/trino/pull/6328#pullrequestreview-576103318", "createdAt": "2021-01-26T08:10:17Z", "commit": {"oid": "b2bd90946b28d21fca7c19b7042d5252d540d786"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1812, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}