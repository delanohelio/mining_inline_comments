{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MzkyNzIz", "number": 4722, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzozMTo0M1rOEWHFyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOTo1MTo0NlrOEXW9QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjIwMjk2OnYy", "diffSide": "RIGHT", "path": "presto-testing/pom.xml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzozMTo0M1rOG9PlUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMjo0ODoxM1rOG9Yimw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3MTYzNA==", "bodyText": "Maybe you want presto-testing-kafka?", "url": "https://github.com/trinodb/trino/pull/4722#discussion_r466871634", "createdAt": "2020-08-07T07:31:43Z", "author": {"login": "kokosing"}, "path": "presto-testing/pom.xml", "diffHunk": "@@ -92,6 +92,16 @@\n             <artifactId>jackson-annotations</artifactId>\n         </dependency>\n \n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk1MzYzNA==", "bodyText": "Do you mean I should create a separate module?", "url": "https://github.com/trinodb/trino/pull/4722#discussion_r466953634", "createdAt": "2020-08-07T10:20:23Z", "author": {"login": "elonazoulay"}, "path": "presto-testing/pom.xml", "diffHunk": "@@ -92,6 +92,16 @@\n             <artifactId>jackson-annotations</artifactId>\n         </dependency>\n \n+        <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3MTYzNA=="}, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzAxODM5NQ==", "bodyText": "Yes", "url": "https://github.com/trinodb/trino/pull/4722#discussion_r467018395", "createdAt": "2020-08-07T12:48:13Z", "author": {"login": "kokosing"}, "path": "presto-testing/pom.xml", "diffHunk": "@@ -92,6 +92,16 @@\n             <artifactId>jackson-annotations</artifactId>\n         </dependency>\n \n+        <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3MTYzNA=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjIwNDk3OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzozMjoyNVrOG9Pmcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMjo0ODowOVrOG9Yidw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3MTkyMw==", "bodyText": "TestingKafka is used by multiple modules for testing.\n\nWhat modules?\nIf you are copying it can you please remove testing kafka from other place and reuse your testing kafka?", "url": "https://github.com/trinodb/trino/pull/4722#discussion_r466871923", "createdAt": "2020-08-07T07:32:25Z", "author": {"login": "kokosing"}, "path": "pom.xml", "diffHunk": "@@ -1114,6 +1114,12 @@\n                 <version>3.6.1</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk2NDc5Nw==", "bodyText": "That's done in the commit \"Use TestingKafka from presto-testing\". Should I squash this one with the previous 2 commits?", "url": "https://github.com/trinodb/trino/pull/4722#discussion_r466964797", "createdAt": "2020-08-07T10:46:41Z", "author": {"login": "elonazoulay"}, "path": "pom.xml", "diffHunk": "@@ -1114,6 +1114,12 @@\n                 <version>3.6.1</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3MTkyMw=="}, "originalCommit": null, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzAxODM1OQ==", "bodyText": "Yes, let squash them.", "url": "https://github.com/trinodb/trino/pull/4722#discussion_r467018359", "createdAt": "2020-08-07T12:48:09Z", "author": {"login": "kokosing"}, "path": "pom.xml", "diffHunk": "@@ -1114,6 +1114,12 @@\n                 <version>3.6.1</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3MTkyMw=="}, "originalCommit": null, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjIwNjA3OnYy", "diffSide": "LEFT", "path": "presto-kafka/src/test/java/io/prestosql/plugin/kafka/util/TestingKafka.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzozMjo1MVrOG9PnNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzozMjo1MVrOG9PnNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3MjExOQ==", "bodyText": "Please squash this commit with the first one.", "url": "https://github.com/trinodb/trino/pull/4722#discussion_r466872119", "createdAt": "2020-08-07T07:32:51Z", "author": {"login": "kokosing"}, "path": "presto-kafka/src/test/java/io/prestosql/plugin/kafka/util/TestingKafka.java", "diffHunk": "@@ -1,92 +0,0 @@\n-/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjIxMDUyOnYy", "diffSide": "RIGHT", "path": "presto-pinot/src/main/java/io/prestosql/pinot/PinotConnectorFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzozNDozMlrOG9PqAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMDoyOToxMlrOG9U0jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3MjgzMw==", "bodyText": "Is this extension needed for host mapper? If not please use separate commit.", "url": "https://github.com/trinodb/trino/pull/4722#discussion_r466872833", "createdAt": "2020-08-07T07:34:32Z", "author": {"login": "kokosing"}, "path": "presto-pinot/src/main/java/io/prestosql/pinot/PinotConnectorFactory.java", "diffHunk": "@@ -23,12 +25,20 @@\n import org.weakref.jmx.guice.MBeanModule;\n \n import java.util.Map;\n+import java.util.Optional;\n \n import static java.util.Objects.requireNonNull;\n \n public class PinotConnectorFactory\n         implements ConnectorFactory\n {\n+    private final Optional<Module> extension;\n+\n+    public PinotConnectorFactory(Optional<Module> extension)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk1NzQ1Mw==", "bodyText": "Yes, it's needed for the hostmapper.", "url": "https://github.com/trinodb/trino/pull/4722#discussion_r466957453", "createdAt": "2020-08-07T10:29:12Z", "author": {"login": "elonazoulay"}, "path": "presto-pinot/src/main/java/io/prestosql/pinot/PinotConnectorFactory.java", "diffHunk": "@@ -23,12 +25,20 @@\n import org.weakref.jmx.guice.MBeanModule;\n \n import java.util.Map;\n+import java.util.Optional;\n \n import static java.util.Objects.requireNonNull;\n \n public class PinotConnectorFactory\n         implements ConnectorFactory\n {\n+    private final Optional<Module> extension;\n+\n+    public PinotConnectorFactory(Optional<Module> extension)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3MjgzMw=="}, "originalCommit": null, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjIxMzc3OnYy", "diffSide": "RIGHT", "path": "presto-pinot/src/test/java/io/prestosql/pinot/TestMinimalFunctionality.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzozNTozN1rOG9Pr7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzozNTozN1rOG9Pr7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3MzMyNA==", "bodyText": "Please squash that commit with Add TestingPinotCluster", "url": "https://github.com/trinodb/trino/pull/4722#discussion_r466873324", "createdAt": "2020-08-07T07:35:37Z", "author": {"login": "kokosing"}, "path": "presto-pinot/src/test/java/io/prestosql/pinot/TestMinimalFunctionality.java", "diffHunk": "@@ -16,31 +16,39 @@\n import com.fasterxml.jackson.annotation.JsonCreator;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableMap;\n+import io.prestosql.pinot.client.PinotHostMapper;\n import io.prestosql.pinot.util.TestingPinotCluster;\n+import io.prestosql.pinot.util.TestingPinotHostMapper;\n+import io.prestosql.testing.AbstractTestQueryFramework;\n+import io.prestosql.testing.QueryRunner;\n import io.prestosql.testing.kafka.TestingKafka;\n import org.apache.kafka.clients.producer.KafkaProducer;\n import org.apache.kafka.clients.producer.ProducerRecord;\n import org.testng.annotations.AfterClass;\n-import org.testng.annotations.BeforeClass;\n import org.testng.annotations.Test;\n \n import java.time.Instant;\n import java.util.Arrays;\n import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n \n+import static com.google.inject.multibindings.OptionalBinder.newOptionalBinder;\n import static io.airlift.testing.Closeables.closeAllRuntimeException;\n import static java.util.Objects.requireNonNull;\n \n @Test(singleThreaded = true)\n public class TestMinimalFunctionality\n+        extends AbstractTestQueryFramework", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTI4NTg0OnYy", "diffSide": "RIGHT", "path": "presto-testing-kafka/src/main/java/io/prestosql/testing/kafka/TestingKafka.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOTo1MTowMlrOG_G4Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDo1OTo1NVrOG_lVEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgyNjE1OQ==", "bodyText": "Unrelated change?", "url": "https://github.com/trinodb/trino/pull/4722#discussion_r468826159", "createdAt": "2020-08-11T19:51:02Z", "author": {"login": "martint"}, "path": "presto-testing-kafka/src/main/java/io/prestosql/testing/kafka/TestingKafka.java", "diffHunk": "@@ -34,7 +34,7 @@\n \n     public TestingKafka()\n     {\n-        container = new KafkaContainer(\"5.4.1\");\n+        container = new KafkaContainer(\"5.4.1\").withNetworkAliases(\"kafka\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0NjgxMw==", "bodyText": "I had it in a separate commit but squashed it after previous review.\nShould I put it back in a separate commit?", "url": "https://github.com/trinodb/trino/pull/4722#discussion_r469246813", "createdAt": "2020-08-12T13:10:08Z", "author": {"login": "elonazoulay"}, "path": "presto-testing-kafka/src/main/java/io/prestosql/testing/kafka/TestingKafka.java", "diffHunk": "@@ -34,7 +34,7 @@\n \n     public TestingKafka()\n     {\n-        container = new KafkaContainer(\"5.4.1\");\n+        container = new KafkaContainer(\"5.4.1\").withNetworkAliases(\"kafka\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgyNjE1OQ=="}, "originalCommit": null, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyNTA3NQ==", "bodyText": "Yes, since it's a logically independent change, it's better to track it separately.", "url": "https://github.com/trinodb/trino/pull/4722#discussion_r469325075", "createdAt": "2020-08-12T14:59:55Z", "author": {"login": "martint"}, "path": "presto-testing-kafka/src/main/java/io/prestosql/testing/kafka/TestingKafka.java", "diffHunk": "@@ -34,7 +34,7 @@\n \n     public TestingKafka()\n     {\n-        container = new KafkaContainer(\"5.4.1\");\n+        container = new KafkaContainer(\"5.4.1\").withNetworkAliases(\"kafka\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgyNjE1OQ=="}, "originalCommit": null, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTI4ODMyOnYy", "diffSide": "LEFT", "path": "presto-kafka/src/test/java/io/prestosql/plugin/kafka/util/TestUtils.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOTo1MTo0NlrOG_G5rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDo1OTozNlrOG_lUFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgyNjU0Mw==", "bodyText": "Why did this move?", "url": "https://github.com/trinodb/trino/pull/4722#discussion_r468826543", "createdAt": "2020-08-11T19:51:46Z", "author": {"login": "martint"}, "path": "presto-kafka/src/test/java/io/prestosql/plugin/kafka/util/TestUtils.java", "diffHunk": "@@ -19,29 +19,20 @@\n import io.prestosql.plugin.kafka.KafkaTopicDescription;\n import io.prestosql.spi.connector.SchemaTableName;\n import io.prestosql.testing.TestingPrestoClient;\n+import io.prestosql.testing.kafka.TestingKafka;\n import org.apache.kafka.clients.producer.KafkaProducer;\n \n import java.io.IOException;\n import java.util.AbstractMap;\n import java.util.Map;\n import java.util.Optional;\n-import java.util.Properties;\n \n import static java.lang.String.format;\n \n public final class TestUtils\n {\n     private TestUtils() {}\n \n-    static Properties toProperties(Map<String, String> map)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0Nzc3Mw==", "bodyText": "This was only used by TestingKafka.", "url": "https://github.com/trinodb/trino/pull/4722#discussion_r469247773", "createdAt": "2020-08-12T13:11:41Z", "author": {"login": "elonazoulay"}, "path": "presto-kafka/src/test/java/io/prestosql/plugin/kafka/util/TestUtils.java", "diffHunk": "@@ -19,29 +19,20 @@\n import io.prestosql.plugin.kafka.KafkaTopicDescription;\n import io.prestosql.spi.connector.SchemaTableName;\n import io.prestosql.testing.TestingPrestoClient;\n+import io.prestosql.testing.kafka.TestingKafka;\n import org.apache.kafka.clients.producer.KafkaProducer;\n \n import java.io.IOException;\n import java.util.AbstractMap;\n import java.util.Map;\n import java.util.Optional;\n-import java.util.Properties;\n \n import static java.lang.String.format;\n \n public final class TestUtils\n {\n     private TestUtils() {}\n \n-    static Properties toProperties(Map<String, String> map)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgyNjU0Mw=="}, "originalCommit": null, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyNDgyMQ==", "bodyText": "Maybe move it to a separate commit", "url": "https://github.com/trinodb/trino/pull/4722#discussion_r469324821", "createdAt": "2020-08-12T14:59:36Z", "author": {"login": "martint"}, "path": "presto-kafka/src/test/java/io/prestosql/plugin/kafka/util/TestUtils.java", "diffHunk": "@@ -19,29 +19,20 @@\n import io.prestosql.plugin.kafka.KafkaTopicDescription;\n import io.prestosql.spi.connector.SchemaTableName;\n import io.prestosql.testing.TestingPrestoClient;\n+import io.prestosql.testing.kafka.TestingKafka;\n import org.apache.kafka.clients.producer.KafkaProducer;\n \n import java.io.IOException;\n import java.util.AbstractMap;\n import java.util.Map;\n import java.util.Optional;\n-import java.util.Properties;\n \n import static java.lang.String.format;\n \n public final class TestUtils\n {\n     private TestUtils() {}\n \n-    static Properties toProperties(Map<String, String> map)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgyNjU0Mw=="}, "originalCommit": null, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3619, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}