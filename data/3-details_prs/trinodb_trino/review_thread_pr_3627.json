{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNDc3NTIz", "number": 3627, "reviewThreads": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjozNzo0MlrOD5Ygrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMDo1NDoxNVrOD-6OIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDk3MDA2OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveMetadata.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjozNzo0MlrOGQnW3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjo0NDoxMlrOGQyMtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA3NTIyOQ==", "bodyText": "Is it suitable to external tables only?\n(it's likely, but please mention this in a comment or link to apache/hive repo, to the place where this is being if-d on)", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r420075229", "createdAt": "2020-05-05T12:37:42Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveMetadata.java", "diffHunk": "@@ -1061,6 +1061,9 @@ private static Table buildTableObject(\n \n         if (external) {\n             tableParameters.put(\"EXTERNAL\", \"TRUE\");\n+            // collecting stats (like number of files) at table creation time can cause the the DDL statement to time out\n+            // when the table location contains a large number of files\n+            tableParameters.put(\"DO_NOT_UPDATE_STATS\", \"true\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA3Njg2Mg==", "bodyText": "Also, do we need to fill tableParameters, or only the EnvironmentContext?", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r420076862", "createdAt": "2020-05-05T12:40:28Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveMetadata.java", "diffHunk": "@@ -1061,6 +1061,9 @@ private static Table buildTableObject(\n \n         if (external) {\n             tableParameters.put(\"EXTERNAL\", \"TRUE\");\n+            // collecting stats (like number of files) at table creation time can cause the the DDL statement to time out\n+            // when the table location contains a large number of files\n+            tableParameters.put(\"DO_NOT_UPDATE_STATS\", \"true\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA3NTIyOQ=="}, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI1Mjg1Mg==", "bodyText": "Is it suitable to external tables only?\n\nI tried to restrict to external table creation because managed tables cannot be created in a location that already contains data, so they're not affected by this problem.  Hive doesn't really make a distinction.\n\nAlso, do we need to fill tableParameters, or only the EnvironmentContext?\n\nI was initially using table parameters as a vehicle to inform ThriftHiveMetastore that it needed to make a different call.  But after our offline conversation where you pointed out that we needed to support Hive 1.x, I discovered that the context parameter is ignored in that version, however the table property is honored.", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r420252852", "createdAt": "2020-05-05T16:44:12Z", "author": {"login": "aalbu"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveMetadata.java", "diffHunk": "@@ -1061,6 +1061,9 @@ private static Table buildTableObject(\n \n         if (external) {\n             tableParameters.put(\"EXTERNAL\", \"TRUE\");\n+            // collecting stats (like number of files) at table creation time can cause the the DDL statement to time out\n+            // when the table location contains a large number of files\n+            tableParameters.put(\"DO_NOT_UPDATE_STATS\", \"true\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA3NTIyOQ=="}, "originalCommit": null, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDk3NjM0OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftHiveMetastore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjozOToxOFrOGQnapQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjozODo0NVrOGQx-8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA3NjE5Nw==", "bodyText": "Does it have to be conditional?\nI don't think there is a situation where I would want metastore to collect the basic stats (we update them for managed tables, and for external tables you are now disabling them)", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r420076197", "createdAt": "2020-05-05T12:39:18Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftHiveMetastore.java", "diffHunk": "@@ -1064,7 +1065,31 @@ public void alterTable(HiveIdentity identity, String databaseName, String tableN\n                     .stopOnIllegalExceptions()\n                     .run(\"alterTable\", stats.getAlterTable().wrap(() -> {\n                         try (ThriftMetastoreClient client = createMetastoreClient(identity)) {\n-                            client.alterTable(databaseName, tableName, table);\n+                            Map<String, String> tableParameters = table.getParameters();\n+                            String statsParam = \"DO_NOT_UPDATE_STATS\";\n+                            if (\"true\".equals(tableParameters.get(statsParam))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI0OTMzMQ==", "bodyText": "I was trying to minimize the number of code paths affected by this change, because I didn't fully understand potential consequences.\nNow that you mention it, we don't need the stats collected by Hive anyway, so it would make sense to make this unconditional.", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r420249331", "createdAt": "2020-05-05T16:38:45Z", "author": {"login": "aalbu"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftHiveMetastore.java", "diffHunk": "@@ -1064,7 +1065,31 @@ public void alterTable(HiveIdentity identity, String databaseName, String tableN\n                     .stopOnIllegalExceptions()\n                     .run(\"alterTable\", stats.getAlterTable().wrap(() -> {\n                         try (ThriftMetastoreClient client = createMetastoreClient(identity)) {\n-                            client.alterTable(databaseName, tableName, table);\n+                            Map<String, String> tableParameters = table.getParameters();\n+                            String statsParam = \"DO_NOT_UPDATE_STATS\";\n+                            if (\"true\".equals(tableParameters.get(statsParam))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA3NjE5Nw=="}, "originalCommit": null, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDk4NDEyOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftHiveMetastore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjo0MToyMlrOGQnfXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNDowNDozMVrOGQrA6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA3NzQwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                    chosenGetTableAlternative,\n          \n          \n            \n                                                    chosenAlterTableAlternative,", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r420077407", "createdAt": "2020-05-05T12:41:22Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftHiveMetastore.java", "diffHunk": "@@ -1064,7 +1065,31 @@ public void alterTable(HiveIdentity identity, String databaseName, String tableN\n                     .stopOnIllegalExceptions()\n                     .run(\"alterTable\", stats.getAlterTable().wrap(() -> {\n                         try (ThriftMetastoreClient client = createMetastoreClient(identity)) {\n-                            client.alterTable(databaseName, tableName, table);\n+                            Map<String, String> tableParameters = table.getParameters();\n+                            String statsParam = \"DO_NOT_UPDATE_STATS\";\n+                            if (\"true\".equals(tableParameters.get(statsParam))) {\n+                                EnvironmentContext context = new EnvironmentContext();\n+                                context.setProperties(ImmutableMap.of(statsParam, \"true\"));\n+                                // the DO_NOT_UPDATE_STATS is not supposed to be a persistent parameter\n+                                table.setParameters(tableParameters.entrySet().stream()\n+                                        .filter(entry -> !statsParam.equals(entry.getKey()))\n+                                        .collect(toImmutableMap(Map.Entry::getKey, Map.Entry::getValue)));\n+                                alternativeCall(\n+                                        () -> client,\n+                                        ThriftHiveMetastore::defaultIsValidExceptionalResponse,\n+                                        chosenGetTableAlternative,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEzNTE0Nw==", "bodyText": "Copy pasta :)", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r420135147", "createdAt": "2020-05-05T14:04:31Z", "author": {"login": "aalbu"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftHiveMetastore.java", "diffHunk": "@@ -1064,7 +1065,31 @@ public void alterTable(HiveIdentity identity, String databaseName, String tableN\n                     .stopOnIllegalExceptions()\n                     .run(\"alterTable\", stats.getAlterTable().wrap(() -> {\n                         try (ThriftMetastoreClient client = createMetastoreClient(identity)) {\n-                            client.alterTable(databaseName, tableName, table);\n+                            Map<String, String> tableParameters = table.getParameters();\n+                            String statsParam = \"DO_NOT_UPDATE_STATS\";\n+                            if (\"true\".equals(tableParameters.get(statsParam))) {\n+                                EnvironmentContext context = new EnvironmentContext();\n+                                context.setProperties(ImmutableMap.of(statsParam, \"true\"));\n+                                // the DO_NOT_UPDATE_STATS is not supposed to be a persistent parameter\n+                                table.setParameters(tableParameters.entrySet().stream()\n+                                        .filter(entry -> !statsParam.equals(entry.getKey()))\n+                                        .collect(toImmutableMap(Map.Entry::getKey, Map.Entry::getValue)));\n+                                alternativeCall(\n+                                        () -> client,\n+                                        ThriftHiveMetastore::defaultIsValidExceptionalResponse,\n+                                        chosenGetTableAlternative,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA3NzQwNw=="}, "originalCommit": null, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDk4NTYxOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftHiveMetastore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjo0MTo0NFrOGQngQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjo0MTo0NFrOGQngQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA3NzYzNQ==", "bodyText": "if return is required, use return null (0 looks more meaningful)", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r420077635", "createdAt": "2020-05-05T12:41:44Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftHiveMetastore.java", "diffHunk": "@@ -1064,7 +1065,31 @@ public void alterTable(HiveIdentity identity, String databaseName, String tableN\n                     .stopOnIllegalExceptions()\n                     .run(\"alterTable\", stats.getAlterTable().wrap(() -> {\n                         try (ThriftMetastoreClient client = createMetastoreClient(identity)) {\n-                            client.alterTable(databaseName, tableName, table);\n+                            Map<String, String> tableParameters = table.getParameters();\n+                            String statsParam = \"DO_NOT_UPDATE_STATS\";\n+                            if (\"true\".equals(tableParameters.get(statsParam))) {\n+                                EnvironmentContext context = new EnvironmentContext();\n+                                context.setProperties(ImmutableMap.of(statsParam, \"true\"));\n+                                // the DO_NOT_UPDATE_STATS is not supposed to be a persistent parameter\n+                                table.setParameters(tableParameters.entrySet().stream()\n+                                        .filter(entry -> !statsParam.equals(entry.getKey()))\n+                                        .collect(toImmutableMap(Map.Entry::getKey, Map.Entry::getValue)));\n+                                alternativeCall(\n+                                        () -> client,\n+                                        ThriftHiveMetastore::defaultIsValidExceptionalResponse,\n+                                        chosenGetTableAlternative,\n+                                        metastoreClient -> {\n+                                            metastoreClient.alterTableWithEnvironmentContext(databaseName, tableName, table, context);\n+                                            return 0;\n+                                        },\n+                                        metastoreClient -> {\n+                                            metastoreClient.alterTable(databaseName, tableName, table);\n+                                            return 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODgxNzA2OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftMetastoreClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMDowOTozNVrOGRMRBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMDowOTozNVrOGRMRBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY3OTk0MA==", "bodyText": "remove void alterTable(String databaseName, String tableName, Table newTable), it's unused now", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r420679940", "createdAt": "2020-05-06T10:09:35Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftMetastoreClient.java", "diffHunk": "@@ -71,6 +72,9 @@ void dropTable(String databaseName, String name, boolean deleteData)\n     void alterTable(String databaseName, String tableName, Table newTable)\n             throws TException;\n \n+    void alterTableWithEnvironmentContext(String databaseName, String tableName, Table newTable, EnvironmentContext context)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODgxOTY4OnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMDoxMDoyNFrOGRMSkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMDoxMTo1MlrOGRMVZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY4MDMzOQ==", "bodyText": "Add a comment why this assertion matters, so that someone doesn't put an if around this again (like i did).\nE.g. link to the issue.", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r420680339", "createdAt": "2020-05-06T10:10:24Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "diffHunk": "@@ -126,10 +126,8 @@ public void testCreatePartitioned()\n                 \"WHERE n_nationkey <> 23\", tableName));\n \n         try {\n-            if (getHiveVersionMajor() < 3) {\n-                BasicStatistics tableStatistics = getBasicStatisticsForTable(onHive(), tableName);\n-                assertThatStatisticsAreNotPresent(tableStatistics);\n-            }\n+            BasicStatistics tableStatistics = getBasicStatisticsForTable(onHive(), tableName);\n+            assertThatStatisticsAreNotPresent(tableStatistics);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY4MTA2Mg==", "bodyText": "Also, can you add a test for CREATE external table?\n(partitioned and not partitioned)", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r420681062", "createdAt": "2020-05-06T10:11:52Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "diffHunk": "@@ -126,10 +126,8 @@ public void testCreatePartitioned()\n                 \"WHERE n_nationkey <> 23\", tableName));\n \n         try {\n-            if (getHiveVersionMajor() < 3) {\n-                BasicStatistics tableStatistics = getBasicStatisticsForTable(onHive(), tableName);\n-                assertThatStatisticsAreNotPresent(tableStatistics);\n-            }\n+            BasicStatistics tableStatistics = getBasicStatisticsForTable(onHive(), tableName);\n+            assertThatStatisticsAreNotPresent(tableStatistics);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY4MDMzOQ=="}, "originalCommit": null, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODE5OTg3OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveMetadata.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMDo1ODoyMlrOGUBO-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMDo1ODoyMlrOGUBO-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0NDkyMw==", "bodyText": "If i recall correctly, this is required for some, but not all hms versions. If this is the case, please leave some info in the code comment. Same for DO_NOT_UPDATE_STATS env.", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r423644923", "createdAt": "2020-05-12T10:58:22Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveMetadata.java", "diffHunk": "@@ -947,6 +947,10 @@ public void createTable(ConnectorSession session, ConnectorTableMetadata tableMe\n                     tableProperties.put(CSV_SEPARATOR_KEY, separator.toString());\n                 });\n \n+        // prevent HMS from gathering these stats at table creation, since it can be expensive\n+        tableProperties.put(\"numFiles\", \"-1\");\n+        tableProperties.put(\"totalSize\", \"-1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODIwNjE0OnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMTowMDowOFrOGUBS1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMTowMDowOFrOGUBS1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0NTkwOA==", "bodyText": "maybe:\nhttps://github.com/prestosql/presto/blob/1b457a1188b44828d5aba7eb7e58d9aa45e1df28/presto-hive/src/test/java/io/prestosql/plugin/hive/TestHiveIntegrationSmokeTest.java#L6469", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r423645908", "createdAt": "2020-05-12T11:00:08Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "diffHunk": "@@ -420,6 +501,24 @@ private static BasicStatistics basicStatisticsFromDescribeResult(QueryResult res\n         return new BasicStatistics(numFiles, numRows, rawDataSize, totalSize);\n     }\n \n+    private static Optional<String> getTableLocation(String tableName)\n+    {\n+        QueryResult describeResult = onHive().executeQuery(format(\"DESCRIBE FORMATTED %s\", tableName));\n+        verify(describeResult.getColumnsCount() == 3, \"describe result is expected to have 3 columns\");\n+        for (List<?> row : describeResult.rows()) {\n+            Optional<String> name = Optional.ofNullable(row.get(0))\n+                    .map(Object::toString)\n+                    .map(String::trim);\n+\n+            if (name.isPresent() && \"Location:\".equals(name.get())) {\n+                return Optional.ofNullable(row.get(1))\n+                        .map(Object::toString)\n+                        .map(String::trim);\n+            }\n+        }\n+        return Optional.empty();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODIwODEzOnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMTowMDo0NFrOGUBUIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMTowMDo0NFrOGUBUIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0NjI0Mw==", "bodyText": "Do we need helperTableName table? can we use nation directly instead?", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r423646243", "createdAt": "2020-05-12T11:00:44Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "diffHunk": "@@ -54,6 +55,41 @@ public void testCreateUnpartitioned()\n         }\n     }\n \n+    @Test\n+    public void testCreateExternalUnpartitioned()\n+    {\n+        String tableName = \"test_basic_statistics_external_unpartitioned_presto\";\n+        String helperTableName = tableName + \"_helper\";\n+\n+        onPresto().executeQuery(format(\"DROP TABLE IF EXISTS %s\", helperTableName));\n+        onPresto().executeQuery(format(\"DROP TABLE IF EXISTS %s\", tableName));\n+        onPresto().executeQuery(format(\"CREATE TABLE %s AS SELECT * FROM nation\", helperTableName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODIxMjQ3OnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMTowMjoxM1rOGUBXEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMTowMjoxM1rOGUBXEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0Njk5NQ==", "bodyText": "Maybe in partitioned table case, we could call sync_partitions procedure and verify again.\n(Unless it wouldn't work in that case, then keep as it is.)", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r423646995", "createdAt": "2020-05-12T11:02:13Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "diffHunk": "@@ -144,6 +180,51 @@ public void testCreatePartitioned()\n         }\n     }\n \n+    @Test\n+    public void testCreateExternalPartitioned()\n+    {\n+        String tableName = \"test_basic_statistics_external_partitioned_presto\";\n+        String helperTableName = tableName + \"_helper\";\n+\n+        onPresto().executeQuery(format(\"DROP TABLE IF EXISTS %s\", helperTableName));\n+        onPresto().executeQuery(format(\"DROP TABLE IF EXISTS %s\", tableName));\n+        onPresto().executeQuery(format(\"\" +\n+                \"CREATE TABLE %s \" +\n+                \"WITH (\" +\n+                \"   partitioned_by = ARRAY['n_regionkey'] \" +\n+                \") \" +\n+                \"AS \" +\n+                \"SELECT n_nationkey, n_name, n_comment, n_regionkey \" +\n+                \"FROM nation \" +\n+                // turns out there are exactly 5 countries in each region\n+                // let's change records count for one of the regions to verify statistics are different\n+                \"WHERE n_nationkey <> 23\", helperTableName));\n+\n+        try {\n+            Optional<String> location = getTableLocation(helperTableName);\n+            if (location.isPresent()) {\n+                onPresto().executeQuery(format(\"\" +\n+                        \"CREATE TABLE %s (\" +\n+                        \"   n_nationkey bigint, \" +\n+                        \"   n_name varchar(25), \" +\n+                        \"   n_comment varchar(152), \" +\n+                        \"   n_regionkey bigint) \" +\n+                        \"WITH (partitioned_by = ARRAY['n_regionkey'], external_location = '%s')\",\n+                        tableName,\n+                        location.get()));\n+            }\n+            else {\n+                fail(\"Could not determine location of managed table\");\n+            }\n+            BasicStatistics statistics = getBasicStatisticsForTable(onHive(), tableName);\n+            assertThatStatisticsAreZero(statistics);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjUxOTI1OnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOToxMjozMlrOGVTO0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOToxMjozMlrOGVTO0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk4ODM3MA==", "bodyText": "else assertThatStatisticsAreZero ?", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r424988370", "createdAt": "2020-05-14T09:12:32Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "diffHunk": "@@ -184,43 +174,27 @@ public void testCreatePartitioned()\n     public void testCreateExternalPartitioned()\n     {\n         String tableName = \"test_basic_statistics_external_partitioned_presto\";\n-        String helperTableName = tableName + \"_helper\";\n \n-        onPresto().executeQuery(format(\"DROP TABLE IF EXISTS %s\", helperTableName));\n         onPresto().executeQuery(format(\"DROP TABLE IF EXISTS %s\", tableName));\n-        onPresto().executeQuery(format(\"\" +\n-                \"CREATE TABLE %s \" +\n-                \"WITH (\" +\n-                \"   partitioned_by = ARRAY['n_regionkey'] \" +\n-                \") \" +\n-                \"AS \" +\n-                \"SELECT n_nationkey, n_name, n_comment, n_regionkey \" +\n-                \"FROM nation \" +\n-                // turns out there are exactly 5 countries in each region\n-                // let's change records count for one of the regions to verify statistics are different\n-                \"WHERE n_nationkey <> 23\", helperTableName));\n \n         try {\n-            Optional<String> location = getTableLocation(helperTableName);\n-            if (location.isPresent()) {\n-                onPresto().executeQuery(format(\"\" +\n-                        \"CREATE TABLE %s (\" +\n-                        \"   n_nationkey bigint, \" +\n-                        \"   n_name varchar(25), \" +\n-                        \"   n_comment varchar(152), \" +\n-                        \"   n_regionkey bigint) \" +\n-                        \"WITH (partitioned_by = ARRAY['n_regionkey'], external_location = '%s')\",\n-                        tableName,\n-                        location.get()));\n-            }\n-            else {\n-                fail(\"Could not determine location of managed table\");\n+            String tableLocation = getTableLocation(\"nation\");\n+            onPresto().executeQuery(format(\"\" +\n+                    \"CREATE TABLE %s (\" +\n+                    \"   n_nationkey bigint, \" +\n+                    \"   n_name varchar(25), \" +\n+                    \"   n_comment varchar(152), \" +\n+                    \"   n_regionkey bigint) \" +\n+                    \"WITH (partitioned_by = ARRAY['n_regionkey'], external_location = '%s')\",\n+                    tableName,\n+                    tableLocation));\n+            // in Hive 3, DESCRIBE FORMATTED returns 0 for table stats that are actually missing from the metastore\n+            if (getHiveVersionMajor() < 3) {\n+                BasicStatistics tableStatistics = getBasicStatisticsForTable(onHive(), tableName);\n+                assertThatStatisticsAreNotPresent(tableStatistics);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjUyOTkzOnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOToxNToxN1rOGVTVlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOToxNToxN1rOGVTVlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk5MDEwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return onPresto().executeQuery(\"SELECT DISTINCT regexp_replace(\\\"$path\\\", '/[^/]*$', '') FROM \" + tableName).<String>column(1).get(0);\n          \n          \n            \n                    return getOnlyElement(onPresto().executeQuery(\"SELECT DISTINCT regexp_replace(\\\"$path\\\", '/[^/]*$', '') FROM \" + tableName).column(1));\n          \n      \n    \n    \n  \n\n-- fail if there are 2+ results", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r424990100", "createdAt": "2020-05-14T09:15:17Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "diffHunk": "@@ -501,22 +475,9 @@ private static BasicStatistics basicStatisticsFromDescribeResult(QueryResult res\n         return new BasicStatistics(numFiles, numRows, rawDataSize, totalSize);\n     }\n \n-    private static Optional<String> getTableLocation(String tableName)\n+    private static String getTableLocation(String tableName)\n     {\n-        QueryResult describeResult = onHive().executeQuery(format(\"DESCRIBE FORMATTED %s\", tableName));\n-        verify(describeResult.getColumnsCount() == 3, \"describe result is expected to have 3 columns\");\n-        for (List<?> row : describeResult.rows()) {\n-            Optional<String> name = Optional.ofNullable(row.get(0))\n-                    .map(Object::toString)\n-                    .map(String::trim);\n-\n-            if (name.isPresent() && \"Location:\".equals(name.get())) {\n-                return Optional.ofNullable(row.get(1))\n-                        .map(Object::toString)\n-                        .map(String::trim);\n-            }\n-        }\n-        return Optional.empty();\n+        return onPresto().executeQuery(\"SELECT DISTINCT regexp_replace(\\\"$path\\\", '/[^/]*$', '') FROM \" + tableName).<String>column(1).get(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjUzODg4OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveMetadata.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOToxNzozOFrOGVTbWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOToxNzozOFrOGVTbWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk5MTU3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // set bogus table stats to prevent Hive 2.x from gathering these stats at table creation\n          \n          \n            \n                    // Set bogus table stats to prevent Hive 2.x from gathering these stats at table creation.\n          \n          \n            \n                    // These stats are not useful in itself and can take very long time to collect when creating an\n          \n          \n            \n                    // external table over large data set.", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r424991577", "createdAt": "2020-05-14T09:17:38Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveMetadata.java", "diffHunk": "@@ -947,7 +947,7 @@ public void createTable(ConnectorSession session, ConnectorTableMetadata tableMe\n                     tableProperties.put(CSV_SEPARATOR_KEY, separator.toString());\n                 });\n \n-        // prevent HMS from gathering these stats at table creation, since it can be expensive\n+        // set bogus table stats to prevent Hive 2.x from gathering these stats at table creation", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjU0MTA5OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftHiveMetastore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOToxODoxNFrOGVTc5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOToxODoxNFrOGVTc5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk5MTk3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        // this prevents Hive 3.x from collecting table stats at table creation time\n          \n          \n            \n                                        // This prevents Hive 3.x from collecting basic table stats at table creation time.\n          \n          \n            \n                                        // These stats are not useful in itself and can take very long time to collect when creating an\n          \n          \n            \n                                        // external table over large data set.", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r424991972", "createdAt": "2020-05-14T09:18:14Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftHiveMetastore.java", "diffHunk": "@@ -1066,6 +1066,7 @@ public void alterTable(HiveIdentity identity, String databaseName, String tableN\n                     .run(\"alterTable\", stats.getAlterTable().wrap(() -> {\n                         try (ThriftMetastoreClient client = createMetastoreClient(identity)) {\n                             EnvironmentContext context = new EnvironmentContext();\n+                            // this prevents Hive 3.x from collecting table stats at table creation time", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NzI0MjM5OnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMjo0MzoxMlrOGVaZDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMjo0MzoxMlrOGVaZDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTEwNTY3Nw==", "bodyText": "According to my intellij indentation is off here.", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r425105677", "createdAt": "2020-05-14T12:43:12Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "diffHunk": "@@ -144,6 +170,35 @@ public void testCreatePartitioned()\n         }\n     }\n \n+    @Test\n+    public void testCreateExternalPartitioned()\n+    {\n+        String tableName = \"test_basic_statistics_external_partitioned_presto\";\n+\n+        onPresto().executeQuery(format(\"DROP TABLE IF EXISTS %s\", tableName));\n+\n+        try {\n+            String tableLocation = getTableLocation(\"nation\");\n+            onPresto().executeQuery(format(\"\" +\n+                    \"CREATE TABLE %s (\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NzE0NzE4OnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzo1NTo1MVrOGW4T8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzo1NTo1MVrOGW4T8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY0NDQ2Ng==", "bodyText": "add an assertion for SHOW STATS on presto side (table must not appear as empty)", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r426644466", "createdAt": "2020-05-18T13:55:51Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "diffHunk": "@@ -144,6 +171,33 @@ public void testCreatePartitioned()\n         }\n     }\n \n+    @Test\n+    public void testCreateExternalPartitioned()\n+    {\n+        String tableName = \"test_basic_statistics_external_partitioned_presto\";\n+\n+        onPresto().executeQuery(format(\"DROP TABLE IF EXISTS %s\", tableName));\n+\n+        String tableLocation = getTableLocation(\"nation\");\n+        onPresto().executeQuery(format(\"\" +\n+                \"CREATE TABLE %s (\" +\n+                \"   n_nationkey bigint, \" +\n+                \"   n_name varchar(25), \" +\n+                \"   n_comment varchar(152), \" +\n+                \"   n_regionkey bigint) \" +\n+                \"WITH (partitioned_by = ARRAY['n_regionkey'], external_location = '%s')\",\n+                tableName,\n+                tableLocation));\n+        try {\n+            assertThatTableHasNoStatsFlexible(tableName);\n+            onPresto().executeQuery(format(\"CALL system.sync_partition_metadata('default', '%s', 'FULL')\", tableName));\n+            assertThatTableHasNoStatsFlexible(tableName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDI0MjE0OnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwODo1MDo1N1rOGXWXRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwODo1MDo1N1rOGXWXRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEzNjgzNw==", "bodyText": "int rowCountIndex = result.tryFindColumnIndex(\"row_count\")\n.orElseThrow", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r427136837", "createdAt": "2020-05-19T08:50:57Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "diffHunk": "@@ -191,15 +204,24 @@ public void testCreateExternalPartitioned()\n         try {\n             assertThatTableHasNoStatsFlexible(tableName);\n             onPresto().executeQuery(format(\"CALL system.sync_partition_metadata('default', '%s', 'FULL')\", tableName));\n-            assertThatTableHasNoStatsFlexible(tableName);\n+            // in Hive 3, syncing partitions causes stats to be populated\n+            if (getHiveVersionMajor() < 3) {\n+                BasicStatistics tableStatistics = getBasicStatisticsForTable(onHive(), tableName);\n+                assertThatStatisticsAreNotPresent(tableStatistics);\n+            }\n+\n+            onPresto().executeQuery(format(\"ANALYZE %s\", tableName));\n             // check that Presto sees the table as non-empty\n             QueryResult result = onPresto().executeQuery(format(\"SHOW STATS FOR %s\", tableName));\n-            result.tryFindColumnIndex(\"row_count\")\n-                    .ifPresent(index -> {\n-                        // the last row has table stats\n-                        List<Object> rowCounts = result.column(index);\n-                        assertThat(rowCounts.get(rowCounts.size() - 1)).isNotNull().isNotEqualTo(0);\n-                    });\n+            Optional<Integer> rowCountIndex = result.tryFindColumnIndex(\"row_count\");\n+            if (rowCountIndex.isPresent()) {\n+                List<Object> rowCounts = result.column(rowCountIndex.get());\n+                // the last row has table stats\n+                assertThat((Double) rowCounts.get(rowCounts.size() - 1)).isNotNull().isGreaterThan(0.0);\n+            }\n+            else {\n+                fail(\"Unable to find column row_count in ANALYZE result\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDI2MzgzOnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwODo1NTo0NlrOGXWkYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwODo1NTo0NlrOGXWkYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE0MDE5Mw==", "bodyText": "remove?\nWe're supposedly testing CREATE TABLE that it doesn't produce bogus stats.", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r427140193", "createdAt": "2020-05-19T08:55:46Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "diffHunk": "@@ -191,15 +204,24 @@ public void testCreateExternalPartitioned()\n         try {\n             assertThatTableHasNoStatsFlexible(tableName);\n             onPresto().executeQuery(format(\"CALL system.sync_partition_metadata('default', '%s', 'FULL')\", tableName));\n-            assertThatTableHasNoStatsFlexible(tableName);\n+            // in Hive 3, syncing partitions causes stats to be populated\n+            if (getHiveVersionMajor() < 3) {\n+                BasicStatistics tableStatistics = getBasicStatisticsForTable(onHive(), tableName);\n+                assertThatStatisticsAreNotPresent(tableStatistics);\n+            }\n+\n+            onPresto().executeQuery(format(\"ANALYZE %s\", tableName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjkxNjk4OnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMDo1MjoxNlrOGZS-rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMTowMToxMlrOGZTMnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE3ODU0Mg==", "bodyText": "nation table is format = 'TEXTFILE', so use this here too\n(you can verify the table format with select count(*) from the table)", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r429178542", "createdAt": "2020-05-22T10:52:16Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "diffHunk": "@@ -54,6 +55,32 @@ public void testCreateUnpartitioned()\n         }\n     }\n \n+    @Test\n+    public void testCreateExternalUnpartitioned()\n+    {\n+        String tableName = \"test_basic_statistics_external_unpartitioned_presto\";\n+\n+        onPresto().executeQuery(format(\"DROP TABLE IF EXISTS %s\", tableName));\n+\n+        try {\n+            String location = getTableLocation(\"nation\", false);\n+            onPresto().executeQuery(format(\"\" +\n+                    \"CREATE TABLE %s (\" +\n+                    \"   n_nationkey bigint, \" +\n+                    \"   n_regionkey bigint, \" +\n+                    \"   n_name varchar(25), \" +\n+                    \"   n_comment varchar(152)) \" +\n+                    \"WITH (external_location = '%s')\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE4MjEwOQ==", "bodyText": "textfile_field_separator = '|' is important too", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r429182109", "createdAt": "2020-05-22T11:01:12Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "diffHunk": "@@ -54,6 +55,32 @@ public void testCreateUnpartitioned()\n         }\n     }\n \n+    @Test\n+    public void testCreateExternalUnpartitioned()\n+    {\n+        String tableName = \"test_basic_statistics_external_unpartitioned_presto\";\n+\n+        onPresto().executeQuery(format(\"DROP TABLE IF EXISTS %s\", tableName));\n+\n+        try {\n+            String location = getTableLocation(\"nation\", false);\n+            onPresto().executeQuery(format(\"\" +\n+                    \"CREATE TABLE %s (\" +\n+                    \"   n_nationkey bigint, \" +\n+                    \"   n_regionkey bigint, \" +\n+                    \"   n_name varchar(25), \" +\n+                    \"   n_comment varchar(152)) \" +\n+                    \"WITH (external_location = '%s')\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE3ODU0Mg=="}, "originalCommit": null, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjkyMDE2OnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMDo1MzoyOVrOGZTAnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMDo1OToyOFrOGZTJ0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE3OTAzNg==", "bodyText": "This is wrong. i checked with show stats for test_basic_statistics_external_unpartitioned_presto; that this indeed reports row count 0, but the table is not empty. It should report NULL", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r429179036", "createdAt": "2020-05-22T10:53:29Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "diffHunk": "@@ -54,6 +55,32 @@ public void testCreateUnpartitioned()\n         }\n     }\n \n+    @Test\n+    public void testCreateExternalUnpartitioned()\n+    {\n+        String tableName = \"test_basic_statistics_external_unpartitioned_presto\";\n+\n+        onPresto().executeQuery(format(\"DROP TABLE IF EXISTS %s\", tableName));\n+\n+        try {\n+            String location = getTableLocation(\"nation\", false);\n+            onPresto().executeQuery(format(\"\" +\n+                    \"CREATE TABLE %s (\" +\n+                    \"   n_nationkey bigint, \" +\n+                    \"   n_regionkey bigint, \" +\n+                    \"   n_name varchar(25), \" +\n+                    \"   n_comment varchar(152)) \" +\n+                    \"WITH (external_location = '%s')\",\n+                    tableName,\n+                    location));\n+            BasicStatistics statistics = getBasicStatisticsForTable(onHive(), tableName);\n+            assertThatStatisticsAreZero(statistics);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE4MTM5Mw==", "bodyText": "I guess this is actually a pre-existing thing, is it?", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r429181393", "createdAt": "2020-05-22T10:59:28Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "diffHunk": "@@ -54,6 +55,32 @@ public void testCreateUnpartitioned()\n         }\n     }\n \n+    @Test\n+    public void testCreateExternalUnpartitioned()\n+    {\n+        String tableName = \"test_basic_statistics_external_unpartitioned_presto\";\n+\n+        onPresto().executeQuery(format(\"DROP TABLE IF EXISTS %s\", tableName));\n+\n+        try {\n+            String location = getTableLocation(\"nation\", false);\n+            onPresto().executeQuery(format(\"\" +\n+                    \"CREATE TABLE %s (\" +\n+                    \"   n_nationkey bigint, \" +\n+                    \"   n_regionkey bigint, \" +\n+                    \"   n_name varchar(25), \" +\n+                    \"   n_comment varchar(152)) \" +\n+                    \"WITH (external_location = '%s')\",\n+                    tableName,\n+                    location));\n+            BasicStatistics statistics = getBasicStatisticsForTable(onHive(), tableName);\n+            assertThatStatisticsAreZero(statistics);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE3OTAzNg=="}, "originalCommit": null, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjkyMTkyOnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMDo1NDoxNVrOGZTBvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMDo1NDoxNVrOGZTBvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE3OTMyNw==", "bodyText": "Since we're doing a lot of back and forth to satisfy every supported metastore version, let's move partitioned tables to a separate PR and focus on unpartitioned for now.", "url": "https://github.com/trinodb/trino/pull/3627#discussion_r429179327", "createdAt": "2020-05-22T10:54:15Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveBasicTableStatistics.java", "diffHunk": "@@ -144,6 +171,49 @@ public void testCreatePartitioned()\n         }\n     }\n \n+    @Test\n+    public void testCreateExternalPartitioned()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 32, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}