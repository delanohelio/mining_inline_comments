{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NTM3OTI1", "number": 4730, "title": "Prevent retrieving same value twice in 128-bit multiplication", "bodyText": "Benchmark results (customized DecimalOperatorsBenchmark):\n\n\n\nBenchmark\nbefore\nafter\nchange\n\n\n\n\nl1 + l2 + l3 + l4\n206\n221\n+7.2%\n\n\ns2 + l3 + l1 + s4\n225\n229\n+1.8%\n\n\ncast decimal -> varchar\n53.8\n56.4\n+4.8%\n\n\nl1 / s2\n227\n236\n+3.9%\n\n\ns3 / l1\n221\n258\n+16.7% (!)\n\n\nl2 / l3\n182\n198\n+8.7%\n\n\nl2 % l3\n218\n242\n+11%\n\n\nl2 * s2\n714\n728\n+1.9%\n\n\nl2 * s2 * s5 * s6\n317\n337\n+6.3%\n\n\ns1 * l2\n712\n724\n+1.6%\n\n\nl1 * l2\n767\n782\n+1.9%\n\n\n\nErrors well below 1%\nOther cases perform similarly.\nSimilar optimisiation may benefit other 128-bit operations in the future, however this changes benchmarks in more unpredictable way", "createdAt": "2020-08-07T10:54:15Z", "url": "https://github.com/trinodb/trino/pull/4730", "merged": true, "mergeCommit": {"oid": "16fc951a05ee5f7f1183b15b0e27b3db95c18fc9"}, "closed": true, "closedAt": "2020-08-07T15:32:00Z", "author": {"login": "skrzypo987"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8ie81gFqTQ2MzIyNzAwOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8jADAAFqTQ2MzI0ODA0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMjI3MDA4", "url": "https://github.com/trinodb/trino/pull/4730#pullrequestreview-463227008", "createdAt": "2020-08-07T11:07:04Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMTowNzowNVrOG9VzLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMTowNzowNVrOG9VzLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk3MzQ4Nw==", "bodyText": "the one below uses & SIGN_INT_MASK) != 0;. I'm not sure which one is faster, but we could unify them one way or another", "url": "https://github.com/trinodb/trino/pull/4730#discussion_r466973487", "createdAt": "2020-08-07T11:07:05Z", "author": {"login": "sopel39"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/UnscaledDecimal128Arithmetic.java", "diffHunk": "@@ -728,6 +732,11 @@ public static boolean isStrictlyNegative(long rawLow, long rawHigh)\n         return isNegative(rawLow, rawHigh) && (rawLow != 0 || unpackUnsignedLong(rawHigh) != 0);\n     }\n \n+    private static boolean isNegative(int lastRawHigh)\n+    {\n+        return lastRawHigh >>> 31 == 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMjMwNzkx", "url": "https://github.com/trinodb/trino/pull/4730#pullrequestreview-463230791", "createdAt": "2020-08-07T11:14:24Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMToxNDoyNFrOG9V-SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMToxNDoyNFrOG9V-SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk3NjMyOA==", "bodyText": "there are more places where it could be optimized, e.g: io.prestosql.spi.type.UnscaledDecimal128Arithmetic#multiplyDestructive", "url": "https://github.com/trinodb/trino/pull/4730#discussion_r466976328", "createdAt": "2020-08-07T11:14:24Z", "author": {"login": "sopel39"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/UnscaledDecimal128Arithmetic.java", "diffHunk": "@@ -511,7 +515,7 @@ public static void multiply(Slice left, Slice right, Slice result)\n             }\n         }\n \n-        pack(result, (int) z0, (int) z1, (int) z2, (int) z3, isNegative(left) != isNegative(right));\n+        pack(result, (int) z0, (int) z1, (int) z2, (int) z3, leftNegative != rightNegative);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMjM2NDM3", "url": "https://github.com/trinodb/trino/pull/4730#pullrequestreview-463236437", "createdAt": "2020-08-07T11:25:37Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMToyNTozN1rOG9WPqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMToyNjozOFrOG9WRVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk4MDc3Ng==", "bodyText": "This is just the beginning.\nI made a heavily-optimised version already but benchmarks went crazy.\nOne step at a time", "url": "https://github.com/trinodb/trino/pull/4730#discussion_r466980776", "createdAt": "2020-08-07T11:25:37Z", "author": {"login": "skrzypo987"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/UnscaledDecimal128Arithmetic.java", "diffHunk": "@@ -511,7 +515,7 @@ public static void multiply(Slice left, Slice right, Slice result)\n             }\n         }\n \n-        pack(result, (int) z0, (int) z1, (int) z2, (int) z3, isNegative(left) != isNegative(right));\n+        pack(result, (int) z0, (int) z1, (int) z2, (int) z3, leftNegative != rightNegative);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk3NjMyOA=="}, "originalCommit": null, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk4MTIwNg==", "bodyText": "This is extremely difficult to benchmark and might make a difference so I'd leave for now.", "url": "https://github.com/trinodb/trino/pull/4730#discussion_r466981206", "createdAt": "2020-08-07T11:26:38Z", "author": {"login": "skrzypo987"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/UnscaledDecimal128Arithmetic.java", "diffHunk": "@@ -728,6 +732,11 @@ public static boolean isStrictlyNegative(long rawLow, long rawHigh)\n         return isNegative(rawLow, rawHigh) && (rawLow != 0 || unpackUnsignedLong(rawHigh) != 0);\n     }\n \n+    private static boolean isNegative(int lastRawHigh)\n+    {\n+        return lastRawHigh >>> 31 == 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk3MzQ4Nw=="}, "originalCommit": null, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d6d60ee8d4aa9c0d0ce8d366c0787bee5cfb774", "author": {"user": {"login": "skrzypo987", "name": null}}, "url": "https://github.com/trinodb/trino/commit/4d6d60ee8d4aa9c0d0ce8d366c0787bee5cfb774", "committedDate": "2020-08-07T11:37:52Z", "message": "Prevent retrieving same value twice in 128-bit multiplication\n\nThe most expensive operation in most 128 decimal methods is\ngetting data from heap to stack (local variables).\nIn 128-bit multiplication this is now done as 4 * 32-bit gets\nas opposed to 4 * 32 bit gets + 32 bit get to determine the sign\nof the operands."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "4d6d60ee8d4aa9c0d0ce8d366c0787bee5cfb774", "author": {"user": {"login": "skrzypo987", "name": null}}, "url": "https://github.com/trinodb/trino/commit/4d6d60ee8d4aa9c0d0ce8d366c0787bee5cfb774", "committedDate": "2020-08-07T11:37:52Z", "message": "Prevent retrieving same value twice in 128-bit multiplication\n\nThe most expensive operation in most 128 decimal methods is\ngetting data from heap to stack (local variables).\nIn 128-bit multiplication this is now done as 4 * 32-bit gets\nas opposed to 4 * 32 bit gets + 32 bit get to determine the sign\nof the operands."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMjQ4MDQz", "url": "https://github.com/trinodb/trino/pull/4730#pullrequestreview-463248043", "createdAt": "2020-08-07T11:48:16Z", "commit": {"oid": "4d6d60ee8d4aa9c0d0ce8d366c0787bee5cfb774"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4669, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}