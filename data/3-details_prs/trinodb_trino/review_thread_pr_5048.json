{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MTQ0ODcy", "number": 5048, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMzo1NDowMVrOEkw8pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMDowMjo0MFrOEkxCrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2OTg2MTQ5OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/operator/scalar/DateTimeFunctions.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMzo1NDowMVrOHT5TYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzoxOToyOVrOHVa57A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYyMzg0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static LongTimestampWithTimeZone fromISO8601TimestampNanos(ConnectorSession session, @SqlType(\"varchar(x)\") Slice iso8601DateTime)\n          \n          \n            \n                public static LongTimestampWithTimeZone fromIso8601TimestampNanos(ConnectorSession session, @SqlType(\"varchar(x)\") Slice iso8601DateTime)", "url": "https://github.com/trinodb/trino/pull/5048#discussion_r490623843", "createdAt": "2020-09-17T23:54:01Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/DateTimeFunctions.java", "diffHunk": "@@ -162,6 +168,19 @@ public static long fromISO8601Timestamp(ConnectorSession session, @SqlType(\"varc\n         return packDateTimeWithZone(parseDateTimeHelper(formatter, iso8601DateTime.toStringUtf8()));\n     }\n \n+    @ScalarFunction(\"from_iso8601_timestamp_nanos\")\n+    @LiteralParameters(\"x\")\n+    @SqlType(\"timestamp(9) with time zone\")\n+    public static LongTimestampWithTimeZone fromISO8601TimestampNanos(ConnectorSession session, @SqlType(\"varchar(x)\") Slice iso8601DateTime)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyMTQ0Mw==", "bodyText": "should I also change the other function above? since it's also called fromISO8601Timestamp", "url": "https://github.com/trinodb/trino/pull/5048#discussion_r492221443", "createdAt": "2020-09-21T17:16:51Z", "author": {"login": "alec-heif"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/DateTimeFunctions.java", "diffHunk": "@@ -162,6 +168,19 @@ public static long fromISO8601Timestamp(ConnectorSession session, @SqlType(\"varc\n         return packDateTimeWithZone(parseDateTimeHelper(formatter, iso8601DateTime.toStringUtf8()));\n     }\n \n+    @ScalarFunction(\"from_iso8601_timestamp_nanos\")\n+    @LiteralParameters(\"x\")\n+    @SqlType(\"timestamp(9) with time zone\")\n+    public static LongTimestampWithTimeZone fromISO8601TimestampNanos(ConnectorSession session, @SqlType(\"varchar(x)\") Slice iso8601DateTime)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYyMzg0Mw=="}, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyMjk1Ng==", "bodyText": "Yes, but let's do it in a separate commit, as it's cleanup of existing code.", "url": "https://github.com/trinodb/trino/pull/5048#discussion_r492222956", "createdAt": "2020-09-21T17:19:29Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/DateTimeFunctions.java", "diffHunk": "@@ -162,6 +168,19 @@ public static long fromISO8601Timestamp(ConnectorSession session, @SqlType(\"varc\n         return packDateTimeWithZone(parseDateTimeHelper(formatter, iso8601DateTime.toStringUtf8()));\n     }\n \n+    @ScalarFunction(\"from_iso8601_timestamp_nanos\")\n+    @LiteralParameters(\"x\")\n+    @SqlType(\"timestamp(9) with time zone\")\n+    public static LongTimestampWithTimeZone fromISO8601TimestampNanos(ConnectorSession session, @SqlType(\"varchar(x)\") Slice iso8601DateTime)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYyMzg0Mw=="}, "originalCommit": null, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2OTg2NTk2OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/operator/scalar/DateTimeFunctions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMzo1NjoyM1rOHT5WAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMzo1NjoyM1rOHT5WAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYyNDUxNQ==", "bodyText": "This method is unnecessary. It's used in a single place and doesn't provide much value. Inline it where it's being called.", "url": "https://github.com/trinodb/trino/pull/5048#discussion_r490624515", "createdAt": "2020-09-17T23:56:23Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/DateTimeFunctions.java", "diffHunk": "@@ -291,6 +310,24 @@ private static DateTime parseDateTimeHelper(DateTimeFormatter formatter, String\n         }\n     }\n \n+    private static ZonedDateTime parseJavaDateTimeHelper(java.time.format.DateTimeFormatter formatter, String datetimeString)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2OTg3MzYwOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/operator/scalar/DateTimeFunctions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMDowMDozOVrOHT5agg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMDowMDozOVrOHT5agg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYyNTY2Ng==", "bodyText": "This is inconsistent with the other variant (from_iso8601_timestamp), which uses session timezone if the timezone is missing from the input value.", "url": "https://github.com/trinodb/trino/pull/5048#discussion_r490625666", "createdAt": "2020-09-18T00:00:39Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/DateTimeFunctions.java", "diffHunk": "@@ -291,6 +310,24 @@ private static DateTime parseDateTimeHelper(DateTimeFormatter formatter, String\n         }\n     }\n \n+    private static ZonedDateTime parseJavaDateTimeHelper(java.time.format.DateTimeFormatter formatter, String datetimeString)\n+    {\n+        TemporalAccessor dt;\n+        try {\n+            dt = formatter.parseBest(datetimeString, ZonedDateTime::from, LocalDateTime::from);\n+        }\n+        catch (DateTimeParseException e) {\n+            throw new PrestoException(INVALID_FUNCTION_ARGUMENT, e);\n+        }\n+\n+        if (dt instanceof ZonedDateTime) {\n+            return (ZonedDateTime) dt;\n+        }\n+        else {\n+            return ((LocalDateTime) dt).atZone(ZoneId.of(\"UTC\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2OTg3NDQ5OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/operator/scalar/DateTimeFunctions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMDowMTowNlrOHT5a_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMDowMTowNlrOHT5a_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYyNTc5MA==", "bodyText": "Don't abbreviate variable names.", "url": "https://github.com/trinodb/trino/pull/5048#discussion_r490625790", "createdAt": "2020-09-18T00:01:06Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/DateTimeFunctions.java", "diffHunk": "@@ -291,6 +310,24 @@ private static DateTime parseDateTimeHelper(DateTimeFormatter formatter, String\n         }\n     }\n \n+    private static ZonedDateTime parseJavaDateTimeHelper(java.time.format.DateTimeFormatter formatter, String datetimeString)\n+    {\n+        TemporalAccessor dt;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2OTg3NDkxOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/operator/scalar/DateTimeFunctions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMDowMToxOVrOHT5bOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMDowMToxOVrOHT5bOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYyNTg0OA==", "bodyText": "Don't abbreviate variable names", "url": "https://github.com/trinodb/trino/pull/5048#discussion_r490625848", "createdAt": "2020-09-18T00:01:19Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/DateTimeFunctions.java", "diffHunk": "@@ -162,6 +168,19 @@ public static long fromISO8601Timestamp(ConnectorSession session, @SqlType(\"varc\n         return packDateTimeWithZone(parseDateTimeHelper(formatter, iso8601DateTime.toStringUtf8()));\n     }\n \n+    @ScalarFunction(\"from_iso8601_timestamp_nanos\")\n+    @LiteralParameters(\"x\")\n+    @SqlType(\"timestamp(9) with time zone\")\n+    public static LongTimestampWithTimeZone fromISO8601TimestampNanos(ConnectorSession session, @SqlType(\"varchar(x)\") Slice iso8601DateTime)\n+    {\n+        java.time.format.DateTimeFormatter formatter = java.time.format.DateTimeFormatter.ISO_DATE_TIME;\n+        ZonedDateTime zdt = parseJavaDateTimeHelper(formatter, iso8601DateTime.toStringUtf8());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2OTg3NjE0OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/operator/scalar/DateTimeFunctions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMDowMjowNlrOHT5cAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMDowMjowNlrOHT5cAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYyNjA1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    long picosOfSecond = zdt.getNano() * 1000L;\n          \n          \n            \n                    long picosOfSecond = zdt.getNano() * PICOSECONDS_PER_NANOSECOND;", "url": "https://github.com/trinodb/trino/pull/5048#discussion_r490626051", "createdAt": "2020-09-18T00:02:06Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/DateTimeFunctions.java", "diffHunk": "@@ -162,6 +168,19 @@ public static long fromISO8601Timestamp(ConnectorSession session, @SqlType(\"varc\n         return packDateTimeWithZone(parseDateTimeHelper(formatter, iso8601DateTime.toStringUtf8()));\n     }\n \n+    @ScalarFunction(\"from_iso8601_timestamp_nanos\")\n+    @LiteralParameters(\"x\")\n+    @SqlType(\"timestamp(9) with time zone\")\n+    public static LongTimestampWithTimeZone fromISO8601TimestampNanos(ConnectorSession session, @SqlType(\"varchar(x)\") Slice iso8601DateTime)\n+    {\n+        java.time.format.DateTimeFormatter formatter = java.time.format.DateTimeFormatter.ISO_DATE_TIME;\n+        ZonedDateTime zdt = parseJavaDateTimeHelper(formatter, iso8601DateTime.toStringUtf8());\n+\n+        long picosOfSecond = zdt.getNano() * 1000L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2OTg3NjkzOnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/operator/scalar/TestDateTimeFunctions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMDowMjo0MFrOHT5ciA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMDowMjo0MFrOHT5ciA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYyNjE4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testFromISO8601Nanos()\n          \n          \n            \n                public void testFromIso8601Nanos()", "url": "https://github.com/trinodb/trino/pull/5048#discussion_r490626184", "createdAt": "2020-09-18T00:02:40Z", "author": {"login": "martint"}, "path": "presto-main/src/test/java/io/prestosql/operator/scalar/TestDateTimeFunctions.java", "diffHunk": "@@ -288,6 +290,23 @@ public void testFromISO8601()\n         assertFunction(\"from_iso8601_date('\" + DATE_ISO8601_STRING + \"')\", DateType.DATE, toDate(DATE));\n     }\n \n+    @Test\n+    public void testFromISO8601Nanos()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3111, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}