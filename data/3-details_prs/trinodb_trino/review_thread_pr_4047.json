{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MjE2MjIw", "number": 4047, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzozNDo1MVrOEF8LWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzozNDo1MVrOEF8LWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NjY0MjgzOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/rubix/TestRubixCaching.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzozNDo1MVrOGkblLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDowNTo0NlrOGkdEAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg1MzgwNQ==", "bodyText": "how many retries will it do. What is the delay?", "url": "https://github.com/trinodb/trino/pull/4047#discussion_r440853805", "createdAt": "2020-06-16T13:34:51Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/rubix/TestRubixCaching.java", "diffHunk": "@@ -183,6 +183,10 @@ private void initializeRubix(RubixConfig rubixConfig, List<Node> nodes)\n                 Optional.empty());\n         rubixConfigInitializer = new RubixConfigurationInitializer(rubixInitializer);\n         rubixInitializer.initializeRubix();\n+        retry().run(\"wait for rubix to startup\", () -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg1NzY4NA==", "bodyText": "see io.prestosql.plugin.hive.util.RetryDriver#RetryDriver() for defaults. By default there should be 10 attempts separated with 1s", "url": "https://github.com/trinodb/trino/pull/4047#discussion_r440857684", "createdAt": "2020-06-16T13:40:09Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/rubix/TestRubixCaching.java", "diffHunk": "@@ -183,6 +183,10 @@ private void initializeRubix(RubixConfig rubixConfig, List<Node> nodes)\n                 Optional.empty());\n         rubixConfigInitializer = new RubixConfigurationInitializer(rubixInitializer);\n         rubixInitializer.initializeRubix();\n+        retry().run(\"wait for rubix to startup\", () -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg1MzgwNQ=="}, "originalCommit": null, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg3ODA4Mw==", "bodyText": "show work for this.", "url": "https://github.com/trinodb/trino/pull/4047#discussion_r440878083", "createdAt": "2020-06-16T14:05:46Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/rubix/TestRubixCaching.java", "diffHunk": "@@ -183,6 +183,10 @@ private void initializeRubix(RubixConfig rubixConfig, List<Node> nodes)\n                 Optional.empty());\n         rubixConfigInitializer = new RubixConfigurationInitializer(rubixInitializer);\n         rubixInitializer.initializeRubix();\n+        retry().run(\"wait for rubix to startup\", () -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg1MzgwNQ=="}, "originalCommit": null, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4081, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}