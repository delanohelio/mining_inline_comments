{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NTU2NjAw", "number": 6026, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNToyNDo1OFrOE7lkNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMjo0MToxMVrOE75s8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwOTE2OTE4OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/StandardColumnMappings.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNToyNDo1OFrOH3UP1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwODo1MTo1MFrOH4D2ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc2NTQ2MQ==", "bodyText": "There should be a comment about why long and short decimal use different rounding.", "url": "https://github.com/trinodb/trino/pull/6026#discussion_r527765461", "createdAt": "2020-11-20T15:24:58Z", "author": {"login": "jirassimok"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/StandardColumnMappings.java", "diffHunk": "@@ -170,15 +170,22 @@ public static ColumnMapping decimalColumnMapping(DecimalType decimalType, Roundi\n         if (decimalType.isShort()) {\n             return ColumnMapping.longMapping(\n                     decimalType,\n-                    (resultSet, columnIndex) -> encodeShortScaledValue(resultSet.getBigDecimal(columnIndex), scale),\n+                    shortDecimalReadFunction(decimalType, UNNECESSARY),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0NjgzNQ==", "bodyText": "Yes, and actually i also wondered why. It's preexisting and i maintained this.\nThis was introduced in #2088, so maybe @guyco33 or @kokosing can suggest the comment wording to be added here", "url": "https://github.com/trinodb/trino/pull/6026#discussion_r528246835", "createdAt": "2020-11-21T21:50:28Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/StandardColumnMappings.java", "diffHunk": "@@ -170,15 +170,22 @@ public static ColumnMapping decimalColumnMapping(DecimalType decimalType, Roundi\n         if (decimalType.isShort()) {\n             return ColumnMapping.longMapping(\n                     decimalType,\n-                    (resultSet, columnIndex) -> encodeShortScaledValue(resultSet.getBigDecimal(columnIndex), scale),\n+                    shortDecimalReadFunction(decimalType, UNNECESSARY),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc2NTQ2MQ=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI1MzE5OQ==", "bodyText": "added // TODO why roundingMode is not used here, but it is used for long decimal only? comment for now, but of course this is not ideal", "url": "https://github.com/trinodb/trino/pull/6026#discussion_r528253199", "createdAt": "2020-11-21T22:56:35Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/StandardColumnMappings.java", "diffHunk": "@@ -170,15 +170,22 @@ public static ColumnMapping decimalColumnMapping(DecimalType decimalType, Roundi\n         if (decimalType.isShort()) {\n             return ColumnMapping.longMapping(\n                     decimalType,\n-                    (resultSet, columnIndex) -> encodeShortScaledValue(resultSet.getBigDecimal(columnIndex), scale),\n+                    shortDecimalReadFunction(decimalType, UNNECESSARY),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc2NTQ2MQ=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI5ODk0Ng==", "bodyText": "I found that mapping to short decimal doesn't need rounding, since its max precision (less then 18) always fit and unspecified decimal (special to Postgres) is mapped to long decimal", "url": "https://github.com/trinodb/trino/pull/6026#discussion_r528298946", "createdAt": "2020-11-22T08:07:46Z", "author": {"login": "guyco33"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/StandardColumnMappings.java", "diffHunk": "@@ -170,15 +170,22 @@ public static ColumnMapping decimalColumnMapping(DecimalType decimalType, Roundi\n         if (decimalType.isShort()) {\n             return ColumnMapping.longMapping(\n                     decimalType,\n-                    (resultSet, columnIndex) -> encodeShortScaledValue(resultSet.getBigDecimal(columnIndex), scale),\n+                    shortDecimalReadFunction(decimalType, UNNECESSARY),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc2NTQ2MQ=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU0NTQ3NQ==", "bodyText": "replaced with a check", "url": "https://github.com/trinodb/trino/pull/6026#discussion_r528545475", "createdAt": "2020-11-23T08:51:50Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/StandardColumnMappings.java", "diffHunk": "@@ -170,15 +170,22 @@ public static ColumnMapping decimalColumnMapping(DecimalType decimalType, Roundi\n         if (decimalType.isShort()) {\n             return ColumnMapping.longMapping(\n                     decimalType,\n-                    (resultSet, columnIndex) -> encodeShortScaledValue(resultSet.getBigDecimal(columnIndex), scale),\n+                    shortDecimalReadFunction(decimalType, UNNECESSARY),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc2NTQ2MQ=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwOTE3Mjk2OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/StandardColumnMappings.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNToyNTo0NFrOH3USGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMTo1NjozMVrOH3xqQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc2NjA0MQ==", "bodyText": "Maybe there should be an overload with only the type argument and UNNECESSARY rounding (and for longDecimalReadFunction)?", "url": "https://github.com/trinodb/trino/pull/6026#discussion_r527766041", "createdAt": "2020-11-20T15:25:44Z", "author": {"login": "jirassimok"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/StandardColumnMappings.java", "diffHunk": "@@ -170,15 +170,22 @@ public static ColumnMapping decimalColumnMapping(DecimalType decimalType, Roundi\n         if (decimalType.isShort()) {\n             return ColumnMapping.longMapping(\n                     decimalType,\n-                    (resultSet, columnIndex) -> encodeShortScaledValue(resultSet.getBigDecimal(columnIndex), scale),\n+                    shortDecimalReadFunction(decimalType, UNNECESSARY),\n                     shortDecimalWriteFunction(decimalType));\n         }\n         return ColumnMapping.sliceMapping(\n                 decimalType,\n-                (resultSet, columnIndex) -> encodeScaledValue(resultSet.getBigDecimal(columnIndex).setScale(scale, roundingMode)),\n+                longDecimalReadFunction(decimalType, roundingMode),\n                 longDecimalWriteFunction(decimalType));\n     }\n \n+    public static LongReadFunction shortDecimalReadFunction(DecimalType decimalType, RoundingMode roundingMode)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0NzM2MQ==", "bodyText": "Good idea, added", "url": "https://github.com/trinodb/trino/pull/6026#discussion_r528247361", "createdAt": "2020-11-21T21:56:31Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/StandardColumnMappings.java", "diffHunk": "@@ -170,15 +170,22 @@ public static ColumnMapping decimalColumnMapping(DecimalType decimalType, Roundi\n         if (decimalType.isShort()) {\n             return ColumnMapping.longMapping(\n                     decimalType,\n-                    (resultSet, columnIndex) -> encodeShortScaledValue(resultSet.getBigDecimal(columnIndex), scale),\n+                    shortDecimalReadFunction(decimalType, UNNECESSARY),\n                     shortDecimalWriteFunction(decimalType));\n         }\n         return ColumnMapping.sliceMapping(\n                 decimalType,\n-                (resultSet, columnIndex) -> encodeScaledValue(resultSet.getBigDecimal(columnIndex).setScale(scale, roundingMode)),\n+                longDecimalReadFunction(decimalType, roundingMode),\n                 longDecimalWriteFunction(decimalType));\n     }\n \n+    public static LongReadFunction shortDecimalReadFunction(DecimalType decimalType, RoundingMode roundingMode)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc2NjA0MQ=="}, "originalCommit": null, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMjQ2ODM0OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/StandardColumnMappings.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMjo0MToxMVrOH3x7Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMzowMTo0MVrOH3yCtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI1MTcyMg==", "bodyText": "this TODO will not drive any actions. If you want to make it actionable create an issue for that; tag in comment; and assign suspected owner.", "url": "https://github.com/trinodb/trino/pull/6026#discussion_r528251722", "createdAt": "2020-11-21T22:41:11Z", "author": {"login": "losipiuk"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/StandardColumnMappings.java", "diffHunk": "@@ -163,14 +163,20 @@ public static DoubleWriteFunction doubleWriteFunction()\n         return PreparedStatement::setDouble;\n     }\n \n+    public static ColumnMapping decimalColumnMapping(DecimalType decimalType)\n+    {\n+        return decimalColumnMapping(decimalType, UNNECESSARY);\n+    }\n+\n     public static ColumnMapping decimalColumnMapping(DecimalType decimalType, RoundingMode roundingMode)\n     {\n         // JDBC driver can return BigDecimal with lower scale than column's scale when there are trailing zeroes\n         int scale = decimalType.getScale();\n         if (decimalType.isShort()) {\n             return ColumnMapping.longMapping(\n                     decimalType,\n-                    shortDecimalReadFunction(decimalType, UNNECESSARY),\n+                    // TODO why roundingMode is not used here, but it is used for long decimal only?", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI1MzE0OA==", "bodyText": "@losipiuk  let's continue above -- #6026 (comment)", "url": "https://github.com/trinodb/trino/pull/6026#discussion_r528253148", "createdAt": "2020-11-21T22:55:58Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/StandardColumnMappings.java", "diffHunk": "@@ -163,14 +163,20 @@ public static DoubleWriteFunction doubleWriteFunction()\n         return PreparedStatement::setDouble;\n     }\n \n+    public static ColumnMapping decimalColumnMapping(DecimalType decimalType)\n+    {\n+        return decimalColumnMapping(decimalType, UNNECESSARY);\n+    }\n+\n     public static ColumnMapping decimalColumnMapping(DecimalType decimalType, RoundingMode roundingMode)\n     {\n         // JDBC driver can return BigDecimal with lower scale than column's scale when there are trailing zeroes\n         int scale = decimalType.getScale();\n         if (decimalType.isShort()) {\n             return ColumnMapping.longMapping(\n                     decimalType,\n-                    shortDecimalReadFunction(decimalType, UNNECESSARY),\n+                    // TODO why roundingMode is not used here, but it is used for long decimal only?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI1MTcyMg=="}, "originalCommit": null, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI1MzYyMg==", "bodyText": "Yeah sure. My point was just that, if we merge this one, without conclusion, the TODO will likely be forgotten.", "url": "https://github.com/trinodb/trino/pull/6026#discussion_r528253622", "createdAt": "2020-11-21T23:01:41Z", "author": {"login": "losipiuk"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/StandardColumnMappings.java", "diffHunk": "@@ -163,14 +163,20 @@ public static DoubleWriteFunction doubleWriteFunction()\n         return PreparedStatement::setDouble;\n     }\n \n+    public static ColumnMapping decimalColumnMapping(DecimalType decimalType)\n+    {\n+        return decimalColumnMapping(decimalType, UNNECESSARY);\n+    }\n+\n     public static ColumnMapping decimalColumnMapping(DecimalType decimalType, RoundingMode roundingMode)\n     {\n         // JDBC driver can return BigDecimal with lower scale than column's scale when there are trailing zeroes\n         int scale = decimalType.getScale();\n         if (decimalType.isShort()) {\n             return ColumnMapping.longMapping(\n                     decimalType,\n-                    shortDecimalReadFunction(decimalType, UNNECESSARY),\n+                    // TODO why roundingMode is not used here, but it is used for long decimal only?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI1MTcyMg=="}, "originalCommit": null, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4840, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}