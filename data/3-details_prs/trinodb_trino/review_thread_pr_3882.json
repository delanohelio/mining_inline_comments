{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1MjM0NDAx", "number": 3882, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwMTo1MjoyNFrOEBJjPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwMTo1Nzo0N1rOEBJkGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjQwNTEwOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/metadata/BoundVariables.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwMTo1MjoyNFrOGc2O-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwMTo1MjoyNFrOGc2O-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkwMTg4Mg==", "bodyText": "Maybe use ImmutableSortedMap?", "url": "https://github.com/trinodb/trino/pull/3882#discussion_r432901882", "createdAt": "2020-05-31T01:52:24Z", "author": {"login": "dain"}, "path": "presto-main/src/main/java/io/prestosql/metadata/BoundVariables.java", "diffHunk": "@@ -13,33 +13,37 @@\n  */\n package io.prestosql.metadata;\n \n-import com.fasterxml.jackson.annotation.JsonCreator;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n import com.google.common.collect.ImmutableMap;\n import io.prestosql.spi.type.Type;\n \n-import java.util.HashMap;\n import java.util.Map;\n import java.util.Objects;\n+import java.util.TreeMap;\n \n import static com.google.common.base.MoreObjects.toStringHelper;\n import static com.google.common.base.Preconditions.checkState;\n+import static java.lang.String.CASE_INSENSITIVE_ORDER;\n import static java.util.Objects.requireNonNull;\n \n public class BoundVariables\n {\n     private final Map<String, Type> typeVariables;\n     private final Map<String, Long> longVariables;\n \n-    @JsonCreator\n-    public BoundVariables(\n-            @JsonProperty(\"typeVariables\") Map<String, Type> typeVariables,\n-            @JsonProperty(\"longVariables\") Map<String, Long> longVariables)\n+    public BoundVariables(Map<String, Type> typeVariables, Map<String, Long> longVariables)\n     {\n         requireNonNull(typeVariables, \"typeVariableBindings is null\");\n         requireNonNull(longVariables, \"longVariableBindings is null\");\n-        this.typeVariables = ImmutableMap.copyOf(typeVariables);\n-        this.longVariables = ImmutableMap.copyOf(longVariables);\n+\n+        this.typeVariables = new TreeMap<>(CASE_INSENSITIVE_ORDER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjQwNjEzOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/metadata/SignatureBinder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwMTo1NToyMFrOGc2Pcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwMTo1NToyMFrOGc2Pcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkwMjAwMg==", "bodyText": "Assuming you don't have nulls or dupes you can collect to toImmutableSortedMap", "url": "https://github.com/trinodb/trino/pull/3882#discussion_r432902002", "createdAt": "2020-05-31T01:55:20Z", "author": {"login": "dain"}, "path": "presto-main/src/main/java/io/prestosql/metadata/SignatureBinder.java", "diffHunk": "@@ -92,8 +92,11 @@\n         this.typeCoercion = new TypeCoercion(metadata::getType);\n         this.declaredSignature = requireNonNull(declaredSignature, \"parametrizedSignature is null\");\n         this.allowCoercion = allowCoercion;\n-        this.typeVariableConstraints = declaredSignature.getTypeVariableConstraints().stream()\n-                .collect(toMap(TypeVariableConstraint::getName, identity()));\n+\n+        typeVariableConstraints = new TreeMap<>(CASE_INSENSITIVE_ORDER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjQwNjY5OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/operator/annotations/FunctionsParserHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwMTo1NjoyNlrOGc2PtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwMTo1NjoyNlrOGc2PtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkwMjA2OQ==", "bodyText": "There is a toImmutableSortedSet you can use", "url": "https://github.com/trinodb/trino/pull/3882#discussion_r432902069", "createdAt": "2020-05-31T01:56:26Z", "author": {"login": "dain"}, "path": "presto-main/src/main/java/io/prestosql/operator/annotations/FunctionsParserHelper.java", "diffHunk": "@@ -86,12 +87,13 @@ public static boolean containsImplementationDependencyAnnotation(Annotation[] an\n \n     public static List<TypeVariableConstraint> createTypeVariableConstraints(Collection<TypeParameter> typeParameters, List<ImplementationDependency> dependencies)\n     {\n-        Set<String> typeParameterNames = typeParameters.stream()\n+        Set<String> typeParameterNames = new TreeSet<>(String.CASE_INSENSITIVE_ORDER);\n+        typeParameters.stream()\n                 .map(TypeParameter::value)\n-                .collect(toImmutableSet());\n+                .forEach(typeParameterNames::add);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjQwNzMxOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/operator/scalar/annotations/ParametricScalarImplementation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwMTo1Nzo0N1rOGc2QAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwMTo1Nzo0N1rOGc2QAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkwMjE0Nw==", "bodyText": "toImmutableSortedSet", "url": "https://github.com/trinodb/trino/pull/3882#discussion_r432902147", "createdAt": "2020-05-31T01:57:47Z", "author": {"login": "dain"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/annotations/ParametricScalarImplementation.java", "diffHunk": "@@ -505,9 +505,10 @@ private SpecializedSignature(\n             typeParameters.addAll(Arrays.asList(method.getAnnotationsByType(TypeParameter.class)));\n \n             literalParameters = parseLiteralParameters(method);\n-            typeParameterNames = typeParameters.stream()\n+            typeParameterNames = new TreeSet<>(String.CASE_INSENSITIVE_ORDER);\n+            typeParameters.stream()\n                     .map(TypeParameter::value)\n-                    .collect(toImmutableSet());\n+                    .forEach(typeParameterNames::add);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4202, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}