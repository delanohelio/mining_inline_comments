{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3NDUwMTEx", "number": 6095, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNToyMjoxOVrOE9rZNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNToyMjoxOVrOE9rZNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTA5NTU3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestUnwrapCastInComparison.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNToyMjoxOVrOH6fqVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNTo0NTo1N1rOH6ggFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA5ODE5Ng==", "bodyText": "is the casing of aND purposeful :)", "url": "https://github.com/trinodb/trino/pull/6095#discussion_r531098196", "createdAt": "2020-11-26T15:22:19Z", "author": {"login": "losipiuk"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestUnwrapCastInComparison.java", "diffHunk": "@@ -32,830 +32,364 @@\n     public void testEquals()\n     {\n         // representable\n-        assertPlan(\n-                \"SELECT * FROM (VALUES SMALLINT '0') t(a) WHERE a = DOUBLE '1'\",\n-                output(\n-                        filter(\"A = SMALLINT '1'\",\n-                                values(\"A\"))));\n+        testUnwrap(\"smallint\", \"a = DOUBLE '1'\", \"a = SMALLINT '1'\");\n \n-        assertPlan(\n-                \"SELECT * FROM (VALUES BIGINT '0') t(a) WHERE a = DOUBLE '1'\",\n-                output(\n-                        filter(\"A = BIGINT '1'\",\n-                                values(\"A\"))));\n+        testUnwrap(\"bigint\", \"a = DOUBLE '1'\", \"a = BIGINT '1'\");\n \n         // non-representable\n-        assertPlan(\n-                \"SELECT * FROM (VALUES SMALLINT '0') t(a) WHERE a = DOUBLE '1.1'\",\n-                output(\n-                        filter(\"A IS NULL AND NULL\",\n-                                values(\"A\"))));\n-        assertPlan(\n-                \"SELECT * FROM (VALUES SMALLINT '0') t(a) WHERE a = DOUBLE '1.9'\",\n-                output(\n-                        filter(\"A IS NULL AND NULL\",\n-                                values(\"A\"))));\n+        testUnwrap(\"smallint\", \"a = DOUBLE '1.1'\", \"A IS NULL aND NULL\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA5ODU2NA==", "bodyText": "I guess you wanted to make other A lowercase", "url": "https://github.com/trinodb/trino/pull/6095#discussion_r531098564", "createdAt": "2020-11-26T15:23:01Z", "author": {"login": "losipiuk"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestUnwrapCastInComparison.java", "diffHunk": "@@ -32,830 +32,364 @@\n     public void testEquals()\n     {\n         // representable\n-        assertPlan(\n-                \"SELECT * FROM (VALUES SMALLINT '0') t(a) WHERE a = DOUBLE '1'\",\n-                output(\n-                        filter(\"A = SMALLINT '1'\",\n-                                values(\"A\"))));\n+        testUnwrap(\"smallint\", \"a = DOUBLE '1'\", \"a = SMALLINT '1'\");\n \n-        assertPlan(\n-                \"SELECT * FROM (VALUES BIGINT '0') t(a) WHERE a = DOUBLE '1'\",\n-                output(\n-                        filter(\"A = BIGINT '1'\",\n-                                values(\"A\"))));\n+        testUnwrap(\"bigint\", \"a = DOUBLE '1'\", \"a = BIGINT '1'\");\n \n         // non-representable\n-        assertPlan(\n-                \"SELECT * FROM (VALUES SMALLINT '0') t(a) WHERE a = DOUBLE '1.1'\",\n-                output(\n-                        filter(\"A IS NULL AND NULL\",\n-                                values(\"A\"))));\n-        assertPlan(\n-                \"SELECT * FROM (VALUES SMALLINT '0') t(a) WHERE a = DOUBLE '1.9'\",\n-                output(\n-                        filter(\"A IS NULL AND NULL\",\n-                                values(\"A\"))));\n+        testUnwrap(\"smallint\", \"a = DOUBLE '1.1'\", \"A IS NULL aND NULL\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA5ODE5Ng=="}, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEwMDUwOA==", "bodyText": "how come?! it was supposed to be \\bA\\b", "url": "https://github.com/trinodb/trino/pull/6095#discussion_r531100508", "createdAt": "2020-11-26T15:26:15Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestUnwrapCastInComparison.java", "diffHunk": "@@ -32,830 +32,364 @@\n     public void testEquals()\n     {\n         // representable\n-        assertPlan(\n-                \"SELECT * FROM (VALUES SMALLINT '0') t(a) WHERE a = DOUBLE '1'\",\n-                output(\n-                        filter(\"A = SMALLINT '1'\",\n-                                values(\"A\"))));\n+        testUnwrap(\"smallint\", \"a = DOUBLE '1'\", \"a = SMALLINT '1'\");\n \n-        assertPlan(\n-                \"SELECT * FROM (VALUES BIGINT '0') t(a) WHERE a = DOUBLE '1'\",\n-                output(\n-                        filter(\"A = BIGINT '1'\",\n-                                values(\"A\"))));\n+        testUnwrap(\"bigint\", \"a = DOUBLE '1'\", \"a = BIGINT '1'\");\n \n         // non-representable\n-        assertPlan(\n-                \"SELECT * FROM (VALUES SMALLINT '0') t(a) WHERE a = DOUBLE '1.1'\",\n-                output(\n-                        filter(\"A IS NULL AND NULL\",\n-                                values(\"A\"))));\n-        assertPlan(\n-                \"SELECT * FROM (VALUES SMALLINT '0') t(a) WHERE a = DOUBLE '1.9'\",\n-                output(\n-                        filter(\"A IS NULL AND NULL\",\n-                                values(\"A\"))));\n+        testUnwrap(\"smallint\", \"a = DOUBLE '1.1'\", \"A IS NULL aND NULL\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA5ODE5Ng=="}, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEwNTI1OA==", "bodyText": "fixed", "url": "https://github.com/trinodb/trino/pull/6095#discussion_r531105258", "createdAt": "2020-11-26T15:34:20Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestUnwrapCastInComparison.java", "diffHunk": "@@ -32,830 +32,364 @@\n     public void testEquals()\n     {\n         // representable\n-        assertPlan(\n-                \"SELECT * FROM (VALUES SMALLINT '0') t(a) WHERE a = DOUBLE '1'\",\n-                output(\n-                        filter(\"A = SMALLINT '1'\",\n-                                values(\"A\"))));\n+        testUnwrap(\"smallint\", \"a = DOUBLE '1'\", \"a = SMALLINT '1'\");\n \n-        assertPlan(\n-                \"SELECT * FROM (VALUES BIGINT '0') t(a) WHERE a = DOUBLE '1'\",\n-                output(\n-                        filter(\"A = BIGINT '1'\",\n-                                values(\"A\"))));\n+        testUnwrap(\"bigint\", \"a = DOUBLE '1'\", \"a = BIGINT '1'\");\n \n         // non-representable\n-        assertPlan(\n-                \"SELECT * FROM (VALUES SMALLINT '0') t(a) WHERE a = DOUBLE '1.1'\",\n-                output(\n-                        filter(\"A IS NULL AND NULL\",\n-                                values(\"A\"))));\n-        assertPlan(\n-                \"SELECT * FROM (VALUES SMALLINT '0') t(a) WHERE a = DOUBLE '1.9'\",\n-                output(\n-                        filter(\"A IS NULL AND NULL\",\n-                                values(\"A\"))));\n+        testUnwrap(\"smallint\", \"a = DOUBLE '1.1'\", \"A IS NULL aND NULL\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA5ODE5Ng=="}, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTExMTk1OA==", "bodyText": "#6109", "url": "https://github.com/trinodb/trino/pull/6095#discussion_r531111958", "createdAt": "2020-11-26T15:45:57Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestUnwrapCastInComparison.java", "diffHunk": "@@ -32,830 +32,364 @@\n     public void testEquals()\n     {\n         // representable\n-        assertPlan(\n-                \"SELECT * FROM (VALUES SMALLINT '0') t(a) WHERE a = DOUBLE '1'\",\n-                output(\n-                        filter(\"A = SMALLINT '1'\",\n-                                values(\"A\"))));\n+        testUnwrap(\"smallint\", \"a = DOUBLE '1'\", \"a = SMALLINT '1'\");\n \n-        assertPlan(\n-                \"SELECT * FROM (VALUES BIGINT '0') t(a) WHERE a = DOUBLE '1'\",\n-                output(\n-                        filter(\"A = BIGINT '1'\",\n-                                values(\"A\"))));\n+        testUnwrap(\"bigint\", \"a = DOUBLE '1'\", \"a = BIGINT '1'\");\n \n         // non-representable\n-        assertPlan(\n-                \"SELECT * FROM (VALUES SMALLINT '0') t(a) WHERE a = DOUBLE '1.1'\",\n-                output(\n-                        filter(\"A IS NULL AND NULL\",\n-                                values(\"A\"))));\n-        assertPlan(\n-                \"SELECT * FROM (VALUES SMALLINT '0') t(a) WHERE a = DOUBLE '1.9'\",\n-                output(\n-                        filter(\"A IS NULL AND NULL\",\n-                                values(\"A\"))));\n+        testUnwrap(\"smallint\", \"a = DOUBLE '1.1'\", \"A IS NULL aND NULL\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA5ODE5Ng=="}, "originalCommit": null, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4673, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}