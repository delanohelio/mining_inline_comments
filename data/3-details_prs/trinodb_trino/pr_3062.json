{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MzkxMjE3", "number": 3062, "title": "Precompute probe row size estimate once", "bodyText": "Don't enumerate probe blocks for every appended\njoin row.", "createdAt": "2020-03-10T22:17:25Z", "url": "https://github.com/trinodb/trino/pull/3062", "merged": true, "mergeCommit": {"oid": "f8b331e1d04d5f6cfc72b6102203d8f5387ce7d8"}, "closed": true, "closedAt": "2020-03-12T10:16:50Z", "author": {"login": "sopel39"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMpxZRAFqTM3MjkyODU2OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcM4-xKgBqjMxMjIyMDE1NjM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyOTI4NTY5", "url": "https://github.com/trinodb/trino/pull/3062#pullrequestreview-372928569", "createdAt": "2020-03-11T16:33:13Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjozMzoxNFrOF0_Ecw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjozMzoxNFrOF0_Ecw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwMzYwMw==", "bodyText": "Can you great greatly off estimates when initial data is outlier?", "url": "https://github.com/trinodb/trino/pull/3062#discussion_r391103603", "createdAt": "2020-03-11T16:33:14Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/operator/LookupJoinPageBuilder.java", "diffHunk": "@@ -179,11 +181,23 @@ private void appendProbeIndex(JoinProbe probe)\n         if (previousPosition == position) {\n             return;\n         }\n+        estimatedProbeBlockBytes += getEstimatedProbeRowSize(probe);\n+    }\n+\n+    private int getEstimatedProbeRowSize(JoinProbe probe)\n+    {\n+        if (estimatedProbeRowSize != -1) {\n+            return estimatedProbeRowSize;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzYyOTc3", "url": "https://github.com/trinodb/trino/pull/3062#pullrequestreview-373362977", "createdAt": "2020-03-12T08:41:22Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODo0MToyMlrOF1Va7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODo0MjoyN1rOF1VdFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2OTgwNg==", "bodyText": "i missed the reset call, thanks", "url": "https://github.com/trinodb/trino/pull/3062#discussion_r391469806", "createdAt": "2020-03-12T08:41:22Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/operator/LookupJoinPageBuilder.java", "diffHunk": "@@ -179,11 +181,23 @@ private void appendProbeIndex(JoinProbe probe)\n         if (previousPosition == position) {\n             return;\n         }\n+        estimatedProbeBlockBytes += getEstimatedProbeRowSize(probe);\n+    }\n+\n+    private int getEstimatedProbeRowSize(JoinProbe probe)\n+    {\n+        if (estimatedProbeRowSize != -1) {\n+            return estimatedProbeRowSize;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwMzYwMw=="}, "originalCommit": null, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3MDM1Ng==", "bodyText": "i'd prefer to use a local var and populate the class state (field) only when fully calculated.\n(one variable more, but makes code easier to reason about)", "url": "https://github.com/trinodb/trino/pull/3062#discussion_r391470356", "createdAt": "2020-03-12T08:42:27Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/operator/LookupJoinPageBuilder.java", "diffHunk": "@@ -179,11 +181,23 @@ private void appendProbeIndex(JoinProbe probe)\n         if (previousPosition == position) {\n             return;\n         }\n+        estimatedProbeBlockBytes += getEstimatedProbeRowSize(probe);\n+    }\n+\n+    private int getEstimatedProbeRowSize(JoinProbe probe)\n+    {\n+        if (estimatedProbeRowSize != -1) {\n+            return estimatedProbeRowSize;\n+        }\n+\n+        estimatedProbeRowSize = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0732f3f8ace40f27acd3765fbbc535fc444efc2c", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/0732f3f8ace40f27acd3765fbbc535fc444efc2c", "committedDate": "2020-03-12T10:13:36Z", "message": "Precompute probe row size estimate once\n\nDon't enumerate probe blocks for every appended\njoin row."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "0732f3f8ace40f27acd3765fbbc535fc444efc2c", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/0732f3f8ace40f27acd3765fbbc535fc444efc2c", "committedDate": "2020-03-12T10:13:36Z", "message": "Precompute probe row size estimate once\n\nDon't enumerate probe blocks for every appended\njoin row."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2137, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}