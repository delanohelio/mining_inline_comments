{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MTUyNDA0", "number": 2591, "title": "Migrate elasticsearch tests to testcontainers", "bodyText": "Fixes #2391", "createdAt": "2020-01-23T02:27:13Z", "url": "https://github.com/trinodb/trino/pull/2591", "merged": true, "mergeCommit": {"oid": "bd4b3dd0b77ece2d56d58a38834f952e3f970905"}, "closed": true, "closedAt": "2020-01-24T16:10:28Z", "author": {"login": "martint"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9A6WzgBqjI5NzIyNjM1MjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9hRjcgBqjI5Nzc3NzA2ODc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MDMyNzg5", "url": "https://github.com/trinodb/trino/pull/2591#pullrequestreview-347032789", "createdAt": "2020-01-23T02:46:08Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwMjo0NjowOFrOFgxhtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwMjo1Njo1NVrOFgxpXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkxMDE5OA==", "bodyText": "How about extending ElasticsearchContainer as TestingMySqlServer?\nI suppose it would be better to use elasticsearch/elasticsearch-oss from the viewpoint of the license.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    container = new ElasticsearchContainer(\"docker.elastic.co/elasticsearch/elasticsearch:6.0.0\");\n          \n          \n            \n                    container = new ElasticsearchContainer(\"docker.elastic.co/elasticsearch/elasticsearch-oss:6.0.0\");", "url": "https://github.com/trinodb/trino/pull/2591#discussion_r369910198", "createdAt": "2020-01-23T02:46:08Z", "author": {"login": "ebyhr"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/ElasticsearchServer.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.elasticsearch;\n+\n+import com.google.common.net.HostAndPort;\n+import org.testcontainers.elasticsearch.ElasticsearchContainer;\n+\n+public class ElasticsearchServer\n+{\n+    private final ElasticsearchContainer container;\n+\n+    public ElasticsearchServer()\n+    {\n+        container = new ElasticsearchContainer(\"docker.elastic.co/elasticsearch/elasticsearch:6.0.0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkxMjE1OQ==", "bodyText": "nit: Can we introduce //launguage=JSON comment? As you may already know, it will improve the readability on Intellij.", "url": "https://github.com/trinodb/trino/pull/2591#discussion_r369912159", "createdAt": "2020-01-23T02:56:55Z", "author": {"login": "ebyhr"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearchIntegrationSmokeTest.java", "diffHunk": "@@ -102,105 +112,100 @@ public void testNestedFields()\n                 .put(\"fields.fieldb\", \"valueb\")\n                 .build());\n \n-        embeddedElasticsearchNode.getClient()\n-                .admin()\n-                .indices()\n-                .refresh(refreshRequest(indexName))\n-                .actionGet();\n-\n         assertQuery(\n                 \"SELECT name, fields.fielda, fields.fieldb FROM data\",\n                 \"VALUES ('nestfield', 32, 'valueb')\");\n     }\n \n     @Test\n     public void testArrayFields()\n+            throws IOException\n     {\n         String indexName = \"test_arrays\";\n \n-        embeddedElasticsearchNode.getClient()\n-                .admin()\n-                .indices()\n-                .prepareCreate(indexName)\n-                .addMapping(\"doc\", \"\" +\n-                                \"{\" +\n-                                \"  \\\"_meta\\\": {\" +\n-                                \"    \\\"presto\\\": {\" +\n-                                \"      \\\"a\\\": {\" +\n-                                \"        \\\"b\\\": {\" +\n-                                \"          \\\"y\\\": {\" +\n-                                \"            \\\"isArray\\\": true\" +\n-                                \"          }\" +\n-                                \"        }\" +\n-                                \"      },\" +\n-                                \"      \\\"c\\\": {\" +\n-                                \"        \\\"f\\\": {\" +\n-                                \"          \\\"g\\\": {\" +\n-                                \"            \\\"isArray\\\": true\" +\n-                                \"          },\" +\n-                                \"          \\\"isArray\\\": true\" +\n-                                \"        }\" +\n-                                \"      },\" +\n-                                \"      \\\"j\\\": {\" +\n-                                \"        \\\"isArray\\\": true\" +\n-                                \"      },\" +\n-                                \"      \\\"k\\\": {\" +\n-                                \"        \\\"isArray\\\": true\" +\n-                                \"      }\" +\n-                                \"    }\" +\n-                                \"  },\" +\n-                                \"  \\\"properties\\\":{\" +\n-                                \"    \\\"a\\\": {\" +\n-                                \"      \\\"type\\\": \\\"object\\\",\" +\n-                                \"      \\\"properties\\\": {\" +\n-                                \"        \\\"b\\\": {\" +\n-                                \"          \\\"type\\\": \\\"object\\\",\" +\n-                                \"          \\\"properties\\\": {\" +\n-                                \"            \\\"x\\\": {\" +\n-                                \"              \\\"type\\\": \\\"integer\\\"\" +\n-                                \"            },\" +\n-                                \"            \\\"y\\\": {\" +\n-                                \"              \\\"type\\\": \\\"keyword\\\"\" +\n-                                \"            }\" +\n-                                \"          } \" +\n-                                \"        }\" +\n-                                \"      }\" +\n-                                \"    },\" +\n-                                \"    \\\"c\\\": {\" +\n-                                \"      \\\"type\\\": \\\"object\\\",\" +\n-                                \"      \\\"properties\\\": {\" +\n-                                \"        \\\"d\\\": {\" +\n-                                \"          \\\"type\\\": \\\"keyword\\\"\" +\n-                                \"        },\" +\n-                                \"        \\\"e\\\": {\" +\n-                                \"          \\\"type\\\": \\\"keyword\\\"\" +\n-                                \"        },\" +\n-                                \"        \\\"f\\\": {\" +\n-                                \"          \\\"type\\\": \\\"object\\\",\" +\n-                                \"          \\\"properties\\\": {\" +\n-                                \"            \\\"g\\\": {\" +\n-                                \"              \\\"type\\\": \\\"integer\\\"\" +\n-                                \"            },\" +\n-                                \"            \\\"h\\\": {\" +\n-                                \"              \\\"type\\\": \\\"integer\\\"\" +\n-                                \"            }\" +\n-                                \"          } \" +\n-                                \"        }\" +\n-                                \"      }\" +\n-                                \"    },\" +\n-                                \"    \\\"i\\\": {\" +\n-                                \"      \\\"type\\\": \\\"long\\\"\" +\n-                                \"    },\" +\n-                                \"    \\\"j\\\": {\" +\n-                                \"      \\\"type\\\": \\\"long\\\"\" +\n-                                \"    },\" +\n-                                \"    \\\"k\\\": {\" +\n-                                \"      \\\"type\\\": \\\"long\\\"\" +\n-                                \"    }\" +\n-                                \"  }\" +\n-                                \"}\",\n-                        XContentType.JSON)\n-                .get();\n+        String mapping = \"\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 178}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3OTk4MDc3", "url": "https://github.com/trinodb/trino/pull/2591#pullrequestreview-347998077", "createdAt": "2020-01-24T14:42:36Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDo0MjozNlrOFhfzXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDo0MjozNlrOFhfzXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY2ODM4MA==", "bodyText": "nit: We can remove String.", "url": "https://github.com/trinodb/trino/pull/2591#discussion_r370668380", "createdAt": "2020-01-24T14:42:36Z", "author": {"login": "ebyhr"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearchIntegrationSmokeTest.java", "diffHunk": "@@ -669,11 +615,25 @@ protected boolean canDropSchema()\n         return false;\n     }\n \n-    private void index(String indexName, Map<String, Object> document)\n+    private void index(String index, Map<String, Object> document)\n+            throws IOException\n+    {\n+        client.index(new IndexRequest(index, \"doc\")\n+                .source(document)\n+                .setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE));\n+    }\n+\n+    private void addAlias(String index, String alias)\n+            throws IOException\n+    {\n+        client.getLowLevelClient()\n+                .performRequest(\"PUT\", String.format(\"/%s/_alias/%s\", index, alias));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 609}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d04b31c4d91b0365419f175698a4dcb1176b4455", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/d04b31c4d91b0365419f175698a4dcb1176b4455", "committedDate": "2020-01-24T16:10:16Z", "message": "Add option to ignore Elasticsearch publish_address\n\nThe address is used to address Elasticsearch nodes. When\nrunning in a container environment, the published address\nmay not match the public address of the container.\n\nThis option makes the connector ignore the published address\nand use the configured address, instead."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9409fdbee06bc9e4a631898aaed67f0de05abc75", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/9409fdbee06bc9e4a631898aaed67f0de05abc75", "committedDate": "2020-01-24T16:10:16Z", "message": "Skip object fields with no properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd4b3dd0b77ece2d56d58a38834f952e3f970905", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/bd4b3dd0b77ece2d56d58a38834f952e3f970905", "committedDate": "2020-01-24T16:10:16Z", "message": "Migrate Elasticsearch tests to testcontainers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "bd4b3dd0b77ece2d56d58a38834f952e3f970905", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/bd4b3dd0b77ece2d56d58a38834f952e3f970905", "committedDate": "2020-01-24T16:10:16Z", "message": "Migrate Elasticsearch tests to testcontainers"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 969, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}