{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MjkyMjMw", "number": 2633, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjoyOTowNVrODb-paA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxODozMDo1NVrODcbhiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjY0NTUyOnYy", "diffSide": "RIGHT", "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoDriver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjoyOTowNVrOFjxeLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjoyOTowNVrOFjxeLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA1NTAyMw==", "bodyText": "There's JavaVersion.current(). As far as I know, \"java.version\" should never be null, so you should be able to use that one instead.", "url": "https://github.com/trinodb/trino/pull/2633#discussion_r373055023", "createdAt": "2020-01-30T16:29:05Z", "author": {"login": "martint"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoDriver.java", "diffHunk": "@@ -138,4 +137,22 @@ public Logger getParentLogger()\n         // TODO: support java.util.Logging\n         throw new SQLFeatureNotSupportedException();\n     }\n+\n+    private OkHttpClient newHttpClient()\n+    {\n+        OkHttpClient.Builder builder = new OkHttpClient.Builder()\n+                .addInterceptor(userAgent(DRIVER_NAME + \"/\" + DRIVER_VERSION));\n+\n+        String javaVersion = StandardSystemProperty.JAVA_VERSION.value();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjY0OTk4OnYy", "diffSide": "RIGHT", "path": "presto-cli/src/main/java/io/prestosql/cli/QueryRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjozMDoxOFrOFjxhKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjozMDoxOFrOFjxhKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA1NTc4Ng==", "bodyText": "Same comment as below.", "url": "https://github.com/trinodb/trino/pull/2633#discussion_r373055786", "createdAt": "2020-01-30T16:30:18Z", "author": {"login": "martint"}, "path": "presto-cli/src/main/java/io/prestosql/cli/QueryRunner.java", "diffHunk": "@@ -183,4 +184,19 @@ private static void setupNetworkLogging(OkHttpClient.Builder clientBuilder)\n             log.debug(\"Sending %s request to %s\", request.method(), request.url().uri());\n         }));\n     }\n+\n+    private static void setupChannelSocket(OkHttpClient.Builder clientBuilder)\n+    {\n+        String javaVersion = StandardSystemProperty.JAVA_VERSION.value();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwOTM5NDY2OnYy", "diffSide": "RIGHT", "path": "presto-client/src/main/java/io/prestosql/client/JavaVersion.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMzo1MToxMFrOFkL5aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNDozMjozMlrOFkNIhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ4Nzk3OQ==", "bodyText": "I\u2019m concerned about having this complex code (which has had bugs in the past) as part of the JDBC driver, which runs in various environments. We also plan to keep the driver on Java 8 for the foreseeable future, so this code won\u2019t be removed anytime soon.\nSome alternatives:\n\n\nJust split on a period and take the first item, since that works for all versions.\n\n\nUse reflection to check for and call the Runtime.Version API. We can check for and use the feature method which is in JDK 10+.\n\n\nUse reflection to look for the existence of a \u201cmarker\u201d class like java.net.http.HttpClient which was added in JDK 11.", "url": "https://github.com/trinodb/trino/pull/2633#discussion_r373487979", "createdAt": "2020-01-31T13:51:10Z", "author": {"login": "electrum"}, "path": "presto-client/src/main/java/io/prestosql/client/JavaVersion.java", "diffHunk": "@@ -0,0 +1,138 @@\n+\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.client;\n+\n+import com.google.common.base.StandardSystemProperty;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.OptionalInt;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import static com.google.common.base.MoreObjects.toStringHelper;\n+import static java.lang.String.format;\n+\n+// TODO: remove this when we upgrade to Java 9 (replace with java.lang.Runtime.getVersion())\n+//       It's copied from io.prestosql.server module.\n+public class JavaVersion", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzUwMzE4Ng==", "bodyText": "This is the code using Runtime.version() reflectively:\n@SuppressWarnings(\"JavaReflectionMemberAccess\")\nprivate static boolean isAtLeastJava11()\n{\n    try {\n        Method versionMethod = Runtime.class.getMethod(\"version\");\n        Method featureMethod = versionMethod.getReturnType().getMethod(\"feature\");\n        Object version = versionMethod.invoke(null);\n        int feature = (int) featureMethod.invoke(version);\n        return feature >= 11;\n    }\n    catch (ReflectiveOperationException e) {\n        return false;\n    }\n}", "url": "https://github.com/trinodb/trino/pull/2633#discussion_r373503186", "createdAt": "2020-01-31T14:22:38Z", "author": {"login": "electrum"}, "path": "presto-client/src/main/java/io/prestosql/client/JavaVersion.java", "diffHunk": "@@ -0,0 +1,138 @@\n+\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.client;\n+\n+import com.google.common.base.StandardSystemProperty;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.OptionalInt;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import static com.google.common.base.MoreObjects.toStringHelper;\n+import static java.lang.String.format;\n+\n+// TODO: remove this when we upgrade to Java 9 (replace with java.lang.Runtime.getVersion())\n+//       It's copied from io.prestosql.server module.\n+public class JavaVersion", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ4Nzk3OQ=="}, "originalCommit": null, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzUwNTc3Nw==", "bodyText": "Code to safely parse the version:\nprivate static boolean isAtLeastJava11()\n{\n    String feature = Splitter.on(\".\").split(StandardSystemProperty.JAVA_VERSION.value()).next();\n    try {\n        return Integer.parseInt(feature) >= 11;\n    }\n    catch (NumberFormatException e) {\n        return false;\n    }\n}", "url": "https://github.com/trinodb/trino/pull/2633#discussion_r373505777", "createdAt": "2020-01-31T14:27:49Z", "author": {"login": "electrum"}, "path": "presto-client/src/main/java/io/prestosql/client/JavaVersion.java", "diffHunk": "@@ -0,0 +1,138 @@\n+\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.client;\n+\n+import com.google.common.base.StandardSystemProperty;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.OptionalInt;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import static com.google.common.base.MoreObjects.toStringHelper;\n+import static java.lang.String.format;\n+\n+// TODO: remove this when we upgrade to Java 9 (replace with java.lang.Runtime.getVersion())\n+//       It's copied from io.prestosql.server module.\n+public class JavaVersion", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ4Nzk3OQ=="}, "originalCommit": null, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzUwODIzMQ==", "bodyText": "@dain agrees we should go with option 1, since that's simple and reliable", "url": "https://github.com/trinodb/trino/pull/2633#discussion_r373508231", "createdAt": "2020-01-31T14:32:32Z", "author": {"login": "electrum"}, "path": "presto-client/src/main/java/io/prestosql/client/JavaVersion.java", "diffHunk": "@@ -0,0 +1,138 @@\n+\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.client;\n+\n+import com.google.common.base.StandardSystemProperty;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.OptionalInt;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import static com.google.common.base.MoreObjects.toStringHelper;\n+import static java.lang.String.format;\n+\n+// TODO: remove this when we upgrade to Java 9 (replace with java.lang.Runtime.getVersion())\n+//       It's copied from io.prestosql.server module.\n+public class JavaVersion", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ4Nzk3OQ=="}, "originalCommit": null, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM3NjczOnYy", "diffSide": "RIGHT", "path": "presto-cli/src/main/java/io/prestosql/cli/QueryRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxODozMDo1NVrOFkenTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxODozMDo1NVrOFkenTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NDYzNg==", "bodyText": "Move these to OkHttpUtil, then we don't need two copies", "url": "https://github.com/trinodb/trino/pull/2633#discussion_r373794636", "createdAt": "2020-02-01T18:30:55Z", "author": {"login": "electrum"}, "path": "presto-cli/src/main/java/io/prestosql/cli/QueryRunner.java", "diffHunk": "@@ -183,4 +184,23 @@ private static void setupNetworkLogging(OkHttpClient.Builder clientBuilder)\n             log.debug(\"Sending %s request to %s\", request.method(), request.url().uri());\n         }));\n     }\n+\n+    private static void setupChannelSocket(OkHttpClient.Builder clientBuilder)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 952, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}