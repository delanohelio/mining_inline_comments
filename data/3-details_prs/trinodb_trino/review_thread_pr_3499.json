{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NzM0OTM3", "number": 3499, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOToxNTowN1rOD0pvKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxOTozMjoyNFrOD4zkkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NTM2MzYyOnYy", "diffSide": "RIGHT", "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/TestCassandraIntegrationSmokeTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOToxNTowN1rOGJsJJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOToxNTowN1rOGJsJJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgxMzYwNg==", "bodyText": "Can you please name this test in a way that captures what is the functionality tested here. IMO testInsertToTableWithHiddenId would be better name.", "url": "https://github.com/trinodb/trino/pull/3499#discussion_r412813606", "createdAt": "2020-04-22T09:15:07Z", "author": {"login": "losipiuk"}, "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/TestCassandraIntegrationSmokeTest.java", "diffHunk": "@@ -165,6 +165,16 @@ public void testSelect()\n         assertSelect(TABLE_ALL_TYPES_PARTITION_KEY, false);\n     }\n \n+    @Test\n+    public void testCreateTable()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NTM3MzczOnYy", "diffSide": "RIGHT", "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/CassandraMetadata.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOToxNzoxNFrOGJsPRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOToxNzoxNFrOGJsPRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgxNTE3NQ==", "bodyText": "\"id\" literal appears in couple of places already. Can you please extract constant for that.", "url": "https://github.com/trinodb/trino/pull/3499#discussion_r412815175", "createdAt": "2020-04-22T09:17:14Z", "author": {"login": "losipiuk"}, "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/CassandraMetadata.java", "diffHunk": "@@ -335,19 +335,32 @@ public ConnectorInsertTableHandle beginInsert(ConnectorSession session, Connecto\n \n         SchemaTableName schemaTableName = new SchemaTableName(table.getSchemaName(), table.getTableName());\n         List<CassandraColumnHandle> columns = cassandraSession.getTable(schemaTableName).getColumns();\n-        List<String> columnNames = columns.stream().map(CassandraColumnHandle::getName).collect(Collectors.toList());\n-        List<Type> columnTypes = columns.stream().map(CassandraColumnHandle::getType).collect(Collectors.toList());\n+        List<String> columnNames = columns.stream()\n+                .filter(columnHandle -> !isHiddenIdColumn(columnHandle))\n+                .map(CassandraColumnHandle::getName)\n+                .collect(Collectors.toList());\n+        List<Type> columnTypes = columns.stream()\n+                .filter(columnHandle -> !isHiddenIdColumn(columnHandle))\n+                .map(CassandraColumnHandle::getType)\n+                .collect(Collectors.toList());\n+        boolean generateUuid = columns.stream().anyMatch(CassandraMetadata::isHiddenIdColumn);\n \n         return new CassandraInsertTableHandle(\n                 table.getSchemaName(),\n                 table.getTableName(),\n                 columnNames,\n-                columnTypes);\n+                columnTypes,\n+                generateUuid);\n     }\n \n     @Override\n     public Optional<ConnectorOutputMetadata> finishInsert(ConnectorSession session, ConnectorInsertTableHandle insertHandle, Collection<Slice> fragments, Collection<ComputedStatistics> computedStatistics)\n     {\n         return Optional.empty();\n     }\n+\n+    private static boolean isHiddenIdColumn(CassandraColumnHandle columnHandle)\n+    {\n+        return columnHandle.isHidden() && \"id\".equals(columnHandle.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NTM4MTE5OnYy", "diffSide": "RIGHT", "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/CassandraPageSinkProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOToxODo1N1rOGJsT8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMzo1NTowN1rOGJ3x1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgxNjM3MQ==", "bodyText": "Not sure what is proper casing according to code-style but CassandraPageSing uses generateUUID. Can you please unify?", "url": "https://github.com/trinodb/trino/pull/3499#discussion_r412816371", "createdAt": "2020-04-22T09:18:57Z", "author": {"login": "losipiuk"}, "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/CassandraPageSinkProvider.java", "diffHunk": "@@ -67,6 +67,6 @@ public ConnectorPageSink createPageSink(ConnectorTransactionHandle transactionHa\n                 handle.getTableName(),\n                 handle.getColumnNames(),\n                 handle.getColumnTypes(),\n-                false);\n+                handle.isGenerateUuid());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzAwNDI0Ng==", "bodyText": "Unified to generateUuid as we have several Uuid~ classes.", "url": "https://github.com/trinodb/trino/pull/3499#discussion_r413004246", "createdAt": "2020-04-22T13:55:07Z", "author": {"login": "ebyhr"}, "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/CassandraPageSinkProvider.java", "diffHunk": "@@ -67,6 +67,6 @@ public ConnectorPageSink createPageSink(ConnectorTransactionHandle transactionHa\n                 handle.getTableName(),\n                 handle.getColumnNames(),\n                 handle.getColumnTypes(),\n-                false);\n+                handle.isGenerateUuid());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgxNjM3MQ=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwODkxNzk1OnYy", "diffSide": "RIGHT", "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/CassandraMetadata.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxOTozMjoyNFrOGPuzRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwOTo0Nzo1M1rOGP5dJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0ODYxNQ==", "bodyText": "Can there be more than one?", "url": "https://github.com/trinodb/trino/pull/3499#discussion_r419148615", "createdAt": "2020-05-03T19:32:24Z", "author": {"login": "findepi"}, "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/CassandraMetadata.java", "diffHunk": "@@ -336,19 +336,32 @@ public ConnectorInsertTableHandle beginInsert(ConnectorSession session, Connecto\n \n         SchemaTableName schemaTableName = new SchemaTableName(table.getSchemaName(), table.getTableName());\n         List<CassandraColumnHandle> columns = cassandraSession.getTable(schemaTableName).getColumns();\n-        List<String> columnNames = columns.stream().map(CassandraColumnHandle::getName).collect(Collectors.toList());\n-        List<Type> columnTypes = columns.stream().map(CassandraColumnHandle::getType).collect(Collectors.toList());\n+        List<String> columnNames = columns.stream()\n+                .filter(columnHandle -> !isHiddenIdColumn(columnHandle))\n+                .map(CassandraColumnHandle::getName)\n+                .collect(Collectors.toList());\n+        List<Type> columnTypes = columns.stream()\n+                .filter(columnHandle -> !isHiddenIdColumn(columnHandle))\n+                .map(CassandraColumnHandle::getType)\n+                .collect(Collectors.toList());\n+        boolean generateUuid = columns.stream().anyMatch(CassandraMetadata::isHiddenIdColumn);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI3NDY0Nw==", "bodyText": "I suppose it's always one.", "url": "https://github.com/trinodb/trino/pull/3499#discussion_r419274647", "createdAt": "2020-05-04T08:13:29Z", "author": {"login": "ebyhr"}, "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/CassandraMetadata.java", "diffHunk": "@@ -336,19 +336,32 @@ public ConnectorInsertTableHandle beginInsert(ConnectorSession session, Connecto\n \n         SchemaTableName schemaTableName = new SchemaTableName(table.getSchemaName(), table.getTableName());\n         List<CassandraColumnHandle> columns = cassandraSession.getTable(schemaTableName).getColumns();\n-        List<String> columnNames = columns.stream().map(CassandraColumnHandle::getName).collect(Collectors.toList());\n-        List<Type> columnTypes = columns.stream().map(CassandraColumnHandle::getType).collect(Collectors.toList());\n+        List<String> columnNames = columns.stream()\n+                .filter(columnHandle -> !isHiddenIdColumn(columnHandle))\n+                .map(CassandraColumnHandle::getName)\n+                .collect(Collectors.toList());\n+        List<Type> columnTypes = columns.stream()\n+                .filter(columnHandle -> !isHiddenIdColumn(columnHandle))\n+                .map(CassandraColumnHandle::getType)\n+                .collect(Collectors.toList());\n+        boolean generateUuid = columns.stream().anyMatch(CassandraMetadata::isHiddenIdColumn);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0ODYxNQ=="}, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMyMzE3NQ==", "bodyText": "I guess (and it should), so the code here is too flexible\nmaybe\nboolean generateUuid = columns.stream()\n  .filter(CassandraMetadata::isHiddenIdColumn))\n .collect(toOptional()) // must be at most one\n .isPresent();", "url": "https://github.com/trinodb/trino/pull/3499#discussion_r419323175", "createdAt": "2020-05-04T09:47:53Z", "author": {"login": "findepi"}, "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/CassandraMetadata.java", "diffHunk": "@@ -336,19 +336,32 @@ public ConnectorInsertTableHandle beginInsert(ConnectorSession session, Connecto\n \n         SchemaTableName schemaTableName = new SchemaTableName(table.getSchemaName(), table.getTableName());\n         List<CassandraColumnHandle> columns = cassandraSession.getTable(schemaTableName).getColumns();\n-        List<String> columnNames = columns.stream().map(CassandraColumnHandle::getName).collect(Collectors.toList());\n-        List<Type> columnTypes = columns.stream().map(CassandraColumnHandle::getType).collect(Collectors.toList());\n+        List<String> columnNames = columns.stream()\n+                .filter(columnHandle -> !isHiddenIdColumn(columnHandle))\n+                .map(CassandraColumnHandle::getName)\n+                .collect(Collectors.toList());\n+        List<Type> columnTypes = columns.stream()\n+                .filter(columnHandle -> !isHiddenIdColumn(columnHandle))\n+                .map(CassandraColumnHandle::getType)\n+                .collect(Collectors.toList());\n+        boolean generateUuid = columns.stream().anyMatch(CassandraMetadata::isHiddenIdColumn);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0ODYxNQ=="}, "originalCommit": null, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 200, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}