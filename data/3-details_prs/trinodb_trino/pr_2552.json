{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NjUyNDY4", "number": 2552, "title": "Fix delegation call in ViewAccessControl", "bodyText": "Fix delegation call in ViewAccessControl", "createdAt": "2020-01-20T05:37:41Z", "url": "https://github.com/trinodb/trino/pull/2552", "merged": true, "mergeCommit": {"oid": "c1e424a782f250c6a0ef12220b78313f0556fd9f"}, "closed": true, "closedAt": "2020-01-21T16:53:33Z", "author": {"login": "kokosing"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8I0lsABqjI5NjIxMTk0NjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9JtKVgFqTM0NzI2Njc1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NTkzMDYy", "url": "https://github.com/trinodb/trino/pull/2552#pullrequestreview-345593062", "createdAt": "2020-01-21T01:27:09Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMToyNzowOVrOFfsS2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMToyNzowOVrOFfsS2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc3NTg5OA==", "bodyText": "The sentence is truncated. It should be\n\nand thus must have the equivalent of the SQL standard \"GRANT ... WITH GRANT OPTION\".", "url": "https://github.com/trinodb/trino/pull/2552#discussion_r368775898", "createdAt": "2020-01-21T01:27:09Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/security/ViewAccessControl.java", "diffHunk": "@@ -32,6 +32,10 @@ public ViewAccessControl(AccessControl delegate)\n     @Override\n     public void checkCanSelectFromColumns(SecurityContext context, QualifiedObjectName tableName, Set<String> columnNames)\n     {\n+        // This is intentional and matches the SQL standard for view security.\n+        // In SQL, views are special in that they execute with permissions of the owner.\n+        // This means that the owner of the view is effectively granting permissions to the user running the query,\n+        // and thus must have the equivalent of the SQL standard.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NTkzODQy", "url": "https://github.com/trinodb/trino/pull/2552#pullrequestreview-345593842", "createdAt": "2020-01-21T01:30:58Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMTozMDo1OFrOFfsVYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMTozMDo1OFrOFfsVYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc3NjU0NA==", "bodyText": "I think this would be easier to read with shorter variable names. Also, introduce a variable\nClass<?> forwardingClass = forwardingInstance.getClass();\nMethod forwardingMethod = forwardingClass.getMethod(method.getName().method.getParameterTypes());\nreturn forwardingClass == forwardingMethod.getDeclaringClass();", "url": "https://github.com/trinodb/trino/pull/2552#discussion_r368776544", "createdAt": "2020-01-21T01:30:58Z", "author": {"login": "electrum"}, "path": "presto-spi/src/test/java/io/prestosql/spi/testing/InterfaceTestUtils.java", "diffHunk": "@@ -64,11 +64,22 @@ private InterfaceTestUtils() {}\n                     }));\n \n             try {\n+                if (!defines(forwardingInstance, actualMethod)) {\n+                    continue;\n+                }\n+\n                 actualMethod.invoke(forwardingInstance, actualArguments);\n             }\n             catch (Exception e) {\n                 throw new RuntimeException(format(\"Invocation of %s has failed\", actualMethod), e);\n             }\n         }\n     }\n+\n+    private static boolean defines(Object forwardingInstance, Method actualMethod)\n+            throws Exception\n+    {\n+        Class<?> forwardingInstanceClass = forwardingInstance.getClass();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e770e4724872a4c5e79224601df0b21bafc3d269", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/e770e4724872a4c5e79224601df0b21bafc3d269", "committedDate": "2020-01-21T16:53:08Z", "message": "Do not verify methods that are not overridden"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1e424a782f250c6a0ef12220b78313f0556fd9f", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/c1e424a782f250c6a0ef12220b78313f0556fd9f", "committedDate": "2020-01-21T16:53:08Z", "message": "Add a comment to ViewAccessControl"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "c1e424a782f250c6a0ef12220b78313f0556fd9f", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/c1e424a782f250c6a0ef12220b78313f0556fd9f", "committedDate": "2020-01-21T16:53:08Z", "message": "Add a comment to ViewAccessControl"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MjY2NzU2", "url": "https://github.com/trinodb/trino/pull/2552#pullrequestreview-347266756", "createdAt": "2020-01-23T12:42:46Z", "commit": {"oid": "e770e4724872a4c5e79224601df0b21bafc3d269"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMjo0Mjo0NlrOFg80aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMjo0Mjo0NlrOFg80aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA5NTIwOA==", "bodyText": "What is this needed for?", "url": "https://github.com/trinodb/trino/pull/2552#discussion_r370095208", "createdAt": "2020-01-23T12:42:46Z", "author": {"login": "findepi"}, "path": "presto-spi/src/test/java/io/prestosql/spi/testing/InterfaceTestUtils.java", "diffHunk": "@@ -64,11 +64,23 @@ private InterfaceTestUtils() {}\n                     }));\n \n             try {\n+                if (!defines(forwardingInstance, actualMethod)) {\n+                    continue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e770e4724872a4c5e79224601df0b21bafc3d269"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 928, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}