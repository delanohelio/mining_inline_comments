{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwOTY4Njc1", "number": 5506, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxMzoyMzozMFrOEsSIZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxMzoyMzozMFrOEsSIZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0ODY5ODYzOnYy", "diffSide": "RIGHT", "path": "presto-oracle/src/test/java/io/prestosql/plugin/oracle/TestOracleDistributedQueries.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxMzoyMzozMFrOHff4xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwODozOToxNVrOHlgtUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc5MDM0Mw==", "bodyText": "Oracle's DATE and Oracle's  TIMESTAMP are different types\nare you referring to Presto's DATE and Presto's TIMESTAMP?", "url": "https://github.com/trinodb/trino/pull/5506#discussion_r502790343", "createdAt": "2020-10-10T13:23:30Z", "author": {"login": "findepi"}, "path": "presto-oracle/src/test/java/io/prestosql/plugin/oracle/TestOracleDistributedQueries.java", "diffHunk": "@@ -371,6 +357,7 @@ public void testInsertWithCoercion()\n         assertUpdate(\"INSERT INTO test_insert_with_coercion (char_column, bounded_varchar_column, unbounded_varchar_column) VALUES (CAST('aa     ' AS varchar), CAST('aa     ' AS varchar), CAST('aa     ' AS varchar))\", 1);\n         assertUpdate(\"INSERT INTO test_insert_with_coercion (char_column, bounded_varchar_column, unbounded_varchar_column) VALUES (NULL, NULL, NULL)\", 1);\n         assertUpdate(\"INSERT INTO test_insert_with_coercion (char_column, bounded_varchar_column, unbounded_varchar_column) VALUES (CAST(NULL AS varchar), CAST(NULL AS varchar), CAST(NULL AS varchar))\", 1);\n+        // TODO Reimplement because this assumes DATE and TIMESTAMP are different types, but in Oracle connector DATE is mapped to TIMESTAMP", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc5NDgzNA==", "bodyText": "We have mapped Oracle's DATE to Presto's TIMESTAMP. So coercion of TIMESTAMP into DATE during insertion won't actually lead to a coercion being performed I think. See https://github.com/prestosql/presto/blob/master/presto-oracle/src/test/java/io/prestosql/plugin/oracle/OracleDataTypes.java#L223-L228.", "url": "https://github.com/trinodb/trino/pull/5506#discussion_r502794834", "createdAt": "2020-10-10T14:12:08Z", "author": {"login": "hashhar"}, "path": "presto-oracle/src/test/java/io/prestosql/plugin/oracle/TestOracleDistributedQueries.java", "diffHunk": "@@ -371,6 +357,7 @@ public void testInsertWithCoercion()\n         assertUpdate(\"INSERT INTO test_insert_with_coercion (char_column, bounded_varchar_column, unbounded_varchar_column) VALUES (CAST('aa     ' AS varchar), CAST('aa     ' AS varchar), CAST('aa     ' AS varchar))\", 1);\n         assertUpdate(\"INSERT INTO test_insert_with_coercion (char_column, bounded_varchar_column, unbounded_varchar_column) VALUES (NULL, NULL, NULL)\", 1);\n         assertUpdate(\"INSERT INTO test_insert_with_coercion (char_column, bounded_varchar_column, unbounded_varchar_column) VALUES (CAST(NULL AS varchar), CAST(NULL AS varchar), CAST(NULL AS varchar))\", 1);\n+        // TODO Reimplement because this assumes DATE and TIMESTAMP are different types, but in Oracle connector DATE is mapped to TIMESTAMP", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc5MDM0Mw=="}, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEyMDE5MQ==", "bodyText": "we're not going to \"reimplement\" this in any reasonable way, so\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // TODO Reimplement because this assumes DATE and TIMESTAMP are different types, but in Oracle connector DATE is mapped to TIMESTAMP\n          \n          \n            \n                    // Note this case does not actually require coercion, because the `date_column` ends up as Oracle's DATE, which is mapped to Presto's TIMESTAMP. The test case is still retained for black box testing purposes.\n          \n      \n    \n    \n  \n\n.... i am nto particularily proud of the wording, be the key here is -- no  \"TODO\", just explanation. I considered removing the test case altogether, but though keeping (with appropriate comment) is better than removal.", "url": "https://github.com/trinodb/trino/pull/5506#discussion_r503120191", "createdAt": "2020-10-12T08:22:11Z", "author": {"login": "findepi"}, "path": "presto-oracle/src/test/java/io/prestosql/plugin/oracle/TestOracleDistributedQueries.java", "diffHunk": "@@ -371,6 +357,7 @@ public void testInsertWithCoercion()\n         assertUpdate(\"INSERT INTO test_insert_with_coercion (char_column, bounded_varchar_column, unbounded_varchar_column) VALUES (CAST('aa     ' AS varchar), CAST('aa     ' AS varchar), CAST('aa     ' AS varchar))\", 1);\n         assertUpdate(\"INSERT INTO test_insert_with_coercion (char_column, bounded_varchar_column, unbounded_varchar_column) VALUES (NULL, NULL, NULL)\", 1);\n         assertUpdate(\"INSERT INTO test_insert_with_coercion (char_column, bounded_varchar_column, unbounded_varchar_column) VALUES (CAST(NULL AS varchar), CAST(NULL AS varchar), CAST(NULL AS varchar))\", 1);\n+        // TODO Reimplement because this assumes DATE and TIMESTAMP are different types, but in Oracle connector DATE is mapped to TIMESTAMP", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc5MDM0Mw=="}, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA5NTI0OQ==", "bodyText": "Makes sense. I also don't see any way to re-implement without changing the type mapping (for no gains apart from this test).", "url": "https://github.com/trinodb/trino/pull/5506#discussion_r509095249", "createdAt": "2020-10-21T08:39:15Z", "author": {"login": "hashhar"}, "path": "presto-oracle/src/test/java/io/prestosql/plugin/oracle/TestOracleDistributedQueries.java", "diffHunk": "@@ -371,6 +357,7 @@ public void testInsertWithCoercion()\n         assertUpdate(\"INSERT INTO test_insert_with_coercion (char_column, bounded_varchar_column, unbounded_varchar_column) VALUES (CAST('aa     ' AS varchar), CAST('aa     ' AS varchar), CAST('aa     ' AS varchar))\", 1);\n         assertUpdate(\"INSERT INTO test_insert_with_coercion (char_column, bounded_varchar_column, unbounded_varchar_column) VALUES (NULL, NULL, NULL)\", 1);\n         assertUpdate(\"INSERT INTO test_insert_with_coercion (char_column, bounded_varchar_column, unbounded_varchar_column) VALUES (CAST(NULL AS varchar), CAST(NULL AS varchar), CAST(NULL AS varchar))\", 1);\n+        // TODO Reimplement because this assumes DATE and TIMESTAMP are different types, but in Oracle connector DATE is mapped to TIMESTAMP", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc5MDM0Mw=="}, "originalCommit": null, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4669, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}