{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MTQ1NjMx", "number": 5326, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMzozNDozM1rOEoFQIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNzo1MTozOFrOEoahxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDY0NTQ0OnYy", "diffSide": "RIGHT", "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMzozNDozM1rOHY99fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTozODozMFrOHZz0PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk0MzAzNg==", "bodyText": "I marked this final on purpose, to help implementors of connectors outside of the repository to update the code.\nPrevious test suppression model was via test override. This is no longer the way, and the new test version also verifies the connector is correctly reporting lack of support for comments.\nWDYT?", "url": "https://github.com/trinodb/trino/pull/5326#discussion_r495943036", "createdAt": "2020-09-28T13:34:33Z", "author": {"login": "findepi"}, "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -334,44 +339,54 @@ public void testRenameTable()\n     }\n \n     @Test\n-    public void testCommentTable()\n+    public final void testCommentTable()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk1NTg3OA==", "bodyText": "The testDelete case shows this can be more subtle.", "url": "https://github.com/trinodb/trino/pull/5326#discussion_r495955878", "createdAt": "2020-09-28T13:52:31Z", "author": {"login": "findepi"}, "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -334,44 +339,54 @@ public void testRenameTable()\n     }\n \n     @Test\n-    public void testCommentTable()\n+    public final void testCommentTable()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk0MzAzNg=="}, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjUwMTgzOA==", "bodyText": "The testDelete case shows this can be more subtle.\n\nWhy?", "url": "https://github.com/trinodb/trino/pull/5326#discussion_r496501838", "createdAt": "2020-09-29T08:05:27Z", "author": {"login": "losipiuk"}, "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -334,44 +339,54 @@ public void testRenameTable()\n     }\n \n     @Test\n-    public void testCommentTable()\n+    public final void testCommentTable()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk0MzAzNg=="}, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgyNTQwNA==", "bodyText": "because supporting a feature is non-binary -- hive supports delertes, but only certain form of them", "url": "https://github.com/trinodb/trino/pull/5326#discussion_r496825404", "createdAt": "2020-09-29T15:38:30Z", "author": {"login": "findepi"}, "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -334,44 +339,54 @@ public void testRenameTable()\n     }\n \n     @Test\n-    public void testCommentTable()\n+    public final void testCommentTable()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk0MzAzNg=="}, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODEyNzY0OnYy", "diffSide": "RIGHT", "path": "presto-mysql/src/test/java/io/prestosql/plugin/mysql/TestMySqlDistributedQueries.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNzo1MDo0NFrOHZfRkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwODo1NjoyM1rOHZjI6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ4ODg0OQ==", "bodyText": "Just thinking.\nMaybe instead of having N supports* methods. We could have\nEnumSet<Feature> supportedFeatures()", "url": "https://github.com/trinodb/trino/pull/5326#discussion_r496488849", "createdAt": "2020-09-29T07:50:44Z", "author": {"login": "losipiuk"}, "path": "presto-mysql/src/test/java/io/prestosql/plugin/mysql/TestMySqlDistributedQueries.java", "diffHunk": "@@ -56,6 +56,12 @@ public final void destroy()\n         mysqlServer = null;\n     }\n \n+    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjUxNTkyNg==", "bodyText": "how would implementation in a subclass look then? a switch?", "url": "https://github.com/trinodb/trino/pull/5326#discussion_r496515926", "createdAt": "2020-09-29T08:18:37Z", "author": {"login": "findepi"}, "path": "presto-mysql/src/test/java/io/prestosql/plugin/mysql/TestMySqlDistributedQueries.java", "diffHunk": "@@ -56,6 +56,12 @@ public final void destroy()\n         mysqlServer = null;\n     }\n \n+    @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ4ODg0OQ=="}, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU1MjE2OA==", "bodyText": "I guess superclass would be\nreturn Features.all()\n\nand in subclass\nreturn Features.allBut(COMMENT_ON_TABLE, COMMENT_ON_COLUMN, ....)", "url": "https://github.com/trinodb/trino/pull/5326#discussion_r496552168", "createdAt": "2020-09-29T08:56:23Z", "author": {"login": "losipiuk"}, "path": "presto-mysql/src/test/java/io/prestosql/plugin/mysql/TestMySqlDistributedQueries.java", "diffHunk": "@@ -56,6 +56,12 @@ public final void destroy()\n         mysqlServer = null;\n     }\n \n+    @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ4ODg0OQ=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODEzMTI2OnYy", "diffSide": "RIGHT", "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNzo1MTozOVrOHZfTxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwODoxOToxNVrOHZg-Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ4OTQxNA==", "bodyText": "\"updates or deletes\" interesting. Does it always come together?", "url": "https://github.com/trinodb/trino/pull/5326#discussion_r496489414", "createdAt": "2020-09-29T07:51:39Z", "author": {"login": "losipiuk"}, "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -609,6 +614,13 @@ public void testDelete()\n         // delete half the table, then delete the rest\n         String tableName = \"test_delete_\" + randomTableSuffix();\n \n+        if (!supportsDelete()) {\n+            assertUpdate(\"CREATE TABLE \" + tableName + \" AS SELECT * FROM orders WITH NO DATA\", 0);\n+            assertQueryFails(\"DELETE FROM \" + tableName, \"This connector does not support updates or deletes\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjUxNjYzOQ==", "bodyText": "You can implement delete without update,. but the wording comes from https://github.com/prestosql/presto/blob/88116a4a3fda92f0caa725d9b1a83e9b22f7dcf4/presto-spi/src/main/java/io/prestosql/spi/connector/ConnectorMetadata.java#L482", "url": "https://github.com/trinodb/trino/pull/5326#discussion_r496516639", "createdAt": "2020-09-29T08:19:15Z", "author": {"login": "findepi"}, "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -609,6 +614,13 @@ public void testDelete()\n         // delete half the table, then delete the rest\n         String tableName = \"test_delete_\" + randomTableSuffix();\n \n+        if (!supportsDelete()) {\n+            assertUpdate(\"CREATE TABLE \" + tableName + \" AS SELECT * FROM orders WITH NO DATA\", 0);\n+            assertQueryFails(\"DELETE FROM \" + tableName, \"This connector does not support updates or deletes\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ4OTQxNA=="}, "originalCommit": null, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4721, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}