{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNzEyNjU0", "number": 4318, "title": "Add in memory result set", "bodyText": "", "createdAt": "2020-07-02T19:50:40Z", "url": "https://github.com/trinodb/trino/pull/4318", "merged": true, "mergeCommit": {"oid": "6d198859f5374fabb83db7e6535c995edfa835bf"}, "closed": true, "closedAt": "2020-07-06T20:42:45Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxEXEFgFqTQ0MTk3OTc1NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcxTRHqABqjM1MTEwMTg1OTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxOTc5NzU0", "url": "https://github.com/trinodb/trino/pull/4318#pullrequestreview-441979754", "createdAt": "2020-07-02T19:52:47Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxOTo1Mjo0N1rOGsbKXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxOTo1MzowOFrOGsbK3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIzNTU1MA==", "bodyText": "copyright", "url": "https://github.com/trinodb/trino/pull/4318#discussion_r449235550", "createdAt": "2020-07-02T19:52:47Z", "author": {"login": "kokosing"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/AbstractPrestoResultSet.java", "diffHunk": "@@ -0,0 +1,1819 @@\n+package io.prestosql.jdbc;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIzNTY3Nw==", "bodyText": "copyright", "url": "https://github.com/trinodb/trino/pull/4318#discussion_r449235677", "createdAt": "2020-07-02T19:53:08Z", "author": {"login": "kokosing"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/InMemoryPrestoResultSet.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package io.prestosql.jdbc;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMTQ0MjIz", "url": "https://github.com/trinodb/trino/pull/4318#pullrequestreview-442144223", "createdAt": "2020-07-03T04:51:38Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMzkzODQ4", "url": "https://github.com/trinodb/trino/pull/4318#pullrequestreview-442393848", "createdAt": "2020-07-03T12:54:27Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjo1NDoyN1rOGsvglA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMzowMDoxMVrOGsvqrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2ODkxNg==", "bodyText": "copyright", "url": "https://github.com/trinodb/trino/pull/4318#discussion_r449568916", "createdAt": "2020-07-03T12:54:27Z", "author": {"login": "kokosing"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/ClientInfoProperty.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package io.prestosql.jdbc;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2OTM3Ng==", "bodyText": "rnn", "url": "https://github.com/trinodb/trino/pull/4318#discussion_r449569376", "createdAt": "2020-07-03T12:55:29Z", "author": {"login": "kokosing"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/ClientInfoProperty.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package io.prestosql.jdbc;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Stream;\n+\n+import static com.google.common.collect.ImmutableMap.toImmutableMap;\n+import static java.util.Objects.requireNonNull;\n+import static java.util.function.Function.identity;\n+\n+enum ClientInfoProperty\n+{\n+    APPLICATION_NAME(\"ApplicationName\"),\n+    CLIENT_INFO(\"ClientInfo\"),\n+    CLIENT_TAGS(\"ClientTags\"),\n+    TRACE_TOKEN(\"TraceToken\"),\n+    /**/;\n+\n+    private static final Map<String, ClientInfoProperty> BY_NAME = Stream.of(values())\n+            .collect(toImmutableMap(ClientInfoProperty::getPropertyName, identity()));\n+\n+    private final String propertyName;\n+\n+    ClientInfoProperty(String propertyName)\n+    {\n+        this.propertyName = propertyName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3MDY0Nw==", "bodyText": "maybe use org.assertj.core.api.AbstractAssert. See io.prestosql.sql.query.QueryAssertions.QueryAssert", "url": "https://github.com/trinodb/trino/pull/4318#discussion_r449570647", "createdAt": "2020-07-03T12:58:13Z", "author": {"login": "kokosing"}, "path": "presto-jdbc/src/test/java/io/prestosql/jdbc/TestPrestoDatabaseMetaData.java", "diffHunk": "@@ -1438,4 +1459,41 @@ private Connection createConnection(String catalog, String schema)\n         T apply(DatabaseMetaData metaData)\n                 throws SQLException;\n     }\n+\n+    private static ResultSetAssert assertResultSet(ResultSet resultSet)\n+    {\n+        return new ResultSetAssert(resultSet);\n+    }\n+\n+    private static class ResultSetAssert", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3MTUwMg==", "bodyText": "Is semantic of this method is well defined or is it implemention just depends on vendor?", "url": "https://github.com/trinodb/trino/pull/4318#discussion_r449571502", "createdAt": "2020-07-03T13:00:11Z", "author": {"login": "kokosing"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoDatabaseMetaData.java", "diffHunk": "@@ -1353,8 +1361,27 @@ public boolean autoCommitFailureClosesAllResultSets()\n     public ResultSet getClientInfoProperties()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1e14f89c9e2648f7caafa5d854507dd82e0e1d5", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/c1e14f89c9e2648f7caafa5d854507dd82e0e1d5", "committedDate": "2020-07-03T13:15:08Z", "message": "Extract AbstractPrestoResultSet\n\n`AbstractPrestoResultSet` implements most of the `ResultSet` interface,\nwhile leaving server interactions to the `PrestoResultSet` class."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bce1824b24a133439402cc07a82142b6eec7378c", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/bce1824b24a133439402cc07a82142b6eec7378c", "committedDate": "2020-07-03T13:15:08Z", "message": "Add in memory result set"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84028e085cd66233da5048e3aa4856644e466885", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/84028e085cd66233da5048e3aa4856644e466885", "committedDate": "2020-07-03T13:15:08Z", "message": "Introduce ClientInfoProperty enum"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c672e4c86dd5282a02a4166c95f2485f6f57c3a5", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/c672e4c86dd5282a02a4166c95f2485f6f57c3a5", "committedDate": "2020-07-03T13:15:08Z", "message": "Implement DatabaseMetaData#getClientInfoProperties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37ca0987174b8d9be252221c616a6d7c57251755", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/37ca0987174b8d9be252221c616a6d7c57251755", "committedDate": "2020-07-03T13:15:08Z", "message": "Code cleanup\n\nFix raw class usage."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "37ca0987174b8d9be252221c616a6d7c57251755", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/37ca0987174b8d9be252221c616a6d7c57251755", "committedDate": "2020-07-03T13:15:08Z", "message": "Code cleanup\n\nFix raw class usage."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4935, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}