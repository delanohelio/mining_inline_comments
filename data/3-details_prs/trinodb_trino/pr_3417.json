{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNDAyNjI4", "number": 3417, "title": "Enable testDataMappingSmokeTest for Kudu", "bodyText": "", "createdAt": "2020-04-12T21:38:33Z", "url": "https://github.com/trinodb/trino/pull/3417", "merged": true, "mergeCommit": {"oid": "ec549ac8a1192b18c3667203974f453d5fe5a9fa"}, "closed": true, "closedAt": "2020-04-20T06:57:05Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXBUnnAFqTM5MTg5NzA1Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZYSVOAFqTM5NjE0ODM0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxODk3MDUz", "url": "https://github.com/trinodb/trino/pull/3417#pullrequestreview-391897053", "createdAt": "2020-04-12T21:38:46Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQyMTozODo0NlrOGEY46g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQyMTozODo0NlrOGEY46g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI1NTI3NA==", "bodyText": "#3416", "url": "https://github.com/trinodb/trino/pull/3417#discussion_r407255274", "createdAt": "2020-04-12T21:38:46Z", "author": {"login": "findepi"}, "path": "presto-kudu/src/test/java/io/prestosql/plugin/kudu/TestKuduDistributedQueries.java", "diffHunk": "@@ -154,4 +132,22 @@ public void testWrittenStats()\n     {\n         // TODO Kudu connector supports CTAS and inserts, but the test would fail\n     }\n+\n+    @Override\n+    protected Optional<DataMappingTestSetup> filterDataMappingSmokeTestData(DataMappingTestSetup dataMappingTestSetup)\n+    {\n+        String typeName = dataMappingTestSetup.getPrestoTypeName();\n+        if (typeName.equals(\"time\")\n+                || typeName.equals(\"timestamp with time zone\")) {\n+            return Optional.of(dataMappingTestSetup.asUnsupported());\n+        }\n+\n+        if (typeName.equals(\"date\") // date gets stored as varchar\n+                || typeName.equals(\"varbinary\")) { // TODO (https://github.com/prestosql/presto/issues/3416)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 44}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxODk5NzE4", "url": "https://github.com/trinodb/trino/pull/3417#pullrequestreview-391899718", "createdAt": "2020-04-12T22:19:00Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQyMjoxOTowMVrOGEZItg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQyMjoxOTowMVrOGEZItg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI1OTMxOA==", "bodyText": "This is now covered by testDataMappingSmokeTest\nhttps://github.com/prestosql/presto/runs/581310253?check_suite_focus=true", "url": "https://github.com/trinodb/trino/pull/3417#discussion_r407259318", "createdAt": "2020-04-12T22:19:01Z", "author": {"login": "findepi"}, "path": "presto-kudu/src/test/java/io/prestosql/plugin/kudu/TestKuduDistributedQueries.java", "diffHunk": "@@ -72,29 +71,6 @@ public void testInsert()\n         // TODO Support these test once kudu connector can create tables with default partitions\n     }\n \n-    @Override\n-    public void testDataMappingSmokeTest(DataMappingTestSetup dataMappingTestSetup)\n-    {\n-        // TODO Support these test once kudu connector can create tables with default partitions\n-    }\n-\n-    @Test\n-    @Deprecated // TODO remove when testDataMappingSmokeTest is enabled for Kudu\n-    public void testKuduPredicatePushdown()\n-    {\n-        assertUpdate(\"CREATE TABLE IF NOT EXISTS test_is_null (\" +\n-                \"id INT WITH (primary_key=true), \" +\n-                \"col_nullable bigint with (nullable=true)\" +\n-                \") WITH (\" +\n-                \" partition_by_hash_columns = ARRAY['id'], \" +\n-                \" partition_by_hash_buckets = 2\" +\n-                \")\");\n-\n-        assertUpdate(\"INSERT INTO test_is_null VALUES (1, 1)\", 1);\n-        assertUpdate(\"INSERT INTO test_is_null(id) VALUES (2)\", 1);\n-        assertQuery(\"SELECT id FROM test_is_null WHERE col_nullable = 1 OR col_nullable IS NULL\", \"VALUES (1), (2)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "382a8dcbdade199cb306fcb93268e3c62fab2817", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/382a8dcbdade199cb306fcb93268e3c62fab2817", "committedDate": "2020-04-12T22:42:51Z", "message": "Fix and improve exception message\n\nPreviously message was misleading as to what was actually expected."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3128c4c74c816170d9aeb1bb22e71efcc5d996a", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/c3128c4c74c816170d9aeb1bb22e71efcc5d996a", "committedDate": "2020-04-12T22:42:53Z", "message": "Fix formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79efcf732bf4c1edc440e5f6700cbda6f40b400e", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/79efcf732bf4c1edc440e5f6700cbda6f40b400e", "committedDate": "2020-04-12T22:42:54Z", "message": "Remove unintentional override"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7214cf3c2538d9c2d0db990bff2ea2b2510d57fe", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/7214cf3c2538d9c2d0db990bff2ea2b2510d57fe", "committedDate": "2020-04-12T22:42:55Z", "message": "Add generic test for pushdown with nullable domain"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87157ac5c2ec510f841a9444664c1c88f3b731f1", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/87157ac5c2ec510f841a9444664c1c88f3b731f1", "committedDate": "2020-04-12T22:42:56Z", "message": "Throw PrestoException when unsupported type in CTAS in Hive\n\nPreviously a CREATE TABLE AS .. with an unsupported type would fail with\na non-PrestoException:\n\n    java.lang.IllegalArgumentException: Unsupported type: time\n            at io.prestosql.plugin.hive.metastore.thrift.ThriftMetastoreUtil.getSupportedColumnStatistics(ThriftMetastoreUtil.java:974)\n            at io.prestosql.plugin.hive.metastore.file.FileHiveMetastore.getSupportedColumnStatistics(FileHiveMetastore.java:320)\n            at io.prestosql.plugin.hive.metastore.cache.CachingHiveMetastore.getSupportedColumnStatistics(CachingHiveMetastore.java:302)\n            at io.prestosql.plugin.hive.HiveMetastoreClosure.getSupportedColumnStatistics(HiveMetastoreClosure.java:76)\n            at io.prestosql.plugin.hive.metastore.SemiTransactionalHiveMetastore.getSupportedColumnStatistics(SemiTransactionalHiveMetastore.java:203)\n            at io.prestosql.plugin.hive.HiveMetadata.getColumnStatisticMetadata(HiveMetadata.java:2287)\n            at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n            at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)\n            at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)\n            at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)\n            at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)\n            at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\n            at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\n            at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n            at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n            at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:566)\n            at io.prestosql.plugin.hive.HiveMetadata.getStatisticsCollectionMetadata(HiveMetadata.java:2279)\n            at io.prestosql.plugin.hive.HiveMetadata.getStatisticsCollectionMetadataForWrite(HiveMetadata.java:2261)\n            at io.prestosql.plugin.base.classloader.ClassLoaderSafeConnectorMetadata.getStatisticsCollectionMetadataForWrite(ClassLoaderSafeConnectorMetadata.java:141)\n            at io.prestosql.metadata.MetadataManager.getStatisticsCollectionMetadataForWrite(MetadataManager.java:706)\n            at io.prestosql.sql.planner.LogicalPlanner.createTableCreationPlan(LogicalPlanner.java:330)\n            at io.prestosql.sql.planner.LogicalPlanner.planStatementWithoutOutput(LogicalPlanner.java:235)\n            at io.prestosql.sql.planner.LogicalPlanner.planStatement(LogicalPlanner.java:226)\n            at io.prestosql.sql.planner.LogicalPlanner.plan(LogicalPlanner.java:192)\n            at io.prestosql.sql.planner.LogicalPlanner.plan(LogicalPlanner.java:187)\n            at io.prestosql.sql.planner.LogicalPlanner.plan(LogicalPlanner.java:182)\n            at io.prestosql.execution.SqlQueryExecution.doPlanQuery(SqlQueryExecution.java:393)\n            at io.prestosql.execution.SqlQueryExecution.planQuery(SqlQueryExecution.java:381)\n            at io.prestosql.execution.SqlQueryExecution.start(SqlQueryExecution.java:336)\n            at io.prestosql.execution.SqlQueryManager.createQuery(SqlQueryManager.java:237)\n            at io.prestosql.dispatcher.LocalDispatchQuery.lambda$startExecution$7(LocalDispatchQuery.java:132)\n            at io.prestosql.$gen.Presto_2496c42__testversion____20200412_214808_2015.run(Unknown Source)\n            ... 3 more"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef80382228a976475861e4fea4fa55ce7cd28ec7", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/ef80382228a976475861e4fea4fa55ce7cd28ec7", "committedDate": "2020-04-12T22:42:57Z", "message": "Use CTAS in testDataMappingSmokeTest\n\nSome connectors, e.g. Kudu, allow CREATE TABLE AS SELECT but do not\nallow CREATE TABLE."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "639ba2b21f569dc8f34ceda77b59ef9c37bbcda9", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/639ba2b21f569dc8f34ceda77b59ef9c37bbcda9", "committedDate": "2020-04-12T22:42:58Z", "message": "Enable testDataMappingSmokeTest for Kudu"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "639ba2b21f569dc8f34ceda77b59ef9c37bbcda9", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/639ba2b21f569dc8f34ceda77b59ef9c37bbcda9", "committedDate": "2020-04-12T22:42:58Z", "message": "Enable testDataMappingSmokeTest for Kudu"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MTQ3ODU2", "url": "https://github.com/trinodb/trino/pull/3417#pullrequestreview-396147856", "createdAt": "2020-04-20T05:28:15Z", "commit": {"oid": "639ba2b21f569dc8f34ceda77b59ef9c37bbcda9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MTQ4MzQ1", "url": "https://github.com/trinodb/trino/pull/3417#pullrequestreview-396148345", "createdAt": "2020-04-20T05:29:48Z", "commit": {"oid": "7214cf3c2538d9c2d0db990bff2ea2b2510d57fe"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNToyOTo0OVrOGIDuMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNToyOTo0OVrOGIDuMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEwMjc2OA==", "bodyText": "Add this to previous commit (the one that removes @Overwrite)", "url": "https://github.com/trinodb/trino/pull/3417#discussion_r411102768", "createdAt": "2020-04-20T05:29:49Z", "author": {"login": "kokosing"}, "path": "presto-kudu/src/test/java/io/prestosql/plugin/kudu/TestKuduDistributedQueries.java", "diffHunk": "@@ -79,6 +79,7 @@ public void testDataMappingSmokeTest(DataMappingTestSetup dataMappingTestSetup)\n     }\n \n     @Test\n+    @Deprecated // TODO remove when testDataMappingSmokeTest is enabled for Kudu", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7214cf3c2538d9c2d0db990bff2ea2b2510d57fe"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1911, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}