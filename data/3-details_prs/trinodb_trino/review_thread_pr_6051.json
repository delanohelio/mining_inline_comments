{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1NjMyNDY1", "number": 6051, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMTozNjo0OFrOE8LXpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMTozNjo0OFrOE8LXpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTM2MjkyOnYy", "diffSide": "LEFT", "path": "presto-redis/src/main/java/io/prestosql/plugin/redis/RedisPlugin.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMTozNjo0OFrOH4JpIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjoyNjowMlrOH5Y8BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY0MDI4OA==", "bodyText": "Best would be to apply same approach as in Kafka. #6046 where tableDescriptionSupplier is some form of metastore (like HMS in Hive connector). WDYT?", "url": "https://github.com/trinodb/trino/pull/6051#discussion_r528640288", "createdAt": "2020-11-23T11:36:48Z", "author": {"login": "kokosing"}, "path": "presto-redis/src/main/java/io/prestosql/plugin/redis/RedisPlugin.java", "diffHunk": "@@ -13,35 +13,21 @@\n  */\n package io.prestosql.plugin.redis;\n \n-import com.google.common.annotations.VisibleForTesting;\n import com.google.common.collect.ImmutableList;\n import io.prestosql.spi.Plugin;\n import io.prestosql.spi.connector.ConnectorFactory;\n-import io.prestosql.spi.connector.SchemaTableName;\n \n-import java.util.Map;\n import java.util.Optional;\n-import java.util.function.Supplier;\n-\n-import static java.util.Objects.requireNonNull;\n \n /**\n  * Presto plugin to use Redis as a data source.\n  */\n public class RedisPlugin\n         implements Plugin\n {\n-    private Optional<Supplier<Map<SchemaTableName, RedisTableDescription>>> tableDescriptionSupplier = Optional.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2c577bfdd7bda0049f0a963854a34649ce1c7b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY0MjM5MQ==", "bodyText": "I think this could be a nice follow up", "url": "https://github.com/trinodb/trino/pull/6051#discussion_r528642391", "createdAt": "2020-11-23T11:40:47Z", "author": {"login": "findepi"}, "path": "presto-redis/src/main/java/io/prestosql/plugin/redis/RedisPlugin.java", "diffHunk": "@@ -13,35 +13,21 @@\n  */\n package io.prestosql.plugin.redis;\n \n-import com.google.common.annotations.VisibleForTesting;\n import com.google.common.collect.ImmutableList;\n import io.prestosql.spi.Plugin;\n import io.prestosql.spi.connector.ConnectorFactory;\n-import io.prestosql.spi.connector.SchemaTableName;\n \n-import java.util.Map;\n import java.util.Optional;\n-import java.util.function.Supplier;\n-\n-import static java.util.Objects.requireNonNull;\n \n /**\n  * Presto plugin to use Redis as a data source.\n  */\n public class RedisPlugin\n         implements Plugin\n {\n-    private Optional<Supplier<Map<SchemaTableName, RedisTableDescription>>> tableDescriptionSupplier = Optional.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY0MDI4OA=="}, "originalCommit": {"oid": "ff2c577bfdd7bda0049f0a963854a34649ce1c7b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ4MzY4NA==", "bodyText": "Please capture this as issue so some one could follow up.", "url": "https://github.com/trinodb/trino/pull/6051#discussion_r529483684", "createdAt": "2020-11-24T11:44:55Z", "author": {"login": "kokosing"}, "path": "presto-redis/src/main/java/io/prestosql/plugin/redis/RedisPlugin.java", "diffHunk": "@@ -13,35 +13,21 @@\n  */\n package io.prestosql.plugin.redis;\n \n-import com.google.common.annotations.VisibleForTesting;\n import com.google.common.collect.ImmutableList;\n import io.prestosql.spi.Plugin;\n import io.prestosql.spi.connector.ConnectorFactory;\n-import io.prestosql.spi.connector.SchemaTableName;\n \n-import java.util.Map;\n import java.util.Optional;\n-import java.util.function.Supplier;\n-\n-import static java.util.Objects.requireNonNull;\n \n /**\n  * Presto plugin to use Redis as a data source.\n  */\n public class RedisPlugin\n         implements Plugin\n {\n-    private Optional<Supplier<Map<SchemaTableName, RedisTableDescription>>> tableDescriptionSupplier = Optional.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY0MDI4OA=="}, "originalCommit": {"oid": "ff2c577bfdd7bda0049f0a963854a34649ce1c7b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkzOTQ2MQ==", "bodyText": "can you please do it? you'll better describe this. and i actually do not want this change to happen :)", "url": "https://github.com/trinodb/trino/pull/6051#discussion_r529939461", "createdAt": "2020-11-24T22:26:02Z", "author": {"login": "findepi"}, "path": "presto-redis/src/main/java/io/prestosql/plugin/redis/RedisPlugin.java", "diffHunk": "@@ -13,35 +13,21 @@\n  */\n package io.prestosql.plugin.redis;\n \n-import com.google.common.annotations.VisibleForTesting;\n import com.google.common.collect.ImmutableList;\n import io.prestosql.spi.Plugin;\n import io.prestosql.spi.connector.ConnectorFactory;\n-import io.prestosql.spi.connector.SchemaTableName;\n \n-import java.util.Map;\n import java.util.Optional;\n-import java.util.function.Supplier;\n-\n-import static java.util.Objects.requireNonNull;\n \n /**\n  * Presto plugin to use Redis as a data source.\n  */\n public class RedisPlugin\n         implements Plugin\n {\n-    private Optional<Supplier<Map<SchemaTableName, RedisTableDescription>>> tableDescriptionSupplier = Optional.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY0MDI4OA=="}, "originalCommit": {"oid": "ff2c577bfdd7bda0049f0a963854a34649ce1c7b"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4604, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}