{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NzQzMTg0", "number": 4355, "title": "Fix time resolution in comparison", "bodyText": "We've been comparing seconds with milliseconds resolution timestamps", "createdAt": "2020-07-06T12:29:08Z", "url": "https://github.com/trinodb/trino/pull/4355", "merged": true, "mergeCommit": {"oid": "040db5f12a371b8ed40fb3a7436f3a3ba6914ed1"}, "closed": true, "closedAt": "2020-07-06T13:57:38Z", "author": {"login": "wendigo"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcyQeU1AFqTQ0MzAzMzU4OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyRldkAFqTQ0MzA5NDM0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMDMzNTg5", "url": "https://github.com/trinodb/trino/pull/4355#pullrequestreview-443033589", "createdAt": "2020-07-06T12:33:53Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMjozMzo1NFrOGtVW6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMjozMzo1NFrOGtVW6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE4OTAzMg==", "bodyText": "Can you pass Instant to getTableCompactions and do the conversion to low-level unit internally. It is implementation detail that in SQL query to get transactions we need milliseconds.", "url": "https://github.com/trinodb/trino/pull/4355#discussion_r450189032", "createdAt": "2020-07-06T12:33:54Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "diffHunk": "@@ -245,7 +245,7 @@ private static void compactTableAndWait(CompactionMode compactMode, String table\n     private static void tryCompactingTable(CompactionMode compactMode, String tableName, String partitionString, Duration timeout)\n             throws TimeoutException\n     {\n-        long beforeCompactionStart = Instant.now().getEpochSecond();\n+        long beforeCompactionStart = Instant.now().getEpochSecond() * 1000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMDM0ODMz", "url": "https://github.com/trinodb/trino/pull/4355#pullrequestreview-443034833", "createdAt": "2020-07-06T12:35:49Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afd8f8122e7ee8b207fb3b70b84cf6097671c3cc", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/afd8f8122e7ee8b207fb3b70b84cf6097671c3cc", "committedDate": "2020-07-06T12:38:17Z", "message": "Fix time resolution in comparison"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "afd8f8122e7ee8b207fb3b70b84cf6097671c3cc", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/afd8f8122e7ee8b207fb3b70b84cf6097671c3cc", "committedDate": "2020-07-06T12:38:17Z", "message": "Fix time resolution in comparison"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMDk0MzQ2", "url": "https://github.com/trinodb/trino/pull/4355#pullrequestreview-443094346", "createdAt": "2020-07-06T13:51:36Z", "commit": {"oid": "afd8f8122e7ee8b207fb3b70b84cf6097671c3cc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4964, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}