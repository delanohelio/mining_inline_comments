{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwNDU3NDQy", "number": 5489, "title": "Express Kerberos dependency explicitly", "bodyText": "Express Kerberos dependency explicitly\nKerberos always expects Hadoop to be provided first. Expressing this a\nregular dependency makes it clear.", "createdAt": "2020-10-09T09:14:40Z", "url": "https://github.com/trinodb/trino/pull/5489", "merged": true, "mergeCommit": {"oid": "fb29ab5f1a0b690d1ff43d63bc0304c8b0bb5aa1"}, "closed": true, "closedAt": "2020-11-10T13:30:48Z", "author": {"login": "kokosing"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQyvXogFqTUwNTUwODk1NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbJZ7BgBqjM5Nzg5MTUyNzU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NTA4OTU1", "url": "https://github.com/trinodb/trino/pull/5489#pullrequestreview-505508955", "createdAt": "2020-10-09T09:27:00Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwOToyNzowMFrOHfCM4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwOToyNzowMFrOHfCM4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMwMzk2OA==", "bodyText": "Kerberos -> KerberizedHadoop\n?", "url": "https://github.com/trinodb/trino/pull/5489#discussion_r502303968", "createdAt": "2020-10-09T09:27:00Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/common/Kerberos.java", "diffHunk": "@@ -36,22 +36,26 @@\n \n     private final String hadoopBaseImage;\n     private final String hadoopImagesVersion;\n+    private final Hadoop hadoop;\n \n     @Inject\n     public Kerberos(\n             DockerFiles dockerFiles,\n             PortBinder portBinder,\n+            Hadoop hadoop,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NTQ3OTc2", "url": "https://github.com/trinodb/trino/pull/5489#pullrequestreview-505547976", "createdAt": "2020-10-09T10:23:33Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMDoyMzozM1rOHfEAjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMDoyMzozM1rOHfEAjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMzMzU4MA==", "bodyText": "Let's start from the beginning. This is depicting the dependency between these 2 as they are right now. We could model them in a more granular manner, but right not we should start from making dependencies like this visible and naming the abstractions properly (like KerberizedHadoop), so that they start to represent what they actually do.", "url": "https://github.com/trinodb/trino/pull/5489#discussion_r502333580", "createdAt": "2020-10-09T10:23:33Z", "author": {"login": "s2lomon"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/common/Kerberos.java", "diffHunk": "@@ -36,22 +36,26 @@\n \n     private final String hadoopBaseImage;\n     private final String hadoopImagesVersion;\n+    private final Hadoop hadoop;\n \n     @Inject\n     public Kerberos(\n             DockerFiles dockerFiles,\n             PortBinder portBinder,\n+            Hadoop hadoop,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMwMzk2OA=="}, "originalCommit": null, "originalPosition": 10}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MDEzNjIx", "url": "https://github.com/trinodb/trino/pull/5489#pullrequestreview-525013621", "createdAt": "2020-11-06T10:06:11Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDowNjoxMVrOHunvWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDowNjoxMVrOHunvWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0NzY0MQ==", "bodyText": "I don't like this. Nothing prevents the extenders to be parametrized. We pass instances everywhere. And here we are filtering based on class.", "url": "https://github.com/trinodb/trino/pull/5489#discussion_r518647641", "createdAt": "2020-11-06T10:06:11Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentProvider.java", "diffHunk": "@@ -45,14 +46,19 @@ protected EnvironmentProvider(List<EnvironmentExtender> bases)\n                 .add(environmentConfig)\n                 .build();\n \n-        String extendersNames = extenders.stream()\n-                .map(Object::getClass)\n-                .map(Class::getSimpleName)\n-                .collect(joining(\", \"));\n-\n-        log.info(\"Building environment %s with extenders: %s\", builder.getEnvironmentName(), extendersNames);\n-\n-        extenders.forEach(extender -> extender.extendEnvironment(builder));\n+        Set<Class<? extends EnvironmentExtender>> seen = new HashSet<>();\n+        extenders.forEach(extender -> extend(extender, builder, seen));\n         return builder;\n     }\n+\n+    private void extend(EnvironmentExtender extender, Environment.Builder builder, Set<Class<? extends EnvironmentExtender>> seen)\n+    {\n+        extender.getDependencies()\n+                .forEach(dependencyExtender -> extend(dependencyExtender, builder, seen));\n+        Class<? extends EnvironmentExtender> extenderClass = extender.getClass();\n+        if (seen.add(extenderClass)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MDE2MTk1", "url": "https://github.com/trinodb/trino/pull/5489#pullrequestreview-525016195", "createdAt": "2020-11-06T10:09:30Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDowOTozMFrOHun2Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDowOTozMFrOHun2Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0OTQzOA==", "bodyText": "I am not convinced we need this class method at all.\nWhy not just call hadoop.extend() in extendEnvironment.\n(possibly it was discussed alrady)...", "url": "https://github.com/trinodb/trino/pull/5489#discussion_r518649438", "createdAt": "2020-11-06T10:09:30Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/common/HadoopKerberos.java", "diffHunk": "@@ -69,4 +76,10 @@ public void extendEnvironment(Environment.Builder builder)\n             container.withCopyFileToContainer(forHostPath(configDir.getPath(\"tempto-configuration.yaml\")), CONTAINER_TEMPTO_PROFILE_CONFIG);\n         });\n     }\n+\n+    @Override\n+    public List<EnvironmentExtender> getDependencies()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 45}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MDk4MDEw", "url": "https://github.com/trinodb/trino/pull/5489#pullrequestreview-526098010", "createdAt": "2020-11-09T10:07:16Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMDowNzoxNlrOHvnVlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMDowNzoxNlrOHvnVlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY4OTYyMg==", "bodyText": "According to\nhttps://github.com/prestosql/presto/blob/0816357bb0a6fd6681f8942b94fbc79d9f2c21a8/presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentModule.java#L52-L60\nEnvironmentExtenders are not bound as singletons. So this probably would not work. Can we somehow ensure (via test for example) proper validation for that?", "url": "https://github.com/trinodb/trino/pull/5489#discussion_r519689622", "createdAt": "2020-11-09T10:07:16Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentProvider.java", "diffHunk": "@@ -45,14 +47,18 @@ protected EnvironmentProvider(List<EnvironmentExtender> bases)\n                 .add(environmentConfig)\n                 .build();\n \n-        String extendersNames = extenders.stream()\n-                .map(Object::getClass)\n-                .map(Class::getSimpleName)\n-                .collect(joining(\", \"));\n-\n-        log.info(\"Building environment %s with extenders: %s\", builder.getEnvironmentName(), extendersNames);\n-\n-        extenders.forEach(extender -> extender.extendEnvironment(builder));\n+        Set<EnvironmentExtender> seen = newSetFromMap(new IdentityHashMap<>());\n+        extenders.forEach(extender -> extend(extender, builder, seen));\n         return builder;\n     }\n+\n+    private void extend(EnvironmentExtender extender, Environment.Builder builder, Set<EnvironmentExtender> seen)\n+    {\n+        extender.getDependencies()\n+                .forEach(dependencyExtender -> extend(dependencyExtender, builder, seen));\n+        if (seen.add(extender)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MDM3MTg0", "url": "https://github.com/trinodb/trino/pull/5489#pullrequestreview-527037184", "createdAt": "2020-11-10T09:59:44Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTE0MTk5", "url": "https://github.com/trinodb/trino/pull/5489#pullrequestreview-527114199", "createdAt": "2020-11-10T11:36:18Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMTozNjoxOVrOHwYjRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMTozNjoxOVrOHwYjRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ5NTk0Mw==", "bodyText": "The sense of previous code was to log message lazy (when the environment is built, not when compose is called)", "url": "https://github.com/trinodb/trino/pull/5489#discussion_r520495943", "createdAt": "2020-11-10T11:36:19Z", "author": {"login": "wendigo"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentProvider.java", "diffHunk": "@@ -46,20 +45,14 @@ protected EnvironmentProvider(List<EnvironmentExtender> bases)\n                 .add(environmentConfig)\n                 .build();\n \n-        compose(extenders).extendEnvironment(builder);\n-        return builder;\n-    }\n-\n-    static EnvironmentExtender compose(Iterable<EnvironmentExtender> extenders)\n-    {\n-        String extendersNames = StreamSupport.stream(extenders.spliterator(), false)\n+        String extendersNames = extenders.stream()\n                 .map(Object::getClass)\n                 .map(Class::getSimpleName)\n                 .collect(joining(\", \"));\n \n-        return builder -> {\n-            log.info(\"Building environment %s with extenders: %s\", builder.getEnvironmentName(), extendersNames);\n-            extenders.forEach(extender -> extender.extendEnvironment(builder));\n-        };\n+        log.info(\"Building environment %s with extenders: %s\", builder.getEnvironmentName(), extendersNames);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTE3ODQ0", "url": "https://github.com/trinodb/trino/pull/5489#pullrequestreview-527117844", "createdAt": "2020-11-10T11:41:20Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMTo0MToyMVrOHwYuFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMTo0MToyMVrOHwYuFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ5ODcwOQ==", "bodyText": "Can we document in which order extenders are applied to Environment.Builder ?\ndependencies, this or this, dependencies ?", "url": "https://github.com/trinodb/trino/pull/5489#discussion_r520498709", "createdAt": "2020-11-10T11:41:21Z", "author": {"login": "wendigo"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/common/EnvironmentExtender.java", "diffHunk": "@@ -13,9 +13,17 @@\n  */\n package io.prestosql.tests.product.launcher.env.common;\n \n+import com.google.common.collect.ImmutableList;\n import io.prestosql.tests.product.launcher.env.Environment;\n \n+import java.util.List;\n+\n public interface EnvironmentExtender\n {\n     void extendEnvironment(Environment.Builder builder);\n+\n+    default List<EnvironmentExtender> getDependencies()\n+    {\n+        return ImmutableList.of();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55c2698924020f6752badde2492154082336af2c", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/55c2698924020f6752badde2492154082336af2c", "committedDate": "2020-11-10T13:30:25Z", "message": "Rename Kerberos to HadoopKerberos\n\nAlso rename KerberosKms to HadoopKerberosKms."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e8c266a2b598e2405e17e1df2e6136cfe34fc4e", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/7e8c266a2b598e2405e17e1df2e6136cfe34fc4e", "committedDate": "2020-11-10T13:30:25Z", "message": "Move tempto configuration files to environment directories"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "490ccfe3a30ed40e21153edfa4032d502affb129", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/490ccfe3a30ed40e21153edfa4032d502affb129", "committedDate": "2020-11-10T13:30:25Z", "message": "Inline compose method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f225cb58b87727083675fc9419854f9a7acf8ea", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/9f225cb58b87727083675fc9419854f9a7acf8ea", "committedDate": "2020-11-10T13:30:25Z", "message": "Bind presto-product-tests-launcher beans in SINGLETON scope"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c383cae9a797aa51f8ab4ba3835e858d5561b68", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/9c383cae9a797aa51f8ab4ba3835e858d5561b68", "committedDate": "2020-11-10T13:30:25Z", "message": "Allow EnvironmentExtender to define its dependencies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb29ab5f1a0b690d1ff43d63bc0304c8b0bb5aa1", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/fb29ab5f1a0b690d1ff43d63bc0304c8b0bb5aa1", "committedDate": "2020-11-10T13:30:25Z", "message": "Express Kerberos dependency explicitly"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "fb29ab5f1a0b690d1ff43d63bc0304c8b0bb5aa1", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/fb29ab5f1a0b690d1ff43d63bc0304c8b0bb5aa1", "committedDate": "2020-11-10T13:30:25Z", "message": "Express Kerberos dependency explicitly"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3357, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}