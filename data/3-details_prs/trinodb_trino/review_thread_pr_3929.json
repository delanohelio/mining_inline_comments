{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4Mzc0MTgw", "number": 3929, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjowMTowMlrOEC7YGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxOTowNTowNFrOEDER-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTA1NDM1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/execution/TestParameterExtractor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjowMTowMlrOGfrqzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjowMTowMlrOGfrqzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg3NDUxMQ==", "bodyText": "Can you explicitly specify expected number of parameters. 0 for the first test and 2 for the second?\nThe rename this method to assertParameterCount", "url": "https://github.com/trinodb/trino/pull/3929#discussion_r435874511", "createdAt": "2020-06-05T12:01:02Z", "author": {"login": "losipiuk"}, "path": "presto-main/src/test/java/io/prestosql/execution/TestParameterExtractor.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.execution;\n+\n+import io.prestosql.sql.parser.ParsingOptions;\n+import io.prestosql.sql.parser.SqlParser;\n+import io.prestosql.sql.tree.Parameter;\n+import io.prestosql.sql.tree.Statement;\n+import org.testng.annotations.Test;\n+\n+import java.util.List;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestParameterExtractor\n+{\n+    private final SqlParser sqlParser = new SqlParser();\n+\n+    @Test\n+    public void testNoParameter()\n+    {\n+        Statement statement = sqlParser.createStatement(\"SELECT c1, c2 FROM test_table WHERE c1 = 1 AND c2 > 2\", new ParsingOptions());\n+        assertEqualParameterCount(statement);\n+    }\n+\n+    @Test\n+    public void testParameterCount()\n+    {\n+        Statement statement = sqlParser.createStatement(\"SELECT c1, c2 FROM test_table WHERE c1 = ? AND c2 > ?\", new ParsingOptions());\n+        assertEqualParameterCount(statement);\n+    }\n+\n+    private void assertEqualParameterCount(Statement statement)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjUxMTczOnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/execution/TestParameterExtractor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxOTowNDozM1rOGf6H7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxOTowNDozM1rOGf6H7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjExMTM0Mw==", "bodyText": "It's generally better to be explicit about what's being tested. Readability of this test could be improved by doing this:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertParameterCount(statement, 0);\n          \n          \n            \n                    assertThat(ParameterExtractor.getParameters(statement)).isEmpty();\n          \n          \n            \n                    assertThat(ParameterExtractor.getParameterCount(statement)).isEqualTo(0);", "url": "https://github.com/trinodb/trino/pull/3929#discussion_r436111343", "createdAt": "2020-06-05T19:04:33Z", "author": {"login": "martint"}, "path": "presto-main/src/test/java/io/prestosql/execution/TestParameterExtractor.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.execution;\n+\n+import io.prestosql.sql.parser.ParsingOptions;\n+import io.prestosql.sql.parser.SqlParser;\n+import io.prestosql.sql.tree.Parameter;\n+import io.prestosql.sql.tree.Statement;\n+import org.testng.annotations.Test;\n+\n+import java.util.List;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestParameterExtractor\n+{\n+    private final SqlParser sqlParser = new SqlParser();\n+\n+    @Test\n+    public void testNoParameter()\n+    {\n+        Statement statement = sqlParser.createStatement(\"SELECT c1, c2 FROM test_table WHERE c1 = 1 AND c2 > 2\", new ParsingOptions());\n+        assertParameterCount(statement, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjUxMzIwOnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/execution/TestParameterExtractor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxOTowNTowNFrOGf6I5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxOTowNTowNFrOGf6I5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjExMTU4OA==", "bodyText": "Similarly, for this test:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertParameterCount(statement, 2);\n          \n          \n            \n                    assertThat(ParameterExtractor.getParameters(statement))\n          \n          \n            \n                            .containsExactly(\n          \n          \n            \n                                    new Parameter(new NodeLocation(1, 41), 0),\n          \n          \n            \n                                    new Parameter(new NodeLocation(1, 52), 1));\n          \n          \n            \n            \n          \n          \n            \n                            assertThat(ParameterExtractor.getParameterCount(statement)).isEqualTo(2);", "url": "https://github.com/trinodb/trino/pull/3929#discussion_r436111588", "createdAt": "2020-06-05T19:05:04Z", "author": {"login": "martint"}, "path": "presto-main/src/test/java/io/prestosql/execution/TestParameterExtractor.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.execution;\n+\n+import io.prestosql.sql.parser.ParsingOptions;\n+import io.prestosql.sql.parser.SqlParser;\n+import io.prestosql.sql.tree.Parameter;\n+import io.prestosql.sql.tree.Statement;\n+import org.testng.annotations.Test;\n+\n+import java.util.List;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestParameterExtractor\n+{\n+    private final SqlParser sqlParser = new SqlParser();\n+\n+    @Test\n+    public void testNoParameter()\n+    {\n+        Statement statement = sqlParser.createStatement(\"SELECT c1, c2 FROM test_table WHERE c1 = 1 AND c2 > 2\", new ParsingOptions());\n+        assertParameterCount(statement, 0);\n+    }\n+\n+    @Test\n+    public void testParameterCount()\n+    {\n+        Statement statement = sqlParser.createStatement(\"SELECT c1, c2 FROM test_table WHERE c1 = ? AND c2 > ?\", new ParsingOptions());\n+        assertParameterCount(statement, 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4231, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}