{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NjI4ODk4", "number": 4579, "title": "Add Iceberg smoke tests for partitioning transforms", "bodyText": "This commit adds Iceberg smoke tests for all partitioning\ntransforms: hour(), day(), month(), year(), bucket() and truncate().\nIt also fixes a bug in PartitionTable.\nOrc doesn't yet have min/max statistics for Timestamp columns.\nThey should be added.", "createdAt": "2020-07-25T15:29:24Z", "url": "https://github.com/trinodb/trino/pull/4579", "merged": true, "mergeCommit": {"oid": "6f18f746415c5f7496bfdafdfde267cba7ca2e14"}, "closed": true, "closedAt": "2020-08-07T21:31:51Z", "author": {"login": "djsstarburst"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7s7TsgFqTQ2MTEyMzU1Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8rWPegFqTQ2MzY1MTMzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMTIzNTU3", "url": "https://github.com/trinodb/trino/pull/4579#pullrequestreview-461123557", "createdAt": "2020-08-04T19:49:06Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOTo0OTowN1rOG7vHyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMDowNTozNlrOG7vorw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5MTIwOQ==", "bodyText": "I think we could inline this method\ntestWithAllFileFormats(this:: testHourTransformForFormat);\ntestWithAllFileFormats(this:: testDayTransformForFormat);\n...", "url": "https://github.com/trinodb/trino/pull/4579#discussion_r465291209", "createdAt": "2020-08-04T19:49:07Z", "author": {"login": "electrum"}, "path": "presto-iceberg/src/test/java/io/prestosql/plugin/iceberg/TestIcebergSmoke.java", "diffHunk": "@@ -593,6 +593,210 @@ private void testPredicating(Session session, FileFormat fileFormat)\n         dropTable(session, \"test_predicating_on_real\");\n     }\n \n+    @Test\n+    public void testDateTransforms()\n+    {\n+        testWithAllFileFormats(this::testDateTransformsForFormat);\n+    }\n+\n+    private void testDateTransformsForFormat(Session session, FileFormat format)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5MTcxMQ==", "bodyText": "Maybe write this as\nString insertSql = \"INSERT INTO ... \" +\n        \"...\";\nassertUpdate(session, insertSql, 7);\nThen we don't have the trailing 7 at the end", "url": "https://github.com/trinodb/trino/pull/4579#discussion_r465291711", "createdAt": "2020-08-04T19:50:03Z", "author": {"login": "electrum"}, "path": "presto-iceberg/src/test/java/io/prestosql/plugin/iceberg/TestIcebergSmoke.java", "diffHunk": "@@ -593,6 +593,210 @@ private void testPredicating(Session session, FileFormat fileFormat)\n         dropTable(session, \"test_predicating_on_real\");\n     }\n \n+    @Test\n+    public void testDateTransforms()\n+    {\n+        testWithAllFileFormats(this::testDateTransformsForFormat);\n+    }\n+\n+    private void testDateTransformsForFormat(Session session, FileFormat format)\n+    {\n+        testHourTransformForFormat(session, format);\n+        testDayTransformForFormat(session, format);\n+        testMonthTransformForFormat(session, format);\n+        testYearTransformForFormat(session, format);\n+    }\n+\n+    private void testHourTransformForFormat(Session session, FileFormat format)\n+    {\n+        String select = \"SELECT d_hour, row_count, d.min AS d_min, d.max AS d_max, b.min AS b_min, b.max AS b_max FROM \\\"test_hour_transform$partitions\\\"\";\n+\n+        assertUpdate(session, format(\"CREATE TABLE test_hour_transform (d TIMESTAMP, b BIGINT)\" +\n+                \" WITH (format = '%s', partitioning = ARRAY['hour(d)'])\", format.name()));\n+        assertUpdate(session, \"INSERT INTO test_hour_transform VALUES\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5MjQ2Ng==", "bodyText": "This is a bit hard to read, wrap the lines\nString expected = (format == FileFormat.PARQUET) ?\n        \"VALUES(394460, 3, TIMESTAMP '2015-01-01 10:01:23', TIMESTAMP '2015-01-01 10:55:00', 1, 3)\" : \n        \"VALUES(394460, 3, NULL, NULL, 1, 3)\";", "url": "https://github.com/trinodb/trino/pull/4579#discussion_r465292466", "createdAt": "2020-08-04T19:51:32Z", "author": {"login": "electrum"}, "path": "presto-iceberg/src/test/java/io/prestosql/plugin/iceberg/TestIcebergSmoke.java", "diffHunk": "@@ -593,6 +593,210 @@ private void testPredicating(Session session, FileFormat fileFormat)\n         dropTable(session, \"test_predicating_on_real\");\n     }\n \n+    @Test\n+    public void testDateTransforms()\n+    {\n+        testWithAllFileFormats(this::testDateTransformsForFormat);\n+    }\n+\n+    private void testDateTransformsForFormat(Session session, FileFormat format)\n+    {\n+        testHourTransformForFormat(session, format);\n+        testDayTransformForFormat(session, format);\n+        testMonthTransformForFormat(session, format);\n+        testYearTransformForFormat(session, format);\n+    }\n+\n+    private void testHourTransformForFormat(Session session, FileFormat format)\n+    {\n+        String select = \"SELECT d_hour, row_count, d.min AS d_min, d.max AS d_max, b.min AS b_min, b.max AS b_max FROM \\\"test_hour_transform$partitions\\\"\";\n+\n+        assertUpdate(session, format(\"CREATE TABLE test_hour_transform (d TIMESTAMP, b BIGINT)\" +\n+                \" WITH (format = '%s', partitioning = ARRAY['hour(d)'])\", format.name()));\n+        assertUpdate(session, \"INSERT INTO test_hour_transform VALUES\" +\n+                        \"(TIMESTAMP '2015-01-01 10:01:23', 1),\" +\n+                        \"(TIMESTAMP '2015-01-01 10:10:02', 2),\" +\n+                        \"(TIMESTAMP '2015-01-01 10:55:00', 3),\" +\n+                        \"(TIMESTAMP '2015-05-15 12:05:01', 4),\" +\n+                        \"(TIMESTAMP '2015-05-15 12:21:02', 5),\" +\n+                        \"(TIMESTAMP '2015-02-21 13:11:11', 6),\" +\n+                        \"(TIMESTAMP '2015-02-21 13:12:12', 7)\",\n+                7);\n+\n+        assertQuery(session, \"SELECT COUNT(*) FROM \\\"test_hour_transform$partitions\\\"\", \"SELECT 3\");\n+\n+        assertQuery(session, \"SELECT COUNT(*) FROM test_hour_transform WHERE hour(d) = 10\", \"SELECT 3\");\n+        // 394460 = (2015 - 1970) * 365 * 24 + leap day hours + 10\n+        // Parquet has min/max for timestamps but Orc does not.\n+        String expected = format == FileFormat.PARQUET ? \"VALUES(394460, 3, TIMESTAMP '2015-01-01 10:01:23', TIMESTAMP '2015-01-01 10:55:00', 1, 3)\" : \"VALUES(394460, 3, NULL, NULL, 1, 3)\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5Njg5NQ==", "bodyText": "We should test day/month/year transform for timestamp as well. It's fine to do this as a follow up.", "url": "https://github.com/trinodb/trino/pull/4579#discussion_r465296895", "createdAt": "2020-08-04T20:00:13Z", "author": {"login": "electrum"}, "path": "presto-iceberg/src/test/java/io/prestosql/plugin/iceberg/TestIcebergSmoke.java", "diffHunk": "@@ -593,6 +593,210 @@ private void testPredicating(Session session, FileFormat fileFormat)\n         dropTable(session, \"test_predicating_on_real\");\n     }\n \n+    @Test\n+    public void testDateTransforms()\n+    {\n+        testWithAllFileFormats(this::testDateTransformsForFormat);\n+    }\n+\n+    private void testDateTransformsForFormat(Session session, FileFormat format)\n+    {\n+        testHourTransformForFormat(session, format);\n+        testDayTransformForFormat(session, format);\n+        testMonthTransformForFormat(session, format);\n+        testYearTransformForFormat(session, format);\n+    }\n+\n+    private void testHourTransformForFormat(Session session, FileFormat format)\n+    {\n+        String select = \"SELECT d_hour, row_count, d.min AS d_min, d.max AS d_max, b.min AS b_min, b.max AS b_max FROM \\\"test_hour_transform$partitions\\\"\";\n+\n+        assertUpdate(session, format(\"CREATE TABLE test_hour_transform (d TIMESTAMP, b BIGINT)\" +\n+                \" WITH (format = '%s', partitioning = ARRAY['hour(d)'])\", format.name()));\n+        assertUpdate(session, \"INSERT INTO test_hour_transform VALUES\" +\n+                        \"(TIMESTAMP '2015-01-01 10:01:23', 1),\" +\n+                        \"(TIMESTAMP '2015-01-01 10:10:02', 2),\" +\n+                        \"(TIMESTAMP '2015-01-01 10:55:00', 3),\" +\n+                        \"(TIMESTAMP '2015-05-15 12:05:01', 4),\" +\n+                        \"(TIMESTAMP '2015-05-15 12:21:02', 5),\" +\n+                        \"(TIMESTAMP '2015-02-21 13:11:11', 6),\" +\n+                        \"(TIMESTAMP '2015-02-21 13:12:12', 7)\",\n+                7);\n+\n+        assertQuery(session, \"SELECT COUNT(*) FROM \\\"test_hour_transform$partitions\\\"\", \"SELECT 3\");\n+\n+        assertQuery(session, \"SELECT COUNT(*) FROM test_hour_transform WHERE hour(d) = 10\", \"SELECT 3\");\n+        // 394460 = (2015 - 1970) * 365 * 24 + leap day hours + 10\n+        // Parquet has min/max for timestamps but Orc does not.\n+        String expected = format == FileFormat.PARQUET ? \"VALUES(394460, 3, TIMESTAMP '2015-01-01 10:01:23', TIMESTAMP '2015-01-01 10:55:00', 1, 3)\" : \"VALUES(394460, 3, NULL, NULL, 1, 3)\";\n+        assertQuery(session, select + \" WHERE d_hour = 394460\", expected);\n+\n+        assertQuery(session, \"SELECT COUNT(*) FROM test_hour_transform WHERE hour(d) = 12\", \"SELECT 2\");\n+        expected = format == FileFormat.PARQUET ? \"VALUES(397679, 2, TIMESTAMP '2015-05-15 12:05:01', TIMESTAMP '2015-05-15 12:21:02', 4, 5)\" : \"VALUES(397679, 2, NULL, NULL, 4, 5)\";\n+        assertQuery(session, select + \" WHERE d_hour = 397679\", expected);\n+\n+        assertQuery(session, \"SELECT COUNT(*) FROM test_hour_transform WHERE hour(d) = 13\", \"SELECT 2\");\n+        expected = format == FileFormat.PARQUET ? \"VALUES(395687, 2, TIMESTAMP '2015-02-21 13:11:11', TIMESTAMP '2015-02-21 13:12:12', 6, 7)\" : \"VALUES(395687, 2, NULL, NULL, 6, 7)\";\n+        assertQuery(session, select + \" WHERE d_hour = 395687\", expected);\n+\n+        dropTable(session, \"test_hour_transform\");\n+    }\n+\n+    private void testDayTransformForFormat(Session session, FileFormat format)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5NzU4OA==", "bodyText": "Nit: all capital ORC", "url": "https://github.com/trinodb/trino/pull/4579#discussion_r465297588", "createdAt": "2020-08-04T20:01:30Z", "author": {"login": "electrum"}, "path": "presto-iceberg/src/test/java/io/prestosql/plugin/iceberg/TestIcebergSmoke.java", "diffHunk": "@@ -593,6 +593,210 @@ private void testPredicating(Session session, FileFormat fileFormat)\n         dropTable(session, \"test_predicating_on_real\");\n     }\n \n+    @Test\n+    public void testDateTransforms()\n+    {\n+        testWithAllFileFormats(this::testDateTransformsForFormat);\n+    }\n+\n+    private void testDateTransformsForFormat(Session session, FileFormat format)\n+    {\n+        testHourTransformForFormat(session, format);\n+        testDayTransformForFormat(session, format);\n+        testMonthTransformForFormat(session, format);\n+        testYearTransformForFormat(session, format);\n+    }\n+\n+    private void testHourTransformForFormat(Session session, FileFormat format)\n+    {\n+        String select = \"SELECT d_hour, row_count, d.min AS d_min, d.max AS d_max, b.min AS b_min, b.max AS b_max FROM \\\"test_hour_transform$partitions\\\"\";\n+\n+        assertUpdate(session, format(\"CREATE TABLE test_hour_transform (d TIMESTAMP, b BIGINT)\" +\n+                \" WITH (format = '%s', partitioning = ARRAY['hour(d)'])\", format.name()));\n+        assertUpdate(session, \"INSERT INTO test_hour_transform VALUES\" +\n+                        \"(TIMESTAMP '2015-01-01 10:01:23', 1),\" +\n+                        \"(TIMESTAMP '2015-01-01 10:10:02', 2),\" +\n+                        \"(TIMESTAMP '2015-01-01 10:55:00', 3),\" +\n+                        \"(TIMESTAMP '2015-05-15 12:05:01', 4),\" +\n+                        \"(TIMESTAMP '2015-05-15 12:21:02', 5),\" +\n+                        \"(TIMESTAMP '2015-02-21 13:11:11', 6),\" +\n+                        \"(TIMESTAMP '2015-02-21 13:12:12', 7)\",\n+                7);\n+\n+        assertQuery(session, \"SELECT COUNT(*) FROM \\\"test_hour_transform$partitions\\\"\", \"SELECT 3\");\n+\n+        assertQuery(session, \"SELECT COUNT(*) FROM test_hour_transform WHERE hour(d) = 10\", \"SELECT 3\");\n+        // 394460 = (2015 - 1970) * 365 * 24 + leap day hours + 10\n+        // Parquet has min/max for timestamps but Orc does not.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5ODM5MQ==", "bodyText": "What time zone are the tests using? Can you check if they're using legacy timestamps? If it's not UTC time zone and legacy timestamps, I'm surprised this works.", "url": "https://github.com/trinodb/trino/pull/4579#discussion_r465298391", "createdAt": "2020-08-04T20:03:06Z", "author": {"login": "electrum"}, "path": "presto-iceberg/src/test/java/io/prestosql/plugin/iceberg/TestIcebergSmoke.java", "diffHunk": "@@ -593,6 +593,210 @@ private void testPredicating(Session session, FileFormat fileFormat)\n         dropTable(session, \"test_predicating_on_real\");\n     }\n \n+    @Test\n+    public void testDateTransforms()\n+    {\n+        testWithAllFileFormats(this::testDateTransformsForFormat);\n+    }\n+\n+    private void testDateTransformsForFormat(Session session, FileFormat format)\n+    {\n+        testHourTransformForFormat(session, format);\n+        testDayTransformForFormat(session, format);\n+        testMonthTransformForFormat(session, format);\n+        testYearTransformForFormat(session, format);\n+    }\n+\n+    private void testHourTransformForFormat(Session session, FileFormat format)\n+    {\n+        String select = \"SELECT d_hour, row_count, d.min AS d_min, d.max AS d_max, b.min AS b_min, b.max AS b_max FROM \\\"test_hour_transform$partitions\\\"\";\n+\n+        assertUpdate(session, format(\"CREATE TABLE test_hour_transform (d TIMESTAMP, b BIGINT)\" +\n+                \" WITH (format = '%s', partitioning = ARRAY['hour(d)'])\", format.name()));\n+        assertUpdate(session, \"INSERT INTO test_hour_transform VALUES\" +\n+                        \"(TIMESTAMP '2015-01-01 10:01:23', 1),\" +\n+                        \"(TIMESTAMP '2015-01-01 10:10:02', 2),\" +\n+                        \"(TIMESTAMP '2015-01-01 10:55:00', 3),\" +\n+                        \"(TIMESTAMP '2015-05-15 12:05:01', 4),\" +\n+                        \"(TIMESTAMP '2015-05-15 12:21:02', 5),\" +\n+                        \"(TIMESTAMP '2015-02-21 13:11:11', 6),\" +\n+                        \"(TIMESTAMP '2015-02-21 13:12:12', 7)\",\n+                7);\n+\n+        assertQuery(session, \"SELECT COUNT(*) FROM \\\"test_hour_transform$partitions\\\"\", \"SELECT 3\");\n+\n+        assertQuery(session, \"SELECT COUNT(*) FROM test_hour_transform WHERE hour(d) = 10\", \"SELECT 3\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5OTYzMQ==", "bodyText": "Can you change all of these to use SELECT d so that we confirm the exact timestamps we expect are returned? Same goes for all of the tests that use SELECT count(*)", "url": "https://github.com/trinodb/trino/pull/4579#discussion_r465299631", "createdAt": "2020-08-04T20:05:36Z", "author": {"login": "electrum"}, "path": "presto-iceberg/src/test/java/io/prestosql/plugin/iceberg/TestIcebergSmoke.java", "diffHunk": "@@ -593,6 +593,210 @@ private void testPredicating(Session session, FileFormat fileFormat)\n         dropTable(session, \"test_predicating_on_real\");\n     }\n \n+    @Test\n+    public void testDateTransforms()\n+    {\n+        testWithAllFileFormats(this::testDateTransformsForFormat);\n+    }\n+\n+    private void testDateTransformsForFormat(Session session, FileFormat format)\n+    {\n+        testHourTransformForFormat(session, format);\n+        testDayTransformForFormat(session, format);\n+        testMonthTransformForFormat(session, format);\n+        testYearTransformForFormat(session, format);\n+    }\n+\n+    private void testHourTransformForFormat(Session session, FileFormat format)\n+    {\n+        String select = \"SELECT d_hour, row_count, d.min AS d_min, d.max AS d_max, b.min AS b_min, b.max AS b_max FROM \\\"test_hour_transform$partitions\\\"\";\n+\n+        assertUpdate(session, format(\"CREATE TABLE test_hour_transform (d TIMESTAMP, b BIGINT)\" +\n+                \" WITH (format = '%s', partitioning = ARRAY['hour(d)'])\", format.name()));\n+        assertUpdate(session, \"INSERT INTO test_hour_transform VALUES\" +\n+                        \"(TIMESTAMP '2015-01-01 10:01:23', 1),\" +\n+                        \"(TIMESTAMP '2015-01-01 10:10:02', 2),\" +\n+                        \"(TIMESTAMP '2015-01-01 10:55:00', 3),\" +\n+                        \"(TIMESTAMP '2015-05-15 12:05:01', 4),\" +\n+                        \"(TIMESTAMP '2015-05-15 12:21:02', 5),\" +\n+                        \"(TIMESTAMP '2015-02-21 13:11:11', 6),\" +\n+                        \"(TIMESTAMP '2015-02-21 13:12:12', 7)\",\n+                7);\n+\n+        assertQuery(session, \"SELECT COUNT(*) FROM \\\"test_hour_transform$partitions\\\"\", \"SELECT 3\");\n+\n+        assertQuery(session, \"SELECT COUNT(*) FROM test_hour_transform WHERE hour(d) = 10\", \"SELECT 3\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5ODM5MQ=="}, "originalCommit": null, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90ab784c09a2843fbc308bb4ab3740b6c67f4738", "author": {"user": {"login": "djsstarburst", "name": "David Stryker"}}, "url": "https://github.com/trinodb/trino/commit/90ab784c09a2843fbc308bb4ab3740b6c67f4738", "committedDate": "2020-08-05T04:05:48Z", "message": "Add Iceberg smoke tests for partitioning transforms\n\nThis commit adds Iceberg smoke test for all partitioning\ntransforms: hour(), day(), month(), year(), bucket() and truncate().\nIt also fixes a bug in PartitionTable.\n\nOrc doesn't yet have min/max statistics for Timestamp columns.\nThey should be added."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "90ab784c09a2843fbc308bb4ab3740b6c67f4738", "author": {"user": {"login": "djsstarburst", "name": "David Stryker"}}, "url": "https://github.com/trinodb/trino/commit/90ab784c09a2843fbc308bb4ab3740b6c67f4738", "committedDate": "2020-08-05T04:05:48Z", "message": "Add Iceberg smoke tests for partitioning transforms\n\nThis commit adds Iceberg smoke test for all partitioning\ntransforms: hour(), day(), month(), year(), bucket() and truncate().\nIt also fixes a bug in PartitionTable.\n\nOrc doesn't yet have min/max statistics for Timestamp columns.\nThey should be added."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNjUxMzMx", "url": "https://github.com/trinodb/trino/pull/4579#pullrequestreview-463651331", "createdAt": "2020-08-07T21:31:45Z", "commit": {"oid": "90ab784c09a2843fbc308bb4ab3740b6c67f4738"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4902, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}