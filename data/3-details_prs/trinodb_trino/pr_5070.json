{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4ODEyNzA1", "number": 5070, "title": "Ensure transaction cleanup does not fail in transitionToFailed", "bodyText": "Fixes #5062", "createdAt": "2020-09-03T18:28:12Z", "url": "https://github.com/trinodb/trino/pull/5070", "merged": true, "mergeCommit": {"oid": "eac15fdbfa1b015b3c057292b1c65bfde5d978ec"}, "closed": true, "closedAt": "2020-09-03T21:30:25Z", "author": {"login": "dain"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFVJ4DgFqTQ4MjExMTM2Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFWRTWABqjM3MjY0MzA4NDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMTExMzYz", "url": "https://github.com/trinodb/trino/pull/5070#pullrequestreview-482111363", "createdAt": "2020-09-03T18:45:29Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODo0NToyOVrOHMzQBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODo0NToyOVrOHMzQBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE4NDY0NQ==", "bodyText": "Maybe log here. Can this fail due to a race condition?", "url": "https://github.com/trinodb/trino/pull/5070#discussion_r483184645", "createdAt": "2020-09-03T18:45:29Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/execution/QueryStateMachine.java", "diffHunk": "@@ -886,12 +886,16 @@ public boolean transitionToFailed(Throwable throwable)\n         try {\n             QUERY_STATE_LOG.debug(throwable, \"Query %s failed\", queryId);\n             session.getTransactionId().ifPresent(transactionId -> {\n-                if (transactionManager.isAutoCommit(transactionId)) {\n-                    transactionManager.asyncAbort(transactionId);\n+                try {\n+                    if (transactionManager.transactionExists(transactionId) && transactionManager.isAutoCommit(transactionId)) {\n+                        transactionManager.asyncAbort(transactionId);\n+                        return;\n+                    }\n                 }\n-                else {\n-                    transactionManager.fail(transactionId);\n+                catch (RuntimeException ignored) {\n+                    // This shouldn't happen but be safe and just fail the transaction directly", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "561cee374a77b098af5e156d62683a10976d6276", "author": {"user": {"login": "dain", "name": "Dain Sundstrom"}}, "url": "https://github.com/trinodb/trino/commit/561cee374a77b098af5e156d62683a10976d6276", "committedDate": "2020-09-03T20:03:30Z", "message": "Ensure transaction cleanup does not fail in transitionToFailed"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "561cee374a77b098af5e156d62683a10976d6276", "author": {"user": {"login": "dain", "name": "Dain Sundstrom"}}, "url": "https://github.com/trinodb/trino/commit/561cee374a77b098af5e156d62683a10976d6276", "committedDate": "2020-09-03T20:03:30Z", "message": "Ensure transaction cleanup does not fail in transitionToFailed"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3869, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}