{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyNDI4Nzg5", "number": 5740, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwMjo0NTowMlrOE0AUwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwMzowODoxMlrOE0Aarw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyOTY2NzIyOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/execution/SetSessionTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwMjo0NTowM1rOHrkV8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwMjo0NTowM1rOHrkV8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ0NjI1Ng==", "bodyText": "This could be any runtime exception depending on the decoder implementation, right? I think we'd want to catch all RuntimeExceptions here", "url": "https://github.com/trinodb/trino/pull/5740#discussion_r515446256", "createdAt": "2020-10-31T02:45:03Z", "author": {"login": "phd3"}, "path": "presto-main/src/main/java/io/prestosql/execution/SetSessionTask.java", "diffHunk": "@@ -87,7 +87,12 @@ public String getName()\n         String value = serializeSessionProperty(type, objectValue);\n \n         // verify the SQL value can be decoded by the property\n-        propertyMetadata.decode(objectValue);\n+        try {\n+            propertyMetadata.decode(objectValue);\n+        }\n+        catch (IllegalArgumentException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyOTY3ODYwOnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/execution/TestSetSessionTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwMzowMjoyM1rOHrkbUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwMzowMjoyM1rOHrkbUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ0NzYzNA==", "bodyText": "I think the tests will be easier to read if we add a parameter for property name to  testSetSession method. we won't require  testSetSessionWithValidation and testSetSessionWithEnum anymore.\neven now, the difference in testSetSession and testSetSessionWithValidation is only justified considering the behavior of property metadata that's defined completely outside of the method. Thoughts?", "url": "https://github.com/trinodb/trino/pull/5740#discussion_r515447634", "createdAt": "2020-10-31T03:02:23Z", "author": {"login": "phd3"}, "path": "presto-main/src/test/java/io/prestosql/execution/TestSetSessionTask.java", "diffHunk": "@@ -167,6 +197,11 @@ private void testSetSessionWithValidation(Expression expression, String expected\n         testSetSessionWithParameters(\"positive_property\", expression, expectedValue, emptyList());\n     }\n \n+    private void testSetSessionWithEnum(Expression expression, String expectedValue)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyOTY4MjM5OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/execution/TestSetSessionTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwMzowODoxM1rOHrkdEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwMzowODoxM1rOHrkdEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ0ODA4Mw==", "bodyText": "nit: we can remove this check since it's implied in the previous check?", "url": "https://github.com/trinodb/trino/pull/5740#discussion_r515448083", "createdAt": "2020-10-31T03:08:13Z", "author": {"login": "phd3"}, "path": "presto-main/src/test/java/io/prestosql/execution/TestSetSessionTask.java", "diffHunk": "@@ -146,6 +162,20 @@ public void testSetSessionWithValidation()\n         }\n     }\n \n+    @Test\n+    public void testSetSessionWithInvalidEnum()\n+    {\n+        try {\n+            testSetSessionWithEnum(new StringLiteral(\"XL\"), \"XL\");\n+            fail();\n+        }\n+        catch (PrestoException e) {\n+            assertEquals(INVALID_SESSION_PROPERTY.toErrorCode(), e.getErrorCode());\n+            assertEquals(ErrorType.USER_ERROR, e.getErrorCode().getType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4849, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}