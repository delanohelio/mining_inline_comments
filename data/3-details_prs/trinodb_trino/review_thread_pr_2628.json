{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MDc5MTg1", "number": 2628, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwODo0Mzo1OFrODaqWkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDo0OTo1NFrODcMw6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjgzNDczOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwODo0Mzo1OFrOFhvS8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxOTo1OTozMVrOFiynhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyMjIyNQ==", "bodyText": "NOT LIKE", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r370922225", "createdAt": "2020-01-25T08:43:58Z", "author": {"login": "tooptoop4"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -19,6 +19,41 @@ Operator Description\n ``!=``   Not equal (non-standard but popular syntax)\n ======== ===========\n \n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern in a\n+``WHERE`` condition::\n+\n+    ... WHERE column [NOT] LIKE 'pattern' ESCAPE 'character';\n+\n+Matching characters is case sensitive, and the pattern supports two symbols for\n+matching:\n+\n+- ``_`` denotes matching any single character\n+- ``%`` denotes matching zero or more characters\n+\n+A query to find all regions starting with A, returns AFRICA, AMERICA and ASIA::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A%';\n+\n+You can negate the result by adding ``NOT``, and get EUROPE and MIDDLE EAST::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A%';", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAyNTIyMQ==", "bodyText": "fixed", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r372025221", "createdAt": "2020-01-28T19:59:31Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -19,6 +19,41 @@ Operator Description\n ``!=``   Not equal (non-standard but popular syntax)\n ======== ===========\n \n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern in a\n+``WHERE`` condition::\n+\n+    ... WHERE column [NOT] LIKE 'pattern' ESCAPE 'character';\n+\n+Matching characters is case sensitive, and the pattern supports two symbols for\n+matching:\n+\n+- ``_`` denotes matching any single character\n+- ``%`` denotes matching zero or more characters\n+\n+A query to find all regions starting with A, returns AFRICA, AMERICA and ASIA::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A%';\n+\n+You can negate the result by adding ``NOT``, and get EUROPE and MIDDLE EAST::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A%';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyMjIyNQ=="}, "originalCommit": null, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5Mjk4NjAzOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxNjowODozNVrOFhwdeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMDowMDowOVrOFiyouw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0MTMwNQ==", "bodyText": "How about: \u201cThe following query ... and produces ...\u201d?", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r370941305", "createdAt": "2020-01-25T16:08:35Z", "author": {"login": "martint"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -19,6 +19,41 @@ Operator Description\n ``!=``   Not equal (non-standard but popular syntax)\n ======== ===========\n \n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern in a\n+``WHERE`` condition::\n+\n+    ... WHERE column [NOT] LIKE 'pattern' ESCAPE 'character';\n+\n+Matching characters is case sensitive, and the pattern supports two symbols for\n+matching:\n+\n+- ``_`` denotes matching any single character\n+- ``%`` denotes matching zero or more characters\n+\n+A query to find all regions starting with A, returns AFRICA, AMERICA and ASIA::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A%';\n+\n+You can negate the result by adding ``NOT``, and get EUROPE and MIDDLE EAST::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A%';\n+\n+If you only have one specific character to match, you can use the ``_`` symbol\n+for each character. The following query uses two underscores and you receive", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAyNTUzMQ==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r372025531", "createdAt": "2020-01-28T20:00:09Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -19,6 +19,41 @@ Operator Description\n ``!=``   Not equal (non-standard but popular syntax)\n ======== ===========\n \n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern in a\n+``WHERE`` condition::\n+\n+    ... WHERE column [NOT] LIKE 'pattern' ESCAPE 'character';\n+\n+Matching characters is case sensitive, and the pattern supports two symbols for\n+matching:\n+\n+- ``_`` denotes matching any single character\n+- ``%`` denotes matching zero or more characters\n+\n+A query to find all regions starting with A, returns AFRICA, AMERICA and ASIA::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A%';\n+\n+You can negate the result by adding ``NOT``, and get EUROPE and MIDDLE EAST::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A%';\n+\n+If you only have one specific character to match, you can use the ``_`` symbol\n+for each character. The following query uses two underscores and you receive", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0MTMwNQ=="}, "originalCommit": null, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzAyNTY4OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxNzo1MjoxNFrOFhwxew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxOTo1MToyN1rOFiyYAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0NjQyNw==", "bodyText": "Move this to the bottom, since it's specific to strings, whereas the other operators are generic. Also add a link to this in the operators section of the String Functions page.", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r370946427", "createdAt": "2020-01-25T17:52:14Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -19,6 +19,41 @@ Operator Description\n ``!=``   Not equal (non-standard but popular syntax)\n ======== ===========\n \n+.. _like_operator:\n+\n+Pattern Comparison: LIKE", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAyMTI1MQ==", "bodyText": "Done", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r372021251", "createdAt": "2020-01-28T19:51:27Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -19,6 +19,41 @@ Operator Description\n ``!=``   Not equal (non-standard but popular syntax)\n ======== ===========\n \n+.. _like_operator:\n+\n+Pattern Comparison: LIKE", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0NjQyNw=="}, "originalCommit": null, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzAyNjU2OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxNzo1Mzo1OVrOFhwx6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNjoyNTo0OVrOFjO4ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0NjUzOQ==", "bodyText": "Change this to runnable example, like the others on this page:\nSELECT 'abc' LIKE '%b';", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r370946539", "createdAt": "2020-01-25T17:53:59Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -19,6 +19,41 @@ Operator Description\n ``!=``   Not equal (non-standard but popular syntax)\n ======== ===========\n \n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern in a\n+``WHERE`` condition::\n+\n+    ... WHERE column [NOT] LIKE 'pattern' ESCAPE 'character';", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAyMTYwNA==", "bodyText": "This is the syntax overall. The rest are now runnable without more docs.", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r372021604", "createdAt": "2020-01-28T19:52:08Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -19,6 +19,41 @@ Operator Description\n ``!=``   Not equal (non-standard but popular syntax)\n ======== ===========\n \n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern in a\n+``WHERE`` condition::\n+\n+    ... WHERE column [NOT] LIKE 'pattern' ESCAPE 'character';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0NjUzOQ=="}, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIyODMzNw==", "bodyText": "This is an example, not syntax, since LIKE can be used in any expression context. Remove WHERE here and in the description above to make it syntax.", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r372228337", "createdAt": "2020-01-29T07:40:57Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -19,6 +19,41 @@ Operator Description\n ``!=``   Not equal (non-standard but popular syntax)\n ======== ===========\n \n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern in a\n+``WHERE`` condition::\n+\n+    ... WHERE column [NOT] LIKE 'pattern' ESCAPE 'character';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0NjUzOQ=="}, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ4ODI5OA==", "bodyText": "Updated", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r372488298", "createdAt": "2020-01-29T16:25:49Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -19,6 +19,41 @@ Operator Description\n ``!=``   Not equal (non-standard but popular syntax)\n ======== ===========\n \n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern in a\n+``WHERE`` condition::\n+\n+    ... WHERE column [NOT] LIKE 'pattern' ESCAPE 'character';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0NjUzOQ=="}, "originalCommit": null, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzAyNjc3OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxNzo1NDo0M1rOFhwyBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxOTo1OToyN1rOFiynVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0NjU2NA==", "bodyText": "Remove the catalog and schema, since we don't use those in other examples.", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r370946564", "createdAt": "2020-01-25T17:54:43Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -19,6 +19,41 @@ Operator Description\n ``!=``   Not equal (non-standard but popular syntax)\n ======== ===========\n \n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern in a\n+``WHERE`` condition::\n+\n+    ... WHERE column [NOT] LIKE 'pattern' ESCAPE 'character';\n+\n+Matching characters is case sensitive, and the pattern supports two symbols for\n+matching:\n+\n+- ``_`` denotes matching any single character\n+- ``%`` denotes matching zero or more characters\n+\n+A query to find all regions starting with A, returns AFRICA, AMERICA and ASIA::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A%';", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAyNTE3NQ==", "bodyText": "rejigged", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r372025175", "createdAt": "2020-01-28T19:59:27Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -19,6 +19,41 @@ Operator Description\n ``!=``   Not equal (non-standard but popular syntax)\n ======== ===========\n \n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern in a\n+``WHERE`` condition::\n+\n+    ... WHERE column [NOT] LIKE 'pattern' ESCAPE 'character';\n+\n+Matching characters is case sensitive, and the pattern supports two symbols for\n+matching:\n+\n+- ``_`` denotes matching any single character\n+- ``%`` denotes matching zero or more characters\n+\n+A query to find all regions starting with A, returns AFRICA, AMERICA and ASIA::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A%';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0NjU2NA=="}, "originalCommit": null, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzAyODAzOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxNzo1NzoyNVrOFhwyqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxOTo1OToxNVrOFiym9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0NjcyOA==", "bodyText": "Remove comma after A", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r370946728", "createdAt": "2020-01-25T17:57:25Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -19,6 +19,41 @@ Operator Description\n ``!=``   Not equal (non-standard but popular syntax)\n ======== ===========\n \n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern in a\n+``WHERE`` condition::\n+\n+    ... WHERE column [NOT] LIKE 'pattern' ESCAPE 'character';\n+\n+Matching characters is case sensitive, and the pattern supports two symbols for\n+matching:\n+\n+- ``_`` denotes matching any single character\n+- ``%`` denotes matching zero or more characters\n+\n+A query to find all regions starting with A, returns AFRICA, AMERICA and ASIA::", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAyNTA3Nw==", "bodyText": "updated", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r372025077", "createdAt": "2020-01-28T19:59:15Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -19,6 +19,41 @@ Operator Description\n ``!=``   Not equal (non-standard but popular syntax)\n ======== ===========\n \n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern in a\n+``WHERE`` condition::\n+\n+    ... WHERE column [NOT] LIKE 'pattern' ESCAPE 'character';\n+\n+Matching characters is case sensitive, and the pattern supports two symbols for\n+matching:\n+\n+- ``_`` denotes matching any single character\n+- ``%`` denotes matching zero or more characters\n+\n+A query to find all regions starting with A, returns AFRICA, AMERICA and ASIA::", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0NjcyOA=="}, "originalCommit": null, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzAyOTU2OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxODowMToyMVrOFhwzcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxOTo1OToxOVrOFiynIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0NjkyOQ==", "bodyText": "matches any single character\nmatches zero or more characters", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r370946929", "createdAt": "2020-01-25T18:01:21Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -19,6 +19,41 @@ Operator Description\n ``!=``   Not equal (non-standard but popular syntax)\n ======== ===========\n \n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern in a\n+``WHERE`` condition::\n+\n+    ... WHERE column [NOT] LIKE 'pattern' ESCAPE 'character';\n+\n+Matching characters is case sensitive, and the pattern supports two symbols for\n+matching:\n+\n+- ``_`` denotes matching any single character", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAyNTEyMA==", "bodyText": "updated", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r372025120", "createdAt": "2020-01-28T19:59:19Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -19,6 +19,41 @@ Operator Description\n ``!=``   Not equal (non-standard but popular syntax)\n ======== ===========\n \n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern in a\n+``WHERE`` condition::\n+\n+    ... WHERE column [NOT] LIKE 'pattern' ESCAPE 'character';\n+\n+Matching characters is case sensitive, and the pattern supports two symbols for\n+matching:\n+\n+- ``_`` denotes matching any single character", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0NjkyOQ=="}, "originalCommit": null, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzAzMDg5OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxODowNTozMVrOFhw0KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMDowMDo0MlrOFiypsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0NzExMw==", "bodyText": "There are only two metacharacters, so we can be specific:\nThe wildcard characters ``_`` and ``%`` must be escaped to allow you to match them as literals.", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r370947113", "createdAt": "2020-01-25T18:05:31Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -19,6 +19,41 @@ Operator Description\n ``!=``   Not equal (non-standard but popular syntax)\n ======== ===========\n \n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern in a\n+``WHERE`` condition::\n+\n+    ... WHERE column [NOT] LIKE 'pattern' ESCAPE 'character';\n+\n+Matching characters is case sensitive, and the pattern supports two symbols for\n+matching:\n+\n+- ``_`` denotes matching any single character\n+- ``%`` denotes matching zero or more characters\n+\n+A query to find all regions starting with A, returns AFRICA, AMERICA and ASIA::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A%';\n+\n+You can negate the result by adding ``NOT``, and get EUROPE and MIDDLE EAST::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A%';\n+\n+If you only have one specific character to match, you can use the ``_`` symbol\n+for each character. The following query uses two underscores and you receive\n+ASIA as result::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A__A';\n+\n+Some characters like ``_`` need to be escaped to allow you to match them. This", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAyNTc3Nw==", "bodyText": "Done", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r372025777", "createdAt": "2020-01-28T20:00:42Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -19,6 +19,41 @@ Operator Description\n ``!=``   Not equal (non-standard but popular syntax)\n ======== ===========\n \n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern in a\n+``WHERE`` condition::\n+\n+    ... WHERE column [NOT] LIKE 'pattern' ESCAPE 'character';\n+\n+Matching characters is case sensitive, and the pattern supports two symbols for\n+matching:\n+\n+- ``_`` denotes matching any single character\n+- ``%`` denotes matching zero or more characters\n+\n+A query to find all regions starting with A, returns AFRICA, AMERICA and ASIA::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A%';\n+\n+You can negate the result by adding ``NOT``, and get EUROPE and MIDDLE EAST::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A%';\n+\n+If you only have one specific character to match, you can use the ``_`` symbol\n+for each character. The following query uses two underscores and you receive\n+ASIA as result::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A__A';\n+\n+Some characters like ``_`` need to be escaped to allow you to match them. This", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0NzExMw=="}, "originalCommit": null, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzAzMTMxOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxODowNjozNVrOFhw0Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMDoxMjo0M1rOFiy_Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0NzE3MQ==", "bodyText": "We should mention the escape character can also be escaped.\n\nTo match the escape character, escape it by preceding it with itself.", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r370947171", "createdAt": "2020-01-25T18:06:35Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -19,6 +19,41 @@ Operator Description\n ``!=``   Not equal (non-standard but popular syntax)\n ======== ===========\n \n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern in a\n+``WHERE`` condition::\n+\n+    ... WHERE column [NOT] LIKE 'pattern' ESCAPE 'character';\n+\n+Matching characters is case sensitive, and the pattern supports two symbols for\n+matching:\n+\n+- ``_`` denotes matching any single character\n+- ``%`` denotes matching zero or more characters\n+\n+A query to find all regions starting with A, returns AFRICA, AMERICA and ASIA::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A%';\n+\n+You can negate the result by adding ``NOT``, and get EUROPE and MIDDLE EAST::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A%';\n+\n+If you only have one specific character to match, you can use the ``_`` symbol\n+for each character. The following query uses two underscores and you receive\n+ASIA as result::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A__A';\n+\n+Some characters like ``_`` need to be escaped to allow you to match them. This\n+can be achieved by specifying the ``ESCAPE`` character to use::\n+\n+    SELECT 'a_c' LIKE 'a\\_c' ESCAPE '\\';\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAzMTMzMQ==", "bodyText": "Done", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r372031331", "createdAt": "2020-01-28T20:12:43Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -19,6 +19,41 @@ Operator Description\n ``!=``   Not equal (non-standard but popular syntax)\n ======== ===========\n \n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern in a\n+``WHERE`` condition::\n+\n+    ... WHERE column [NOT] LIKE 'pattern' ESCAPE 'character';\n+\n+Matching characters is case sensitive, and the pattern supports two symbols for\n+matching:\n+\n+- ``_`` denotes matching any single character\n+- ``%`` denotes matching zero or more characters\n+\n+A query to find all regions starting with A, returns AFRICA, AMERICA and ASIA::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A%';\n+\n+You can negate the result by adding ``NOT``, and get EUROPE and MIDDLE EAST::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A%';\n+\n+If you only have one specific character to match, you can use the ``_`` symbol\n+for each character. The following query uses two underscores and you receive\n+ASIA as result::\n+\n+    SELECT name FROM tpch.tiny.region WHERE name LIKE 'A__A';\n+\n+Some characters like ``_`` need to be escaped to allow you to match them. This\n+can be achieved by specifying the ``ESCAPE`` character to use::\n+\n+    SELECT 'a_c' LIKE 'a\\_c' ESCAPE '\\';\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0NzE3MQ=="}, "originalCommit": null, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODk0NTMxOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDo0NDo1NFrOFkHpnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDo0NTo1N1rOFkHrZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQxODM5Ng==", "bodyText": "Inconsistent comma placement", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r373418396", "createdAt": "2020-01-31T10:44:54Z", "author": {"login": "martint"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -168,3 +170,47 @@ Expression              Meaning\n ====================    ===========\n \n ``ANY`` and ``SOME`` have the same meaning and can be used interchangeably.\n+\n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern::\n+\n+    ... column [NOT] LIKE 'pattern' ESCAPE 'character';\n+\n+Matching characters is case sensitive, and the pattern supports two symbols for\n+matching:\n+\n+- ``_`` matches any single character\n+- ``%`` matches zero or more characters\n+\n+Typically it is often used as a condition in ``WHERE`` statements. An example is\n+a query to find all continents starting with ``E``, which returns ``Europe``::\n+\n+    SELECT * FROM ( VALUES ('America') , ('Asia'), ('Africa'), ('Europe'), ('Australia') , ('Antarctica')) AS t (continent)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQxODg1Mw==", "bodyText": "Also, the parentheses around the elements are not needed. You can just do:\nVALUES 'America', 'Asia', 'Africa', 'Europe', 'Australia', 'Antarctica'", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r373418853", "createdAt": "2020-01-31T10:45:57Z", "author": {"login": "martint"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -168,3 +170,47 @@ Expression              Meaning\n ====================    ===========\n \n ``ANY`` and ``SOME`` have the same meaning and can be used interchangeably.\n+\n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern::\n+\n+    ... column [NOT] LIKE 'pattern' ESCAPE 'character';\n+\n+Matching characters is case sensitive, and the pattern supports two symbols for\n+matching:\n+\n+- ``_`` matches any single character\n+- ``%`` matches zero or more characters\n+\n+Typically it is often used as a condition in ``WHERE`` statements. An example is\n+a query to find all continents starting with ``E``, which returns ``Europe``::\n+\n+    SELECT * FROM ( VALUES ('America') , ('Asia'), ('Africa'), ('Europe'), ('Australia') , ('Antarctica')) AS t (continent)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQxODM5Ng=="}, "originalCommit": null, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODk1ODQ4OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDo0OTo1NFrOFkHxnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDo0OTo1NFrOFkHxnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQyMDQ0Nw==", "bodyText": "It's not clear how '''\\'' fits in the above example. Is that the search pattern? Or the value being searched on? Also, it appears to have unmatched (and too many?) quotes.", "url": "https://github.com/trinodb/trino/pull/2628#discussion_r373420447", "createdAt": "2020-01-31T10:49:54Z", "author": {"login": "martint"}, "path": "presto-docs/src/main/sphinx/functions/comparison.rst", "diffHunk": "@@ -168,3 +170,47 @@ Expression              Meaning\n ====================    ===========\n \n ``ANY`` and ``SOME`` have the same meaning and can be used interchangeably.\n+\n+.. _like_operator:\n+\n+Pattern Comparison: LIKE\n+------------------------\n+\n+The ``LIKE`` operator can be used to compare values with a pattern::\n+\n+    ... column [NOT] LIKE 'pattern' ESCAPE 'character';\n+\n+Matching characters is case sensitive, and the pattern supports two symbols for\n+matching:\n+\n+- ``_`` matches any single character\n+- ``%`` matches zero or more characters\n+\n+Typically it is often used as a condition in ``WHERE`` statements. An example is\n+a query to find all continents starting with ``E``, which returns ``Europe``::\n+\n+    SELECT * FROM ( VALUES ('America') , ('Asia'), ('Africa'), ('Europe'), ('Australia') , ('Antarctica')) AS t (continent)\n+    WHERE continent LIKE 'E%';\n+\n+You can negate the result by adding ``NOT``, and get all other continents, all\n+not starting with ``E``::\n+\n+    SELECT * FROM ( VALUES ('America') , ('Asia'), ('Africa'), ('Europe'), ('Australia') , ('Antarctica')) AS t (continent)\n+    WHERE continent NOT LIKE 'E%';\n+\n+If you only have one specific character to match, you can use the ``_`` symbol\n+for each character. The following query uses two underscores and produces only\n+``Asia`` as result::\n+\n+    SELECT * FROM ( VALUES ('America') , ('Asia'), ('Africa'), ('Europe'), ('Australia') , ('Antarctica')) AS t (continent)\n+    WHERE continent LIKE 'A__A';\n+\n+The wildcard characters ``_`` and ``%`` must be escaped to allow you to match\n+them as literals. This can be achieved by specifying the ``ESCAPE`` character to\n+use::\n+\n+    SELECT 'South_America' LIKE 'South\\_America' ESCAPE '\\';\n+\n+The above query returns ``true`` since the escaped underscore symbol matches. If\n+you need to match the used escape character as well, you can escape it. In the\n+above example you can use ``\\\\`` to match for '''\\''.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 948, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}