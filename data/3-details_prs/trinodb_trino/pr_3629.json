{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNjIzOTkz", "number": 3629, "title": "Allow SystemAccessControl to listen to events", "bodyText": "enhancing event driven communicaiton about\nexecuting queries in the system to SystemLevelAccessControl", "createdAt": "2020-05-05T16:31:08Z", "url": "https://github.com/trinodb/trino/pull/3629", "merged": true, "mergeCommit": {"oid": "f818bcad98cbda9d782451591a5c8d94da3caab3"}, "closed": true, "closedAt": "2020-05-25T19:04:14Z", "author": {"login": "s2lomon"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceWt2SABqjMzMDUwNDg1Mjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABck022mAFqTQxNzg0NjcyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MjM4MzUy", "url": "https://github.com/trinodb/trino/pull/3629#pullrequestreview-407238352", "createdAt": "2020-05-07T08:04:52Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwODowNDo1MlrOGRzE3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwODoxMzoyNFrOGRzXrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNTgwNw==", "bodyText": "I would change commit message to:\nAllow SystemAccessControl to provide to event listeners\n\n\nenhancing event driven communicaiton about\nexecuting queries in the system to SystemLevelAccessControl\n\nI would drop this.", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r421315807", "createdAt": "2020-05-07T08:04:52Z", "author": {"login": "kokosing"}, "path": "presto-main/src/main/java/io/prestosql/security/AccessControlManager.java", "diffHunk": "@@ -20,6 +20,7 @@\n import io.airlift.log.Logger;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNTk1NQ==", "bodyText": "final", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r421315955", "createdAt": "2020-05-07T08:05:07Z", "author": {"login": "kokosing"}, "path": "presto-main/src/main/java/io/prestosql/security/AccessControlManager.java", "diffHunk": "@@ -82,6 +84,7 @@\n     private static final String NAME_PROPERTY = \"access-control.name\";\n \n     private final TransactionManager transactionManager;\n+    private EventListenerManager eventListenerManager;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNjgwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .flatMap(eventListeners -> StreamSupport.stream(eventListeners.spliterator(), false))\n          \n          \n            \n                            .flatMap(eventListeners -> ImmutableSet.of(eventListeners).stream())", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r421316801", "createdAt": "2020-05-07T08:06:40Z", "author": {"login": "kokosing"}, "path": "presto-main/src/main/java/io/prestosql/security/AccessControlManager.java", "diffHunk": "@@ -141,6 +145,11 @@ public void loadSystemAccessControl()\n                 .map(this::createSystemAccessControl)\n                 .collect(toImmutableList());\n \n+        systemAccessControls.stream()\n+                .map(SystemAccessControl::getEventListeners)\n+                .flatMap(eventListeners -> StreamSupport.stream(eventListeners.spliterator(), false))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNzQyNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static TestingEventListenerManager emptyConfigManager()\n          \n          \n            \n                public static TestingEventListenerManager testingEventListenerManager()\n          \n      \n    \n    \n  \n\n?\nemptyConfigManager sounds like a manager of empty config o_O", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r421317427", "createdAt": "2020-05-07T08:07:49Z", "author": {"login": "kokosing"}, "path": "presto-main/src/main/java/io/prestosql/testing/TestingEventListenerManager.java", "diffHunk": "@@ -30,6 +31,11 @@\n public class TestingEventListenerManager\n         extends EventListenerManager\n {\n+    public static TestingEventListenerManager emptyConfigManager()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxOTUxMw==", "bodyText": "extract \"event-listening-sac\" as variable in this method", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r421319513", "createdAt": "2020-05-07T08:11:28Z", "author": {"login": "kokosing"}, "path": "presto-main/src/test/java/io/prestosql/security/TestAccessControlManager.java", "diffHunk": "@@ -307,6 +320,21 @@ public void testAllowExecuteProcedure()\n                 });\n     }\n \n+    @Test\n+    public void testRegisterEventListeners()\n+            throws IOException\n+    {\n+        EventListener expectedListener = new EventListener() {};\n+        TestingEventListenerManager eventListenerManager = emptyConfigManager();\n+        AccessControlManager accessControlManager = createAccessControlManage(eventListenerManager, ImmutableList.of(\"access-control.name=event-listening-sac\"));\n+        accessControlManager.addSystemAccessControlFactory(eventListeningSystemAccessControlFactory(\"event-listening-sac\", expectedListener));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 162}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxOTc4MA==", "bodyText": "Can you also add a test where you register two event listeners.", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r421319780", "createdAt": "2020-05-07T08:11:56Z", "author": {"login": "kokosing"}, "path": "presto-main/src/test/java/io/prestosql/security/TestAccessControlManager.java", "diffHunk": "@@ -307,6 +320,21 @@ public void testAllowExecuteProcedure()\n                 });\n     }\n \n+    @Test\n+    public void testRegisterEventListeners()\n+            throws IOException\n+    {\n+        EventListener expectedListener = new EventListener() {};", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMyMDYyMQ==", "bodyText": "Why you had to implement this?", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r421320621", "createdAt": "2020-05-07T08:13:24Z", "author": {"login": "kokosing"}, "path": "presto-main/src/test/java/io/prestosql/security/TestAccessControlManager.java", "diffHunk": "@@ -378,6 +406,57 @@ public void testAllowExecuteFunction()\n                 });\n     }\n \n+    private AccessControlManager createAccessControlManage(TestingEventListenerManager eventListenerManager, List<String> systemAccessControlProperties)\n+            throws IOException\n+    {\n+        Path systemAccessControlConfig = createTempFile(\"access-manager-config-file\", \".properties\");\n+        Files.write(systemAccessControlConfig, systemAccessControlProperties, TRUNCATE_EXISTING, CREATE, WRITE);\n+\n+        return createAccessControlManager(eventListenerManager, new AccessControlConfig()\n+                .setAccessControlFiles(systemAccessControlConfig.toFile()\n+                        .getAbsolutePath()));\n+    }\n+\n+    private AccessControlManager createAccessControlManager(TransactionManager testTransactionManager)\n+    {\n+        return new AccessControlManager(testTransactionManager, emptyConfigManager(), new AccessControlConfig());\n+    }\n+\n+    private AccessControlManager createAccessControlManager(EventListenerManager eventListenerManager, AccessControlConfig config)\n+    {\n+        return new AccessControlManager(createTestTransactionManager(), eventListenerManager, config);\n+    }\n+\n+    private SystemAccessControlFactory eventListeningSystemAccessControlFactory(String name, EventListener eventListener)\n+    {\n+        return new SystemAccessControlFactory()\n+        {\n+            @Override\n+            public String getName()\n+            {\n+                return name;\n+            }\n+\n+            @Override\n+            public SystemAccessControl create(Map<String, String> config)\n+            {\n+                return new SystemAccessControl()\n+                {\n+                    @Override\n+                    public void checkCanSetSystemSessionProperty(SystemSecurityContext context, String propertyName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 232}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "5813b3f618d5103832f543b0f61eb90f599022c1", "author": {"user": {"login": "s2lomon", "name": "Szymon Homa"}}, "url": "https://github.com/trinodb/trino/commit/5813b3f618d5103832f543b0f61eb90f599022c1", "committedDate": "2020-05-25T13:34:29Z", "message": "Allow SystemAccessControl to provide to event listeners"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "5813b3f618d5103832f543b0f61eb90f599022c1", "author": {"user": {"login": "s2lomon", "name": "Szymon Homa"}}, "url": "https://github.com/trinodb/trino/commit/5813b3f618d5103832f543b0f61eb90f599022c1", "committedDate": "2020-05-25T13:34:29Z", "message": "Allow SystemAccessControl to provide to event listeners"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3ODQ2NzI4", "url": "https://github.com/trinodb/trino/pull/3629#pullrequestreview-417846728", "createdAt": "2020-05-25T19:02:20Z", "commit": {"oid": "5813b3f618d5103832f543b0f61eb90f599022c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1395, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}