{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1NjMyNDY1", "number": 6051, "title": "Make RedisPlugin immutable", "bodyText": "Move testing facilities out to a testing class.", "createdAt": "2020-11-23T10:40:32Z", "url": "https://github.com/trinodb/trino/pull/6051", "merged": true, "mergeCommit": {"oid": "4b8615d5eda4d9656ab27ad1746dde7a1e43bc07"}, "closed": true, "closedAt": "2020-11-24T22:26:07Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfSwqiAH2gAyNTI1NjMyNDY1OmZmMmM1NzdiZmRkN2JkYTAwNDlmMGE5NjM4NTRhMzQ2NDljZTFjN2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfoSSgAFqTUzNzQxMDM3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ff2c577bfdd7bda0049f0a963854a34649ce1c7b", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/ff2c577bfdd7bda0049f0a963854a34649ce1c7b", "committedDate": "2020-11-23T10:40:20Z", "message": "Make RedisPlugin immutable\n\nMove testing facilities out to a testing class."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MzkxNDk2", "url": "https://github.com/trinodb/trino/pull/6051#pullrequestreview-536391496", "createdAt": "2020-11-23T11:36:48Z", "commit": {"oid": "ff2c577bfdd7bda0049f0a963854a34649ce1c7b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMTozNjo0OFrOH4JpIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMTozNjo0OFrOH4JpIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY0MDI4OA==", "bodyText": "Best would be to apply same approach as in Kafka. #6046 where tableDescriptionSupplier is some form of metastore (like HMS in Hive connector). WDYT?", "url": "https://github.com/trinodb/trino/pull/6051#discussion_r528640288", "createdAt": "2020-11-23T11:36:48Z", "author": {"login": "kokosing"}, "path": "presto-redis/src/main/java/io/prestosql/plugin/redis/RedisPlugin.java", "diffHunk": "@@ -13,35 +13,21 @@\n  */\n package io.prestosql.plugin.redis;\n \n-import com.google.common.annotations.VisibleForTesting;\n import com.google.common.collect.ImmutableList;\n import io.prestosql.spi.Plugin;\n import io.prestosql.spi.connector.ConnectorFactory;\n-import io.prestosql.spi.connector.SchemaTableName;\n \n-import java.util.Map;\n import java.util.Optional;\n-import java.util.function.Supplier;\n-\n-import static java.util.Objects.requireNonNull;\n \n /**\n  * Presto plugin to use Redis as a data source.\n  */\n public class RedisPlugin\n         implements Plugin\n {\n-    private Optional<Supplier<Map<SchemaTableName, RedisTableDescription>>> tableDescriptionSupplier = Optional.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2c577bfdd7bda0049f0a963854a34649ce1c7b"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NDEwMzcx", "url": "https://github.com/trinodb/trino/pull/6051#pullrequestreview-537410371", "createdAt": "2020-11-24T11:44:54Z", "commit": {"oid": "ff2c577bfdd7bda0049f0a963854a34649ce1c7b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTo0NDo1NVrOH49HpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTo0NDo1NVrOH49HpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ4MzY4NA==", "bodyText": "Please capture this as issue so some one could follow up.", "url": "https://github.com/trinodb/trino/pull/6051#discussion_r529483684", "createdAt": "2020-11-24T11:44:55Z", "author": {"login": "kokosing"}, "path": "presto-redis/src/main/java/io/prestosql/plugin/redis/RedisPlugin.java", "diffHunk": "@@ -13,35 +13,21 @@\n  */\n package io.prestosql.plugin.redis;\n \n-import com.google.common.annotations.VisibleForTesting;\n import com.google.common.collect.ImmutableList;\n import io.prestosql.spi.Plugin;\n import io.prestosql.spi.connector.ConnectorFactory;\n-import io.prestosql.spi.connector.SchemaTableName;\n \n-import java.util.Map;\n import java.util.Optional;\n-import java.util.function.Supplier;\n-\n-import static java.util.Objects.requireNonNull;\n \n /**\n  * Presto plugin to use Redis as a data source.\n  */\n public class RedisPlugin\n         implements Plugin\n {\n-    private Optional<Supplier<Map<SchemaTableName, RedisTableDescription>>> tableDescriptionSupplier = Optional.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY0MDI4OA=="}, "originalCommit": {"oid": "ff2c577bfdd7bda0049f0a963854a34649ce1c7b"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2245, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}