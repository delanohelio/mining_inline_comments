{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NzYwNDUw", "number": 3877, "title": "Allow creating a JDBC connector without CredentialProviderModule", "bodyText": "", "createdAt": "2020-05-28T22:04:28Z", "url": "https://github.com/trinodb/trino/pull/3877", "merged": true, "mergeCommit": {"oid": "d82d5f770c4bf35f45652bfe42866c00ec26249d"}, "closed": true, "closedAt": "2020-06-02T18:46:08Z", "author": {"login": "MiguelWeezardo"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcl_u_3ABqjMzODY1NTg0NjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnVI4RAFqTQyMjY5MjcxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwODQwODEz", "url": "https://github.com/trinodb/trino/pull/3877#pullrequestreview-420840813", "createdAt": "2020-05-29T10:39:11Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMDozOToxMVrOGcXq2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMDo0Mjo0MFrOGcXwtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQwMTExNA==", "bodyText": "You can always call Modules.combine. In my perception Module is a some kind of \"collection\", so returning a collection of collections does make much sense.", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r432401114", "createdAt": "2020-05-29T10:39:11Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "diffHunk": "@@ -83,14 +85,14 @@ public Connector create(String catalogName, Map<String, String> requiredConfig,\n         return injector.getInstance(JdbcConnector.class);\n     }\n \n-    public interface JdbcModuleProvider\n+    public interface JdbcModulesProvider\n     {\n-        Module getModule(String catalogName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQwMjYxMw==", "bodyText": "Maybe simply let's remove it from here and it via JdbcConnectorFactory in all places where it is used instead of this refactor?", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r432402613", "createdAt": "2020-05-29T10:42:40Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "diffHunk": "@@ -67,12 +68,13 @@ public Connector create(String catalogName, Map<String, String> requiredConfig,\n         requireNonNull(requiredConfig, \"requiredConfig is null\");\n \n         Bootstrap app = new Bootstrap(\n-                binder -> binder.bind(TypeManager.class).toInstance(context.getTypeManager()),\n-                binder -> binder.bind(NodeManager.class).toInstance(context.getNodeManager()),\n-                binder -> binder.bind(VersionEmbedder.class).toInstance(context.getVersionEmbedder()),\n-                new JdbcModule(catalogName),\n-                new CredentialProviderModule(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 47}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwOTM1NjEz", "url": "https://github.com/trinodb/trino/pull/3877#pullrequestreview-420935613", "createdAt": "2020-05-29T13:10:32Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMzoxMDozMlrOGcb-Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMzoxMTo1M1rOGccBaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ3MTYyMg==", "bodyText": "static import", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r432471622", "createdAt": "2020-05-29T13:10:32Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/test/java/io/prestosql/plugin/jdbc/TestJdbcConnectorFactory.java", "diffHunk": "@@ -22,7 +24,7 @@\n     @Test\n     public void test()\n     {\n-        ConnectorFactory connectorFactory = new JdbcConnectorFactory(\"test\", new TestingH2JdbcModule());\n+        ConnectorFactory connectorFactory = new JdbcConnectorFactory(\"test\", Modules.combine(new CredentialProviderModule(), new TestingH2JdbcModule()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ3MjAzMg==", "bodyText": "static import", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r432472032", "createdAt": "2020-05-29T13:11:15Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcPlugin.java", "diffHunk": "@@ -13,31 +13,15 @@\n  */\n package io.prestosql.plugin.jdbc;\n \n-import com.google.common.collect.ImmutableList;\n import com.google.inject.Module;\n-import io.prestosql.spi.Plugin;\n-import io.prestosql.spi.connector.ConnectorFactory;\n-\n-import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Strings.isNullOrEmpty;\n-import static java.util.Objects.requireNonNull;\n+import com.google.inject.util.Modules;\n+import io.prestosql.plugin.jdbc.credential.CredentialProviderModule;\n \n public class JdbcPlugin\n-        implements Plugin\n+        extends BaseJdbcPlugin\n {\n-    private final String name;\n-    private final Module module;\n-\n     public JdbcPlugin(String name, Module module)\n     {\n-        checkArgument(!isNullOrEmpty(name), \"name is null or empty\");\n-        this.name = name;\n-        this.module = requireNonNull(module, \"module is null\");\n-    }\n-\n-    @Override\n-    public Iterable<ConnectorFactory> getConnectorFactories()\n-    {\n-        return ImmutableList.of(new JdbcConnectorFactory(name, module));\n+        super(name, Modules.combine(new CredentialProviderModule(), module));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ3MjQyNA==", "bodyText": "I don't see this class", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r432472424", "createdAt": "2020-05-29T13:11:53Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcPlugin.java", "diffHunk": "@@ -13,31 +13,15 @@\n  */\n package io.prestosql.plugin.jdbc;\n \n-import com.google.common.collect.ImmutableList;\n import com.google.inject.Module;\n-import io.prestosql.spi.Plugin;\n-import io.prestosql.spi.connector.ConnectorFactory;\n-\n-import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Strings.isNullOrEmpty;\n-import static java.util.Objects.requireNonNull;\n+import com.google.inject.util.Modules;\n+import io.prestosql.plugin.jdbc.credential.CredentialProviderModule;\n \n public class JdbcPlugin\n-        implements Plugin\n+        extends BaseJdbcPlugin", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwOTM4Nzkw", "url": "https://github.com/trinodb/trino/pull/3877#pullrequestreview-420938790", "createdAt": "2020-05-29T13:14:33Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMzoxNDozNFrOGccHew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMzoxNDozNFrOGccHew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ3Mzk3OQ==", "bodyText": "Another though. Maybe instead of putting this module here and having BaseJdbcPlugin we could add a factory method to JdbcPlugin, like\nJdbcPlugin.createWithCredentials(name, additionalModue);\n\n?\nWhat do you think? I have a feeling that using inheritance is too heavy for this.", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r432473979", "createdAt": "2020-05-29T13:14:34Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcPlugin.java", "diffHunk": "@@ -13,31 +13,15 @@\n  */\n package io.prestosql.plugin.jdbc;\n \n-import com.google.common.collect.ImmutableList;\n import com.google.inject.Module;\n-import io.prestosql.spi.Plugin;\n-import io.prestosql.spi.connector.ConnectorFactory;\n-\n-import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Strings.isNullOrEmpty;\n-import static java.util.Objects.requireNonNull;\n+import com.google.inject.util.Modules;\n+import io.prestosql.plugin.jdbc.credential.CredentialProviderModule;\n \n public class JdbcPlugin\n-        implements Plugin\n+        extends BaseJdbcPlugin\n {\n-    private final String name;\n-    private final Module module;\n-\n     public JdbcPlugin(String name, Module module)\n     {\n-        checkArgument(!isNullOrEmpty(name), \"name is null or empty\");\n-        this.name = name;\n-        this.module = requireNonNull(module, \"module is null\");\n-    }\n-\n-    @Override\n-    public Iterable<ConnectorFactory> getConnectorFactories()\n-    {\n-        return ImmutableList.of(new JdbcConnectorFactory(name, module));\n+        super(name, Modules.combine(new CredentialProviderModule(), module));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMTQyOTAx", "url": "https://github.com/trinodb/trino/pull/3877#pullrequestreview-422142901", "createdAt": "2020-06-01T20:05:02Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMDowNTowMlrOGdYSqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMDowNTowMlrOGdYSqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ1OTg4MA==", "bodyText": "Use import static io.airlift.configuration.ConfigurationAwareModules.combine instead of list.", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r433459880", "createdAt": "2020-06-01T20:05:02Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "diffHunk": "@@ -35,14 +37,18 @@\n         implements ConnectorFactory\n {\n     private final String name;\n-    private final JdbcModuleProvider moduleProvider;\n+    private final JdbcModulesProvider moduleProvider;\n \n     public JdbcConnectorFactory(String name, Module module)\n     {\n-        this(name, JdbcModuleProvider.of(module));\n+        this(name, catalogName -> {\n+            return ImmutableList.of(", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNjI1NzM5", "url": "https://github.com/trinodb/trino/pull/3877#pullrequestreview-422625739", "createdAt": "2020-06-02T12:29:53Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMjoyOTo1M1rOGdvWHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMjoyOTo1M1rOGdvWHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgzNzU5Nw==", "bodyText": "Rename this method to withCredentialProvider?", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r433837597", "createdAt": "2020-06-02T12:29:53Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "diffHunk": "@@ -90,7 +90,7 @@ public Connector create(String catalogName, Map<String, String> requiredConfig,\n         static JdbcModuleProvider of(Module module)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "c1ad78d700173631042f45076ca973f5a592c602", "author": {"user": {"login": "MiguelWeezardo", "name": "Micha\u0142 \u015alizak"}}, "url": "https://github.com/trinodb/trino/commit/c1ad78d700173631042f45076ca973f5a592c602", "committedDate": "2020-06-02T12:33:43Z", "message": "Allow creating a JDBC connector without CredentialProviderModule"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1ad78d700173631042f45076ca973f5a592c602", "author": {"user": {"login": "MiguelWeezardo", "name": "Micha\u0142 \u015alizak"}}, "url": "https://github.com/trinodb/trino/commit/c1ad78d700173631042f45076ca973f5a592c602", "committedDate": "2020-06-02T12:33:43Z", "message": "Allow creating a JDBC connector without CredentialProviderModule"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNjkyNzEy", "url": "https://github.com/trinodb/trino/pull/3877#pullrequestreview-422692712", "createdAt": "2020-06-02T13:46:50Z", "commit": {"oid": "c1ad78d700173631042f45076ca973f5a592c602"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 527, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}