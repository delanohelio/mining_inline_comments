{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNTY0NjUy", "number": 2761, "title": "Fix reading from large Parquet files", "bodyText": "This is a fix for #2730. When\nmerging small reads, if the first range and second range are more than 2\nGB apart, mergeAdjacentDiskRanges() throw sn ArithmeticException because\nmerging those two ranges is too big to fit in a DiskRange. The correct\nbehavior is to not merge those ranges because this implies the ranges\nare farther apart than maxReadSizeBytes.\nfixes #2730", "createdAt": "2020-02-07T19:28:46Z", "url": "https://github.com/trinodb/trino/pull/2761", "merged": true, "mergeCommit": {"oid": "6a590dcea5b870848714384ea2f4ec9564490afc"}, "closed": true, "closedAt": "2020-03-19T17:52:36Z", "author": {"login": "awishnick"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcCEdBXgH2gAyMzcyNTY0NjUyOmM2MTlmNjBlZDdkYzhhYjI0MmY0NDc1MjJkMzVjYzVkMzVmNTE5Mzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcISbhrAFqTM2NTM4ODI0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c619f60ed7dc8ab242f447522d35cc5d35f51938", "author": {"user": {"login": "awishnick", "name": null}}, "url": "https://github.com/trinodb/trino/commit/c619f60ed7dc8ab242f447522d35cc5d35f51938", "committedDate": "2020-02-07T19:25:15Z", "message": "Fix reading from large Parquet files\n\nThis is a fix for https://github.com/prestosql/presto/issues/2730. When\nmerging small reads, if the first range and second range are more than 2\nGB apart, mergeAdjacentDiskRanges() throw sn ArithmeticException because\nmerging those two ranges is too big to fit in a DiskRange. The correct\nbehavior is to not merge those ranges because this implies the ranges\nare farther apart than maxReadSizeBytes."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNjExOTQ3", "url": "https://github.com/trinodb/trino/pull/2761#pullrequestreview-361611947", "createdAt": "2020-02-20T03:27:14Z", "commit": {"oid": "c619f60ed7dc8ab242f447522d35cc5d35f51938"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1Mzg4MjQ2", "url": "https://github.com/trinodb/trino/pull/2761#pullrequestreview-365388246", "createdAt": "2020-02-27T03:05:49Z", "commit": {"oid": "c619f60ed7dc8ab242f447522d35cc5d35f51938"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMzowNTo0OVrOFvD2rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMzowNTo0OVrOFvD2rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg5MDU0Mg==", "bodyText": "Wouldn't it be better to check for the problem condition instead of catching the exception afterwards?\nSomething like this:\n            if (Math.max(last.getEnd(), current.getEnd() - Math.min(last.getOffset(), current.getOffset())) <= Integer.MAX_VALUE) {\n                DiskRange merged = last.span(current);\n                if (merged.getLength() <= maxReadSizeBytes && last.getEnd() + maxMergeDistanceBytes >= current.getOffset()) {\n                    last = merged;\n                }\n            }", "url": "https://github.com/trinodb/trino/pull/2761#discussion_r384890542", "createdAt": "2020-02-27T03:05:49Z", "author": {"login": "lhofhansl"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/parquet/HdfsParquetDataSource.java", "diffHunk": "@@ -241,8 +241,15 @@ public static HdfsParquetDataSource buildHdfsParquetDataSource(\n         DiskRange last = ranges.get(0);\n         for (int i = 1; i < ranges.size(); i++) {\n             DiskRange current = ranges.get(i);\n-            DiskRange merged = last.span(current);\n-            if (merged.getLength() <= maxReadSizeBytes && last.getEnd() + maxMergeDistanceBytes >= current.getOffset()) {\n+            DiskRange merged = null;\n+            boolean blockTooLong = false;\n+            try {\n+                merged = last.span(current);\n+            }\n+            catch (ArithmeticException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c619f60ed7dc8ab242f447522d35cc5d35f51938"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1652, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}