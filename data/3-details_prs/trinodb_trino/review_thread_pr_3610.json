{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNzk2NTI5", "number": 3610, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwOTo0NTo1N1rOD461Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwOTo0NTo1N1rOD461Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDEwNzU4OnYy", "diffSide": "RIGHT", "path": "presto-spi/src/main/java/io/prestosql/spi/block/ShortArrayBlockBuilder.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwOTo0NTo1N1rOGP5ZWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjozMjo1MFrOGP-NFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMyMjIwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return new ShortArrayBlock(0, positionCount, hasNullValue ? valueIsNull : null, values);\n          \n          \n            \n                    return new ShortArrayBlock(positionCount, hasNullValue ? Optional.of(valueIsNull) : Optional.empty(), values);\n          \n      \n    \n    \n  \n\n?", "url": "https://github.com/trinodb/trino/pull/3610#discussion_r419322202", "createdAt": "2020-05-04T09:45:57Z", "author": {"login": "findepi"}, "path": "presto-spi/src/main/java/io/prestosql/spi/block/ShortArrayBlockBuilder.java", "diffHunk": "@@ -102,7 +102,7 @@ public Block build()\n         if (!hasNonNullValue) {\n             return new RunLengthEncodedBlock(NULL_VALUE_BLOCK, positionCount);\n         }\n-        return new ShortArrayBlock(0, positionCount, valueIsNull, values);\n+        return new ShortArrayBlock(0, positionCount, hasNullValue ? valueIsNull : null, values);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ed3f9f662900d4300aafbc46cd39e96cb7a2614"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMyODM0Mw==", "bodyText": "No.\nCurrent is change is coherent with every other implementation of buld() method. If we decide to go with Optional I would prefer to change all of them at once.\nAlso using Optional in Block implementation has to be conscious decision. As far I understand that could have a negative impact on performance.", "url": "https://github.com/trinodb/trino/pull/3610#discussion_r419328343", "createdAt": "2020-05-04T09:57:45Z", "author": {"login": "kokosing"}, "path": "presto-spi/src/main/java/io/prestosql/spi/block/ShortArrayBlockBuilder.java", "diffHunk": "@@ -102,7 +102,7 @@ public Block build()\n         if (!hasNonNullValue) {\n             return new RunLengthEncodedBlock(NULL_VALUE_BLOCK, positionCount);\n         }\n-        return new ShortArrayBlock(0, positionCount, valueIsNull, values);\n+        return new ShortArrayBlock(0, positionCount, hasNullValue ? valueIsNull : null, values);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMyMjIwMg=="}, "originalCommit": {"oid": "1ed3f9f662900d4300aafbc46cd39e96cb7a2614"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQwMDk4MQ==", "bodyText": "Also using Optional in Block implementation has to be conscious decision. As far I understand that could have a negative impact on performance.\n\nThe constructor accepting optional already exists (my proposal compiles).\n\nCurrent is change is coherent with every other implementation of buld() method.\n\nThanks for the context.\nThen leave as is.", "url": "https://github.com/trinodb/trino/pull/3610#discussion_r419400981", "createdAt": "2020-05-04T12:32:50Z", "author": {"login": "findepi"}, "path": "presto-spi/src/main/java/io/prestosql/spi/block/ShortArrayBlockBuilder.java", "diffHunk": "@@ -102,7 +102,7 @@ public Block build()\n         if (!hasNonNullValue) {\n             return new RunLengthEncodedBlock(NULL_VALUE_BLOCK, positionCount);\n         }\n-        return new ShortArrayBlock(0, positionCount, valueIsNull, values);\n+        return new ShortArrayBlock(0, positionCount, hasNullValue ? valueIsNull : null, values);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMyMjIwMg=="}, "originalCommit": {"oid": "1ed3f9f662900d4300aafbc46cd39e96cb7a2614"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 10, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}