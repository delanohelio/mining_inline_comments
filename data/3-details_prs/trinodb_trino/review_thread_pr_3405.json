{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxODQxMjgx", "number": 3405, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMDo0ODoxOVrODw21nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMTo1OTowOFrODw3y5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTU2NzAxOnYy", "diffSide": "RIGHT", "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearchIntegrationSmokeTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMDo0ODoxOVrOGEFeoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMToxNzoyNlrOGEGJLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzNzI0OA==", "bodyText": "Does the client.index() API call fail for ES 7?", "url": "https://github.com/trinodb/trino/pull/3405#discussion_r406937248", "createdAt": "2020-04-10T20:48:19Z", "author": {"login": "martint"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearchIntegrationSmokeTest.java", "diffHunk": "@@ -752,12 +739,15 @@ public void testMultiIndexAlias()\n                 \"SELECT (SELECT count(*) FROM region) + (SELECT count(*) FROM nation)\");\n     }\n \n+    protected abstract String indexEndpoint(String index, String docId);\n+\n     private void index(String index, Map<String, Object> document)\n             throws IOException\n     {\n-        client.index(new IndexRequest(index, \"doc\")\n-                .source(document)\n-                .setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE));\n+        String json = new ObjectMapper().writeValueAsString(document);\n+        String endpoint = format(\"%s?refresh\", indexEndpoint(index, String.valueOf(System.nanoTime())));\n+        client.getLowLevelClient()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 285}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0ODE0MA==", "bodyText": "yes.. in version 7 al documents are of doc type and is unnecessary to pass\nthis fails: new IndexRequest(index, \"doc\")", "url": "https://github.com/trinodb/trino/pull/3405#discussion_r406948140", "createdAt": "2020-04-10T21:17:26Z", "author": {"login": "eskabetxe"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearchIntegrationSmokeTest.java", "diffHunk": "@@ -752,12 +739,15 @@ public void testMultiIndexAlias()\n                 \"SELECT (SELECT count(*) FROM region) + (SELECT count(*) FROM nation)\");\n     }\n \n+    protected abstract String indexEndpoint(String index, String docId);\n+\n     private void index(String index, Map<String, Object> document)\n             throws IOException\n     {\n-        client.index(new IndexRequest(index, \"doc\")\n-                .source(document)\n-                .setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE));\n+        String json = new ObjectMapper().writeValueAsString(document);\n+        String endpoint = format(\"%s?refresh\", indexEndpoint(index, String.valueOf(System.nanoTime())));\n+        client.getLowLevelClient()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzNzI0OA=="}, "originalCommit": null, "originalPosition": 285}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTU3NzU1OnYy", "diffSide": "RIGHT", "path": "presto-elasticsearch/pom.xml", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMDo1MToyNlrOGEFlTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODozOToyNlrOGELi8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzODk1OA==", "bodyText": "What's this for?", "url": "https://github.com/trinodb/trino/pull/3405#discussion_r406938958", "createdAt": "2020-04-10T20:51:26Z", "author": {"login": "martint"}, "path": "presto-elasticsearch/pom.xml", "diffHunk": "@@ -300,10 +300,15 @@\n         </dependency>\n \n         <!-- for testing -->\n+        <dependency>\n+            <groupId>org.testcontainers</groupId>\n+            <artifactId>testcontainers</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0NjE3NA==", "bodyText": "the dependency check fails at this is used and not provided", "url": "https://github.com/trinodb/trino/pull/3405#discussion_r406946174", "createdAt": "2020-04-10T21:11:12Z", "author": {"login": "eskabetxe"}, "path": "presto-elasticsearch/pom.xml", "diffHunk": "@@ -300,10 +300,15 @@\n         </dependency>\n \n         <!-- for testing -->\n+        <dependency>\n+            <groupId>org.testcontainers</groupId>\n+            <artifactId>testcontainers</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzODk1OA=="}, "originalCommit": null, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2MTAwNw==", "bodyText": "Ah, that's because TestElasticsearchIntegrationSmokeTest is importing org.testcontainers.shaded.com.fasterxml.jackson.databind.ObjectMapper. See my comment below.", "url": "https://github.com/trinodb/trino/pull/3405#discussion_r406961007", "createdAt": "2020-04-10T21:58:31Z", "author": {"login": "martint"}, "path": "presto-elasticsearch/pom.xml", "diffHunk": "@@ -300,10 +300,15 @@\n         </dependency>\n \n         <!-- for testing -->\n+        <dependency>\n+            <groupId>org.testcontainers</groupId>\n+            <artifactId>testcontainers</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzODk1OA=="}, "originalCommit": null, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzNjY1Nw==", "bodyText": "fixed", "url": "https://github.com/trinodb/trino/pull/3405#discussion_r407036657", "createdAt": "2020-04-11T08:39:26Z", "author": {"login": "eskabetxe"}, "path": "presto-elasticsearch/pom.xml", "diffHunk": "@@ -300,10 +300,15 @@\n         </dependency>\n \n         <!-- for testing -->\n+        <dependency>\n+            <groupId>org.testcontainers</groupId>\n+            <artifactId>testcontainers</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzODk1OA=="}, "originalCommit": null, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTU3ODE3OnYy", "diffSide": "LEFT", "path": "presto-elasticsearch/pom.xml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMDo1MTo0NFrOGEFlqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODo0NDo0M1rOGELkwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzOTA1MA==", "bodyText": "Unrelated change?", "url": "https://github.com/trinodb/trino/pull/3405#discussion_r406939050", "createdAt": "2020-04-10T20:51:44Z", "author": {"login": "martint"}, "path": "presto-elasticsearch/pom.xml", "diffHunk": "@@ -300,10 +300,15 @@\n         </dependency>\n \n         <!-- for testing -->\n+        <dependency>\n+            <groupId>org.testcontainers</groupId>\n+            <artifactId>testcontainers</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n         <dependency>\n             <groupId>org.testcontainers</groupId>\n             <artifactId>elasticsearch</artifactId>\n-            <version>1.12.3</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0NjU0MA==", "bodyText": "as I have to add\n<dependency> <groupId>org.testcontainers</groupId> <artifactId>testcontainers</artifactId> <scope>test</scope> </dependency>\nand in presto-root testcontainvers have 1.12.4 version this fails", "url": "https://github.com/trinodb/trino/pull/3405#discussion_r406946540", "createdAt": "2020-04-10T21:12:24Z", "author": {"login": "eskabetxe"}, "path": "presto-elasticsearch/pom.xml", "diffHunk": "@@ -300,10 +300,15 @@\n         </dependency>\n \n         <!-- for testing -->\n+        <dependency>\n+            <groupId>org.testcontainers</groupId>\n+            <artifactId>testcontainers</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n         <dependency>\n             <groupId>org.testcontainers</groupId>\n             <artifactId>elasticsearch</artifactId>\n-            <version>1.12.3</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzOTA1MA=="}, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzNzEyMg==", "bodyText": "reverted this, rebasing has fix this problem", "url": "https://github.com/trinodb/trino/pull/3405#discussion_r407037122", "createdAt": "2020-04-11T08:44:43Z", "author": {"login": "eskabetxe"}, "path": "presto-elasticsearch/pom.xml", "diffHunk": "@@ -300,10 +300,15 @@\n         </dependency>\n \n         <!-- for testing -->\n+        <dependency>\n+            <groupId>org.testcontainers</groupId>\n+            <artifactId>testcontainers</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n         <dependency>\n             <groupId>org.testcontainers</groupId>\n             <artifactId>elasticsearch</artifactId>\n-            <version>1.12.3</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzOTA1MA=="}, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTU3OTI3OnYy", "diffSide": "RIGHT", "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearch6IntegrationSmokeTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMDo1MjowOVrOGEFmQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMToxMzoxNlrOGEGEGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzOTIwMQ==", "bodyText": "Make this public, as it's part of the public interface of this class", "url": "https://github.com/trinodb/trino/pull/3405#discussion_r406939201", "createdAt": "2020-04-10T20:52:09Z", "author": {"login": "martint"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearch6IntegrationSmokeTest.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.elasticsearch;\n+\n+import static java.lang.String.format;\n+\n+public class TestElasticsearch6IntegrationSmokeTest\n+        extends TestElasticsearchIntegrationSmokeTest\n+{\n+    TestElasticsearch6IntegrationSmokeTest()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0Njg0MQ==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/3405#discussion_r406946841", "createdAt": "2020-04-10T21:13:16Z", "author": {"login": "eskabetxe"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearch6IntegrationSmokeTest.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.elasticsearch;\n+\n+import static java.lang.String.format;\n+\n+public class TestElasticsearch6IntegrationSmokeTest\n+        extends TestElasticsearchIntegrationSmokeTest\n+{\n+    TestElasticsearch6IntegrationSmokeTest()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzOTIwMQ=="}, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTU3OTc0OnYy", "diffSide": "RIGHT", "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearch7IntegrationSmokeTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMDo1MjoyNVrOGEFmjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMToxMzoyNFrOGEGEOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzOTI3OA==", "bodyText": "Make this public, as it's part of the public interface of this class", "url": "https://github.com/trinodb/trino/pull/3405#discussion_r406939278", "createdAt": "2020-04-10T20:52:25Z", "author": {"login": "martint"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearch7IntegrationSmokeTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.elasticsearch;\n+\n+import static java.lang.String.format;\n+\n+public class TestElasticsearch7IntegrationSmokeTest\n+        extends TestElasticsearchIntegrationSmokeTest\n+{\n+    TestElasticsearch7IntegrationSmokeTest()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0Njg3Mg==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/3405#discussion_r406946872", "createdAt": "2020-04-10T21:13:24Z", "author": {"login": "eskabetxe"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearch7IntegrationSmokeTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.elasticsearch;\n+\n+import static java.lang.String.format;\n+\n+public class TestElasticsearch7IntegrationSmokeTest\n+        extends TestElasticsearchIntegrationSmokeTest\n+{\n+    TestElasticsearch7IntegrationSmokeTest()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzOTI3OA=="}, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTYwMTQzOnYy", "diffSide": "RIGHT", "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearch7IntegrationSmokeTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMTowMDo0NlrOGEFz4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMToxNjoxNlrOGEGHxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MjY4OA==", "bodyText": "Why are we assigning a docId to documents? this was previously unnecessary?", "url": "https://github.com/trinodb/trino/pull/3405#discussion_r406942688", "createdAt": "2020-04-10T21:00:46Z", "author": {"login": "martint"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearch7IntegrationSmokeTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.elasticsearch;\n+\n+import static java.lang.String.format;\n+\n+public class TestElasticsearch7IntegrationSmokeTest\n+        extends TestElasticsearchIntegrationSmokeTest\n+{\n+    TestElasticsearch7IntegrationSmokeTest()\n+    {\n+        super(\"7.0.0\");\n+    }\n+\n+    @Override\n+    protected String indexEndpoint(String index, String docId)\n+    {\n+        return format(\"/%s/_doc/%s\", index, docId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0Nzc4MA==", "bodyText": "high level api generates a random id..\nall documents have an _id field, this is that as in low level api we have to provided it.. is generated automatic but we have to put it on url", "url": "https://github.com/trinodb/trino/pull/3405#discussion_r406947780", "createdAt": "2020-04-10T21:16:16Z", "author": {"login": "eskabetxe"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearch7IntegrationSmokeTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.elasticsearch;\n+\n+import static java.lang.String.format;\n+\n+public class TestElasticsearch7IntegrationSmokeTest\n+        extends TestElasticsearchIntegrationSmokeTest\n+{\n+    TestElasticsearch7IntegrationSmokeTest()\n+    {\n+        super(\"7.0.0\");\n+    }\n+\n+    @Override\n+    protected String indexEndpoint(String index, String docId)\n+    {\n+        return format(\"/%s/_doc/%s\", index, docId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MjY4OA=="}, "originalCommit": null, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTcyMTA2OnYy", "diffSide": "RIGHT", "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearchIntegrationSmokeTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMTo1Nzo0MFrOGEG6jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODo0MDoxN1rOGELjPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2MDc4Mg==", "bodyText": "Don't import the ObjectMapper from the shaded version of jackson inside testcontainers. Add a dependency for jackson to the module, instead.", "url": "https://github.com/trinodb/trino/pull/3405#discussion_r406960782", "createdAt": "2020-04-10T21:57:40Z", "author": {"login": "martint"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearchIntegrationSmokeTest.java", "diffHunk": "@@ -23,11 +23,10 @@\n import org.apache.http.HttpHost;\n import org.apache.http.entity.ContentType;\n import org.apache.http.nio.entity.NStringEntity;\n-import org.elasticsearch.action.index.IndexRequest;\n-import org.elasticsearch.action.support.WriteRequest;\n import org.elasticsearch.client.RestClient;\n import org.elasticsearch.client.RestHighLevelClient;\n import org.intellij.lang.annotations.Language;\n+import org.testcontainers.shaded.com.fasterxml.jackson.databind.ObjectMapper;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzNjczNA==", "bodyText": "I dont know why is importing that, jackson is a dependency of this module\nfixed", "url": "https://github.com/trinodb/trino/pull/3405#discussion_r407036734", "createdAt": "2020-04-11T08:40:17Z", "author": {"login": "eskabetxe"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearchIntegrationSmokeTest.java", "diffHunk": "@@ -23,11 +23,10 @@\n import org.apache.http.HttpHost;\n import org.apache.http.entity.ContentType;\n import org.apache.http.nio.entity.NStringEntity;\n-import org.elasticsearch.action.index.IndexRequest;\n-import org.elasticsearch.action.support.WriteRequest;\n import org.elasticsearch.client.RestClient;\n import org.elasticsearch.client.RestHighLevelClient;\n import org.intellij.lang.annotations.Language;\n+import org.testcontainers.shaded.com.fasterxml.jackson.databind.ObjectMapper;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2MDc4Mg=="}, "originalCommit": null, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTcyMzkwOnYy", "diffSide": "RIGHT", "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearchIntegrationSmokeTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMTo1OTowOFrOGEG8LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODo0MDoyNVrOGELjRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2MTE5Nw==", "bodyText": "Let's call this class BaseElasticsearchSmokeTest", "url": "https://github.com/trinodb/trino/pull/3405#discussion_r406961197", "createdAt": "2020-04-10T21:59:08Z", "author": {"login": "martint"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearchIntegrationSmokeTest.java", "diffHunk": "@@ -44,17 +43,23 @@\n import static java.lang.String.format;\n import static org.assertj.core.api.Assertions.assertThatThrownBy;\n \n-public class TestElasticsearchIntegrationSmokeTest\n+public abstract class TestElasticsearchIntegrationSmokeTest", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzNjc0Mw==", "bodyText": "changed", "url": "https://github.com/trinodb/trino/pull/3405#discussion_r407036743", "createdAt": "2020-04-11T08:40:25Z", "author": {"login": "eskabetxe"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearchIntegrationSmokeTest.java", "diffHunk": "@@ -44,17 +43,23 @@\n import static java.lang.String.format;\n import static org.assertj.core.api.Assertions.assertThatThrownBy;\n \n-public class TestElasticsearchIntegrationSmokeTest\n+public abstract class TestElasticsearchIntegrationSmokeTest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2MTE5Nw=="}, "originalCommit": null, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 400, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}