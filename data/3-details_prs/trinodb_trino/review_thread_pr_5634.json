{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3NzI3OTc0", "number": 5634, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMToyODo1MFrOEwuLVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwOToyNzoyNFrOEx0Kyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NTIzNjY5OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBucketing.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMToyODo1MFrOHmdKKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNjoyNTowNlrOHoCHTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA4NTY3NA==", "bodyText": "check effectivePredicate.isAll() should go to the method below", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r510085674", "createdAt": "2020-10-22T11:28:50Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBucketing.java", "diffHunk": "@@ -203,21 +204,35 @@ static int getBucketNumber(int hashCode, int bucketCount)\n         return Optional.of(new HiveBucketHandle(bucketColumns.build(), bucketingVersion, bucketCount, bucketCount));\n     }\n \n-    public static Optional<HiveBucketFilter> getHiveBucketFilter(Table table, TupleDomain<ColumnHandle> effectivePredicate)\n+    public static Optional<HiveBucketFilter> getHiveBucketFilter(HiveTableHandle hiveTable, TupleDomain<ColumnHandle> effectivePredicate)\n     {\n-        if (table.getStorage().getBucketProperty().isEmpty()) {\n+        if (hiveTable.getBucketHandle().isEmpty() || effectivePredicate.isAll()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTczOTcyNg==", "bodyText": "i got rid of this and keep the code flow similar to the current one", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r511739726", "createdAt": "2020-10-26T06:25:06Z", "author": {"login": "raunaqmorarka"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBucketing.java", "diffHunk": "@@ -203,21 +204,35 @@ static int getBucketNumber(int hashCode, int bucketCount)\n         return Optional.of(new HiveBucketHandle(bucketColumns.build(), bucketingVersion, bucketCount, bucketCount));\n     }\n \n-    public static Optional<HiveBucketFilter> getHiveBucketFilter(Table table, TupleDomain<ColumnHandle> effectivePredicate)\n+    public static Optional<HiveBucketFilter> getHiveBucketFilter(HiveTableHandle hiveTable, TupleDomain<ColumnHandle> effectivePredicate)\n     {\n-        if (table.getStorage().getBucketProperty().isEmpty()) {\n+        if (hiveTable.getBucketHandle().isEmpty() || effectivePredicate.isAll()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA4NTY3NA=="}, "originalCommit": null, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMDQyNjU0OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBucketing.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMzo1NDozNlrOHnO5NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODowMjoxOVrOHob_xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwMDUzMg==", "bodyText": "add getColumns to HiveColumnHandle that would return both partition and data columns", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r510900532", "createdAt": "2020-10-23T13:54:36Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBucketing.java", "diffHunk": "@@ -203,21 +204,24 @@ static int getBucketNumber(int hashCode, int bucketCount)\n         return Optional.of(new HiveBucketHandle(bucketColumns.build(), bucketingVersion, bucketCount, bucketCount));\n     }\n \n-    public static Optional<HiveBucketFilter> getHiveBucketFilter(Table table, TupleDomain<ColumnHandle> effectivePredicate)\n+    public static Optional<HiveBucketFilter> getHiveBucketFilter(HiveTableHandle hiveTable, TupleDomain<ColumnHandle> effectivePredicate)\n     {\n-        if (table.getStorage().getBucketProperty().isEmpty()) {\n+        if (hiveTable.getBucketHandle().isEmpty()) {\n             return Optional.empty();\n         }\n-\n-        if (bucketedOnTimestamp(table.getStorage().getBucketProperty().get(), table)) {\n+        HiveBucketProperty hiveBucketProperty = hiveTable.getBucketHandle().get().toTableBucketProperty();\n+        List<Column> dataColumns = hiveTable.getDataColumns().stream()\n+                .map(column -> new Column(column.getName(), column.getHiveType(), column.getComment()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTczOTE4MQ==", "bodyText": "it's not needed since using dataColumns was not the cause of test failure", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r511739181", "createdAt": "2020-10-26T06:22:58Z", "author": {"login": "raunaqmorarka"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBucketing.java", "diffHunk": "@@ -203,21 +204,24 @@ static int getBucketNumber(int hashCode, int bucketCount)\n         return Optional.of(new HiveBucketHandle(bucketColumns.build(), bucketingVersion, bucketCount, bucketCount));\n     }\n \n-    public static Optional<HiveBucketFilter> getHiveBucketFilter(Table table, TupleDomain<ColumnHandle> effectivePredicate)\n+    public static Optional<HiveBucketFilter> getHiveBucketFilter(HiveTableHandle hiveTable, TupleDomain<ColumnHandle> effectivePredicate)\n     {\n-        if (table.getStorage().getBucketProperty().isEmpty()) {\n+        if (hiveTable.getBucketHandle().isEmpty()) {\n             return Optional.empty();\n         }\n-\n-        if (bucketedOnTimestamp(table.getStorage().getBucketProperty().get(), table)) {\n+        HiveBucketProperty hiveBucketProperty = hiveTable.getBucketHandle().get().toTableBucketProperty();\n+        List<Column> dataColumns = hiveTable.getDataColumns().stream()\n+                .map(column -> new Column(column.getName(), column.getHiveType(), column.getComment()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwMDUzMg=="}, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgyMzY5Mw==", "bodyText": "Right, but I've seen similar pattern:\nnew Column(column.getName(), column.getHiveType(), column.getComment()))\nin many places.\nWe should at leas have HiveColumnHandle#toMetastoreColumn", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r511823693", "createdAt": "2020-10-26T09:31:46Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBucketing.java", "diffHunk": "@@ -203,21 +204,24 @@ static int getBucketNumber(int hashCode, int bucketCount)\n         return Optional.of(new HiveBucketHandle(bucketColumns.build(), bucketingVersion, bucketCount, bucketCount));\n     }\n \n-    public static Optional<HiveBucketFilter> getHiveBucketFilter(Table table, TupleDomain<ColumnHandle> effectivePredicate)\n+    public static Optional<HiveBucketFilter> getHiveBucketFilter(HiveTableHandle hiveTable, TupleDomain<ColumnHandle> effectivePredicate)\n     {\n-        if (table.getStorage().getBucketProperty().isEmpty()) {\n+        if (hiveTable.getBucketHandle().isEmpty()) {\n             return Optional.empty();\n         }\n-\n-        if (bucketedOnTimestamp(table.getStorage().getBucketProperty().get(), table)) {\n+        HiveBucketProperty hiveBucketProperty = hiveTable.getBucketHandle().get().toTableBucketProperty();\n+        List<Column> dataColumns = hiveTable.getDataColumns().stream()\n+                .map(column -> new Column(column.getName(), column.getHiveType(), column.getComment()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwMDUzMg=="}, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg0ODAzOA==", "bodyText": "added HiveColumnHandle#toMetastoreColumn", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r511848038", "createdAt": "2020-10-26T10:11:46Z", "author": {"login": "raunaqmorarka"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBucketing.java", "diffHunk": "@@ -203,21 +204,24 @@ static int getBucketNumber(int hashCode, int bucketCount)\n         return Optional.of(new HiveBucketHandle(bucketColumns.build(), bucketingVersion, bucketCount, bucketCount));\n     }\n \n-    public static Optional<HiveBucketFilter> getHiveBucketFilter(Table table, TupleDomain<ColumnHandle> effectivePredicate)\n+    public static Optional<HiveBucketFilter> getHiveBucketFilter(HiveTableHandle hiveTable, TupleDomain<ColumnHandle> effectivePredicate)\n     {\n-        if (table.getStorage().getBucketProperty().isEmpty()) {\n+        if (hiveTable.getBucketHandle().isEmpty()) {\n             return Optional.empty();\n         }\n-\n-        if (bucketedOnTimestamp(table.getStorage().getBucketProperty().get(), table)) {\n+        HiveBucketProperty hiveBucketProperty = hiveTable.getBucketHandle().get().toTableBucketProperty();\n+        List<Column> dataColumns = hiveTable.getDataColumns().stream()\n+                .map(column -> new Column(column.getName(), column.getHiveType(), column.getComment()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwMDUzMg=="}, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk5NTc0Nw==", "bodyText": "Could you replace usages of new Column(column.getName(), column.getHiveType(), column.getComment())) in separate commit?", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r511995747", "createdAt": "2020-10-26T14:20:06Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBucketing.java", "diffHunk": "@@ -203,21 +204,24 @@ static int getBucketNumber(int hashCode, int bucketCount)\n         return Optional.of(new HiveBucketHandle(bucketColumns.build(), bucketingVersion, bucketCount, bucketCount));\n     }\n \n-    public static Optional<HiveBucketFilter> getHiveBucketFilter(Table table, TupleDomain<ColumnHandle> effectivePredicate)\n+    public static Optional<HiveBucketFilter> getHiveBucketFilter(HiveTableHandle hiveTable, TupleDomain<ColumnHandle> effectivePredicate)\n     {\n-        if (table.getStorage().getBucketProperty().isEmpty()) {\n+        if (hiveTable.getBucketHandle().isEmpty()) {\n             return Optional.empty();\n         }\n-\n-        if (bucketedOnTimestamp(table.getStorage().getBucketProperty().get(), table)) {\n+        HiveBucketProperty hiveBucketProperty = hiveTable.getBucketHandle().get().toTableBucketProperty();\n+        List<Column> dataColumns = hiveTable.getDataColumns().stream()\n+                .map(column -> new Column(column.getName(), column.getHiveType(), column.getComment()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwMDUzMg=="}, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2Mzc4Mw==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r512163783", "createdAt": "2020-10-26T18:02:19Z", "author": {"login": "raunaqmorarka"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBucketing.java", "diffHunk": "@@ -203,21 +204,24 @@ static int getBucketNumber(int hashCode, int bucketCount)\n         return Optional.of(new HiveBucketHandle(bucketColumns.build(), bucketingVersion, bucketCount, bucketCount));\n     }\n \n-    public static Optional<HiveBucketFilter> getHiveBucketFilter(Table table, TupleDomain<ColumnHandle> effectivePredicate)\n+    public static Optional<HiveBucketFilter> getHiveBucketFilter(HiveTableHandle hiveTable, TupleDomain<ColumnHandle> effectivePredicate)\n     {\n-        if (table.getStorage().getBucketProperty().isEmpty()) {\n+        if (hiveTable.getBucketHandle().isEmpty()) {\n             return Optional.empty();\n         }\n-\n-        if (bucketedOnTimestamp(table.getStorage().getBucketProperty().get(), table)) {\n+        HiveBucketProperty hiveBucketProperty = hiveTable.getBucketHandle().get().toTableBucketProperty();\n+        List<Column> dataColumns = hiveTable.getDataColumns().stream()\n+                .map(column -> new Column(column.getName(), column.getHiveType(), column.getComment()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwMDUzMg=="}, "originalCommit": null, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMDQzNTI1OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBucketing.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMzo1NjoyOFrOHnO-jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNTo1Mjo0NVrOHoBnqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwMTkwMw==", "bodyText": "add override with HiveTableHandle as argument", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r510901903", "createdAt": "2020-10-23T13:56:28Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBucketing.java", "diffHunk": "@@ -307,10 +311,15 @@ public static BucketingVersion getBucketingVersion(Map<String, String> tableProp\n     }\n \n     public static boolean bucketedOnTimestamp(HiveBucketProperty bucketProperty, Table table)\n+    {\n+        return bucketedOnTimestamp(bucketProperty, table.getDataColumns(), table.getTableName());\n+    }\n+\n+    public static boolean bucketedOnTimestamp(HiveBucketProperty bucketProperty, List<Column> dataColumns, String tableName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTczMTYyNA==", "bodyText": "avoiding that because i want to avoid pulling out hiveBucketProperty from HiveTableHandle twice", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r511731624", "createdAt": "2020-10-26T05:52:45Z", "author": {"login": "raunaqmorarka"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBucketing.java", "diffHunk": "@@ -307,10 +311,15 @@ public static BucketingVersion getBucketingVersion(Map<String, String> tableProp\n     }\n \n     public static boolean bucketedOnTimestamp(HiveBucketProperty bucketProperty, Table table)\n+    {\n+        return bucketedOnTimestamp(bucketProperty, table.getDataColumns(), table.getTableName());\n+    }\n+\n+    public static boolean bucketedOnTimestamp(HiveBucketProperty bucketProperty, List<Column> dataColumns, String tableName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwMTkwMw=="}, "originalCommit": null, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMDQ0MjQ1OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBucketing.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMzo1ODowMlrOHnPC0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNjowMTowN1rOHoBvmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwMjk5Mw==", "bodyText": "you can just pass HiveTableHandle hiveTable, no need for hiveBucketProperty", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r510902993", "createdAt": "2020-10-23T13:58:02Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBucketing.java", "diffHunk": "@@ -241,19 +245,19 @@ static int getBucketNumber(int hashCode, int bucketCount)\n         return Optional.of(new HiveBucketFilter(builder.build()));\n     }\n \n-    private static Optional<Set<Integer>> getHiveBuckets(Table table, Map<ColumnHandle, List<NullableValue>> bindings)\n+    private static Optional<Set<Integer>> getHiveBuckets(HiveBucketProperty hiveBucketProperty, HiveTableHandle hiveTable, Map<ColumnHandle, List<NullableValue>> bindings)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTczMzY1Nw==", "bodyText": "Changed to pass HiveBucketProperty hiveBucketProperty, List<Column> dataColumns instead of HiveBucketProperty hiveBucketProperty, HiveTableHandle hiveTable", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r511733657", "createdAt": "2020-10-26T06:01:07Z", "author": {"login": "raunaqmorarka"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBucketing.java", "diffHunk": "@@ -241,19 +245,19 @@ static int getBucketNumber(int hashCode, int bucketCount)\n         return Optional.of(new HiveBucketFilter(builder.build()));\n     }\n \n-    private static Optional<Set<Integer>> getHiveBuckets(Table table, Map<ColumnHandle, List<NullableValue>> bindings)\n+    private static Optional<Set<Integer>> getHiveBuckets(HiveBucketProperty hiveBucketProperty, HiveTableHandle hiveTable, Map<ColumnHandle, List<NullableValue>> bindings)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwMjk5Mw=="}, "originalCommit": null, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNjcwNDExOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/alluxio/ProtoUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwOToyNzoyNFrOHoHDlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwOToyNzoyNFrOHoHDlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgyMDY5Mw==", "bodyText": "make this single line.", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r511820693", "createdAt": "2020-10-26T09:27:24Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/alluxio/ProtoUtils.java", "diffHunk": "@@ -151,7 +153,8 @@ static SortingColumn fromProto(alluxio.grpc.table.layout.hive.SortingColumn colu\n         List<SortingColumn> sortedBy = property.getSortedByList().stream()\n                 .map(ProtoUtils::fromProto)\n                 .collect(toImmutableList());\n-        return Optional.of(new HiveBucketProperty(property.getBucketedByList(), HiveBucketing.BucketingVersion.BUCKETING_V1,\n+        HiveBucketing.BucketingVersion bucketingVersion = HiveBucketing.getBucketingVersion(tableParameters);\n+        return Optional.of(new HiveBucketProperty(property.getBucketedByList(), bucketingVersion,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4494, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}