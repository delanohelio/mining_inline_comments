{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NzUyOTUz", "number": 5057, "title": "TupleDomain small improvements", "bodyText": "", "createdAt": "2020-09-02T11:25:30Z", "url": "https://github.com/trinodb/trino/pull/5057", "merged": true, "mergeCommit": {"oid": "cdc8270d15d8a37e2d4cc0149a53db4f8fa44f79"}, "closed": true, "closedAt": "2020-09-03T15:46:09Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdE6MgOgH2gAyNDc3NzUyOTUzOjVhOGIxZGVhNjNlMTM2Zjg1MDQ4ZmRjNmEyNjU4ZTQwN2IyZWIxMmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdE6vqOgFqTQ4MDc0Njc0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5a8b1dea63e136f85048fdc6a2658e407b2eb12a", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/5a8b1dea63e136f85048fdc6a2658e407b2eb12a", "committedDate": "2020-09-02T11:21:05Z", "message": "Validate parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50a645c20b6bc55e7d31843be994c0f31c5af0da", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/50a645c20b6bc55e7d31843be994c0f31c5af0da", "committedDate": "2020-09-02T11:21:22Z", "message": "Short-circuit intersect when one of the operands is ALL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee267cbf52e2c3eb06fe4ed2192194fc67746167", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/ee267cbf52e2c3eb06fe4ed2192194fc67746167", "committedDate": "2020-09-02T11:24:39Z", "message": "Introduce NONE and ALL singletons"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a314dbf0c478d7d08a1a259ec417959b2f9ee86", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/2a314dbf0c478d7d08a1a259ec417959b2f9ee86", "committedDate": "2020-09-02T11:29:12Z", "message": "Short-circuit transform when domain is ALL"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwNzQ2NzQ4", "url": "https://github.com/trinodb/trino/pull/5057#pullrequestreview-480746748", "createdAt": "2020-09-02T11:58:20Z", "commit": {"oid": "ee267cbf52e2c3eb06fe4ed2192194fc67746167"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMTo1ODoyMFrOHLrvXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMTo1OToyNlrOHLrxhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAxMzAyMQ==", "bodyText": "what about none?", "url": "https://github.com/trinodb/trino/pull/5057#discussion_r482013021", "createdAt": "2020-09-02T11:58:20Z", "author": {"login": "sopel39"}, "path": "presto-spi/src/main/java/io/prestosql/spi/predicate/TupleDomain.java", "diffHunk": "@@ -76,17 +80,23 @@ private TupleDomain(Optional<Map<T, Domain>> domains)\n \n     public static <T> TupleDomain<T> withColumnDomains(Map<T, Domain> domains)\n     {\n-        return new TupleDomain<>(Optional.of(requireNonNull(domains, \"domains is null\")));\n+        requireNonNull(domains, \"domains is null\");\n+        if (domains.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee267cbf52e2c3eb06fe4ed2192194fc67746167"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAxMzU3NA==", "bodyText": "just use .get()? It cannot be empty at this point", "url": "https://github.com/trinodb/trino/pull/5057#discussion_r482013574", "createdAt": "2020-09-02T11:59:26Z", "author": {"login": "sopel39"}, "path": "presto-spi/src/main/java/io/prestosql/spi/predicate/TupleDomain.java", "diffHunk": "@@ -434,12 +434,16 @@ else if (isNone()) {\n \n     public <U> TupleDomain<U> transform(Function<T, U> function)\n     {\n-        if (domains.isEmpty()) {\n-            return TupleDomain.none();\n+        if (isNone()) {\n+            return none();\n+        }\n+        if (isAll()) {\n+            return all();\n         }\n \n-        HashMap<U, Domain> result = new LinkedHashMap<>(domains.get().size());\n-        for (Map.Entry<T, Domain> entry : domains.get().entrySet()) {\n+        Map<T, Domain> domains = this.domains.orElseThrow();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a314dbf0c478d7d08a1a259ec417959b2f9ee86"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3849, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}