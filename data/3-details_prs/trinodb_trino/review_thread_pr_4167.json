{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4Mzg1ODQ4", "number": 4167, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDo1Mzo0NFrOEH6sWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNzo0OTozOVrOEIQaMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NzM3MTE0OnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/common/Standard.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDo1Mzo0NFrOGnj7-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDo1Mzo0NFrOGnj7-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEzNjQ0MQ==", "bodyText": "wicked :)", "url": "https://github.com/trinodb/trino/pull/4167#discussion_r444136441", "createdAt": "2020-06-23T10:53:44Z", "author": {"login": "wendigo"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/common/Standard.java", "diffHunk": "@@ -117,4 +128,27 @@ public static DockerContainer createPrestoContainer(DockerFiles dockerFiles, Pat\n                 .waitingFor(Wait.forLogMessage(\".*======== SERVER STARTED ========.*\", 1))\n                 .withStartupTimeout(Duration.ofMinutes(5));\n     }\n+\n+    public static void enablePrestoJavaDebugger(DockerContainer container, int debugPort)\n+    {\n+        try {\n+            FileAttribute<Set<PosixFilePermission>> rwx = PosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(\"rwxrwxrwx\"));\n+            Path script = Files.createTempFile(\"enable-java-debugger\", \".sh\", rwx);\n+            Files.writeString(\n+                    script,\n+                    format(\n+                            \"#!/bin/bash\\n\" +\n+                                    \"printf '%%s\\\\n' '%s' >> '%s'\\n\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb491f6d793c31a4f247a61c14390946bdbff65d"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDkyOTEzOnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/common/Standard.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNzo0OTozOVrOGoG22Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTowMzoxNVrOGoJb0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDcwODU2OQ==", "bodyText": "This format is too complicated. You mix concatenation and format. Also you use format to concatenate two string literals.\nLet's inline and use only concatenation.\nAlso I know that some people would extract a bash script from that.", "url": "https://github.com/trinodb/trino/pull/4167#discussion_r444708569", "createdAt": "2020-06-24T07:49:39Z", "author": {"login": "kokosing"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/common/Standard.java", "diffHunk": "@@ -117,4 +128,27 @@ public static DockerContainer createPrestoContainer(DockerFiles dockerFiles, Pat\n                 .waitingFor(Wait.forLogMessage(\".*======== SERVER STARTED ========.*\", 1))\n                 .withStartupTimeout(Duration.ofMinutes(5));\n     }\n+\n+    public static void enablePrestoJavaDebugger(DockerContainer container, int debugPort)\n+    {\n+        try {\n+            FileAttribute<Set<PosixFilePermission>> rwx = PosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(\"rwxrwxrwx\"));\n+            Path script = Files.createTempFile(\"enable-java-debugger\", \".sh\", rwx);\n+            Files.writeString(\n+                    script,\n+                    format(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb491f6d793c31a4f247a61c14390946bdbff65d"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc1MDgwMg==", "bodyText": "I use format to formulate how i inject JVM arg into config.properties file.\nI use concatenation to produce the JVM arg (since the variable part is last, format is not applicable).\nSince the bash is oneliner, extracting it to a file would be an overkill.\nLet me keep this.", "url": "https://github.com/trinodb/trino/pull/4167#discussion_r444750802", "createdAt": "2020-06-24T09:03:15Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/common/Standard.java", "diffHunk": "@@ -117,4 +128,27 @@ public static DockerContainer createPrestoContainer(DockerFiles dockerFiles, Pat\n                 .waitingFor(Wait.forLogMessage(\".*======== SERVER STARTED ========.*\", 1))\n                 .withStartupTimeout(Duration.ofMinutes(5));\n     }\n+\n+    public static void enablePrestoJavaDebugger(DockerContainer container, int debugPort)\n+    {\n+        try {\n+            FileAttribute<Set<PosixFilePermission>> rwx = PosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(\"rwxrwxrwx\"));\n+            Path script = Files.createTempFile(\"enable-java-debugger\", \".sh\", rwx);\n+            Files.writeString(\n+                    script,\n+                    format(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDcwODU2OQ=="}, "originalCommit": {"oid": "eb491f6d793c31a4f247a61c14390946bdbff65d"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3907, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}