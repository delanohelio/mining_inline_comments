{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5NTU4MDE1", "number": 5224, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOVQxNDo0NDoyMFrOElR5Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDo1NzoyOFrOEnFhew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NTI1OTY2OnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentFactory.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOVQxNDo0NDoyMFrOHUsZHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjowODoxMlrOHVM1sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ2MDg5NQ==", "bodyText": "I don't understand this. How is that effected that both hyphenated and CamelCase are accepted?", "url": "https://github.com/trinodb/trino/pull/5224#discussion_r491460895", "createdAt": "2020-09-19T14:44:20Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentFactory.java", "diffHunk": "@@ -35,6 +36,7 @@ public EnvironmentFactory(Map<String, EnvironmentProvider> environmentProviders)\n \n     public Environment.Builder get(String environmentName)\n     {\n+        environmentName = name(environmentName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg4NDU3MQ==", "bodyText": "I guess this comes from the fact that CaseFormat.UPPER_CAMEL.to(CaseFormat.LOWER_HYPHEN, name); is identity on name which is already LOWER_HYPHEN.", "url": "https://github.com/trinodb/trino/pull/5224#discussion_r491884571", "createdAt": "2020-09-21T08:55:09Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentFactory.java", "diffHunk": "@@ -35,6 +36,7 @@ public EnvironmentFactory(Map<String, EnvironmentProvider> environmentProviders)\n \n     public Environment.Builder get(String environmentName)\n     {\n+        environmentName = name(environmentName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ2MDg5NQ=="}, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg4NjYzNA==", "bodyText": "Naaa - I do not get it too :/", "url": "https://github.com/trinodb/trino/pull/5224#discussion_r491886634", "createdAt": "2020-09-21T08:58:41Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentFactory.java", "diffHunk": "@@ -35,6 +36,7 @@ public EnvironmentFactory(Map<String, EnvironmentProvider> environmentProviders)\n \n     public Environment.Builder get(String environmentName)\n     {\n+        environmentName = name(environmentName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ2MDg5NQ=="}, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg4NzU2NQ==", "bodyText": "Can we make the code less \"clever\" or more documented?", "url": "https://github.com/trinodb/trino/pull/5224#discussion_r491887565", "createdAt": "2020-09-21T09:00:09Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentFactory.java", "diffHunk": "@@ -35,6 +36,7 @@ public EnvironmentFactory(Map<String, EnvironmentProvider> environmentProviders)\n \n     public Environment.Builder get(String environmentName)\n     {\n+        environmentName = name(environmentName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ2MDg5NQ=="}, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg4ODI3NQ==", "bodyText": "I will do unit tests for that.\nname() makes formatting uniformed\n\nala becomes ala\nAla becomes ala\nDuzAla becomes duza-ala\nduza-ala becomes duza-ala\nDuz-Ala becomes duza-ala", "url": "https://github.com/trinodb/trino/pull/5224#discussion_r491888275", "createdAt": "2020-09-21T09:01:27Z", "author": {"login": "kokosing"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentFactory.java", "diffHunk": "@@ -35,6 +36,7 @@ public EnvironmentFactory(Map<String, EnvironmentProvider> environmentProviders)\n \n     public Environment.Builder get(String environmentName)\n     {\n+        environmentName = name(environmentName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ2MDg5NQ=="}, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg4OTI5Mg==", "bodyText": "name() makes formatting uniformed\n\n-> canonicalName  + javadoc?", "url": "https://github.com/trinodb/trino/pull/5224#discussion_r491889292", "createdAt": "2020-09-21T09:03:11Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentFactory.java", "diffHunk": "@@ -35,6 +36,7 @@ public EnvironmentFactory(Map<String, EnvironmentProvider> environmentProviders)\n \n     public Environment.Builder get(String environmentName)\n     {\n+        environmentName = name(environmentName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ2MDg5NQ=="}, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg5MDkxNQ==", "bodyText": "Duz-Ala becomes duza-ala\n\nMy bad Duz-Ala becomes duz--ala", "url": "https://github.com/trinodb/trino/pull/5224#discussion_r491890915", "createdAt": "2020-09-21T09:06:12Z", "author": {"login": "kokosing"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentFactory.java", "diffHunk": "@@ -35,6 +36,7 @@ public EnvironmentFactory(Map<String, EnvironmentProvider> environmentProviders)\n \n     public Environment.Builder get(String environmentName)\n     {\n+        environmentName = name(environmentName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ2MDg5NQ=="}, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk5MjQ5OQ==", "bodyText": "canonicalName\n\nI don't think it needs a javadoc", "url": "https://github.com/trinodb/trino/pull/5224#discussion_r491992499", "createdAt": "2020-09-21T12:08:12Z", "author": {"login": "kokosing"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentFactory.java", "diffHunk": "@@ -35,6 +36,7 @@ public EnvironmentFactory(Map<String, EnvironmentProvider> environmentProviders)\n \n     public Environment.Builder get(String environmentName)\n     {\n+        environmentName = name(environmentName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ2MDg5NQ=="}, "originalCommit": null, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NDE5ODgyOnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/test/java/io/prestosql/tests/product/launcher/env/TestEnvironments.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDo1NjoyMFrOHXfA8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMToyNzoxOFrOHZomJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM4NzQ0MA==", "bodyText": "don't think it's desired so add a comment it's incidental", "url": "https://github.com/trinodb/trino/pull/5224#discussion_r494387440", "createdAt": "2020-09-24T14:56:20Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/test/java/io/prestosql/tests/product/launcher/env/TestEnvironments.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.tests.product.launcher.env;\n+\n+import org.testng.annotations.Test;\n+\n+import static io.prestosql.tests.product.launcher.env.Environments.canonicalName;\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+public class TestEnvironments\n+{\n+    @Test\n+    public void testCanonicalName()\n+    {\n+        assertThat(canonicalName(\"ala\")).isEqualTo(\"ala\");\n+        assertThat(canonicalName(\"Ala\")).isEqualTo(\"ala\");\n+        assertThat(canonicalName(\"DuzaAla\")).isEqualTo(\"duza-ala\");\n+        assertThat(canonicalName(\"duza-ala\")).isEqualTo(\"duza-ala\");\n+        assertThat(canonicalName(\"duza-Ala\")).isEqualTo(\"duza--ala\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY0MTU3Mw==", "bodyText": "I fixed that case with regex.", "url": "https://github.com/trinodb/trino/pull/5224#discussion_r496641573", "createdAt": "2020-09-29T11:27:18Z", "author": {"login": "kokosing"}, "path": "presto-product-tests-launcher/src/test/java/io/prestosql/tests/product/launcher/env/TestEnvironments.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.tests.product.launcher.env;\n+\n+import org.testng.annotations.Test;\n+\n+import static io.prestosql.tests.product.launcher.env.Environments.canonicalName;\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+public class TestEnvironments\n+{\n+    @Test\n+    public void testCanonicalName()\n+    {\n+        assertThat(canonicalName(\"ala\")).isEqualTo(\"ala\");\n+        assertThat(canonicalName(\"Ala\")).isEqualTo(\"ala\");\n+        assertThat(canonicalName(\"DuzaAla\")).isEqualTo(\"duza-ala\");\n+        assertThat(canonicalName(\"duza-ala\")).isEqualTo(\"duza-ala\");\n+        assertThat(canonicalName(\"duza-Ala\")).isEqualTo(\"duza--ala\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM4NzQ0MA=="}, "originalCommit": null, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NDIwNDExOnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/Environments.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDo1NzoyOFrOHXfEXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDo1NzoyOFrOHXfEXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM4ODMxOQ==", "bodyText": "/**\n * Converts camel case name to hyphenated. Returns input if the name is already hyphenated.\n */\n\n-- the javadoc is important, as we do not commit ourselves to supporting anything beyond lowercase hyphenaed and CamelCase forms, and we should capture somewhere.", "url": "https://github.com/trinodb/trino/pull/5224#discussion_r494388319", "createdAt": "2020-09-24T14:57:28Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/Environments.java", "diffHunk": "@@ -109,11 +109,21 @@ public static void pruneNetworks()\n \n     public static String nameForClass(Class<? extends EnvironmentProvider> clazz)\n     {\n-        return CaseFormat.UPPER_CAMEL.to(CaseFormat.LOWER_HYPHEN, clazz.getSimpleName());\n+        return canonicalName(clazz);\n     }\n \n     public static String nameForConfigClass(Class<? extends EnvironmentConfig> clazz)\n     {\n-        return CaseFormat.UPPER_CAMEL.to(CaseFormat.LOWER_HYPHEN, clazz.getSimpleName());\n+        return canonicalName(clazz);\n+    }\n+\n+    private static String canonicalName(Class<?> clazz)\n+    {\n+        return canonicalName(clazz.getSimpleName());\n+    }\n+\n+    public static String canonicalName(String name)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3007, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}