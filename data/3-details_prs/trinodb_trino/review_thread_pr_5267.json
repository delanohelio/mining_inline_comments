{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxMDM0Njkz", "number": 5267, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMjowMzoxMVrOEmR9Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMjowMzoxMVrOEmR9Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTc1NTQzOnYy", "diffSide": "RIGHT", "path": "presto-spi/src/main/java/io/prestosql/spi/type/LongTimestamp.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMjowMzoxMVrOHWN9BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNDoxMDo1MVrOHWwevA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA1OTMzMw==", "bodyText": "Would it be better to use a human readable format? i.e.\nreturn formatTimestamp(MAX_PRECISION, epochMicros, picosOfMicro);", "url": "https://github.com/trinodb/trino/pull/5267#discussion_r493059333", "createdAt": "2020-09-22T22:03:11Z", "author": {"login": "electrum"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/LongTimestamp.java", "diffHunk": "@@ -74,4 +75,13 @@ public int compareTo(LongTimestamp other)\n         }\n         return Integer.compareUnsigned(picosOfMicro, other.picosOfMicro);\n     }\n+\n+    @Override\n+    public String toString()\n+    {\n+        return new StringJoiner(\", \", LongTimestamp.class.getSimpleName() + \"[\", \"]\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA2MzIwMw==", "bodyText": "It can go either way. For debugging purposes, I've often found it useful to see what the component parts are.", "url": "https://github.com/trinodb/trino/pull/5267#discussion_r493063203", "createdAt": "2020-09-22T22:13:18Z", "author": {"login": "martint"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/LongTimestamp.java", "diffHunk": "@@ -74,4 +75,13 @@ public int compareTo(LongTimestamp other)\n         }\n         return Integer.compareUnsigned(picosOfMicro, other.picosOfMicro);\n     }\n+\n+    @Override\n+    public String toString()\n+    {\n+        return new StringJoiner(\", \", LongTimestamp.class.getSimpleName() + \"[\", \"]\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA1OTMzMw=="}, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYyNTAyMA==", "bodyText": "It can go either way.\n\nTrue.\nI think human-readable should be fine. picos are visible in human; epoch micros -- you would need to expand the object in a debugger.", "url": "https://github.com/trinodb/trino/pull/5267#discussion_r493625020", "createdAt": "2020-09-23T14:10:51Z", "author": {"login": "findepi"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/LongTimestamp.java", "diffHunk": "@@ -74,4 +75,13 @@ public int compareTo(LongTimestamp other)\n         }\n         return Integer.compareUnsigned(picosOfMicro, other.picosOfMicro);\n     }\n+\n+    @Override\n+    public String toString()\n+    {\n+        return new StringJoiner(\", \", LongTimestamp.class.getSimpleName() + \"[\", \"]\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA1OTMzMw=="}, "originalCommit": null, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3047, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}