{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMTM1OTQ0", "number": 4968, "title": "Update BigQuery dependencies to support HOURLY partitioning of tables", "bodyText": "I did not update to latest BOM version to minimize the impact of this change.\nHourly partitioning was added in googleapis/java-bigquery@90f9980#diff-3dfcf884473c6d47c7c3debc58ce20c0", "createdAt": "2020-08-25T11:29:09Z", "url": "https://github.com/trinodb/trino/pull/4968", "merged": true, "mergeCommit": {"oid": "ae6c21b56cc913f9ced67688c22f1f93e2b8fdb0"}, "closed": true, "closedAt": "2020-09-01T13:49:28Z", "author": {"login": "wendigo"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdComU8gBqjM2OTM5NTE0MTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEQckUgBqjM3MDkyODcwMjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3Nzg5MTcz", "url": "https://github.com/trinodb/trino/pull/4968#pullrequestreview-477789173", "createdAt": "2020-08-28T14:45:03Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDo0NTowM1rOHJJXPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxMzowNjo1M1rOHJis1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM1MjYzOQ==", "bodyText": "I would rename to executeBigQuerySql or onBigQuery", "url": "https://github.com/trinodb/trino/pull/4968#discussion_r479352639", "createdAt": "2020-08-28T14:45:03Z", "author": {"login": "ebyhr"}, "path": "presto-bigquery/src/test/java/io/prestosql/plugin/bigquery/TestBigQueryIntegrationSmokeTest.java", "diffHunk": "@@ -51,4 +60,47 @@ public void testDescribeTable()\n         MaterializedResult actualColumns = computeActual(\"DESCRIBE orders\");\n         assertEquals(actualColumns, expectedColumns);\n     }\n+\n+    @Test(enabled = false)\n+    public void testSelectFromHourlyPartitionedTable()\n+    {\n+        BigQuery client = createBigQueryClient();\n+\n+        try {\n+            executeBigQuerySQL(client, \"CREATE TABLE test.hourly_partitioned (value INT64, ts TIMESTAMP) PARTITION BY TIMESTAMP_TRUNC(ts, HOUR)\");\n+            executeBigQuerySQL(client, \"INSERT INTO test.hourly_partitioned (value, ts) VALUES (1000, '2018-01-01 10:00:00')\");\n+\n+            MaterializedResult actualValues = computeActual(\"SELECT COUNT(1) FROM test.hourly_partitioned\");\n+\n+            assertEquals((long) actualValues.getOnlyValue(), 1L);\n+        }\n+        finally {\n+            executeBigQuerySQL(client, \"DROP TABLE test.hourly_partitioned\");\n+        }\n+    }\n+\n+    private static void executeBigQuerySQL(BigQuery bigquery, String query)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM1NDg2NA==", "bodyText": "Argument of format is missing.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            throw new RuntimeException(format(\"Job with uuid %s does not longer exists\"));\n          \n          \n            \n                            throw new RuntimeException(format(\"Job with uuid %s does not longer exists\", jobId.getJob()));", "url": "https://github.com/trinodb/trino/pull/4968#discussion_r479354864", "createdAt": "2020-08-28T14:48:49Z", "author": {"login": "ebyhr"}, "path": "presto-bigquery/src/test/java/io/prestosql/plugin/bigquery/TestBigQueryIntegrationSmokeTest.java", "diffHunk": "@@ -51,4 +60,47 @@ public void testDescribeTable()\n         MaterializedResult actualColumns = computeActual(\"DESCRIBE orders\");\n         assertEquals(actualColumns, expectedColumns);\n     }\n+\n+    @Test(enabled = false)\n+    public void testSelectFromHourlyPartitionedTable()\n+    {\n+        BigQuery client = createBigQueryClient();\n+\n+        try {\n+            executeBigQuerySQL(client, \"CREATE TABLE test.hourly_partitioned (value INT64, ts TIMESTAMP) PARTITION BY TIMESTAMP_TRUNC(ts, HOUR)\");\n+            executeBigQuerySQL(client, \"INSERT INTO test.hourly_partitioned (value, ts) VALUES (1000, '2018-01-01 10:00:00')\");\n+\n+            MaterializedResult actualValues = computeActual(\"SELECT COUNT(1) FROM test.hourly_partitioned\");\n+\n+            assertEquals((long) actualValues.getOnlyValue(), 1L);\n+        }\n+        finally {\n+            executeBigQuerySQL(client, \"DROP TABLE test.hourly_partitioned\");\n+        }\n+    }\n+\n+    private static void executeBigQuerySQL(BigQuery bigquery, String query)\n+    {\n+        QueryJobConfiguration queryConfig = QueryJobConfiguration.newBuilder(query)\n+                .setUseLegacySql(false)\n+                .build();\n+\n+        JobId jobId = JobId.of(UUID.randomUUID().toString());\n+        Job queryJob = bigquery.create(JobInfo.newBuilder(queryConfig).setJobId(jobId).build());\n+\n+        try {\n+            queryJob = queryJob.waitFor();\n+\n+            if (queryJob == null) {\n+                throw new RuntimeException(format(\"Job with uuid %s does not longer exists\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM1NTAyNg==", "bodyText": "Redundant else. I know it comes from BIgQuery's javadoc though.", "url": "https://github.com/trinodb/trino/pull/4968#discussion_r479355026", "createdAt": "2020-08-28T14:49:04Z", "author": {"login": "ebyhr"}, "path": "presto-bigquery/src/test/java/io/prestosql/plugin/bigquery/TestBigQueryIntegrationSmokeTest.java", "diffHunk": "@@ -51,4 +60,47 @@ public void testDescribeTable()\n         MaterializedResult actualColumns = computeActual(\"DESCRIBE orders\");\n         assertEquals(actualColumns, expectedColumns);\n     }\n+\n+    @Test(enabled = false)\n+    public void testSelectFromHourlyPartitionedTable()\n+    {\n+        BigQuery client = createBigQueryClient();\n+\n+        try {\n+            executeBigQuerySQL(client, \"CREATE TABLE test.hourly_partitioned (value INT64, ts TIMESTAMP) PARTITION BY TIMESTAMP_TRUNC(ts, HOUR)\");\n+            executeBigQuerySQL(client, \"INSERT INTO test.hourly_partitioned (value, ts) VALUES (1000, '2018-01-01 10:00:00')\");\n+\n+            MaterializedResult actualValues = computeActual(\"SELECT COUNT(1) FROM test.hourly_partitioned\");\n+\n+            assertEquals((long) actualValues.getOnlyValue(), 1L);\n+        }\n+        finally {\n+            executeBigQuerySQL(client, \"DROP TABLE test.hourly_partitioned\");\n+        }\n+    }\n+\n+    private static void executeBigQuerySQL(BigQuery bigquery, String query)\n+    {\n+        QueryJobConfiguration queryConfig = QueryJobConfiguration.newBuilder(query)\n+                .setUseLegacySql(false)\n+                .build();\n+\n+        JobId jobId = JobId.of(UUID.randomUUID().toString());\n+        Job queryJob = bigquery.create(JobInfo.newBuilder(queryConfig).setJobId(jobId).build());\n+\n+        try {\n+            queryJob = queryJob.waitFor();\n+\n+            if (queryJob == null) {\n+                throw new RuntimeException(format(\"Job with uuid %s does not longer exists\"));\n+            }\n+            else if (queryJob.getStatus().getError() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc2NzIyNw==", "bodyText": "How about adding DROP TABLE IF EXISTS  before CREAT TABLE?", "url": "https://github.com/trinodb/trino/pull/4968#discussion_r479767227", "createdAt": "2020-08-30T13:01:13Z", "author": {"login": "ebyhr"}, "path": "presto-bigquery/src/test/java/io/prestosql/plugin/bigquery/TestBigQueryIntegrationSmokeTest.java", "diffHunk": "@@ -51,4 +60,47 @@ public void testDescribeTable()\n         MaterializedResult actualColumns = computeActual(\"DESCRIBE orders\");\n         assertEquals(actualColumns, expectedColumns);\n     }\n+\n+    @Test(enabled = false)\n+    public void testSelectFromHourlyPartitionedTable()\n+    {\n+        BigQuery client = createBigQueryClient();\n+\n+        try {\n+            executeBigQuerySQL(client, \"CREATE TABLE test.hourly_partitioned (value INT64, ts TIMESTAMP) PARTITION BY TIMESTAMP_TRUNC(ts, HOUR)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc2Nzc2NA==", "bodyText": "nit: JobId.of() does the same thing.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    JobId jobId = JobId.of(UUID.randomUUID().toString());\n          \n          \n            \n                    JobId jobId = JobId.of();", "url": "https://github.com/trinodb/trino/pull/4968#discussion_r479767764", "createdAt": "2020-08-30T13:06:53Z", "author": {"login": "ebyhr"}, "path": "presto-bigquery/src/test/java/io/prestosql/plugin/bigquery/TestBigQueryIntegrationSmokeTest.java", "diffHunk": "@@ -51,4 +60,47 @@ public void testDescribeTable()\n         MaterializedResult actualColumns = computeActual(\"DESCRIBE orders\");\n         assertEquals(actualColumns, expectedColumns);\n     }\n+\n+    @Test(enabled = false)\n+    public void testSelectFromHourlyPartitionedTable()\n+    {\n+        BigQuery client = createBigQueryClient();\n+\n+        try {\n+            executeBigQuerySQL(client, \"CREATE TABLE test.hourly_partitioned (value INT64, ts TIMESTAMP) PARTITION BY TIMESTAMP_TRUNC(ts, HOUR)\");\n+            executeBigQuerySQL(client, \"INSERT INTO test.hourly_partitioned (value, ts) VALUES (1000, '2018-01-01 10:00:00')\");\n+\n+            MaterializedResult actualValues = computeActual(\"SELECT COUNT(1) FROM test.hourly_partitioned\");\n+\n+            assertEquals((long) actualValues.getOnlyValue(), 1L);\n+        }\n+        finally {\n+            executeBigQuerySQL(client, \"DROP TABLE test.hourly_partitioned\");\n+        }\n+    }\n+\n+    private static void executeBigQuerySQL(BigQuery bigquery, String query)\n+    {\n+        QueryJobConfiguration queryConfig = QueryJobConfiguration.newBuilder(query)\n+                .setUseLegacySql(false)\n+                .build();\n+\n+        JobId jobId = JobId.of(UUID.randomUUID().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "130a0e8ab17dae5fdf4ef063ccfb8fe7d44f5d89", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/130a0e8ab17dae5fdf4ef063ccfb8fe7d44f5d89", "committedDate": "2020-08-31T10:35:26Z", "message": "Update BigQuery dependencies to support HOURLY partitioning of tables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b02921f07b853c6b0a613ca2127b33de748eb4e0", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/b02921f07b853c6b0a613ca2127b33de748eb4e0", "committedDate": "2020-08-31T10:35:26Z", "message": "Redact bigquery.credentials-key config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87963bdc80a2460ecfcfe9793411d1120ba31a3f", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/87963bdc80a2460ecfcfe9793411d1120ba31a3f", "committedDate": "2020-08-31T10:40:20Z", "message": "Add BigQuery smoke test for HOUR-ly partitioned table"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "87963bdc80a2460ecfcfe9793411d1120ba31a3f", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/87963bdc80a2460ecfcfe9793411d1120ba31a3f", "committedDate": "2020-08-31T10:40:20Z", "message": "Add BigQuery smoke test for HOUR-ly partitioned table"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4159, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}