{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NzgxNTYz", "number": 5465, "title": "Fix timestamps in system.runtime.queries", "bodyText": "Fixes #5462\nFixes #5464", "createdAt": "2020-10-08T09:22:45Z", "url": "https://github.com/trinodb/trino/pull/5465", "merged": true, "mergeCommit": {"oid": "4de8430d12bda74845da0f0602daca3138ac7669"}, "closed": true, "closedAt": "2020-10-09T10:55:26Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQeFXPAFqTUwNDU5MDA2Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQxOJ9ABqjM4NTg4NjU5MzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0NTkwMDY2", "url": "https://github.com/trinodb/trino/pull/5465#pullrequestreview-504590066", "createdAt": "2020-10-08T09:23:02Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwOToyMzowMlrOHeVnqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwOToyMzowMlrOHeVnqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MzU0Nw==", "bodyText": "#5464", "url": "https://github.com/trinodb/trino/pull/5465#discussion_r501573547", "createdAt": "2020-10-08T09:23:02Z", "author": {"login": "findepi"}, "path": "presto-tests/src/test/java/io/prestosql/connector/system/TestSystemConnector.java", "diffHunk": "@@ -100,6 +107,36 @@ public void tearDown()\n         executor.shutdownNow();\n     }\n \n+    @Test\n+    public void testRuntimeQueriesTimestamps()\n+    {\n+        ZonedDateTime timeBefore = ZonedDateTime.now();\n+        computeActual(\"SELECT 1\");\n+        MaterializedResult result = computeActual(\"\" +\n+                \"SELECT max(created), max(started), max(last_heartbeat), max(\\\"end\\\") \" +\n+                \"FROM system.runtime.queries\");\n+        ZonedDateTime timeAfter = ZonedDateTime.now();\n+\n+        MaterializedRow row = Iterables.getOnlyElement(result.toTestTypes().getMaterializedRows());\n+        List<Object> fields = row.getFields();\n+        assertThat(fields).hasSize(4);\n+        for (int i = 0; i < fields.size(); i++) {\n+            final int fieldNumber = i;\n+            Object value = fields.get(fieldNumber);\n+            assertThat(value)\n+                    .as(\"value for field \" + fieldNumber)\n+                    .isNotNull()\n+                    .isInstanceOfSatisfying(LocalDateTime.class, localDatetime -> {\n+                        // TODO (https://github.com/prestosql/presto/issues/5464) map to `timestamp with time zone`", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 58}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0NjU1NzY3", "url": "https://github.com/trinodb/trino/pull/5465#pullrequestreview-504655767", "createdAt": "2020-10-08T10:47:44Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMDo0Nzo0NVrOHeYwdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMDo0ODoyMVrOHeYxrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYyNDk1MA==", "bodyText": "I am a bit concerned about backward compatibility of this change. Not sure how commonly are those system schemas used by Presto users.", "url": "https://github.com/trinodb/trino/pull/5465#discussion_r501624950", "createdAt": "2020-10-08T10:47:45Z", "author": {"login": "losipiuk"}, "path": "presto-main/src/main/java/io/prestosql/connector/system/TransactionsSystemTable.java", "diffHunk": "@@ -62,7 +65,7 @@ public TransactionsSystemTable(Metadata metadata, TransactionManager transaction\n                 .column(\"isolation_level\", createUnboundedVarcharType())\n                 .column(\"read_only\", BOOLEAN)\n                 .column(\"auto_commit_context\", BOOLEAN)\n-                .column(\"create_time\", TIMESTAMP_MILLIS)\n+                .column(\"create_time\", TIMESTAMP_TZ_MILLIS)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYyNTI2Mg==", "bodyText": "possible?", "url": "https://github.com/trinodb/trino/pull/5465#discussion_r501625262", "createdAt": "2020-10-08T10:48:21Z", "author": {"login": "losipiuk"}, "path": "presto-main/src/main/java/io/prestosql/connector/system/TransactionsSystemTable.java", "diffHunk": "@@ -114,4 +117,13 @@ private static Block createStringsBlock(List<CatalogName> values)\n         }\n         return builder.build();\n     }\n+\n+    private static Long toTimestampWithTimeZoneMillis(DateTime dateTime)\n+    {\n+        if (dateTime == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0NjU5NzQ3", "url": "https://github.com/trinodb/trino/pull/5465#pullrequestreview-504659747", "createdAt": "2020-10-08T10:53:27Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMDo1MzoyN1rOHeY8zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMDo1MzoyN1rOHeY8zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYyODExMQ==", "bodyText": "can you add test for system.runtime.transactions?", "url": "https://github.com/trinodb/trino/pull/5465#discussion_r501628111", "createdAt": "2020-10-08T10:53:27Z", "author": {"login": "losipiuk"}, "path": "presto-tests/src/test/java/io/prestosql/connector/system/TestSystemConnector.java", "diffHunk": "@@ -100,6 +105,52 @@ public void tearDown()\n         executor.shutdownNow();\n     }\n \n+    @Test\n+    public void testRuntimeQueriesTimestamps()\n+    {\n+        ZonedDateTime timeBefore = ZonedDateTime.now();\n+        computeActual(\"SELECT 1\");\n+        MaterializedResult result = computeActual(\"\" +\n+                \"SELECT max(created), max(started), max(last_heartbeat), max(\\\"end\\\") \" +\n+                \"FROM system.runtime.queries\");\n+        ZonedDateTime timeAfter = ZonedDateTime.now();\n+\n+        MaterializedRow row = Iterables.getOnlyElement(result.toTestTypes().getMaterializedRows());\n+        List<Object> fields = row.getFields();\n+        assertThat(fields).hasSize(4);\n+        for (int i = 0; i < fields.size(); i++) {\n+            Object value = fields.get(i);\n+            assertThat((ZonedDateTime) value)\n+                    .as(\"value for field \" + i)\n+                    .isNotNull()\n+                    .isAfterOrEqualTo(timeBefore)\n+                    .isBeforeOrEqualTo(timeAfter);\n+        }\n+    }\n+\n+    @Test\n+    public void testRuntimeTasksTimestamps()\n+    {\n+        ZonedDateTime timeBefore = ZonedDateTime.now();\n+        computeActual(\"SELECT 1\");\n+        MaterializedResult result = computeActual(\"\" +\n+                \"SELECT max(created), max(start), max(last_heartbeat), max(\\\"end\\\") \" +\n+                \"FROM system.runtime.tasks\");\n+        ZonedDateTime timeAfter = ZonedDateTime.now();\n+\n+        MaterializedRow row = Iterables.getOnlyElement(result.toTestTypes().getMaterializedRows());\n+        List<Object> fields = row.getFields();\n+        assertThat(fields).hasSize(4);\n+        for (int i = 0; i < fields.size(); i++) {\n+            Object value = fields.get(i);\n+            assertThat((ZonedDateTime) value)\n+                    .as(\"value for field \" + i)\n+                    .isNotNull()\n+                    .isAfterOrEqualTo(timeBefore)\n+                    .isBeforeOrEqualTo(timeAfter);\n+        }\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 80}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0OTU4MTU1", "url": "https://github.com/trinodb/trino/pull/5465#pullrequestreview-504958155", "createdAt": "2020-10-08T16:25:46Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNjoyNTo0NlrOHemnzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNjoyODoyNFrOHemuMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg1MjEwOA==", "bodyText": "We can do a sanity check to make the test failure reason obvious in case the system clock happens to be adjusted in between the calls\nassertThat(timeAfter).isAfterOrEqualTo(timeBefore);", "url": "https://github.com/trinodb/trino/pull/5465#discussion_r501852108", "createdAt": "2020-10-08T16:25:46Z", "author": {"login": "electrum"}, "path": "presto-tests/src/test/java/io/prestosql/connector/system/TestSystemConnector.java", "diffHunk": "@@ -100,6 +107,36 @@ public void tearDown()\n         executor.shutdownNow();\n     }\n \n+    @Test\n+    public void testRuntimeQueriesTimestamps()\n+    {\n+        ZonedDateTime timeBefore = ZonedDateTime.now();\n+        computeActual(\"SELECT 1\");\n+        MaterializedResult result = computeActual(\"\" +\n+                \"SELECT max(created), max(started), max(last_heartbeat), max(\\\"end\\\") \" +\n+                \"FROM system.runtime.queries\");\n+        ZonedDateTime timeAfter = ZonedDateTime.now();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg1Mzc0Nw==", "bodyText": "We used the server time zone for JmxRecordSetProvider since that seems like the right thing to return. If the administrator chooses to run their server in a specific time zone, then that's probably what they want to see when looking at system tables. cc @dain", "url": "https://github.com/trinodb/trino/pull/5465#discussion_r501853747", "createdAt": "2020-10-08T16:28:24Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/connector/system/QuerySystemTable.java", "diffHunk": "@@ -157,12 +158,12 @@ private static Long toMillis(Duration duration)\n         return duration.toMillis();\n     }\n \n-    // TODO (https://github.com/prestosql/presto/issues/5464) map to timestamp with time zone\n-    private static Long toTimeStamp(DateTime dateTime)\n+    private static Long toTimestampWithTimeZoneMillis(DateTime dateTime)\n     {\n         if (dateTime == null) {\n             return null;\n         }\n-        return dateTime.getMillis() * MICROSECONDS_PER_MILLISECOND;\n+        // dateTime.getZone() is the server zone, should be of no interest to the user", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "864b902deaaea96f5a6e1903b778e6408fc4865c", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/864b902deaaea96f5a6e1903b778e6408fc4865c", "committedDate": "2020-10-08T21:17:48Z", "message": "Fix timestamps in system.runtime.queries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d4845d8da5e2aea29b6567dd26ea9e95d14e712", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/8d4845d8da5e2aea29b6567dd26ea9e95d14e712", "committedDate": "2020-10-08T21:17:48Z", "message": "Fix timestamps in system.runtime.tasks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bdef21f83b2d106924e855cac78717e4f2f3ab6", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/2bdef21f83b2d106924e855cac78717e4f2f3ab6", "committedDate": "2020-10-08T21:17:48Z", "message": "Fix timestamps in system.runtime.transactions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "45c53291e903dd96a640b3390ab6884b8a9b3368", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/45c53291e903dd96a640b3390ab6884b8a9b3368", "committedDate": "2020-10-09T07:40:41Z", "message": "Switch to timestamp with time zone in system.runtime.*"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "45c53291e903dd96a640b3390ab6884b8a9b3368", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/45c53291e903dd96a640b3390ab6884b8a9b3368", "committedDate": "2020-10-09T07:40:41Z", "message": "Switch to timestamp with time zone in system.runtime.*"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3325, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}