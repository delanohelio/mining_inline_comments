{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMDg1NzE2", "number": 2456, "title": "Remove redundant CrossJoin operators", "bodyText": "", "createdAt": "2020-01-09T17:57:38Z", "url": "https://github.com/trinodb/trino/pull/2456", "merged": true, "mergeCommit": {"oid": "c0c29f06b22806e9ab110636ee249562790a5530"}, "closed": true, "closedAt": "2020-01-22T21:18:22Z", "author": {"login": "Praveen2112"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4yJouAFqTM0MDg2Nzk0MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8sLzZABqjI5Njg0Njc1NTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwODY3OTQx", "url": "https://github.com/trinodb/trino/pull/2456#pullrequestreview-340867941", "createdAt": "2020-01-09T22:57:57Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQyMjo1Nzo1N1rOFcF5tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQyMzowMDoxM1rOFcF8ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAwMTE0Mg==", "bodyText": "inline WITH", "url": "https://github.com/trinodb/trino/pull/2456#discussion_r365001142", "createdAt": "2020-01-09T22:57:57Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestLogicalPlanner.java", "diffHunk": "@@ -1274,4 +1274,18 @@ public void testRedundantHashRemovalForUnionAllAndMarkDistinct()\n                                                                         node(ProjectNode.class,\n                                                                                 node(TableScanNode.class))))))))));\n     }\n+\n+    @Test\n+    public void testRemoveRedundantCrossJoin()\n+    {\n+        assertPlan(\"WITH temp AS (SELECT 1 AS a) SELECT regionkey from nation, temp WHERE regionkey = temp.a\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAwMTg1MQ==", "bodyText": "add a test case with SELECT * -- the 1 from the scalar subquery should be pulled up and cross join still eliminated.", "url": "https://github.com/trinodb/trino/pull/2456#discussion_r365001851", "createdAt": "2020-01-09T23:00:13Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestLogicalPlanner.java", "diffHunk": "@@ -1274,4 +1274,18 @@ public void testRedundantHashRemovalForUnionAllAndMarkDistinct()\n                                                                         node(ProjectNode.class,\n                                                                                 node(TableScanNode.class))))))))));\n     }\n+\n+    @Test\n+    public void testRemoveRedundantCrossJoin()\n+    {\n+        assertPlan(\"WITH temp AS (SELECT 1 AS a) SELECT regionkey from nation, temp WHERE regionkey = temp.a\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAwMTE0Mg=="}, "originalCommit": null, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxMDcxNzM1", "url": "https://github.com/trinodb/trino/pull/2456#pullrequestreview-341071735", "createdAt": "2020-01-10T10:21:35Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMDoyMTozNVrOFcP72w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMDoyMTozNVrOFcP72w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE2NTUzMQ==", "bodyText": "Should we care about cases where sAtMost(some, context.getLookup(), 0))?", "url": "https://github.com/trinodb/trino/pull/2456#discussion_r365165531", "createdAt": "2020-01-10T10:21:35Z", "author": {"login": "kokosing"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/iterative/rule/RemoveRedundantCrossJoin.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.sql.planner.iterative.rule;\n+\n+import io.prestosql.matching.Captures;\n+import io.prestosql.matching.Pattern;\n+import io.prestosql.sql.planner.iterative.Rule;\n+import io.prestosql.sql.planner.plan.JoinNode;\n+\n+import static io.prestosql.sql.planner.optimizations.QueryCardinalityUtil.isScalar;\n+import static io.prestosql.sql.planner.plan.Patterns.join;\n+\n+public class RemoveRedundantCrossJoin\n+        implements Rule<JoinNode>\n+{\n+    private static final Pattern<JoinNode> PATTERN = join().matching(JoinNode::isCrossJoin);\n+\n+    @Override\n+    public Pattern<JoinNode> getPattern()\n+    {\n+        return PATTERN;\n+    }\n+\n+    @Override\n+    public Result apply(JoinNode node, Captures captures, Context context)\n+    {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNTQwMTU1", "url": "https://github.com/trinodb/trino/pull/2456#pullrequestreview-341540155", "createdAt": "2020-01-11T20:35:42Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQyMDozNTo0MlrOFcm15g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQyMDozNTo0MlrOFcm15g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU0MDgzOA==", "bodyText": "@Praveen2112  Any particular reason you added it here?\nMaybe this could go together with\nhttps://github.com/prestosql/presto/blob/b15ad53a359f6c8cbf91b21b453b828b0cb82782/presto-main/src/main/java/io/prestosql/sql/planner/PlanOptimizers.java#L310-L335\n@martint do you remember why RemoveUnreferencedScalarSubqueries isn't there?\nAnd why we run this suite only once?", "url": "https://github.com/trinodb/trino/pull/2456#discussion_r365540838", "createdAt": "2020-01-11T20:35:42Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/PlanOptimizers.java", "diffHunk": "@@ -428,7 +429,8 @@ public PlanOptimizers(\n                         estimatedExchangesCostCalculator,\n                         ImmutableSet.of(\n                                 new RemoveRedundantIdentityProjections(),\n-                                new PushAggregationThroughOuterJoin())),\n+                                new PushAggregationThroughOuterJoin(),\n+                                new RemoveRedundantCrossJoin())),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "585a383e8e37fc63397cdfbc2ebb87659304ffe8", "author": {"user": {"login": "Praveen2112", "name": "Praveen Krishna"}}, "url": "https://github.com/trinodb/trino/commit/585a383e8e37fc63397cdfbc2ebb87659304ffe8", "committedDate": "2020-01-22T02:18:16Z", "message": "Eliminate redundant CROSS JOIN with scalar"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "585a383e8e37fc63397cdfbc2ebb87659304ffe8", "author": {"user": {"login": "Praveen2112", "name": "Praveen Krishna"}}, "url": "https://github.com/trinodb/trino/commit/585a383e8e37fc63397cdfbc2ebb87659304ffe8", "committedDate": "2020-01-22T02:18:16Z", "message": "Eliminate redundant CROSS JOIN with scalar"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1064, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}