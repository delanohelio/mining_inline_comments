{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMDcwODU2", "number": 2733, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMzo0Mzo0NlrODdKtWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMzo0OTozOFrODdKyAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxOTEwNzQ0OnYy", "diffSide": "RIGHT", "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoPreparedStatement.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMzo0Mzo0NlrOFlnbFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTowODoyMVrOFlwTIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk4NzU0Mg==", "bodyText": "Maybe wrap this as\nsetParameter(parameterIndex, formatLiteral(\"TIMESTAMP\", TIMESTAMP_FORMATTER\n        .withZone(DateTimeZone.forTimeZone(cal.getTimeZone())).print(x.getTime())));", "url": "https://github.com/trinodb/trino/pull/2733#discussion_r374987542", "createdAt": "2020-02-04T23:43:46Z", "author": {"login": "electrum"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoPreparedStatement.java", "diffHunk": "@@ -264,6 +265,18 @@ public void setTimestamp(int parameterIndex, Timestamp x)\n         }\n     }\n \n+    @Override\n+    public void setTimestamp(int parameterIndex, Timestamp x, Calendar cal)\n+            throws SQLException\n+    {\n+        checkOpen();\n+        if (x == null || cal == null) {\n+            setTimestamp(parameterIndex, x);\n+            return;\n+        }\n+        setParameter(parameterIndex, formatLiteral(\"TIMESTAMP\", TIMESTAMP_FORMATTER.withZone(DateTimeZone.forTimeZone(cal.getTimeZone())).print(x.getTime())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEzMjk2MQ==", "bodyText": "this is admittedly long, but fits in our line len limit..\ni will extract variable both here & in existing function", "url": "https://github.com/trinodb/trino/pull/2733#discussion_r375132961", "createdAt": "2020-02-05T09:08:21Z", "author": {"login": "findepi"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoPreparedStatement.java", "diffHunk": "@@ -264,6 +265,18 @@ public void setTimestamp(int parameterIndex, Timestamp x)\n         }\n     }\n \n+    @Override\n+    public void setTimestamp(int parameterIndex, Timestamp x, Calendar cal)\n+            throws SQLException\n+    {\n+        checkOpen();\n+        if (x == null || cal == null) {\n+            setTimestamp(parameterIndex, x);\n+            return;\n+        }\n+        setParameter(parameterIndex, formatLiteral(\"TIMESTAMP\", TIMESTAMP_FORMATTER.withZone(DateTimeZone.forTimeZone(cal.getTimeZone())).print(x.getTime())));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk4NzU0Mg=="}, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxOTExOTM4OnYy", "diffSide": "RIGHT", "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoPreparedStatement.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMzo0OTozOFrOFlniKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMzo0OTozOFrOFlniKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk4OTM1Mw==", "bodyText": "Remove extra blank lines", "url": "https://github.com/trinodb/trino/pull/2733#discussion_r374989353", "createdAt": "2020-02-04T23:49:38Z", "author": {"login": "electrum"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoPreparedStatement.java", "diffHunk": "@@ -480,12 +493,7 @@ public void setTime(int parameterIndex, Time x, Calendar cal)\n         throw new NotImplementedException(\"PreparedStatement\", \"setTime\");\n     }\n \n-    @Override\n-    public void setTimestamp(int parameterIndex, Timestamp x, Calendar cal)\n-            throws SQLException\n-    {\n-        throw new NotImplementedException(\"PreparedStatement\", \"setTimestamp\");\n-    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 863, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}