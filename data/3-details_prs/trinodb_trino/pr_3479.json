{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NjcxNTcy", "number": 3479, "title": "Fix stats collection for JDBC based connector", "bodyText": "", "createdAt": "2020-04-19T14:15:35Z", "url": "https://github.com/trinodb/trino/pull/3479", "merged": true, "mergeCommit": {"oid": "7d211efc33e5ca2ad9d2da8fb0514da77163208b"}, "closed": true, "closedAt": "2020-04-28T10:41:53Z", "author": {"login": "Praveen2112"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZM1zYgFqTM5NjAzNTIwMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABccAl0OABqjMyNzk0NDYwNzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MDM1MjAw", "url": "https://github.com/trinodb/trino/pull/3479#pullrequestreview-396035200", "createdAt": "2020-04-19T16:11:43Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxNjoxMTo0M1rOGH5p9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxNjoxMTo0M1rOGH5p9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkzNzg0NA==", "bodyText": "What was wrong?", "url": "https://github.com/trinodb/trino/pull/3479#discussion_r410937844", "createdAt": "2020-04-19T16:11:43Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcDiagnosticModule.java", "diffHunk": "@@ -58,21 +58,19 @@ public void configure(Binder binder)\n     @StatsCollecting\n     public JdbcClient createJdbcClientWithStats(@ForBaseJdbc JdbcClient client)\n     {\n-        StatisticsAwareJdbcClient statisticsAwareJdbcClient = new StatisticsAwareJdbcClient(client);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NDA4MDY3", "url": "https://github.com/trinodb/trino/pull/3479#pullrequestreview-396408067", "createdAt": "2020-04-20T12:31:20Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMjozMToyMFrOGISGyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMjozMzoxNVrOGISLTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMzODQ0Mw==", "bodyText": "Why?", "url": "https://github.com/trinodb/trino/pull/3479#discussion_r411338443", "createdAt": "2020-04-20T12:31:20Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/test/java/io/prestosql/plugin/jdbc/TestingH2JdbcModule.java", "diffHunk": "@@ -26,7 +26,7 @@\n \n import static java.lang.String.format;\n \n-class TestingH2JdbcModule\n+public class TestingH2JdbcModule", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMzODY1Mw==", "bodyText": "just throws Exception?", "url": "https://github.com/trinodb/trino/pull/3479#discussion_r411338653", "createdAt": "2020-04-20T12:31:41Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/test/java/io/prestosql/plugin/jdbc/jmx/TestJmxStats.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc.jmx;\n+\n+import com.google.common.collect.ImmutableMap;\n+import io.prestosql.plugin.jdbc.JdbcPlugin;\n+import io.prestosql.plugin.jdbc.TestingH2JdbcModule;\n+import io.prestosql.spi.Plugin;\n+import io.prestosql.spi.connector.ConnectorFactory;\n+import io.prestosql.testing.TestingConnectorContext;\n+import org.assertj.core.util.Arrays;\n+import org.testng.annotations.Test;\n+\n+import javax.management.InstanceNotFoundException;\n+import javax.management.IntrospectionException;\n+import javax.management.MBeanInfo;\n+import javax.management.MBeanServer;\n+import javax.management.MalformedObjectNameException;\n+import javax.management.ObjectName;\n+import javax.management.ReflectionException;\n+\n+import static com.google.common.collect.Iterables.getOnlyElement;\n+import static java.lang.String.format;\n+import static java.lang.management.ManagementFactory.getPlatformMBeanServer;\n+import static org.testng.Assert.assertFalse;\n+\n+public class TestJmxStats\n+{\n+    @Test\n+    public void testJmxStatsExposure()\n+            throws MalformedObjectNameException, IntrospectionException, InstanceNotFoundException, ReflectionException", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMzODgzMw==", "bodyText": "Please remove this for", "url": "https://github.com/trinodb/trino/pull/3479#discussion_r411338833", "createdAt": "2020-04-20T12:31:58Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/test/java/io/prestosql/plugin/jdbc/jmx/TestJmxStats.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc.jmx;\n+\n+import com.google.common.collect.ImmutableMap;\n+import io.prestosql.plugin.jdbc.JdbcPlugin;\n+import io.prestosql.plugin.jdbc.TestingH2JdbcModule;\n+import io.prestosql.spi.Plugin;\n+import io.prestosql.spi.connector.ConnectorFactory;\n+import io.prestosql.testing.TestingConnectorContext;\n+import org.assertj.core.util.Arrays;\n+import org.testng.annotations.Test;\n+\n+import javax.management.InstanceNotFoundException;\n+import javax.management.IntrospectionException;\n+import javax.management.MBeanInfo;\n+import javax.management.MBeanServer;\n+import javax.management.MalformedObjectNameException;\n+import javax.management.ObjectName;\n+import javax.management.ReflectionException;\n+\n+import static com.google.common.collect.Iterables.getOnlyElement;\n+import static java.lang.String.format;\n+import static java.lang.management.ManagementFactory.getPlatformMBeanServer;\n+import static org.testng.Assert.assertFalse;\n+\n+public class TestJmxStats\n+{\n+    @Test\n+    public void testJmxStatsExposure()\n+            throws MalformedObjectNameException, IntrospectionException, InstanceNotFoundException, ReflectionException\n+    {\n+        Plugin plugin = new JdbcPlugin(\"base-jdbc\", new TestingH2JdbcModule());\n+        ConnectorFactory factory = getOnlyElement(plugin.getConnectorFactories());\n+        factory.create(\"test\", ImmutableMap.of(\"connection-url\", \"jdbc\"), new TestingConnectorContext());\n+        MBeanServer mbeanServer = getPlatformMBeanServer();\n+        for (String domainName : mbeanServer.getDomains()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMzOTIzMw==", "bodyText": "static import", "url": "https://github.com/trinodb/trino/pull/3479#discussion_r411339233", "createdAt": "2020-04-20T12:32:37Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/test/java/io/prestosql/plugin/jdbc/jmx/TestJmxStats.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc.jmx;\n+\n+import com.google.common.collect.ImmutableMap;\n+import io.prestosql.plugin.jdbc.JdbcPlugin;\n+import io.prestosql.plugin.jdbc.TestingH2JdbcModule;\n+import io.prestosql.spi.Plugin;\n+import io.prestosql.spi.connector.ConnectorFactory;\n+import io.prestosql.testing.TestingConnectorContext;\n+import org.assertj.core.util.Arrays;\n+import org.testng.annotations.Test;\n+\n+import javax.management.InstanceNotFoundException;\n+import javax.management.IntrospectionException;\n+import javax.management.MBeanInfo;\n+import javax.management.MBeanServer;\n+import javax.management.MalformedObjectNameException;\n+import javax.management.ObjectName;\n+import javax.management.ReflectionException;\n+\n+import static com.google.common.collect.Iterables.getOnlyElement;\n+import static java.lang.String.format;\n+import static java.lang.management.ManagementFactory.getPlatformMBeanServer;\n+import static org.testng.Assert.assertFalse;\n+\n+public class TestJmxStats\n+{\n+    @Test\n+    public void testJmxStatsExposure()\n+            throws MalformedObjectNameException, IntrospectionException, InstanceNotFoundException, ReflectionException\n+    {\n+        Plugin plugin = new JdbcPlugin(\"base-jdbc\", new TestingH2JdbcModule());\n+        ConnectorFactory factory = getOnlyElement(plugin.getConnectorFactories());\n+        factory.create(\"test\", ImmutableMap.of(\"connection-url\", \"jdbc\"), new TestingConnectorContext());\n+        MBeanServer mbeanServer = getPlatformMBeanServer();\n+        for (String domainName : mbeanServer.getDomains()) {\n+            System.out.println(domainName);\n+        }\n+        for (ObjectName objectName : mbeanServer.queryNames(new ObjectName(\"io.prestosql.plugin.jdbc:*\"), null)) {\n+            MBeanInfo mbeanInfo = mbeanServer.getMBeanInfo(objectName);\n+            assertFalse(Arrays.isNullOrEmpty(mbeanInfo.getAttributes()), format(\"Object %s doesn't expose JMX stats\", objectName.getCanonicalName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMzOTU5Nw==", "bodyText": "Is this test failing without changes in presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcDiagnosticModule.java?", "url": "https://github.com/trinodb/trino/pull/3479#discussion_r411339597", "createdAt": "2020-04-20T12:33:15Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/test/java/io/prestosql/plugin/jdbc/jmx/TestJmxStats.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc.jmx;\n+\n+import com.google.common.collect.ImmutableMap;\n+import io.prestosql.plugin.jdbc.JdbcPlugin;\n+import io.prestosql.plugin.jdbc.TestingH2JdbcModule;\n+import io.prestosql.spi.Plugin;\n+import io.prestosql.spi.connector.ConnectorFactory;\n+import io.prestosql.testing.TestingConnectorContext;\n+import org.assertj.core.util.Arrays;\n+import org.testng.annotations.Test;\n+\n+import javax.management.InstanceNotFoundException;\n+import javax.management.IntrospectionException;\n+import javax.management.MBeanInfo;\n+import javax.management.MBeanServer;\n+import javax.management.MalformedObjectNameException;\n+import javax.management.ObjectName;\n+import javax.management.ReflectionException;\n+\n+import static com.google.common.collect.Iterables.getOnlyElement;\n+import static java.lang.String.format;\n+import static java.lang.management.ManagementFactory.getPlatformMBeanServer;\n+import static org.testng.Assert.assertFalse;\n+\n+public class TestJmxStats\n+{\n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NDQxMzgx", "url": "https://github.com/trinodb/trino/pull/3479#pullrequestreview-396441381", "createdAt": "2020-04-20T13:15:40Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMzoxNTo0MFrOGIT4Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMzoxNzoxM1rOGIT8jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM2NzQ5MA==", "bodyText": "Please move JmxTest to different package. I don't think we need separate package for single test, do we? Otherwise please squash commits.", "url": "https://github.com/trinodb/trino/pull/3479#discussion_r411367490", "createdAt": "2020-04-20T13:15:40Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/test/java/io/prestosql/plugin/jdbc/TestingH2JdbcModule.java", "diffHunk": "@@ -26,7 +26,7 @@\n \n import static java.lang.String.format;\n \n-class TestingH2JdbcModule\n+public class TestingH2JdbcModule", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMzODQ0Mw=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM2ODU4OA==", "bodyText": "Please make sure that mbeanServer.queryNames(new ObjectName(\"io.prestosql.plugin.jdbc:*\") does not return empty list. Also please verify that few that we care of are there (jdbc client and coonnection factory)", "url": "https://github.com/trinodb/trino/pull/3479#discussion_r411368588", "createdAt": "2020-04-20T13:17:13Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/test/java/io/prestosql/plugin/jdbc/jmx/TestJmxStats.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc.jmx;\n+\n+import com.google.common.collect.ImmutableMap;\n+import io.prestosql.plugin.jdbc.JdbcPlugin;\n+import io.prestosql.plugin.jdbc.TestingH2JdbcModule;\n+import io.prestosql.spi.Plugin;\n+import io.prestosql.spi.connector.ConnectorFactory;\n+import io.prestosql.testing.TestingConnectorContext;\n+import org.testng.annotations.Test;\n+\n+import javax.management.MBeanInfo;\n+import javax.management.MBeanServer;\n+import javax.management.ObjectName;\n+\n+import static com.google.common.collect.Iterables.getOnlyElement;\n+import static java.lang.String.format;\n+import static java.lang.management.ManagementFactory.getPlatformMBeanServer;\n+import static org.assertj.core.util.Arrays.isNullOrEmpty;\n+import static org.testng.Assert.assertFalse;\n+\n+public class TestJmxStats\n+{\n+    @Test\n+    public void testJmxStatsExposure()\n+            throws Exception\n+    {\n+        Plugin plugin = new JdbcPlugin(\"base-jdbc\", new TestingH2JdbcModule());\n+        ConnectorFactory factory = getOnlyElement(plugin.getConnectorFactories());\n+        factory.create(\"test\", ImmutableMap.of(\"connection-url\", \"jdbc\"), new TestingConnectorContext());\n+        MBeanServer mbeanServer = getPlatformMBeanServer();\n+        for (ObjectName objectName : mbeanServer.queryNames(new ObjectName(\"io.prestosql.plugin.jdbc:*\"), null)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 44}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNTg4Mjg1", "url": "https://github.com/trinodb/trino/pull/3479#pullrequestreview-401588285", "createdAt": "2020-04-28T07:59:15Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "507c64cd605b9c1ccd69395fa69e1ce925be6ec9", "author": {"user": {"login": "Praveen2112", "name": "Praveen Krishna"}}, "url": "https://github.com/trinodb/trino/commit/507c64cd605b9c1ccd69395fa69e1ce925be6ec9", "committedDate": "2020-04-28T09:37:05Z", "message": "Expose JdbcClient invocation statistics in JMX"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "507c64cd605b9c1ccd69395fa69e1ce925be6ec9", "author": {"user": {"login": "Praveen2112", "name": "Praveen Krishna"}}, "url": "https://github.com/trinodb/trino/commit/507c64cd605b9c1ccd69395fa69e1ce925be6ec9", "committedDate": "2020-04-28T09:37:05Z", "message": "Expose JdbcClient invocation statistics in JMX"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1577, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}