{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExOTkzMjEy", "number": 3595, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwOTozNToyMlrOD4U8Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxOToxMTo1NVrOD4r7Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzg5ODkwOnYy", "diffSide": "RIGHT", "path": "presto-server-rpm/src/main/script/symlink.groovy", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwOTozNToyMlrOGPF6TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxOTowODoyN1rOGPlePA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ3ODY2OA==", "bodyText": "Can we use content checksum here?\njar name = artifact + id, without group, so it's not unique\nand this would also prevent potential surprises like #2470", "url": "https://github.com/trinodb/trino/pull/3595#discussion_r418478668", "createdAt": "2020-05-01T09:35:22Z", "author": {"login": "findepi"}, "path": "presto-server-rpm/src/main/script/symlink.groovy", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import java.nio.file.Files\n+import java.nio.file.LinkOption\n+import java.nio.file.Path\n+import java.nio.file.Paths\n+\n+Path root = Paths.get(properties['root'])\n+Path shared = root.resolve('shared')\n+\n+Files.createDirectory(shared)\n+\n+List<String> files = new FileNameFinder().getFileNames(root.toString(), '**/*.jar')\n+\n+for (file in files) {\n+    Path source = Paths.get(file)\n+    Path target = shared.resolve(source.getFileName())", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODg0NjU4OQ==", "bodyText": "I considered that, but the current hardlink handling in provisio only uses the name, so it doesn't buy us anything at this point. If we implement that in provisio, this should change, too.", "url": "https://github.com/trinodb/trino/pull/3595#discussion_r418846589", "createdAt": "2020-05-02T02:50:18Z", "author": {"login": "electrum"}, "path": "presto-server-rpm/src/main/script/symlink.groovy", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import java.nio.file.Files\n+import java.nio.file.LinkOption\n+import java.nio.file.Path\n+import java.nio.file.Paths\n+\n+Path root = Paths.get(properties['root'])\n+Path shared = root.resolve('shared')\n+\n+Files.createDirectory(shared)\n+\n+List<String> files = new FileNameFinder().getFileNames(root.toString(), '**/*.jar')\n+\n+for (file in files) {\n+    Path source = Paths.get(file)\n+    Path target = shared.resolve(source.getFileName())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ3ODY2OA=="}, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODg0NzUxNQ==", "bodyText": "I'll add a comment to this effect here.", "url": "https://github.com/trinodb/trino/pull/3595#discussion_r418847515", "createdAt": "2020-05-02T02:52:58Z", "author": {"login": "electrum"}, "path": "presto-server-rpm/src/main/script/symlink.groovy", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import java.nio.file.Files\n+import java.nio.file.LinkOption\n+import java.nio.file.Path\n+import java.nio.file.Paths\n+\n+Path root = Paths.get(properties['root'])\n+Path shared = root.resolve('shared')\n+\n+Files.createDirectory(shared)\n+\n+List<String> files = new FileNameFinder().getFileNames(root.toString(), '**/*.jar')\n+\n+for (file in files) {\n+    Path source = Paths.get(file)\n+    Path target = shared.resolve(source.getFileName())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ3ODY2OA=="}, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk0MjU2NA==", "bodyText": "I understand, but this is something we should address, so why not do right thing for RPM from the start?\nI don't think it's difficult or expensive to do.", "url": "https://github.com/trinodb/trino/pull/3595#discussion_r418942564", "createdAt": "2020-05-02T10:40:05Z", "author": {"login": "findepi"}, "path": "presto-server-rpm/src/main/script/symlink.groovy", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import java.nio.file.Files\n+import java.nio.file.LinkOption\n+import java.nio.file.Path\n+import java.nio.file.Paths\n+\n+Path root = Paths.get(properties['root'])\n+Path shared = root.resolve('shared')\n+\n+Files.createDirectory(shared)\n+\n+List<String> files = new FileNameFinder().getFileNames(root.toString(), '**/*.jar')\n+\n+for (file in files) {\n+    Path source = Paths.get(file)\n+    Path target = shared.resolve(source.getFileName())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ3ODY2OA=="}, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5MDc5Mw==", "bodyText": "You're right, it's easy to do. I added a check that the files are the same.", "url": "https://github.com/trinodb/trino/pull/3595#discussion_r418990793", "createdAt": "2020-05-02T18:20:20Z", "author": {"login": "electrum"}, "path": "presto-server-rpm/src/main/script/symlink.groovy", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import java.nio.file.Files\n+import java.nio.file.LinkOption\n+import java.nio.file.Path\n+import java.nio.file.Paths\n+\n+Path root = Paths.get(properties['root'])\n+Path shared = root.resolve('shared')\n+\n+Files.createDirectory(shared)\n+\n+List<String> files = new FileNameFinder().getFileNames(root.toString(), '**/*.jar')\n+\n+for (file in files) {\n+    Path source = Paths.get(file)\n+    Path target = shared.resolve(source.getFileName())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ3ODY2OA=="}, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5NTc3Mg==", "bodyText": "Thanks", "url": "https://github.com/trinodb/trino/pull/3595#discussion_r418995772", "createdAt": "2020-05-02T19:08:27Z", "author": {"login": "findepi"}, "path": "presto-server-rpm/src/main/script/symlink.groovy", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import java.nio.file.Files\n+import java.nio.file.LinkOption\n+import java.nio.file.Path\n+import java.nio.file.Paths\n+\n+Path root = Paths.get(properties['root'])\n+Path shared = root.resolve('shared')\n+\n+Files.createDirectory(shared)\n+\n+List<String> files = new FileNameFinder().getFileNames(root.toString(), '**/*.jar')\n+\n+for (file in files) {\n+    Path source = Paths.get(file)\n+    Path target = shared.resolve(source.getFileName())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ3ODY2OA=="}, "originalCommit": null, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNzY2NTQ3OnYy", "diffSide": "RIGHT", "path": "presto-server-rpm/src/main/script/symlink.groovy", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxOToxMTo1NVrOGPlfnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQyMToyMzo1M1rOGPmUgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5NjEyNw==", "bodyText": "isSameFile is about paths, not content, so i would expect this fails... but it apparently doesn't.\nWhat am i missing?", "url": "https://github.com/trinodb/trino/pull/3595#discussion_r418996127", "createdAt": "2020-05-02T19:11:55Z", "author": {"login": "findepi"}, "path": "presto-server-rpm/src/main/script/symlink.groovy", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import java.nio.file.Files\n+import java.nio.file.LinkOption\n+import java.nio.file.Path\n+import java.nio.file.Paths\n+\n+Path root = Paths.get(properties['root'])\n+Path shared = root.resolve('shared')\n+\n+Files.createDirectory(shared)\n+\n+List<String> files = new FileNameFinder().getFileNames(root.toString(), '**/*.jar')\n+\n+for (file in files) {\n+    Path source = Paths.get(file)\n+    Path target = shared.resolve(source.getFileName())\n+    if (!Files.exists(target, LinkOption.NOFOLLOW_LINKS)) {\n+        Files.move(source, target)\n+    }\n+    else if (!Files.isSameFile(source, target)) {\n+        throw new RuntimeException(\"Not same file: $source <> $target\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5Nzc1Ng==", "bodyText": "It's checking that the paths reference the same file, meaning they are the same device and inode (i.e. hard links to the same file).", "url": "https://github.com/trinodb/trino/pull/3595#discussion_r418997756", "createdAt": "2020-05-02T19:27:07Z", "author": {"login": "electrum"}, "path": "presto-server-rpm/src/main/script/symlink.groovy", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import java.nio.file.Files\n+import java.nio.file.LinkOption\n+import java.nio.file.Path\n+import java.nio.file.Paths\n+\n+Path root = Paths.get(properties['root'])\n+Path shared = root.resolve('shared')\n+\n+Files.createDirectory(shared)\n+\n+List<String> files = new FileNameFinder().getFileNames(root.toString(), '**/*.jar')\n+\n+for (file in files) {\n+    Path source = Paths.get(file)\n+    Path target = shared.resolve(source.getFileName())\n+    if (!Files.exists(target, LinkOption.NOFOLLOW_LINKS)) {\n+        Files.move(source, target)\n+    }\n+    else if (!Files.isSameFile(source, target)) {\n+        throw new RuntimeException(\"Not same file: $source <> $target\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5NjEyNw=="}, "originalCommit": null, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAwOTY2NA==", "bodyText": "is it build on the hard-linked directory? please add a comment", "url": "https://github.com/trinodb/trino/pull/3595#discussion_r419009664", "createdAt": "2020-05-02T21:23:53Z", "author": {"login": "findepi"}, "path": "presto-server-rpm/src/main/script/symlink.groovy", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import java.nio.file.Files\n+import java.nio.file.LinkOption\n+import java.nio.file.Path\n+import java.nio.file.Paths\n+\n+Path root = Paths.get(properties['root'])\n+Path shared = root.resolve('shared')\n+\n+Files.createDirectory(shared)\n+\n+List<String> files = new FileNameFinder().getFileNames(root.toString(), '**/*.jar')\n+\n+for (file in files) {\n+    Path source = Paths.get(file)\n+    Path target = shared.resolve(source.getFileName())\n+    if (!Files.exists(target, LinkOption.NOFOLLOW_LINKS)) {\n+        Files.move(source, target)\n+    }\n+    else if (!Files.isSameFile(source, target)) {\n+        throw new RuntimeException(\"Not same file: $source <> $target\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5NjEyNw=="}, "originalCommit": null, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4984, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}