{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1MzcxMDAx", "number": 5008, "title": "Reuse s/SuiteConfig/EnvironmentConfig with env commands", "bodyText": "This PR:\n\nrenames SuiteConfig to EnvironmentConfig (it's closer to Environment than to Suite)\nuses EnvironmentConfig when running tests with test run and for env up)\nlists configs in env list command\nremoves passing of EnvironmentConfig values through command-line options (it's not necessary anymore)\nprovides ConfigEnvBased (config-env-based) that extends config-default but allows individual values to be overwritten using ENV variables\nsimplifies environment definitions removing direct usage of EnvironmentOptions when possible\nmakes debugging of Presto containers consistent for every environment", "createdAt": "2020-08-28T12:14:08Z", "url": "https://github.com/trinodb/trino/pull/5008", "merged": true, "mergeCommit": {"oid": "6a1633fb04e410fef385b0b26ba5998bab0dc92b"}, "closed": true, "closedAt": "2020-08-29T11:17:21Z", "author": {"login": "wendigo"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDUI5xABqjM3MDM3MDQ5MjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDmSuNgBqjM3MDYzNTExOTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3Njg4ODA2", "url": "https://github.com/trinodb/trino/pull/5008#pullrequestreview-477688806", "createdAt": "2020-08-28T12:32:35Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjozMjozNVrOHJCSog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjozMjozNVrOHJCSog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTIzNjc3MA==", "bodyText": "why so?\nI guess the modules can add both new suites and new environments. Right?", "url": "https://github.com/trinodb/trino/pull/5008#discussion_r479236770", "createdAt": "2020-08-28T12:32:35Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/SuiteList.java", "diffHunk": "@@ -37,11 +38,11 @@\n public final class SuiteList\n         implements Runnable\n {\n-    private final Module additionalSuites;\n+    private final Module additionalEnvironments;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3NjkxMDE5", "url": "https://github.com/trinodb/trino/pull/5008#pullrequestreview-477691019", "createdAt": "2020-08-28T12:36:06Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjozNjowNlrOHJCjHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjozNjowNlrOHJCjHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI0MDk4OQ==", "bodyText": "these are not providers. These are just configs.", "url": "https://github.com/trinodb/trino/pull/5008#discussion_r479240989", "createdAt": "2020-08-28T12:36:06Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentConfigFactory.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.tests.product.launcher.env;\n+\n+import com.google.common.collect.Ordering;\n+import com.google.inject.Inject;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+import static java.util.Objects.requireNonNull;\n+\n+public class EnvironmentConfigFactory\n+{\n+    private final Map<String, EnvironmentConfig> configProviders;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3Njk0NDg3", "url": "https://github.com/trinodb/trino/pull/5008#pullrequestreview-477694487", "createdAt": "2020-08-28T12:41:27Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjo0MToyN1rOHJC8Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjo0MToyN1rOHJC8Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI0NzQyNg==", "bodyText": "This limits the expressiveness of env up. Are you sure people did not depend on possibility to build test environment bit by bit?", "url": "https://github.com/trinodb/trino/pull/5008#discussion_r479247426", "createdAt": "2020-08-28T12:41:27Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentOptions.java", "diffHunk": "@@ -25,17 +23,8 @@\n \n public final class EnvironmentOptions\n {\n-    @Option(name = \"--hadoop-base-image\", title = \"image\", description = \"Hadoop base image\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3Njk3MTE4", "url": "https://github.com/trinodb/trino/pull/5008#pullrequestreview-477697118", "createdAt": "2020-08-28T12:45:12Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjo0NToxMlrOHJDJrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjo0NToxMlrOHJDJrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI1MDg2Mg==", "bodyText": "move above enablePrestoJavaDebugger(DockerContainer container, int debugPort)", "url": "https://github.com/trinodb/trino/pull/5008#discussion_r479250862", "createdAt": "2020-08-28T12:45:12Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/common/Standard.java", "diffHunk": "@@ -153,4 +145,20 @@ public static void enablePrestoJavaDebugger(DockerContainer container, int debug\n             throw new UncheckedIOException(e);\n         }\n     }\n+\n+    public static void enablePrestoJavaDebugger(String containerName, DockerContainer dockerContainer)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 54}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3NzUwODg0", "url": "https://github.com/trinodb/trino/pull/5008#pullrequestreview-477750884", "createdAt": "2020-08-28T13:58:06Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzo1ODowNlrOHJHMUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDowNjoxMFrOHJHqBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMxNzA3Mg==", "bodyText": "defensive copy", "url": "https://github.com/trinodb/trino/pull/5008#discussion_r479317072", "createdAt": "2020-08-28T13:58:06Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentConfigFactory.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.tests.product.launcher.env;\n+\n+import com.google.common.collect.Ordering;\n+import com.google.inject.Inject;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+import static java.util.Objects.requireNonNull;\n+\n+public class EnvironmentConfigFactory\n+{\n+    private final Map<String, EnvironmentConfig> configurations;\n+\n+    @Inject\n+    public EnvironmentConfigFactory(Map<String, EnvironmentConfig> configurations)\n+    {\n+        this.configurations = requireNonNull(configurations, \"configurations is null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMyMzQ1Nw==", "bodyText": "call it baseEnvironmentOptions and instead of mutating it create new instance based on it in provideEnvironmentOptions", "url": "https://github.com/trinodb/trino/pull/5008#discussion_r479323457", "createdAt": "2020-08-28T14:04:49Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentModule.java", "diffHunk": "@@ -14,26 +14,36 @@\n package io.prestosql.tests.product.launcher.env;\n \n import com.google.inject.Binder;\n+import com.google.inject.Inject;\n import com.google.inject.Module;\n+import com.google.inject.Provides;\n+import com.google.inject.Singleton;\n import com.google.inject.multibindings.MapBinder;\n+import io.prestosql.tests.product.launcher.PathResolver;\n import io.prestosql.tests.product.launcher.env.common.Hadoop;\n import io.prestosql.tests.product.launcher.env.common.Kafka;\n import io.prestosql.tests.product.launcher.env.common.Kerberos;\n import io.prestosql.tests.product.launcher.env.common.KerberosKms;\n import io.prestosql.tests.product.launcher.env.common.Standard;\n import io.prestosql.tests.product.launcher.testcontainers.PortBinder;\n \n+import java.io.File;\n+\n import static com.google.inject.multibindings.MapBinder.newMapBinder;\n+import static io.prestosql.tests.product.launcher.env.Environments.nameForConfigClass;\n import static java.util.Objects.requireNonNull;\n \n public final class EnvironmentModule\n         implements Module\n {\n     public static final String BASE_PACKAGE = \"io.prestosql.tests.product.launcher.env.environment\";\n+    public static final String BASE_CONFIG_PACKAGE = \"io.prestosql.tests.product.launcher.env.configs\";\n+    private final EnvironmentOptions environmentOptions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMyNDUxMA==", "bodyText": "call out to super.getExcludedGroups", "url": "https://github.com/trinodb/trino/pull/5008#discussion_r479324510", "createdAt": "2020-08-28T14:05:58Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/configs/ConfigEnvBased.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.tests.product.launcher.env.configs;\n+\n+import com.google.common.base.Splitter;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static java.lang.System.getenv;\n+\n+public class ConfigEnvBased\n+        extends ConfigDefault\n+{\n+    @Override\n+    public String getHadoopBaseImage()\n+    {\n+        return getEnvOrDefault(\"HADOOP_BASE_IMAGE\", super.getHadoopBaseImage());\n+    }\n+\n+    @Override\n+    public String getImagesVersion()\n+    {\n+        return getEnvOrDefault(\"DOCKER_IMAGES_VERSION\", super.getImagesVersion());\n+    }\n+\n+    @Override\n+    public String getHadoopImagesVersion()\n+    {\n+        return getEnvOrDefault(\"HADOOP_IMAGES_VERSION\", super.getHadoopImagesVersion());\n+    }\n+\n+    @Override\n+    public String getTemptoEnvironmentConfigFile()\n+    {\n+        return getEnvOrDefault(\"TEMPTO_ENVIRONMENT_CONFIG_FILE\", super.getTemptoEnvironmentConfigFile());\n+    }\n+\n+    @Override\n+    public List<String> getExcludedGroups()\n+    {\n+        return Splitter.on(',')\n+                .omitEmptyStrings()\n+                .trimResults()\n+                .splitToList(getEnvOrDefault(\"DISTRO_SKIP_GROUP\", \"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMyNDY3Nw==", "bodyText": "call out to super.getExcludedTests", "url": "https://github.com/trinodb/trino/pull/5008#discussion_r479324677", "createdAt": "2020-08-28T14:06:10Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/configs/ConfigEnvBased.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.tests.product.launcher.env.configs;\n+\n+import com.google.common.base.Splitter;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static java.lang.System.getenv;\n+\n+public class ConfigEnvBased\n+        extends ConfigDefault\n+{\n+    @Override\n+    public String getHadoopBaseImage()\n+    {\n+        return getEnvOrDefault(\"HADOOP_BASE_IMAGE\", super.getHadoopBaseImage());\n+    }\n+\n+    @Override\n+    public String getImagesVersion()\n+    {\n+        return getEnvOrDefault(\"DOCKER_IMAGES_VERSION\", super.getImagesVersion());\n+    }\n+\n+    @Override\n+    public String getHadoopImagesVersion()\n+    {\n+        return getEnvOrDefault(\"HADOOP_IMAGES_VERSION\", super.getHadoopImagesVersion());\n+    }\n+\n+    @Override\n+    public String getTemptoEnvironmentConfigFile()\n+    {\n+        return getEnvOrDefault(\"TEMPTO_ENVIRONMENT_CONFIG_FILE\", super.getTemptoEnvironmentConfigFile());\n+    }\n+\n+    @Override\n+    public List<String> getExcludedGroups()\n+    {\n+        return Splitter.on(',')\n+                .omitEmptyStrings()\n+                .trimResults()\n+                .splitToList(getEnvOrDefault(\"DISTRO_SKIP_GROUP\", \"\"));\n+    }\n+\n+    @Override\n+    public List<String> getExcludedTests()\n+    {\n+        return Splitter.on(',')\n+                .omitEmptyStrings()\n+                .trimResults()\n+                .splitToList(getEnvOrDefault(\"DISTRO_SKIP_TEST\", \"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d353cdb1d9850c6d8c7b9d8a8ca39837af71b751", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/d353cdb1d9850c6d8c7b9d8a8ca39837af71b751", "committedDate": "2020-08-29T09:32:16Z", "message": "Rename SuiteConfig to EnvironmentConfig"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0691026d5f0a338a2de5931b3a7c826a199312d", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/e0691026d5f0a338a2de5931b3a7c826a199312d", "committedDate": "2020-08-29T09:32:17Z", "message": "Simplify environment configuration passing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13dbb62be62d446b337938a94becd1ffc5dfe3b3", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/13dbb62be62d446b337938a94becd1ffc5dfe3b3", "committedDate": "2020-08-29T09:32:17Z", "message": "Simplify environment definitions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2f57946cab416b21dee20087d609309dcbc4121", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/e2f57946cab416b21dee20087d609309dcbc4121", "committedDate": "2020-08-29T09:32:17Z", "message": "Add ENV based environment config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e5f8c287679e7a4fd7998f4764cd1df93184f43", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/6e5f8c287679e7a4fd7998f4764cd1df93184f43", "committedDate": "2020-08-29T09:32:17Z", "message": "Remove unnecessary qualifier"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "6e5f8c287679e7a4fd7998f4764cd1df93184f43", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/6e5f8c287679e7a4fd7998f4764cd1df93184f43", "committedDate": "2020-08-29T09:32:17Z", "message": "Remove unnecessary qualifier"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4238, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}