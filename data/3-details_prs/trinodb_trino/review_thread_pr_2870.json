{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NTgxOTQy", "number": 2870, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMjo1MDoxNFrODj-U7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMjo1NzowNFrODk2NBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDQ3OTE2OnYy", "diffSide": "RIGHT", "path": "presto-cli/src/main/java/io/prestosql/cli/AlignedTablePrinter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMjo1MDoxNFrOFwFAjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMjo1MDoxNFrOFwFAjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk1ODAzMA==", "bodyText": "move under createHexPairs so that the 3 hex-related functions stay together", "url": "https://github.com/trinodb/trino/pull/2870#discussion_r385958030", "createdAt": "2020-02-28T22:50:14Z", "author": {"login": "findepi"}, "path": "presto-cli/src/main/java/io/prestosql/cli/AlignedTablePrinter.java", "diffHunk": "@@ -186,6 +196,24 @@ static String formatHexDump(byte[] bytes)\n         return HEX_BYTE_JOINER.join(createHexPairs(bytes));\n     }\n \n+    static String formatList(List<? extends Object> list)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDQ4Mzk2OnYy", "diffSide": "RIGHT", "path": "presto-cli/src/main/java/io/prestosql/cli/AlignedTablePrinter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMjo1Mjo1OFrOFwFDiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMjo1Mjo1OFrOFwFDiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk1ODc5Mg==", "bodyText": "I think it would be better to explicitly format the list:\nreturn list.stream()\n .map(AlignedTablePrinter::formatValue)\n .collect(joining(\", \", \"[\", \"]));", "url": "https://github.com/trinodb/trino/pull/2870#discussion_r385958792", "createdAt": "2020-02-28T22:52:58Z", "author": {"login": "findepi"}, "path": "presto-cli/src/main/java/io/prestosql/cli/AlignedTablePrinter.java", "diffHunk": "@@ -186,6 +196,24 @@ static String formatHexDump(byte[] bytes)\n         return HEX_BYTE_JOINER.join(createHexPairs(bytes));\n     }\n \n+    static String formatList(List<? extends Object> list)\n+    {\n+        ImmutableList.Builder<Object> formattedList = ImmutableList.builder();\n+\n+        list.forEach(value -> formattedList.add(formatValue(value)));\n+\n+        return formattedList.build().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDQ4NDgzOnYy", "diffSide": "RIGHT", "path": "presto-cli/src/main/java/io/prestosql/cli/AlignedTablePrinter.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMjo1MzoyNlrOFwFEGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTozOTowOFrOFxXehQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk1ODkzNg==", "bodyText": "should key be formatted as well?", "url": "https://github.com/trinodb/trino/pull/2870#discussion_r385958936", "createdAt": "2020-02-28T22:53:26Z", "author": {"login": "findepi"}, "path": "presto-cli/src/main/java/io/prestosql/cli/AlignedTablePrinter.java", "diffHunk": "@@ -186,6 +196,24 @@ static String formatHexDump(byte[] bytes)\n         return HEX_BYTE_JOINER.join(createHexPairs(bytes));\n     }\n \n+    static String formatList(List<? extends Object> list)\n+    {\n+        ImmutableList.Builder<Object> formattedList = ImmutableList.builder();\n+\n+        list.forEach(value -> formattedList.add(formatValue(value)));\n+\n+        return formattedList.build().toString();\n+    }\n+\n+    static String formatMap(Map<? extends Object, ? extends Object> map)\n+    {\n+        ImmutableMap.Builder<Object, Object> formattedMap = ImmutableMap.builder();\n+\n+        map.keySet().forEach(key -> formattedMap.put(key, formatValue(map.get(key))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5NDEyOA==", "bodyText": "I guess so", "url": "https://github.com/trinodb/trino/pull/2870#discussion_r387294128", "createdAt": "2020-03-03T21:07:52Z", "author": {"login": "wendigo"}, "path": "presto-cli/src/main/java/io/prestosql/cli/AlignedTablePrinter.java", "diffHunk": "@@ -186,6 +196,24 @@ static String formatHexDump(byte[] bytes)\n         return HEX_BYTE_JOINER.join(createHexPairs(bytes));\n     }\n \n+    static String formatList(List<? extends Object> list)\n+    {\n+        ImmutableList.Builder<Object> formattedList = ImmutableList.builder();\n+\n+        list.forEach(value -> formattedList.add(formatValue(value)));\n+\n+        return formattedList.build().toString();\n+    }\n+\n+    static String formatMap(Map<? extends Object, ? extends Object> map)\n+    {\n+        ImmutableMap.Builder<Object, Object> formattedMap = ImmutableMap.builder();\n+\n+        map.keySet().forEach(key -> formattedMap.put(key, formatValue(map.get(key))));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk1ODkzNg=="}, "originalCommit": null, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5OTE1Mw==", "bodyText": "...  then you can't use Map to construct the final String (technically, the format function could return same String for two distinct keys)", "url": "https://github.com/trinodb/trino/pull/2870#discussion_r387299153", "createdAt": "2020-03-03T21:18:29Z", "author": {"login": "findepi"}, "path": "presto-cli/src/main/java/io/prestosql/cli/AlignedTablePrinter.java", "diffHunk": "@@ -186,6 +196,24 @@ static String formatHexDump(byte[] bytes)\n         return HEX_BYTE_JOINER.join(createHexPairs(bytes));\n     }\n \n+    static String formatList(List<? extends Object> list)\n+    {\n+        ImmutableList.Builder<Object> formattedList = ImmutableList.builder();\n+\n+        list.forEach(value -> formattedList.add(formatValue(value)));\n+\n+        return formattedList.build().toString();\n+    }\n+\n+    static String formatMap(Map<? extends Object, ? extends Object> map)\n+    {\n+        ImmutableMap.Builder<Object, Object> formattedMap = ImmutableMap.builder();\n+\n+        map.keySet().forEach(key -> formattedMap.put(key, formatValue(map.get(key))));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk1ODkzNg=="}, "originalCommit": null, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMwOTE4OQ==", "bodyText": "Yep, does it make sense right now?", "url": "https://github.com/trinodb/trino/pull/2870#discussion_r387309189", "createdAt": "2020-03-03T21:39:08Z", "author": {"login": "wendigo"}, "path": "presto-cli/src/main/java/io/prestosql/cli/AlignedTablePrinter.java", "diffHunk": "@@ -186,6 +196,24 @@ static String formatHexDump(byte[] bytes)\n         return HEX_BYTE_JOINER.join(createHexPairs(bytes));\n     }\n \n+    static String formatList(List<? extends Object> list)\n+    {\n+        ImmutableList.Builder<Object> formattedList = ImmutableList.builder();\n+\n+        list.forEach(value -> formattedList.add(formatValue(value)));\n+\n+        return formattedList.build().toString();\n+    }\n+\n+    static String formatMap(Map<? extends Object, ? extends Object> map)\n+    {\n+        ImmutableMap.Builder<Object, Object> formattedMap = ImmutableMap.builder();\n+\n+        map.keySet().forEach(key -> formattedMap.put(key, formatValue(map.get(key))));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk1ODkzNg=="}, "originalCommit": null, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTM1NjE4OnYy", "diffSide": "RIGHT", "path": "presto-cli/src/main/java/io/prestosql/cli/AlignedTablePrinter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMToyMjo0NVrOFxW_Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTozODo1M1rOFxXeFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMwMTE5MQ==", "bodyText": "unused?", "url": "https://github.com/trinodb/trino/pull/2870#discussion_r387301191", "createdAt": "2020-03-03T21:22:45Z", "author": {"login": "findepi"}, "path": "presto-cli/src/main/java/io/prestosql/cli/AlignedTablePrinter.java", "diffHunk": "@@ -195,6 +206,26 @@ static String formatHexDump(byte[] bytes)\n         return HEX_SPLITTER.split(hexDump);\n     }\n \n+    static String formatList(List<? extends Object> list)\n+    {\n+        ImmutableList.Builder<Object> formattedList = ImmutableList.builder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMwOTA3OA==", "bodyText": "Removed", "url": "https://github.com/trinodb/trino/pull/2870#discussion_r387309078", "createdAt": "2020-03-03T21:38:53Z", "author": {"login": "wendigo"}, "path": "presto-cli/src/main/java/io/prestosql/cli/AlignedTablePrinter.java", "diffHunk": "@@ -195,6 +206,26 @@ static String formatHexDump(byte[] bytes)\n         return HEX_SPLITTER.split(hexDump);\n     }\n \n+    static String formatList(List<? extends Object> list)\n+    {\n+        ImmutableList.Builder<Object> formattedList = ImmutableList.builder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMwMTE5MQ=="}, "originalCommit": null, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTYzMzk5OnYy", "diffSide": "RIGHT", "path": "presto-cli/src/main/java/io/prestosql/cli/AlignedTablePrinter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMjo1NzowNFrOFxZsIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMjo1NzowNFrOFxZsIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM0NTQ0Mw==", "bodyText": "Static import", "url": "https://github.com/trinodb/trino/pull/2870#discussion_r387345443", "createdAt": "2020-03-03T22:57:04Z", "author": {"login": "electrum"}, "path": "presto-cli/src/main/java/io/prestosql/cli/AlignedTablePrinter.java", "diffHunk": "@@ -195,6 +206,20 @@ static String formatHexDump(byte[] bytes)\n         return HEX_SPLITTER.split(hexDump);\n     }\n \n+    static String formatList(List<? extends Object> list)\n+    {\n+        return list.stream()\n+                .map(AlignedTablePrinter::formatValue)\n+                .collect(joining(\", \", \"[\", \"]\"));\n+    }\n+\n+    static String formatMap(Map<? extends Object, ? extends Object> map)\n+    {\n+        return map.entrySet().stream()\n+                .map(entry -> format(\"%s=%s\", formatValue(entry.getKey()), formatValue(entry.getValue())))\n+                .collect(Collectors.joining(\", \", \"{\", \"}\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 791, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}