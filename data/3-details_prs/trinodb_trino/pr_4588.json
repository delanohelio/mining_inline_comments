{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2Nzk5OTYy", "number": 4588, "title": "Change ROW representation on the client to avoid fake row field names", "bodyText": "Fixes #4587", "createdAt": "2020-07-26T20:16:21Z", "url": "https://github.com/trinodb/trino/pull/4588", "merged": true, "mergeCommit": {"oid": "69ce7869427a65255b0ccdf67ba75313b5f9c1c2"}, "closed": true, "closedAt": "2020-11-30T08:13:15Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 35, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4zF_0gBqjM1ODczNzUzNjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgRw6AgH2gAyNDU2Nzk5OTYyOjlmZThjMjU2ZDI2YTdhYTE4NWY3MTI4NmU1MDExNjg3ZWVmNTczNjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NTI3Njg1", "url": "https://github.com/trinodb/trino/pull/4588#pullrequestreview-455527685", "createdAt": "2020-07-27T07:20:04Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNzoyMDowNFrOG3WbEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNzoyMDo0MFrOG3WcDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY5MjI0MA==", "bodyText": "copyright", "url": "https://github.com/trinodb/trino/pull/4588#discussion_r460692240", "createdAt": "2020-07-27T07:20:04Z", "author": {"login": "kokosing"}, "path": "presto-client/src/main/java/io/prestosql/client/RowField.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package io.prestosql.client;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY5MjQ5Mw==", "bodyText": "do you need to add product tests for cli for that?", "url": "https://github.com/trinodb/trino/pull/4588#discussion_r460692493", "createdAt": "2020-07-27T07:20:40Z", "author": {"login": "kokosing"}, "path": "presto-cli/src/main/java/io/prestosql/cli/AlignedTablePrinter.java", "diffHunk": "@@ -18,6 +18,7 @@\n import com.google.common.collect.ImmutableList;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MjE5MzQy", "url": "https://github.com/trinodb/trino/pull/4588#pullrequestreview-469219342", "createdAt": "2020-08-18T11:06:25Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMTowNjoyNVrOHCOefg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMToxMDoxN1rOHCOl4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA5NjM4Mg==", "bodyText": "nit: @Nullable?", "url": "https://github.com/trinodb/trino/pull/4588#discussion_r472096382", "createdAt": "2020-08-18T11:06:25Z", "author": {"login": "losipiuk"}, "path": "presto-client/src/main/java/io/prestosql/client/RowField.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.client;\n+\n+import javax.annotation.Nullable;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class RowField\n+{\n+    private final int ordinal;\n+    private final Optional<String> name;\n+    private final Object value;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA5ODI3NQ==", "bodyText": "Do we need that?", "url": "https://github.com/trinodb/trino/pull/4588#discussion_r472098275", "createdAt": "2020-08-18T11:10:17Z", "author": {"login": "losipiuk"}, "path": "presto-jdbc/src/test/java/io/prestosql/jdbc/TestJdbcResultSet.java", "diffHunk": "@@ -315,27 +316,38 @@ public void testRow()\n     {\n         // named row\n         checkRepresentation(\"CAST(ROW(42, 'Presto') AS ROW(a_bigint bigint, a_varchar varchar(17)))\", Types.JAVA_OBJECT, (rs, column) -> {\n-            assertEquals(rs.getObject(column), ImmutableMap.of(\"a_bigint\", 42L, \"a_varchar\", \"Presto\"));\n-            assertEquals(rs.getObject(column, Map.class), ImmutableMap.of(\"a_bigint\", 42L, \"a_varchar\", \"Presto\"));\n+            assertEquals(rs.getObject(column), Row.builder()\n+                    .addField(\"a_bigint\", 42L)\n+                    .addField(\"a_varchar\", \"Presto\")\n+                    .build());\n+            // TODO assertEquals(rs.getObject(column, Map.class), ImmutableMap.of(\"a_bigint\", 42L, \"a_varchar\", \"Presto\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzQ3MTg3", "url": "https://github.com/trinodb/trino/pull/4588#pullrequestreview-538747187", "createdAt": "2020-11-25T18:11:44Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODoxMTo0NFrOH5--ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODoxMTo0NFrOH5--ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU2MjcxOA==", "bodyText": "rnn not needed (done by copyOf)", "url": "https://github.com/trinodb/trino/pull/4588#discussion_r530562718", "createdAt": "2020-11-25T18:11:44Z", "author": {"login": "losipiuk"}, "path": "presto-client/src/main/java/io/prestosql/client/Row.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.client;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+import javax.annotation.Nullable;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import static java.lang.String.format;\n+import static java.util.Objects.requireNonNull;\n+import static java.util.stream.Collectors.joining;\n+\n+public final class Row\n+{\n+    private final List<RowField> fields;\n+\n+    private Row(List<RowField> fields)\n+    {\n+        this.fields = ImmutableList.copyOf(requireNonNull(fields, \"fields is null\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzUyODAz", "url": "https://github.com/trinodb/trino/pull/4588#pullrequestreview-538752803", "createdAt": "2020-11-25T18:20:37Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODoyMDozN1rOH5_QLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODoyMDozN1rOH5_QLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU2NzIxNQ==", "bodyText": "extract commit?", "url": "https://github.com/trinodb/trino/pull/4588#discussion_r530567215", "createdAt": "2020-11-25T18:20:37Z", "author": {"login": "losipiuk"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/AbstractPrestoResultSet.java", "diffHunk": "@@ -1654,17 +1743,23 @@ public void updateNClob(String columnLabel, Reader reader)\n         }\n         Object object = getObject(columnIndex);\n         if (object == null || type.isInstance(object)) {\n-            //noinspection unchecked\n-            return (T) object;\n+            return type.cast(object);\n+        }\n+        try {\n+            T converted = TYPE_CONVERSIONS.convert(object, type);\n+            verify(converted != null, \"Conversion cannot return null for non-null input, as this breask wasNull()\");\n+            return converted;\n+        }\n+        catch (NoConversionRegisteredException e) {\n+            throw new SQLException(format(\"Cannot convert an instance of %s to %s\", object.getClass(), type));\n         }\n-        throw new SQLException(format(\"Cannot convert an instance of %s to %s\", object.getClass(), type));\n     }\n \n     @Override\n     public <T> T getObject(String columnLabel, Class<T> type)\n             throws SQLException\n     {\n-        throw new SQLFeatureNotSupportedException(\"getObject\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 182}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzUzMTE5", "url": "https://github.com/trinodb/trino/pull/4588#pullrequestreview-538753119", "createdAt": "2020-11-25T18:21:10Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODoyMToxMFrOH5_RHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODoyMToxMFrOH5_RHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU2NzQ1NQ==", "bodyText": "first mapping is kinda unrelated. Extract commit?", "url": "https://github.com/trinodb/trino/pull/4588#discussion_r530567455", "createdAt": "2020-11-25T18:21:10Z", "author": {"login": "losipiuk"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/AbstractPrestoResultSet.java", "diffHunk": "@@ -118,6 +125,23 @@\n     // Since January 1, 1900 UTC is still December 31, 1899 in other zones, we are adding a 1 year margin.\n     private static final long START_OF_MODERN_ERA = new LocalDate(1901, 1, 1).toDateTimeAtStartOfDay(UTC).getMillis();\n \n+    private static final TypeConversions TYPE_CONVERSIONS =\n+            TypeConversions.builder()\n+                    .add(PrestoArray.class, List.class, array -> asList((Object[]) array.getArray()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzU1Nzk3", "url": "https://github.com/trinodb/trino/pull/4588#pullrequestreview-538755797", "createdAt": "2020-11-25T18:25:22Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODoyNToyM1rOH5_Yvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODoyNToyM1rOH5_Yvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU2OTQwNg==", "bodyText": "any guards using getTestedPrestoServerVersion needed?", "url": "https://github.com/trinodb/trino/pull/4588#discussion_r530569406", "createdAt": "2020-11-25T18:25:23Z", "author": {"login": "losipiuk"}, "path": "presto-jdbc/src/test/java/io/prestosql/jdbc/BaseTestJdbcResultSet.java", "diffHunk": "@@ -541,6 +547,28 @@ public void testArray()\n     {\n         try (ConnectedStatement connectedStatement = newStatement()) {\n             checkRepresentation(connectedStatement.getStatement(), \"ARRAY[1, 2]\", Types.ARRAY, (rs, column) -> assertEquals(rs.getArray(column).getArray(), new int[] {1, 2}));\n+\n+            // array of map", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzU4Mzk1", "url": "https://github.com/trinodb/trino/pull/4588#pullrequestreview-538758395", "createdAt": "2020-11-25T18:29:30Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODoyOTozMFrOH5_g2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODoyOTozMFrOH5_g2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3MTQ4MQ==", "bodyText": "I do not fully get this test class. How does it relate to TestJdbcResultSetCompatibilityOldServer?", "url": "https://github.com/trinodb/trino/pull/4588#discussion_r530571481", "createdAt": "2020-11-25T18:29:30Z", "author": {"login": "losipiuk"}, "path": "presto-test-jdbc-compatibility-old-driver/src/test/java/io/prestosql/TestJdbcCompatibility.java", "diffHunk": "@@ -330,7 +330,7 @@ public void testSelectRow()\n     {\n         String query = \"SELECT CAST(ROW(1, 2e0) AS ROW(x BIGINT, y DOUBLE))\";\n         checkRepresentation(query, JAVA_OBJECT, (rs, column) -> {\n-            Map<String, Object> values = (Map<String, Object>) rs.getObject(column);\n+            Map<String, Object> values = getRowAsMap(rs, column);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzU4NTM3", "url": "https://github.com/trinodb/trino/pull/4588#pullrequestreview-538758537", "createdAt": "2020-11-25T18:29:44Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36a166194d4002d69789d66576e5369cbf5fe8b5", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/36a166194d4002d69789d66576e5369cbf5fe8b5", "committedDate": "2020-11-25T21:37:13Z", "message": "Support getting array as List from ResultSet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a1474a06d8fb6d6c86991d969cf48421c57ac2e", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/8a1474a06d8fb6d6c86991d969cf48421c57ac2e", "committedDate": "2020-11-25T21:46:40Z", "message": "Convert array to object representation recursively\n\nBy itself this change does nothing, but prepares the structure for\nnecessary conversions in the future. See TODO comments in the code."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9d5e85e754cdfe27f7e77a77284e0048e23b67b", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/e9d5e85e754cdfe27f7e77a77284e0048e23b67b", "committedDate": "2020-11-25T21:47:30Z", "message": "Change representation of ROW on the client side\n\nThis allows for representing both named and unnamed rows without having\nto assign artificial field names."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "e9d5e85e754cdfe27f7e77a77284e0048e23b67b", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/e9d5e85e754cdfe27f7e77a77284e0048e23b67b", "committedDate": "2020-11-25T21:47:30Z", "message": "Change representation of ROW on the client side\n\nThis allows for representing both named and unnamed rows without having\nto assign artificial field names."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MTkyNDkw", "url": "https://github.com/trinodb/trino/pull/4588#pullrequestreview-539192490", "createdAt": "2020-11-26T10:36:31Z", "commit": {"oid": "e9d5e85e754cdfe27f7e77a77284e0048e23b67b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fe8c256d26a7aa185f71286e5011687eef57362", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/9fe8c256d26a7aa185f71286e5011687eef57362", "committedDate": "2020-11-26T12:04:37Z", "message": "empty"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4479, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}