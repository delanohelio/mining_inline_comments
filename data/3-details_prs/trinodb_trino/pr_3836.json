{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMzI3MTM4", "number": 3836, "title": "Fix flaky TestRubixCaching tests", "bodyText": "", "createdAt": "2020-05-23T21:06:27Z", "url": "https://github.com/trinodb/trino/pull/3836", "merged": true, "mergeCommit": {"oid": "822a38df619fd6956607df2bd780bd19112312ee"}, "closed": true, "closedAt": "2020-05-24T19:40:40Z", "author": {"login": "sopel39"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckNjUdAFqTQxNzMwOTQ3OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABckgza8gBqjMzNjgyNDA2NjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzA5NDc5", "url": "https://github.com/trinodb/trino/pull/3836#pullrequestreview-417309479", "createdAt": "2020-05-23T21:13:55Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMToxMzo1NlrOGZraTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMToxMzo1NlrOGZraTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU3ODgyOQ==", "bodyText": "Maybe catch the NPE for now?", "url": "https://github.com/trinodb/trino/pull/3836#discussion_r429578829", "createdAt": "2020-05-23T21:13:56Z", "author": {"login": "dain"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/RubixInitializer.java", "diffHunk": "@@ -125,7 +125,10 @@ public void stopRubix()\n     {\n         try (Closer closer = Closer.create()) {\n             closer.register(() -> {\n-                if (bookKeeperServer != null && bookKeeperServer.isServerUp()) {\n+                if (bookKeeperServer != null) {\n+                    // This might throw NPE if Thrift server hasn't started yet (it's initialized\n+                    // asynchronously from BookKeeperServer thread).\n+                    // TODO: improve stopping of BookKeeperServer server in Rubix", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0cbd71d87496e4cc3a2a50cb0a9e7023a802d47", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/a0cbd71d87496e4cc3a2a50cb0a9e7023a802d47", "committedDate": "2020-05-24T19:39:56Z", "message": "Always close BookKeeperServer after it was started\n\nPreviously BookKeeperServer#isServerUp was\ncalled to check if server is running before closing it.\nHowever, internally BookKeeperServer is started\nasynchronously so isServerUp might return false\nwhich would lead to a resource leak."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d1b92d00fdce2262491efd9c215d6f6a604d979", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/0d1b92d00fdce2262491efd9c215d6f6a604d979", "committedDate": "2020-05-24T19:39:56Z", "message": "Retry stopping of Rubix server in tests\n\nIn case of a quick test (e.g write test) it could\nhappen that Rubix BookKeeper hasn't managed to start yet\nbefre it's being stopped. Because of a race condition\nwihin Rubix, stopping BookKeeper in such case could lead to\nNPE. Therefore stopping needs to be retried in order to make\nsure Rubix BookKeeper is really closed."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "0d1b92d00fdce2262491efd9c215d6f6a604d979", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/0d1b92d00fdce2262491efd9c215d6f6a604d979", "committedDate": "2020-05-24T19:39:56Z", "message": "Retry stopping of Rubix server in tests\n\nIn case of a quick test (e.g write test) it could\nhappen that Rubix BookKeeper hasn't managed to start yet\nbefre it's being stopped. Because of a race condition\nwihin Rubix, stopping BookKeeper in such case could lead to\nNPE. Therefore stopping needs to be retried in order to make\nsure Rubix BookKeeper is really closed."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1253, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}