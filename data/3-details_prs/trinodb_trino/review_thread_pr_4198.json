{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5MzMwNjAx", "number": 4198, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDowNjoyNlrOEIxreA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDowNjoyNlrOEIxreA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjM4MDA4OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestHiveIntegrationSmokeTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDowNjoyNlrOGo8WyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwODo1MToyOFrOGso_6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU4NTA5Ng==", "bodyText": "can we verify the behavior with sessionUsingColumnName as well?\nalso, as this is a regression test, worth recording original NPE failure (can be directly in the commit message)", "url": "https://github.com/trinodb/trino/pull/4198#discussion_r445585096", "createdAt": "2020-06-25T14:06:26Z", "author": {"login": "findepi"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestHiveIntegrationSmokeTest.java", "diffHunk": "@@ -4376,6 +4376,40 @@ public void testParquetWithMissingColumns()\n         assertUpdate(sessionUsingColumnIndex, \"DROP TABLE \" + multiColumnTableName);\n     }\n \n+    @Test\n+    public void testParquetWithMissingNestedColumns()\n+    {\n+        Session sessionUsingColumnIndex = Session.builder(getSession())\n+                .setCatalogSessionProperty(catalog, \"parquet_use_column_names\", \"true\")\n+                .build();\n+\n+        String missingNestedFieldsTableName = \"test_parquet_missing_nested_fields\";\n+\n+        assertUpdate(format(\n+                \"CREATE TABLE %s(\" +\n+                        \"  a ARRAY(ROW(a2 int))) \" +\n+                        \"WITH (format='PARQUET')\",\n+                missingNestedFieldsTableName));\n+        assertUpdate(sessionUsingColumnIndex, \"INSERT INTO \" + missingNestedFieldsTableName + \" VALUES (ARRAY[ROW(2)])\", 1);\n+\n+        String tableLocation = (String) computeActual(\"SELECT DISTINCT regexp_replace(\\\"$path\\\", '/[^/]*$', '') FROM \" + missingNestedFieldsTableName).getOnlyValue();\n+        String missingNestedArrayTableName = \"test_parquet_missing_nested_array\";\n+        assertUpdate(sessionUsingColumnIndex, format(\n+                \"CREATE TABLE %s(\" +\n+                        \"  a ARRAY(ROW(a1 ARRAY(varchar), a2 int))) \" +\n+                        \"WITH (format='PARQUET', external_location='%s')\",\n+                missingNestedArrayTableName,\n+                tableLocation));\n+\n+        assertQuery(\n+                sessionUsingColumnIndex,\n+                \"SELECT a[1].a1 FROM \" + missingNestedArrayTableName,\n+                \"VALUES (null)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ2MjI0OA==", "bodyText": "(sorry for the latency)\nThis update address both points", "url": "https://github.com/trinodb/trino/pull/4198#discussion_r449462248", "createdAt": "2020-07-03T08:51:28Z", "author": {"login": "rclaude"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestHiveIntegrationSmokeTest.java", "diffHunk": "@@ -4376,6 +4376,40 @@ public void testParquetWithMissingColumns()\n         assertUpdate(sessionUsingColumnIndex, \"DROP TABLE \" + multiColumnTableName);\n     }\n \n+    @Test\n+    public void testParquetWithMissingNestedColumns()\n+    {\n+        Session sessionUsingColumnIndex = Session.builder(getSession())\n+                .setCatalogSessionProperty(catalog, \"parquet_use_column_names\", \"true\")\n+                .build();\n+\n+        String missingNestedFieldsTableName = \"test_parquet_missing_nested_fields\";\n+\n+        assertUpdate(format(\n+                \"CREATE TABLE %s(\" +\n+                        \"  a ARRAY(ROW(a2 int))) \" +\n+                        \"WITH (format='PARQUET')\",\n+                missingNestedFieldsTableName));\n+        assertUpdate(sessionUsingColumnIndex, \"INSERT INTO \" + missingNestedFieldsTableName + \" VALUES (ARRAY[ROW(2)])\", 1);\n+\n+        String tableLocation = (String) computeActual(\"SELECT DISTINCT regexp_replace(\\\"$path\\\", '/[^/]*$', '') FROM \" + missingNestedFieldsTableName).getOnlyValue();\n+        String missingNestedArrayTableName = \"test_parquet_missing_nested_array\";\n+        assertUpdate(sessionUsingColumnIndex, format(\n+                \"CREATE TABLE %s(\" +\n+                        \"  a ARRAY(ROW(a1 ARRAY(varchar), a2 int))) \" +\n+                        \"WITH (format='PARQUET', external_location='%s')\",\n+                missingNestedArrayTableName,\n+                tableLocation));\n+\n+        assertQuery(\n+                sessionUsingColumnIndex,\n+                \"SELECT a[1].a1 FROM \" + missingNestedArrayTableName,\n+                \"VALUES (null)\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU4NTA5Ng=="}, "originalCommit": null, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3931, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}