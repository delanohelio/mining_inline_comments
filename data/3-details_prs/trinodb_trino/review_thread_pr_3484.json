{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1ODQ2OTM5", "number": 3484, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNjozNTowNlrODzkU1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNjozODowMVrODzkYKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1Mzk5MTI3OnYy", "diffSide": "RIGHT", "path": "presto-spi/src/main/java/io/prestosql/spi/connector/ConnectorAccessControl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNjozNTowNlrOGIFOOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNjozNTowNlrOGIFOOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyNzM1NQ==", "bodyText": "Deny show create table by default\n\nYou are not changing default, you are providing one, so maybe\nProvide default implementation for can show create table check\n\n?", "url": "https://github.com/trinodb/trino/pull/3484#discussion_r411127355", "createdAt": "2020-04-20T06:35:06Z", "author": {"login": "findepi"}, "path": "presto-spi/src/main/java/io/prestosql/spi/connector/ConnectorAccessControl.java", "diffHunk": "@@ -127,7 +128,10 @@ default void checkCanShowSchemas(ConnectorSecurityContext context)\n      *\n      * @throws io.prestosql.spi.security.AccessDeniedException if not allowed\n      */\n-    void checkCanShowCreateTable(ConnectorSecurityContext context, SchemaTableName tableName);\n+    default void checkCanShowCreateTable(ConnectorSecurityContext context, SchemaTableName tableName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1Mzk5OTc5OnYy", "diffSide": "LEFT", "path": "presto-main/src/test/java/io/prestosql/security/TestAccessControlManager.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNjozODowMVrOGIFTFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwODoxNjoxMVrOGIIl9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyODU5OA==", "bodyText": "Simplify\n\nNot sure why it was doing this, but it was throwing UnsupportedOperationException not DenyException.\nI understand TACM was not supposed to reach this method, and if it reached, a test would fail with UOE.\nDo you know why UOE here?", "url": "https://github.com/trinodb/trino/pull/3484#discussion_r411128598", "createdAt": "2020-04-20T06:38:01Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/security/TestAccessControlManager.java", "diffHunk": "@@ -460,130 +457,5 @@ public void checkCanSelectFromColumns(SystemSecurityContext context, CatalogSche\n     private static class DenyConnectorAccessControl\n             implements ConnectorAccessControl\n     {\n-        @Override\n-        public void checkCanSelectFromColumns(ConnectorSecurityContext context, SchemaTableName tableName, Set<String> columnNames)\n-        {\n-            denySelectColumns(tableName.toString(), columnNames);\n-        }\n-\n-        @Override\n-        public void checkCanCreateSchema(ConnectorSecurityContext context, String schemaName)\n-        {\n-            throw new UnsupportedOperationException();\n-        }\n-\n-        @Override\n-        public void checkCanDropSchema(ConnectorSecurityContext context, String schemaName)\n-        {\n-            throw new UnsupportedOperationException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE4MTEzMQ==", "bodyText": "I don't know either. This class is only used in this test, so I don't think we need to think here that deeply.", "url": "https://github.com/trinodb/trino/pull/3484#discussion_r411181131", "createdAt": "2020-04-20T08:13:54Z", "author": {"login": "kokosing"}, "path": "presto-main/src/test/java/io/prestosql/security/TestAccessControlManager.java", "diffHunk": "@@ -460,130 +457,5 @@ public void checkCanSelectFromColumns(SystemSecurityContext context, CatalogSche\n     private static class DenyConnectorAccessControl\n             implements ConnectorAccessControl\n     {\n-        @Override\n-        public void checkCanSelectFromColumns(ConnectorSecurityContext context, SchemaTableName tableName, Set<String> columnNames)\n-        {\n-            denySelectColumns(tableName.toString(), columnNames);\n-        }\n-\n-        @Override\n-        public void checkCanCreateSchema(ConnectorSecurityContext context, String schemaName)\n-        {\n-            throw new UnsupportedOperationException();\n-        }\n-\n-        @Override\n-        public void checkCanDropSchema(ConnectorSecurityContext context, String schemaName)\n-        {\n-            throw new UnsupportedOperationException();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyODU5OA=="}, "originalCommit": null, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE4MjU4MQ==", "bodyText": "I understand TACM was not supposed to reach this method, and if it reached, a test would fail with UOE.\n\nThis is assumption sounds very fragile (almost like mocking). Even it was true we should not maintain that.", "url": "https://github.com/trinodb/trino/pull/3484#discussion_r411182581", "createdAt": "2020-04-20T08:16:11Z", "author": {"login": "kokosing"}, "path": "presto-main/src/test/java/io/prestosql/security/TestAccessControlManager.java", "diffHunk": "@@ -460,130 +457,5 @@ public void checkCanSelectFromColumns(SystemSecurityContext context, CatalogSche\n     private static class DenyConnectorAccessControl\n             implements ConnectorAccessControl\n     {\n-        @Override\n-        public void checkCanSelectFromColumns(ConnectorSecurityContext context, SchemaTableName tableName, Set<String> columnNames)\n-        {\n-            denySelectColumns(tableName.toString(), columnNames);\n-        }\n-\n-        @Override\n-        public void checkCanCreateSchema(ConnectorSecurityContext context, String schemaName)\n-        {\n-            throw new UnsupportedOperationException();\n-        }\n-\n-        @Override\n-        public void checkCanDropSchema(ConnectorSecurityContext context, String schemaName)\n-        {\n-            throw new UnsupportedOperationException();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyODU5OA=="}, "originalCommit": null, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 185, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}