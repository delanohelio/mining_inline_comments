{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNjc5OTAx", "number": 3383, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzowMzozMlrODwFXag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzowMzozMlrODwFXag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzQ2MTU0OnYy", "diffSide": "RIGHT", "path": "presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixSplitManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzowMzozM1rOGC4mEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzoxODoyNFrOGC5JIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY3NzU4NA==", "bodyText": "I think PhoenixMetadata#applyProjection() should also be implemented, otherwise this will fetch all the columns when only a subset is being queried for.", "url": "https://github.com/trinodb/trino/pull/3383#discussion_r405677584", "createdAt": "2020-04-08T17:03:33Z", "author": {"login": "vincentpoon"}, "path": "presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixSplitManager.java", "diffHunk": "@@ -71,23 +71,22 @@ public PhoenixSplitManager(PhoenixClient phoenixClient)\n     }\n \n     @Override\n-    public ConnectorSplitSource getSplits(ConnectorTransactionHandle transactionHandle, ConnectorSession session, ConnectorTableLayoutHandle layout, SplitSchedulingStrategy splitSchedulingStrategy)\n+    public ConnectorSplitSource getSplits(ConnectorTransactionHandle transactionHandle, ConnectorSession session, ConnectorTableHandle table, SplitSchedulingStrategy splitSchedulingStrategy)\n     {\n-        PhoenixTableLayoutHandle layoutHandle = (PhoenixTableLayoutHandle) layout;\n-        JdbcTableHandle handle = layoutHandle.getTable();\n+        JdbcTableHandle tableHandle = (JdbcTableHandle) table;\n         try (PhoenixConnection connection = phoenixClient.getConnection(JdbcIdentity.from(session))) {\n-            List<JdbcColumnHandle> columns = layoutHandle.getDesiredColumns()\n+            List<JdbcColumnHandle> columns = tableHandle.getColumns()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4NjU2MQ==", "bodyText": "Since we have extended it from JdbcMetadata it would be applied", "url": "https://github.com/trinodb/trino/pull/3383#discussion_r405686561", "createdAt": "2020-04-08T17:18:24Z", "author": {"login": "Praveen2112"}, "path": "presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixSplitManager.java", "diffHunk": "@@ -71,23 +71,22 @@ public PhoenixSplitManager(PhoenixClient phoenixClient)\n     }\n \n     @Override\n-    public ConnectorSplitSource getSplits(ConnectorTransactionHandle transactionHandle, ConnectorSession session, ConnectorTableLayoutHandle layout, SplitSchedulingStrategy splitSchedulingStrategy)\n+    public ConnectorSplitSource getSplits(ConnectorTransactionHandle transactionHandle, ConnectorSession session, ConnectorTableHandle table, SplitSchedulingStrategy splitSchedulingStrategy)\n     {\n-        PhoenixTableLayoutHandle layoutHandle = (PhoenixTableLayoutHandle) layout;\n-        JdbcTableHandle handle = layoutHandle.getTable();\n+        JdbcTableHandle tableHandle = (JdbcTableHandle) table;\n         try (PhoenixConnection connection = phoenixClient.getConnection(JdbcIdentity.from(session))) {\n-            List<JdbcColumnHandle> columns = layoutHandle.getDesiredColumns()\n+            List<JdbcColumnHandle> columns = tableHandle.getColumns()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY3NzU4NA=="}, "originalCommit": null, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 375, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}