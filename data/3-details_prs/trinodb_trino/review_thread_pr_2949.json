{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwMDY5MTM1", "number": 2949, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODoyMTo1NlrODi-o2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMDo0NTozOVrODjBw6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MDA0NDQwOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/type/DateOperators.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODoyMTo1NlrOFuhzGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODoyMTo1NlrOFuhzGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMzMjU3MA==", "bodyText": "This should be INVALID_CAST_ARGUMENT as well", "url": "https://github.com/trinodb/trino/pull/2949#discussion_r384332570", "createdAt": "2020-02-26T08:21:56Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/type/DateOperators.java", "diffHunk": "@@ -156,6 +157,9 @@ public static long castFromSlice(@SqlType(\"varchar(x)\") Slice value)\n         catch (IllegalArgumentException e) {\n             throw new PrestoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to date: \" + value.toStringUtf8(), e);\n         }\n+        catch (ArithmeticException e) {\n+            throw new PrestoException(DATE_OUT_OF_RANGE, \"Out of range for Date: \" + value.toStringUtf8(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MDA0NjAzOnYy", "diffSide": "RIGHT", "path": "presto-spi/src/main/java/io/prestosql/spi/StandardErrorCode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODoyMjoyOFrOFuh0AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODoyMjoyOFrOFuh0AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMzMjgwMQ==", "bodyText": "not needed, use INVALID_CAST_ARGUMENT instead", "url": "https://github.com/trinodb/trino/pull/2949#discussion_r384332801", "createdAt": "2020-02-26T08:22:28Z", "author": {"login": "findepi"}, "path": "presto-spi/src/main/java/io/prestosql/spi/StandardErrorCode.java", "diffHunk": "@@ -106,6 +106,7 @@\n     NULL_TREATMENT_NOT_ALLOWED(83, USER_ERROR),\n     INVALID_ROW_FILTER(84, USER_ERROR),\n     INVALID_COLUMN_MASK(85, USER_ERROR),\n+    DATE_OUT_OF_RANGE(86, USER_ERROR),            // caught by TRY", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MDA0NzY4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/type/TestDateTimeOperatorsBase.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODoyMzowOFrOFuh0_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODo1ODoxOFrOFui3Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMzMzA1Mw==", "bodyText": "What happens if we exceed long range in DateTimeUtils parseDate?", "url": "https://github.com/trinodb/trino/pull/2949#discussion_r384333053", "createdAt": "2020-02-26T08:23:08Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/type/TestDateTimeOperatorsBase.java", "diffHunk": "@@ -251,6 +252,13 @@ public void testIsDistinctFrom()\n         assertFunction(\"DATE '2013-10-27' IS DISTINCT FROM NULL\", BOOLEAN, true);\n     }\n \n+    @Test\n+    public void testDateCastFromVarchar()\n+    {\n+        assertFunction(\"DATE '2013-02-02'\", DATE, toDate(new DateTime(2013, 2, 2, 0, 0, 0, 0, UTC)));\n+        assertInvalidFunction(\"DATE '5881580-07-12'\", DATE_OUT_OF_RANGE, \"Out of range for Date: 5881580-07-12\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMzNzEwNg==", "bodyText": "It throws INVALID_CAST_ARGUMENT", "url": "https://github.com/trinodb/trino/pull/2949#discussion_r384337106", "createdAt": "2020-02-26T08:32:05Z", "author": {"login": "Praveen2112"}, "path": "presto-main/src/test/java/io/prestosql/type/TestDateTimeOperatorsBase.java", "diffHunk": "@@ -251,6 +252,13 @@ public void testIsDistinctFrom()\n         assertFunction(\"DATE '2013-10-27' IS DISTINCT FROM NULL\", BOOLEAN, true);\n     }\n \n+    @Test\n+    public void testDateCastFromVarchar()\n+    {\n+        assertFunction(\"DATE '2013-02-02'\", DATE, toDate(new DateTime(2013, 2, 2, 0, 0, 0, 0, UTC)));\n+        assertInvalidFunction(\"DATE '5881580-07-12'\", DATE_OUT_OF_RANGE, \"Out of range for Date: 5881580-07-12\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMzMzA1Mw=="}, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM1MDAxMA==", "bodyText": "can you add a test case for this?", "url": "https://github.com/trinodb/trino/pull/2949#discussion_r384350010", "createdAt": "2020-02-26T08:58:18Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/type/TestDateTimeOperatorsBase.java", "diffHunk": "@@ -251,6 +252,13 @@ public void testIsDistinctFrom()\n         assertFunction(\"DATE '2013-10-27' IS DISTINCT FROM NULL\", BOOLEAN, true);\n     }\n \n+    @Test\n+    public void testDateCastFromVarchar()\n+    {\n+        assertFunction(\"DATE '2013-02-02'\", DATE, toDate(new DateTime(2013, 2, 2, 0, 0, 0, 0, UTC)));\n+        assertInvalidFunction(\"DATE '5881580-07-12'\", DATE_OUT_OF_RANGE, \"Out of range for Date: 5881580-07-12\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMzMzA1Mw=="}, "originalCommit": null, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MDU1NjU4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/type/TestDateTimeOperatorsBase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMDo0NTozOVrOFumsuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNDozMTozMlrOFutukw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQxMjg1OQ==", "bodyText": "Can you also include a test case when value fails within DATE_FORMATTER.parseMillis(value) method (due to overflow)?", "url": "https://github.com/trinodb/trino/pull/2949#discussion_r384412859", "createdAt": "2020-02-26T10:45:39Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/type/TestDateTimeOperatorsBase.java", "diffHunk": "@@ -251,6 +252,13 @@ public void testIsDistinctFrom()\n         assertFunction(\"DATE '2013-10-27' IS DISTINCT FROM NULL\", BOOLEAN, true);\n     }\n \n+    @Test\n+    public void testDateCastFromVarchar()\n+    {\n+        assertFunction(\"DATE '2013-02-02'\", DATE, toDate(new DateTime(2013, 2, 2, 0, 0, 0, 0, UTC)));\n+        assertInvalidFunction(\"DATE '5881580-07-12'\", INVALID_CAST_ARGUMENT, \"Value cannot be cast to date: 5881580-07-12\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUyODAxOQ==", "bodyText": "have applied it", "url": "https://github.com/trinodb/trino/pull/2949#discussion_r384528019", "createdAt": "2020-02-26T14:31:32Z", "author": {"login": "Praveen2112"}, "path": "presto-main/src/test/java/io/prestosql/type/TestDateTimeOperatorsBase.java", "diffHunk": "@@ -251,6 +252,13 @@ public void testIsDistinctFrom()\n         assertFunction(\"DATE '2013-10-27' IS DISTINCT FROM NULL\", BOOLEAN, true);\n     }\n \n+    @Test\n+    public void testDateCastFromVarchar()\n+    {\n+        assertFunction(\"DATE '2013-02-02'\", DATE, toDate(new DateTime(2013, 2, 2, 0, 0, 0, 0, UTC)));\n+        assertInvalidFunction(\"DATE '5881580-07-12'\", INVALID_CAST_ARGUMENT, \"Value cannot be cast to date: 5881580-07-12\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQxMjg1OQ=="}, "originalCommit": null, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 829, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}