{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MDcyMzQz", "number": 5808, "title": "Upgrade coral to resolve catalog correctly for underlying tables", "bodyText": "Fix #5785\nThis PR is to gather early feedback on the testing. The coral version needs to be upgraded after linkedin/coral#19 is merged and released.", "createdAt": "2020-11-04T01:01:09Z", "url": "https://github.com/trinodb/trino/pull/5808", "merged": true, "mergeCommit": {"oid": "d6a6336db5599355b9630862ebb3c125ef6c394c"}, "closed": true, "closedAt": "2020-11-05T09:12:12Z", "author": {"login": "phd3"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZJ1LFAFqTUyMzE1MDkyMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZdSNsgFqTUyMzk4NTgwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMTUwOTIz", "url": "https://github.com/trinodb/trino/pull/5808#pullrequestreview-523150923", "createdAt": "2020-11-04T08:52:33Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwODo1MjozNFrOHtOYBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwODo1MjozNFrOHtOYBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE4MzQ5NA==", "bodyText": "we need to use something else that hive catalog name here.", "url": "https://github.com/trinodb/trino/pull/5808#discussion_r517183494", "createdAt": "2020-11-04T08:52:34Z", "author": {"login": "kokosing"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveViews.java", "diffHunk": "@@ -101,10 +103,15 @@ public void testShowCreateView()\n     {\n         onHive().executeQuery(\"DROP VIEW IF EXISTS hive_show_view\");\n \n-        onHive().executeQuery(\"CREATE VIEW hive_show_view AS SELECT * FROM nation\");\n+        onHive().executeQuery(\"CREATE VIEW hive_show_view AS SELECT n_nationkey FROM nation\");\n \n-        // view SQL depends on Hive distribution\n-        assertThat(query(\"SHOW CREATE VIEW hive_show_view\")).hasRowsCount(1);\n+        QueryResult result = query(\"SHOW CREATE VIEW hive_show_view\");\n+\n+        assertThat(result).hasRowsCount(1);\n+        String actualSql = (String) result.row(0).get(0);\n+        assertEquals(\n+                actualSql.replaceAll(\"\\n\", \" \").replaceAll(\"\\\\s+\", \" \"),\n+                \"CREATE VIEW hive.default.hive_show_view AS SELECT \\\"n_nationkey\\\" FROM \\\"default\\\".\\\"nation\\\"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMzQ2NzQ1", "url": "https://github.com/trinodb/trino/pull/5808#pullrequestreview-523346745", "createdAt": "2020-11-04T13:14:17Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMzoxNDoxN1rOHtXg7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMzoxNDo1NFrOHtXiPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMzMzIyOA==", "bodyText": "what was wrong about *?\ncan we test both cases, with * and with explicit column(s)?\n(nation table has few columns, it doesn't hurt to enumerate all of them)", "url": "https://github.com/trinodb/trino/pull/5808#discussion_r517333228", "createdAt": "2020-11-04T13:14:17Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveViews.java", "diffHunk": "@@ -101,10 +103,15 @@ public void testShowCreateView()\n     {\n         onHive().executeQuery(\"DROP VIEW IF EXISTS hive_show_view\");\n \n-        onHive().executeQuery(\"CREATE VIEW hive_show_view AS SELECT * FROM nation\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMzMzU2NQ==", "bodyText": "keeping actualSql intact is OK.\nalso, if we used to output nicely formatted result and in the future we stop doing that, i would like the test to tell me so.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            actualSql.replaceAll(\"\\n\", \" \").replaceAll(\"\\\\s+\", \" \"),\n          \n          \n            \n                            actualSql,", "url": "https://github.com/trinodb/trino/pull/5808#discussion_r517333565", "createdAt": "2020-11-04T13:14:54Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveViews.java", "diffHunk": "@@ -101,10 +103,15 @@ public void testShowCreateView()\n     {\n         onHive().executeQuery(\"DROP VIEW IF EXISTS hive_show_view\");\n \n-        onHive().executeQuery(\"CREATE VIEW hive_show_view AS SELECT * FROM nation\");\n+        onHive().executeQuery(\"CREATE VIEW hive_show_view AS SELECT n_nationkey FROM nation\");\n \n-        // view SQL depends on Hive distribution\n-        assertThat(query(\"SHOW CREATE VIEW hive_show_view\")).hasRowsCount(1);\n+        QueryResult result = query(\"SHOW CREATE VIEW hive_show_view\");\n+\n+        assertThat(result).hasRowsCount(1);\n+        String actualSql = (String) result.row(0).get(0);\n+        assertEquals(\n+                actualSql.replaceAll(\"\\n\", \" \").replaceAll(\"\\\\s+\", \" \"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNTU0NjM2", "url": "https://github.com/trinodb/trino/pull/5808#pullrequestreview-523554636", "createdAt": "2020-11-04T16:55:58Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjo1NTo1OFrOHthH4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjo1NTo1OFrOHthH4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ5MDY1Ng==", "bodyText": "Might be worth calling out in the comment that the hive_with_external_writes catalog points to the same HMS instance", "url": "https://github.com/trinodb/trino/pull/5808#discussion_r517490656", "createdAt": "2020-11-04T16:55:58Z", "author": {"login": "alexjo2144"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveViews.java", "diffHunk": "@@ -100,11 +103,26 @@ public void testExistingView()\n     public void testShowCreateView()\n     {\n         onHive().executeQuery(\"DROP VIEW IF EXISTS hive_show_view\");\n-\n         onHive().executeQuery(\"CREATE VIEW hive_show_view AS SELECT * FROM nation\");\n \n-        // view SQL depends on Hive distribution\n-        assertThat(query(\"SHOW CREATE VIEW hive_show_view\")).hasRowsCount(1);\n+        String showCreateViewSql = \"SHOW CREATE VIEW %s.default.hive_show_view\";\n+        String expectedResult = \"CREATE VIEW %s.default.hive_show_view AS\\n\" +\n+                \"SELECT\\n\" +\n+                \"  \\\"n_nationkey\\\"\\n\" +\n+                \", \\\"n_name\\\"\\n\" +\n+                \", \\\"n_regionkey\\\"\\n\" +\n+                \", \\\"n_comment\\\"\\n\" +\n+                \"FROM\\n\" +\n+                \"  \\\"default\\\".\\\"nation\\\"\";\n+\n+        QueryResult actualResult = query(format(showCreateViewSql, \"hive\"));\n+        assertThat(actualResult).hasRowsCount(1);\n+        assertEquals((String) actualResult.row(0).get(0), format(expectedResult, \"hive\"));\n+\n+        // Validate the translated view sql for a catalog name other than \"hive\"\n+        actualResult = query(format(showCreateViewSql, \"hive_with_external_writes\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 41}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "a69db62ee7b0812eb312ffc8879f529eb4ebbb9f", "author": {"user": {"login": "phd3", "name": "Pratham"}}, "url": "https://github.com/trinodb/trino/commit/a69db62ee7b0812eb312ffc8879f529eb4ebbb9f", "committedDate": "2020-11-05T00:36:55Z", "message": "Upgrade coral to resolve catalog correctly for underlying tables\n\nWith the new version, coral does not prepend a catalog name to\nthe tables referenced in the views. Presto resolves them to\nthe view's catalog during analysis."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "a69db62ee7b0812eb312ffc8879f529eb4ebbb9f", "author": {"user": {"login": "phd3", "name": "Pratham"}}, "url": "https://github.com/trinodb/trino/commit/a69db62ee7b0812eb312ffc8879f529eb4ebbb9f", "committedDate": "2020-11-05T00:36:55Z", "message": "Upgrade coral to resolve catalog correctly for underlying tables\n\nWith the new version, coral does not prepend a catalog name to\nthe tables referenced in the views. Presto resolves them to\nthe view's catalog during analysis."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzOTg1ODA1", "url": "https://github.com/trinodb/trino/pull/5808#pullrequestreview-523985805", "createdAt": "2020-11-05T07:32:29Z", "commit": {"oid": "a69db62ee7b0812eb312ffc8879f529eb4ebbb9f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2809, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}