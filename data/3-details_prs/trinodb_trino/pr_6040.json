{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1MTg4MjQ5", "number": 6040, "title": "Require calling convention for scalar functions", "bodyText": "Implicit calling conventions are not well defined.  For example, a caller must know that hash code will never return null, whereas equals is nullable. This PR requires explicit declaration of calling conventions when fetching a function implementation.  This also lets the reader know exactly how the function should be invoked, and if another invocation style is better, it is obvious that you can simply change this.", "createdAt": "2020-11-21T20:51:34Z", "url": "https://github.com/trinodb/trino/pull/6040", "merged": true, "mergeCommit": {"oid": "8a436b089632fb906585c4ae5562eb8271069016"}, "closed": true, "closedAt": "2020-12-02T22:33:12Z", "author": {"login": "dain"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdeyc-gAFqTUzNjAwODU0OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiUjwYgFqTU0MzIwOTA1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MDA4NTQ5", "url": "https://github.com/trinodb/trino/pull/6040#pullrequestreview-536008549", "createdAt": "2020-11-21T20:59:53Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMDo1OTo1NFrOH3xWSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMTowMDo0MVrOH3xWpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MjI0OQ==", "bodyText": "At first sight, it looks not related to the commit?", "url": "https://github.com/trinodb/trino/pull/6040#discussion_r528242249", "createdAt": "2020-11-21T20:59:54Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/MapElementAtFunction.java", "diffHunk": "@@ -132,7 +129,7 @@ public static Object elementAt(MethodHandle keyEqualsMethod, Type keyType, Type\n     }\n \n     @UsedByGeneratedCode\n-    public static Object elementAt(MethodHandle keyEqualsMethod, Type keyType, Type valueType, Block map, double key)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MjM0Mw==", "bodyText": "why no longer nullable?", "url": "https://github.com/trinodb/trino/pull/6040#discussion_r528242343", "createdAt": "2020-11-21T21:00:41Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/TryCastFunction.java", "diffHunk": "@@ -76,20 +75,20 @@ public ScalarFunctionImplementation specialize(FunctionBinding functionBinding,\n         Type fromType = functionBinding.getTypeVariable(\"F\");\n         Type toType = functionBinding.getTypeVariable(\"T\");\n \n-        Class<?> returnType = Primitives.wrap(toType.getJavaType());\n+        Class<?> returnType = wrap(toType.getJavaType());\n \n         // the resulting method needs to return a boxed type\n-        MethodHandle coercion = functionDependencies.getCastInvoker(fromType, toType, Optional.empty()).getMethodHandle();\n+        InvocationConvention invocationConvention = new InvocationConvention(ImmutableList.of(NEVER_NULL), NULLABLE_RETURN, true, false);\n+        MethodHandle coercion = functionDependencies.getCastInvoker(fromType, toType, invocationConvention).getMethodHandle();\n         coercion = coercion.asType(methodType(returnType, coercion.type()));\n \n         MethodHandle exceptionHandler = dropArguments(constant(returnType, null), 0, RuntimeException.class);\n         MethodHandle tryCastHandle = catchException(coercion, RuntimeException.class, exceptionHandler);\n \n-        boolean nullableArgument = functionDependencies.getCastMetadata(fromType, toType).getArgumentDefinitions().get(0).isNullable();\n         return new ChoicesScalarFunctionImplementation(\n                 functionBinding,\n                 NULLABLE_RETURN,\n-                ImmutableList.of(nullableArgument ? BOXED_NULLABLE : NEVER_NULL),\n+                ImmutableList.of(NEVER_NULL),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8b80aeb9c0f784ee86c4b90dfeec9b559a84cdc", "author": {"user": {"login": "dain", "name": "Dain Sundstrom"}}, "url": "https://github.com/trinodb/trino/commit/f8b80aeb9c0f784ee86c4b90dfeec9b559a84cdc", "committedDate": "2020-11-21T23:15:27Z", "message": "Remove unused keyEqualsMethod and keyType from MapElementAtFunction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b00e6309f89f2499a4c45ab035a8f3b302c70f6e", "author": {"user": {"login": "dain", "name": "Dain Sundstrom"}}, "url": "https://github.com/trinodb/trino/commit/b00e6309f89f2499a4c45ab035a8f3b302c70f6e", "committedDate": "2020-11-21T23:16:28Z", "message": "Require calling convention for scalar functions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "b00e6309f89f2499a4c45ab035a8f3b302c70f6e", "author": {"user": {"login": "dain", "name": "Dain Sundstrom"}}, "url": "https://github.com/trinodb/trino/commit/b00e6309f89f2499a4c45ab035a8f3b302c70f6e", "committedDate": "2020-11-21T23:16:28Z", "message": "Require calling convention for scalar functions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMjY4ODIx", "url": "https://github.com/trinodb/trino/pull/6040#pullrequestreview-542268821", "createdAt": "2020-12-01T20:27:18Z", "commit": {"oid": "b00e6309f89f2499a4c45ab035a8f3b302c70f6e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMjA5MDU1", "url": "https://github.com/trinodb/trino/pull/6040#pullrequestreview-543209055", "createdAt": "2020-12-02T20:25:58Z", "commit": {"oid": "b00e6309f89f2499a4c45ab035a8f3b302c70f6e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMDoyNTo1OFrOH9syDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMDoyNTo1OFrOH9syDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1ODg5NA==", "bodyText": "Why are we getting an EQUALs operator that allows nullable return? That doesn't seem expected for equals as an operator?", "url": "https://github.com/trinodb/trino/pull/6040#discussion_r534458894", "createdAt": "2020-12-02T20:25:58Z", "author": {"login": "erichwang"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/ExpressionInterpreter.java", "diffHunk": "@@ -581,8 +586,8 @@ protected Object visitInPredicate(InPredicate node, Object context)\n                     set = FastutilSetHelper.toFastutilHashSet(\n                             objectSet,\n                             type,\n-                            metadata.getScalarFunctionInvoker(metadata.resolveOperator(HASH_CODE, ImmutableList.of(type)), Optional.empty()).getMethodHandle(),\n-                            metadata.getScalarFunctionInvoker(metadata.resolveOperator(EQUAL, ImmutableList.of(type, type)), Optional.empty()).getMethodHandle());\n+                            metadata.getScalarFunctionInvoker(metadata.resolveOperator(HASH_CODE, ImmutableList.of(type)), simpleConvention(FAIL_ON_NULL, NEVER_NULL)).getMethodHandle(),\n+                            metadata.getScalarFunctionInvoker(metadata.resolveOperator(EQUAL, ImmutableList.of(type, type)), simpleConvention(NULLABLE_RETURN, NEVER_NULL, NEVER_NULL)).getMethodHandle());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b00e6309f89f2499a4c45ab035a8f3b302c70f6e"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2215, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}