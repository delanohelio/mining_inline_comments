{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MjEzNjU4", "number": 3490, "title": "Add session property for hive projection pushdown", "bodyText": "Adding a session property for controlling the projection pushdown in hive. It'll be enabled by default, but will make it easy to revert this feature. cc @martint", "createdAt": "2020-04-20T17:59:59Z", "url": "https://github.com/trinodb/trino/pull/3490", "merged": true, "mergeCommit": {"oid": "f5f425a6c66903046af0ccda1a4ed603e763e315"}, "closed": true, "closedAt": "2020-04-27T09:21:53Z", "author": {"login": "phd3"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZlT_tgBqjMyNTM1MDI2Njc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcbrw0sgFqTQwMDc3Mzg0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MTUxMjc0", "url": "https://github.com/trinodb/trino/pull/3490#pullrequestreview-397151274", "createdAt": "2020-04-21T09:26:52Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwOToyNjo1MlrOGI7_GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwOToyNzoyNlrOGI8Anw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAyNDYwMA==", "bodyText": "move \"CREATE TABLE  %s (col0) AS\" + to newline", "url": "https://github.com/trinodb/trino/pull/3490#discussion_r412024600", "createdAt": "2020-04-21T09:26:52Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/optimizer/TestHiveProjectionPushdownIntoTableScan.java", "diffHunk": "@@ -89,13 +92,34 @@ protected LocalQueryRunner createLocalQueryRunner()\n         return queryRunner;\n     }\n \n+    @Test\n+    public void testPushdownDisabled()\n+    {\n+        String testTable = \"test_disabled_pushdown\";\n+\n+        Session session = Session.builder(getQueryRunner().getDefaultSession())\n+                .setCatalogSessionProperty(HIVE_CATALOG_NAME, \"projection_pushdown_enabled\", \"false\")\n+                .build();\n+\n+        getQueryRunner().execute(format(\"CREATE TABLE  %s (col0) AS\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAyNDk5MQ==", "bodyText": "inline tableName usage", "url": "https://github.com/trinodb/trino/pull/3490#discussion_r412024991", "createdAt": "2020-04-21T09:27:26Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/optimizer/TestHiveProjectionPushdownIntoTableScan.java", "diffHunk": "@@ -89,13 +92,34 @@ protected LocalQueryRunner createLocalQueryRunner()\n         return queryRunner;\n     }\n \n+    @Test\n+    public void testPushdownDisabled()\n+    {\n+        String testTable = \"test_disabled_pushdown\";\n+\n+        Session session = Session.builder(getQueryRunner().getDefaultSession())\n+                .setCatalogSessionProperty(HIVE_CATALOG_NAME, \"projection_pushdown_enabled\", \"false\")\n+                .build();\n+\n+        getQueryRunner().execute(format(\"CREATE TABLE  %s (col0) AS\" +\n+                \" SELECT cast(row(5, 6) as row(a bigint, b bigint)) AS col0 WHERE false\", testTable));\n+\n+        assertPlan(\n+                format(\"SELECT col0.a expr_a, col0.b expr_b FROM %s\", testTable),\n+                session,\n+                any(\n+                        project(\n+                                ImmutableMap.of(\"expr\", expression(\"col0.a\"), \"expr_2\", expression(\"col0.b\")),\n+                                tableScan(testTable, ImmutableMap.of(\"col0\", \"col0\")))));\n+    }\n+\n     @Test\n     public void testProjectionPushdown()\n     {\n         String testTable = \"test_simple_projection_pushdown\";\n         QualifiedObjectName completeTableName = new QualifiedObjectName(HIVE_CATALOG_NAME, SCHEMA_NAME, testTable);\n \n-        String tableName = HIVE_CATALOG_NAME + \".\" + SCHEMA_NAME + \".\" + testTable;\n+        String tableName = testTable;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 44}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3OTkxMzU5", "url": "https://github.com/trinodb/trino/pull/3490#pullrequestreview-397991359", "createdAt": "2020-04-22T09:06:45Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOTowNjo0NlrOGJryZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOTowNjo0NlrOGJryZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgwNzc4Mg==", "bodyText": "nit: each arg in newline, so move testTable to next line", "url": "https://github.com/trinodb/trino/pull/3490#discussion_r412807782", "createdAt": "2020-04-22T09:06:46Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/optimizer/TestHiveProjectionPushdownIntoTableScan.java", "diffHunk": "@@ -89,15 +92,37 @@ protected LocalQueryRunner createLocalQueryRunner()\n         return queryRunner;\n     }\n \n+    @Test\n+    public void testPushdownDisabled()\n+    {\n+        String testTable = \"test_disabled_pushdown\";\n+\n+        Session session = Session.builder(getQueryRunner().getDefaultSession())\n+                .setCatalogSessionProperty(HIVE_CATALOG_NAME, \"projection_pushdown_enabled\", \"false\")\n+                .build();\n+\n+        getQueryRunner().execute(format(\n+                \"CREATE TABLE %s (col0) AS\" +\n+                        \" SELECT cast(row(5, 6) as row(a bigint, b bigint)) AS col0 WHERE false\", testTable));\n+\n+        assertPlan(\n+                format(\"SELECT col0.a expr_a, col0.b expr_b FROM %s\", testTable),\n+                session,\n+                any(\n+                        project(\n+                                ImmutableMap.of(\"expr\", expression(\"col0.a\"), \"expr_2\", expression(\"col0.b\")),\n+                                tableScan(testTable, ImmutableMap.of(\"col0\", \"col0\")))));\n+    }\n+\n     @Test\n     public void testProjectionPushdown()\n     {\n         String testTable = \"test_simple_projection_pushdown\";\n         QualifiedObjectName completeTableName = new QualifiedObjectName(HIVE_CATALOG_NAME, SCHEMA_NAME, testTable);\n \n-        String tableName = HIVE_CATALOG_NAME + \".\" + SCHEMA_NAME + \".\" + testTable;\n-        getQueryRunner().execute(\"CREATE TABLE \" + tableName + \" \" + \"(col0) AS\" +\n-                \" SELECT cast(row(5, 6) as row(a bigint, b bigint)) as col0 where false\");\n+        getQueryRunner().execute(format(\n+                \"CREATE TABLE %s (col0) AS\" +\n+                        \" SELECT cast(row(5, 6) as row(a bigint, b bigint)) as col0 where false\", testTable));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 49}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4OTI5NTYx", "url": "https://github.com/trinodb/trino/pull/3490#pullrequestreview-398929561", "createdAt": "2020-04-23T09:38:48Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "e87f7fd9ca0de00a10639d267a6737b06cdf1a92", "author": {"user": {"login": "phd3", "name": "Pratham"}}, "url": "https://github.com/trinodb/trino/commit/e87f7fd9ca0de00a10639d267a6737b06cdf1a92", "committedDate": "2020-04-24T17:24:26Z", "message": "Add session property for hive projection pushdown"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4958fad45434b3a654dd7384370113b35b8da2db", "author": {"user": {"login": "phd3", "name": "Pratham"}}, "url": "https://github.com/trinodb/trino/commit/4958fad45434b3a654dd7384370113b35b8da2db", "committedDate": "2020-04-24T17:24:26Z", "message": "Use default session for rule application"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "4958fad45434b3a654dd7384370113b35b8da2db", "author": {"user": {"login": "phd3", "name": "Pratham"}}, "url": "https://github.com/trinodb/trino/commit/4958fad45434b3a654dd7384370113b35b8da2db", "committedDate": "2020-04-24T17:24:26Z", "message": "Use default session for rule application"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNzczODQ5", "url": "https://github.com/trinodb/trino/pull/3490#pullrequestreview-400773849", "createdAt": "2020-04-27T09:21:17Z", "commit": {"oid": "4958fad45434b3a654dd7384370113b35b8da2db"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1591, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}