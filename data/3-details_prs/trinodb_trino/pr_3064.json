{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NDAxODUw", "number": 3064, "title": "Flush remaining output pages before requesting next input page", "bodyText": "All output pages (potentially lazy) should be returned in\nStreamingAggregationOperator before next input page is requested.", "createdAt": "2020-03-10T22:52:29Z", "url": "https://github.com/trinodb/trino/pull/3064", "merged": true, "mergeCommit": {"oid": "52a53a80459192403ab4e365706daa34c0849565"}, "closed": true, "closedAt": "2020-03-11T23:14:24Z", "author": {"login": "sopel39"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMnKQAAFqTM3Mjc1NTg2Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMvgXmAFqTM3MzE3ODkyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNzU1ODY2", "url": "https://github.com/trinodb/trino/pull/3064#pullrequestreview-372755866", "createdAt": "2020-03-11T13:28:44Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoyODo0NFrOF022tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoyOTo0OFrOF025MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2OTAxMg==", "bodyText": "i think this should be\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            return ofResult(outputPage, outputPages.isEmpty());\n          \n          \n            \n                            return ofResult(outputPage, false);\n          \n      \n    \n    \n  \n\n-- current inputPage isn't consumed, so we should request it to be re-submitted", "url": "https://github.com/trinodb/trino/pull/3064#discussion_r390969012", "createdAt": "2020-03-11T13:28:44Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/operator/StreamingAggregationOperator.java", "diffHunk": "@@ -232,17 +230,25 @@ private StreamingAggregation(\n                 if (outputPages.isEmpty()) {\n                     return finished();\n                 }\n+\n+                return ofResult(outputPages.removeFirst(), false);\n             }\n-            else {\n-                processInput(inputPage);\n-                updateMemoryUsage();\n+\n+            // flush remaining output pages before requesting next input page\n+            if (!outputPages.isEmpty()) {\n+                Page outputPage = outputPages.removeFirst();\n+                return ofResult(outputPage, outputPages.isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2OTY0OA==", "bodyText": "this should be\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return ofResult(outputPage, outputPages.isEmpty());\n          \n          \n            \n                        return ofResult(outputPage, true);\n          \n      \n    \n    \n  \n\nbecause inputPage is fully consumed and should not be re-submitted", "url": "https://github.com/trinodb/trino/pull/3064#discussion_r390969648", "createdAt": "2020-03-11T13:29:48Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/operator/StreamingAggregationOperator.java", "diffHunk": "@@ -232,17 +230,25 @@ private StreamingAggregation(\n                 if (outputPages.isEmpty()) {\n                     return finished();\n                 }\n+\n+                return ofResult(outputPages.removeFirst(), false);\n             }\n-            else {\n-                processInput(inputPage);\n-                updateMemoryUsage();\n+\n+            // flush remaining output pages before requesting next input page\n+            if (!outputPages.isEmpty()) {\n+                Page outputPage = outputPages.removeFirst();\n+                return ofResult(outputPage, outputPages.isEmpty());\n             }\n \n+            processInput(inputPage);\n+            updateMemoryUsage();\n+\n             if (outputPages.isEmpty()) {\n                 return needsMoreData();\n             }\n \n-            return ofResult(outputPages.removeFirst(), !finishing);\n+            Page outputPage = outputPages.removeFirst();\n+            return ofResult(outputPage, outputPages.isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7dc523602cf3189b83da5b078aad7aceaf2c2ff", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/f7dc523602cf3189b83da5b078aad7aceaf2c2ff", "committedDate": "2020-03-11T23:13:48Z", "message": "Flush remaining output pages before requesting next input page\n\nAll output pages (potentially lazy) should be returned in\nStreamingAggregationOperator before next input page is requested."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "f7dc523602cf3189b83da5b078aad7aceaf2c2ff", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/f7dc523602cf3189b83da5b078aad7aceaf2c2ff", "committedDate": "2020-03-11T23:13:48Z", "message": "Flush remaining output pages before requesting next input page\n\nAll output pages (potentially lazy) should be returned in\nStreamingAggregationOperator before next input page is requested."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMTc4OTIw", "url": "https://github.com/trinodb/trino/pull/3064#pullrequestreview-373178920", "createdAt": "2020-03-11T22:50:47Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMjo1MDo0N1rOF1L7rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMzowMDozMlrOF1MJIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxNDM1MQ==", "bodyText": "When we exhausted output pages queue (outputPages.isEmpty()), then we can ask for next page.\nWhen some output page is left in queue (!outputPages.isEmpty()), then we shouldn't ask for next page yet.", "url": "https://github.com/trinodb/trino/pull/3064#discussion_r391314351", "createdAt": "2020-03-11T22:50:47Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/operator/StreamingAggregationOperator.java", "diffHunk": "@@ -232,17 +230,25 @@ private StreamingAggregation(\n                 if (outputPages.isEmpty()) {\n                     return finished();\n                 }\n+\n+                return ofResult(outputPages.removeFirst(), false);\n             }\n-            else {\n-                processInput(inputPage);\n-                updateMemoryUsage();\n+\n+            // flush remaining output pages before requesting next input page\n+            if (!outputPages.isEmpty()) {\n+                Page outputPage = outputPages.removeFirst();\n+                return ofResult(outputPage, outputPages.isEmpty());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2OTAxMg=="}, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxNDY5Mg==", "bodyText": "inputPage is fully consumed. However, there are output pages left (from that input page), which need to be outputted before we can ask for next page", "url": "https://github.com/trinodb/trino/pull/3064#discussion_r391314692", "createdAt": "2020-03-11T22:51:32Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/operator/StreamingAggregationOperator.java", "diffHunk": "@@ -232,17 +230,25 @@ private StreamingAggregation(\n                 if (outputPages.isEmpty()) {\n                     return finished();\n                 }\n+\n+                return ofResult(outputPages.removeFirst(), false);\n             }\n-            else {\n-                processInput(inputPage);\n-                updateMemoryUsage();\n+\n+            // flush remaining output pages before requesting next input page\n+            if (!outputPages.isEmpty()) {\n+                Page outputPage = outputPages.removeFirst();\n+                return ofResult(outputPage, outputPages.isEmpty());\n             }\n \n+            processInput(inputPage);\n+            updateMemoryUsage();\n+\n             if (outputPages.isEmpty()) {\n                 return needsMoreData();\n             }\n \n-            return ofResult(outputPages.removeFirst(), !finishing);\n+            Page outputPage = outputPages.removeFirst();\n+            return ofResult(outputPage, outputPages.isEmpty());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2OTY0OA=="}, "originalCommit": null, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxNzc5NQ==", "bodyText": "I've added comment about this invariant", "url": "https://github.com/trinodb/trino/pull/3064#discussion_r391317795", "createdAt": "2020-03-11T23:00:32Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/operator/StreamingAggregationOperator.java", "diffHunk": "@@ -232,17 +230,25 @@ private StreamingAggregation(\n                 if (outputPages.isEmpty()) {\n                     return finished();\n                 }\n+\n+                return ofResult(outputPages.removeFirst(), false);\n             }\n-            else {\n-                processInput(inputPage);\n-                updateMemoryUsage();\n+\n+            // flush remaining output pages before requesting next input page\n+            if (!outputPages.isEmpty()) {\n+                Page outputPage = outputPages.removeFirst();\n+                return ofResult(outputPage, outputPages.isEmpty());\n             }\n \n+            processInput(inputPage);\n+            updateMemoryUsage();\n+\n             if (outputPages.isEmpty()) {\n                 return needsMoreData();\n             }\n \n-            return ofResult(outputPages.removeFirst(), !finishing);\n+            Page outputPage = outputPages.removeFirst();\n+            return ofResult(outputPage, outputPages.isEmpty());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2OTY0OA=="}, "originalCommit": null, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2141, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}