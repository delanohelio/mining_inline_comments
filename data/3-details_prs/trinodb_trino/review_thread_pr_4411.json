{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MDcyODIz", "number": 4411, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwOToyMTowOVrOENNJvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwNTo0OTo0MVrOENePIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjgyNDI5OnYy", "diffSide": "LEFT", "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwOToyMTowOVrOGvwWGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMzoyOToxMFrOGv3YTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjcyODM0Ng==", "bodyText": "Is TIMESTAMP_WITH_TIME_ZONE deprecated? Are there there any other usages of this? I think we should remove these contants.", "url": "https://github.com/trinodb/trino/pull/4411#discussion_r452728346", "createdAt": "2020-07-10T09:21:09Z", "author": {"login": "kokosing"}, "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "diffHunk": "@@ -372,10 +370,10 @@ static int jdbcDataType(Type type)\n         if (type.equals(TIME_WITH_TIME_ZONE)) {\n             return Types.TIME_WITH_TIMEZONE;\n         }\n-        if (type.equals(TIMESTAMP)) {\n+        if (type instanceof TimestampType) {\n             return Types.TIMESTAMP;\n         }\n-        if (type.equals(TIMESTAMP_WITH_TIME_ZONE)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg0MzU5OA==", "bodyText": "Yes, but we can\u2019t remove them yet due to backward compatibility concerns.", "url": "https://github.com/trinodb/trino/pull/4411#discussion_r452843598", "createdAt": "2020-07-10T13:29:10Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "diffHunk": "@@ -372,10 +370,10 @@ static int jdbcDataType(Type type)\n         if (type.equals(TIME_WITH_TIME_ZONE)) {\n             return Types.TIME_WITH_TIMEZONE;\n         }\n-        if (type.equals(TIMESTAMP)) {\n+        if (type instanceof TimestampType) {\n             return Types.TIMESTAMP;\n         }\n-        if (type.equals(TIMESTAMP_WITH_TIME_ZONE)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjcyODM0Ng=="}, "originalCommit": null, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTEzMzYzOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMTo1NTozN1rOGwGsIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMTo1NTozN1rOGwGsIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5NDQzNA==", "bodyText": "i think 5 may be actual max", "url": "https://github.com/trinodb/trino/pull/4411#discussion_r453094434", "createdAt": "2020-07-10T21:55:37Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "diffHunk": "@@ -428,11 +426,24 @@ static Integer columnSize(Type type)\n         if (type.equals(DATE)) {\n             return 14; // +5881580-07-11 (2**31-1 days)\n         }\n-        if (type.equals(TIMESTAMP)) {\n-            return 15 + 8;\n-        }\n-        if (type.equals(TIMESTAMP_WITH_TIME_ZONE)) {\n-            return 15 + 8 + 6;\n+        if (type instanceof TimestampType) {\n+            // 1 digit for year sign\n+            // 6 digits for year\n+            // 15 digits for \"-MM-DD HH:MM:SS\"\n+            // min(p, 1) for the fractional second period (i.e., no period if p == 0)\n+            // p for the fractional digits\n+            int precision = ((TimestampType) type).getPrecision();\n+            return 1 + 6 + 15 + Math.min(precision, 1) + precision;\n+        }\n+        if (type instanceof TimestampWithTimeZoneType) {\n+            // 1 digit for year sign\n+            // 6 digits for year", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTEzNTAwOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMTo1NjowNlrOGwGs0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMTo1NjowNlrOGwGs0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5NDYxMQ==", "bodyText": "static import", "url": "https://github.com/trinodb/trino/pull/4411#discussion_r453094611", "createdAt": "2020-07-10T21:56:06Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "diffHunk": "@@ -428,11 +426,24 @@ static Integer columnSize(Type type)\n         if (type.equals(DATE)) {\n             return 14; // +5881580-07-11 (2**31-1 days)\n         }\n-        if (type.equals(TIMESTAMP)) {\n-            return 15 + 8;\n-        }\n-        if (type.equals(TIMESTAMP_WITH_TIME_ZONE)) {\n-            return 15 + 8 + 6;\n+        if (type instanceof TimestampType) {\n+            // 1 digit for year sign\n+            // 6 digits for year\n+            // 15 digits for \"-MM-DD HH:MM:SS\"\n+            // min(p, 1) for the fractional second period (i.e., no period if p == 0)\n+            // p for the fractional digits\n+            int precision = ((TimestampType) type).getPrecision();\n+            return 1 + 6 + 15 + Math.min(precision, 1) + precision;\n+        }\n+        if (type instanceof TimestampWithTimeZoneType) {\n+            // 1 digit for year sign\n+            // 6 digits for year\n+            // 15 digits for \"-MM-DD HH:MM:SS\"\n+            // min(p, 1) for the fractional second period (i.e., no period if p == 0)\n+            // p for the fractional digits\n+            // 6 for timezone offset\n+            int precision = ((TimestampWithTimeZoneType) type).getPrecision();\n+            return 1 + 6 + 15 + Math.min(precision, 1) + precision + 6;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTEzNTU4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMTo1NjoyMFrOGwGtJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMjowMTowMlrOGwGzpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5NDY5Mg==", "bodyText": "this can be a named zone", "url": "https://github.com/trinodb/trino/pull/4411#discussion_r453094692", "createdAt": "2020-07-10T21:56:20Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "diffHunk": "@@ -428,11 +426,24 @@ static Integer columnSize(Type type)\n         if (type.equals(DATE)) {\n             return 14; // +5881580-07-11 (2**31-1 days)\n         }\n-        if (type.equals(TIMESTAMP)) {\n-            return 15 + 8;\n-        }\n-        if (type.equals(TIMESTAMP_WITH_TIME_ZONE)) {\n-            return 15 + 8 + 6;\n+        if (type instanceof TimestampType) {\n+            // 1 digit for year sign\n+            // 6 digits for year\n+            // 15 digits for \"-MM-DD HH:MM:SS\"\n+            // min(p, 1) for the fractional second period (i.e., no period if p == 0)\n+            // p for the fractional digits\n+            int precision = ((TimestampType) type).getPrecision();\n+            return 1 + 6 + 15 + Math.min(precision, 1) + precision;\n+        }\n+        if (type instanceof TimestampWithTimeZoneType) {\n+            // 1 digit for year sign\n+            // 6 digits for year\n+            // 15 digits for \"-MM-DD HH:MM:SS\"\n+            // min(p, 1) for the fractional second period (i.e., no period if p == 0)\n+            // p for the fractional digits\n+            // 6 for timezone offset", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5NjM1Nw==", "bodyText": "I realize. Not sure what to do about it, though. Where does the current + 6 come from?", "url": "https://github.com/trinodb/trino/pull/4411#discussion_r453096357", "createdAt": "2020-07-10T22:01:02Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "diffHunk": "@@ -428,11 +426,24 @@ static Integer columnSize(Type type)\n         if (type.equals(DATE)) {\n             return 14; // +5881580-07-11 (2**31-1 days)\n         }\n-        if (type.equals(TIMESTAMP)) {\n-            return 15 + 8;\n-        }\n-        if (type.equals(TIMESTAMP_WITH_TIME_ZONE)) {\n-            return 15 + 8 + 6;\n+        if (type instanceof TimestampType) {\n+            // 1 digit for year sign\n+            // 6 digits for year\n+            // 15 digits for \"-MM-DD HH:MM:SS\"\n+            // min(p, 1) for the fractional second period (i.e., no period if p == 0)\n+            // p for the fractional digits\n+            int precision = ((TimestampType) type).getPrecision();\n+            return 1 + 6 + 15 + Math.min(precision, 1) + precision;\n+        }\n+        if (type instanceof TimestampWithTimeZoneType) {\n+            // 1 digit for year sign\n+            // 6 digits for year\n+            // 15 digits for \"-MM-DD HH:MM:SS\"\n+            // min(p, 1) for the fractional second period (i.e., no period if p == 0)\n+            // p for the fractional digits\n+            // 6 for timezone offset", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5NDY5Mg=="}, "originalCommit": null, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTYyMjIzOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwNTo0Nzo1OVrOGwKr6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNzozMzo0OVrOGwyruQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE1OTkxNQ==", "bodyText": "Looks reasonable to me. Is it what eg Oracle does? they support named zones as well.\nThe assumption is that SystemV zones do not have long names, right?", "url": "https://github.com/trinodb/trino/pull/4411#discussion_r453159915", "createdAt": "2020-07-11T05:47:59Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "diffHunk": "@@ -94,6 +94,10 @@\n     public static final SchemaTableName NAME = new SchemaTableName(\"jdbc\", \"columns\");\n \n     private static final int MAX_DOMAIN_SIZE = 100;\n+    private static final int MAX_TIMEZONE_LENGTH = ZoneId.getAvailableZoneIds().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgwNDY0OQ==", "bodyText": "I haven't tried with Oracle. Let me check that.", "url": "https://github.com/trinodb/trino/pull/4411#discussion_r453804649", "createdAt": "2020-07-13T17:16:21Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "diffHunk": "@@ -94,6 +94,10 @@\n     public static final SchemaTableName NAME = new SchemaTableName(\"jdbc\", \"columns\");\n \n     private static final int MAX_DOMAIN_SIZE = 100;\n+    private static final int MAX_TIMEZONE_LENGTH = ZoneId.getAvailableZoneIds().stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE1OTkxNQ=="}, "originalCommit": null, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgxNTIyNQ==", "bodyText": "Oracle seems broken. It returns 13 as the display size for timestamp with time zone regardless of the precision. (13 can't even fit a timestamp with precision = 0 -- maybe if you represent it as +YYMMDDHHMMSS). Also, getPrecision returns 0 always.", "url": "https://github.com/trinodb/trino/pull/4411#discussion_r453815225", "createdAt": "2020-07-13T17:33:49Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "diffHunk": "@@ -94,6 +94,10 @@\n     public static final SchemaTableName NAME = new SchemaTableName(\"jdbc\", \"columns\");\n \n     private static final int MAX_DOMAIN_SIZE = 100;\n+    private static final int MAX_TIMEZONE_LENGTH = ZoneId.getAvailableZoneIds().stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE1OTkxNQ=="}, "originalCommit": null, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTYyMjg2OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwNTo0ODo1MVrOGwKsMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwNTo0ODo1MVrOGwKsMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE1OTk4Ng==", "bodyText": "6", "url": "https://github.com/trinodb/trino/pull/4411#discussion_r453159986", "createdAt": "2020-07-11T05:48:51Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "diffHunk": "@@ -428,11 +432,25 @@ static Integer columnSize(Type type)\n         if (type.equals(DATE)) {\n             return 14; // +5881580-07-11 (2**31-1 days)\n         }\n-        if (type.equals(TIMESTAMP)) {\n-            return 15 + 8;\n-        }\n-        if (type.equals(TIMESTAMP_WITH_TIME_ZONE)) {\n-            return 15 + 8 + 6;\n+        if (type instanceof TimestampType) {\n+            // 1 digit for year sign\n+            // 5 digits for year", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTYyMzA2OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwNTo0OToxM1rOGwKsSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwNTo1Mzo1MlrOGwKtqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE2MDAwOQ==", "bodyText": "I believe it's 5, but please check", "url": "https://github.com/trinodb/trino/pull/4411#discussion_r453160009", "createdAt": "2020-07-11T05:49:13Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "diffHunk": "@@ -428,11 +432,25 @@ static Integer columnSize(Type type)\n         if (type.equals(DATE)) {\n             return 14; // +5881580-07-11 (2**31-1 days)\n         }\n-        if (type.equals(TIMESTAMP)) {\n-            return 15 + 8;\n-        }\n-        if (type.equals(TIMESTAMP_WITH_TIME_ZONE)) {\n-            return 15 + 8 + 6;\n+        if (type instanceof TimestampType) {\n+            // 1 digit for year sign\n+            // 5 digits for year\n+            // 15 digits for \"-MM-DD HH:MM:SS\"\n+            // min(p, 1) for the fractional second period (i.e., no period if p == 0)\n+            // p for the fractional digits\n+            int precision = ((TimestampType) type).getPrecision();\n+            return 1 + 5 + 15 + min(precision, 1) + precision;\n+        }\n+        if (type instanceof TimestampWithTimeZoneType) {\n+            // 1 digit for year sign\n+            // 5 digits for year", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE2MDM2MQ==", "bodyText": "timestamp can definitely acommodate 6 digit years (and we have tests for that),\nbut i don't remember whether i checked the max timestamp and whether it could have 7.\nIIRC  timestamp with time zone ends up at 5 digit years", "url": "https://github.com/trinodb/trino/pull/4411#discussion_r453160361", "createdAt": "2020-07-11T05:53:52Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "diffHunk": "@@ -428,11 +432,25 @@ static Integer columnSize(Type type)\n         if (type.equals(DATE)) {\n             return 14; // +5881580-07-11 (2**31-1 days)\n         }\n-        if (type.equals(TIMESTAMP)) {\n-            return 15 + 8;\n-        }\n-        if (type.equals(TIMESTAMP_WITH_TIME_ZONE)) {\n-            return 15 + 8 + 6;\n+        if (type instanceof TimestampType) {\n+            // 1 digit for year sign\n+            // 5 digits for year\n+            // 15 digits for \"-MM-DD HH:MM:SS\"\n+            // min(p, 1) for the fractional second period (i.e., no period if p == 0)\n+            // p for the fractional digits\n+            int precision = ((TimestampType) type).getPrecision();\n+            return 1 + 5 + 15 + min(precision, 1) + precision;\n+        }\n+        if (type instanceof TimestampWithTimeZoneType) {\n+            // 1 digit for year sign\n+            // 5 digits for year", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE2MDAwOQ=="}, "originalCommit": null, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTYyMzM1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwNTo0OTozNlrOGwKsaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwNTo0OTozNlrOGwKsaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE2MDA0MA==", "bodyText": "digits -> characters", "url": "https://github.com/trinodb/trino/pull/4411#discussion_r453160040", "createdAt": "2020-07-11T05:49:36Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "diffHunk": "@@ -428,11 +432,25 @@ static Integer columnSize(Type type)\n         if (type.equals(DATE)) {\n             return 14; // +5881580-07-11 (2**31-1 days)\n         }\n-        if (type.equals(TIMESTAMP)) {\n-            return 15 + 8;\n-        }\n-        if (type.equals(TIMESTAMP_WITH_TIME_ZONE)) {\n-            return 15 + 8 + 6;\n+        if (type instanceof TimestampType) {\n+            // 1 digit for year sign\n+            // 5 digits for year\n+            // 15 digits for \"-MM-DD HH:MM:SS\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTYyMzM3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwNTo0OTo0MVrOGwKsag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwNTo0OTo0MVrOGwKsag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE2MDA0Mg==", "bodyText": "digits -> characters", "url": "https://github.com/trinodb/trino/pull/4411#discussion_r453160042", "createdAt": "2020-07-11T05:49:41Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/connector/system/jdbc/ColumnJdbcTable.java", "diffHunk": "@@ -428,11 +432,25 @@ static Integer columnSize(Type type)\n         if (type.equals(DATE)) {\n             return 14; // +5881580-07-11 (2**31-1 days)\n         }\n-        if (type.equals(TIMESTAMP)) {\n-            return 15 + 8;\n-        }\n-        if (type.equals(TIMESTAMP_WITH_TIME_ZONE)) {\n-            return 15 + 8 + 6;\n+        if (type instanceof TimestampType) {\n+            // 1 digit for year sign\n+            // 5 digits for year\n+            // 15 digits for \"-MM-DD HH:MM:SS\"\n+            // min(p, 1) for the fractional second period (i.e., no period if p == 0)\n+            // p for the fractional digits\n+            int precision = ((TimestampType) type).getPrecision();\n+            return 1 + 5 + 15 + min(precision, 1) + precision;\n+        }\n+        if (type instanceof TimestampWithTimeZoneType) {\n+            // 1 digit for year sign\n+            // 5 digits for year\n+            // 15 digits for \"-MM-DD HH:MM:SS\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3860, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}