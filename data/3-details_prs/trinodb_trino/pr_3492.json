{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MjI2NTE3", "number": 3492, "title": "Function documentation cleanup", "bodyText": "", "createdAt": "2020-04-20T18:27:06Z", "url": "https://github.com/trinodb/trino/pull/3492", "merged": true, "mergeCommit": {"oid": "ac6ac5afa7b49db3d80c261011fa1ec27f93ebfd"}, "closed": true, "closedAt": "2020-05-16T19:31:31Z", "author": {"login": "electrum"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZo4-_ABqjMyNTQwOTYzMzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABch74I3ABqjMzNDM4ODk4MDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MzczODkz", "url": "https://github.com/trinodb/trino/pull/3492#pullrequestreview-409373893", "createdAt": "2020-05-11T17:20:54Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzoyMDo1NFrOGTl5HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzoyNDozNlrOGTmBlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE5Njk1Ng==", "bodyText": "Should we mention the extra characters or link to an RFC?", "url": "https://github.com/trinodb/trino/pull/3492#discussion_r423196956", "createdAt": "2020-05-11T17:20:54Z", "author": {"login": "dain"}, "path": "presto-docs/src/main/sphinx/functions/binary.rst", "diffHunk": "@@ -37,77 +53,76 @@ Binary Functions\n     negative starting position is interpreted as being relative to the end of\n     the string.\n \n-.. function:: to_base64(binary) -> varchar\n-\n-    Encodes ``binary`` into a base64 string representation.\n+Base64 Encoding Functions\n+-------------------------\n \n .. function:: from_base64(string) -> varbinary\n \n     Decodes binary data from the base64 encoded ``string``.\n \n-.. function:: to_base64url(binary) -> varchar\n+.. function:: to_base64(binary) -> varchar\n \n-    Encodes ``binary`` into a base64 string representation using the URL safe alphabet.\n+    Encodes ``binary`` into a base64 string representation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE5Nzc3OA==", "bodyText": "These (int, long, float, double) should mention what happens when binary is greater or less than 4 or 8 bytes", "url": "https://github.com/trinodb/trino/pull/3492#discussion_r423197778", "createdAt": "2020-05-11T17:22:22Z", "author": {"login": "dain"}, "path": "presto-docs/src/main/sphinx/functions/binary.rst", "diffHunk": "@@ -37,77 +53,76 @@ Binary Functions\n     negative starting position is interpreted as being relative to the end of\n     the string.\n \n-.. function:: to_base64(binary) -> varchar\n-\n-    Encodes ``binary`` into a base64 string representation.\n+Base64 Encoding Functions\n+-------------------------\n \n .. function:: from_base64(string) -> varbinary\n \n     Decodes binary data from the base64 encoded ``string``.\n \n-.. function:: to_base64url(binary) -> varchar\n+.. function:: to_base64(binary) -> varchar\n \n-    Encodes ``binary`` into a base64 string representation using the URL safe alphabet.\n+    Encodes ``binary`` into a base64 string representation.\n \n .. function:: from_base64url(string) -> varbinary\n \n     Decodes binary data from the base64 encoded ``string`` using the URL safe alphabet.\n \n-.. function:: to_hex(binary) -> varchar\n+.. function:: to_base64url(binary) -> varchar\n \n-    Encodes ``binary`` into a hex string representation.\n+    Encodes ``binary`` into a base64 string representation using the URL safe alphabet.\n+\n+Hex Encoding Functions\n+----------------------\n \n .. function:: from_hex(string) -> varbinary\n \n     Decodes binary data from the hex encoded ``string``.\n \n-.. function:: to_big_endian_64(bigint) -> varbinary\n+.. function:: to_hex(binary) -> varchar\n \n-    Encodes ``bigint`` in a 64-bit 2's complement big endian format.\n+    Encodes ``binary`` into a hex string representation.\n \n-.. function:: from_big_endian_64(binary) -> bigint\n+Integer Encoding Functions\n+--------------------------\n \n-    Decodes ``bigint`` value from a 64-bit 2's complement big endian ``binary``.\n+.. function:: from_big_endian_32(binary) -> integer\n+\n+    Decodes the 32-bit two's complement big-endian ``binary``.\n \n .. function:: to_big_endian_32(integer) -> varbinary\n \n-    Encodes ``integer`` in a 32-bit 2's complement big endian format.\n+    Encodes ``integer`` into a 32-bit two's complement big-endian format.\n \n-.. function:: from_big_endian_32(binary) -> integer\n+.. function:: from_big_endian_64(binary) -> bigint\n \n-    Decodes ``integer`` value from a 32-bit 2's complement big endian ``binary``.\n+    Decodes the 64-bit two's complement big-endian ``binary``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE5OTEyNw==", "bodyText": "I believe it should be xxHash64", "url": "https://github.com/trinodb/trino/pull/3492#discussion_r423199127", "createdAt": "2020-05-11T17:24:36Z", "author": {"login": "dain"}, "path": "presto-docs/src/main/sphinx/functions/binary.rst", "diffHunk": "@@ -142,18 +153,25 @@ Binary Functions\n \n     Computes the 64-bit SpookyHashV2 hash of ``binary``.\n \n+.. function:: xxhash64(binary) -> varbinary\n+\n+    Computes the xxhash64 hash of ``binary``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 180}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b846bed4597154e9cb139516a75bb993ed96e17", "author": {"user": {"login": "electrum", "name": "David Phillips"}}, "url": "https://github.com/trinodb/trino/commit/6b846bed4597154e9cb139516a75bb993ed96e17", "committedDate": "2020-05-16T19:31:13Z", "message": "Cleanup documentation for binary functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74eb4844c42b7bfbf15de9d3eac96cde286bba69", "author": {"user": {"login": "electrum", "name": "David Phillips"}}, "url": "https://github.com/trinodb/trino/commit/74eb4844c42b7bfbf15de9d3eac96cde286bba69", "committedDate": "2020-05-16T19:31:13Z", "message": "Reorganize math function documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac6ac5afa7b49db3d80c261011fa1ec27f93ebfd", "author": {"user": {"login": "electrum", "name": "David Phillips"}}, "url": "https://github.com/trinodb/trino/commit/ac6ac5afa7b49db3d80c261011fa1ec27f93ebfd", "committedDate": "2020-05-16T19:31:13Z", "message": "Use same font for function parentheses"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "ac6ac5afa7b49db3d80c261011fa1ec27f93ebfd", "author": {"user": {"login": "electrum", "name": "David Phillips"}}, "url": "https://github.com/trinodb/trino/commit/ac6ac5afa7b49db3d80c261011fa1ec27f93ebfd", "committedDate": "2020-05-16T19:31:13Z", "message": "Use same font for function parentheses"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1594, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}