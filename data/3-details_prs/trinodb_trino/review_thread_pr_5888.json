{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4MDMxNzUz", "number": 5888, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMToxMDo1MlrOE29E1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMToxMDo1MlrOE29E1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDU5MjIzOnYy", "diffSide": "LEFT", "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMToxMDo1MlrOHwBvKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNDoxMDo1MlrOHweTcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEyMjE1NQ==", "bodyText": "please add boolean to io.prestosql.testing.AbstractTestDistributedQueries#testDataMappingSmokeTestData (can be a follow up)", "url": "https://github.com/trinodb/trino/pull/5888#discussion_r520122155", "createdAt": "2020-11-09T21:10:52Z", "author": {"login": "findepi"}, "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -204,7 +204,7 @@ public void testCreateTable()\n         assertTableColumnNames(tableName, \"a\", \"b\", \"c\");\n \n         String tableNameLike = \"test_create_like_\" + randomTableSuffix();\n-        assertUpdate(\"CREATE TABLE \" + tableNameLike + \" (LIKE \" + tableName + \", d boolean, e varchar)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa04d3fc127613b2ab1385401a2d3500be5e5eeb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU5MDE5Mw==", "bodyText": "#5900", "url": "https://github.com/trinodb/trino/pull/5888#discussion_r520590193", "createdAt": "2020-11-10T14:10:52Z", "author": {"login": "ssheikin"}, "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -204,7 +204,7 @@ public void testCreateTable()\n         assertTableColumnNames(tableName, \"a\", \"b\", \"c\");\n \n         String tableNameLike = \"test_create_like_\" + randomTableSuffix();\n-        assertUpdate(\"CREATE TABLE \" + tableNameLike + \" (LIKE \" + tableName + \", d boolean, e varchar)\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEyMjE1NQ=="}, "originalCommit": {"oid": "aa04d3fc127613b2ab1385401a2d3500be5e5eeb"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4723, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}