{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMDMyMDYw", "number": 2750, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMTozNjoyNFrODd1rfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwOTowNjowM1rODd9FRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNjE0NzgzOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMTozNjoyNFrOFmrCtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMjowNToxMFrOFmr1Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5NTQxMw==", "bodyText": "or maybe even hive.hive-view... ? to indicate it's hive connector's property for hive views", "url": "https://github.com/trinodb/trino/pull/2750#discussion_r376095413", "createdAt": "2020-02-06T21:36:24Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -597,7 +597,7 @@ public boolean isHiveViewsEnabled()\n         return hiveViewsEnabled;\n     }\n \n-    @Config(\"hive.views-execution.enabled\")\n+    @Config(\"hive.view-execution.enabled\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwODM4Mw==", "bodyText": "Maybe we should call this translate-hive-views?", "url": "https://github.com/trinodb/trino/pull/2750#discussion_r376108383", "createdAt": "2020-02-06T22:05:10Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -597,7 +597,7 @@ public boolean isHiveViewsEnabled()\n         return hiveViewsEnabled;\n     }\n \n-    @Config(\"hive.views-execution.enabled\")\n+    @Config(\"hive.view-execution.enabled\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5NTQxMw=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzM1MDY1OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwOTowMjowN1rOFm2TWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwODowMToxMFrOFnTzdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3OTg5OQ==", "bodyText": "One more thing -- should this (description / toggle name) say it's experimental?\nWe don't have proper translation layer yet.", "url": "https://github.com/trinodb/trino/pull/2750#discussion_r376279899", "createdAt": "2020-02-07T09:02:07Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -592,16 +593,17 @@ public HiveConfig setFileStatusCacheTables(String fileStatusCacheTables)\n         return this;\n     }\n \n-    public boolean isHiveViewsEnabled()\n+    public boolean isTranslateHiveViews()\n     {\n-        return hiveViewsEnabled;\n+        return translateHiveViews;\n     }\n \n-    @Config(\"hive.views-execution.enabled\")\n-    @ConfigDescription(\"Allow execution of Hive views\")\n-    public HiveConfig setHiveViewsEnabled(boolean hiveViewsEnabled)\n+    @LegacyConfig(\"hive.views-execution.enabled\")\n+    @Config(\"hive.translate-hive-views\")\n+    @ConfigDescription(\"Allow translation of Hive views into Presto views\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MzI1Mw==", "bodyText": "Good idea. Added.", "url": "https://github.com/trinodb/trino/pull/2750#discussion_r376763253", "createdAt": "2020-02-09T08:01:10Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -592,16 +593,17 @@ public HiveConfig setFileStatusCacheTables(String fileStatusCacheTables)\n         return this;\n     }\n \n-    public boolean isHiveViewsEnabled()\n+    public boolean isTranslateHiveViews()\n     {\n-        return hiveViewsEnabled;\n+        return translateHiveViews;\n     }\n \n-    @Config(\"hive.views-execution.enabled\")\n-    @ConfigDescription(\"Allow execution of Hive views\")\n-    public HiveConfig setHiveViewsEnabled(boolean hiveViewsEnabled)\n+    @LegacyConfig(\"hive.views-execution.enabled\")\n+    @Config(\"hive.translate-hive-views\")\n+    @ConfigDescription(\"Allow translation of Hive views into Presto views\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3OTg5OQ=="}, "originalCommit": null, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzM2MDcxOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwOTowNjowM1rOFm2ZtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwOTo0NjoyOVrOFm3i4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI4MTUyNQ==", "bodyText": "@sopel39 comment/owner were reversed. Should  we have a test? #2753", "url": "https://github.com/trinodb/trino/pull/2750#discussion_r376281525", "createdAt": "2020-02-07T09:06:03Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveUtil.java", "diffHunk": "@@ -670,16 +672,18 @@ public static ConnectorViewDefinition decodeViewData(String data)\n \n     public static ConnectorViewDefinition buildHiveViewConnectorDefinition(HiveCatalogName catalogName, Table view)\n     {\n+        String viewText = view.getViewExpandedText()\n+                .orElseThrow(() -> new PrestoException(HIVE_INVALID_METADATA, \"No view expanded text: \" + view.getSchemaTableName()));\n         return new ConnectorViewDefinition(\n-                translateHiveQlToPrestoSql(view.getViewExpandedText().get()),\n+                translateHiveQlToPrestoSql(viewText),\n                 Optional.of(catalogName.toString()),\n                 Optional.ofNullable(view.getDatabaseName()),\n                 view.getDataColumns().stream()\n-                        .map(column -> new ConnectorViewDefinition.ViewColumn(column.getName(), TypeId.of(column.getType().getTypeSignature().toString())))\n+                        .map(column -> new ViewColumn(column.getName(), TypeId.of(column.getType().getTypeSignature().toString())))\n                         .collect(toImmutableList()),\n-                Optional.ofNullable(view.getOwner()),\n-                Optional.empty(), // no comment\n-                false); // don't run as invoker);\n+                Optional.ofNullable(view.getParameters().get(TABLE_COMMENT)),\n+                Optional.of(view.getOwner()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMwMDI1OQ==", "bodyText": "good idea", "url": "https://github.com/trinodb/trino/pull/2750#discussion_r376300259", "createdAt": "2020-02-07T09:46:29Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveUtil.java", "diffHunk": "@@ -670,16 +672,18 @@ public static ConnectorViewDefinition decodeViewData(String data)\n \n     public static ConnectorViewDefinition buildHiveViewConnectorDefinition(HiveCatalogName catalogName, Table view)\n     {\n+        String viewText = view.getViewExpandedText()\n+                .orElseThrow(() -> new PrestoException(HIVE_INVALID_METADATA, \"No view expanded text: \" + view.getSchemaTableName()));\n         return new ConnectorViewDefinition(\n-                translateHiveQlToPrestoSql(view.getViewExpandedText().get()),\n+                translateHiveQlToPrestoSql(viewText),\n                 Optional.of(catalogName.toString()),\n                 Optional.ofNullable(view.getDatabaseName()),\n                 view.getDataColumns().stream()\n-                        .map(column -> new ConnectorViewDefinition.ViewColumn(column.getName(), TypeId.of(column.getType().getTypeSignature().toString())))\n+                        .map(column -> new ViewColumn(column.getName(), TypeId.of(column.getType().getTypeSignature().toString())))\n                         .collect(toImmutableList()),\n-                Optional.ofNullable(view.getOwner()),\n-                Optional.empty(), // no comment\n-                false); // don't run as invoker);\n+                Optional.ofNullable(view.getParameters().get(TABLE_COMMENT)),\n+                Optional.of(view.getOwner()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI4MTUyNQ=="}, "originalCommit": null, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 874, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}