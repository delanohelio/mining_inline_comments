{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MzI2Mzcx", "number": 4165, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNjo0MTo1NlrOEH1Usg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNzowOTowNlrOEIPp6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NjQ5MTM4OnYy", "diffSide": "RIGHT", "path": "presto-elasticsearch/src/main/java/io/prestosql/elasticsearch/client/ElasticsearchClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNjo0MTo1NlrOGnbS7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNjo0Mzo1NVrOGnbV-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk5NDg2MQ==", "bodyText": "verify the two configs are mutually exclusive", "url": "https://github.com/trinodb/trino/pull/4165#discussion_r443994861", "createdAt": "2020-06-23T06:41:56Z", "author": {"login": "findepi"}, "path": "presto-elasticsearch/src/main/java/io/prestosql/elasticsearch/client/ElasticsearchClient.java", "diffHunk": "@@ -228,6 +239,12 @@ private static RestHighLevelClient createClient(ElasticsearchConfig config, Opti\n                 }\n             }\n \n+            passwordConfig.ifPresent(securityConfig -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk5NTY0Mg==", "bodyText": "From this code's point of view, it doesn't matter, I think. Both could be supplied and it should just work.", "url": "https://github.com/trinodb/trino/pull/4165#discussion_r443995642", "createdAt": "2020-06-23T06:43:55Z", "author": {"login": "martint"}, "path": "presto-elasticsearch/src/main/java/io/prestosql/elasticsearch/client/ElasticsearchClient.java", "diffHunk": "@@ -228,6 +239,12 @@ private static RestHighLevelClient createClient(ElasticsearchConfig config, Opti\n                 }\n             }\n \n+            passwordConfig.ifPresent(securityConfig -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk5NDg2MQ=="}, "originalCommit": null, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NjU1NTUwOnYy", "diffSide": "RIGHT", "path": "presto-elasticsearch/src/main/java/io/prestosql/elasticsearch/ElasticsearchConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNzowNDowNlrOGnb6PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNzowNDowNlrOGnb6PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAwNDkyNQ==", "bodyText": "add comma at the end", "url": "https://github.com/trinodb/trino/pull/4165#discussion_r444004925", "createdAt": "2020-06-23T07:04:06Z", "author": {"login": "kokosing"}, "path": "presto-elasticsearch/src/main/java/io/prestosql/elasticsearch/ElasticsearchConfig.java", "diffHunk": "@@ -49,7 +49,8 @@\n {\n     public enum Security\n     {\n-        AWS\n+        AWS,\n+        PASSWORD", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDc5MjM3OnYy", "diffSide": "RIGHT", "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/ElasticsearchServer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNzowNDoxNFrOGoFhNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNDowMjoyNFrOGoTj6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY4NjY0NQ==", "bodyText": "will this be deleted on exit recursively?", "url": "https://github.com/trinodb/trino/pull/4165#discussion_r444686645", "createdAt": "2020-06-24T07:04:14Z", "author": {"login": "findepi"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/ElasticsearchServer.java", "diffHunk": "@@ -13,16 +13,42 @@\n  */\n package io.prestosql.elasticsearch;\n \n+import com.google.common.io.Files;\n import com.google.common.net.HostAndPort;\n import org.testcontainers.elasticsearch.ElasticsearchContainer;\n \n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.Map;\n+\n+import static com.google.common.io.Files.createTempDir;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+import static org.testcontainers.utility.MountableFile.forHostPath;\n+\n public class ElasticsearchServer\n {\n     private final ElasticsearchContainer container;\n \n-    public ElasticsearchServer(String version)\n+    public ElasticsearchServer(String image, Map<String, String> configuration)\n+            throws IOException\n     {\n-        container = new ElasticsearchContainer(\"docker.elastic.co/elasticsearch/elasticsearch-oss:\" + version);\n+        container = new ElasticsearchContainer(image);\n+\n+        if (!configuration.isEmpty()) {\n+            File tempDir = createTempDir();\n+            tempDir.deleteOnExit();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkxNjcxNA==", "bodyText": "It will not. I'll change the strategy (btw, we have the same problem in CassandraServer)", "url": "https://github.com/trinodb/trino/pull/4165#discussion_r444916714", "createdAt": "2020-06-24T14:02:24Z", "author": {"login": "martint"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/ElasticsearchServer.java", "diffHunk": "@@ -13,16 +13,42 @@\n  */\n package io.prestosql.elasticsearch;\n \n+import com.google.common.io.Files;\n import com.google.common.net.HostAndPort;\n import org.testcontainers.elasticsearch.ElasticsearchContainer;\n \n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.Map;\n+\n+import static com.google.common.io.Files.createTempDir;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+import static org.testcontainers.utility.MountableFile.forHostPath;\n+\n public class ElasticsearchServer\n {\n     private final ElasticsearchContainer container;\n \n-    public ElasticsearchServer(String version)\n+    public ElasticsearchServer(String image, Map<String, String> configuration)\n+            throws IOException\n     {\n-        container = new ElasticsearchContainer(\"docker.elastic.co/elasticsearch/elasticsearch-oss:\" + version);\n+        container = new ElasticsearchContainer(image);\n+\n+        if (!configuration.isEmpty()) {\n+            File tempDir = createTempDir();\n+            tempDir.deleteOnExit();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY4NjY0NQ=="}, "originalCommit": null, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDc5NDA4OnYy", "diffSide": "RIGHT", "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/ElasticsearchServer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNzowNDo0OFrOGoFiMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNDowMzoxMVrOGoTmJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY4Njg5OA==", "bodyText": "java.nio.Files.write(path, contensts, UTF_8)", "url": "https://github.com/trinodb/trino/pull/4165#discussion_r444686898", "createdAt": "2020-06-24T07:04:48Z", "author": {"login": "findepi"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/ElasticsearchServer.java", "diffHunk": "@@ -13,16 +13,42 @@\n  */\n package io.prestosql.elasticsearch;\n \n+import com.google.common.io.Files;\n import com.google.common.net.HostAndPort;\n import org.testcontainers.elasticsearch.ElasticsearchContainer;\n \n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.Map;\n+\n+import static com.google.common.io.Files.createTempDir;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+import static org.testcontainers.utility.MountableFile.forHostPath;\n+\n public class ElasticsearchServer\n {\n     private final ElasticsearchContainer container;\n \n-    public ElasticsearchServer(String version)\n+    public ElasticsearchServer(String image, Map<String, String> configuration)\n+            throws IOException\n     {\n-        container = new ElasticsearchContainer(\"docker.elastic.co/elasticsearch/elasticsearch-oss:\" + version);\n+        container = new ElasticsearchContainer(image);\n+\n+        if (!configuration.isEmpty()) {\n+            File tempDir = createTempDir();\n+            tempDir.deleteOnExit();\n+\n+            for (Map.Entry<String, String> entry : configuration.entrySet()) {\n+                String name = entry.getKey();\n+                String contents = entry.getValue();\n+\n+                Path path = tempDir.toPath().resolve(name);\n+                Files.asCharSink(path.toFile(), UTF_8).write(contents);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkxNzI4NQ==", "bodyText": "Close:\njava.nio.file.Files.write(path, contents.getBytes(UTF_8));", "url": "https://github.com/trinodb/trino/pull/4165#discussion_r444917285", "createdAt": "2020-06-24T14:03:11Z", "author": {"login": "martint"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/ElasticsearchServer.java", "diffHunk": "@@ -13,16 +13,42 @@\n  */\n package io.prestosql.elasticsearch;\n \n+import com.google.common.io.Files;\n import com.google.common.net.HostAndPort;\n import org.testcontainers.elasticsearch.ElasticsearchContainer;\n \n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.Map;\n+\n+import static com.google.common.io.Files.createTempDir;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+import static org.testcontainers.utility.MountableFile.forHostPath;\n+\n public class ElasticsearchServer\n {\n     private final ElasticsearchContainer container;\n \n-    public ElasticsearchServer(String version)\n+    public ElasticsearchServer(String image, Map<String, String> configuration)\n+            throws IOException\n     {\n-        container = new ElasticsearchContainer(\"docker.elastic.co/elasticsearch/elasticsearch-oss:\" + version);\n+        container = new ElasticsearchContainer(image);\n+\n+        if (!configuration.isEmpty()) {\n+            File tempDir = createTempDir();\n+            tempDir.deleteOnExit();\n+\n+            for (Map.Entry<String, String> entry : configuration.entrySet()) {\n+                String name = entry.getKey();\n+                String contents = entry.getValue();\n+\n+                Path path = tempDir.toPath().resolve(name);\n+                Files.asCharSink(path.toFile(), UTF_8).write(contents);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY4Njg5OA=="}, "originalCommit": null, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDc5ODUxOnYy", "diffSide": "RIGHT", "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearch7IntegrationSmokeTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNzowNjoyN1rOGoFk7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNzowNjoyN1rOGoFk7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY4NzU5Ng==", "bodyText": "document why you use 7.0.0 here and 7.8 in pwd test case", "url": "https://github.com/trinodb/trino/pull/4165#discussion_r444687596", "createdAt": "2020-06-24T07:06:27Z", "author": {"login": "findepi"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearch7IntegrationSmokeTest.java", "diffHunk": "@@ -20,7 +20,7 @@\n {\n     public TestElasticsearch7IntegrationSmokeTest()\n     {\n-        super(\"7.0.0\");\n+        super(\"elasticsearch:7.0.0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDgwMzQ1OnYy", "diffSide": "RIGHT", "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/ElasticsearchServer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNzowODoyMVrOGoFn4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNzowODoyMVrOGoFn4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY4ODM1Mw==", "bodyText": "configuration -> configurationFiles or configurationFileContents", "url": "https://github.com/trinodb/trino/pull/4165#discussion_r444688353", "createdAt": "2020-06-24T07:08:21Z", "author": {"login": "findepi"}, "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/ElasticsearchServer.java", "diffHunk": "@@ -13,16 +13,42 @@\n  */\n package io.prestosql.elasticsearch;\n \n+import com.google.common.io.Files;\n import com.google.common.net.HostAndPort;\n import org.testcontainers.elasticsearch.ElasticsearchContainer;\n \n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.Map;\n+\n+import static com.google.common.io.Files.createTempDir;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+import static org.testcontainers.utility.MountableFile.forHostPath;\n+\n public class ElasticsearchServer\n {\n     private final ElasticsearchContainer container;\n \n-    public ElasticsearchServer(String version)\n+    public ElasticsearchServer(String image, Map<String, String> configuration)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDgwNTUyOnYy", "diffSide": "RIGHT", "path": "presto-elasticsearch/src/test/resources/users", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNzowOTowNlrOGoFpLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNzowOTowNlrOGoFpLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY4ODY4Nw==", "bodyText": "can this be more easily searchable, like some_user or some_es_user?", "url": "https://github.com/trinodb/trino/pull/4165#discussion_r444688687", "createdAt": "2020-06-24T07:09:06Z", "author": {"login": "findepi"}, "path": "presto-elasticsearch/src/test/resources/users", "diffHunk": "@@ -0,0 +1 @@\n+user:$2a$10$tbO62EbOfqMezJDBDWlxbuvIleeYeNlw30F5OgWMXzi1R8aXqnVni", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3905, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}