{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MDUwNjgy", "number": 3463, "title": "Add generic column names test", "bodyText": "", "createdAt": "2020-04-17T10:24:11Z", "url": "https://github.com/trinodb/trino/pull/3463", "merged": true, "mergeCommit": {"oid": "329a48592ecb6c628712ef3648f2e8da7eb33d38"}, "closed": true, "closedAt": "2020-04-20T10:32:09Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYhJ63AFqTM5NTQ0NDMwOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZbB4kgBqjMyNTA3MTcwNzE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NDQ0MzA4", "url": "https://github.com/trinodb/trino/pull/3463#pullrequestreview-395444308", "createdAt": "2020-04-17T13:17:44Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMzoxNzo0NFrOGHNjrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMzoxNzo0NFrOGHNjrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIxNTM0Mg==", "bodyText": "#3461", "url": "https://github.com/trinodb/trino/pull/3463#discussion_r410215342", "createdAt": "2020-04-17T13:17:44Z", "author": {"login": "findepi"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestHiveDistributedQueries.java", "diffHunk": "@@ -59,6 +59,17 @@ public void testExplainOfCreateTableAs()\n         assertEquals(getOnlyElement(result.getOnlyColumnAsSet()), getExplainPlan(query, LOGICAL));\n     }\n \n+    @Override\n+    public void testColumnName(String columnName)\n+    {\n+        if (columnName.equals(\"atrailingspace \")) {\n+            // TODO (https://github.com/prestosql/presto/issues/3461)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NDUyNDYw", "url": "https://github.com/trinodb/trino/pull/3463#pullrequestreview-395452460", "createdAt": "2020-04-17T13:27:55Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMzoyNzo1NVrOGHN71g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMzoyNzo1NVrOGHN71g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIyMTUyNg==", "bodyText": "#3460", "url": "https://github.com/trinodb/trino/pull/3463#discussion_r410221526", "createdAt": "2020-04-17T13:27:55Z", "author": {"login": "findepi"}, "path": "presto-mongodb/src/test/java/io/prestosql/plugin/mongodb/TestMongoDistributedQueries.java", "diffHunk": "@@ -116,10 +117,14 @@ protected TestTable createTableWithDefaultColumns()\n     }\n \n     @Override\n+    @Test(dataProvider = \"testColumnNameDataProvider\")\n     public void testColumnName(String columnName)\n     {\n         if (columnName.equals(\"a.dot\")) {\n-            // TODO https://github.com/prestosql/presto/issues/3460\n+            // TODO (https://github.com/prestosql/presto/issues/3460)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NDUyNjA2", "url": "https://github.com/trinodb/trino/pull/3463#pullrequestreview-395452606", "createdAt": "2020-04-17T13:28:03Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMzoyODowM1rOGHN8WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMzoyODowM1rOGHN8WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIyMTY1Ng==", "bodyText": "#3466", "url": "https://github.com/trinodb/trino/pull/3463#discussion_r410221656", "createdAt": "2020-04-17T13:28:03Z", "author": {"login": "findepi"}, "path": "presto-phoenix/src/test/java/io/prestosql/plugin/phoenix/TestPhoenixDistributedQueries.java", "diffHunk": "@@ -133,6 +133,13 @@ public void testCreateSchema()\n         throw new SkipException(\"test disabled until issue fixed\"); // TODO https://github.com/prestosql/presto/issues/2348\n     }\n \n+    @Override\n+    public void testColumnName(String columnName)\n+    {\n+        // TODO (https://github.com/prestosql/presto/issues/3466) Phoenix generally lacks quoting in underlying queries", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTU3NzUy", "url": "https://github.com/trinodb/trino/pull/3463#pullrequestreview-395957752", "createdAt": "2020-04-18T22:50:22Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQyMjo1MDoyMlrOGHvE0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQyMjo1MDoyMlrOGHvE0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc2NDQ5Nw==", "bodyText": "#3477", "url": "https://github.com/trinodb/trino/pull/3463#discussion_r410764497", "createdAt": "2020-04-18T22:50:22Z", "author": {"login": "findepi"}, "path": "presto-kudu/src/test/java/io/prestosql/plugin/kudu/TestKuduDistributedQueries.java", "diffHunk": "@@ -158,7 +158,7 @@ public void testWrittenStats()\n     @Override\n     public void testColumnName(String columnName)\n     {\n-        // TODO enable the test\n+        // TODO (https://github.com/prestosql/presto/issues/3477) enable the test", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MTQ5NDY5", "url": "https://github.com/trinodb/trino/pull/3463#pullrequestreview-396149469", "createdAt": "2020-04-20T05:33:24Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNTozMzoyNFrOGIDyww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNTozNjo0NFrOGID25Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEwMzkzOQ==", "bodyText": "does it support CTAS?", "url": "https://github.com/trinodb/trino/pull/3463#discussion_r411103939", "createdAt": "2020-04-20T05:33:24Z", "author": {"login": "kokosing"}, "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/TestCassandraDistributedQueries.java", "diffHunk": "@@ -160,6 +160,12 @@ protected TestTable createTableWithDefaultColumns()\n         throw new SkipException(\"Cassandra connector does not support column default values\");\n     }\n \n+    @Override\n+    public void testColumnName(String columnName)\n+    {\n+        // Cassandra connector currently does not support create table", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEwNDUzNw==", "bodyText": "please extract qoute method", "url": "https://github.com/trinodb/trino/pull/3463#discussion_r411104537", "createdAt": "2020-04-20T05:35:14Z", "author": {"login": "kokosing"}, "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -1239,6 +1240,84 @@ public void testInsertForDefaultColumn()\n \n     protected abstract TestTable createTableWithDefaultColumns();\n \n+    @Test(dataProvider = \"testColumnNameDataProvider\")\n+    public void testColumnName(String columnName)\n+    {\n+        if (!requiresDelimiting(columnName)) {\n+            testColumnName(columnName, false);\n+        }\n+        testColumnName(columnName, true);\n+    }\n+\n+    private void testColumnName(String columnName, boolean delimited)\n+    {\n+        String nameInSql = columnName;\n+        if (delimited) {\n+            nameInSql = \"\\\"\" + columnName.replace(\"\\\"\", \"\\\"\\\"\") + \"\\\"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEwNDk5Nw==", "bodyText": "remove?", "url": "https://github.com/trinodb/trino/pull/3463#discussion_r411104997", "createdAt": "2020-04-20T05:36:44Z", "author": {"login": "kokosing"}, "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -1239,6 +1240,84 @@ public void testInsertForDefaultColumn()\n \n     protected abstract TestTable createTableWithDefaultColumns();\n \n+    @Test(dataProvider = \"testColumnNameDataProvider\")\n+    public void testColumnName(String columnName)\n+    {\n+        if (!requiresDelimiting(columnName)) {\n+            testColumnName(columnName, false);\n+        }\n+        testColumnName(columnName, true);\n+    }\n+\n+    private void testColumnName(String columnName, boolean delimited)\n+    {\n+        String nameInSql = columnName;\n+        if (delimited) {\n+            nameInSql = \"\\\"\" + columnName.replace(\"\\\"\", \"\\\"\\\"\") + \"\\\"\";\n+        }\n+        String tableName = \"test_column_names_\" + nameInSql.toLowerCase(ENGLISH).replaceAll(\"[^a-z0-9]\", \"_\") + \"_\" + randomTableSuffix();\n+\n+        try {\n+            // TODO test with both CTAS *and* CREATE TABLE + INSERT, since they use different connector API methods.\n+            assertUpdate(\"CREATE TABLE \" + tableName + \"(id varchar, \" + nameInSql + \" varchar)\");\n+        }\n+        catch (RuntimeException e) {\n+            if (isColumnNameRejected(e, columnName, delimited)) {\n+                // Fair enough", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "6603522239b97a1ffa3593df911a7795110f95c2", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/6603522239b97a1ffa3593df911a7795110f95c2", "committedDate": "2020-04-20T08:43:32Z", "message": "Add generic column names test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "6603522239b97a1ffa3593df911a7795110f95c2", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/6603522239b97a1ffa3593df911a7795110f95c2", "committedDate": "2020-04-20T08:43:32Z", "message": "Add generic column names test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1556, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}