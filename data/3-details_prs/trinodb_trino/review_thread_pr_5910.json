{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NzkzNjAz", "number": 5910, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwODo1OTo1MFrOE4D7tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwODo1OTo1MFrOE4D7tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MjIwMTUxOnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveViews.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwODo1OTo1MFrOHxwy8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMDoyOToxN1rOHx0W8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0MTc0NA==", "bodyText": "having a separate test for each feature would be appreciated. Not it is hard to follow.", "url": "https://github.com/trinodb/trino/pull/5910#discussion_r521941744", "createdAt": "2020-11-12T08:59:50Z", "author": {"login": "kokosing"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveViews.java", "diffHunk": "@@ -169,19 +169,20 @@ public void testRichSqlSyntax()\n                 // TODO (https://github.com/prestosql/presto/issues/5837) \"   CASE n_regionkey WHEN 0 THEN 'Africa' WHEN 1 THEN 'America' END region_name, \\n\" + // simple CASE\n                 \"   CASE WHEN n_name = \\\"BRAZIL\\\" THEN 'is BRAZIL' WHEN n_name = \\\"ALGERIA\\\" THEN 'is ALGERIA' ELSE \\\"\\\" END is_something,\\n\" + // searched CASE, double quote string literals\n                 \"   COALESCE(IF(n_name LIKE 'A%', NULL, n_name), 'A%') AS coalesced_name, \\n\" + // coalesce\n+                \"   round(tan(n_nationkey), 3) AS rounded_tan, \\n\" + // functions\n                 \"   `n`.`n_nationkey` + `n_nationkey` + n.n_nationkey + n_nationkey + 10000 - -1 AS arithmetic--some comment without leading space \\n\" +\n                 \"FROM `default`.`nation` AS `n`\");\n         assertViewQuery(\"\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba34e82e410ee05e13d75b9da26575ca99f14eb1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAwMDExNQ==", "bodyText": "i agree in general. I am doing this not to pay high penalty for using hive in a product test.\nI think in this particular case it's a reasonable choice.", "url": "https://github.com/trinodb/trino/pull/5910#discussion_r522000115", "createdAt": "2020-11-12T10:29:17Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveViews.java", "diffHunk": "@@ -169,19 +169,20 @@ public void testRichSqlSyntax()\n                 // TODO (https://github.com/prestosql/presto/issues/5837) \"   CASE n_regionkey WHEN 0 THEN 'Africa' WHEN 1 THEN 'America' END region_name, \\n\" + // simple CASE\n                 \"   CASE WHEN n_name = \\\"BRAZIL\\\" THEN 'is BRAZIL' WHEN n_name = \\\"ALGERIA\\\" THEN 'is ALGERIA' ELSE \\\"\\\" END is_something,\\n\" + // searched CASE, double quote string literals\n                 \"   COALESCE(IF(n_name LIKE 'A%', NULL, n_name), 'A%') AS coalesced_name, \\n\" + // coalesce\n+                \"   round(tan(n_nationkey), 3) AS rounded_tan, \\n\" + // functions\n                 \"   `n`.`n_nationkey` + `n_nationkey` + n.n_nationkey + n_nationkey + 10000 - -1 AS arithmetic--some comment without leading space \\n\" +\n                 \"FROM `default`.`nation` AS `n`\");\n         assertViewQuery(\"\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0MTc0NA=="}, "originalCommit": {"oid": "ba34e82e410ee05e13d75b9da26575ca99f14eb1"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4742, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}