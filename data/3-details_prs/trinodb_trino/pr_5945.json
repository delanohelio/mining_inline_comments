{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwMjcxMTI1", "number": 5945, "title": "Populate view owner groups for view access control", "bodyText": "Fixes #4543", "createdAt": "2020-11-13T02:04:48Z", "url": "https://github.com/trinodb/trino/pull/5945", "merged": true, "mergeCommit": {"oid": "020560f98828bc942264954579f4561d12283efa"}, "closed": true, "closedAt": "2020-11-16T21:05:30Z", "author": {"login": "electrum"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdb-dUsAFqTUyOTY3NzUzNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdc9sThgBqjM5OTg0MjgxNjk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5Njc3NTM0", "url": "https://github.com/trinodb/trino/pull/5945#pullrequestreview-529677534", "createdAt": "2020-11-13T03:19:20Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NzM3Nzgw", "url": "https://github.com/trinodb/trino/pull/5945#pullrequestreview-529737780", "createdAt": "2020-11-13T04:55:15Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNDo1NToxNVrOHybYvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNDo1NToxNVrOHybYvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjYzOTU0OQ==", "bodyText": "Can you please provide some test for that?\nIt could be with file based access control and file based group provider, to see if view owner is capable to read from table.", "url": "https://github.com/trinodb/trino/pull/5945#discussion_r522639549", "createdAt": "2020-11-13T04:55:15Z", "author": {"login": "kokosing"}, "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/Analyzer.java", "diffHunk": "@@ -79,7 +79,7 @@ public Analysis analyze(Statement statement, boolean isDescribe)\n     {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwNTE5NDMy", "url": "https://github.com/trinodb/trino/pull/5945#pullrequestreview-530519432", "createdAt": "2020-11-14T00:58:31Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwNTU3Nzg4", "url": "https://github.com/trinodb/trino/pull/5945#pullrequestreview-530557788", "createdAt": "2020-11-14T06:11:16Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQwNjoxMToxNlrOHzIv3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQwNjoxMToxNlrOHzIv3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM4Mjc1MA==", "bodyText": "Add also a reset method to testing group provider", "url": "https://github.com/trinodb/trino/pull/5945#discussion_r523382750", "createdAt": "2020-11-14T06:11:16Z", "author": {"login": "kokosing"}, "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -1198,6 +1198,24 @@ public void testViewColumnAccessControl()\n                 \"Cannot select from columns \\\\[.*\\\\] in table .*.orders.*\",\n                 privilege(getSession().getUser(), \"orders\", SELECT_COLUMN));\n \n+        // verify that groups are set inside access control\n+        executeExclusively(() -> {\n+            try {\n+                // require view owner to be in a group to access table\n+                getQueryRunner().getAccessControl().denyIdentityTable((identity, table) -> identity.getGroups().contains(\"testgroup\") || !table.equals(\"orders\"));\n+                assertThatThrownBy(() -> getQueryRunner().execute(getSession(), \"SELECT * FROM \" + columnAccessViewName))\n+                        .hasMessageMatching(\"Access Denied: View owner does not have sufficient privileges: Cannot select from columns \\\\[.*] in table or view \\\\w+.\\\\w+.orders\");\n+\n+                // verify view can be queried when owner is in group\n+                getQueryRunner().getGroupProvider().setUserGroups(ImmutableMap.of(viewOwnerSession.getUser(), ImmutableSet.of(\"testgroup\")));\n+                getQueryRunner().execute(getSession(), \"SELECT * FROM \" + columnAccessViewName);\n+            }\n+            finally {\n+                getQueryRunner().getAccessControl().reset();\n+                getQueryRunner().getGroupProvider().setUserGroups(ImmutableMap.of());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "3db7856338ab66ca8944a0d4a6a1593a5d358e2c", "author": {"user": {"login": "electrum", "name": "David Phillips"}}, "url": "https://github.com/trinodb/trino/commit/3db7856338ab66ca8944a0d4a6a1593a5d358e2c", "committedDate": "2020-11-16T04:56:08Z", "message": "Populate view owner groups for view access control"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "3db7856338ab66ca8944a0d4a6a1593a5d358e2c", "author": {"user": {"login": "electrum", "name": "David Phillips"}}, "url": "https://github.com/trinodb/trino/commit/3db7856338ab66ca8944a0d4a6a1593a5d358e2c", "committedDate": "2020-11-16T04:56:08Z", "message": "Populate view owner groups for view access control"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2541, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}