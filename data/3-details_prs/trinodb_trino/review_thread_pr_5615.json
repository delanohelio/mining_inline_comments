{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2ODM2MDIz", "number": 5615, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMjoyMjoyNVrOEwC82w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMjozNDowNlrOEwDFFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4ODE1NDUxOnYy", "diffSide": "RIGHT", "path": "presto-mongodb/src/test/java/io/prestosql/plugin/mongodb/TestMongoIntegrationSmokeTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMjoyMjoyNVrOHlXz3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMjoyMjoyNVrOHlXz3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk0OTQ2OA==", "bodyText": "The generated _schema collection may miss the Value column if the 2nd document was read first. It will lead to flaky tests. Let's define table definition explicitly. e.g.\n    @Test\n    public void testNullPredicates()\n    {\n        assertUpdate(\"CREATE TABLE test.null_predicates(name varchar, value integer)\");\n\n        MongoCollection<Document> collection = client.getDatabase(\"test\").getCollection(\"null_predicates\");\n        collection.insertOne(new Document(ImmutableMap.of(\"name\", \"abc\", \"value\", 1)));\n        collection.insertOne(new Document(ImmutableMap.of(\"name\", \"abcd\")));\n        collection.insertOne(new Document(Document.parse(\"{\\\"name\\\": \\\"abcde\\\", \\\"value\\\": null}\")));\n\n        assertQuery(\"SELECT count(*) FROM test.null_predicates WHERE value IS NULL OR rand() = 42\", \"SELECT 2\");\n        assertQuery(\"SELECT count(*) FROM test.null_predicates WHERE value IS NULL\", \"SELECT 2\");\n        assertQuery(\"SELECT count(*) FROM test.null_predicates WHERE value IS NOT NULL\", \"SELECT 1\");\n\n        assertUpdate(\"DROP TABLE test.null_predicates\");\n    }", "url": "https://github.com/trinodb/trino/pull/5615#discussion_r508949468", "createdAt": "2020-10-21T02:22:25Z", "author": {"login": "ebyhr"}, "path": "presto-mongodb/src/test/java/io/prestosql/plugin/mongodb/TestMongoIntegrationSmokeTest.java", "diffHunk": "@@ -340,6 +340,18 @@ public void testDropTable()\n         assertQueryFails(\"SELECT * FROM test.drop_table\", \".*Table 'mongodb.test.drop_table' does not exist\");\n     }\n \n+    @Test\n+    public void testNullPredicates()\n+    {\n+        MongoCollection<Document> collection = client.getDatabase(\"testnull\").getCollection(\"null_predicates\");\n+        collection.insertOne(new Document(ImmutableMap.of(\"Name\", \"abc\", \"Value\", 1)));\n+        collection.insertOne(new Document(ImmutableMap.of(\"Name\", \"abcd\")));\n+        collection.insertOne(new Document(Document.parse(\"{\\\"Name\\\": \\\"abcde\\\", \\\"Value\\\": null}\")));\n+        assertQuery(\"SELECT count(*) FROM testnull.null_predicates WHERE Value IS NULL OR rand() = 42\", \"SELECT 2\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4ODE1NTUzOnYy", "diffSide": "RIGHT", "path": "presto-mongodb/src/test/java/io/prestosql/plugin/mongodb/TestMongoIntegrationSmokeTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMjoyMzowMVrOHlX0fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMjoyMzowMVrOHlX0fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk0OTYyOA==", "bodyText": "Lowercase field names (name, value) because this test objective isn't case sensitivity.", "url": "https://github.com/trinodb/trino/pull/5615#discussion_r508949628", "createdAt": "2020-10-21T02:23:01Z", "author": {"login": "ebyhr"}, "path": "presto-mongodb/src/test/java/io/prestosql/plugin/mongodb/TestMongoIntegrationSmokeTest.java", "diffHunk": "@@ -340,6 +340,18 @@ public void testDropTable()\n         assertQueryFails(\"SELECT * FROM test.drop_table\", \".*Table 'mongodb.test.drop_table' does not exist\");\n     }\n \n+    @Test\n+    public void testNullPredicates()\n+    {\n+        MongoCollection<Document> collection = client.getDatabase(\"testnull\").getCollection(\"null_predicates\");\n+        collection.insertOne(new Document(ImmutableMap.of(\"Name\", \"abc\", \"Value\", 1)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4ODE3NTU3OnYy", "diffSide": "RIGHT", "path": "presto-mongodb/src/main/java/io/prestosql/plugin/mongodb/MongoSession.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMjozNDowNlrOHlYAHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMjozNDowNlrOHlYAHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk1MjYwNw==", "bodyText": "Remove EXISTS_OP from static field because it's no longer needed.", "url": "https://github.com/trinodb/trino/pull/5615#discussion_r508952607", "createdAt": "2020-10-21T02:34:06Z", "author": {"login": "ebyhr"}, "path": "presto-mongodb/src/main/java/io/prestosql/plugin/mongodb/MongoSession.java", "diffHunk": "@@ -433,7 +433,7 @@ private static Document orPredicate(List<Document> values)\n \n     private static Document isNullPredicate()\n     {\n-        return documentOf(EXISTS_OP, true).append(EQ_OP, null);\n+        return documentOf(EQ_OP, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4474, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}