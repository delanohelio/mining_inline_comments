{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxODQxODQ3", "number": 2747, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMTo1MTozNFrODd_4og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNTo1MjowN1rODeEQbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzgxOTg2OnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/EnvironmentUp.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMTo1MTozNFrOFm6wCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMTo1MTozNFrOFm6wCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1Mjc3OA==", "bodyText": "EnvironmentUpOptions", "url": "https://github.com/trinodb/trino/pull/2747#discussion_r376352778", "createdAt": "2020-02-07T11:51:34Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/EnvironmentUp.java", "diffHunk": "@@ -60,21 +64,37 @@ public void run()\n                         .add(new LauncherModule())\n                         .add(new EnvironmentModule(additionalEnvironments))\n                         .add(environmentOptions.toModule())\n+                        .add(envUpOptions.toModule())\n                         .build(),\n                 EnvironmentUp.Execution.class);\n     }\n \n+    public static class EnvUpOptions", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODUzNjEyOnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/EnvironmentUp.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNTo1MjowN1rOFnBlcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwODowODowMVrOFnPr3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ2NDc1Mw==", "bodyText": "you didn't save much. Saving the flag would require less typing and nobody would ask for a comment ;)", "url": "https://github.com/trinodb/trino/pull/2747#discussion_r376464753", "createdAt": "2020-02-07T15:52:07Z", "author": {"login": "kokosing"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/EnvironmentUp.java", "diffHunk": "@@ -96,13 +116,38 @@ public void run()\n             environment.start();\n             log.info(\"Environment '%s' started\", selectedEnvironmentProvider.getEnvironmentName());\n \n+            if (background) {\n+                killContainersReaperContainer();\n+                return;\n+            }\n+\n+            sleepUntilInterrupted();\n+            log.info(\"Exiting, the containers will exit too\");\n+        }\n+\n+        private void killContainersReaperContainer()\n+        {\n             try (DockerClient dockerClient = DockerClientFactory.lazyClient()) {\n                 log.info(\"Killing the testcontainers reaper container (Ryuk) so that environment can stay alive\");\n-                killContainersReaperContainer(dockerClient);\n+                TestcontainersUtil.killContainersReaperContainer(dockerClient);\n             }\n             catch (IOException e) {\n                 throw new UncheckedIOException(e);\n             }\n         }\n+\n+        private void sleepUntilInterrupted()\n+        {\n+            try {\n+                //noinspection InfiniteLoopStatement\n+                while (true) {\n+                    Thread.sleep(Long.MAX_VALUE);\n+                }\n+            }\n+            catch (InterruptedException e) {\n+                log.info(\"Interrupted\");\n+                // It's OK not to restore interrupt flag here. When we return we're exiting the process.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY5NTc3NA==", "bodyText": "Right. But this wouldn't be really correct. We're responding to interrupt and no-one higher up the stack is going to respond.\nSo it would still require a comment :)", "url": "https://github.com/trinodb/trino/pull/2747#discussion_r376695774", "createdAt": "2020-02-08T08:08:01Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/EnvironmentUp.java", "diffHunk": "@@ -96,13 +116,38 @@ public void run()\n             environment.start();\n             log.info(\"Environment '%s' started\", selectedEnvironmentProvider.getEnvironmentName());\n \n+            if (background) {\n+                killContainersReaperContainer();\n+                return;\n+            }\n+\n+            sleepUntilInterrupted();\n+            log.info(\"Exiting, the containers will exit too\");\n+        }\n+\n+        private void killContainersReaperContainer()\n+        {\n             try (DockerClient dockerClient = DockerClientFactory.lazyClient()) {\n                 log.info(\"Killing the testcontainers reaper container (Ryuk) so that environment can stay alive\");\n-                killContainersReaperContainer(dockerClient);\n+                TestcontainersUtil.killContainersReaperContainer(dockerClient);\n             }\n             catch (IOException e) {\n                 throw new UncheckedIOException(e);\n             }\n         }\n+\n+        private void sleepUntilInterrupted()\n+        {\n+            try {\n+                //noinspection InfiniteLoopStatement\n+                while (true) {\n+                    Thread.sleep(Long.MAX_VALUE);\n+                }\n+            }\n+            catch (InterruptedException e) {\n+                log.info(\"Interrupted\");\n+                // It's OK not to restore interrupt flag here. When we return we're exiting the process.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ2NDc1Mw=="}, "originalCommit": null, "originalPosition": 108}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 872, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}