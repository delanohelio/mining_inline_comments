{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MjgyNDU0", "number": 2408, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwOTozMTo0MFrODWMbRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMjowMzoxOFrODWrqzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NTk4ODU1OnYy", "diffSide": "RIGHT", "path": "presto-session-property-managers/src/test/java/io/prestosql/plugin/session/db/TestDbSessionPropertyManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwOTozMTo0MFrOFa0EyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMDowNjoyOVrOFbibAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY2MDQ4OA==", "bodyText": "Having TestingMySqlServer helps to:\n\nwrap using external dependency (in case we would like to switch from testcontainers to something else)\nmanages which version of mysql is used\nit helps to gather common code in single place (like execute(sql) method)", "url": "https://github.com/trinodb/trino/pull/2408#discussion_r363660488", "createdAt": "2020-01-07T09:31:40Z", "author": {"login": "kokosing"}, "path": "presto-session-property-managers/src/test/java/io/prestosql/plugin/session/db/TestDbSessionPropertyManager.java", "diffHunk": "@@ -42,21 +42,20 @@\n     private DbSessionPropertyManager manager;\n     private RefreshingDbSpecsProvider specsProvider;\n \n-    private TestingMySqlServer testingMySqlServer;\n-    private static final String MYSQL_TEST_USER = \"testuser\";\n-    private static final String MYSQL_TEST_PASSWORD = \"testpassword\";\n-    private static final String MYSQL_TEST_DATABASE = \"test_database\";\n+    private MySQLContainer<?> mysqlContainer;\n \n     private static final ResourceGroupId TEST_RG = new ResourceGroupId(\"rg1\");\n \n     @BeforeClass\n     public void setup()\n-            throws Exception\n     {\n-        testingMySqlServer = new TestingMySqlServer(MYSQL_TEST_USER, MYSQL_TEST_PASSWORD, MYSQL_TEST_DATABASE);\n+        mysqlContainer = new MySQLContainer<>(\"mysql:8.0.12\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQxOTg0Mg==", "bodyText": "You convinced me with the \"managed version\" argument", "url": "https://github.com/trinodb/trino/pull/2408#discussion_r364419842", "createdAt": "2020-01-08T20:06:29Z", "author": {"login": "electrum"}, "path": "presto-session-property-managers/src/test/java/io/prestosql/plugin/session/db/TestDbSessionPropertyManager.java", "diffHunk": "@@ -42,21 +42,20 @@\n     private DbSessionPropertyManager manager;\n     private RefreshingDbSpecsProvider specsProvider;\n \n-    private TestingMySqlServer testingMySqlServer;\n-    private static final String MYSQL_TEST_USER = \"testuser\";\n-    private static final String MYSQL_TEST_PASSWORD = \"testpassword\";\n-    private static final String MYSQL_TEST_DATABASE = \"test_database\";\n+    private MySQLContainer<?> mysqlContainer;\n \n     private static final ResourceGroupId TEST_RG = new ResourceGroupId(\"rg1\");\n \n     @BeforeClass\n     public void setup()\n-            throws Exception\n     {\n-        testingMySqlServer = new TestingMySqlServer(MYSQL_TEST_USER, MYSQL_TEST_PASSWORD, MYSQL_TEST_DATABASE);\n+        mysqlContainer = new MySQLContainer<>(\"mysql:8.0.12\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY2MDQ4OA=="}, "originalCommit": null, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MTEwNjUwOnYy", "diffSide": "RIGHT", "path": "presto-session-property-managers/src/test/java/io/prestosql/plugin/session/db/TestingMySqlContainer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMjowMzoxMFrOFblNfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzo0Mzo1NlrOFbqPXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ2NTUzNA==", "bodyText": "could you use constructUrlForConnection?", "url": "https://github.com/trinodb/trino/pull/2408#discussion_r364465534", "createdAt": "2020-01-08T22:03:10Z", "author": {"login": "findepi"}, "path": "presto-session-property-managers/src/test/java/io/prestosql/plugin/session/db/TestingMySqlContainer.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.session.db;\n+\n+import org.testcontainers.containers.MySQLContainer;\n+\n+public class TestingMySqlContainer\n+        extends MySQLContainer<TestingMySqlContainer>\n+{\n+    public TestingMySqlContainer()\n+    {\n+        super(\"mysql:8.0.12\");\n+    }\n+\n+    @Override\n+    public String getJdbcUrl()\n+    {\n+        return super.getJdbcUrl() + \"?useSSL=false&allowPublicKeyRetrieval=true\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c54714e00b78a0fd3bf5108e33c26b37666a3f65"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU0NzkzNQ==", "bodyText": "Good point, this is possible now since it\u2019s a subclass.", "url": "https://github.com/trinodb/trino/pull/2408#discussion_r364547935", "createdAt": "2020-01-09T03:43:56Z", "author": {"login": "electrum"}, "path": "presto-session-property-managers/src/test/java/io/prestosql/plugin/session/db/TestingMySqlContainer.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.session.db;\n+\n+import org.testcontainers.containers.MySQLContainer;\n+\n+public class TestingMySqlContainer\n+        extends MySQLContainer<TestingMySqlContainer>\n+{\n+    public TestingMySqlContainer()\n+    {\n+        super(\"mysql:8.0.12\");\n+    }\n+\n+    @Override\n+    public String getJdbcUrl()\n+    {\n+        return super.getJdbcUrl() + \"?useSSL=false&allowPublicKeyRetrieval=true\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ2NTUzNA=="}, "originalCommit": {"oid": "c54714e00b78a0fd3bf5108e33c26b37666a3f65"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MTEwNzMzOnYy", "diffSide": "RIGHT", "path": "presto-session-property-managers/src/test/java/io/prestosql/plugin/session/db/TestingMySqlContainer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMjowMzoxOFrOFblN4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzo0MTowNlrOFbqNhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ2NTYzNQ==", "bodyText": "was this meant to be extemded?", "url": "https://github.com/trinodb/trino/pull/2408#discussion_r364465635", "createdAt": "2020-01-08T22:03:18Z", "author": {"login": "findepi"}, "path": "presto-session-property-managers/src/test/java/io/prestosql/plugin/session/db/TestingMySqlContainer.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.session.db;\n+\n+import org.testcontainers.containers.MySQLContainer;\n+\n+public class TestingMySqlContainer\n+        extends MySQLContainer<TestingMySqlContainer>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c54714e00b78a0fd3bf5108e33c26b37666a3f65"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU0NzQ2MA==", "bodyText": "Yes, it seems simpler this way.", "url": "https://github.com/trinodb/trino/pull/2408#discussion_r364547460", "createdAt": "2020-01-09T03:41:06Z", "author": {"login": "electrum"}, "path": "presto-session-property-managers/src/test/java/io/prestosql/plugin/session/db/TestingMySqlContainer.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.session.db;\n+\n+import org.testcontainers.containers.MySQLContainer;\n+\n+public class TestingMySqlContainer\n+        extends MySQLContainer<TestingMySqlContainer>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ2NTYzNQ=="}, "originalCommit": {"oid": "c54714e00b78a0fd3bf5108e33c26b37666a3f65"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1091, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}