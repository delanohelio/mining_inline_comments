{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwOTE1NTM0", "number": 5260, "title": "Clamp BackgroundHiveSplitLoader concurrency to usable parallelism", "bodyText": "Avoids allocation a greater level of concurrency to split loading than can actually be used based on the number of partititions being loaded. The effective usable concurrency in split loading can be significantly lower than the configured split loader concurrency value when the number of partitions scanned is small, since split loading is single threaded within each partition anyway. This makes it feasible to configure a much higher concurrency value than before without overcommitting threads to loading tasks unnecessarily.", "createdAt": "2020-09-22T12:47:42Z", "url": "https://github.com/trinodb/trino/pull/5260", "merged": true, "mergeCommit": {"oid": "4b3405f5b4cf7f849395b71e8f94cb81407a7f0e"}, "closed": true, "closedAt": "2020-09-29T08:48:45Z", "author": {"login": "pettyjamesm"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLXqS6gFqTQ5MzQzNDcxNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNWyEXgBqjM4MTU2MDk4NTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNDM0NzE0", "url": "https://github.com/trinodb/trino/pull/5260#pullrequestreview-493434714", "createdAt": "2020-09-22T13:03:22Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMzowMzoyMlrOHV48Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMzowMzoyMlrOHV48Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcxNTA5OA==", "bodyText": "What if there are no partitions? Why +1?", "url": "https://github.com/trinodb/trino/pull/5260#discussion_r492715098", "createdAt": "2020-09-22T13:03:22Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSplitManager.java", "diffHunk": "@@ -229,7 +229,7 @@ public ConnectorSplitSource getSplits(\n                 namenodeStats,\n                 directoryLister,\n                 executor,\n-                splitLoaderConcurrency,\n+                min(splitLoaderConcurrency, partitions.size() + 1), // Avoid over-committing split loader concurrency", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2MjM3Mjk1", "url": "https://github.com/trinodb/trino/pull/5260#pullrequestreview-496237295", "createdAt": "2020-09-25T08:59:06Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NzE2MTc1", "url": "https://github.com/trinodb/trino/pull/5260#pullrequestreview-497716175", "createdAt": "2020-09-28T16:48:31Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjo0ODozMVrOHZHHGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjo0ODozMVrOHZHHGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5Mjk1NA==", "bodyText": "You could static import isTransactionalTable", "url": "https://github.com/trinodb/trino/pull/5260#discussion_r496092954", "createdAt": "2020-09-28T16:48:31Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSplitManager.java", "diffHunk": "@@ -216,6 +217,8 @@ public ConnectorSplitSource getSplits(\n \n         Iterable<HivePartitionMetadata> hivePartitions = getPartitionMetadata(session, metastore, table, tableName, partitions, bucketHandle.map(HiveBucketHandle::toTableBucketProperty));\n \n+        // Only one thread per partition is usable when a table is not transactional\n+        int concurrency = AcidUtils.isTransactionalTable(table.getParameters()) ? splitLoaderConcurrency : min(splitLoaderConcurrency, partitions.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c8686a2f7c816873d8d3c5d5f6b4504db7a968f", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/trinodb/trino/commit/4c8686a2f7c816873d8d3c5d5f6b4504db7a968f", "committedDate": "2020-09-28T17:10:41Z", "message": "Clamp BackgroundHiveSplitLoader concurrency to usable parallelism\n\nAvoids allocation a greater level of concurrency to split loading\nthan can actually be used based on the number of partititions being\nloaded. The effective usable concurrency in split loading can be\nsignificantly lower than the configured split loader concurrency\nvalue when the number of partitions scanned is small and the table\nis not configured to be transactional. In that mode, split loading\nis single threaded within each partition.\n\nThis change makes it feasible to configure a much higher concurrency\nvalue than before without overcommitting threads to loading tasks\nthat don't provide any actual additional parallelism."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "4c8686a2f7c816873d8d3c5d5f6b4504db7a968f", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/trinodb/trino/commit/4c8686a2f7c816873d8d3c5d5f6b4504db7a968f", "committedDate": "2020-09-28T17:10:41Z", "message": "Clamp BackgroundHiveSplitLoader concurrency to usable parallelism\n\nAvoids allocation a greater level of concurrency to split loading\nthan can actually be used based on the number of partititions being\nloaded. The effective usable concurrency in split loading can be\nsignificantly lower than the configured split loader concurrency\nvalue when the number of partitions scanned is small and the table\nis not configured to be transactional. In that mode, split loading\nis single threaded within each partition.\n\nThis change makes it feasible to configure a much higher concurrency\nvalue than before without overcommitting threads to loading tasks\nthat don't provide any actual additional parallelism."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3725, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}