{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMDYwMjc0", "number": 3614, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOToyNzoxMFrOD7yzCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOTo1MjoxNFrOD7zUWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDI0ODQxOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/sql/planner/plan/RowNumberNode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOToyNzoxMFrOGUVpjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOToyNzoxMFrOGUVpjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3OTQwNA==", "bodyText": "Make commit message more explicit: \"Verify arguments to RowNumberNode constructor\"", "url": "https://github.com/trinodb/trino/pull/3614#discussion_r423979404", "createdAt": "2020-05-12T19:27:10Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/plan/RowNumberNode.java", "diffHunk": "@@ -63,6 +63,7 @@ public RowNumberNode(\n         checkArgument(!orderSensitive || partitionBy.isEmpty(), \"unexpected partitioning in order sensitive node\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDMzMzcwOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/sql/planner/optimizations/WindowFilterPushDown.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOTo1MjoxNFrOGUWg1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDo1NjoyMVrOGUsOLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk5MzU1Nw==", "bodyText": "I'm not sure I understand why this line changed. Can you explain?", "url": "https://github.com/trinodb/trino/pull/3614#discussion_r423993557", "createdAt": "2020-05-12T19:52:14Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/optimizations/WindowFilterPushDown.java", "diffHunk": "@@ -169,8 +171,11 @@ public PlanNode visitFilter(FilterNode node, RewriteContext<Void> context)\n                 OptionalInt upperBound = extractUpperBound(tupleDomain, rowNumberSymbol);\n \n                 if (upperBound.isPresent()) {\n+                    if (upperBound.getAsInt() <= 0) {\n+                        return new ValuesNode(node.getId(), node.getOutputSymbols(), ImmutableList.of());\n+                    }\n                     source = mergeLimit(((RowNumberNode) source), upperBound.getAsInt());\n-                    return rewriteFilterSource(node, source, rowNumberSymbol, upperBound.getAsInt());\n+                    return rewriteFilterSource(node, source, rowNumberSymbol, ((RowNumberNode) source).getMaxRowCountPerPartition().get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM0OTIzMQ==", "bodyText": "After mergeLimit(), the source's maxRowCountPerPartition is either equal to upperBound or lower (the latter happens in the case when the source was already limited with a lower limit).\nSo, I decided to pass to rewriteFilterSource() the actual limit value of the source, which may be lower than upperBound. Consequently, the possibly lower bound value is tested against the original filter predicate, which improves the chance that we consider the predicate satisfied.\nExample:\n- Filter (row_num < 5 AND row_num BETWEEN 20 AND 30)\n    - RowNumberNode (maxRowCountPerPartition == 3)\n\n\nwe get upperBound = 30, and then call mergeLimit(30) on RowNumberNode, which is ineffective, as the current limit is lower (3).\nNext, we call allRowNumberValuesInDomain() to check if the established range for row_num symbol lies within the domain defined by Filter predicate.\nI we pass 30, as before the change, we get false.\nIf we pass the actual value 3, we get true and can consider the predicate satisfied, and the Filter redundant.", "url": "https://github.com/trinodb/trino/pull/3614#discussion_r424349231", "createdAt": "2020-05-13T10:56:21Z", "author": {"login": "kasiafi"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/optimizations/WindowFilterPushDown.java", "diffHunk": "@@ -169,8 +171,11 @@ public PlanNode visitFilter(FilterNode node, RewriteContext<Void> context)\n                 OptionalInt upperBound = extractUpperBound(tupleDomain, rowNumberSymbol);\n \n                 if (upperBound.isPresent()) {\n+                    if (upperBound.getAsInt() <= 0) {\n+                        return new ValuesNode(node.getId(), node.getOutputSymbols(), ImmutableList.of());\n+                    }\n                     source = mergeLimit(((RowNumberNode) source), upperBound.getAsInt());\n-                    return rewriteFilterSource(node, source, rowNumberSymbol, upperBound.getAsInt());\n+                    return rewriteFilterSource(node, source, rowNumberSymbol, ((RowNumberNode) source).getMaxRowCountPerPartition().get());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk5MzU1Nw=="}, "originalCommit": null, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 14, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}