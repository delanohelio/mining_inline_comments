{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NTc4ODMz", "number": 3516, "title": "Cleanups in Planner", "bodyText": "", "createdAt": "2020-04-22T22:24:20Z", "url": "https://github.com/trinodb/trino/pull/3516", "merged": true, "mergeCommit": {"oid": "b6e09693e2e0b23f28420b1abbd7646e6d3362f5"}, "closed": true, "closedAt": "2020-04-24T01:51:54Z", "author": {"login": "kasiafi"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaOkWIgH2gAyNDA3NTc4ODMzOjQ4ZTljNjU2NGJlYmY0NDk1NjA5NjkwNzg2OWQwNDFiYzdhOTk4Zjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaZ64LgBqjMyNjQzMjUzOTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "48e9c6564bebf44956096907869d041bc7a998f9", "author": {"user": {"login": "kasiafi", "name": null}}, "url": "https://github.com/trinodb/trino/commit/48e9c6564bebf44956096907869d041bc7a998f9", "committedDate": "2020-04-22T20:46:29Z", "message": "Simplify initialization of TranslationMap"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NjU2MDIy", "url": "https://github.com/trinodb/trino/pull/3516#pullrequestreview-398656022", "createdAt": "2020-04-22T23:19:24Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMzoxOToyNVrOGKPxVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMzoxOToyNVrOGKPxVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM5NzMzNQ==", "bodyText": "Move this to a test under io.prestosql.sql.query", "url": "https://github.com/trinodb/trino/pull/3516#discussion_r413397335", "createdAt": "2020-04-22T23:19:25Z", "author": {"login": "martint"}, "path": "presto-tests/src/test/java/io/prestosql/tests/AbstractTestEngineOnlyQueries.java", "diffHunk": "@@ -2767,6 +2767,14 @@ public void testMultipleOccurrencesOfCorrelatedSymbol()\n                 expected);\n     }\n \n+    @Test\n+    public void testJoinInCorrelatedJoinInput()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ac38987274841a4d16dabe27034496e201ac62f", "author": {"user": {"login": "kasiafi", "name": null}}, "url": "https://github.com/trinodb/trino/commit/2ac38987274841a4d16dabe27034496e201ac62f", "committedDate": "2020-04-23T09:59:23Z", "message": "Fix CorrelatedJoin planning\n\nBefore this change, planning of the following query failed:\nSELECT * FROM (VALUES 1) t1(a) JOIN (VALUES 2) t2(b) ON a<b, LATERAL (VALUES 3)\n\nThe first Join was planned to output 4 symbols. Two of them referred to\nValues columns: a and b. Other two were a result of preprojecting symbols\nfor join condition.\nThe scope associated with that Join had only two fields.\n\nDuring the planning of the second Join, which is a cross-join with lateral relation,\nall four output symbols of the first Join were used to define field mappings\nof the resulting relation instead of just the two symbols referring to the scope.\nThis caused planning to fail, because Correlated Join's scope had less fields\nthan field mappings.\n\nIt was fixed by changing the method planCorrelatedJoin() to create\nresulting RelationPlan based on sources' output descriptors, not their\noutput symbols."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "2ac38987274841a4d16dabe27034496e201ac62f", "author": {"user": {"login": "kasiafi", "name": null}}, "url": "https://github.com/trinodb/trino/commit/2ac38987274841a4d16dabe27034496e201ac62f", "committedDate": "2020-04-23T09:59:23Z", "message": "Fix CorrelatedJoin planning\n\nBefore this change, planning of the following query failed:\nSELECT * FROM (VALUES 1) t1(a) JOIN (VALUES 2) t2(b) ON a<b, LATERAL (VALUES 3)\n\nThe first Join was planned to output 4 symbols. Two of them referred to\nValues columns: a and b. Other two were a result of preprojecting symbols\nfor join condition.\nThe scope associated with that Join had only two fields.\n\nDuring the planning of the second Join, which is a cross-join with lateral relation,\nall four output symbols of the first Join were used to define field mappings\nof the resulting relation instead of just the two symbols referring to the scope.\nThis caused planning to fail, because Correlated Join's scope had less fields\nthan field mappings.\n\nIt was fixed by changing the method planCorrelatedJoin() to create\nresulting RelationPlan based on sources' output descriptors, not their\noutput symbols."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1619, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}