{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4OTUyNzQy", "number": 5440, "title": "Remove fallback to interpreter for JoinCompiler", "bodyText": "", "createdAt": "2020-10-07T03:27:14Z", "url": "https://github.com/trinodb/trino/pull/5440", "merged": true, "mergeCommit": {"oid": "1232d3945dd8470ba7b2cc5f7e905bb750c56d09"}, "closed": true, "closedAt": "2020-10-07T05:48:17Z", "author": {"login": "dain"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQEX9kgH2gAyNDk4OTUyNzQyOmE3ZTkxZjNiNjk3NGYzMmFlOGRhZjc1MDIxMWU0ODM2MTYzZDcxMTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQIbukgFqTUwMzYyNDkyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a7e91f3b6974f32ae8daf750211e4836163d7117", "author": {"user": {"login": "dain", "name": "Dain Sundstrom"}}, "url": "https://github.com/trinodb/trino/commit/a7e91f3b6974f32ae8daf750211e4836163d7117", "committedDate": "2020-10-07T03:25:49Z", "message": "Remove fallback to interpreter for JoinCompiler"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNTEwNDQy", "url": "https://github.com/trinodb/trino/pull/5440#pullrequestreview-503510442", "createdAt": "2020-10-07T04:07:01Z", "commit": {"oid": "a7e91f3b6974f32ae8daf750211e4836163d7117"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNjI0OTI1", "url": "https://github.com/trinodb/trino/pull/5440#pullrequestreview-503624925", "createdAt": "2020-10-07T08:09:02Z", "commit": {"oid": "a7e91f3b6974f32ae8daf750211e4836163d7117"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwODowOTowMlrOHdng2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwODowOTozMFrOHdniCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgxODEzNg==", "bodyText": "update this too", "url": "https://github.com/trinodb/trino/pull/5440#discussion_r500818136", "createdAt": "2020-10-07T08:09:02Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/operator/PagesIndex.java", "diffHunk": "@@ -493,20 +493,15 @@ public LookupSourceSupplier createLookupSourceSupplier(\n             // This code path will trigger only for OUTER joins. To fix that we need to add support for\n             //        OUTER joins into NestedLoopsJoin and remove \"type == INNER\" condition in LocalExecutionPlanner.visitJoin()\n \n-            try {\n-                LookupSourceSupplierFactory lookupSourceFactory = joinCompiler.compileLookupSourceFactory(types, joinChannels, sortChannel, outputChannels);\n-                return lookupSourceFactory.createLookupSourceSupplier(\n-                        session,\n-                        valueAddresses,\n-                        channels,\n-                        hashChannel,\n-                        filterFunctionFactory,\n-                        sortChannel,\n-                        searchFunctionFactories);\n-            }\n-            catch (Exception e) {\n-                log.error(e, \"Lookup source compile failed for types=%s error=%s\", types, e);\n-            }\n+            LookupSourceSupplierFactory lookupSourceFactory = joinCompiler.compileLookupSourceFactory(types, joinChannels, sortChannel, outputChannels);\n+            return lookupSourceFactory.createLookupSourceSupplier(\n+                    session,\n+                    valueAddresses,\n+                    channels,\n+                    hashChannel,\n+                    filterFunctionFactory,\n+                    sortChannel,\n+                    searchFunctionFactories);\n         }\n \n         // if compilation fails", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7e91f3b6974f32ae8daf750211e4836163d7117"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgxODQ0Mg==", "bodyText": "same in io.prestosql.operator.PagesIndex#createPagesHashStrategy(java.util.List<java.lang.Integer>, java.util.OptionalInt, java.util.Optional<java.util.List<java.lang.Integer>>)\nhttps://github.com/prestosql/presto/blob/e7199dba8e2551cd6d70cae891c8e2e14200a678/presto-main/src/main/java/io/prestosql/operator/PagesIndex.java#L436-L442\n?", "url": "https://github.com/trinodb/trino/pull/5440#discussion_r500818442", "createdAt": "2020-10-07T08:09:30Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/operator/PagesIndex.java", "diffHunk": "@@ -493,20 +493,15 @@ public LookupSourceSupplier createLookupSourceSupplier(\n             // This code path will trigger only for OUTER joins. To fix that we need to add support for\n             //        OUTER joins into NestedLoopsJoin and remove \"type == INNER\" condition in LocalExecutionPlanner.visitJoin()\n \n-            try {\n-                LookupSourceSupplierFactory lookupSourceFactory = joinCompiler.compileLookupSourceFactory(types, joinChannels, sortChannel, outputChannels);\n-                return lookupSourceFactory.createLookupSourceSupplier(\n-                        session,\n-                        valueAddresses,\n-                        channels,\n-                        hashChannel,\n-                        filterFunctionFactory,\n-                        sortChannel,\n-                        searchFunctionFactories);\n-            }\n-            catch (Exception e) {\n-                log.error(e, \"Lookup source compile failed for types=%s error=%s\", types, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7e91f3b6974f32ae8daf750211e4836163d7117"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3297, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}