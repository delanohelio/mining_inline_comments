{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMDU1Mzk2", "number": 6340, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODozOToxMVrOFFdvag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODo1MTozMlrOFGE4LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjc0NDc0OnYy", "diffSide": "RIGHT", "path": "presto-kafka/src/main/java/io/prestosql/plugin/kafka/encoder/AbstractRowEncoder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODozOToxMVrOIF_Hnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODozOToxMVrOIF_Hnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE0NzkzNQ==", "bodyText": "This error message could be extracted to separate commit.", "url": "https://github.com/trinodb/trino/pull/6340#discussion_r543147935", "createdAt": "2020-12-15T08:39:11Z", "author": {"login": "kokosing"}, "path": "presto-kafka/src/main/java/io/prestosql/plugin/kafka/encoder/AbstractRowEncoder.java", "diffHunk": "@@ -118,8 +122,17 @@ else if (type instanceof TimestampType) {\n         else if (type instanceof TimestampWithTimeZoneType) {\n             appendSqlTimestampWithTimeZone((SqlTimestampWithTimeZone) type.getObjectValue(session, block, position));\n         }\n+        else if (type instanceof ArrayType) {\n+            appendArray((List<Object>) type.getObjectValue(session, block, position));\n+        }\n+        else if (type instanceof MapType) {\n+            appendMap((Map<Object, Object>) type.getObjectValue(session, block, position));\n+        }\n+        else if (type instanceof RowType) {\n+            appendRow((List<Object>) type.getObjectValue(session, block, position));\n+        }\n         else {\n-            throw new UnsupportedOperationException(format(\"Column '%s' does not support 'null' value\", columnHandles.get(currentColumnIndex).getName()));\n+            throw new UnsupportedOperationException(format(\"Unsupported type '%s' for column '%s'\", type, columnHandles.get(currentColumnIndex).getName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjc1MjA3OnYy", "diffSide": "RIGHT", "path": "presto-kafka/src/main/java/io/prestosql/plugin/kafka/encoder/AbstractRowEncoder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODo0MDo0N1rOIF_L3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNjowNzo0OFrOIGzicA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE0OTAyMQ==", "bodyText": "Commit message is a bit misleading. You didn't add support for structural types, but you allowed to implementations of AbstractRowEncoder to support them.\n[optional] It would be nice use it, how about insert of structural types in Avro for Kafka?", "url": "https://github.com/trinodb/trino/pull/6340#discussion_r543149021", "createdAt": "2020-12-15T08:40:47Z", "author": {"login": "kokosing"}, "path": "presto-kafka/src/main/java/io/prestosql/plugin/kafka/encoder/AbstractRowEncoder.java", "diffHunk": "@@ -18,6 +18,9 @@\n import com.google.common.primitives.SignedBytes;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDAwNjc2OA==", "bodyText": "[optional] It would be nice use it, how about insert of structural types in Avro for Kafka?\n\nWill be raising a follow up PR for implementation in Avro and JSON", "url": "https://github.com/trinodb/trino/pull/6340#discussion_r544006768", "createdAt": "2020-12-16T06:07:48Z", "author": {"login": "Praveen2112"}, "path": "presto-kafka/src/main/java/io/prestosql/plugin/kafka/encoder/AbstractRowEncoder.java", "diffHunk": "@@ -18,6 +18,9 @@\n import com.google.common.primitives.SignedBytes;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE0OTAyMQ=="}, "originalCommit": null, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxOTE1NjkzOnYy", "diffSide": "RIGHT", "path": "presto-kafka/src/main/java/io/prestosql/plugin/kafka/encoder/AbstractRowEncoder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODo1MTozMlrOIG6UXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODo1MTozMlrOIG6UXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExNzg1NQ==", "bodyText": "you could extract a method in separate PR, as this would change the entire convention in this clas", "url": "https://github.com/trinodb/trino/pull/6340#discussion_r544117855", "createdAt": "2020-12-16T08:51:32Z", "author": {"login": "kokosing"}, "path": "presto-kafka/src/main/java/io/prestosql/plugin/kafka/encoder/AbstractRowEncoder.java", "diffHunk": "@@ -201,6 +214,21 @@ protected void appendSqlTimestampWithTimeZone(SqlTimestampWithTimeZone value)\n         throw new UnsupportedOperationException(format(\"Unsupported type '%s' for column '%s'\", value.getClass().getName(), columnHandles.get(currentColumnIndex).getName()));\n     }\n \n+    protected void appendArray(List<Object> value)\n+    {\n+        throw new UnsupportedOperationException(format(\"Unsupported type '%s' for column '%s'\", value.getClass().getName(), columnHandles.get(currentColumnIndex).getName()));\n+    }\n+\n+    protected void appendMap(Map<Object, Object> value)\n+    {\n+        throw new UnsupportedOperationException(format(\"Unsupported type '%s' for column '%s'\", value.getClass().getName(), columnHandles.get(currentColumnIndex).getName()));\n+    }\n+\n+    protected void appendRow(List<Object> value)\n+    {\n+        throw new UnsupportedOperationException(format(\"Unsupported type '%s' for column '%s'\", value.getClass().getName(), columnHandles.get(currentColumnIndex).getName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73e5750f768d52a0189de6d803f089d8535c2d29"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4346, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}