{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MTU3ODMx", "number": 6144, "title": "Supplement type mappings in JDBC connectors", "bodyText": "Extracted from #4940", "createdAt": "2020-11-29T19:19:33Z", "url": "https://github.com/trinodb/trino/pull/6144", "merged": true, "mergeCommit": {"oid": "a91537a0c2e0fc764bace1ac9931a8ad28ff8297"}, "closed": true, "closedAt": "2020-12-01T10:47:05Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhX5figBqjQwNDk0NjU5NDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdh24PDAFqTU0MTcyODc2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1dc1418cffed2cc083fd5618f527111fdab135d", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/c1dc1418cffed2cc083fd5618f527111fdab135d", "committedDate": "2020-11-29T21:48:19Z", "message": "Replace IFs with a SWITCH"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjA5NjQy", "url": "https://github.com/trinodb/trino/pull/6144#pullrequestreview-541209642", "createdAt": "2020-11-30T19:08:27Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTowODoyOFrOH8JjHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTowODoyOFrOH8JjHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgzMzA1NA==", "bodyText": "issue?", "url": "https://github.com/trinodb/trino/pull/6144#discussion_r532833054", "createdAt": "2020-11-30T19:08:28Z", "author": {"login": "losipiuk"}, "path": "presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixClient.java", "diffHunk": "@@ -274,15 +309,56 @@ protected String getTableSchemaName(ResultSet resultSet)\n     @Override\n     public Optional<ColumnMapping> toPrestoType(ConnectorSession session, Connection connection, JdbcTypeHandle typeHandle)\n     {\n+        int columnSize = typeHandle.getColumnSize();\n         switch (typeHandle.getJdbcType()) {\n+            case Types.BOOLEAN:\n+                return Optional.of(booleanColumnMapping());\n+\n+            case Types.TINYINT:\n+                return Optional.of(tinyintColumnMapping());\n+\n+            case Types.SMALLINT:\n+                return Optional.of(smallintColumnMapping());\n+\n+            case Types.INTEGER:\n+                return Optional.of(integerColumnMapping());\n+\n+            case Types.BIGINT:\n+                return Optional.of(bigintColumnMapping());\n+\n+            case Types.FLOAT:\n+                return Optional.of(realColumnMapping());\n+\n+            case Types.DOUBLE:\n+                return Optional.of(doubleColumnMapping());\n+\n+            case Types.DECIMAL:\n+                int decimalDigits = typeHandle.getDecimalDigits().orElseThrow(() -> new IllegalStateException(\"decimal digits not present\"));\n+                // TODO does phoenix support negative scale?", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 102}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjA5NzQx", "url": "https://github.com/trinodb/trino/pull/6144#pullrequestreview-541209741", "createdAt": "2020-11-30T19:08:36Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTowODozNlrOH8JjYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTowODozNlrOH8JjYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgzMzEyMA==", "bodyText": "issue?", "url": "https://github.com/trinodb/trino/pull/6144#discussion_r532833120", "createdAt": "2020-11-30T19:08:36Z", "author": {"login": "losipiuk"}, "path": "presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixClient.java", "diffHunk": "@@ -314,12 +389,60 @@ protected String getTableSchemaName(ResultSet resultSet)\n     @Override\n     public WriteMapping toWriteMapping(ConnectorSession session, Type type)\n     {\n-        if (DOUBLE.equals(type)) {\n-            return WriteMapping.doubleMapping(\"double\", doubleWriteFunction());\n+        if (type == BOOLEAN) {\n+            return WriteMapping.booleanMapping(\"boolean\", booleanWriteFunction());\n         }\n-        if (REAL.equals(type)) {\n+\n+        if (type == TINYINT) {\n+            return WriteMapping.longMapping(\"tinyint\", tinyintWriteFunction());\n+        }\n+        if (type == SMALLINT) {\n+            return WriteMapping.longMapping(\"smallint\", smallintWriteFunction());\n+        }\n+        if (type == INTEGER) {\n+            return WriteMapping.longMapping(\"integer\", integerWriteFunction());\n+        }\n+        if (type == BIGINT) {\n+            return WriteMapping.longMapping(\"bigint\", bigintWriteFunction());\n+        }\n+        if (type == REAL) {\n             return WriteMapping.longMapping(\"float\", realWriteFunction());\n         }\n+        if (type == DOUBLE) {\n+            return WriteMapping.doubleMapping(\"double\", doubleWriteFunction());\n+        }\n+\n+        if (type instanceof DecimalType) {\n+            DecimalType decimalType = (DecimalType) type;\n+            String dataType = format(\"decimal(%s, %s)\", decimalType.getPrecision(), decimalType.getScale());\n+            if (decimalType.isShort()) {\n+                return WriteMapping.longMapping(dataType, shortDecimalWriteFunction(decimalType));\n+            }\n+            return WriteMapping.sliceMapping(dataType, longDecimalWriteFunction(decimalType));\n+        }\n+\n+        if (type instanceof CharType) {\n+            return WriteMapping.sliceMapping(\"char(\" + ((CharType) type).getLength() + \")\", charWriteFunction());\n+        }\n+        if (type instanceof VarcharType) {\n+            VarcharType varcharType = (VarcharType) type;\n+            String dataType;\n+            if (varcharType.isUnbounded()) {\n+                // TODO does Phoenix support unparameterized varchar?", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 188}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjExNjgy", "url": "https://github.com/trinodb/trino/pull/6144#pullrequestreview-541211682", "createdAt": "2020-11-30T19:11:14Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da4a71793e08b9039f0a34f8ea9a63073527f3cb", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/da4a71793e08b9039f0a34f8ea9a63073527f3cb", "committedDate": "2020-11-30T21:11:40Z", "message": "Supplement type mappings in JDBC connectors"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "da4a71793e08b9039f0a34f8ea9a63073527f3cb", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/da4a71793e08b9039f0a34f8ea9a63073527f3cb", "committedDate": "2020-11-30T21:11:40Z", "message": "Supplement type mappings in JDBC connectors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNzI4NzY2", "url": "https://github.com/trinodb/trino/pull/6144#pullrequestreview-541728766", "createdAt": "2020-12-01T09:53:02Z", "commit": {"oid": "da4a71793e08b9039f0a34f8ea9a63073527f3cb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2434, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}