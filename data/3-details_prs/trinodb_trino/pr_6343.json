{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMTIwMDkz", "number": 6343, "title": "Reconstruct NOT IN when pushing down to JDBC source", "bodyText": "Fixes #6075", "createdAt": "2020-12-15T09:51:43Z", "url": "https://github.com/trinodb/trino/pull/6343", "merged": true, "mergeCommit": {"oid": "6ad3369bff4fe6b17acc4cc1bf6d42c1d2c099f9"}, "closed": true, "closedAt": "2020-12-15T12:39:51Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmWvSPgH2gAyNTQwMTIwMDkzOjUyOGY1NzQ5NzhmY2FhNTY3NjYyN2I3NDdiOTEzMDk5ZmZhYjcxYWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmZcu1AFqTU1MjM5MzI5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "528f574978fcaa5676627b747b913099ffab71ad", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/528f574978fcaa5676627b747b913099ffab71ad", "committedDate": "2020-12-15T09:15:55Z", "message": "Assert actual queries in TestJdbcQueryBuilder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "830e28ac11b5e5b5896841ac4f4f5bb5fabfb4d3", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/830e28ac11b5e5b5896841ac4f4f5bb5fabfb4d3", "committedDate": "2020-12-15T09:19:38Z", "message": "Avoid emitting unnecessary braces in generated query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d8469da9c155da156cba26aabebd817240a8896", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/0d8469da9c155da156cba26aabebd817240a8896", "committedDate": "2020-12-15T09:42:48Z", "message": "Separate Domain and ValueSet handling in QueryBuilder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c8c45d3019837d89f061971a244b4623978a8c8", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/4c8c45d3019837d89f061971a244b4623978a8c8", "committedDate": "2020-12-15T09:43:04Z", "message": "Add query building test case for NOT IN's domain"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecd3ed6ae45a52d23ac0235b56c4ea28ff666c25", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/ecd3ed6ae45a52d23ac0235b56c4ea28ff666c25", "committedDate": "2020-12-15T09:43:04Z", "message": "Improve type mismatch reporting in nativeValueToBlock"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baf22ef4125f33ba0a07cb100e6628f88cafc2c2", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/baf22ef4125f33ba0a07cb100e6628f88cafc2c2", "committedDate": "2020-12-15T09:48:56Z", "message": "Reconstruct NOT IN when pushing down to JDBC source"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMjkyOTQ0", "url": "https://github.com/trinodb/trino/pull/6343#pullrequestreview-552292944", "createdAt": "2020-12-15T10:09:16Z", "commit": {"oid": "baf22ef4125f33ba0a07cb100e6628f88cafc2c2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMzkzMjk4", "url": "https://github.com/trinodb/trino/pull/6343#pullrequestreview-552393298", "createdAt": "2020-12-15T12:19:51Z", "commit": {"oid": "528f574978fcaa5676627b747b913099ffab71ad"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMjoxOTo1MVrOIGIIJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMjoyMzo0OFrOIGIRiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI5NTUyNg==", "bodyText": "I don't like this assertion it is very detailed and so it it will be fragile to changes", "url": "https://github.com/trinodb/trino/pull/6343#discussion_r543295526", "createdAt": "2020-12-15T12:19:51Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/test/java/io/prestosql/plugin/jdbc/TestJdbcQueryBuilder.java", "diffHunk": "@@ -237,11 +236,22 @@ public void testNormalBuildSql()\n                 .build());\n \n         Connection connection = database.getConnection();\n-        try (PreparedStatement preparedStatement = new QueryBuilder(jdbcClient).buildSql(SESSION, connection, TEST_TABLE, Optional.empty(), columns, tupleDomain, Optional.empty(), identity());\n-                ResultSet resultSet = preparedStatement.executeQuery()) {\n+        try (PreparedStatement preparedStatement = new QueryBuilder(jdbcClient).buildSql(SESSION, connection, TEST_TABLE, Optional.empty(), columns, tupleDomain, Optional.empty(), identity())) {\n+            assertThat(lastQuery).isEqualTo(\"\" +\n+                    \"SELECT \\\"col_0\\\" AS \\\"col_0\\\", \\\"col_1\\\" AS \\\"col_1\\\", \\\"col_2\\\" AS \\\"col_2\\\", \\\"col_3\\\" AS \\\"col_3\\\", \\\"col_4\\\" AS \\\"col_4\\\", \\\"col_5\\\" AS \\\"col_5\\\", \" +\n+                    \"\\\"col_6\\\" AS \\\"col_6\\\", \\\"col_7\\\" AS \\\"col_7\\\", \\\"col_8\\\" AS \\\"col_8\\\", \\\"col_9\\\" AS \\\"col_9\\\", \\\"col_10\\\" AS \\\"col_10\\\", \\\"col_11\\\" AS \\\"col_11\\\" \" +\n+                    \"FROM \\\"test_table\\\" \" +\n+                    \"WHERE ((\\\"col_0\\\" < ?) OR (\\\"col_0\\\" >= ? AND \\\"col_0\\\" <= ?) OR (\\\"col_0\\\" > ?) OR \\\"col_0\\\" IN (?,?)) \" +\n+                    \"AND ((\\\"col_1\\\" >= ? AND \\\"col_1\\\" <= ?) OR (\\\"col_1\\\" >= ? AND \\\"col_1\\\" <= ?) OR \\\"col_1\\\" IN (?,?,?,?)) \" +\n+                    \"AND ((\\\"col_7\\\" >= ? AND \\\"col_7\\\" < ?) OR (\\\"col_7\\\" >= ? AND \\\"col_7\\\" < ?)) \" +\n+                    \"AND ((\\\"col_8\\\" >= ? AND \\\"col_8\\\" < ?) OR (\\\"col_8\\\" >= ? AND \\\"col_8\\\" <= ?)) \" +\n+                    \"AND ((\\\"col_9\\\" < ?) OR \\\"col_9\\\" IN (?,?)) \" +\n+                    \"AND (\\\"col_2\\\" = ?)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "528f574978fcaa5676627b747b913099ffab71ad"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI5NzA4OA==", "bodyText": "Optional (separate commit)?", "url": "https://github.com/trinodb/trino/pull/6343#discussion_r543297088", "createdAt": "2020-12-15T12:22:22Z", "author": {"login": "kokosing"}, "path": "presto-spi/src/main/java/io/prestosql/spi/predicate/Utils.java", "diffHunk": "@@ -31,10 +33,13 @@ private Utils() {}\n     // just for this use case.\n     static final TypeOperators TUPLE_DOMAIN_TYPE_OPERATORS = new TypeOperators();\n \n-    public static Block nativeValueToBlock(Type type, Object object)\n+    public static Block nativeValueToBlock(Type type, @Nullable Object object)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecd3ed6ae45a52d23ac0235b56c4ea28ff666c25"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI5NzkzMQ==", "bodyText": "Do we have query in ATDQ to trigger this pushdown?", "url": "https://github.com/trinodb/trino/pull/6343#discussion_r543297931", "createdAt": "2020-12-15T12:23:48Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/test/java/io/prestosql/plugin/jdbc/TestJdbcQueryBuilder.java", "diffHunk": "@@ -290,8 +290,8 @@ public void testBuildSqlWithDomainComplement()\n             assertThat(lastQuery).isEqualTo(\"\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "baf22ef4125f33ba0a07cb100e6628f88cafc2c2"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1836, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}