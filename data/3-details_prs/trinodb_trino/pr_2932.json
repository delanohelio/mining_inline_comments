{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MzE0MzU4", "number": 2932, "title": "Add identity destroy to free up authenticator resources", "bodyText": "", "createdAt": "2020-02-25T01:19:49Z", "url": "https://github.com/trinodb/trino/pull/2932", "merged": true, "mergeCommit": {"oid": "38f65278f1f8631f2843281406101c18793a432f"}, "closed": true, "closedAt": "2020-02-26T20:18:29Z", "author": {"login": "dain"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHnyalgFqTM2MzgxNDc4NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcH-c1vABqjMwNzIwMzAwOTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzODE0Nzg0", "url": "https://github.com/trinodb/trino/pull/2932#pullrequestreview-363814784", "createdAt": "2020-02-25T01:22:46Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMToyMjo0NlrOFt1sDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMToyNDo1MlrOFt1uJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYwOTg3MQ==", "bodyText": "Check for null (technically redundant, but looks better)", "url": "https://github.com/trinodb/trino/pull/2932#discussion_r383609871", "createdAt": "2020-02-25T01:22:46Z", "author": {"login": "electrum"}, "path": "presto-spi/src/main/java/io/prestosql/spi/security/Identity.java", "diffHunk": "@@ -186,9 +195,38 @@ public Builder withAdditionalExtraCredentials(Map<String, String> extraCredentia\n             return this;\n         }\n \n+        public void withOnDestroy(Runnable onDestroy)\n+        {\n+            requireNonNull(onDestroy, \"onDestroy is null\");\n+            if (this.onDestroy.isPresent()) {\n+                throw new IllegalStateException(\"Destroy callback already set\");\n+            }\n+            this.onDestroy = Optional.of(new InvokeOnceRunnable(onDestroy));\n+        }\n+\n         public Identity build()\n         {\n-            return new Identity(user, principal, roles, extraCredentials);\n+            return new Identity(user, principal, roles, extraCredentials, onDestroy);\n+        }\n+    }\n+\n+    private static final class InvokeOnceRunnable\n+            implements Runnable\n+    {\n+        private final Runnable delegate;\n+        private final AtomicBoolean invoked = new AtomicBoolean();\n+\n+        public InvokeOnceRunnable(Runnable delegate)\n+        {\n+            this.delegate = delegate;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYxMDQwNA==", "bodyText": "This seems to be unused", "url": "https://github.com/trinodb/trino/pull/2932#discussion_r383610404", "createdAt": "2020-02-25T01:24:52Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/dispatcher/QueuedStatementResource.java", "diffHunk": "@@ -386,6 +389,11 @@ public synchronized void cancel()\n             querySubmissionFuture.addListener(() -> dispatchManager.cancelQuery(queryId), directExecutor());\n         }\n \n+        public void destroy()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NTM1MTQy", "url": "https://github.com/trinodb/trino/pull/2932#pullrequestreview-364535142", "createdAt": "2020-02-25T23:54:09Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMzo1NDowOVrOFuZnaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMzo1NDowOVrOFuZnaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE5ODUwNA==", "bodyText": "This should either be RuntimeException, since destroy() doesn't throw checked exceptions, or be Throwable to guarantee we catch everything.", "url": "https://github.com/trinodb/trino/pull/2932#discussion_r384198504", "createdAt": "2020-02-25T23:54:09Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/dispatcher/QueuedStatementResource.java", "diffHunk": "@@ -129,7 +129,16 @@ public QueuedStatementResource(\n \n                             // forget about this query if the query manager is no longer tracking it\n                             if (!dispatchManager.isQueryRegistered(entry.getKey())) {\n-                                queries.remove(entry.getKey());\n+                                Query query = queries.remove(entry.getKey());\n+                                if (query != null) {\n+                                    try {\n+                                        query.destroy();\n+                                    }\n+                                    catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 10}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "16a867814eef68517fb6d7b253110c187bf3a63b", "author": {"user": {"login": "dain", "name": "Dain Sundstrom"}}, "url": "https://github.com/trinodb/trino/commit/16a867814eef68517fb6d7b253110c187bf3a63b", "committedDate": "2020-02-26T03:48:53Z", "message": "Add identity destroy to free up authenticator resources"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "16a867814eef68517fb6d7b253110c187bf3a63b", "author": {"user": {"login": "dain", "name": "Dain Sundstrom"}}, "url": "https://github.com/trinodb/trino/commit/16a867814eef68517fb6d7b253110c187bf3a63b", "committedDate": "2020-02-26T03:48:53Z", "message": "Add identity destroy to free up authenticator resources"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1607, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}