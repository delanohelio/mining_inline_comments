{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MDE3NDMw", "number": 3053, "title": "Disable incorrect pushdown in Mongo connector", "bodyText": "Fixes #1781", "createdAt": "2020-03-10T09:16:58Z", "url": "https://github.com/trinodb/trino/pull/3053", "merged": true, "mergeCommit": {"oid": "92b118fa45bf75c34f8131ef7b2bd01daaad6fae"}, "closed": true, "closedAt": "2020-03-16T08:07:35Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMTgnuABqjMxMTQ5OTI1MDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOJiEngBqjMxMzIwMTAxOTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNDk3NTM2", "url": "https://github.com/trinodb/trino/pull/3053#pullrequestreview-373497536", "createdAt": "2020-03-12T12:06:23Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "819ffe733d57c457949ba4131a29a3570946b4d0", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/819ffe733d57c457949ba4131a29a3570946b4d0", "committedDate": "2020-03-14T20:11:32Z", "message": "Start MongoQueryRunner on 8080"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1ef2abe36311f471cdfe87025167841f95ed296", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/d1ef2abe36311f471cdfe87025167841f95ed296", "committedDate": "2020-03-14T20:11:33Z", "message": "Fix types in test\n\nCOL1 is of type BIGINT, so should not be used with varchar-typed domain.\nAdd another varchar column."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7d22498a655be911a9fee6beb801ad7d46bb6c0", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/c7d22498a655be911a9fee6beb801ad7d46bb6c0", "committedDate": "2020-03-14T20:11:34Z", "message": "Fix Mongo type mappings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8e55be9596e8d32911d9eb1020c0c2c94d62406", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/c8e55be9596e8d32911d9eb1020c0c2c94d62406", "committedDate": "2020-03-14T20:11:35Z", "message": "Disable incorrect pushdown in Mongo connector"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0ODI0NDI1", "url": "https://github.com/trinodb/trino/pull/3053#pullrequestreview-374824425", "createdAt": "2020-03-15T18:59:10Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxODo1OToxMFrOF2goCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxOTowMzo0MVrOF2gphA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwMTk2Mg==", "bodyText": "I think you might want to use io.prestosql.testing.sql.TestTable.randomTableSuffix. Sometimes ATDQ is run in parallel for some connectors with several different configurations and then such test becomes flaky due table name conflict.", "url": "https://github.com/trinodb/trino/pull/3053#discussion_r392701962", "createdAt": "2020-03-15T18:59:10Z", "author": {"login": "kokosing"}, "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -1169,4 +1178,152 @@ public void testInsertForDefaultColumn()\n     }\n \n     protected abstract TestTable createTableWithDefaultColumns();\n+\n+    @Test(dataProvider = \"testDataMappingSmokeTestDataProvider\")\n+    public void testDataMappingSmokeTest(DataMappingTestSetup dataMappingTestSetup)\n+    {\n+        String prestoTypeName = dataMappingTestSetup.getPrestoTypeName();\n+        String sampleValueLiteral = dataMappingTestSetup.getSampleValueLiteral();\n+        String highValueLiteral = dataMappingTestSetup.getHighValueLiteral();\n+\n+        String tableName = \"test_data_mapping_smoke_test_\" + prestoTypeName.replaceAll(\"[^a-zA-Z0-9]\", \"_\");\n+\n+        Runnable setup = () -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwMjI2Mw==", "bodyText": "s/setup::run/setup?", "url": "https://github.com/trinodb/trino/pull/3053#discussion_r392702263", "createdAt": "2020-03-15T19:02:48Z", "author": {"login": "kokosing"}, "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -1169,4 +1178,152 @@ public void testInsertForDefaultColumn()\n     }\n \n     protected abstract TestTable createTableWithDefaultColumns();\n+\n+    @Test(dataProvider = \"testDataMappingSmokeTestDataProvider\")\n+    public void testDataMappingSmokeTest(DataMappingTestSetup dataMappingTestSetup)\n+    {\n+        String prestoTypeName = dataMappingTestSetup.getPrestoTypeName();\n+        String sampleValueLiteral = dataMappingTestSetup.getSampleValueLiteral();\n+        String highValueLiteral = dataMappingTestSetup.getHighValueLiteral();\n+\n+        String tableName = \"test_data_mapping_smoke_test_\" + prestoTypeName.replaceAll(\"[^a-zA-Z0-9]\", \"_\");\n+\n+        Runnable setup = () -> {\n+            String createTable = format(\"CREATE TABLE %s(id bigint, value %s)\", tableName, prestoTypeName);\n+            assertUpdate(createTable);\n+            assertUpdate(\n+                    format(\"INSERT INTO %s VALUES (10000, NULL), (10001, %s), (99999, %s)\", tableName, sampleValueLiteral, highValueLiteral),\n+                    3);\n+        };\n+        if (dataMappingTestSetup.isUnsupportedType()) {\n+            String typeNameBase = prestoTypeName.replaceFirst(\"\\\\(.*\", \"\");\n+            String expectedMessagePart = format(\"(%1$s.*not (yet )?supported)|((?i)unsupported.*%1$s)|((?i)not supported.*%1$s)\", Pattern.quote(typeNameBase));\n+            assertThatThrownBy(setup::run)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwMjM0MA==", "bodyText": "10000 -> 1, 10001 -> 2, 99999 -> 3", "url": "https://github.com/trinodb/trino/pull/3053#discussion_r392702340", "createdAt": "2020-03-15T19:03:41Z", "author": {"login": "kokosing"}, "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -1169,4 +1178,152 @@ public void testInsertForDefaultColumn()\n     }\n \n     protected abstract TestTable createTableWithDefaultColumns();\n+\n+    @Test(dataProvider = \"testDataMappingSmokeTestDataProvider\")\n+    public void testDataMappingSmokeTest(DataMappingTestSetup dataMappingTestSetup)\n+    {\n+        String prestoTypeName = dataMappingTestSetup.getPrestoTypeName();\n+        String sampleValueLiteral = dataMappingTestSetup.getSampleValueLiteral();\n+        String highValueLiteral = dataMappingTestSetup.getHighValueLiteral();\n+\n+        String tableName = \"test_data_mapping_smoke_test_\" + prestoTypeName.replaceAll(\"[^a-zA-Z0-9]\", \"_\");\n+\n+        Runnable setup = () -> {\n+            String createTable = format(\"CREATE TABLE %s(id bigint, value %s)\", tableName, prestoTypeName);\n+            assertUpdate(createTable);\n+            assertUpdate(\n+                    format(\"INSERT INTO %s VALUES (10000, NULL), (10001, %s), (99999, %s)\", tableName, sampleValueLiteral, highValueLiteral),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0OTM0OTY5", "url": "https://github.com/trinodb/trino/pull/3053#pullrequestreview-374934969", "createdAt": "2020-03-16T06:24:51Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b59e1cf8dee14ad6b3eb8c1fee1ff547139a309", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/9b59e1cf8dee14ad6b3eb8c1fee1ff547139a309", "committedDate": "2020-03-16T08:07:11Z", "message": "Add generic data type & pushdown test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "9b59e1cf8dee14ad6b3eb8c1fee1ff547139a309", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/9b59e1cf8dee14ad6b3eb8c1fee1ff547139a309", "committedDate": "2020-03-16T08:07:11Z", "message": "Add generic data type & pushdown test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2126, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}