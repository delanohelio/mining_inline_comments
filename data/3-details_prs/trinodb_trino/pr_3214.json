{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNDg2NDAy", "number": 3214, "title": "Run predicate pushdown test without dynamic filtering too", "bodyText": "", "createdAt": "2020-03-23T16:18:33Z", "url": "https://github.com/trinodb/trino/pull/3214", "merged": true, "mergeCommit": {"oid": "4d668978a836741ee17a4c1a61d585e6fc810619"}, "closed": true, "closedAt": "2020-03-24T12:17:38Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQgmYGgH2gAyMzkyNDg2NDAyOmFmODcyOTgxYzAzMTVlMGY3MjM3ODMyMjBlNzJmOGUyZGMzYzMyNjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQvtuQgFqTM4MDE0MzcwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "af872981c0315e0f723783220e72f8e2dc3c3268", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/af872981c0315e0f723783220e72f8e2dc3c3268", "committedDate": "2020-03-23T16:07:45Z", "message": "Rename test class\n\nThis is necessary to maintain file history when moving tests to an\nabstract class."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b21fa491a531c60f88ac6fea2188288f246347e", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/1b21fa491a531c60f88ac6fea2188288f246347e", "committedDate": "2020-03-23T16:17:54Z", "message": "Run predicate pushdown test without dynamic filtering too"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMDcyMTI1", "url": "https://github.com/trinodb/trino/pull/3214#pullrequestreview-380072125", "createdAt": "2020-03-24T08:04:15Z", "commit": {"oid": "1b21fa491a531c60f88ac6fea2188288f246347e"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwODowNDoxNVrOF6krDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwODowNDoxNVrOF6krDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk2MjU3NA==", "bodyText": "s/\"    /\"/", "url": "https://github.com/trinodb/trino/pull/3214#discussion_r396962574", "createdAt": "2020-03-24T08:04:15Z", "author": {"login": "kokosing"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestPredicatePushdown.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.sql.planner;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableMap;\n+import io.prestosql.metadata.Metadata;\n+import org.testng.annotations.Test;\n+\n+import java.util.Optional;\n+\n+import static io.prestosql.SystemSessionProperties.ENABLE_DYNAMIC_FILTERING;\n+import static io.prestosql.metadata.MetadataManager.createTestMetadataManager;\n+import static io.prestosql.sql.planner.assertions.PlanMatchPattern.anyTree;\n+import static io.prestosql.sql.planner.assertions.PlanMatchPattern.equiJoinClause;\n+import static io.prestosql.sql.planner.assertions.PlanMatchPattern.filter;\n+import static io.prestosql.sql.planner.assertions.PlanMatchPattern.join;\n+import static io.prestosql.sql.planner.assertions.PlanMatchPattern.project;\n+import static io.prestosql.sql.planner.assertions.PlanMatchPattern.tableScan;\n+import static io.prestosql.sql.planner.plan.JoinNode.Type.INNER;\n+\n+public class TestPredicatePushdown\n+        extends AbstractPredicatePushdownTest\n+{\n+    private final Metadata metadata = createTestMetadataManager();\n+\n+    public TestPredicatePushdown()\n+    {\n+        super(ImmutableMap.of(ENABLE_DYNAMIC_FILTERING, \"true\"));\n+    }\n+\n+    @Test\n+    @Override\n+    public void testCoercions()\n+    {\n+        // Ensure constant equality predicate is pushed to the other side of the join\n+        // when type coercions are involved\n+\n+        // values have the same type (varchar(4)) in both tables\n+        assertPlan(\n+                \"WITH \" +\n+                        \"    t(k, v) AS (SELECT nationkey, CAST(name AS varchar(4)) FROM nation),\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b21fa491a531c60f88ac6fea2188288f246347e"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMTQzNzA0", "url": "https://github.com/trinodb/trino/pull/3214#pullrequestreview-380143704", "createdAt": "2020-03-24T09:44:21Z", "commit": {"oid": "1b21fa491a531c60f88ac6fea2188288f246347e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1992, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}