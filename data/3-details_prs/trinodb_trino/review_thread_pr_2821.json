{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NzU2Njkw", "number": 2821, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMzo0OTowMVrODfjRoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMzo1MDo1MVrODfjUPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDEwNDAwOnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMzo0OTowMVrOFpUXdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMToyMTowM1rOFpj9RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg2OTYyMA==", "bodyText": "In theory the necessity of setting TCCL may depend on the actual module passed here.", "url": "https://github.com/trinodb/trino/pull/2821#discussion_r378869620", "createdAt": "2020-02-13T13:49:01Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "diffHunk": "@@ -62,20 +59,18 @@ public Connector create(String catalogName, Map<String, String> requiredConfig,\n     {\n         requireNonNull(requiredConfig, \"requiredConfig is null\");\n \n-        try (ThreadContextClassLoader ignored = new ThreadContextClassLoader(classLoader)) {\n-            Bootstrap app = new Bootstrap(\n-                    binder -> binder.bind(TypeManager.class).toInstance(context.getTypeManager()),\n-                    new JdbcModule(catalogName),\n-                    new CredentialProviderModule(),\n-                    module);\n+        Bootstrap app = new Bootstrap(\n+                binder -> binder.bind(TypeManager.class).toInstance(context.getTypeManager()),\n+                new JdbcModule(catalogName),\n+                new CredentialProviderModule(),\n+                module);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEyNTA2MQ==", "bodyText": "Nope, the engine sets this when calling create.", "url": "https://github.com/trinodb/trino/pull/2821#discussion_r379125061", "createdAt": "2020-02-13T21:21:03Z", "author": {"login": "electrum"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "diffHunk": "@@ -62,20 +59,18 @@ public Connector create(String catalogName, Map<String, String> requiredConfig,\n     {\n         requireNonNull(requiredConfig, \"requiredConfig is null\");\n \n-        try (ThreadContextClassLoader ignored = new ThreadContextClassLoader(classLoader)) {\n-            Bootstrap app = new Bootstrap(\n-                    binder -> binder.bind(TypeManager.class).toInstance(context.getTypeManager()),\n-                    new JdbcModule(catalogName),\n-                    new CredentialProviderModule(),\n-                    module);\n+        Bootstrap app = new Bootstrap(\n+                binder -> binder.bind(TypeManager.class).toInstance(context.getTypeManager()),\n+                new JdbcModule(catalogName),\n+                new CredentialProviderModule(),\n+                module);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg2OTYyMA=="}, "originalCommit": null, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDExMDA0OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMzo1MDo0MVrOFpUbOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMzo1MDo0MVrOFpUbOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg3MDU4Nw==", "bodyText": "eagerly validate module is not null", "url": "https://github.com/trinodb/trino/pull/2821#discussion_r378870587", "createdAt": "2020-02-13T13:50:41Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "diffHunk": "@@ -33,13 +33,18 @@\n         implements ConnectorFactory\n {\n     private final String name;\n-    private final Module module;\n+    private final JdbcModuleProvider moduleProvider;\n \n     public JdbcConnectorFactory(String name, Module module)\n+    {\n+        this(name, catalogName -> module);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDExMDcxOnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMzo1MDo1MVrOFpUbpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMToyMjoyN1rOFpj_ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg3MDY5Mg==", "bodyText": "Alternatively, we could bind @CatalogName String in guice and let it be injected in other places.", "url": "https://github.com/trinodb/trino/pull/2821#discussion_r378870692", "createdAt": "2020-02-13T13:50:51Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "diffHunk": "@@ -73,4 +78,9 @@ public Connector create(String catalogName, Map<String, String> requiredConfig,\n \n         return injector.getInstance(JdbcConnector.class);\n     }\n+\n+    public interface JdbcModuleProvider\n+    {\n+        Module getModule(String catalogName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEyNTY2Mg==", "bodyText": "I considered this but we need it at binding time for JMX exports. Otherwise this would be a nicer approach.", "url": "https://github.com/trinodb/trino/pull/2821#discussion_r379125662", "createdAt": "2020-02-13T21:22:27Z", "author": {"login": "electrum"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "diffHunk": "@@ -73,4 +78,9 @@ public Connector create(String catalogName, Map<String, String> requiredConfig,\n \n         return injector.getInstance(JdbcConnector.class);\n     }\n+\n+    public interface JdbcModuleProvider\n+    {\n+        Module getModule(String catalogName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg3MDY5Mg=="}, "originalCommit": null, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 917, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}