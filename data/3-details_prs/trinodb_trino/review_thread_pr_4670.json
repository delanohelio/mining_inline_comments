{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYxODkwMzM4", "number": 4670, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNjowMToxNVrOEWFtlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwOTowMzoxMlrOEWchVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTk3NzE2OnYy", "diffSide": "RIGHT", "path": "presto-phoenix/src/test/java/io/prestosql/plugin/phoenix/TestPhoenixIntegrationSmokeTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNjowMToxNVrOG9NhUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMDoyODoxM1rOG9m6zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgzNzg0Mw==", "bodyText": "Can we move all the SQL Keywords to Upper case", "url": "https://github.com/trinodb/trino/pull/4670#discussion_r466837843", "createdAt": "2020-08-07T06:01:15Z", "author": {"login": "Praveen2112"}, "path": "presto-phoenix/src/test/java/io/prestosql/plugin/phoenix/TestPhoenixIntegrationSmokeTest.java", "diffHunk": "@@ -178,6 +178,16 @@ public void testCaseInsensitiveNameMatching()\n         assertQuery(\"SELECT Val1 FROM testcaseinsensitive where Val1 < 1.2\", \"SELECT 1.1\");\n     }\n \n+    @Test\n+    public void testMissingColumnsOnInsert()\n+            throws Exception\n+    {\n+        executeInPhoenix(\"create table tpch.test_col_insert(pk varchar not null primary key, col1 varchar, col2 varchar)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI1Mzk2NQ==", "bodyText": "Done.", "url": "https://github.com/trinodb/trino/pull/4670#discussion_r467253965", "createdAt": "2020-08-07T20:28:13Z", "author": {"login": "lhofhansl"}, "path": "presto-phoenix/src/test/java/io/prestosql/plugin/phoenix/TestPhoenixIntegrationSmokeTest.java", "diffHunk": "@@ -178,6 +178,16 @@ public void testCaseInsensitiveNameMatching()\n         assertQuery(\"SELECT Val1 FROM testcaseinsensitive where Val1 < 1.2\", \"SELECT 1.1\");\n     }\n \n+    @Test\n+    public void testMissingColumnsOnInsert()\n+            throws Exception\n+    {\n+        executeInPhoenix(\"create table tpch.test_col_insert(pk varchar not null primary key, col1 varchar, col2 varchar)\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgzNzg0Mw=="}, "originalCommit": null, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTk3Nzg5OnYy", "diffSide": "RIGHT", "path": "presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixOutputTableHandle.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNjowMTo0NVrOG9Nhwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMDoyODowM1rOG9m6mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgzNzk1NA==", "bodyText": "Can we add a non-null check here", "url": "https://github.com/trinodb/trino/pull/4670#discussion_r466837954", "createdAt": "2020-08-07T06:01:45Z", "author": {"login": "Praveen2112"}, "path": "presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixOutputTableHandle.java", "diffHunk": "@@ -34,15 +34,15 @@ public PhoenixOutputTableHandle(\n             @JsonProperty(\"columnNames\") List<String> columnNames,\n             @JsonProperty(\"columnTypes\") List<Type> columnTypes,\n             @JsonProperty(\"jdbcColumnTypes\") Optional<List<JdbcTypeHandle>> jdbcColumnTypes,\n-            @JsonProperty(\"hadUUIDRowkey\") boolean hasUUIDRowkey)\n+            @JsonProperty(\"rowkeyColumn\") Optional<String> rowkeyColumn)\n     {\n         super(\"\", schemaName.orElse(null), tableName, columnNames, columnTypes, jdbcColumnTypes, \"\");\n-        this.hasUuidRowKey = hasUUIDRowkey;\n+        this.rowkeyColumn = rowkeyColumn;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI1MzkxNA==", "bodyText": "Yep. Done.", "url": "https://github.com/trinodb/trino/pull/4670#discussion_r467253914", "createdAt": "2020-08-07T20:28:03Z", "author": {"login": "lhofhansl"}, "path": "presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixOutputTableHandle.java", "diffHunk": "@@ -34,15 +34,15 @@ public PhoenixOutputTableHandle(\n             @JsonProperty(\"columnNames\") List<String> columnNames,\n             @JsonProperty(\"columnTypes\") List<Type> columnTypes,\n             @JsonProperty(\"jdbcColumnTypes\") Optional<List<JdbcTypeHandle>> jdbcColumnTypes,\n-            @JsonProperty(\"hadUUIDRowkey\") boolean hasUUIDRowkey)\n+            @JsonProperty(\"rowkeyColumn\") Optional<String> rowkeyColumn)\n     {\n         super(\"\", schemaName.orElse(null), tableName, columnNames, columnTypes, jdbcColumnTypes, \"\");\n-        this.hasUuidRowKey = hasUUIDRowkey;\n+        this.rowkeyColumn = rowkeyColumn;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgzNzk1NA=="}, "originalCommit": null, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxOTY4ODAxOnYy", "diffSide": "RIGHT", "path": "presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwODo1NDowMlrOG9wDvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQwMDowNzoyMVrOG92-3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQwMzcxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .map(column -> SchemaUtil.getEscapedArgument(column))\n          \n          \n            \n                            .map(SchemaUtil::getEscapedArgument)", "url": "https://github.com/trinodb/trino/pull/4670#discussion_r467403710", "createdAt": "2020-08-08T08:54:02Z", "author": {"login": "Praveen2112"}, "path": "presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixClient.java", "diffHunk": "@@ -205,15 +207,20 @@ public String buildInsertSql(JdbcOutputTableHandle handle)\n     {\n         PhoenixOutputTableHandle outputHandle = (PhoenixOutputTableHandle) handle;\n         String params = join(\",\", nCopies(handle.getColumnNames().size(), \"?\"));\n-        if (outputHandle.hasUUIDRowkey()) {\n+        String columns = handle.getColumnNames().stream()\n+                .map(column -> SchemaUtil.getEscapedArgument(column))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUxNzE1MQ==", "bodyText": "Yep. Done.", "url": "https://github.com/trinodb/trino/pull/4670#discussion_r467517151", "createdAt": "2020-08-09T00:07:21Z", "author": {"login": "lhofhansl"}, "path": "presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixClient.java", "diffHunk": "@@ -205,15 +207,20 @@ public String buildInsertSql(JdbcOutputTableHandle handle)\n     {\n         PhoenixOutputTableHandle outputHandle = (PhoenixOutputTableHandle) handle;\n         String params = join(\",\", nCopies(handle.getColumnNames().size(), \"?\"));\n-        if (outputHandle.hasUUIDRowkey()) {\n+        String columns = handle.getColumnNames().stream()\n+                .map(column -> SchemaUtil.getEscapedArgument(column))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQwMzcxMA=="}, "originalCommit": null, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxOTcxNDEyOnYy", "diffSide": "RIGHT", "path": "presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixMetadata.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwOTowMzoxMlrOG9wUYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQyMzo1OTowMlrOG928xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQwNzk3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .filter(column -> ROWKEY.equalsIgnoreCase(column.getColumnName()))\n          \n          \n            \n                            .map(JdbcColumnHandle::getColumnName)\n          \n          \n            \n                            .map(JdbcColumnHandle::getColumnName)\n          \n          \n            \n                            .filter(ROWKEY::equalsIgnoreCase)\n          \n      \n    \n    \n  \n\nWhat if we could switch two lines, would it be better ?", "url": "https://github.com/trinodb/trino/pull/4670#discussion_r467407970", "createdAt": "2020-08-08T09:03:12Z", "author": {"login": "Praveen2112"}, "path": "presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixMetadata.java", "diffHunk": "@@ -246,25 +246,29 @@ public ConnectorOutputTableHandle beginCreateTable(ConnectorSession session, Con\n     @Override\n     public boolean supportsMissingColumnsOnInsert()\n     {\n-        return false;\n+        return true;\n     }\n \n     @Override\n     public ConnectorInsertTableHandle beginInsert(ConnectorSession session, ConnectorTableHandle tableHandle, List<ColumnHandle> columns)\n     {\n         JdbcTableHandle handle = (JdbcTableHandle) tableHandle;\n-        List<JdbcColumnHandle> allColumns = phoenixClient.getColumns(session, handle);\n-        List<JdbcColumnHandle> nonRowkeyColumns = allColumns.stream()\n-                .filter(column -> !ROWKEY.equalsIgnoreCase(column.getColumnName()))\n+        Optional<String> rowkeyColumn = phoenixClient.getColumns(session, handle).stream()\n+                .filter(column -> ROWKEY.equalsIgnoreCase(column.getColumnName()))\n+                .map(JdbcColumnHandle::getColumnName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUxNjYxMw==", "bodyText": "Yep. Much nicer. (A bit embarrassing that I missed that)", "url": "https://github.com/trinodb/trino/pull/4670#discussion_r467516613", "createdAt": "2020-08-08T23:59:02Z", "author": {"login": "lhofhansl"}, "path": "presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixMetadata.java", "diffHunk": "@@ -246,25 +246,29 @@ public ConnectorOutputTableHandle beginCreateTable(ConnectorSession session, Con\n     @Override\n     public boolean supportsMissingColumnsOnInsert()\n     {\n-        return false;\n+        return true;\n     }\n \n     @Override\n     public ConnectorInsertTableHandle beginInsert(ConnectorSession session, ConnectorTableHandle tableHandle, List<ColumnHandle> columns)\n     {\n         JdbcTableHandle handle = (JdbcTableHandle) tableHandle;\n-        List<JdbcColumnHandle> allColumns = phoenixClient.getColumns(session, handle);\n-        List<JdbcColumnHandle> nonRowkeyColumns = allColumns.stream()\n-                .filter(column -> !ROWKEY.equalsIgnoreCase(column.getColumnName()))\n+        Optional<String> rowkeyColumn = phoenixClient.getColumns(session, handle).stream()\n+                .filter(column -> ROWKEY.equalsIgnoreCase(column.getColumnName()))\n+                .map(JdbcColumnHandle::getColumnName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQwNzk3MA=="}, "originalCommit": null, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3581, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}