{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMjM3MjA2", "number": 6181, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOToyMzo1NlrOE_xjiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOTozNjozNVrOE_x12w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzA3NjU2OnYy", "diffSide": "LEFT", "path": "presto-kafka/src/test/java/io/prestosql/plugin/kafka/KafkaQueryRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOToyMzo1NlrOH9qnrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOToyMzo1NlrOH9qnrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQyMzQ3MQ==", "bodyText": "Please undo, this is used externally.", "url": "https://github.com/trinodb/trino/pull/6181#discussion_r534423471", "createdAt": "2020-12-02T19:23:56Z", "author": {"login": "kokosing"}, "path": "presto-kafka/src/test/java/io/prestosql/plugin/kafka/KafkaQueryRunner.java", "diffHunk": "@@ -103,12 +102,6 @@ public Builder setExtraTopicDescription(Map<SchemaTableName, KafkaTopicDescripti\n             return this;\n         }\n \n-        public Builder setExtension(Module extension)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzA5NTg5OnYy", "diffSide": "LEFT", "path": "presto-kafka/src/test/java/io/prestosql/plugin/kafka/KafkaQueryRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOToyOTowM1rOH9qztA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOToyOTowM1rOH9qztA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQyNjU0OA==", "bodyText": "How about:\n KafkaPlugin kafkaPlugin = new KafkaPlugin(combine(\n                    extensions,\n                    installModuleIf(\n                            KafkaConfig.class,\n                            kafkaConfig -> kafkaConfig.getTableDescriptionSupplier().equalsIgnoreCase(TEST),\n                            binder -> binder.bind(TableDescriptionSupplier.class)\n                                    .toInstance(new MapBasedTableDescriptionSupplier(topicDescriptions))),\n                    new AvroModule()));\n\n?", "url": "https://github.com/trinodb/trino/pull/6181#discussion_r534426548", "createdAt": "2020-12-02T19:29:03Z", "author": {"login": "kokosing"}, "path": "presto-kafka/src/test/java/io/prestosql/plugin/kafka/KafkaQueryRunner.java", "diffHunk": "@@ -161,18 +172,13 @@ private static DistributedQueryRunner createKafkaQueryRunner(\n                     .putAll(tpchTopicDescriptions)\n                     .putAll(testTopicDescriptions.build())\n                     .build();\n-            KafkaPlugin kafkaPlugin = new KafkaPlugin(combine(\n-                    extensions,\n-                    installModuleIf(\n-                            KafkaConfig.class,\n-                            kafkaConfig -> kafkaConfig.getTableDescriptionSupplier().equalsIgnoreCase(TEST),\n-                            binder -> binder.bind(TableDescriptionSupplier.class)\n-                                    .toInstance(new MapBasedTableDescriptionSupplier(topicDescriptions)))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzExNTczOnYy", "diffSide": "LEFT", "path": "presto-record-decoder/src/main/java/io/prestosql/decoder/DecoderModule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOTozNDoyN1rOH9rAFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMDo1MDoxN1rOH90X8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQyOTcxOQ==", "bodyText": "I don't like it. I haven't noticed that earlier, I am sorry about it.\nPreviously DecoderModule was self contained. Now it has a dependency that you need to provide externally AvroModule. That could be non intuitive. Maybe let's make DecoderModule constructor to accept a module that is expected to provide Avro decoders, then default constructor just use AvroDecoderModule. WDYT? Then you don't need to change other connectors.", "url": "https://github.com/trinodb/trino/pull/6181#discussion_r534429719", "createdAt": "2020-12-02T19:34:27Z", "author": {"login": "kokosing"}, "path": "presto-record-decoder/src/main/java/io/prestosql/decoder/DecoderModule.java", "diffHunk": "@@ -43,7 +41,6 @@ public void configure(Binder binder)\n         decoderFactoriesByName.addBinding(CsvRowDecoder.NAME).to(CsvRowDecoderFactory.class).in(SINGLETON);\n         decoderFactoriesByName.addBinding(JsonRowDecoder.NAME).to(JsonRowDecoderFactory.class).in(SINGLETON);\n         decoderFactoriesByName.addBinding(RawRowDecoder.NAME).to(RawRowDecoderFactory.class).in(SINGLETON);\n-        decoderFactoriesByName.addBinding(AvroRowDecoder.NAME).to(AvroRowDecoderFactory.class).in(SINGLETON);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU4MzI4Mg==", "bodyText": "Sounds good!", "url": "https://github.com/trinodb/trino/pull/6181#discussion_r534583282", "createdAt": "2020-12-03T00:50:17Z", "author": {"login": "elonazoulay"}, "path": "presto-record-decoder/src/main/java/io/prestosql/decoder/DecoderModule.java", "diffHunk": "@@ -43,7 +41,6 @@ public void configure(Binder binder)\n         decoderFactoriesByName.addBinding(CsvRowDecoder.NAME).to(CsvRowDecoderFactory.class).in(SINGLETON);\n         decoderFactoriesByName.addBinding(JsonRowDecoder.NAME).to(JsonRowDecoderFactory.class).in(SINGLETON);\n         decoderFactoriesByName.addBinding(RawRowDecoder.NAME).to(RawRowDecoderFactory.class).in(SINGLETON);\n-        decoderFactoriesByName.addBinding(AvroRowDecoder.NAME).to(AvroRowDecoderFactory.class).in(SINGLETON);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQyOTcxOQ=="}, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzExOTg4OnYy", "diffSide": "RIGHT", "path": "presto-record-decoder/src/main/java/io/prestosql/decoder/avro/AvroBytesDeserializer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOTozNTozOFrOH9rCpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMDo1MTowNlrOH90ZMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQzMDM3NA==", "bodyText": "This class is not yet used in this PR.", "url": "https://github.com/trinodb/trino/pull/6181#discussion_r534430374", "createdAt": "2020-12-02T19:35:38Z", "author": {"login": "kokosing"}, "path": "presto-record-decoder/src/main/java/io/prestosql/decoder/avro/AvroBytesDeserializer.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.decoder.avro;\n+\n+import io.prestosql.spi.PrestoException;\n+import org.apache.avro.io.BinaryDecoder;\n+import org.apache.avro.io.DatumReader;\n+import org.apache.avro.io.DecoderFactory;\n+\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+\n+import static io.prestosql.spi.StandardErrorCode.GENERIC_INTERNAL_ERROR;\n+import static java.util.Objects.requireNonNull;\n+\n+public class AvroBytesDeserializer<T>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU4MzYwMw==", "bodyText": "Nice, I will remove it and add it back to the other pr.", "url": "https://github.com/trinodb/trino/pull/6181#discussion_r534583603", "createdAt": "2020-12-03T00:51:06Z", "author": {"login": "elonazoulay"}, "path": "presto-record-decoder/src/main/java/io/prestosql/decoder/avro/AvroBytesDeserializer.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.decoder.avro;\n+\n+import io.prestosql.spi.PrestoException;\n+import org.apache.avro.io.BinaryDecoder;\n+import org.apache.avro.io.DatumReader;\n+import org.apache.avro.io.DecoderFactory;\n+\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+\n+import static io.prestosql.spi.StandardErrorCode.GENERIC_INTERNAL_ERROR;\n+import static java.util.Objects.requireNonNull;\n+\n+public class AvroBytesDeserializer<T>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQzMDM3NA=="}, "originalCommit": null, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzEyMzQ3OnYy", "diffSide": "RIGHT", "path": "presto-kafka/src/main/java/io/prestosql/plugin/kafka/schema/file/FileTableDescriptionSupplierModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOTozNjozNVrOH9rE4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOTozNjozNVrOH9rE4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQzMDk0Ng==", "bodyText": "Please change commit message to:\nExtract AvroDecoderModule\n\nAlso describe why you are doing this, where you can say that this allows to use different implementation of avro decoders etc.", "url": "https://github.com/trinodb/trino/pull/6181#discussion_r534430946", "createdAt": "2020-12-02T19:36:35Z", "author": {"login": "kokosing"}, "path": "presto-kafka/src/main/java/io/prestosql/plugin/kafka/schema/file/FileTableDescriptionSupplierModule.java", "diffHunk": "@@ -16,6 +16,7 @@\n import com.google.inject.Binder;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4470, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}