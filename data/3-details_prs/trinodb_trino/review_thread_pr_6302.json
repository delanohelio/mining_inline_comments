{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2ODgxNzIw", "number": 6302, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNDowMDozN1rOFD_5qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzozMTowMFrOFFcFEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NzM3MDAxOnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNDowMDozN1rOID5_Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTo1ODo0OVrOIFNMXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk2NjcyNg==", "bodyText": "Are we sure this is really sattisfied by all databases? I would rather not break someones deployment by over-strict validation.", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r540966726", "createdAt": "2020-12-11T14:00:37Z", "author": {"login": "losipiuk"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +51,23 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue\n+    public boolean isConnectionUrlValid()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTkyNjE0OQ==", "bodyText": "Per JDBC 4.3 spec: 9.4 The DriverManager Class section", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r541926149", "createdAt": "2020-12-13T13:30:38Z", "author": {"login": "wendigo"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +51,23 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue\n+    public boolean isConnectionUrlValid()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk2NjcyNg=="}, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIwMjI0Mg==", "bodyText": "@wendigo  are you convinced all drivers adhere to JDBC specification?", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542202242", "createdAt": "2020-12-14T08:40:53Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +51,23 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue\n+    public boolean isConnectionUrlValid()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk2NjcyNg=="}, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyNDM3NQ==", "bodyText": "I can go through every JDBC connector that we use.", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542324375", "createdAt": "2020-12-14T11:48:58Z", "author": {"login": "wendigo"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +51,23 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue\n+    public boolean isConnectionUrlValid()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk2NjcyNg=="}, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyOTk1MQ==", "bodyText": "Driver\nPrefix\n\n\n\n\nMysql\njdbc:mysql:// jdbc:mysql:mxj:// jdbc:mysql:loadbalance:// jdbc:mysql:replication://\n\n\nH2\njdbc:h2:\n\n\nPostgreSQL\njdbc:postgresql:\n\n\nHive\njdbc:hive2://\n\n\nOracle\njdbc:oracle:\n\n\nPhoenix\njdbc:phoenix:\n\n\nSQL Server\njdbc:sqlserver://\n\n\nApache Calcite\njdbc:calcite:\n\n\nApache dbcp2\njdbc:apache:commons:dbcp:", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542329951", "createdAt": "2020-12-14T11:58:49Z", "author": {"login": "wendigo"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +51,23 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue\n+    public boolean isConnectionUrlValid()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk2NjcyNg=="}, "originalCommit": null, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5ODE3NTY5OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNjo1NDo0NVrOIEBXmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxMzozMDo1NVrOIE0jPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA4NzY0MA==", "bodyText": "This should be done with a regex validator", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r541087640", "createdAt": "2020-12-11T16:54:45Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +51,23 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue\n+    public boolean isConnectionUrlValid()\n+    {\n+        String connectionUrl = getConnectionUrl();\n+        if (!connectionUrl.startsWith(\"jdbc:\")) {\n+            return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTkyNjIwNw==", "bodyText": "Why? Please elaborate", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r541926207", "createdAt": "2020-12-13T13:30:55Z", "author": {"login": "wendigo"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +51,23 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue\n+    public boolean isConnectionUrlValid()\n+    {\n+        String connectionUrl = getConnectionUrl();\n+        if (!connectionUrl.startsWith(\"jdbc:\")) {\n+            return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA4NzY0MA=="}, "originalCommit": null, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5ODE3ODMyOnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNjo1NToyMVrOIEBZMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxMzozMToxOFrOIE0jbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA4ODA0OA==", "bodyText": "I do not know whether this is safe to assume. Looks reasonable, but let's not add this without more testing.", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r541088048", "createdAt": "2020-12-11T16:55:21Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +51,23 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue\n+    public boolean isConnectionUrlValid()\n+    {\n+        String connectionUrl = getConnectionUrl();\n+        if (!connectionUrl.startsWith(\"jdbc:\")) {\n+            return false;\n+        }\n+\n+        try {\n+            URI.create(connectionUrl.substring(5));\n+            return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTkyNjI1Mw==", "bodyText": "Please look at https://github.com/prestosql/presto/pull/6302/files#r541926149", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r541926253", "createdAt": "2020-12-13T13:31:18Z", "author": {"login": "wendigo"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +51,23 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue\n+    public boolean isConnectionUrlValid()\n+    {\n+        String connectionUrl = getConnectionUrl();\n+        if (!connectionUrl.startsWith(\"jdbc:\")) {\n+            return false;\n+        }\n+\n+        try {\n+            URI.create(connectionUrl.substring(5));\n+            return true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA4ODA0OA=="}, "originalCommit": null, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjI0OTYxOnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzo0OTowN1rOIFDqHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzo0OTowN1rOIFDqHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3MzcyNw==", "bodyText": "Use @javax.validation.constraints.Pattern", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542173727", "createdAt": "2020-12-14T07:49:07Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +50,18 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue(message = \"Invalid JDBC URL: has not jdbc:<subprotocol>:<subname> format.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjI1MDc1OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzo0OToyN1rOIFDqxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzo0OToyN1rOIFDqxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3Mzg5Mw==", "bodyText": ".* doesn't match everything. While new lines are probably invalid, let's not validate that. you can use (?s:.*) to match everything, or you can use javax.validation.constraints.Pattern(flag=...) for that\nthe braces are redundant\nthe ? is redundant\n\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (connectionUrl.matches(\"^jdbc:([a-zA-Z0-9]+):.*?$\")) {\n          \n          \n            \n                    if (connectionUrl.matches(\"^jdbc:[a-zA-Z0-9]+:(?s:.*)$\")) {", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542173893", "createdAt": "2020-12-14T07:49:27Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +50,18 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue(message = \"Invalid JDBC URL: has not jdbc:<subprotocol>:<subname> format.\")\n+    public boolean isConnectionUrlValidJdbcUri()\n+    {\n+        String connectionUrl = getConnectionUrl();\n+        // Per JDBC 4.3 section 9.4 JDBC url must follow format jdbc:<protocol>:<subname>\n+        if (connectionUrl.matches(\"^jdbc:([a-zA-Z0-9]+):.*?$\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzUwNDkyOnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMjo0Njo0MVrOIFOyGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMTowNTo1NlrOIFpBFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM1NTk5Mw==", "bodyText": "I didn't know about the case insensitivity.  Also, it feels like not needed, since it matters for jdbc prefix only, but whatever.\nWhat about using a shorter pattern, like:\njdbc:(?:.*)\n\ni intentionally omitted the subprotocol part\nalso, the ^ and $ are not required, as pattern is matched\nthen you can also omit the message, as the auto-generated one should be usable (is it?)", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542355993", "createdAt": "2020-12-14T12:46:41Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -37,6 +39,8 @@\n     private boolean cacheMissing;\n \n     @NotNull\n+    // Some drivers match case insensitive in Driver.acceptURL\n+    @Pattern(regexp = \"^jdbc:[a-z0-9]+:(?s:.*)$\", flags = CASE_INSENSITIVE, message = \"Invalid JDBC URL: has not jdbc:<subprotocol>:<subname> format.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc2ODExOA==", "bodyText": "This will accept url jdbc: which is invalid from the spec perspective.", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542768118", "createdAt": "2020-12-14T20:49:20Z", "author": {"login": "wendigo"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -37,6 +39,8 @@\n     private boolean cacheMissing;\n \n     @NotNull\n+    // Some drivers match case insensitive in Driver.acceptURL\n+    @Pattern(regexp = \"^jdbc:[a-z0-9]+:(?s:.*)$\", flags = CASE_INSENSITIVE, message = \"Invalid JDBC URL: has not jdbc:<subprotocol>:<subname> format.\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM1NTk5Mw=="}, "originalCommit": null, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc2ODQ5OA==", "bodyText": "I've adjusted message to include regexp and wording from original Pattern message", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542768498", "createdAt": "2020-12-14T20:49:41Z", "author": {"login": "wendigo"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -37,6 +39,8 @@\n     private boolean cacheMissing;\n \n     @NotNull\n+    // Some drivers match case insensitive in Driver.acceptURL\n+    @Pattern(regexp = \"^jdbc:[a-z0-9]+:(?s:.*)$\", flags = CASE_INSENSITIVE, message = \"Invalid JDBC URL: has not jdbc:<subprotocol>:<subname> format.\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM1NTk5Mw=="}, "originalCommit": null, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc4MTIwMw==", "bodyText": "nice, i didnt know you can do {regex}\nAnd what would happen if you do not specify message at all?\nI remember i didn't have to do into some other project, but maybe there was something extra done there", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542781203", "createdAt": "2020-12-14T21:01:31Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -37,6 +39,8 @@\n     private boolean cacheMissing;\n \n     @NotNull\n+    // Some drivers match case insensitive in Driver.acceptURL\n+    @Pattern(regexp = \"^jdbc:[a-z0-9]+:(?s:.*)$\", flags = CASE_INSENSITIVE, message = \"Invalid JDBC URL: has not jdbc:<subprotocol>:<subname> format.\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM1NTk5Mw=="}, "originalCommit": null, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc4NTgxNA==", "bodyText": "The default message will be used which is {javax.validation.constraints.Pattern.message} which interpolates to must match the following regular expression: {regexp}", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542785814", "createdAt": "2020-12-14T21:05:56Z", "author": {"login": "wendigo"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -37,6 +39,8 @@\n     private boolean cacheMissing;\n \n     @NotNull\n+    // Some drivers match case insensitive in Driver.acceptURL\n+    @Pattern(regexp = \"^jdbc:[a-z0-9]+:(?s:.*)$\", flags = CASE_INSENSITIVE, message = \"Invalid JDBC URL: has not jdbc:<subprotocol>:<subname> format.\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM1NTk5Mw=="}, "originalCommit": null, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjQ3MTIzOnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzozMDozNlrOIF8srw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzozMDozNlrOIF8srw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEwODI3MQ==", "bodyText": "The default message is good enough:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Pattern(regexp = \"^jdbc:[a-z0-9]+:(?s:.*)$\", flags = CASE_INSENSITIVE, message = \"Invalid JDBC URL: must match the following regular expression {regexp}\")\n          \n          \n            \n                @Pattern(regexp = \"jdbc:[a-z0-9]+:(?s:.*)\", flags = CASE_INSENSITIVE)", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r543108271", "createdAt": "2020-12-15T07:30:36Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -37,6 +39,8 @@\n     private boolean cacheMissing;\n \n     @NotNull\n+    // Some drivers match case insensitive in Driver.acceptURL\n+    @Pattern(regexp = \"^jdbc:[a-z0-9]+:(?s:.*)$\", flags = CASE_INSENSITIVE, message = \"Invalid JDBC URL: must match the following regular expression {regexp}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjQ3MjUxOnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/test/java/io/prestosql/plugin/jdbc/TestBaseJdbcConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzozMTowMFrOIF8tag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzozMTowMFrOIF8tag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEwODQ1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .hasMessageContaining(\"Invalid JDBC URL: must match the following regular expression ^jdbc:[a-z0-9]+:(?s:.*)$\");\n          \n          \n            \n                            .hasMessageContaining(\"Invalid configuration property connection-url: must match the following regular expression: jdbc:[a-z0-9]+:(?s:.*)\");", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r543108458", "createdAt": "2020-12-15T07:31:00Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/test/java/io/prestosql/plugin/jdbc/TestBaseJdbcConfig.java", "diffHunk": "@@ -65,4 +67,21 @@ public void testExplicitPropertyMappings()\n \n         assertEquals(expected.getJdbcTypesMappedToVarchar(), ImmutableSet.of(\"mytype\", \"struct_type1\"));\n     }\n+\n+    @Test\n+    public void testConnectionUrlIsValid()\n+    {\n+        assertThatThrownBy(() -> buildConfig(ImmutableMap.of(\"connection-url\", \"jdbc:\")))\n+                .hasMessageContaining(\"Invalid JDBC URL: must match the following regular expression ^jdbc:[a-z0-9]+:(?s:.*)$\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4566, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}