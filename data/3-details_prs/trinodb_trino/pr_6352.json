{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwNzE4MzM1", "number": 6352, "title": "Support setting TIME TZ and TIMESTAMP TZ in prepared statement", "bodyText": "Support setting TIME WITH TIME ZONE and TIMESTAMP WITH TIME ZONE in prepared statement\nRel #6299", "createdAt": "2020-12-15T21:03:35Z", "url": "https://github.com/trinodb/trino/pull/6352", "merged": true, "mergeCommit": {"oid": "2d05939e4baf711bb4b39fda2ecd8e868c16e55f"}, "closed": true, "closedAt": "2020-12-16T16:23:02Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmg5cmABqjQxMTY2NTAwMjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmuTJLAFqTU1MzY0OTA2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyODcxNzQ4", "url": "https://github.com/trinodb/trino/pull/6352#pullrequestreview-552871748", "createdAt": "2020-12-15T21:05:02Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMTowNTowMlrOIGf61A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMTowNjoyMlrOIGf9yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY4NTMzMg==", "bodyText": "#6299", "url": "https://github.com/trinodb/trino/pull/6352#discussion_r543685332", "createdAt": "2020-12-15T21:05:02Z", "author": {"login": "findepi"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoPreparedStatement.java", "diffHunk": "@@ -410,6 +410,26 @@ private String toTimestampLiteral(Object value)\n         throw invalidConversion(value, \"timestamp\");\n     }\n \n+    private void setAsTimestampWithTimeZone(int parameterIndex, Object value)\n+            throws SQLException\n+    {\n+        requireNonNull(value, \"value is null\");\n+\n+        String literal = toTimestampWithTimeZoneLiteral(value);\n+        setParameter(parameterIndex, formatLiteral(\"TIMESTAMP\", literal));\n+    }\n+\n+    private String toTimestampWithTimeZoneLiteral(Object value)\n+            throws SQLException\n+    {\n+        // TODO (https://github.com/prestosql/presto/issues/6299) support ZonedDateTime", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY4NTUxMg==", "bodyText": "#6351", "url": "https://github.com/trinodb/trino/pull/6352#discussion_r543685512", "createdAt": "2020-12-15T21:05:20Z", "author": {"login": "findepi"}, "path": "presto-jdbc/src/test/java/io/prestosql/jdbc/TestJdbcPreparedStatement.java", "diffHunk": "@@ -801,6 +806,56 @@ public void testConvertTime()\n                 .roundTripsAs(Types.TIME, timeWithMillisecond);\n     }\n \n+    @Test\n+    public void testConvertTimeWithTimeZone()\n+            throws SQLException\n+    {\n+        // zero fraction\n+        assertBind((ps, i) -> ps.setObject(i, OffsetTime.of(12, 34, 56, 0, UTC), Types.TIME_WITH_TIMEZONE))\n+                .resultsIn(\"time(0) with time zone\", \"TIME '12:34:56+00:00'\")\n+                .roundTripsAs(Types.TIME_WITH_TIMEZONE, toSqlTime(LocalTime.of(5, 34, 56)));\n+\n+        // setObject with implicit type\n+        assertBind((ps, i) -> ps.setObject(i, OffsetTime.of(12, 34, 56, 0, UTC)))\n+                .resultsIn(\"time(0) with time zone\", \"TIME '12:34:56+00:00'\");\n+\n+        // setObject with JDBCType\n+        assertBind((ps, i) -> ps.setObject(i, OffsetTime.of(12, 34, 56, 0, UTC), JDBCType.TIME_WITH_TIMEZONE))\n+                .resultsIn(\"time(0) with time zone\", \"TIME '12:34:56+00:00'\");\n+\n+        // millisecond precision\n+        assertBind((ps, i) -> ps.setObject(i, OffsetTime.of(12, 34, 56, 555_000_000, UTC), Types.TIME_WITH_TIMEZONE))\n+                .resultsIn(\"time(3) with time zone\", \"TIME '12:34:56.555+00:00'\")\n+                .roundTripsAs(Types.TIME_WITH_TIMEZONE, toSqlTime(LocalTime.of(5, 34, 56, 555_000_000)));\n+\n+        // microsecond precision\n+        assertBind((ps, i) -> ps.setObject(i, OffsetTime.of(12, 34, 56, 555_555_000, UTC), Types.TIME_WITH_TIMEZONE))\n+                .resultsIn(\"time(6) with time zone\", \"TIME '12:34:56.555555+00:00'\")\n+                .roundTripsAs(Types.TIME_WITH_TIMEZONE, toSqlTime(LocalTime.of(5, 34, 56, 556_000_000)));\n+\n+        // nanosecond precision\n+        assertBind((ps, i) -> ps.setObject(i, OffsetTime.of(12, 34, 56, 555_555_555, UTC), Types.TIME_WITH_TIMEZONE))\n+                .resultsIn(\"time(9) with time zone\", \"TIME '12:34:56.555555555+00:00'\")\n+                .roundTripsAs(Types.TIME_WITH_TIMEZONE, toSqlTime(LocalTime.of(5, 34, 56, 556_000_000)));\n+\n+        // positive offset\n+        assertBind((ps, i) -> ps.setObject(i, OffsetTime.of(12, 34, 56, 123_456_789, ZoneOffset.ofHoursMinutes(7, 35)), Types.TIME_WITH_TIMEZONE))\n+                .resultsIn(\"time(9) with time zone\", \"TIME '12:34:56.123456789+07:35'\");\n+        // TODO (https://github.com/prestosql/presto/issues/6351) the result is not as expected here:", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY4NjA5MQ==", "bodyText": "#6299", "url": "https://github.com/trinodb/trino/pull/6352#discussion_r543686091", "createdAt": "2020-12-15T21:06:22Z", "author": {"login": "findepi"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoPreparedStatement.java", "diffHunk": "@@ -544,6 +596,10 @@ else if (x instanceof LocalDate) {\n         else if (x instanceof Time) {\n             setTime(parameterIndex, (Time) x);\n         }\n+        // TODO (https://github.com/prestosql/presto/issues/6299) LocalTime -> setAsTime", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 105}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fa3af393ab585769ddb04d248ce06548fd5fe2e", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/3fa3af393ab585769ddb04d248ce06548fd5fe2e", "committedDate": "2020-12-15T21:15:35Z", "message": "Add TimeWithTimeZoneType.isShort"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdbb3928bb6138428560cd2562062ce336c06240", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/bdbb3928bb6138428560cd2562062ce336c06240", "committedDate": "2020-12-15T21:15:36Z", "message": "Remove redundant formatter option"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b7e3f5ef8a641694a71fe8e81fb1bdda4cfe711", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/6b7e3f5ef8a641694a71fe8e81fb1bdda4cfe711", "committedDate": "2020-12-15T21:15:37Z", "message": "Swap actual/expected in assertion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ba193eaba71572f1657251c01f8bc23045a35b5", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/8ba193eaba71572f1657251c01f8bc23045a35b5", "committedDate": "2020-12-15T21:15:38Z", "message": "Support setting TIME TZ & OffsetTime in prepared statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "582480a99f9f893db093dc18dfb6c15df535b0f3", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/582480a99f9f893db093dc18dfb6c15df535b0f3", "committedDate": "2020-12-15T21:15:39Z", "message": "Support setting TIMESTAMP TZ in prepared statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a94e011b44b706cbd55caffb4bce1fff875cc83a", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/a94e011b44b706cbd55caffb4bce1fff875cc83a", "committedDate": "2020-12-15T21:15:40Z", "message": "Remove redundant else"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "a94e011b44b706cbd55caffb4bce1fff875cc83a", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/a94e011b44b706cbd55caffb4bce1fff875cc83a", "committedDate": "2020-12-15T21:15:40Z", "message": "Remove redundant else"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNjQ3MjM1", "url": "https://github.com/trinodb/trino/pull/6352#pullrequestreview-553647235", "createdAt": "2020-12-16T12:40:09Z", "commit": {"oid": "8ba193eaba71572f1657251c01f8bc23045a35b5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjo0MDoxMFrOIHDYaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjo0MDoxMFrOIHDYaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI2NjM0Nw==", "bodyText": "Can you just use OFFSET_TIME_FORMATTER.parse() for that?", "url": "https://github.com/trinodb/trino/pull/6352#discussion_r544266347", "createdAt": "2020-12-16T12:40:10Z", "author": {"login": "losipiuk"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoPreparedStatement.java", "diffHunk": "@@ -343,6 +350,28 @@ private String toTimeLiteral(Object value)\n         throw invalidConversion(value, \"time\");\n     }\n \n+    private void setAsTimeWithTimeZone(int parameterIndex, Object value)\n+            throws SQLException\n+    {\n+        requireNonNull(value, \"value is null\");\n+\n+        String literal = toTimeWithTimeZoneLiteral(value);\n+        setParameter(parameterIndex, formatLiteral(\"TIME\", literal));\n+    }\n+\n+    private String toTimeWithTimeZoneLiteral(Object value)\n+            throws SQLException\n+    {\n+        if (value instanceof OffsetTime) {\n+            return OFFSET_TIME_FORMATTER.format((OffsetTime) value);\n+        }\n+        if (value instanceof String) {\n+            // TODO validate proper format", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ba193eaba71572f1657251c01f8bc23045a35b5"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNjQ5MDY0", "url": "https://github.com/trinodb/trino/pull/6352#pullrequestreview-553649064", "createdAt": "2020-12-16T12:42:54Z", "commit": {"oid": "a94e011b44b706cbd55caffb4bce1fff875cc83a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1845, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}