{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1ODE0Njcy", "number": 2846, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxNTo0NDoyMVrODgOCtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxNTo0NDoyMVrODgOCtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTExMDk1OnYy", "diffSide": "RIGHT", "path": "presto-spi/src/main/java/io/prestosql/spi/type/AbstractIntType.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxNTo0NDoyMVrOFqUBIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwODo1NzozNFrOFw9BzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxMjQ4MA==", "bodyText": "toIntExact(value) ?", "url": "https://github.com/trinodb/trino/pull/2846#discussion_r379912480", "createdAt": "2020-02-16T15:44:21Z", "author": {"login": "wendigo"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/AbstractIntType.java", "diffHunk": "@@ -64,6 +67,13 @@ public final Slice getSlice(Block block, int position)\n     @Override\n     public void writeLong(BlockBuilder blockBuilder, long value)\n     {\n+        if (value > Integer.MAX_VALUE) {\n+            throw new PrestoException(GENERIC_INTERNAL_ERROR, format(\"Value %d exceeds MAX_INT\", value));\n+        }\n+        if (value < Integer.MIN_VALUE) {\n+            throw new PrestoException(GENERIC_INTERNAL_ERROR, format(\"Value %d is less than MIN_INT\", value));\n+        }\n+\n         blockBuilder.writeInt((int) value).closeEntry();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d14827bba0f6f96f889483257bfcef4bd602a2a6"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyMDk5Mg==", "bodyText": "The value is already verified explicitly above, so not needed. Also, intellij recognizes this and doesn't emit a warning here.", "url": "https://github.com/trinodb/trino/pull/2846#discussion_r379920992", "createdAt": "2020-02-16T17:53:52Z", "author": {"login": "findepi"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/AbstractIntType.java", "diffHunk": "@@ -64,6 +67,13 @@ public final Slice getSlice(Block block, int position)\n     @Override\n     public void writeLong(BlockBuilder blockBuilder, long value)\n     {\n+        if (value > Integer.MAX_VALUE) {\n+            throw new PrestoException(GENERIC_INTERNAL_ERROR, format(\"Value %d exceeds MAX_INT\", value));\n+        }\n+        if (value < Integer.MIN_VALUE) {\n+            throw new PrestoException(GENERIC_INTERNAL_ERROR, format(\"Value %d is less than MIN_INT\", value));\n+        }\n+\n         blockBuilder.writeInt((int) value).closeEntry();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxMjQ4MA=="}, "originalCommit": {"oid": "d14827bba0f6f96f889483257bfcef4bd602a2a6"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIyMTI0MA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/trinodb/trino/pull/2846#discussion_r380221240", "createdAt": "2020-02-17T14:44:44Z", "author": {"login": "wendigo"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/AbstractIntType.java", "diffHunk": "@@ -64,6 +67,13 @@ public final Slice getSlice(Block block, int position)\n     @Override\n     public void writeLong(BlockBuilder blockBuilder, long value)\n     {\n+        if (value > Integer.MAX_VALUE) {\n+            throw new PrestoException(GENERIC_INTERNAL_ERROR, format(\"Value %d exceeds MAX_INT\", value));\n+        }\n+        if (value < Integer.MIN_VALUE) {\n+            throw new PrestoException(GENERIC_INTERNAL_ERROR, format(\"Value %d is less than MIN_INT\", value));\n+        }\n+\n         blockBuilder.writeInt((int) value).closeEntry();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxMjQ4MA=="}, "originalCommit": {"oid": "d14827bba0f6f96f889483257bfcef4bd602a2a6"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMwMjE2Mw==", "bodyText": "I've seen that. Wasn't that on purpose (I guess not)?", "url": "https://github.com/trinodb/trino/pull/2846#discussion_r386302163", "createdAt": "2020-03-02T10:12:40Z", "author": {"login": "sopel39"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/AbstractIntType.java", "diffHunk": "@@ -64,6 +67,13 @@ public final Slice getSlice(Block block, int position)\n     @Override\n     public void writeLong(BlockBuilder blockBuilder, long value)\n     {\n+        if (value > Integer.MAX_VALUE) {\n+            throw new PrestoException(GENERIC_INTERNAL_ERROR, format(\"Value %d exceeds MAX_INT\", value));\n+        }\n+        if (value < Integer.MIN_VALUE) {\n+            throw new PrestoException(GENERIC_INTERNAL_ERROR, format(\"Value %d is less than MIN_INT\", value));\n+        }\n+\n         blockBuilder.writeInt((int) value).closeEntry();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxMjQ4MA=="}, "originalCommit": {"oid": "d14827bba0f6f96f889483257bfcef4bd602a2a6"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3NTg1Mw==", "bodyText": "discussed offline", "url": "https://github.com/trinodb/trino/pull/2846#discussion_r386875853", "createdAt": "2020-03-03T08:57:34Z", "author": {"login": "findepi"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/AbstractIntType.java", "diffHunk": "@@ -64,6 +67,13 @@ public final Slice getSlice(Block block, int position)\n     @Override\n     public void writeLong(BlockBuilder blockBuilder, long value)\n     {\n+        if (value > Integer.MAX_VALUE) {\n+            throw new PrestoException(GENERIC_INTERNAL_ERROR, format(\"Value %d exceeds MAX_INT\", value));\n+        }\n+        if (value < Integer.MIN_VALUE) {\n+            throw new PrestoException(GENERIC_INTERNAL_ERROR, format(\"Value %d is less than MIN_INT\", value));\n+        }\n+\n         blockBuilder.writeInt((int) value).closeEntry();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxMjQ4MA=="}, "originalCommit": {"oid": "d14827bba0f6f96f889483257bfcef4bd602a2a6"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 942, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}