{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MjI2NTE3", "number": 3492, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzoyMDo1NFrOD7VSAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzoyNDozNlrOD7VXLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTQxMjQ5OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/binary.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzoyMDo1NFrOGTl5HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzoyMDo1NFrOGTl5HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE5Njk1Ng==", "bodyText": "Should we mention the extra characters or link to an RFC?", "url": "https://github.com/trinodb/trino/pull/3492#discussion_r423196956", "createdAt": "2020-05-11T17:20:54Z", "author": {"login": "dain"}, "path": "presto-docs/src/main/sphinx/functions/binary.rst", "diffHunk": "@@ -37,77 +53,76 @@ Binary Functions\n     negative starting position is interpreted as being relative to the end of\n     the string.\n \n-.. function:: to_base64(binary) -> varchar\n-\n-    Encodes ``binary`` into a base64 string representation.\n+Base64 Encoding Functions\n+-------------------------\n \n .. function:: from_base64(string) -> varbinary\n \n     Decodes binary data from the base64 encoded ``string``.\n \n-.. function:: to_base64url(binary) -> varchar\n+.. function:: to_base64(binary) -> varchar\n \n-    Encodes ``binary`` into a base64 string representation using the URL safe alphabet.\n+    Encodes ``binary`` into a base64 string representation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTQxNzQ4OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/binary.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzoyMjoyMlrOGTl8Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzoyMjoyMlrOGTl8Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE5Nzc3OA==", "bodyText": "These (int, long, float, double) should mention what happens when binary is greater or less than 4 or 8 bytes", "url": "https://github.com/trinodb/trino/pull/3492#discussion_r423197778", "createdAt": "2020-05-11T17:22:22Z", "author": {"login": "dain"}, "path": "presto-docs/src/main/sphinx/functions/binary.rst", "diffHunk": "@@ -37,77 +53,76 @@ Binary Functions\n     negative starting position is interpreted as being relative to the end of\n     the string.\n \n-.. function:: to_base64(binary) -> varchar\n-\n-    Encodes ``binary`` into a base64 string representation.\n+Base64 Encoding Functions\n+-------------------------\n \n .. function:: from_base64(string) -> varbinary\n \n     Decodes binary data from the base64 encoded ``string``.\n \n-.. function:: to_base64url(binary) -> varchar\n+.. function:: to_base64(binary) -> varchar\n \n-    Encodes ``binary`` into a base64 string representation using the URL safe alphabet.\n+    Encodes ``binary`` into a base64 string representation.\n \n .. function:: from_base64url(string) -> varbinary\n \n     Decodes binary data from the base64 encoded ``string`` using the URL safe alphabet.\n \n-.. function:: to_hex(binary) -> varchar\n+.. function:: to_base64url(binary) -> varchar\n \n-    Encodes ``binary`` into a hex string representation.\n+    Encodes ``binary`` into a base64 string representation using the URL safe alphabet.\n+\n+Hex Encoding Functions\n+----------------------\n \n .. function:: from_hex(string) -> varbinary\n \n     Decodes binary data from the hex encoded ``string``.\n \n-.. function:: to_big_endian_64(bigint) -> varbinary\n+.. function:: to_hex(binary) -> varchar\n \n-    Encodes ``bigint`` in a 64-bit 2's complement big endian format.\n+    Encodes ``binary`` into a hex string representation.\n \n-.. function:: from_big_endian_64(binary) -> bigint\n+Integer Encoding Functions\n+--------------------------\n \n-    Decodes ``bigint`` value from a 64-bit 2's complement big endian ``binary``.\n+.. function:: from_big_endian_32(binary) -> integer\n+\n+    Decodes the 32-bit two's complement big-endian ``binary``.\n \n .. function:: to_big_endian_32(integer) -> varbinary\n \n-    Encodes ``integer`` in a 32-bit 2's complement big endian format.\n+    Encodes ``integer`` into a 32-bit two's complement big-endian format.\n \n-.. function:: from_big_endian_32(binary) -> integer\n+.. function:: from_big_endian_64(binary) -> bigint\n \n-    Decodes ``integer`` value from a 32-bit 2's complement big endian ``binary``.\n+    Decodes the 64-bit two's complement big-endian ``binary``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTQyNTcyOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/binary.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzoyNDozNlrOGTmBlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxOToyNTo0MFrOGWcKOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE5OTEyNw==", "bodyText": "I believe it should be xxHash64", "url": "https://github.com/trinodb/trino/pull/3492#discussion_r423199127", "createdAt": "2020-05-11T17:24:36Z", "author": {"login": "dain"}, "path": "presto-docs/src/main/sphinx/functions/binary.rst", "diffHunk": "@@ -142,18 +153,25 @@ Binary Functions\n \n     Computes the 64-bit SpookyHashV2 hash of ``binary``.\n \n+.. function:: xxhash64(binary) -> varbinary\n+\n+    Computes the xxhash64 hash of ``binary``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 180}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE4MzIyNQ==", "bodyText": "There doesn't seem to be consensus, even from the author, but I agree that the capitalized version looks nicer.", "url": "https://github.com/trinodb/trino/pull/3492#discussion_r426183225", "createdAt": "2020-05-16T19:25:40Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/binary.rst", "diffHunk": "@@ -142,18 +153,25 @@ Binary Functions\n \n     Computes the 64-bit SpookyHashV2 hash of ``binary``.\n \n+.. function:: xxhash64(binary) -> varbinary\n+\n+    Computes the xxhash64 hash of ``binary``.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE5OTEyNw=="}, "originalCommit": null, "originalPosition": 180}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 191, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}