{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5MjA3MDYy", "number": 3347, "title": "Add to Elastic connector IpAddress field", "bodyText": "This allow to retrieve IP fields and filter by a specific value", "createdAt": "2020-04-05T19:14:08Z", "url": "https://github.com/trinodb/trino/pull/3347", "merged": true, "mergeCommit": {"oid": "58dffcd29a4694e7fb01b6e9e68a617affed7f23"}, "closed": true, "closedAt": "2020-04-07T20:58:20Z", "author": {"login": "eskabetxe"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUvP4RgBqjMyMDI4Nzk5MjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVX60KgFqTM4OTM5Nzg5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3ODU1OTU5", "url": "https://github.com/trinodb/trino/pull/3347#pullrequestreview-387855959", "createdAt": "2020-04-05T20:08:31Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDowODozMVrOGBC-zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDowODozMVrOGBC-zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1MDYwNQ==", "bodyText": "see https://prestosql.io/docs/current/language/types.html#ipaddress", "url": "https://github.com/trinodb/trino/pull/3347#discussion_r403750605", "createdAt": "2020-04-05T20:08:31Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/connector/elasticsearch.rst", "diffHunk": "@@ -182,6 +182,7 @@ Elasticsearch Presto\n ``keyword``   ``VARCHAR``\n ``text``      ``VARCHAR``\n ``date``      ``TIMESTAMP``\n+``ip``        ``VARCHAR``", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3OTQ0NjYw", "url": "https://github.com/trinodb/trino/pull/3347#pullrequestreview-387944660", "createdAt": "2020-04-06T05:38:38Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNTozODozOFrOGBIb8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNTozODozOFrOGBIb8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgzOTk4Nw==", "bodyText": "You may want to follow io.prestosql.type.IpAddressOperators#castFromVarcharToIpAddress logic.\n@electrum should we copy the method here? or is there a way to reuse?", "url": "https://github.com/trinodb/trino/pull/3347#discussion_r403839987", "createdAt": "2020-04-06T05:38:38Z", "author": {"login": "findepi"}, "path": "presto-elasticsearch/src/main/java/io/prestosql/elasticsearch/decoders/IpAddressDecoder.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.elasticsearch.decoders;\n+\n+import com.google.common.net.InetAddresses;\n+import io.airlift.slice.Slice;\n+import io.airlift.slice.Slices;\n+import io.prestosql.spi.PrestoException;\n+import io.prestosql.spi.block.BlockBuilder;\n+import io.prestosql.spi.block.BlockBuilderStatus;\n+import io.prestosql.spi.block.PageBuilderStatus;\n+import org.elasticsearch.search.SearchHit;\n+\n+import java.net.Inet6Address;\n+import java.util.function.Supplier;\n+\n+import static io.prestosql.spi.StandardErrorCode.TYPE_MISMATCH;\n+import static io.prestosql.type.IpAddressType.IPADDRESS;\n+import static java.lang.String.format;\n+import static java.util.Objects.requireNonNull;\n+\n+public class IpAddressDecoder\n+        implements Decoder\n+{\n+    private final String path;\n+\n+    public IpAddressDecoder(String path)\n+    {\n+        this.path = requireNonNull(path, \"path is null\");\n+    }\n+\n+    @Override\n+    public void decode(SearchHit hit, Supplier<Object> getter, BlockBuilder output)\n+    {\n+        Object value = getter.get();\n+        if (value == null) {\n+            output.appendNull();\n+        }\n+        else if (value instanceof String) {\n+            String address = (String) value;\n+            if (address.contains(\".\")) {\n+                address = \"::\" + address;\n+            }\n+            BlockBuilder blockBuilder = IPADDRESS.createFixedSizeBlockBuilder(1);\n+            Slice slice = Slices.wrappedBuffer(InetAddresses.forString(address).getAddress());\n+            IPADDRESS.writeSlice(blockBuilder, slice);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MDAzMTM4", "url": "https://github.com/trinodb/trino/pull/3347#pullrequestreview-388003138", "createdAt": "2020-04-06T07:44:32Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNzo0NDozMlrOGBLb3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNzo0NDozMlrOGBLb3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg4OTExOQ==", "bodyText": "I understand this is just temporary change.\nThis will need to be reverted, but let's focus on this once you get things working.\n(#3347 (comment))", "url": "https://github.com/trinodb/trino/pull/3347#discussion_r403889119", "createdAt": "2020-04-06T07:44:32Z", "author": {"login": "findepi"}, "path": "presto-elasticsearch/pom.xml", "diffHunk": "@@ -303,20 +303,18 @@\n         <dependency>\n             <groupId>org.testcontainers</groupId>\n             <artifactId>elasticsearch</artifactId>\n-            <version>1.12.3</version>\n             <scope>test</scope>\n         </dependency>\n \n         <dependency>\n             <groupId>io.prestosql</groupId>\n             <artifactId>presto-client</artifactId>\n-            <scope>test</scope>\n         </dependency>\n \n+\n         <dependency>\n             <groupId>io.prestosql</groupId>\n             <artifactId>presto-main</artifactId>\n-            <scope>test</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5Mzc2MzMz", "url": "https://github.com/trinodb/trino/pull/3347#pullrequestreview-389376333", "createdAt": "2020-04-07T18:21:06Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODoyMTowNlrOGCQZHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODoyMTo0N1rOGCQaxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxODkwOA==", "bodyText": "Nit: use a regular comment, not javadoc:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                  *this is a copy of IpAddressOperators.castFromVarcharToIpAddress method\n          \n          \n            \n                  */\n          \n          \n            \n                // This is a copy of IpAddressOperators.castFromVarcharToIpAddress method", "url": "https://github.com/trinodb/trino/pull/3347#discussion_r405018908", "createdAt": "2020-04-07T18:21:06Z", "author": {"login": "martint"}, "path": "presto-elasticsearch/src/main/java/io/prestosql/elasticsearch/decoders/IpAddressDecoder.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.elasticsearch.decoders;\n+\n+import com.google.common.net.InetAddresses;\n+import io.airlift.slice.Slice;\n+import io.airlift.slice.Slices;\n+import io.prestosql.spi.PrestoException;\n+import io.prestosql.spi.block.BlockBuilder;\n+import io.prestosql.spi.type.Type;\n+import org.elasticsearch.search.SearchHit;\n+\n+import java.util.function.Supplier;\n+\n+import static io.airlift.slice.Slices.wrappedBuffer;\n+import static io.prestosql.spi.StandardErrorCode.GENERIC_INTERNAL_ERROR;\n+import static io.prestosql.spi.StandardErrorCode.INVALID_CAST_ARGUMENT;\n+import static io.prestosql.spi.StandardErrorCode.TYPE_MISMATCH;\n+import static java.lang.String.format;\n+import static java.lang.System.arraycopy;\n+import static java.util.Objects.requireNonNull;\n+\n+public class IpAddressDecoder\n+        implements Decoder\n+{\n+    private final String path;\n+    private final Type ipAddressType;\n+\n+    public IpAddressDecoder(String path, Type type)\n+    {\n+        this.path = requireNonNull(path, \"path is null\");\n+        this.ipAddressType = requireNonNull(type, \"type is null\");\n+    }\n+\n+    @Override\n+    public void decode(SearchHit hit, Supplier<Object> getter, BlockBuilder output)\n+    {\n+        Object value = getter.get();\n+        if (value == null) {\n+            output.appendNull();\n+        }\n+        else if (value instanceof String) {\n+            String address = (String) value;\n+            Slice slice = castToIpAddress(Slices.utf8Slice(address));\n+            ipAddressType.writeSlice(output, slice);\n+        }\n+        else {\n+            throw new PrestoException(TYPE_MISMATCH, format(\"Expected a string value for field '%s' of type IP: %s [%s]\", path, value, value.getClass().getSimpleName()));\n+        }\n+    }\n+\n+    /**\n+      *this is a copy of IpAddressOperators.castFromVarcharToIpAddress method\n+      */", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxOTA4NQ==", "bodyText": "Unrelated changes?", "url": "https://github.com/trinodb/trino/pull/3347#discussion_r405019085", "createdAt": "2020-04-07T18:21:24Z", "author": {"login": "martint"}, "path": "presto-elasticsearch/pom.xml", "diffHunk": "@@ -331,18 +330,6 @@\n             <scope>test</scope>\n         </dependency>\n \n-        <dependency>\n-            <groupId>io.airlift</groupId>\n-            <artifactId>http-server</artifactId>\n-            <scope>test</scope>\n-        </dependency>\n-\n-        <dependency>\n-            <groupId>io.airlift</groupId>\n-            <artifactId>node</artifactId>\n-            <scope>test</scope>\n-        </dependency>\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxOTE3OQ==", "bodyText": "Unrelated change?", "url": "https://github.com/trinodb/trino/pull/3347#discussion_r405019179", "createdAt": "2020-04-07T18:21:34Z", "author": {"login": "martint"}, "path": "presto-elasticsearch/pom.xml", "diffHunk": "@@ -355,12 +342,6 @@\n             <scope>test</scope>\n         </dependency>\n \n-        <dependency>\n-            <groupId>javax.servlet</groupId>\n-            <artifactId>javax.servlet-api</artifactId>\n-            <scope>test</scope>\n-        </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxOTMzMg==", "bodyText": "Unrelated change?", "url": "https://github.com/trinodb/trino/pull/3347#discussion_r405019332", "createdAt": "2020-04-07T18:21:47Z", "author": {"login": "martint"}, "path": "presto-elasticsearch/pom.xml", "diffHunk": "@@ -303,7 +303,6 @@\n         <dependency>\n             <groupId>org.testcontainers</groupId>\n             <artifactId>elasticsearch</artifactId>\n-            <version>1.12.3</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f18922922a024a32ca862f2080ffa50d0065cc1", "author": {"user": {"login": "eskabetxe", "name": "Joao Boto"}}, "url": "https://github.com/trinodb/trino/commit/0f18922922a024a32ca862f2080ffa50d0065cc1", "committedDate": "2020-04-07T18:41:09Z", "message": "Add to Elastic connector IpAddress field"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "0f18922922a024a32ca862f2080ffa50d0065cc1", "author": {"user": {"login": "eskabetxe", "name": "Joao Boto"}}, "url": "https://github.com/trinodb/trino/commit/0f18922922a024a32ca862f2080ffa50d0065cc1", "committedDate": "2020-04-07T18:41:09Z", "message": "Add to Elastic connector IpAddress field"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5Mzk3ODk0", "url": "https://github.com/trinodb/trino/pull/3347#pullrequestreview-389397894", "createdAt": "2020-04-07T18:50:33Z", "commit": {"oid": "0f18922922a024a32ca862f2080ffa50d0065cc1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1776, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}