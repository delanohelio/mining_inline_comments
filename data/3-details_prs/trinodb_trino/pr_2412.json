{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MzM0NjE3", "number": 2412, "title": "Do not allocate resources within test constructor", "bodyText": "", "createdAt": "2020-01-05T20:41:39Z", "url": "https://github.com/trinodb/trino/pull/2412", "merged": true, "mergeCommit": {"oid": "ac3ad8824b69ca6fa595f6a098f0d642e7b60079"}, "closed": true, "closedAt": "2020-01-18T07:08:10Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb3d1QjgBqjI5MjI2Nzg4OTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb7WeRLABqjI5NTk2NzUyNTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNTc0NjU0", "url": "https://github.com/trinodb/trino/pull/2412#pullrequestreview-341574654", "createdAt": "2020-01-12T13:14:37Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxMzoxNDozN1rOFcpYVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxMzoxOTo0MVrOFcpZmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU4MjQyMA==", "bodyText": "I guess you considered putting this method to createQueryRunner like TestGoogleSheets. Do you think splitting like this is better than defining with the method? I'm asking this question for the consistency.", "url": "https://github.com/trinodb/trino/pull/2412#discussion_r365582420", "createdAt": "2020-01-12T13:14:37Z", "author": {"login": "ebyhr"}, "path": "presto-tests/src/test/java/io/prestosql/tests/TestDictionaryAggregation.java", "diffHunk": "@@ -26,18 +28,19 @@\n public class TestDictionaryAggregation\n         extends AbstractTestQueryFramework\n {\n-    public TestDictionaryAggregation()\n+    @Override\n+    protected QueryRunner createQueryRunner()\n     {\n-        super(() -> {\n-            LocalQueryRunner queryRunner = LocalQueryRunner.create(testSessionBuilder()\n-                    .setSystemProperty(DICTIONARY_AGGREGATION, \"true\")\n-                    .setSystemProperty(REORDER_JOINS, \"false\") // no JOIN reordering\n-                    .build());\n-\n-            queryRunner.createCatalog(\"tpch\", new TpchConnectorFactory(1), ImmutableMap.of());\n+        return LocalQueryRunner.create(testSessionBuilder()\n+                .setSystemProperty(DICTIONARY_AGGREGATION, \"true\")\n+                .setSystemProperty(REORDER_JOINS, \"false\") // no JOIN reordering\n+                .build());\n+    }\n \n-            return queryRunner;\n-        });\n+    @BeforeClass\n+    public void setUp()\n+    {\n+        ((LocalQueryRunner) getQueryRunner()).createCatalog(\"tpch\", new TpchConnectorFactory(1), ImmutableMap.of());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU4MjczMA==", "bodyText": "nit: This static import should be separated commit or written in commit description. How about creating a commit to import createXXXQueryRunner method as static including other classes?", "url": "https://github.com/trinodb/trino/pull/2412#discussion_r365582730", "createdAt": "2020-01-12T13:19:15Z", "author": {"login": "ebyhr"}, "path": "presto-accumulo/src/test/java/io/prestosql/plugin/accumulo/TestAccumuloIntegrationSmokeTest.java", "diffHunk": "@@ -16,15 +16,19 @@\n import com.google.common.collect.ImmutableMap;\n import io.prestosql.testing.AbstractTestIntegrationSmokeTest;\n import io.prestosql.testing.MaterializedResult;\n+import io.prestosql.testing.QueryRunner;\n \n+import static io.prestosql.plugin.accumulo.AccumuloQueryRunner.createAccumuloQueryRunner;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU4Mjc0NA==", "bodyText": "nit: same as the above", "url": "https://github.com/trinodb/trino/pull/2412#discussion_r365582744", "createdAt": "2020-01-12T13:19:41Z", "author": {"login": "ebyhr"}, "path": "presto-kudu/src/test/java/io/prestosql/plugin/kudu/TestKuduIntegrationSmoke.java", "diffHunk": "@@ -17,22 +17,26 @@\n import io.prestosql.testing.AbstractTestIntegrationSmokeTest;\n import io.prestosql.testing.MaterializedResult;\n import io.prestosql.testing.MaterializedRow;\n+import io.prestosql.testing.QueryRunner;\n import org.testng.annotations.AfterClass;\n import org.testng.annotations.Test;\n \n import java.util.regex.Pattern;\n \n import static io.airlift.tpch.TpchTable.ORDERS;\n+import static io.prestosql.plugin.kudu.KuduQueryRunnerFactory.createKuduQueryRunnerTpch;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7e68c9540f97f42292f674d3b47a45eb30e801c", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/c7e68c9540f97f42292f674d3b47a45eb30e801c", "committedDate": "2020-01-17T22:26:59Z", "message": "Do not allocate resources within test constructor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be2ae7af4fce735a44db5d991d5624fd8fbc58f8", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/be2ae7af4fce735a44db5d991d5624fd8fbc58f8", "committedDate": "2020-01-17T22:26:59Z", "message": "Do not allocate resources in AbstractTestQueries' constructors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "242d633b2915532e6e8fa6356dbf83ce3e141d9c", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/242d633b2915532e6e8fa6356dbf83ce3e141d9c", "committedDate": "2020-01-17T22:26:59Z", "message": "Do not allocate resources in AbstractTestIntegrationSmokeTest's constructors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3b2a0ac8eb8873636d90b9c0e5c1bc389489abf", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/c3b2a0ac8eb8873636d90b9c0e5c1bc389489abf", "committedDate": "2020-01-17T22:26:59Z", "message": "Inline variable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f68007d9e8eb2b87d773d9a9e485bd46a55ad9b", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/2f68007d9e8eb2b87d773d9a9e485bd46a55ad9b", "committedDate": "2020-01-17T22:26:59Z", "message": "Remove obsolete queryRunnerSupplier field"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "2f68007d9e8eb2b87d773d9a9e485bd46a55ad9b", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/2f68007d9e8eb2b87d773d9a9e485bd46a55ad9b", "committedDate": "2020-01-17T22:26:59Z", "message": "Remove obsolete queryRunnerSupplier field"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1024, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}