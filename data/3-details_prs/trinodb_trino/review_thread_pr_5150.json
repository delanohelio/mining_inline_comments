{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2MTMxOTYz", "number": 5150, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNzo0MzoxN1rOEjAF2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0xNlQxNjoxNjoxN1rOGivs2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MTM3MTEyOnYy", "diffSide": "RIGHT", "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/CassandraType.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNzo0MzoxN1rOHRHpEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNzo0MzoxN1rOHRHpEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzcxMzA0MQ==", "bodyText": "prestoNativeValue for date will be number of days since epoch\nin the getColumnValueForCql(Row row, int position) above we use yyyy-mm-dd representation\ncan we unify the two? if not, why would i quoteStringLiteral the number?", "url": "https://github.com/trinodb/trino/pull/5150#discussion_r487713041", "createdAt": "2020-09-14T07:43:17Z", "author": {"login": "findepi"}, "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/CassandraType.java", "diffHunk": "@@ -334,6 +334,7 @@ public String toCqlLiteral(Object prestoNativeValue)\n             case ASCII:\n             case TEXT:\n             case VARCHAR:\n+            case DATE:", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MTM3NDYzOnYy", "diffSide": "RIGHT", "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/CassandraType.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNzo0NDoxN1rOHRHrJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNzo0NDoxN1rOHRHrJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzcxMzU3NA==", "bodyText": "i tend to put date before timestamp (\"simpler one first\")\nalso, would be nice to put all the inteer types together (TINYINT, SMALLINT, INT, BIGINT)", "url": "https://github.com/trinodb/trino/pull/5150#discussion_r487713574", "createdAt": "2020-09-14T07:44:17Z", "author": {"login": "findepi"}, "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/CassandraType.java", "diffHunk": "@@ -441,9 +442,12 @@ public boolean isSupportedPartitionKey()\n             case DOUBLE:\n             case INET:\n             case INT:\n+            case SMALLINT:\n+            case TINYINT:\n             case FLOAT:\n             case DECIMAL:\n             case TIMESTAMP:\n+            case DATE:", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MTM4MDQ2OnYy", "diffSide": "RIGHT", "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/TestCassandraConnector.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNzo0NTo1NlrOHRHusQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNzo0NTo1NlrOHRHusQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzcxNDQ4MQ==", "bodyText": "split this into 3 separate cases and apply validation on the cursor.getLong result using:\n\ncom.google.common.primitives.SignedBytes#checkedCast\ncom.google.common.primitives.Shorts#checkedCast\njava.lang.Math#toIntExact", "url": "https://github.com/trinodb/trino/pull/5150#discussion_r487714481", "createdAt": "2020-09-14T07:45:56Z", "author": {"login": "findepi"}, "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/TestCassandraConnector.java", "diffHunk": "@@ -213,7 +216,7 @@ private static void assertReadFields(RecordCursor cursor, List<ColumnMetadata> s\n                 if (BOOLEAN.equals(type)) {\n                     cursor.getBoolean(columnIndex);\n                 }\n-                else if (INTEGER.equals(type)) {\n+                else if (TINYINT.equals(type) || SMALLINT.equals(type) || INTEGER.equals(type)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MTM4ODM3OnYy", "diffSide": "RIGHT", "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/TestCassandraConnector.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNzo0ODowMlrOHRHzNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNzo0ODowMlrOHRHzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzcxNTYzNg==", "bodyText": "Why would i call cursor.getSlice for a DATE value (backed by long, in 32-bit int range)?", "url": "https://github.com/trinodb/trino/pull/5150#discussion_r487715636", "createdAt": "2020-09-14T07:48:02Z", "author": {"login": "findepi"}, "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/TestCassandraConnector.java", "diffHunk": "@@ -228,7 +231,7 @@ else if (DOUBLE.equals(type)) {\n                 else if (REAL.equals(type)) {\n                     cursor.getLong(columnIndex);\n                 }\n-                else if (isVarcharType(type) || VARBINARY.equals(type)) {\n+                else if (isVarcharType(type) || VARBINARY.equals(type) || DateType.DATE.equals(type)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDM5MDg2Mjk2OnYy", "diffSide": "RIGHT", "path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraType.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0xNlQxNjoxNjoxN1rOKRudag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0xN1QxMzoxNjo0MlrOKSYNtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4OTY3NTYyNg==", "bodyText": "Seems like these two types already had the necessary code implemented?", "url": "https://github.com/trinodb/trino/pull/5150#discussion_r689675626", "createdAt": "2021-08-16T16:16:17Z", "author": {"login": "hashhar"}, "path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraType.java", "diffHunk": "@@ -443,8 +448,11 @@ public boolean isSupportedPartitionKey()\n             case DOUBLE:\n             case INET:\n             case INT:\n+            case TINYINT:\n+            case SMALLINT:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd42b069ae1179de4db284661d0a21e6236a0fa1"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDM1OTczMg==", "bodyText": "Yes, I simply forgot updating this switch statements when adding those types.", "url": "https://github.com/trinodb/trino/pull/5150#discussion_r690359732", "createdAt": "2021-08-17T13:16:42Z", "author": {"login": "ebyhr"}, "path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraType.java", "diffHunk": "@@ -443,8 +448,11 @@ public boolean isSupportedPartitionKey()\n             case DOUBLE:\n             case INET:\n             case INT:\n+            case TINYINT:\n+            case SMALLINT:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4OTY3NTYyNg=="}, "originalCommit": {"oid": "bd42b069ae1179de4db284661d0a21e6236a0fa1"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3203, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}