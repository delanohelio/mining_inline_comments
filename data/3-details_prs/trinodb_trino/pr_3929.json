{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4Mzc0MTgw", "number": 3929, "title": "Eliminate redundant parameter extraction", "bodyText": "ParameterExtractor has similar implementations for getParameterCount and getParameters. The former method can make use of the getParameters to get the size of parameters.", "createdAt": "2020-06-05T10:48:28Z", "url": "https://github.com/trinodb/trino/pull/3929", "merged": true, "mergeCommit": {"oid": "7ea4fc473715ab316113241df9ab7db420c60b65"}, "closed": true, "closedAt": "2020-06-08T08:46:15Z", "author": {"login": "Lewuathe"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoRb5zgFqTQyNTIzNjEwNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpMbQ2gFqTQyNjAyNTcyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1MjM2MTA0", "url": "https://github.com/trinodb/trino/pull/3929#pullrequestreview-425236104", "createdAt": "2020-06-05T12:01:02Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjowMTowMlrOGfrqzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjowMTowMlrOGfrqzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg3NDUxMQ==", "bodyText": "Can you explicitly specify expected number of parameters. 0 for the first test and 2 for the second?\nThe rename this method to assertParameterCount", "url": "https://github.com/trinodb/trino/pull/3929#discussion_r435874511", "createdAt": "2020-06-05T12:01:02Z", "author": {"login": "losipiuk"}, "path": "presto-main/src/test/java/io/prestosql/execution/TestParameterExtractor.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.execution;\n+\n+import io.prestosql.sql.parser.ParsingOptions;\n+import io.prestosql.sql.parser.SqlParser;\n+import io.prestosql.sql.tree.Parameter;\n+import io.prestosql.sql.tree.Statement;\n+import org.testng.annotations.Test;\n+\n+import java.util.List;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestParameterExtractor\n+{\n+    private final SqlParser sqlParser = new SqlParser();\n+\n+    @Test\n+    public void testNoParameter()\n+    {\n+        Statement statement = sqlParser.createStatement(\"SELECT c1, c2 FROM test_table WHERE c1 = 1 AND c2 > 2\", new ParsingOptions());\n+        assertEqualParameterCount(statement);\n+    }\n+\n+    @Test\n+    public void testParameterCount()\n+    {\n+        Statement statement = sqlParser.createStatement(\"SELECT c1, c2 FROM test_table WHERE c1 = ? AND c2 > ?\", new ParsingOptions());\n+        assertEqualParameterCount(statement);\n+    }\n+\n+    private void assertEqualParameterCount(Statement statement)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 44}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NTUzOTM2", "url": "https://github.com/trinodb/trino/pull/3929#pullrequestreview-425553936", "createdAt": "2020-06-05T19:04:33Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxOTowNDozM1rOGf6H7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxOTowNTowNFrOGf6I5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjExMTM0Mw==", "bodyText": "It's generally better to be explicit about what's being tested. Readability of this test could be improved by doing this:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertParameterCount(statement, 0);\n          \n          \n            \n                    assertThat(ParameterExtractor.getParameters(statement)).isEmpty();\n          \n          \n            \n                    assertThat(ParameterExtractor.getParameterCount(statement)).isEqualTo(0);", "url": "https://github.com/trinodb/trino/pull/3929#discussion_r436111343", "createdAt": "2020-06-05T19:04:33Z", "author": {"login": "martint"}, "path": "presto-main/src/test/java/io/prestosql/execution/TestParameterExtractor.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.execution;\n+\n+import io.prestosql.sql.parser.ParsingOptions;\n+import io.prestosql.sql.parser.SqlParser;\n+import io.prestosql.sql.tree.Parameter;\n+import io.prestosql.sql.tree.Statement;\n+import org.testng.annotations.Test;\n+\n+import java.util.List;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestParameterExtractor\n+{\n+    private final SqlParser sqlParser = new SqlParser();\n+\n+    @Test\n+    public void testNoParameter()\n+    {\n+        Statement statement = sqlParser.createStatement(\"SELECT c1, c2 FROM test_table WHERE c1 = 1 AND c2 > 2\", new ParsingOptions());\n+        assertParameterCount(statement, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjExMTU4OA==", "bodyText": "Similarly, for this test:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertParameterCount(statement, 2);\n          \n          \n            \n                    assertThat(ParameterExtractor.getParameters(statement))\n          \n          \n            \n                            .containsExactly(\n          \n          \n            \n                                    new Parameter(new NodeLocation(1, 41), 0),\n          \n          \n            \n                                    new Parameter(new NodeLocation(1, 52), 1));\n          \n          \n            \n            \n          \n          \n            \n                            assertThat(ParameterExtractor.getParameterCount(statement)).isEqualTo(2);", "url": "https://github.com/trinodb/trino/pull/3929#discussion_r436111588", "createdAt": "2020-06-05T19:05:04Z", "author": {"login": "martint"}, "path": "presto-main/src/test/java/io/prestosql/execution/TestParameterExtractor.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.execution;\n+\n+import io.prestosql.sql.parser.ParsingOptions;\n+import io.prestosql.sql.parser.SqlParser;\n+import io.prestosql.sql.tree.Parameter;\n+import io.prestosql.sql.tree.Statement;\n+import org.testng.annotations.Test;\n+\n+import java.util.List;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestParameterExtractor\n+{\n+    private final SqlParser sqlParser = new SqlParser();\n+\n+    @Test\n+    public void testNoParameter()\n+    {\n+        Statement statement = sqlParser.createStatement(\"SELECT c1, c2 FROM test_table WHERE c1 = 1 AND c2 > 2\", new ParsingOptions());\n+        assertParameterCount(statement, 0);\n+    }\n+\n+    @Test\n+    public void testParameterCount()\n+    {\n+        Statement statement = sqlParser.createStatement(\"SELECT c1, c2 FROM test_table WHERE c1 = ? AND c2 > ?\", new ParsingOptions());\n+        assertParameterCount(statement, 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "775899ea095b7a2876dfb8604068f28a97af651c", "author": {"user": {"login": "Lewuathe", "name": "Kai Sasaki"}}, "url": "https://github.com/trinodb/trino/commit/775899ea095b7a2876dfb8604068f28a97af651c", "committedDate": "2020-06-06T01:47:59Z", "message": "Eliminate redundant parameter extraction\n\nParameterExtractor has similar implementations for getParameterCount and\ngetParameters. The former method can make use of the getParameters to\nget the size of parameters."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "775899ea095b7a2876dfb8604068f28a97af651c", "author": {"user": {"login": "Lewuathe", "name": "Kai Sasaki"}}, "url": "https://github.com/trinodb/trino/commit/775899ea095b7a2876dfb8604068f28a97af651c", "committedDate": "2020-06-06T01:47:59Z", "message": "Eliminate redundant parameter extraction\n\nParameterExtractor has similar implementations for getParameterCount and\ngetParameters. The former method can make use of the getParameters to\nget the size of parameters."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MDI1NzIw", "url": "https://github.com/trinodb/trino/pull/3929#pullrequestreview-426025720", "createdAt": "2020-06-08T08:45:37Z", "commit": {"oid": "775899ea095b7a2876dfb8604068f28a97af651c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 566, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}