{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MTM3MTgy", "number": 6141, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwOToyMzo0NFrOE-j-0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwOToyNDowMFrOE-j_Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDM2NjkxOnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/sql/planner/iterative/rule/TestPushAggregationThroughOuterJoin.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwOToyMzo0NFrOH7yMlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwOToyMzo0NFrOH7yMlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ1MDQ1Mg==", "bodyText": "static import LEFT and INNER", "url": "https://github.com/trinodb/trino/pull/6141#discussion_r532450452", "createdAt": "2020-11-30T09:23:44Z", "author": {"login": "sopel39"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/iterative/rule/TestPushAggregationThroughOuterJoin.java", "diffHunk": "@@ -122,6 +122,53 @@ public void testPushesAggregationThroughRightJoin()\n                                                 values(ImmutableMap.of(\"null_literal\", 0))))));\n     }\n \n+    @Test\n+    public void testPushesAggregationWithMask()\n+    {\n+        tester().assertThat(new PushAggregationThroughOuterJoin())\n+                .on(p -> p.aggregation(ab -> ab\n+                        .source(\n+                                p.join(\n+                                        JoinNode.Type.LEFT,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDM2ODAyOnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/sql/planner/iterative/rule/TestPushAggregationThroughOuterJoin.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwOToyNDowMFrOH7yNOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwOToyNDowMFrOH7yNOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ1MDYxNw==", "bodyText": "static import EquiJoinClause", "url": "https://github.com/trinodb/trino/pull/6141#discussion_r532450617", "createdAt": "2020-11-30T09:24:00Z", "author": {"login": "sopel39"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/iterative/rule/TestPushAggregationThroughOuterJoin.java", "diffHunk": "@@ -122,6 +122,53 @@ public void testPushesAggregationThroughRightJoin()\n                                                 values(ImmutableMap.of(\"null_literal\", 0))))));\n     }\n \n+    @Test\n+    public void testPushesAggregationWithMask()\n+    {\n+        tester().assertThat(new PushAggregationThroughOuterJoin())\n+                .on(p -> p.aggregation(ab -> ab\n+                        .source(\n+                                p.join(\n+                                        JoinNode.Type.LEFT,\n+                                        p.values(ImmutableList.of(p.symbol(\"COL1\")), ImmutableList.of(expressions(\"10\"))),\n+                                        p.values(p.symbol(\"COL2\"), p.symbol(\"MASK\")),\n+                                        ImmutableList.of(new JoinNode.EquiJoinClause(p.symbol(\"COL1\"), p.symbol(\"COL2\"))),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4710, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}