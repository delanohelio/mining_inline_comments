{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNTA3NTc5", "number": 5768, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQyMzoyMjo1MVrOE0FulQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQyMzoyMjo1MVrOE0FulQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMDU1MjUzOnYy", "diffSide": "LEFT", "path": "presto-spi/src/main/java/io/prestosql/spi/expression/Constant.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQyMzoyMjo1MVrOHrqzVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDowNTozN1rOHr9ueA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU1MjA4Nw==", "bodyText": "Value itself doesn't seem enough for comparison (e.g multiple types can be represented by long). Maybe we should precalculate has value (we do that in other classes where hash computation is expensive)", "url": "https://github.com/trinodb/trino/pull/5768#discussion_r515552087", "createdAt": "2020-10-31T23:22:51Z", "author": {"login": "sopel39"}, "path": "presto-spi/src/main/java/io/prestosql/spi/expression/Constant.java", "diffHunk": "@@ -48,7 +48,7 @@ public Object getValue()\n     @Override\n     public int hashCode()\n     {\n-        return Objects.hash(value, getType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU1ODIxNQ==", "bodyText": "Thanks for the suggestion on caching the value, that makes sense.\nI'm curious if there's a historical reason behind not implementing/precalculating hashcode method in some types (ArrayType, RowType etc).", "url": "https://github.com/trinodb/trino/pull/5768#discussion_r515558215", "createdAt": "2020-11-01T00:37:18Z", "author": {"login": "phd3"}, "path": "presto-spi/src/main/java/io/prestosql/spi/expression/Constant.java", "diffHunk": "@@ -48,7 +48,7 @@ public Object getValue()\n     @Override\n     public int hashCode()\n     {\n-        return Objects.hash(value, getType());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU1MjA4Nw=="}, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY2Nzk5Mg==", "bodyText": "@phd3 is this commit the gist of the change?", "url": "https://github.com/trinodb/trino/pull/5768#discussion_r515667992", "createdAt": "2020-11-01T20:28:37Z", "author": {"login": "findepi"}, "path": "presto-spi/src/main/java/io/prestosql/spi/expression/Constant.java", "diffHunk": "@@ -48,7 +48,7 @@ public Object getValue()\n     @Override\n     public int hashCode()\n     {\n-        return Objects.hash(value, getType());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU1MjA4Nw=="}, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcyNDMxOQ==", "bodyText": "@findepi I think both the commits are crucial, the hashCode issue is more important in context of FieldDereference class.", "url": "https://github.com/trinodb/trino/pull/5768#discussion_r515724319", "createdAt": "2020-11-02T03:31:06Z", "author": {"login": "phd3"}, "path": "presto-spi/src/main/java/io/prestosql/spi/expression/Constant.java", "diffHunk": "@@ -48,7 +48,7 @@ public Object getValue()\n     @Override\n     public int hashCode()\n     {\n-        return Objects.hash(value, getType());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU1MjA4Nw=="}, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg2MjEzNg==", "bodyText": "I'm curious if there's a historical reason behind not implementing/precalculating hashcode method in some types (ArrayType, RowType etc).\n\nWhat do you mean specifically? If you mean particular rows, one would need to keep hashcode in Block itself, which cost memory and might not be that beneficial in general processing", "url": "https://github.com/trinodb/trino/pull/5768#discussion_r515862136", "createdAt": "2020-11-02T10:05:37Z", "author": {"login": "sopel39"}, "path": "presto-spi/src/main/java/io/prestosql/spi/expression/Constant.java", "diffHunk": "@@ -48,7 +48,7 @@ public Object getValue()\n     @Override\n     public int hashCode()\n     {\n-        return Objects.hash(value, getType());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU1MjA4Nw=="}, "originalCommit": null, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4880, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}