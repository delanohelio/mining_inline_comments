{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0MjUxNTgx", "number": 4511, "title": "Add remote Host info to PageTransportErrorException", "bodyText": "This would be useful to identify REMOTE_HOST_GONE for PTEE. For more info look -> prestodb/presto#7691", "createdAt": "2020-07-21T08:11:24Z", "url": "https://github.com/trinodb/trino/pull/4511", "merged": true, "mergeCommit": {"oid": "063a7471aa5996682543505fd9010f90ba534f9f"}, "closed": true, "closedAt": "2020-07-24T16:01:24Z", "author": {"login": "sanchitkashyap"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3BsDCAH2gAyNDU0MjUxNTgxOjMyZjViNmRmOGE3NWIwYjBmYmMyMDAwNmNiMGUzZDk4ZmM2ZjVhNTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4GOchgFqTQ1NTAwNTQ0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "32f5b6df8a75b0b0fbc20006cb0e3d98fc6f5a52", "author": {"user": null}, "url": "https://github.com/trinodb/trino/commit/32f5b6df8a75b0b0fbc20006cb0e3d98fc6f5a52", "committedDate": "2020-07-21T08:09:56Z", "message": "Add remote Host info to PageTransportErrorException"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMjQxNzgx", "url": "https://github.com/trinodb/trino/pull/4511#pullrequestreview-452241781", "createdAt": "2020-07-21T08:33:56Z", "commit": {"oid": "32f5b6df8a75b0b0fbc20006cb0e3d98fc6f5a52"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwODozMzo1N1rOG0tz2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwODozMzo1N1rOG0tz2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkyOTY4OA==", "bodyText": "do we need to pass uri to all those methods? We are catching PageTransportErrorException below anyway and add remote host information there. IMO that should be eough.", "url": "https://github.com/trinodb/trino/pull/4511#discussion_r457929688", "createdAt": "2020-07-21T08:33:57Z", "author": {"login": "losipiuk"}, "path": "presto-main/src/main/java/io/prestosql/operator/HttpPageBufferClient.java", "diffHunk": "@@ -622,22 +623,22 @@ public PagesResponse handle(Request request, Response response)\n                     catch (RuntimeException | IOException e) {\n                         // Ignored. Just return whatever message we were able to decode\n                     }\n-                    throw new PageTransportErrorException(format(\"Expected response code to be 200, but was %s:%n%s\", response.getStatusCode(), body.toString()));\n+                    throw new PageTransportErrorException(fromUri(uri), format(\"Expected response code to be 200, but was %s:%n%s\", response.getStatusCode(), body.toString()));\n                 }\n \n                 // invalid content type can happen when an error page is returned, but is unlikely given the above 200\n                 String contentType = response.getHeader(CONTENT_TYPE);\n                 if (contentType == null) {\n-                    throw new PageTransportErrorException(format(\"%s header is not set: %s\", CONTENT_TYPE, response));\n+                    throw new PageTransportErrorException(fromUri(uri), format(\"%s header is not set: %s\", CONTENT_TYPE, response));\n                 }\n                 if (!mediaTypeMatches(contentType, PRESTO_PAGES_TYPE)) {\n-                    throw new PageTransportErrorException(format(\"Expected %s response from server but got %s\", PRESTO_PAGES_TYPE, contentType));\n+                    throw new PageTransportErrorException(fromUri(uri), format(\"Expected %s response from server but got %s\", PRESTO_PAGES_TYPE, contentType));\n                 }\n \n-                String taskInstanceId = getTaskInstanceId(response);\n-                long token = getToken(response);\n-                long nextToken = getNextToken(response);\n-                boolean complete = getComplete(response);\n+                String taskInstanceId = getTaskInstanceId(response, uri);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32f5b6df8a75b0b0fbc20006cb0e3d98fc6f5a52"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMzkzOTQ0", "url": "https://github.com/trinodb/trino/pull/4511#pullrequestreview-452393944", "createdAt": "2020-07-21T12:14:49Z", "commit": {"oid": "32f5b6df8a75b0b0fbc20006cb0e3d98fc6f5a52"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMjoxNDo0OVrOG01Jwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMjoxNDo0OVrOG01Jwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA0OTk4Ng==", "bodyText": "the change here seems not related to Add remote Host info to PageTransportErrorException\nis it intentional?\nmake this into a separate commit\nalso cc @electrum", "url": "https://github.com/trinodb/trino/pull/4511#discussion_r458049986", "createdAt": "2020-07-21T12:14:49Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/operator/PageTransportErrorException.java", "diffHunk": "@@ -13,20 +13,21 @@\n  */\n package io.prestosql.operator;\n \n-import io.prestosql.spi.PrestoException;\n+import io.prestosql.spi.HostAddress;\n+import io.prestosql.spi.PrestoTransportException;\n \n import static io.prestosql.spi.StandardErrorCode.PAGE_TRANSPORT_ERROR;\n \n public class PageTransportErrorException\n-        extends PrestoException\n+        extends PrestoTransportException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32f5b6df8a75b0b0fbc20006cb0e3d98fc6f5a52"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MDA1NDQ2", "url": "https://github.com/trinodb/trino/pull/4511#pullrequestreview-455005446", "createdAt": "2020-07-24T16:01:03Z", "commit": {"oid": "32f5b6df8a75b0b0fbc20006cb0e3d98fc6f5a52"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4779, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}