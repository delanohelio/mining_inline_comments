{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0NzQyNjcy", "number": 4999, "reviewThreads": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODoyODowMVrOEdVrBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMTozMDozMVrOEkP1zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MTk5MjM3OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODoyODowMVrOHIcSvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODoyODowMVrOHIcSvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxNDIwNg==", "bodyText": "Please change commit message to:\nAllow to configure insert into Hive partition via configuration property\n\nNo need for anything more than that. Please do not mention internal references to issue tracking system.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r478614206", "createdAt": "2020-08-27T18:28:01Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -26,6 +26,7 @@\n import org.joda.time.DateTimeZone;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MTk5MzExOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODoyODoxNVrOHIcTNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNTo0MzowNVrOHJLbRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxNDMyNA==", "bodyText": "Please use enum.\nSee how hiveCompressionCodec is implemented above.\nBy default it should be set to APPEND", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r478614324", "createdAt": "2020-08-27T18:28:15Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -79,6 +80,7 @@\n     private HiveCompressionCodec hiveCompressionCodec = HiveCompressionCodec.GZIP;\n     private boolean respectTableFormat = true;\n     private boolean immutablePartitions;\n+    private String insertExistingPartitionsBehavior;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM4NjQzNg==", "bodyText": "done.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r479386436", "createdAt": "2020-08-28T15:43:05Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -79,6 +80,7 @@\n     private HiveCompressionCodec hiveCompressionCodec = HiveCompressionCodec.GZIP;\n     private boolean respectTableFormat = true;\n     private boolean immutablePartitions;\n+    private String insertExistingPartitionsBehavior;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxNDMyNA=="}, "originalCommit": null, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MjAxMjU1OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODozNDoxMFrOHIcfcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDoxMDoxNFrOHJH5KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxNzQ1Nw==", "bodyText": "Please remove immutablePartitions, notice that it has to be then added to @DefunctConfig at the top of the class, so it raise proper error message when some uses it.\nimmutablePartitions usage should be now replaced with the new property.\nPlease update TestHiveConfig", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r478617457", "createdAt": "2020-08-27T18:34:10Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -79,6 +80,7 @@\n     private HiveCompressionCodec hiveCompressionCodec = HiveCompressionCodec.GZIP;\n     private boolean respectTableFormat = true;\n     private boolean immutablePartitions;\n+    private String insertExistingPartitionsBehavior;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMyODU1Mw==", "bodyText": "immutablePartitions=true is used to prohibit to set insertExistingPartitionsBehavior to OVERWRITE via session properties. insertExistingPartitionsBehavior is not a superset of immutablePartitions. So I will left it.\nTestHiveConfig is updated.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r479328553", "createdAt": "2020-08-28T14:10:14Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -79,6 +80,7 @@\n     private HiveCompressionCodec hiveCompressionCodec = HiveCompressionCodec.GZIP;\n     private boolean respectTableFormat = true;\n     private boolean immutablePartitions;\n+    private String insertExistingPartitionsBehavior;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxNzQ1Nw=="}, "originalCommit": null, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MjAxNzgwOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSessionProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODozNTo0MlrOHIcirg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzo0MTo1OVrOHJGRGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxODI4Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (defaultValue.isEmpty()) {return immutable ? ERROR : APPEND;}\n          \n          \n            \n                        if (defaultValue.isEmpty()) {\n          \n          \n            \n                            return immutable ? ERROR : APPEND;\n          \n          \n            \n                        }\n          \n      \n    \n    \n  \n\nWe do not fold if statements. The only exception is empty method like:\nvoid method() {}\n\nOtherwise we always put curly brackets into separate lines.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r478618286", "createdAt": "2020-08-27T18:35:42Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSessionProperties.java", "diffHunk": "@@ -110,6 +111,14 @@ public static InsertExistingPartitionsBehavior valueOf(String value, boolean imm\n \n             return enumValue;\n         }\n+\n+        public static InsertExistingPartitionsBehavior getDefaultValue(HiveConfig hiveConfig)\n+        {\n+            boolean immutable = hiveConfig.isImmutablePartitions();\n+            Optional<String> defaultValue = hiveConfig.getInsertExistingPartitionsBehavior();\n+            if (defaultValue.isEmpty()) {return immutable ? ERROR : APPEND;}", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMwMTkxNQ==", "bodyText": "I hope this PR will be accepted: airlift/codestyle#12", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r479301915", "createdAt": "2020-08-28T13:41:59Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSessionProperties.java", "diffHunk": "@@ -110,6 +111,14 @@ public static InsertExistingPartitionsBehavior valueOf(String value, boolean imm\n \n             return enumValue;\n         }\n+\n+        public static InsertExistingPartitionsBehavior getDefaultValue(HiveConfig hiveConfig)\n+        {\n+            boolean immutable = hiveConfig.isImmutablePartitions();\n+            Optional<String> defaultValue = hiveConfig.getInsertExistingPartitionsBehavior();\n+            if (defaultValue.isEmpty()) {return immutable ? ERROR : APPEND;}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxODI4Ng=="}, "originalCommit": null, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzMzNzU1OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODoyODozMlrOHJQfOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMDo0Mzo0N1rOHJzf8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2OTM3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void init()\n          \n          \n            \n                {\n          \n          \n            \n                    verifyDefaultValueForInsertExistingPartitionsBehaviorCouldBeAssigned();\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                public void verifyDefaultValueForInsertExistingPartitionsBehaviorCouldBeAssigned()\n          \n          \n            \n                {\n          \n          \n            \n                    verifyAndGet(insertExistingPartitionsBehavior, immutablePartitions);\n          \n          \n            \n                }\n          \n          \n            \n                public void validate()\n          \n          \n            \n                {\n          \n          \n            \n                            InsertExistingPartitionsBehavior.validate(...);\n          \n          \n            \n                }\n          \n      \n    \n    \n  \n\nPlease add tests for that. See io.prestosql.plugin.hive.TestHiveHadoop2Plugin#testGcsAccessTokenAndHiveCachingMutuallyExclusive", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r479469370", "createdAt": "2020-08-28T18:28:32Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -977,4 +995,15 @@ public HiveConfig setProjectionPushdownEnabled(boolean projectionPushdownEnabled\n         this.projectionPushdownEnabled = projectionPushdownEnabled;\n         return this;\n     }\n+\n+    @PostConstruct\n+    public void init()\n+    {\n+        verifyDefaultValueForInsertExistingPartitionsBehaviorCouldBeAssigned();\n+    }\n+\n+    public void verifyDefaultValueForInsertExistingPartitionsBehaviorCouldBeAssigned()\n+    {\n+        verifyAndGet(insertExistingPartitionsBehavior, immutablePartitions);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkzNjc5NQ==", "bodyText": "I've added additional function to describe in it's name why do we need @PostConstruct at all. You think it worth to keep code as simple as possible without this explanation?", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r479936795", "createdAt": "2020-08-31T07:06:10Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -977,4 +995,15 @@ public HiveConfig setProjectionPushdownEnabled(boolean projectionPushdownEnabled\n         this.projectionPushdownEnabled = projectionPushdownEnabled;\n         return this;\n     }\n+\n+    @PostConstruct\n+    public void init()\n+    {\n+        verifyDefaultValueForInsertExistingPartitionsBehaviorCouldBeAssigned();\n+    }\n+\n+    public void verifyDefaultValueForInsertExistingPartitionsBehaviorCouldBeAssigned()\n+    {\n+        verifyAndGet(insertExistingPartitionsBehavior, immutablePartitions);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2OTM3MA=="}, "originalCommit": null, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk1NTExMA==", "bodyText": "You think it worth to keep code as simple as possible\n\nNo. However in this case it is self-explanatory.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r479955110", "createdAt": "2020-08-31T07:45:33Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -977,4 +995,15 @@ public HiveConfig setProjectionPushdownEnabled(boolean projectionPushdownEnabled\n         this.projectionPushdownEnabled = projectionPushdownEnabled;\n         return this;\n     }\n+\n+    @PostConstruct\n+    public void init()\n+    {\n+        verifyDefaultValueForInsertExistingPartitionsBehaviorCouldBeAssigned();\n+    }\n+\n+    public void verifyDefaultValueForInsertExistingPartitionsBehaviorCouldBeAssigned()\n+    {\n+        verifyAndGet(insertExistingPartitionsBehavior, immutablePartitions);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2OTM3MA=="}, "originalCommit": null, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA0Mjk5NQ==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r480042995", "createdAt": "2020-08-31T10:43:47Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -977,4 +995,15 @@ public HiveConfig setProjectionPushdownEnabled(boolean projectionPushdownEnabled\n         this.projectionPushdownEnabled = projectionPushdownEnabled;\n         return this;\n     }\n+\n+    @PostConstruct\n+    public void init()\n+    {\n+        verifyDefaultValueForInsertExistingPartitionsBehaviorCouldBeAssigned();\n+    }\n+\n+    public void verifyDefaultValueForInsertExistingPartitionsBehaviorCouldBeAssigned()\n+    {\n+        verifyAndGet(insertExistingPartitionsBehavior, immutablePartitions);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2OTM3MA=="}, "originalCommit": null, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzM1Mzg0OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveWriterFactory.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODozNDozMlrOHJQpXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMDo1MDo1NVrOHJzwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3MTk2NQ==", "bodyText": "verifyAndGet is not needed here. It is already checked in getInsertExistingPartitionsBehavior", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r479471965", "createdAt": "2020-08-28T18:34:32Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveWriterFactory.java", "diffHunk": "@@ -200,10 +202,7 @@ public HiveWriterFactory(\n         this.sortedWritingTempStagingPathEnabled = isTemporaryStagingDirectoryEnabled(session);\n         this.sortedWritingTempStagingPath = getTemporaryStagingDirectoryPath(session);\n         this.immutablePartitions = immutablePartitions;\n-        this.insertExistingPartitionsBehavior = HiveSessionProperties.getInsertExistingPartitionsBehavior(session);\n-        if (immutablePartitions) {\n-            checkArgument(insertExistingPartitionsBehavior != InsertExistingPartitionsBehavior.APPEND, \"insertExistingPartitionsBehavior cannot be APPEND\");\n-        }\n+        this.insertExistingPartitionsBehavior = verifyAndGet(getInsertExistingPartitionsBehavior(session), immutablePartitions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkzNDE3MQ==", "bodyText": "I believe that it should be checked by decoder, however I'm not sure. I thought that removing this code could be too invasive. In case it could be deleted I'd remove other checks in code checkState(!immutablePartitions);\nWhat do you think?", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r479934171", "createdAt": "2020-08-31T07:00:05Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveWriterFactory.java", "diffHunk": "@@ -200,10 +202,7 @@ public HiveWriterFactory(\n         this.sortedWritingTempStagingPathEnabled = isTemporaryStagingDirectoryEnabled(session);\n         this.sortedWritingTempStagingPath = getTemporaryStagingDirectoryPath(session);\n         this.immutablePartitions = immutablePartitions;\n-        this.insertExistingPartitionsBehavior = HiveSessionProperties.getInsertExistingPartitionsBehavior(session);\n-        if (immutablePartitions) {\n-            checkArgument(insertExistingPartitionsBehavior != InsertExistingPartitionsBehavior.APPEND, \"insertExistingPartitionsBehavior cannot be APPEND\");\n-        }\n+        this.insertExistingPartitionsBehavior = verifyAndGet(getInsertExistingPartitionsBehavior(session), immutablePartitions);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3MTk2NQ=="}, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA0NzE2MQ==", "bodyText": "Ok, verifyAndGet removed. checkState(!immutablePartitions); removed as well.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r480047161", "createdAt": "2020-08-31T10:50:55Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveWriterFactory.java", "diffHunk": "@@ -200,10 +202,7 @@ public HiveWriterFactory(\n         this.sortedWritingTempStagingPathEnabled = isTemporaryStagingDirectoryEnabled(session);\n         this.sortedWritingTempStagingPath = getTemporaryStagingDirectoryPath(session);\n         this.immutablePartitions = immutablePartitions;\n-        this.insertExistingPartitionsBehavior = HiveSessionProperties.getInsertExistingPartitionsBehavior(session);\n-        if (immutablePartitions) {\n-            checkArgument(insertExistingPartitionsBehavior != InsertExistingPartitionsBehavior.APPEND, \"insertExistingPartitionsBehavior cannot be APPEND\");\n-        }\n+        this.insertExistingPartitionsBehavior = verifyAndGet(getInsertExistingPartitionsBehavior(session), immutablePartitions);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3MTk2NQ=="}, "originalCommit": null, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzM2MjY2OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSessionProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODozNzoyOVrOHJQuig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMTowNDo1MlrOHJ0XsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3MzI5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public static InsertExistingPartitionsBehavior verifyAndGet(InsertExistingPartitionsBehavior value, boolean immutable)\n          \n          \n            \n                    public static void validate(InsertExistingPartitionsBehavior value, boolean immutablePartition)", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r479473290", "createdAt": "2020-08-28T18:37:29Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSessionProperties.java", "diffHunk": "@@ -101,14 +99,21 @@\n         OVERWRITE,\n         /**/;\n \n-        public static InsertExistingPartitionsBehavior valueOf(String value, boolean immutablePartition)\n+        public static InsertExistingPartitionsBehavior decode(String value, HiveConfig hiveConfig)\n         {\n             InsertExistingPartitionsBehavior enumValue = valueOf(value.toUpperCase(ENGLISH));\n-            if (immutablePartition) {\n-                checkArgument(enumValue != APPEND, \"Presto is configured to treat Hive partitions as immutable. %s is not allowed to be set to %s\", INSERT_EXISTING_PARTITIONS_BEHAVIOR, APPEND);\n-            }\n+            return verifyAndGet(enumValue, hiveConfig.isImmutablePartitions());\n+        }\n \n-            return enumValue;\n+        public static InsertExistingPartitionsBehavior getDefaultValue(HiveConfig hiveConfig)\n+        {\n+            return verifyAndGet(hiveConfig.getInsertExistingPartitionsBehavior(), hiveConfig.isImmutablePartitions());\n+        }\n+\n+        public static InsertExistingPartitionsBehavior verifyAndGet(InsertExistingPartitionsBehavior value, boolean immutable)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA1NzI2NQ==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r480057265", "createdAt": "2020-08-31T11:04:52Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSessionProperties.java", "diffHunk": "@@ -101,14 +99,21 @@\n         OVERWRITE,\n         /**/;\n \n-        public static InsertExistingPartitionsBehavior valueOf(String value, boolean immutablePartition)\n+        public static InsertExistingPartitionsBehavior decode(String value, HiveConfig hiveConfig)\n         {\n             InsertExistingPartitionsBehavior enumValue = valueOf(value.toUpperCase(ENGLISH));\n-            if (immutablePartition) {\n-                checkArgument(enumValue != APPEND, \"Presto is configured to treat Hive partitions as immutable. %s is not allowed to be set to %s\", INSERT_EXISTING_PARTITIONS_BEHAVIOR, APPEND);\n-            }\n+            return verifyAndGet(enumValue, hiveConfig.isImmutablePartitions());\n+        }\n \n-            return enumValue;\n+        public static InsertExistingPartitionsBehavior getDefaultValue(HiveConfig hiveConfig)\n+        {\n+            return verifyAndGet(hiveConfig.getInsertExistingPartitionsBehavior(), hiveConfig.isImmutablePartitions());\n+        }\n+\n+        public static InsertExistingPartitionsBehavior verifyAndGet(InsertExistingPartitionsBehavior value, boolean immutable)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3MzI5MA=="}, "originalCommit": null, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzM2NTg4OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSessionProperties.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODozODoyN1rOHJQwWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMTowNDozM1rOHJ0WfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3Mzc1Mw==", "bodyText": "please do not rename", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r479473753", "createdAt": "2020-08-28T18:38:27Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSessionProperties.java", "diffHunk": "@@ -101,14 +99,21 @@\n         OVERWRITE,\n         /**/;\n \n-        public static InsertExistingPartitionsBehavior valueOf(String value, boolean immutablePartition)\n+        public static InsertExistingPartitionsBehavior decode(String value, HiveConfig hiveConfig)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkzMDY3NQ==", "bodyText": "actually I thought about it as narrow functionality used in some other place to decode enum. I believe that this functionality is never will be used in other places with explicit immutablePartition parameter.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r479930675", "createdAt": "2020-08-31T06:51:50Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSessionProperties.java", "diffHunk": "@@ -101,14 +99,21 @@\n         OVERWRITE,\n         /**/;\n \n-        public static InsertExistingPartitionsBehavior valueOf(String value, boolean immutablePartition)\n+        public static InsertExistingPartitionsBehavior decode(String value, HiveConfig hiveConfig)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3Mzc1Mw=="}, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA1Njk1Ng==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r480056956", "createdAt": "2020-08-31T11:04:33Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSessionProperties.java", "diffHunk": "@@ -101,14 +99,21 @@\n         OVERWRITE,\n         /**/;\n \n-        public static InsertExistingPartitionsBehavior valueOf(String value, boolean immutablePartition)\n+        public static InsertExistingPartitionsBehavior decode(String value, HiveConfig hiveConfig)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3Mzc1Mw=="}, "originalCommit": null, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzM2NjgzOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSessionProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODozODo0OFrOHJQw5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNjo0ODo0MFrOHJskFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3Mzg5Mg==", "bodyText": "please inline this method", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r479473892", "createdAt": "2020-08-28T18:38:48Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSessionProperties.java", "diffHunk": "@@ -101,14 +99,21 @@\n         OVERWRITE,\n         /**/;\n \n-        public static InsertExistingPartitionsBehavior valueOf(String value, boolean immutablePartition)\n+        public static InsertExistingPartitionsBehavior decode(String value, HiveConfig hiveConfig)\n         {\n             InsertExistingPartitionsBehavior enumValue = valueOf(value.toUpperCase(ENGLISH));\n-            if (immutablePartition) {\n-                checkArgument(enumValue != APPEND, \"Presto is configured to treat Hive partitions as immutable. %s is not allowed to be set to %s\", INSERT_EXISTING_PARTITIONS_BEHAVIOR, APPEND);\n-            }\n+            return verifyAndGet(enumValue, hiveConfig.isImmutablePartitions());\n+        }\n \n-            return enumValue;\n+        public static InsertExistingPartitionsBehavior getDefaultValue(HiveConfig hiveConfig)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkyOTM2NA==", "bodyText": "My intention was to keep logic related to InsertExistingPartitionsBehavior property inside one class. What do you think?", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r479929364", "createdAt": "2020-08-31T06:48:40Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSessionProperties.java", "diffHunk": "@@ -101,14 +99,21 @@\n         OVERWRITE,\n         /**/;\n \n-        public static InsertExistingPartitionsBehavior valueOf(String value, boolean immutablePartition)\n+        public static InsertExistingPartitionsBehavior decode(String value, HiveConfig hiveConfig)\n         {\n             InsertExistingPartitionsBehavior enumValue = valueOf(value.toUpperCase(ENGLISH));\n-            if (immutablePartition) {\n-                checkArgument(enumValue != APPEND, \"Presto is configured to treat Hive partitions as immutable. %s is not allowed to be set to %s\", INSERT_EXISTING_PARTITIONS_BEHAVIOR, APPEND);\n-            }\n+            return verifyAndGet(enumValue, hiveConfig.isImmutablePartitions());\n+        }\n \n-            return enumValue;\n+        public static InsertExistingPartitionsBehavior getDefaultValue(HiveConfig hiveConfig)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3Mzg5Mg=="}, "originalCommit": null, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMTA3NjY4OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSessionProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwODowNTo0OFrOHJuwWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMTowNTowOVrOHJ0YLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk2NTI3NQ==", "bodyText": "please inline", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r479965275", "createdAt": "2020-08-31T08:05:48Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSessionProperties.java", "diffHunk": "@@ -136,9 +141,9 @@ public HiveSessionProperties(\n                         \"Behavior on insert existing partitions; this session property doesn't control behavior on insert existing unpartitioned table\",\n                         VARCHAR,\n                         InsertExistingPartitionsBehavior.class,\n-                        hiveConfig.isImmutablePartitions() ? ERROR : APPEND,\n+                        InsertExistingPartitionsBehavior.getDefaultValue(hiveConfig),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA1NzM5MQ==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r480057391", "createdAt": "2020-08-31T11:05:09Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSessionProperties.java", "diffHunk": "@@ -136,9 +141,9 @@ public HiveSessionProperties(\n                         \"Behavior on insert existing partitions; this session property doesn't control behavior on insert existing unpartitioned table\",\n                         VARCHAR,\n                         InsertExistingPartitionsBehavior.class,\n-                        hiveConfig.isImmutablePartitions() ? ERROR : APPEND,\n+                        InsertExistingPartitionsBehavior.getDefaultValue(hiveConfig),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk2NTI3NQ=="}, "originalCommit": null, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzY3NDUzOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/connector/hive.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToxNDozNlrOHLqVPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMjoxODowMlrOHNLVgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk4OTk1MQ==", "bodyText": "Please mention other possible values. Also you could shortly explain what each of these options mean.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r481989951", "createdAt": "2020-09-02T11:14:36Z", "author": {"login": "kokosing"}, "path": "presto-docs/src/main/sphinx/connector/hive.rst", "diffHunk": "@@ -216,6 +216,8 @@ Property Name                                      Description\n \n ``hive.immutable-partitions``                      Can new data be inserted into existing partitions?           ``false``\n \n+``hive.insert-existing-partitions-behavior``       Default value for insert existing partitions behavior.       ``APPEND``", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU3OTI2NA==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r483579264", "createdAt": "2020-09-04T12:18:02Z", "author": {"login": "ssheikin"}, "path": "presto-docs/src/main/sphinx/connector/hive.rst", "diffHunk": "@@ -216,6 +216,8 @@ Property Name                                      Description\n \n ``hive.immutable-partitions``                      Can new data be inserted into existing partitions?           ``false``\n \n+``hive.insert-existing-partitions-behavior``       Default value for insert existing partitions behavior.       ``APPEND``", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk4OTk1MQ=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzY3NTk0OnYy", "diffSide": "RIGHT", "path": "presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHiveHadoop2Plugin.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToxNDo1NlrOHLqV_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMzozMzo1OVrOHSCG6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MDE0MA==", "bodyText": "shutdown won't be called anyway.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r481990140", "createdAt": "2020-09-02T11:14:56Z", "author": {"login": "kokosing"}, "path": "presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHiveHadoop2Plugin.java", "diffHunk": "@@ -99,6 +99,24 @@ public void testGcsAccessTokenAndHiveCachingMutuallyExclusive()\n                 .hasMessageContaining(\"Use of GCS access token is not compatible with Hive caching\");\n     }\n \n+    @Test\n+    public void testImmutablePartitionsAndInsertOverwriteMutuallyExclusive()\n+    {\n+        Plugin plugin = new HiveHadoop2Plugin();\n+        ConnectorFactory connectorFactory = Iterables.getOnlyElement(plugin.getConnectorFactories());\n+\n+        assertThatThrownBy(() -> connectorFactory.create(\n+                \"test\",\n+                ImmutableMap.<String, String>builder()\n+                        .put(\"hive.insert-existing-partitions-behavior\", \"APPEND\")\n+                        .put(\"hive.immutable-partitions\", \"true\")\n+                        .put(\"hive.metastore.uri\", \"thrift://foo:1234\")\n+                        .build(),\n+                new TestingConnectorContext())\n+                .shutdown())", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU0OTI5NQ==", "bodyText": "Thank you for the info. I'll left it as is to be consistent with other places.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r483549295", "createdAt": "2020-09-04T11:08:34Z", "author": {"login": "ssheikin"}, "path": "presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHiveHadoop2Plugin.java", "diffHunk": "@@ -99,6 +99,24 @@ public void testGcsAccessTokenAndHiveCachingMutuallyExclusive()\n                 .hasMessageContaining(\"Use of GCS access token is not compatible with Hive caching\");\n     }\n \n+    @Test\n+    public void testImmutablePartitionsAndInsertOverwriteMutuallyExclusive()\n+    {\n+        Plugin plugin = new HiveHadoop2Plugin();\n+        ConnectorFactory connectorFactory = Iterables.getOnlyElement(plugin.getConnectorFactories());\n+\n+        assertThatThrownBy(() -> connectorFactory.create(\n+                \"test\",\n+                ImmutableMap.<String, String>builder()\n+                        .put(\"hive.insert-existing-partitions-behavior\", \"APPEND\")\n+                        .put(\"hive.immutable-partitions\", \"true\")\n+                        .put(\"hive.metastore.uri\", \"thrift://foo:1234\")\n+                        .build(),\n+                new TestingConnectorContext())\n+                .shutdown())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MDE0MA=="}, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU2MzQ0OA==", "bodyText": "Please don't. It may suggest that exception is thrown by shutdown method.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r483563448", "createdAt": "2020-09-04T11:41:51Z", "author": {"login": "kokosing"}, "path": "presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHiveHadoop2Plugin.java", "diffHunk": "@@ -99,6 +99,24 @@ public void testGcsAccessTokenAndHiveCachingMutuallyExclusive()\n                 .hasMessageContaining(\"Use of GCS access token is not compatible with Hive caching\");\n     }\n \n+    @Test\n+    public void testImmutablePartitionsAndInsertOverwriteMutuallyExclusive()\n+    {\n+        Plugin plugin = new HiveHadoop2Plugin();\n+        ConnectorFactory connectorFactory = Iterables.getOnlyElement(plugin.getConnectorFactories());\n+\n+        assertThatThrownBy(() -> connectorFactory.create(\n+                \"test\",\n+                ImmutableMap.<String, String>builder()\n+                        .put(\"hive.insert-existing-partitions-behavior\", \"APPEND\")\n+                        .put(\"hive.immutable-partitions\", \"true\")\n+                        .put(\"hive.metastore.uri\", \"thrift://foo:1234\")\n+                        .build(),\n+                new TestingConnectorContext())\n+                .shutdown())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MDE0MA=="}, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY3MDk1NA==", "bodyText": "done.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r488670954", "createdAt": "2020-09-15T13:33:59Z", "author": {"login": "ssheikin"}, "path": "presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHiveHadoop2Plugin.java", "diffHunk": "@@ -99,6 +99,24 @@ public void testGcsAccessTokenAndHiveCachingMutuallyExclusive()\n                 .hasMessageContaining(\"Use of GCS access token is not compatible with Hive caching\");\n     }\n \n+    @Test\n+    public void testImmutablePartitionsAndInsertOverwriteMutuallyExclusive()\n+    {\n+        Plugin plugin = new HiveHadoop2Plugin();\n+        ConnectorFactory connectorFactory = Iterables.getOnlyElement(plugin.getConnectorFactories());\n+\n+        assertThatThrownBy(() -> connectorFactory.create(\n+                \"test\",\n+                ImmutableMap.<String, String>builder()\n+                        .put(\"hive.insert-existing-partitions-behavior\", \"APPEND\")\n+                        .put(\"hive.immutable-partitions\", \"true\")\n+                        .put(\"hive.metastore.uri\", \"thrift://foo:1234\")\n+                        .build(),\n+                new TestingConnectorContext())\n+                .shutdown())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MDE0MA=="}, "originalCommit": null, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzY4MTAxOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToxNjoyOFrOHLqY8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMTo1NTo0NlrOHNKvJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MDg5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.insertExistingPartitionsBehavior = insertExistingPartitionsBehavior;\n          \n          \n            \n                    this.insertExistingPartitionsBehavior = requireNonNull(insertExistingPartitionsBehavior, \"insertExistingPartitionsBehavior is null\");", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r481990897", "createdAt": "2020-09-02T11:16:28Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -451,6 +455,19 @@ public HiveConfig setImmutablePartitions(boolean immutablePartitions)\n         return this;\n     }\n \n+    public InsertExistingPartitionsBehavior getInsertExistingPartitionsBehavior()\n+    {\n+        return insertExistingPartitionsBehavior;\n+    }\n+\n+    @Config(\"hive.insert-existing-partitions-behavior\")\n+    @ConfigDescription(\"Default value for insert existing partitions behavior\")\n+    public HiveConfig setInsertExistingPartitionsBehavior(InsertExistingPartitionsBehavior insertExistingPartitionsBehavior)\n+    {\n+        this.insertExistingPartitionsBehavior = insertExistingPartitionsBehavior;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg3NzAwMA==", "bodyText": "I don't see how this enum value could be set to null.\nIn my opinion it is set by airlift and in case there no such property in config file method never will be invoked, otherwise only correct enum value will be assigned.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r482877000", "createdAt": "2020-09-03T10:32:15Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -451,6 +455,19 @@ public HiveConfig setImmutablePartitions(boolean immutablePartitions)\n         return this;\n     }\n \n+    public InsertExistingPartitionsBehavior getInsertExistingPartitionsBehavior()\n+    {\n+        return insertExistingPartitionsBehavior;\n+    }\n+\n+    @Config(\"hive.insert-existing-partitions-behavior\")\n+    @ConfigDescription(\"Default value for insert existing partitions behavior\")\n+    public HiveConfig setInsertExistingPartitionsBehavior(InsertExistingPartitionsBehavior insertExistingPartitionsBehavior)\n+    {\n+        this.insertExistingPartitionsBehavior = insertExistingPartitionsBehavior;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MDg5Nw=="}, "originalCommit": null, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg4MzAzOQ==", "bodyText": "Usually we don't see how null are passed until the moment when we get NPE. It is yet another defensive programming. airlift can have bugs, we want to catch them as soon as possible.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r482883039", "createdAt": "2020-09-03T10:44:28Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -451,6 +455,19 @@ public HiveConfig setImmutablePartitions(boolean immutablePartitions)\n         return this;\n     }\n \n+    public InsertExistingPartitionsBehavior getInsertExistingPartitionsBehavior()\n+    {\n+        return insertExistingPartitionsBehavior;\n+    }\n+\n+    @Config(\"hive.insert-existing-partitions-behavior\")\n+    @ConfigDescription(\"Default value for insert existing partitions behavior\")\n+    public HiveConfig setInsertExistingPartitionsBehavior(InsertExistingPartitionsBehavior insertExistingPartitionsBehavior)\n+    {\n+        this.insertExistingPartitionsBehavior = insertExistingPartitionsBehavior;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MDg5Nw=="}, "originalCommit": null, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU2OTQ0Ng==", "bodyText": "Nevertheless I don't think it worth to check NPE here, but I've applied your suggestion.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r483569446", "createdAt": "2020-09-04T11:55:46Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -451,6 +455,19 @@ public HiveConfig setImmutablePartitions(boolean immutablePartitions)\n         return this;\n     }\n \n+    public InsertExistingPartitionsBehavior getInsertExistingPartitionsBehavior()\n+    {\n+        return insertExistingPartitionsBehavior;\n+    }\n+\n+    @Config(\"hive.insert-existing-partitions-behavior\")\n+    @ConfigDescription(\"Default value for insert existing partitions behavior\")\n+    public HiveConfig setInsertExistingPartitionsBehavior(InsertExistingPartitionsBehavior insertExistingPartitionsBehavior)\n+    {\n+        this.insertExistingPartitionsBehavior = insertExistingPartitionsBehavior;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MDg5Nw=="}, "originalCommit": null, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzY4Njk4OnYy", "diffSide": "LEFT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveWriterFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToxODoxN1rOHLqckA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwOToyNDo0NFrOHMeCAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MTgyNA==", "bodyText": "undo, this is just defensive programming.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r481991824", "createdAt": "2020-09-02T11:18:17Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveWriterFactory.java", "diffHunk": "@@ -353,7 +348,6 @@ public HiveWriter createWriter(Page partitionColumns, int position, OptionalInt\n                 else {\n                     switch (insertExistingPartitionsBehavior) {\n                         case APPEND:\n-                            checkState(!immutablePartitions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgzNjk5NA==", "bodyText": "I believe this is not good idea to pass immutablePartitions variable through 2 classes just to check it here.\nWill not undo.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r482836994", "createdAt": "2020-09-03T09:24:44Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveWriterFactory.java", "diffHunk": "@@ -353,7 +348,6 @@ public HiveWriter createWriter(Page partitionColumns, int position, OptionalInt\n                 else {\n                     switch (insertExistingPartitionsBehavior) {\n                         case APPEND:\n-                            checkState(!immutablePartitions);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MTgyNA=="}, "originalCommit": null, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzY4NzA5OnYy", "diffSide": "LEFT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveWriterFactory.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToxODoxOVrOHLqcoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDoyMzo1NVrOHMgNpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MTg0MQ==", "bodyText": "undo, this is just defensive programming.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r481991841", "createdAt": "2020-09-02T11:18:19Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveWriterFactory.java", "diffHunk": "@@ -384,7 +378,6 @@ public HiveWriter createWriter(Page partitionColumns, int position, OptionalInt\n             // Write to: an existing partition in an existing partitioned table\n             if (insertExistingPartitionsBehavior == InsertExistingPartitionsBehavior.APPEND) {\n                 // Append to an existing partition\n-                checkState(!immutablePartitions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgzNjkwNA==", "bodyText": "I believe this is not good idea to pass immutablePartitions variable through 2 classes just to check it here.\nWill not undo.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r482836904", "createdAt": "2020-09-03T09:24:35Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveWriterFactory.java", "diffHunk": "@@ -384,7 +378,6 @@ public HiveWriter createWriter(Page partitionColumns, int position, OptionalInt\n             // Write to: an existing partition in an existing partitioned table\n             if (insertExistingPartitionsBehavior == InsertExistingPartitionsBehavior.APPEND) {\n                 // Append to an existing partition\n-                checkState(!immutablePartitions);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MTg0MQ=="}, "originalCommit": null, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg3Mjc0Mw==", "bodyText": "Please then extract it to separate commit.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r482872743", "createdAt": "2020-09-03T10:23:55Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveWriterFactory.java", "diffHunk": "@@ -384,7 +378,6 @@ public HiveWriter createWriter(Page partitionColumns, int position, OptionalInt\n             // Write to: an existing partition in an existing partitioned table\n             if (insertExistingPartitionsBehavior == InsertExistingPartitionsBehavior.APPEND) {\n                 // Append to an existing partition\n-                checkState(!immutablePartitions);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MTg0MQ=="}, "originalCommit": null, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzY5MDcxOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveWriterFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToxOToyMlrOHLqe1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMjo1MjozOVrOHLtpBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MjQwNQ==", "bodyText": "do we call validate in getInsertExistingPartitionsBehavior? if not then we should", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r481992405", "createdAt": "2020-09-02T11:19:22Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveWriterFactory.java", "diffHunk": "@@ -199,11 +198,7 @@ public HiveWriterFactory(\n         this.maxOpenSortFiles = maxOpenSortFiles;\n         this.sortedWritingTempStagingPathEnabled = isTemporaryStagingDirectoryEnabled(session);\n         this.sortedWritingTempStagingPath = getTemporaryStagingDirectoryPath(session);\n-        this.immutablePartitions = immutablePartitions;\n-        this.insertExistingPartitionsBehavior = HiveSessionProperties.getInsertExistingPartitionsBehavior(session);\n-        if (immutablePartitions) {\n-            checkArgument(insertExistingPartitionsBehavior != InsertExistingPartitionsBehavior.APPEND, \"insertExistingPartitionsBehavior cannot be APPEND\");\n-        }\n+        this.insertExistingPartitionsBehavior = getInsertExistingPartitionsBehavior(session);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA0NDE2Nw==", "bodyText": "@kokosing could you please check this conversation?\n#4999 (comment)\nI'd be glad to hear your opinion about it.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r482044167", "createdAt": "2020-09-02T12:52:39Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveWriterFactory.java", "diffHunk": "@@ -199,11 +198,7 @@ public HiveWriterFactory(\n         this.maxOpenSortFiles = maxOpenSortFiles;\n         this.sortedWritingTempStagingPathEnabled = isTemporaryStagingDirectoryEnabled(session);\n         this.sortedWritingTempStagingPath = getTemporaryStagingDirectoryPath(session);\n-        this.immutablePartitions = immutablePartitions;\n-        this.insertExistingPartitionsBehavior = HiveSessionProperties.getInsertExistingPartitionsBehavior(session);\n-        if (immutablePartitions) {\n-            checkArgument(insertExistingPartitionsBehavior != InsertExistingPartitionsBehavior.APPEND, \"insertExistingPartitionsBehavior cannot be APPEND\");\n-        }\n+        this.insertExistingPartitionsBehavior = getInsertExistingPartitionsBehavior(session);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MjQwNQ=="}, "originalCommit": null, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNDcyMDg5OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNToxODowN1rOHL0Z-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMzozNDozN1rOHSCI0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE1NTAwMA==", "bodyText": "Will we deprecate immutable partitions property?", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r482155000", "createdAt": "2020-09-02T15:18:07Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -977,4 +994,10 @@ public HiveConfig setProjectionPushdownEnabled(boolean projectionPushdownEnabled\n         this.projectionPushdownEnabled = projectionPushdownEnabled;\n         return this;\n     }\n+\n+    @PostConstruct\n+    public void validate()\n+    {\n+        InsertExistingPartitionsBehavior.validate(insertExistingPartitionsBehavior, immutablePartitions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI5NTkzNg==", "bodyText": "No. immutable partitions = true is used to protect setting hive.insert-existing-partitions-behavior to APPEND state via session properties.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r482295936", "createdAt": "2020-09-02T18:43:12Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -977,4 +994,10 @@ public HiveConfig setProjectionPushdownEnabled(boolean projectionPushdownEnabled\n         this.projectionPushdownEnabled = projectionPushdownEnabled;\n         return this;\n     }\n+\n+    @PostConstruct\n+    public void validate()\n+    {\n+        InsertExistingPartitionsBehavior.validate(insertExistingPartitionsBehavior, immutablePartitions);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE1NTAwMA=="}, "originalCommit": null, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI3MjA0MA==", "bodyText": "You could extend hive.insert-existing-partitions-behavior with FORCE_ERROR (name subject to discussion) which behaves as ERROR, but also be non overridable by session property.\nThough personally I feel that having separate properties is easier to understand.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r486272040", "createdAt": "2020-09-10T11:45:19Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -977,4 +994,10 @@ public HiveConfig setProjectionPushdownEnabled(boolean projectionPushdownEnabled\n         this.projectionPushdownEnabled = projectionPushdownEnabled;\n         return this;\n     }\n+\n+    @PostConstruct\n+    public void validate()\n+    {\n+        InsertExistingPartitionsBehavior.validate(insertExistingPartitionsBehavior, immutablePartitions);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE1NTAwMA=="}, "originalCommit": null, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYwNzI4MQ==", "bodyText": "For some reason immutable partitions=true allows setting insert-existing-partitions-behavior=OWERWRITE that's why it is not an option. Apart from that deprecating breaks backwards compatibility and requires a longer discussion.\nWon't do.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r486607281", "createdAt": "2020-09-10T20:14:58Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -977,4 +994,10 @@ public HiveConfig setProjectionPushdownEnabled(boolean projectionPushdownEnabled\n         this.projectionPushdownEnabled = projectionPushdownEnabled;\n         return this;\n     }\n+\n+    @PostConstruct\n+    public void validate()\n+    {\n+        InsertExistingPartitionsBehavior.validate(insertExistingPartitionsBehavior, immutablePartitions);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE1NTAwMA=="}, "originalCommit": null, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE2NDkxNg==", "bodyText": "If I read the code correctly now if we specify hive.immutable-partitions=true and NOT specify hive.insert-existing-partitions-behavior the Presto will fail to start.\nThis is valid setup today. To be consistent with what we have right now we should default hive.insert-existing-partitions-behavior to ERROR if hive.immutable-partitions is true.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r487164916", "createdAt": "2020-09-11T16:45:07Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -977,4 +994,10 @@ public HiveConfig setProjectionPushdownEnabled(boolean projectionPushdownEnabled\n         this.projectionPushdownEnabled = projectionPushdownEnabled;\n         return this;\n     }\n+\n+    @PostConstruct\n+    public void validate()\n+    {\n+        InsertExistingPartitionsBehavior.validate(insertExistingPartitionsBehavior, immutablePartitions);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE1NTAwMA=="}, "originalCommit": null, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE2NTUxOA==", "bodyText": "Also can you add test for above.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r487165518", "createdAt": "2020-09-11T16:46:13Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -977,4 +994,10 @@ public HiveConfig setProjectionPushdownEnabled(boolean projectionPushdownEnabled\n         this.projectionPushdownEnabled = projectionPushdownEnabled;\n         return this;\n     }\n+\n+    @PostConstruct\n+    public void validate()\n+    {\n+        InsertExistingPartitionsBehavior.validate(insertExistingPartitionsBehavior, immutablePartitions);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE1NTAwMA=="}, "originalCommit": null, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ2MTMyOQ==", "bodyText": "Good point!\nI've tried to keep old logic of insert-existing-partitions-behavior calculation, when hive.insert-existing-partitions-behavior is NOT specified:\n\nCalculate default value during @PostConstruct phase\n\n    private Optional<InsertExistingPartitionsBehavior> insertExistingPartitionsBehavior = Optional.empty();\n\n    public InsertExistingPartitionsBehavior getInsertExistingPartitionsBehavior()\n    {\n        return insertExistingPartitionsBehavior.orElseThrow(() -> new NoSuchElementException(\"insertExistingPartitionsBehavior was not set during presto initialization\"));\n    }\n\n    @Config(\"hive.insert-existing-partitions-behavior\")\n    @ConfigDescription(\"Default value for insert existing partitions behavior\")\n    public HiveConfig setInsertExistingPartitionsBehavior(InsertExistingPartitionsBehavior insertExistingPartitionsBehavior)\n    {\n        this.insertExistingPartitionsBehavior = Optional.of(requireNonNull(insertExistingPartitionsBehavior, \"insertExistingPartitionsBehavior is null\"));\n        return this;\n    }\n\n    @PostConstruct\n    public void validate()\n    {\n        if (insertExistingPartitionsBehavior.isEmpty()) {\n            insertExistingPartitionsBehavior = getInsertExistingPartitionsBehaviorForBackwardCompatibility();\n        }\n        else {\n            InsertExistingPartitionsBehavior.validate(insertExistingPartitionsBehavior.get(), immutablePartitions);\n        }\n    }\n\n    private Optional<InsertExistingPartitionsBehavior> getInsertExistingPartitionsBehaviorForBackwardCompatibility()\n    {\n        return Optional.of(immutablePartitions ? ERROR : APPEND);\n    }\n\nbut seems it's not good idea from frameworks' point of view (even not looking to even more complicated logic), because tests are not configured to maintain such complex logic TestHiveConfig#testDefaults() does not invoke @PostConstruct method.\n\nHowever it is possible to move logic from @PostConstruct to getter (code becomes not that clear).\n\n    private Optional<InsertExistingPartitionsBehavior> insertExistingPartitionsBehavior = Optional.empty();\n\n    public InsertExistingPartitionsBehavior getInsertExistingPartitionsBehavior()\n    {\n        if (insertExistingPartitionsBehavior.isEmpty()) {\n            insertExistingPartitionsBehavior = getInsertExistingPartitionsBehaviorForBackwardCompatibility();\n        }\n        return insertExistingPartitionsBehavior.orElseThrow(() -> new NoSuchElementException(\"insertExistingPartitionsBehavior was not set during presto initialization\"));\n    }\n\n    private Optional<InsertExistingPartitionsBehavior> getInsertExistingPartitionsBehaviorForBackwardCompatibility()\n    {\n        return Optional.of(immutablePartitions ? ERROR : APPEND);\n    }\n\n    @Config(\"hive.insert-existing-partitions-behavior\")\n    @ConfigDescription(\"Default value for insert existing partitions behavior\")\n    public HiveConfig setInsertExistingPartitionsBehavior(InsertExistingPartitionsBehavior insertExistingPartitionsBehavior)\n    {\n        this.insertExistingPartitionsBehavior = Optional.of(requireNonNull(insertExistingPartitionsBehavior, \"insertExistingPartitionsBehavior is null\"));\n        return this;\n    }\n\n    @PostConstruct\n    public void validate()\n    {\n        insertExistingPartitionsBehavior.ifPresent(v -> InsertExistingPartitionsBehavior.validate(v, immutablePartitions));\n    }\n\n@kokosing I see three possible solutions:\n\napply solution proposed by @losipiuk which changes default value hive.insert-existing-partitions-behavior to ERROR, which breaks backward compatibility when immutablePartitions=false (in this case insert-existing-partitions-behavior was set to APPEND).\nBreak backwards compatibility for one of valid setups today: hive.immutable-partitions=true and hive.insert-existing-partitions-behavior is NOT specified.\nImplement logic in getter.\n\nWhat solution would be better?", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r488461329", "createdAt": "2020-09-15T07:53:34Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -977,4 +994,10 @@ public HiveConfig setProjectionPushdownEnabled(boolean projectionPushdownEnabled\n         this.projectionPushdownEnabled = projectionPushdownEnabled;\n         return this;\n     }\n+\n+    @PostConstruct\n+    public void validate()\n+    {\n+        InsertExistingPartitionsBehavior.validate(insertExistingPartitionsBehavior, immutablePartitions);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE1NTAwMA=="}, "originalCommit": null, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY3MTQ0MQ==", "bodyText": "I'll implement solution 3.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r488671441", "createdAt": "2020-09-15T13:34:37Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -977,4 +994,10 @@ public HiveConfig setProjectionPushdownEnabled(boolean projectionPushdownEnabled\n         this.projectionPushdownEnabled = projectionPushdownEnabled;\n         return this;\n     }\n+\n+    @PostConstruct\n+    public void validate()\n+    {\n+        InsertExistingPartitionsBehavior.validate(insertExistingPartitionsBehavior, immutablePartitions);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE1NTAwMA=="}, "originalCommit": null, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MTY5OTYyOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSessionProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMTo1MjozNFrOHPv62w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDowNzo1OFrOHQD8BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI3NTgwMw==", "bodyText": "Why is @PostConstruct validation not enough", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r486275803", "createdAt": "2020-09-10T11:52:34Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSessionProperties.java", "diffHunk": "@@ -123,6 +123,9 @@ public HiveSessionProperties(\n             ParquetReaderConfig parquetReaderConfig,\n             ParquetWriterConfig parquetWriterConfig)\n     {\n+        InsertExistingPartitionsBehavior insertExistingPartitionsBehavior = hiveConfig.getInsertExistingPartitionsBehavior();\n+        InsertExistingPartitionsBehavior.validate(insertExistingPartitionsBehavior, hiveConfig.isImmutablePartitions());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYwMzc4MQ==", "bodyText": "Good point! Removed.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r486603781", "createdAt": "2020-09-10T20:07:58Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveSessionProperties.java", "diffHunk": "@@ -123,6 +123,9 @@ public HiveSessionProperties(\n             ParquetReaderConfig parquetReaderConfig,\n             ParquetWriterConfig parquetWriterConfig)\n     {\n+        InsertExistingPartitionsBehavior insertExistingPartitionsBehavior = hiveConfig.getInsertExistingPartitionsBehavior();\n+        InsertExistingPartitionsBehavior.validate(insertExistingPartitionsBehavior, hiveConfig.isImmutablePartitions());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI3NTgwMw=="}, "originalCommit": null, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MTc1MzI3OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/connector/hive.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMjowNzo1OVrOHPwatA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDoxMDo0N1rOHQEBhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI4Mzk1Ng==", "bodyText": "can not\nOr\nIf ``true`` setting ``hive.insert-existing-partitions-behavior`` to ``APPEND`` is not allowed.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r486283956", "createdAt": "2020-09-10T12:07:59Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/connector/hive.rst", "diffHunk": "@@ -217,6 +217,16 @@ Property Name                                      Description\n                                                    format or the default Presto format?\n \n ``hive.immutable-partitions``                      Can new data be inserted into existing partitions?           ``false``\n+                                                   If ``true`` then\n+                                                   ``hive.insert-existing-partitions-behavior`` could not be", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYwNTE4OQ==", "bodyText": "updated.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r486605189", "createdAt": "2020-09-10T20:10:47Z", "author": {"login": "ssheikin"}, "path": "presto-docs/src/main/sphinx/connector/hive.rst", "diffHunk": "@@ -217,6 +217,16 @@ Property Name                                      Description\n                                                    format or the default Presto format?\n \n ``hive.immutable-partitions``                      Can new data be inserted into existing partitions?           ``false``\n+                                                   If ``true`` then\n+                                                   ``hive.insert-existing-partitions-behavior`` could not be", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI4Mzk1Ng=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1Nzk3NzU3OnYy", "diffSide": "RIGHT", "path": "presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHiveHadoop2Plugin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNDo1MjoyM1rOHSF1xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODo0MDo0NVrOHSPFTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODczMjEwMg==", "bodyText": "nit: you can use concrete type here", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r488732102", "createdAt": "2020-09-15T14:52:23Z", "author": {"login": "losipiuk"}, "path": "presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHiveHadoop2Plugin.java", "diffHunk": "@@ -99,6 +103,69 @@ public void testGcsAccessTokenAndHiveCachingMutuallyExclusive()\n                 .hasMessageContaining(\"Use of GCS access token is not compatible with Hive caching\");\n     }\n \n+    @Test\n+    public void testImmutablePartitionsAndInsertOverwriteMutuallyExclusive()\n+    {\n+        Plugin plugin = new HiveHadoop2Plugin();\n+        ConnectorFactory connectorFactory = Iterables.getOnlyElement(plugin.getConnectorFactories());\n+\n+        assertThatThrownBy(() -> connectorFactory.create(\n+                \"test\",\n+                ImmutableMap.<String, String>builder()\n+                        .put(\"hive.insert-existing-partitions-behavior\", \"APPEND\")\n+                        .put(\"hive.immutable-partitions\", \"true\")\n+                        .put(\"hive.metastore.uri\", \"thrift://foo:1234\")\n+                        .build(),\n+                new TestingConnectorContext()))\n+                .hasMessageContaining(\"Presto is configured to treat Hive partitions as immutable. insert_existing_partitions_behavior is not allowed to be set to APPEND\");\n+    }\n+\n+    @Test\n+    public void testInsertOverwriteIsSetToErrorWhenImmutablePartitionsIsTrue()\n+    {\n+        Plugin plugin = new HiveHadoop2Plugin();\n+        ConnectorFactory connectorFactory = Iterables.getOnlyElement(plugin.getConnectorFactories());\n+\n+        Connector connector = connectorFactory.create(\n+                \"test\",\n+                ImmutableMap.<String, String>builder()\n+                        .put(\"hive.immutable-partitions\", \"true\")\n+                        .put(\"hive.metastore.uri\", \"thrift://foo:1234\")\n+                        .build(),\n+                new TestingConnectorContext());\n+\n+        Object actual = getDefaultValueInsertExistingPartitionsBehavior(connector);\n+\n+        assertEquals(ERROR, actual);\n+    }\n+\n+    @Test\n+    public void testInsertOverwriteIsSetToAppendWhenImmutablePartitionsIsFalseByDefault()\n+    {\n+        Plugin plugin = new HiveHadoop2Plugin();\n+        ConnectorFactory connectorFactory = Iterables.getOnlyElement(plugin.getConnectorFactories());\n+\n+        Connector connector = connectorFactory.create(\n+                \"test\",\n+                ImmutableMap.<String, String>builder()\n+                        .put(\"hive.metastore.uri\", \"thrift://foo:1234\")\n+                        .build(),\n+                new TestingConnectorContext());\n+\n+        Object actual = getDefaultValueInsertExistingPartitionsBehavior(connector);\n+\n+        assertEquals(APPEND, actual);\n+    }\n+\n+    private Object getDefaultValueInsertExistingPartitionsBehavior(Connector connector)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg4MzUzNA==", "bodyText": "It requires unnecessary explicit casting. I think it does not worth adding additional characters in this case.\nHowever I would be glad to substitute method's body with shorter and more understandable implementation, but I can't find one.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r488883534", "createdAt": "2020-09-15T18:40:45Z", "author": {"login": "ssheikin"}, "path": "presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHiveHadoop2Plugin.java", "diffHunk": "@@ -99,6 +103,69 @@ public void testGcsAccessTokenAndHiveCachingMutuallyExclusive()\n                 .hasMessageContaining(\"Use of GCS access token is not compatible with Hive caching\");\n     }\n \n+    @Test\n+    public void testImmutablePartitionsAndInsertOverwriteMutuallyExclusive()\n+    {\n+        Plugin plugin = new HiveHadoop2Plugin();\n+        ConnectorFactory connectorFactory = Iterables.getOnlyElement(plugin.getConnectorFactories());\n+\n+        assertThatThrownBy(() -> connectorFactory.create(\n+                \"test\",\n+                ImmutableMap.<String, String>builder()\n+                        .put(\"hive.insert-existing-partitions-behavior\", \"APPEND\")\n+                        .put(\"hive.immutable-partitions\", \"true\")\n+                        .put(\"hive.metastore.uri\", \"thrift://foo:1234\")\n+                        .build(),\n+                new TestingConnectorContext()))\n+                .hasMessageContaining(\"Presto is configured to treat Hive partitions as immutable. insert_existing_partitions_behavior is not allowed to be set to APPEND\");\n+    }\n+\n+    @Test\n+    public void testInsertOverwriteIsSetToErrorWhenImmutablePartitionsIsTrue()\n+    {\n+        Plugin plugin = new HiveHadoop2Plugin();\n+        ConnectorFactory connectorFactory = Iterables.getOnlyElement(plugin.getConnectorFactories());\n+\n+        Connector connector = connectorFactory.create(\n+                \"test\",\n+                ImmutableMap.<String, String>builder()\n+                        .put(\"hive.immutable-partitions\", \"true\")\n+                        .put(\"hive.metastore.uri\", \"thrift://foo:1234\")\n+                        .build(),\n+                new TestingConnectorContext());\n+\n+        Object actual = getDefaultValueInsertExistingPartitionsBehavior(connector);\n+\n+        assertEquals(ERROR, actual);\n+    }\n+\n+    @Test\n+    public void testInsertOverwriteIsSetToAppendWhenImmutablePartitionsIsFalseByDefault()\n+    {\n+        Plugin plugin = new HiveHadoop2Plugin();\n+        ConnectorFactory connectorFactory = Iterables.getOnlyElement(plugin.getConnectorFactories());\n+\n+        Connector connector = connectorFactory.create(\n+                \"test\",\n+                ImmutableMap.<String, String>builder()\n+                        .put(\"hive.metastore.uri\", \"thrift://foo:1234\")\n+                        .build(),\n+                new TestingConnectorContext());\n+\n+        Object actual = getDefaultValueInsertExistingPartitionsBehavior(connector);\n+\n+        assertEquals(APPEND, actual);\n+    }\n+\n+    private Object getDefaultValueInsertExistingPartitionsBehavior(Connector connector)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODczMjEwMg=="}, "originalCommit": null, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTIwMzg0OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOTo0MzozNVrOHSR5Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDo1MDoxNFrOHSrPEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyOTU4Nw==", "bodyText": "Setters for config beans need to allow null. If null is passed, it should reset to the default value.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r488929587", "createdAt": "2020-09-15T19:43:35Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -452,6 +458,19 @@ public HiveConfig setImmutablePartitions(boolean immutablePartitions)\n         return this;\n     }\n \n+    public InsertExistingPartitionsBehavior getInsertExistingPartitionsBehavior()\n+    {\n+        return insertExistingPartitionsBehavior.orElse(immutablePartitions ? ERROR : APPEND);\n+    }\n+\n+    @Config(\"hive.insert-existing-partitions-behavior\")\n+    @ConfigDescription(\"Default value for insert existing partitions behavior\")\n+    public HiveConfig setInsertExistingPartitionsBehavior(InsertExistingPartitionsBehavior insertExistingPartitionsBehavior)\n+    {\n+        this.insertExistingPartitionsBehavior = Optional.of(requireNonNull(insertExistingPartitionsBehavior, \"insertExistingPartitionsBehavior is null\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM0NDc4NQ==", "bodyText": "done.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r489344785", "createdAt": "2020-09-16T10:50:14Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -452,6 +458,19 @@ public HiveConfig setImmutablePartitions(boolean immutablePartitions)\n         return this;\n     }\n \n+    public InsertExistingPartitionsBehavior getInsertExistingPartitionsBehavior()\n+    {\n+        return insertExistingPartitionsBehavior.orElse(immutablePartitions ? ERROR : APPEND);\n+    }\n+\n+    @Config(\"hive.insert-existing-partitions-behavior\")\n+    @ConfigDescription(\"Default value for insert existing partitions behavior\")\n+    public HiveConfig setInsertExistingPartitionsBehavior(InsertExistingPartitionsBehavior insertExistingPartitionsBehavior)\n+    {\n+        this.insertExistingPartitionsBehavior = Optional.of(requireNonNull(insertExistingPartitionsBehavior, \"insertExistingPartitionsBehavior is null\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyOTU4Nw=="}, "originalCommit": null, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTIwNTY2OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/connector/hive.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOTo0NDowOVrOHSR6Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTowMTozM1rOHSrmWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyOTg4Mw==", "bodyText": "This also affects the session property", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r488929883", "createdAt": "2020-09-15T19:44:09Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/connector/hive.rst", "diffHunk": "@@ -217,6 +217,16 @@ Property Name                                      Description\n                                                    format or the default Presto format?\n \n ``hive.immutable-partitions``                      Can new data be inserted into existing partitions?           ``false``\n+                                                   If ``true`` then setting\n+                                                   ``hive.insert-existing-partitions-behavior`` to ``APPEND``", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM1MDc0Ng==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r489350746", "createdAt": "2020-09-16T11:01:33Z", "author": {"login": "ssheikin"}, "path": "presto-docs/src/main/sphinx/connector/hive.rst", "diffHunk": "@@ -217,6 +217,16 @@ Property Name                                      Description\n                                                    format or the default Presto format?\n \n ``hive.immutable-partitions``                      Can new data be inserted into existing partitions?           ``false``\n+                                                   If ``true`` then setting\n+                                                   ``hive.insert-existing-partitions-behavior`` to ``APPEND``", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyOTg4Mw=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTIwODMzOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/connector/hive.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOTo0NDo1MFrOHSR72Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDo1MTo0N1rOHSrSIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkzMDI2NQ==", "bodyText": "modifying existing partitions is not allowed", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r488930265", "createdAt": "2020-09-15T19:44:50Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/connector/hive.rst", "diffHunk": "@@ -217,6 +217,16 @@ Property Name                                      Description\n                                                    format or the default Presto format?\n \n ``hive.immutable-partitions``                      Can new data be inserted into existing partitions?           ``false``\n+                                                   If ``true`` then setting\n+                                                   ``hive.insert-existing-partitions-behavior`` to ``APPEND``\n+                                                   is not allowed.\n+\n+``hive.insert-existing-partitions-behavior``       Default value for insert existing partitions behavior.       ``APPEND``\n+                                                   Possible values are\n+\n+                                                   * ``APPEND`` - appends data to existing partitions\n+                                                   * ``OVERWRITE`` - overwrites existing partitions\n+                                                   * ``ERROR``- does not allow to insert data", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM0NTU2OA==", "bodyText": "done.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r489345568", "createdAt": "2020-09-16T10:51:47Z", "author": {"login": "ssheikin"}, "path": "presto-docs/src/main/sphinx/connector/hive.rst", "diffHunk": "@@ -217,6 +217,16 @@ Property Name                                      Description\n                                                    format or the default Presto format?\n \n ``hive.immutable-partitions``                      Can new data be inserted into existing partitions?           ``false``\n+                                                   If ``true`` then setting\n+                                                   ``hive.insert-existing-partitions-behavior`` to ``APPEND``\n+                                                   is not allowed.\n+\n+``hive.insert-existing-partitions-behavior``       Default value for insert existing partitions behavior.       ``APPEND``\n+                                                   Possible values are\n+\n+                                                   * ``APPEND`` - appends data to existing partitions\n+                                                   * ``OVERWRITE`` - overwrites existing partitions\n+                                                   * ``ERROR``- does not allow to insert data", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkzMDI2NQ=="}, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTIxNTQwOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/connector/hive.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOTo0Njo1NVrOHSSANQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDo1NzozMlrOHSreKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkzMTM4MQ==", "bodyText": "While many config properties are technically defaults for session properties, we don't describe them in terms of being a default value. Instead, we say what the config does (as if the session property is unmodified).\n\nWhen happens when data is inserted into an existing partition?", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r488931381", "createdAt": "2020-09-15T19:46:55Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/connector/hive.rst", "diffHunk": "@@ -217,6 +217,16 @@ Property Name                                      Description\n                                                    format or the default Presto format?\n \n ``hive.immutable-partitions``                      Can new data be inserted into existing partitions?           ``false``\n+                                                   If ``true`` then setting\n+                                                   ``hive.insert-existing-partitions-behavior`` to ``APPEND``\n+                                                   is not allowed.\n+\n+``hive.insert-existing-partitions-behavior``       Default value for insert existing partitions behavior.       ``APPEND``", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM0ODY0OA==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r489348648", "createdAt": "2020-09-16T10:57:32Z", "author": {"login": "ssheikin"}, "path": "presto-docs/src/main/sphinx/connector/hive.rst", "diffHunk": "@@ -217,6 +217,16 @@ Property Name                                      Description\n                                                    format or the default Presto format?\n \n ``hive.immutable-partitions``                      Can new data be inserted into existing partitions?           ``false``\n+                                                   If ``true`` then setting\n+                                                   ``hive.insert-existing-partitions-behavior`` to ``APPEND``\n+                                                   is not allowed.\n+\n+``hive.insert-existing-partitions-behavior``       Default value for insert existing partitions behavior.       ``APPEND``", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkzMTM4MQ=="}, "originalCommit": null, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTIzMDUzOnYy", "diffSide": "RIGHT", "path": "presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHiveHadoop2Plugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOTo1MDo0MlrOHSSJIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTowMzoyMVrOHSrpqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkzMzY2NQ==", "bodyText": "These arguments are in the wrong order for TestNG. actual comes first. It's easier to read if we inline this\nassertEquals(getDefaultValueInsertExistingPartitionsBehavior(connector), ERROR);\nOr use AssertJ\nassertThat(getDefaultValueInsertExistingPartitionsBehavior(connector)).isEqualTo(ERROR);", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r488933665", "createdAt": "2020-09-15T19:50:42Z", "author": {"login": "electrum"}, "path": "presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHiveHadoop2Plugin.java", "diffHunk": "@@ -99,6 +103,69 @@ public void testGcsAccessTokenAndHiveCachingMutuallyExclusive()\n                 .hasMessageContaining(\"Use of GCS access token is not compatible with Hive caching\");\n     }\n \n+    @Test\n+    public void testImmutablePartitionsAndInsertOverwriteMutuallyExclusive()\n+    {\n+        Plugin plugin = new HiveHadoop2Plugin();\n+        ConnectorFactory connectorFactory = Iterables.getOnlyElement(plugin.getConnectorFactories());\n+\n+        assertThatThrownBy(() -> connectorFactory.create(\n+                \"test\",\n+                ImmutableMap.<String, String>builder()\n+                        .put(\"hive.insert-existing-partitions-behavior\", \"APPEND\")\n+                        .put(\"hive.immutable-partitions\", \"true\")\n+                        .put(\"hive.metastore.uri\", \"thrift://foo:1234\")\n+                        .build(),\n+                new TestingConnectorContext()))\n+                .hasMessageContaining(\"Presto is configured to treat Hive partitions as immutable. insert_existing_partitions_behavior is not allowed to be set to APPEND\");\n+    }\n+\n+    @Test\n+    public void testInsertOverwriteIsSetToErrorWhenImmutablePartitionsIsTrue()\n+    {\n+        Plugin plugin = new HiveHadoop2Plugin();\n+        ConnectorFactory connectorFactory = Iterables.getOnlyElement(plugin.getConnectorFactories());\n+\n+        Connector connector = connectorFactory.create(\n+                \"test\",\n+                ImmutableMap.<String, String>builder()\n+                        .put(\"hive.immutable-partitions\", \"true\")\n+                        .put(\"hive.metastore.uri\", \"thrift://foo:1234\")\n+                        .build(),\n+                new TestingConnectorContext());\n+\n+        Object actual = getDefaultValueInsertExistingPartitionsBehavior(connector);\n+\n+        assertEquals(ERROR, actual);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM1MTU5Mg==", "bodyText": "done.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r489351592", "createdAt": "2020-09-16T11:03:21Z", "author": {"login": "ssheikin"}, "path": "presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHiveHadoop2Plugin.java", "diffHunk": "@@ -99,6 +103,69 @@ public void testGcsAccessTokenAndHiveCachingMutuallyExclusive()\n                 .hasMessageContaining(\"Use of GCS access token is not compatible with Hive caching\");\n     }\n \n+    @Test\n+    public void testImmutablePartitionsAndInsertOverwriteMutuallyExclusive()\n+    {\n+        Plugin plugin = new HiveHadoop2Plugin();\n+        ConnectorFactory connectorFactory = Iterables.getOnlyElement(plugin.getConnectorFactories());\n+\n+        assertThatThrownBy(() -> connectorFactory.create(\n+                \"test\",\n+                ImmutableMap.<String, String>builder()\n+                        .put(\"hive.insert-existing-partitions-behavior\", \"APPEND\")\n+                        .put(\"hive.immutable-partitions\", \"true\")\n+                        .put(\"hive.metastore.uri\", \"thrift://foo:1234\")\n+                        .build(),\n+                new TestingConnectorContext()))\n+                .hasMessageContaining(\"Presto is configured to treat Hive partitions as immutable. insert_existing_partitions_behavior is not allowed to be set to APPEND\");\n+    }\n+\n+    @Test\n+    public void testInsertOverwriteIsSetToErrorWhenImmutablePartitionsIsTrue()\n+    {\n+        Plugin plugin = new HiveHadoop2Plugin();\n+        ConnectorFactory connectorFactory = Iterables.getOnlyElement(plugin.getConnectorFactories());\n+\n+        Connector connector = connectorFactory.create(\n+                \"test\",\n+                ImmutableMap.<String, String>builder()\n+                        .put(\"hive.immutable-partitions\", \"true\")\n+                        .put(\"hive.metastore.uri\", \"thrift://foo:1234\")\n+                        .build(),\n+                new TestingConnectorContext());\n+\n+        Object actual = getDefaultValueInsertExistingPartitionsBehavior(connector);\n+\n+        assertEquals(ERROR, actual);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkzMzY2NQ=="}, "originalCommit": null, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTI2MjMxOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOTo1OTozOFrOHSScDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMToyNToxMFrOHSsTzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkzODUxMA==", "bodyText": "This should use bean validation so that the config framework throws a proper error message. You can do this like\n@AssertTrue(message = \"insert-existing-partitions-behavior cannot be APPEND when immutable-partitions is true\")\npublic boolean isInsertExistingPartitionsBehaviorValid()\n{\n    return !immutablePartitions || !insertExistingPartitionsBehavior.equals(Optional.of(APPEND));\n}", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r488938510", "createdAt": "2020-09-15T19:59:38Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -980,4 +999,10 @@ public HiveConfig setDynamicFilteringProbeBlockingTimeout(Duration dynamicFilter\n         this.dynamicFilteringProbeBlockingTimeout = dynamicFilteringProbeBlockingTimeout;\n         return this;\n     }\n+\n+    @PostConstruct", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2MjM4Mw==", "bodyText": "thanks, used @AssertTrue", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r489362383", "createdAt": "2020-09-16T11:25:10Z", "author": {"login": "ssheikin"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -980,4 +999,10 @@ public HiveConfig setDynamicFilteringProbeBlockingTimeout(Duration dynamicFilter\n         this.dynamicFilteringProbeBlockingTimeout = dynamicFilteringProbeBlockingTimeout;\n         return this;\n     }\n+\n+    @PostConstruct", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkzODUxMA=="}, "originalCommit": null, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NDQzNzI2OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/connector/hive.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMTozMDozMVrOHTE75w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMjoyMDo0NFrOHTGKvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc2NTg2Mw==", "bodyText": "Missing word \"the\". Let's also expand the note\n\nThis also affects the xxx session property in the same way.\n\nApologies, I should have provided the exact text before.", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r489765863", "createdAt": "2020-09-16T21:30:31Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/connector/hive.rst", "diffHunk": "@@ -217,6 +217,19 @@ Property Name                                      Description\n                                                    format or the default Presto format?\n \n ``hive.immutable-partitions``                      Can new data be inserted into existing partitions?           ``false``\n+                                                   If ``true`` then setting\n+                                                   ``hive.insert-existing-partitions-behavior`` to ``APPEND``\n+                                                   is not allowed.\n+                                                   This also affects ``insert_existing_partitions_behavior``", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc4NjA0Nw==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/4999#discussion_r489786047", "createdAt": "2020-09-16T22:20:44Z", "author": {"login": "ssheikin"}, "path": "presto-docs/src/main/sphinx/connector/hive.rst", "diffHunk": "@@ -217,6 +217,19 @@ Property Name                                      Description\n                                                    format or the default Presto format?\n \n ``hive.immutable-partitions``                      Can new data be inserted into existing partitions?           ``false``\n+                                                   If ``true`` then setting\n+                                                   ``hive.insert-existing-partitions-behavior`` to ``APPEND``\n+                                                   is not allowed.\n+                                                   This also affects ``insert_existing_partitions_behavior``", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc2NTg2Mw=="}, "originalCommit": null, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3361, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}