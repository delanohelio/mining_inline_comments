{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NDQwMjIy", "number": 3933, "title": "Reuse dynamic filters", "bodyText": "", "createdAt": "2020-06-05T13:10:55Z", "url": "https://github.com/trinodb/trino/pull/3933", "merged": true, "mergeCommit": {"oid": "4e42ed8fba0e6b8353e3aa51f6bf3472dd261eeb"}, "closed": true, "closedAt": "2020-06-08T19:19:45Z", "author": {"login": "sopel39"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoVCBWAFqTQyNTQzOTA0Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpVeeMAFqTQyNjU0ODEzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NDM5MDQz", "url": "https://github.com/trinodb/trino/pull/3933#pullrequestreview-425439043", "createdAt": "2020-06-05T16:13:16Z", "commit": {"oid": "cd972f6802ecda2e2c14c6baa7cd68b84c5a1286"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NTQ0NzMz", "url": "https://github.com/trinodb/trino/pull/3933#pullrequestreview-425544733", "createdAt": "2020-06-05T18:49:23Z", "commit": {"oid": "cd972f6802ecda2e2c14c6baa7cd68b84c5a1286"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODo0OToyM1rOGf5sfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODo0OToyM1rOGf5sfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEwNDMxNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if (buildSymbolToDynamicFilter.containsKey(buildSymbol)) {\n          \n          \n            \n                                    id = buildSymbolToDynamicFilter.get(buildSymbol);\n          \n          \n            \n                                }\n          \n          \n            \n                                else {\n          \n          \n            \n                                    id = \"df_\" + idAllocator.getNextId().toString();\n          \n          \n            \n                                    buildSymbolToDynamicFilter.put(buildSymbol, id);\n          \n          \n            \n                                }\n          \n          \n            \n                                id = buildSymbolToDynamicFilter.computeIfAbsent(buildSymbol, key -> \"df_\" + idAllocator.getNextId().toString());\n          \n      \n    \n    \n  \n\nHowever, it's not a good idea to modify the map returned by .collect(toMap(...)). There's no guarantee that the map is mutable or that it's safe to change. From the javadocs:\n\nThere are no guarantees on the type, mutability, serializability, or thread-safety of the Map returned.", "url": "https://github.com/trinodb/trino/pull/3933#discussion_r436104317", "createdAt": "2020-06-05T18:49:23Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/optimizations/PredicatePushDown.java", "diffHunk": "@@ -578,10 +578,19 @@ private DynamicFiltersResult createDynamicFilters(JoinNode node, List<JoinNode.E\n                 // Even if equiJoinClauses.equals(node.getCriteria), current dynamic filters may not match equiJoinClauses\n                 ImmutableMap.Builder<String, Symbol> dynamicFiltersBuilder = ImmutableMap.builder();\n                 ImmutableList.Builder<Expression> predicatesBuilder = ImmutableList.builder();\n+                Map<Symbol, String> buildSymbolToDynamicFilter = node.getDynamicFilters().entrySet().stream()\n+                        .collect(toMap(Map.Entry::getValue, Map.Entry::getKey));\n                 for (JoinNode.EquiJoinClause clause : equiJoinClauses) {\n                     Symbol probeSymbol = clause.getLeft();\n                     Symbol buildSymbol = clause.getRight();\n-                    String id = \"df_\" + idAllocator.getNextId().toString();\n+                    String id;\n+                    if (buildSymbolToDynamicFilter.containsKey(buildSymbol)) {\n+                        id = buildSymbolToDynamicFilter.get(buildSymbol);\n+                    }\n+                    else {\n+                        id = \"df_\" + idAllocator.getNextId().toString();\n+                        buildSymbolToDynamicFilter.put(buildSymbol, id);\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd972f6802ecda2e2c14c6baa7cd68b84c5a1286"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c66103bf18e5be95e0696fd135762d873db6dab4", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/c66103bf18e5be95e0696fd135762d873db6dab4", "committedDate": "2020-06-08T12:08:02Z", "message": "Use ImmutableMap collector in Predicte Push Down"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cd972f6802ecda2e2c14c6baa7cd68b84c5a1286", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/cd972f6802ecda2e2c14c6baa7cd68b84c5a1286", "committedDate": "2020-06-05T13:09:51Z", "message": "Reuse dynamic filters"}, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "be3f62a60c4127fe8d709a2d8431dbcdc8d75448", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/be3f62a60c4127fe8d709a2d8431dbcdc8d75448", "committedDate": "2020-06-08T12:09:24Z", "message": "Reuse dynamic filters"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "be3f62a60c4127fe8d709a2d8431dbcdc8d75448", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/be3f62a60c4127fe8d709a2d8431dbcdc8d75448", "committedDate": "2020-06-08T12:09:24Z", "message": "Reuse dynamic filters"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MTY2NjU2", "url": "https://github.com/trinodb/trino/pull/3933#pullrequestreview-426166656", "createdAt": "2020-06-08T12:14:54Z", "commit": {"oid": "be3f62a60c4127fe8d709a2d8431dbcdc8d75448"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NTQ4MTMx", "url": "https://github.com/trinodb/trino/pull/3933#pullrequestreview-426548131", "createdAt": "2020-06-08T19:18:16Z", "commit": {"oid": "be3f62a60c4127fe8d709a2d8431dbcdc8d75448"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 575, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}