{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMDE4MjYy", "number": 2455, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMjo1MDowN1rODXJNUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMjo1NjoyOFrODXJS7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NTk0NzA3OnYy", "diffSide": "RIGHT", "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/CassandraMetadata.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMjo1MDowN1rOFcTMhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMjo1MDowN1rOFcTMhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIxODk0OA==", "bodyText": "Please maybe extract a separate commit like \"Retain actual names in CassandraInsertTableHandle\"", "url": "https://github.com/trinodb/trino/pull/2455#discussion_r365218948", "createdAt": "2020-01-10T12:50:07Z", "author": {"login": "findepi"}, "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/CassandraMetadata.java", "diffHunk": "@@ -333,12 +331,12 @@ public ConnectorInsertTableHandle beginInsert(ConnectorSession session, Connecto\n \n         SchemaTableName schemaTableName = new SchemaTableName(table.getSchemaName(), table.getTableName());\n         List<CassandraColumnHandle> columns = cassandraSession.getTable(schemaTableName).getColumns();\n-        List<String> columnNames = columns.stream().map(CassandraColumnHandle::getName).map(CassandraCqlUtils::validColumnName).collect(Collectors.toList());\n+        List<String> columnNames = columns.stream().map(CassandraColumnHandle::getName).collect(Collectors.toList());\n         List<Type> columnTypes = columns.stream().map(CassandraColumnHandle::getType).collect(Collectors.toList());\n \n         return new CassandraInsertTableHandle(\n-                validSchemaName(table.getSchemaName()),\n-                validTableName(table.getTableName()),\n+                table.getSchemaName(),\n+                table.getTableName(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NTk0NzYwOnYy", "diffSide": "RIGHT", "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/CassandraPageSink.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMjo1MDoxOFrOFcTMzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMjo1MDoxOFrOFcTMzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIxOTAyMw==", "bodyText": "This would belong to \"Retain actual names in CassandraInsertTableHandle\" if you extract it", "url": "https://github.com/trinodb/trino/pull/2455#discussion_r365219023", "createdAt": "2020-01-10T12:50:18Z", "author": {"login": "findepi"}, "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/CassandraPageSink.java", "diffHunk": "@@ -92,14 +95,14 @@ public CassandraPageSink(\n             this.toCassandraDate = value -> LocalDate.fromDaysSinceEpoch(toIntExact(value));\n         }\n \n-        Insert insert = insertInto(schemaName, tableName);\n+        Insert insert = insertInto(validSchemaName(schemaName), validTableName(tableName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NTk2MTQxOnYy", "diffSide": "RIGHT", "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/util/CassandraCqlUtils.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMjo1NjoyOFrOFcTVKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxMzozMzoxNlrOFcpcxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIyMTE2MQ==", "bodyText": "In the description you wrote\n\nOnly alphanumeric and underscore are allowed as the identifier in Cassandra.\n\nbut the logic here is different.\nDid you mean something like\nif (!identifier.matches(\"[a-z]([a-z0-9_]*[a-z0-9])?\") {\n    return quoteIdentifier(identifier);\n}\n\nthis would not only impl want you describe (quote everything that contains non-underscore, non-alphanumeric characters), but also\n\nquote names starting with digit (i'm just guessing this isn't legal either)\nquote empty names (eliminating existing check at the beginning of validColumnName method)\nquote non-lowercase names (eliminating existing check at the beginning of validIdentifier method)\n\n(of course, such Pattern should be compiled as static field)", "url": "https://github.com/trinodb/trino/pull/2455#discussion_r365221161", "createdAt": "2020-01-10T12:56:28Z", "author": {"login": "findepi"}, "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/util/CassandraCqlUtils.java", "diffHunk": "@@ -76,6 +76,10 @@ private static String validIdentifier(String identifier)\n         if (keywords.contains(identifier.toUpperCase(ENGLISH))) {\n             return quoteIdentifier(identifier);\n         }\n+\n+        if (identifier.startsWith(\"_\") || identifier.endsWith(\"_\")) {\n+            return quoteIdentifier(identifier);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIzMjYwNw==", "bodyText": "Sorry, my description was insufficient. Cassandra throws an exception if an identifier contains non-underscore symbols. This case happens when Presto tries to create an table.\nSo, my intent was \"allowed but it is needed to be quoted in some cases\".\nExactly, my current commit misses some cases (e.g. starting/ending with digit). Let me update.", "url": "https://github.com/trinodb/trino/pull/2455#discussion_r365232607", "createdAt": "2020-01-10T13:28:28Z", "author": {"login": "ebyhr"}, "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/util/CassandraCqlUtils.java", "diffHunk": "@@ -76,6 +76,10 @@ private static String validIdentifier(String identifier)\n         if (keywords.contains(identifier.toUpperCase(ENGLISH))) {\n             return quoteIdentifier(identifier);\n         }\n+\n+        if (identifier.startsWith(\"_\") || identifier.endsWith(\"_\")) {\n+            return quoteIdentifier(identifier);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIyMTE2MQ=="}, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI5NDY2OA==", "bodyText": "btw, can we quote unconditionally?\ni know you've considered that, but I don't know why you abandoned this idea.", "url": "https://github.com/trinodb/trino/pull/2455#discussion_r365294668", "createdAt": "2020-01-10T15:40:16Z", "author": {"login": "findepi"}, "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/util/CassandraCqlUtils.java", "diffHunk": "@@ -76,6 +76,10 @@ private static String validIdentifier(String identifier)\n         if (keywords.contains(identifier.toUpperCase(ENGLISH))) {\n             return quoteIdentifier(identifier);\n         }\n+\n+        if (identifier.startsWith(\"_\") || identifier.endsWith(\"_\")) {\n+            return quoteIdentifier(identifier);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIyMTE2MQ=="}, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU4MzU1OQ==", "bodyText": "It seems like existing tests depend on the condition (I don't think the test is important), so I wanted to confirm more detail. I'll investigate it again before updating this PR.", "url": "https://github.com/trinodb/trino/pull/2455#discussion_r365583559", "createdAt": "2020-01-12T13:33:16Z", "author": {"login": "ebyhr"}, "path": "presto-cassandra/src/main/java/io/prestosql/plugin/cassandra/util/CassandraCqlUtils.java", "diffHunk": "@@ -76,6 +76,10 @@ private static String validIdentifier(String identifier)\n         if (keywords.contains(identifier.toUpperCase(ENGLISH))) {\n             return quoteIdentifier(identifier);\n         }\n+\n+        if (identifier.startsWith(\"_\") || identifier.endsWith(\"_\")) {\n+            return quoteIdentifier(identifier);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIyMTE2MQ=="}, "originalCommit": null, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1116, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}