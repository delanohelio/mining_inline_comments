{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NDAxODUw", "number": 3064, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoyODo0NFrODnEwUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoyOTo0OFrODnEx5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjk4OTYyOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/operator/StreamingAggregationOperator.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoyODo0NFrOF022tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMDowODowN1rOF1YQjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2OTAxMg==", "bodyText": "i think this should be\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            return ofResult(outputPage, outputPages.isEmpty());\n          \n          \n            \n                            return ofResult(outputPage, false);\n          \n      \n    \n    \n  \n\n-- current inputPage isn't consumed, so we should request it to be re-submitted", "url": "https://github.com/trinodb/trino/pull/3064#discussion_r390969012", "createdAt": "2020-03-11T13:28:44Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/operator/StreamingAggregationOperator.java", "diffHunk": "@@ -232,17 +230,25 @@ private StreamingAggregation(\n                 if (outputPages.isEmpty()) {\n                     return finished();\n                 }\n+\n+                return ofResult(outputPages.removeFirst(), false);\n             }\n-            else {\n-                processInput(inputPage);\n-                updateMemoryUsage();\n+\n+            // flush remaining output pages before requesting next input page\n+            if (!outputPages.isEmpty()) {\n+                Page outputPage = outputPages.removeFirst();\n+                return ofResult(outputPage, outputPages.isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxNDM1MQ==", "bodyText": "When we exhausted output pages queue (outputPages.isEmpty()), then we can ask for next page.\nWhen some output page is left in queue (!outputPages.isEmpty()), then we shouldn't ask for next page yet.", "url": "https://github.com/trinodb/trino/pull/3064#discussion_r391314351", "createdAt": "2020-03-11T22:50:47Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/operator/StreamingAggregationOperator.java", "diffHunk": "@@ -232,17 +230,25 @@ private StreamingAggregation(\n                 if (outputPages.isEmpty()) {\n                     return finished();\n                 }\n+\n+                return ofResult(outputPages.removeFirst(), false);\n             }\n-            else {\n-                processInput(inputPage);\n-                updateMemoryUsage();\n+\n+            // flush remaining output pages before requesting next input page\n+            if (!outputPages.isEmpty()) {\n+                Page outputPage = outputPages.removeFirst();\n+                return ofResult(outputPage, outputPages.isEmpty());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2OTAxMg=="}, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2NzE4OA==", "bodyText": "When we exhausted output pages queue (outputPages.isEmpty()), then we can ask for next page.\n\n\nwe already got the next page (the inputPage argument). so it seems to me we can lose an input", "url": "https://github.com/trinodb/trino/pull/3064#discussion_r391467188", "createdAt": "2020-03-12T08:35:48Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/operator/StreamingAggregationOperator.java", "diffHunk": "@@ -232,17 +230,25 @@ private StreamingAggregation(\n                 if (outputPages.isEmpty()) {\n                     return finished();\n                 }\n+\n+                return ofResult(outputPages.removeFirst(), false);\n             }\n-            else {\n-                processInput(inputPage);\n-                updateMemoryUsage();\n+\n+            // flush remaining output pages before requesting next input page\n+            if (!outputPages.isEmpty()) {\n+                Page outputPage = outputPages.removeFirst();\n+                return ofResult(outputPage, outputPages.isEmpty());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2OTAxMg=="}, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxNjMwMQ==", "bodyText": "the inputPage stays until you ask for next page. You ask for next page only when there are no pending output pages.\nKeep note that outputPages buffer needs to be empty in order to process next inputPage", "url": "https://github.com/trinodb/trino/pull/3064#discussion_r391516301", "createdAt": "2020-03-12T10:08:07Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/operator/StreamingAggregationOperator.java", "diffHunk": "@@ -232,17 +230,25 @@ private StreamingAggregation(\n                 if (outputPages.isEmpty()) {\n                     return finished();\n                 }\n+\n+                return ofResult(outputPages.removeFirst(), false);\n             }\n-            else {\n-                processInput(inputPage);\n-                updateMemoryUsage();\n+\n+            // flush remaining output pages before requesting next input page\n+            if (!outputPages.isEmpty()) {\n+                Page outputPage = outputPages.removeFirst();\n+                return ofResult(outputPage, outputPages.isEmpty());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2OTAxMg=="}, "originalCommit": null, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjk5MzY0OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/operator/StreamingAggregationOperator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoyOTo0OFrOF025MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMzowMDozMlrOF1MJIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2OTY0OA==", "bodyText": "this should be\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return ofResult(outputPage, outputPages.isEmpty());\n          \n          \n            \n                        return ofResult(outputPage, true);\n          \n      \n    \n    \n  \n\nbecause inputPage is fully consumed and should not be re-submitted", "url": "https://github.com/trinodb/trino/pull/3064#discussion_r390969648", "createdAt": "2020-03-11T13:29:48Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/operator/StreamingAggregationOperator.java", "diffHunk": "@@ -232,17 +230,25 @@ private StreamingAggregation(\n                 if (outputPages.isEmpty()) {\n                     return finished();\n                 }\n+\n+                return ofResult(outputPages.removeFirst(), false);\n             }\n-            else {\n-                processInput(inputPage);\n-                updateMemoryUsage();\n+\n+            // flush remaining output pages before requesting next input page\n+            if (!outputPages.isEmpty()) {\n+                Page outputPage = outputPages.removeFirst();\n+                return ofResult(outputPage, outputPages.isEmpty());\n             }\n \n+            processInput(inputPage);\n+            updateMemoryUsage();\n+\n             if (outputPages.isEmpty()) {\n                 return needsMoreData();\n             }\n \n-            return ofResult(outputPages.removeFirst(), !finishing);\n+            Page outputPage = outputPages.removeFirst();\n+            return ofResult(outputPage, outputPages.isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxNDY5Mg==", "bodyText": "inputPage is fully consumed. However, there are output pages left (from that input page), which need to be outputted before we can ask for next page", "url": "https://github.com/trinodb/trino/pull/3064#discussion_r391314692", "createdAt": "2020-03-11T22:51:32Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/operator/StreamingAggregationOperator.java", "diffHunk": "@@ -232,17 +230,25 @@ private StreamingAggregation(\n                 if (outputPages.isEmpty()) {\n                     return finished();\n                 }\n+\n+                return ofResult(outputPages.removeFirst(), false);\n             }\n-            else {\n-                processInput(inputPage);\n-                updateMemoryUsage();\n+\n+            // flush remaining output pages before requesting next input page\n+            if (!outputPages.isEmpty()) {\n+                Page outputPage = outputPages.removeFirst();\n+                return ofResult(outputPage, outputPages.isEmpty());\n             }\n \n+            processInput(inputPage);\n+            updateMemoryUsage();\n+\n             if (outputPages.isEmpty()) {\n                 return needsMoreData();\n             }\n \n-            return ofResult(outputPages.removeFirst(), !finishing);\n+            Page outputPage = outputPages.removeFirst();\n+            return ofResult(outputPage, outputPages.isEmpty());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2OTY0OA=="}, "originalCommit": null, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxNzc5NQ==", "bodyText": "I've added comment about this invariant", "url": "https://github.com/trinodb/trino/pull/3064#discussion_r391317795", "createdAt": "2020-03-11T23:00:32Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/operator/StreamingAggregationOperator.java", "diffHunk": "@@ -232,17 +230,25 @@ private StreamingAggregation(\n                 if (outputPages.isEmpty()) {\n                     return finished();\n                 }\n+\n+                return ofResult(outputPages.removeFirst(), false);\n             }\n-            else {\n-                processInput(inputPage);\n-                updateMemoryUsage();\n+\n+            // flush remaining output pages before requesting next input page\n+            if (!outputPages.isEmpty()) {\n+                Page outputPage = outputPages.removeFirst();\n+                return ofResult(outputPage, outputPages.isEmpty());\n             }\n \n+            processInput(inputPage);\n+            updateMemoryUsage();\n+\n             if (outputPages.isEmpty()) {\n                 return needsMoreData();\n             }\n \n-            return ofResult(outputPages.removeFirst(), !finishing);\n+            Page outputPage = outputPages.removeFirst();\n+            return ofResult(outputPage, outputPages.isEmpty());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2OTY0OA=="}, "originalCommit": null, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 548, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}