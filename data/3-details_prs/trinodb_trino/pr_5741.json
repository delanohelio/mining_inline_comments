{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyNDQ1Mzc0", "number": 5741, "title": "Avoid lowering memory limit in resource overcommit case", "bodyText": "Even when resource_overcommit is set to true, SqlTaskManager#updateTask\nfirst attempts to lower the memory limit based on the values from the\nsession. This can cause memory reservation to fail, if bytes are\nupdated before setResourceOvercommit is invoked. This commit fixes the\nrace condition by avoiding the memory limit updates from session values\nwhen resource overcommit is set.\nRan the TestMemoryManager#testResourceOverCommit with invocation count 500,\nand all succeeded. Without this change, they fail almost consistently at least once\nin 100 invocations.\ncc @findepi", "createdAt": "2020-10-29T17:34:45Z", "url": "https://github.com/trinodb/trino/pull/5741", "merged": true, "mergeCommit": {"oid": "b54b1699f45762acf9646857812f57f1977ab5a2"}, "closed": true, "closedAt": "2020-10-30T17:09:08Z", "author": {"login": "phd3"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXVpfSgH2gAyNTEyNDQ1Mzc0OmRlMDA2ZmU0ODA1OGRiYjdlMzlkMGEyOTJmNjUxZjIzM2E4NGUwOWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXYe8kgFqTUyMDA2OTQxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "de006fe48058dbb7e39d0a292f651f233a84e09f", "author": {"user": {"login": "phd3", "name": "Pratham"}}, "url": "https://github.com/trinodb/trino/commit/de006fe48058dbb7e39d0a292f651f233a84e09f", "committedDate": "2020-10-29T17:30:49Z", "message": "Avoid lowering memory limit in resource overcommit case\n\nEven when resource_overcommit is set to true, SqlTaskManager#updateTask\nfirst attempts to lower the memory limit based on the values from the\nsession. This can cause memory reservation to fail, if bytes are\nupdated before setResourceOvercommit is invoked. This commit fixes the\nrace condition by avoiding the memory limit updates from session values\nwhen resource overcommit is set."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwMDY5NDE0", "url": "https://github.com/trinodb/trino/pull/5741#pullrequestreview-520069414", "createdAt": "2020-10-29T20:48:49Z", "commit": {"oid": "de006fe48058dbb7e39d0a292f651f233a84e09f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMDo0ODo0OVrOHquFgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMDo0ODo0OVrOHquFgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU1NzMxNQ==", "bodyText": "We know we can skip calling setMaxUserMemory because it will be obliterated by setResourceOvercommit invoc if overcommit enabled.\ni.e. This is correct because of what setResourceOvercommit does internally.\nI'd suggest removing (inlining) the setResourceOvercommit method, and exposing this relationship here:\nif (no overcocommit) { \n do usual stuff\n}\nelse {\n setMaxUserMemory & setMaxTotalMemory to memoryPool.max\n}", "url": "https://github.com/trinodb/trino/pull/5741#discussion_r514557315", "createdAt": "2020-10-29T20:48:49Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlTaskManager.java", "diffHunk": "@@ -373,21 +373,22 @@ public TaskInfo updateTask(Session session, TaskId taskId, Optional<PlanFragment\n         requireNonNull(sources, \"sources is null\");\n         requireNonNull(outputBuffers, \"outputBuffers is null\");\n \n-        long sessionQueryMaxMemoryPerNode = getQueryMaxMemoryPerNode(session).toBytes();\n-        long sessionQueryTotalMaxMemoryPerNode = getQueryMaxTotalMemoryPerNode(session).toBytes();\n-        // Session property query_max_memory_per_node is used to only decrease memory limit\n-        if (sessionQueryMaxMemoryPerNode <= queryMaxMemoryPerNode) {\n-            queryContexts.getUnchecked(taskId.getQueryId()).setMaxUserMemory(sessionQueryMaxMemoryPerNode);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de006fe48058dbb7e39d0a292f651f233a84e09f"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2687, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}