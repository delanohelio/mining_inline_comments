{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MDUwOTMy", "number": 4560, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTozMDoyOVrOERwjyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTozMDoyOVrOERwjyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDU2ODQxOnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTozMDoyOVrOG2pB9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTo0MzoxN1rOG2pX-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk0ODUzMg==", "bodyText": "Is there an issue it fixes? What is the case when null is passed here?", "url": "https://github.com/trinodb/trino/pull/4560#discussion_r459948532", "createdAt": "2020-07-24T09:30:29Z", "author": {"login": "losipiuk"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "diffHunk": "@@ -193,8 +195,11 @@ public BaseJdbcClient(\n         }\n     }\n \n-    protected boolean filterSchema(String schemaName)\n+    protected boolean filterSchema(@Nullable String schemaName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk1MDc0NA==", "bodyText": "@losipiuk Phoenix, see @lhofhansl 's https://prestosql.slack.com/archives/CP1MUNEUX/p1595558846274400\u00a0\n@ebyhr\nWhen a connector reports some tables with null schema, there are inaccessible\nin current base jdbc implementation. To properly handle them you'd need to change\nmore places besides this one. Thus, I would consider null schemas a concrete\nconnnector responsibility until we determine how frequent or how problematic this\napproach is.", "url": "https://github.com/trinodb/trino/pull/4560#discussion_r459950744", "createdAt": "2020-07-24T09:35:38Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "diffHunk": "@@ -193,8 +195,11 @@ public BaseJdbcClient(\n         }\n     }\n \n-    protected boolean filterSchema(String schemaName)\n+    protected boolean filterSchema(@Nullable String schemaName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk0ODUzMg=="}, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk1NDE2OQ==", "bodyText": "quoting @lhofhansl\n\nIn Phoenix tables do not need to have a schema. For that the connector adds a virtual \"default\" schema.\n\nthis means it's not OK to filter them out.\nperhaps the Phoenix code could provide firstNonNull(schemaname, \"default\") here.\nAlso, this probably means we should be able to test those null schemas.", "url": "https://github.com/trinodb/trino/pull/4560#discussion_r459954169", "createdAt": "2020-07-24T09:43:17Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "diffHunk": "@@ -193,8 +195,11 @@ public BaseJdbcClient(\n         }\n     }\n \n-    protected boolean filterSchema(String schemaName)\n+    protected boolean filterSchema(@Nullable String schemaName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk0ODUzMg=="}, "originalCommit": null, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3758, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}