{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NTIwMTI0", "number": 5430, "title": "Hide Delta Lake tables", "bodyText": "Hive connector cannot read from Delta Lake tables and some users prefer\nnot to see such tables at all.", "createdAt": "2020-10-06T12:52:52Z", "url": "https://github.com/trinodb/trino/pull/5430", "merged": true, "mergeCommit": {"oid": "6108b9ded6dfa1b05d5983e3c44a3ae0cd570be6"}, "closed": true, "closedAt": "2020-10-09T07:35:52Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdP44YbABqjM4NDU2Mjg3MTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQoSh-ABqjM4NTc0MTU1NDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMDE3ODA4", "url": "https://github.com/trinodb/trino/pull/5430#pullrequestreview-503017808", "createdAt": "2020-10-06T14:20:31Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNDoyMDozMlrOHdJbkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNDo0NjoxOVrOHdK9zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMyNTI2Nw==", "bodyText": "as you are here. Should catalogDirectory be a File, and be annotated with@FileExists?", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500325267", "createdAt": "2020-10-06T14:20:32Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastoreConfig.java", "diffHunk": "@@ -32,9 +32,10 @@ public String getCatalogDirectory()\n \n     @Config(\"hive.metastore.catalog.dir\")\n     @ConfigDescription(\"Hive file-based metastore catalog directory\")\n-    public void setCatalogDirectory(String catalogDirectory)\n+    public FileHiveMetastoreConfig setCatalogDirectory(String catalogDirectory)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMzMTUzNA==", "bodyText": "assertion on assertion....\nMaybe nicer approach would be to have bool supportsDeltaLakeTablesHiding() in AbstractTestHive and override it in subclasses accordingly.", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500331534", "createdAt": "2020-10-06T14:26:45Z", "author": {"login": "losipiuk"}, "path": "presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHive.java", "diffHunk": "@@ -65,4 +66,18 @@ public void testGetPartitionSplitsTableOfflinePartition()\n \n         super.testGetPartitionSplitsTableOfflinePartition();\n     }\n+\n+    @Override\n+    public void testHideDeltaLakeTables()\n+    {\n+        assertThatThrownBy(super::testHideDeltaLakeTables)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMzNTc3MQ==", "bodyText": "Add validation that if hive.hide-delta-tables is true then Glue metastore is in use.\nI wanted to suggest a snippet like below but it does not work as we do not have metastore type in HiveConfig. You will figure sth out :p\n    @AssertTrue(message = \"hive.hide-delta-tables works only with Glue metastore\")\n    public boolean isDeltaLakeHidingCompatibleWithMetastoreType()\n    {\n        return !hideDeltaLakeTables || hiveMetastoreIsGlue\n    }", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500335771", "createdAt": "2020-10-06T14:31:04Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -672,6 +673,19 @@ public HiveConfig setTranslateHiveViews(boolean translateHiveViews)\n         return this;\n     }\n \n+    public boolean isHideDeltaLakeTables()\n+    {\n+        return hideDeltaLakeTables;\n+    }\n+\n+    @Config(\"hive.hide-delta-tables\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM0MTk5Mw==", "bodyText": "finish sentence", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500341993", "createdAt": "2020-10-06T14:37:43Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/alluxio/AlluxioHiveMetastore.java", "diffHunk": "@@ -75,6 +76,7 @@ public AlluxioHiveMetastore(TableMasterClient client, HiveConfig hiveConfig)\n     {\n         this.client = requireNonNull(client);\n         requireNonNull(hiveConfig, \"hiveConfig is null\");\n+        checkArgument(!hiveConfig.isHideDeltaLakeTables(), \"Hiding delta tables is not supported by\"); // TODO", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM0MjI4Mg==", "bodyText": "Oh I see you added validation to metastore code.", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500342282", "createdAt": "2020-10-06T14:38:00Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConfig.java", "diffHunk": "@@ -672,6 +673,19 @@ public HiveConfig setTranslateHiveViews(boolean translateHiveViews)\n         return this;\n     }\n \n+    public boolean isHideDeltaLakeTables()\n+    {\n+        return hideDeltaLakeTables;\n+    }\n+\n+    @Config(\"hive.hide-delta-tables\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMzNTc3MQ=="}, "originalCommit": null, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM0ODQ0OQ==", "bodyText": "static import.\nThough I personally would prefer not using Predicate.not at all and just extend the lambda, and use !", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500348449", "createdAt": "2020-10-06T14:44:15Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastore.java", "diffHunk": "@@ -411,18 +416,11 @@ public synchronized void updatePartitionStatistics(HiveIdentity identity, Table\n     @Override\n     public synchronized List<String> getAllTables(String databaseName)\n     {\n-        requireNonNull(databaseName, \"databaseName is null\");\n-\n-        Optional<Database> database = getDatabase(databaseName);\n-        if (database.isEmpty()) {\n-            return ImmutableList.of();\n-        }\n-\n-        Path databaseMetadataDirectory = getDatabaseMetadataDirectory(databaseName);\n-        List<String> tables = getChildSchemaDirectories(databaseMetadataDirectory).stream()\n-                .map(Path::getName)\n+        return listAllTables(databaseName).stream()\n+                .filter(hideDeltaLakeTables\n+                        ? Predicate.not(ImmutableSet.copyOf(getTablesWithParameter(databaseName, SPARK_TABLE_PROVIDER_KEY, DELTA_LAKE_PROVIDER))::contains)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM1MDQxNQ==", "bodyText": "why do we need it here if metastore implementation already does filtering out?", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500350415", "createdAt": "2020-10-06T14:46:19Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveMetadata.java", "diffHunk": "@@ -748,15 +757,19 @@ public TableStatistics getTableStatistics(ConnectorSession session, ConnectorTab\n         if (!filterSchema(tableName.getSchemaName())) {\n             return ImmutableList.of();\n         }\n+\n+        Optional<Table> optionalTable;\n         try {\n-            if (metastore.getTable(new HiveIdentity(session), tableName.getSchemaName(), tableName.getTableName()).isEmpty()) {\n-                return ImmutableList.of();\n-            }\n+            optionalTable = metastore.getTable(new HiveIdentity(session), tableName.getSchemaName(), tableName.getTableName());\n         }\n         catch (HiveViewNotSupportedException e) {\n             // exists, would be returned by listTables from schema\n+            return ImmutableList.of(tableName);\n         }\n-        return ImmutableList.of(tableName);\n+        return optionalTable\n+                .filter(table -> !hideDeltaLakeTables || !isDeltaLakeTable(table))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 69}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "7f4e4baee4fc7475112264365b0c066bd975fb84", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/7f4e4baee4fc7475112264365b0c066bd975fb84", "committedDate": "2020-10-06T15:33:05Z", "message": "Hide Delta Lake tables\n\nHive connector cannot read from Delta Lake tables and some users prefer\nnot to see such tables at all."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTY5NzE2", "url": "https://github.com/trinodb/trino/pull/5430#pullrequestreview-503169716", "createdAt": "2020-10-06T16:52:29Z", "commit": {"oid": "f5a54a9d244af951d480d91d0d5e26c320c72862"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjo1MjoyOVrOHdRE_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNzoyMDo1NVrOHdSJ1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ1MDU1OQ==", "bodyText": "It could probably be URI or org.apache.hadoop.fs.Path. But I agree that's a separate cleanup", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500450559", "createdAt": "2020-10-06T16:52:29Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastoreConfig.java", "diffHunk": "@@ -32,9 +32,10 @@ public String getCatalogDirectory()\n \n     @Config(\"hive.metastore.catalog.dir\")\n     @ConfigDescription(\"Hive file-based metastore catalog directory\")\n-    public void setCatalogDirectory(String catalogDirectory)\n+    public FileHiveMetastoreConfig setCatalogDirectory(String catalogDirectory)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMyNTI2Nw=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ1MzAzNQ==", "bodyText": "This looks like the wrong binding", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500453035", "createdAt": "2020-10-06T16:56:27Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileMetastoreModule.java", "diffHunk": "@@ -28,6 +29,7 @@\n     @Override\n     public void configure(Binder binder)\n     {\n+        configBinder(binder).bindConfig(HiveConfig.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4eaa5907ef008061e5b211a65483258ceefa41c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ1NDc5Ng==", "bodyText": "MetastoreConfig is the wrong class to use. Today, it configures which metastore type to use. This information would not be useful to metastore implementations. The new config you want should be in a different config class. (perhaps MetastoreConfig should be renamed to MetastoreTypeConfig so you can use the MetastoreConfig name)", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500454796", "createdAt": "2020-10-06T16:59:13Z", "author": {"login": "electrum"}, "path": "presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHiveAlluxioMetastore.java", "diffHunk": "@@ -16,6 +16,7 @@\n import alluxio.client.table.TableMasterClient;\n import alluxio.conf.PropertyKey;\n import io.prestosql.plugin.hive.authentication.NoHdfsAuthentication;\n+import io.prestosql.plugin.hive.metastore.MetastoreConfig;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4eaa5907ef008061e5b211a65483258ceefa41c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ1NzI4NA==", "bodyText": "This is going to make listing very slow. We want to do this best effort in the metstore for listing tables. For columns, we can filter out in listTableColumns which is already fetching table metadata.", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500457284", "createdAt": "2020-10-06T17:03:07Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveMetadata.java", "diffHunk": "@@ -748,15 +757,19 @@ public TableStatistics getTableStatistics(ConnectorSession session, ConnectorTab\n         if (!filterSchema(tableName.getSchemaName())) {\n             return ImmutableList.of();\n         }\n+\n+        Optional<Table> optionalTable;\n         try {\n-            if (metastore.getTable(new HiveIdentity(session), tableName.getSchemaName(), tableName.getTableName()).isEmpty()) {\n-                return ImmutableList.of();\n-            }\n+            optionalTable = metastore.getTable(new HiveIdentity(session), tableName.getSchemaName(), tableName.getTableName());\n         }\n         catch (HiveViewNotSupportedException e) {\n             // exists, would be returned by listTables from schema\n+            return ImmutableList.of(tableName);\n         }\n-        return ImmutableList.of(tableName);\n+        return optionalTable\n+                .filter(table -> !hideDeltaLakeTables || !isDeltaLakeTable(table))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM1MDQxNQ=="}, "originalCommit": null, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2MjY3Ng==", "bodyText": "This variable doesn't seem necessary", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500462676", "createdAt": "2020-10-06T17:11:57Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastore.java", "diffHunk": "@@ -442,6 +440,21 @@ public synchronized void updatePartitionStatistics(HiveIdentity identity, Table\n                 .collect(toImmutableList());\n     }\n \n+    private synchronized List<String> listAllTables(String databaseName)\n+    {\n+        requireNonNull(databaseName, \"databaseName is null\");\n+\n+        Optional<Database> database = getDatabase(databaseName);\n+        if (database.isEmpty()) {\n+            return ImmutableList.of();\n+        }\n+\n+        Path databaseMetadataDirectory = getDatabaseMetadataDirectory(databaseName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f4e4baee4fc7475112264365b0c066bd975fb84"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2NDcyOQ==", "bodyText": "Do we even support File Hive metastore for Delta Lake?", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500464729", "createdAt": "2020-10-06T17:15:18Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastore.java", "diffHunk": "@@ -411,18 +416,11 @@ public synchronized void updatePartitionStatistics(HiveIdentity identity, Table\n     @Override\n     public synchronized List<String> getAllTables(String databaseName)\n     {\n-        requireNonNull(databaseName, \"databaseName is null\");\n-\n-        Optional<Database> database = getDatabase(databaseName);\n-        if (database.isEmpty()) {\n-            return ImmutableList.of();\n-        }\n-\n-        Path databaseMetadataDirectory = getDatabaseMetadataDirectory(databaseName);\n-        List<String> tables = getChildSchemaDirectories(databaseMetadataDirectory).stream()\n-                .map(Path::getName)\n+        return listAllTables(databaseName).stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f4e4baee4fc7475112264365b0c066bd975fb84"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2NTc5Nw==", "bodyText": "While we're changing this\n.map(Table::getName)\n.forEach(tableNames::add);", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500465797", "createdAt": "2020-10-06T17:16:59Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/glue/GlueHiveMetastore.java", "diffHunk": "@@ -406,7 +410,11 @@ public void updatePartitionStatistics(HiveIdentity identity, Table table, String\n                             .withCatalogId(catalogId)\n                             .withDatabaseName(databaseName)\n                             .withNextToken(nextToken));\n-                    result.getTableList().forEach(table -> tableNames.add(table.getName()));\n+                    result.getTableList().stream()\n+                            .filter(hideDeltaLakeTables\n+                                    ? table -> !table.getParameters().getOrDefault(SPARK_TABLE_PROVIDER_KEY, \"\").equalsIgnoreCase(DELTA_LAKE_PROVIDER)\n+                                    : table -> true)\n+                            .forEach(table -> tableNames.add(table.getName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f4e4baee4fc7475112264365b0c066bd975fb84"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2NzM5Mg==", "bodyText": "Delta Lake", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500467392", "createdAt": "2020-10-06T17:19:36Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftHiveMetastore.java", "diffHunk": "@@ -227,6 +227,7 @@ public ThriftHiveMetastore(\n         requireNonNull(hiveConfig, \"hiveConfig is null\");\n         this.translateHiveViews = hiveConfig.isTranslateHiveViews();\n         requireNonNull(metastoreConfig, \"metastoreConfig is null\");\n+        checkArgument(!metastoreConfig.isHideDeltaLakeTables(), \"Hiding delta tables is not supported\"); // TODO", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f4e4baee4fc7475112264365b0c066bd975fb84"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2ODE4MA==", "bodyText": "Do we want to add this here? It means users could set it directly", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500468180", "createdAt": "2020-10-06T17:20:55Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveTableProperties.java", "diffHunk": "@@ -153,6 +155,7 @@ public HiveTableProperties(\n                 stringProperty(TEXTFILE_FIELD_SEPARATOR, \"TEXTFILE field separator character\", null, false),\n                 stringProperty(TEXTFILE_FIELD_SEPARATOR_ESCAPE, \"TEXTFILE field separator escape character\", null, false),\n                 stringProperty(NULL_FORMAT_PROPERTY, \"Serialization format for NULL value\", null, false),\n+                stringProperty(SPARK_TABLE_PROVIDER, \"Internal Hive connector property\", null, true),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f4e4baee4fc7475112264365b0c066bd975fb84"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7f4e4baee4fc7475112264365b0c066bd975fb84", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/7f4e4baee4fc7475112264365b0c066bd975fb84", "committedDate": "2020-10-06T15:33:05Z", "message": "Hide Delta Lake tables\n\nHive connector cannot read from Delta Lake tables and some users prefer\nnot to see such tables at all."}, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjcxNjIw", "url": "https://github.com/trinodb/trino/pull/5430#pullrequestreview-504271620", "createdAt": "2020-10-07T21:13:10Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMToxMzoxMVrOHeFvIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMToxNjo0MVrOHeF1yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMxMzMxMw==", "bodyText": "This can be inline\nreturn getChildSchemaDirectories(getDatabaseMetadataDirectory(databaseName)).stream()\n        .map(Path::getName)\n        .collect(toImmutableList());", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r501313313", "createdAt": "2020-10-07T21:13:11Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastore.java", "diffHunk": "@@ -439,6 +429,23 @@ public synchronized void updatePartitionStatistics(HiveIdentity identity, Table\n                 .collect(toImmutableList());\n     }\n \n+    @GuardedBy(\"this\")\n+    private List<String> listAllTables(String databaseName)\n+    {\n+        requireNonNull(databaseName, \"databaseName is null\");\n+\n+        Optional<Database> database = getDatabase(databaseName);\n+        if (database.isEmpty()) {\n+            return ImmutableList.of();\n+        }\n+\n+        Path databaseMetadataDirectory = getDatabaseMetadataDirectory(databaseName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMxMzY0NQ==", "bodyText": "This check isn't needed, as we pass is straight to getDatabase() which already does the check.", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r501313645", "createdAt": "2020-10-07T21:13:54Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastore.java", "diffHunk": "@@ -439,6 +429,23 @@ public synchronized void updatePartitionStatistics(HiveIdentity identity, Table\n                 .collect(toImmutableList());\n     }\n \n+    @GuardedBy(\"this\")\n+    private List<String> listAllTables(String databaseName)\n+    {\n+        requireNonNull(databaseName, \"databaseName is null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMxNTAxOQ==", "bodyText": "Ah, I see that this is a special case for listing a single table.", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r501315019", "createdAt": "2020-10-07T21:16:41Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveMetadata.java", "diffHunk": "@@ -748,15 +757,19 @@ public TableStatistics getTableStatistics(ConnectorSession session, ConnectorTab\n         if (!filterSchema(tableName.getSchemaName())) {\n             return ImmutableList.of();\n         }\n+\n+        Optional<Table> optionalTable;\n         try {\n-            if (metastore.getTable(new HiveIdentity(session), tableName.getSchemaName(), tableName.getTableName()).isEmpty()) {\n-                return ImmutableList.of();\n-            }\n+            optionalTable = metastore.getTable(new HiveIdentity(session), tableName.getSchemaName(), tableName.getTableName());\n         }\n         catch (HiveViewNotSupportedException e) {\n             // exists, would be returned by listTables from schema\n+            return ImmutableList.of(tableName);\n         }\n-        return ImmutableList.of(tableName);\n+        return optionalTable\n+                .filter(table -> !hideDeltaLakeTables || !isDeltaLakeTable(table))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM1MDQxNQ=="}, "originalCommit": null, "originalPosition": 69}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0OTUyMjg2", "url": "https://github.com/trinodb/trino/pull/5430#pullrequestreview-504952286", "createdAt": "2020-10-08T16:18:48Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNjoxODo0OFrOHemVyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNjoyMDoyNVrOHemaFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg0NzQ5OQ==", "bodyText": "This could be done inline, no need for the variable\nreturn metastore.getTable(...)\n    .filter(...)", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r501847499", "createdAt": "2020-10-08T16:18:48Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveMetadata.java", "diffHunk": "@@ -748,15 +751,19 @@ public TableStatistics getTableStatistics(ConnectorSession session, ConnectorTab\n         if (!filterSchema(tableName.getSchemaName())) {\n             return ImmutableList.of();\n         }\n+\n+        Optional<Table> optionalTable;\n         try {\n-            if (metastore.getTable(new HiveIdentity(session), tableName.getSchemaName(), tableName.getTableName()).isEmpty()) {\n-                return ImmutableList.of();\n-            }\n+            optionalTable = metastore.getTable(new HiveIdentity(session), tableName.getSchemaName(), tableName.getTableName());\n         }\n         catch (HiveViewNotSupportedException e) {\n             // exists, would be returned by listTables from schema\n+            return ImmutableList.of(tableName);\n         }\n-        return ImmutableList.of(tableName);\n+        return optionalTable", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg0ODU5OQ==", "bodyText": "Let's be explicit and call this hive.hide-delta-lake-tables", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r501848599", "createdAt": "2020-10-08T16:20:25Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/MetastoreConfig.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.hive.metastore;\n+\n+import io.airlift.configuration.Config;\n+import io.airlift.configuration.ConfigDescription;\n+\n+public class MetastoreConfig\n+{\n+    private boolean hideDeltaLakeTables;\n+\n+    public boolean isHideDeltaLakeTables()\n+    {\n+        return hideDeltaLakeTables;\n+    }\n+\n+    @Config(\"hive.hide-delta-tables\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c6b63c31573462a839fcf53fa627d1bea06c815", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/4c6b63c31573462a839fcf53fa627d1bea06c815", "committedDate": "2020-10-08T17:05:23Z", "message": "Extract method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f4681b46ebeb0867c0523ab3ef6910d459c0e82", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/1f4681b46ebeb0867c0523ab3ef6910d459c0e82", "committedDate": "2020-10-08T21:16:18Z", "message": "Hide Delta Lake tables\n\nHive connector cannot read from Delta Lake tables and some users prefer\nnot to see such tables at all."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "1f4681b46ebeb0867c0523ab3ef6910d459c0e82", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/1f4681b46ebeb0867c0523ab3ef6910d459c0e82", "committedDate": "2020-10-08T21:16:18Z", "message": "Hide Delta Lake tables\n\nHive connector cannot read from Delta Lake tables and some users prefer\nnot to see such tables at all."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3285, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}