{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3NzI2Mjc4", "number": 5881, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODozNzoyMVrOE25jTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjoxMToxNlrOE3MpmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDAxNDg2OnYy", "diffSide": "RIGHT", "path": "presto-cli/src/main/java/io/prestosql/cli/InputHighlighter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODozNzoyMVrOHv8NwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODozNzoyMVrOHv8NwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzMTY4MQ==", "bodyText": "@Override\n    public void setErrorPattern(Pattern pattern) {}\n\n    @Override\n    public void setErrorIndex(int i) {}", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520031681", "createdAt": "2020-11-09T18:37:21Z", "author": {"login": "losipiuk"}, "path": "presto-cli/src/main/java/io/prestosql/cli/InputHighlighter.java", "diffHunk": "@@ -88,6 +89,16 @@ else if (isComment(type)) {\n         return builder.toAttributedString();\n     }\n \n+    @Override\n+    public void setErrorPattern(Pattern pattern)\n+    {\n+    }\n+\n+    @Override\n+    public void setErrorIndex(int i)\n+    {\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDAxNjIzOnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/PrestoCliLauncher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODozNzo0N1rOHv8OpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODozNzo0N1rOHv8OpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzMTkwOQ==", "bodyText": "declare as List<...>", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520031909", "createdAt": "2020-11-09T18:37:47Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/PrestoCliLauncher.java", "diffHunk": "@@ -78,9 +78,18 @@ protected void launchPrestoCli(List<String> arguments)\n \n     protected ProcessBuilder getProcessBuilder(List<String> arguments)\n     {\n-        return new ProcessBuilder(ImmutableList.<String>builder()\n+        ImmutableList<String> command = ImmutableList.<String>builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDAyMDgyOnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/PrestoCliLauncher.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODozOTowMVrOHv8Rdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMToyMToyNVrOH2Ykxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzMjYzMQ==", "bodyText": "Why do we need bash for that? Can't we just execut java?", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520032631", "createdAt": "2020-11-09T18:39:01Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/PrestoCliLauncher.java", "diffHunk": "@@ -78,9 +78,18 @@ protected void launchPrestoCli(List<String> arguments)\n \n     protected ProcessBuilder getProcessBuilder(List<String> arguments)\n     {\n-        return new ProcessBuilder(ImmutableList.<String>builder()\n+        ImmutableList<String> command = ImmutableList.<String>builder()\n                 .add(JAVA_BIN, \"-Xmx50m\", \"-cp\", CLASSPATH, Presto.class.getCanonicalName())\n                 .addAll(arguments)\n-                .build());\n+                .build();\n+\n+        String commandText = Joiner.on(' ').join(command);\n+\n+        return new ProcessBuilder(ImmutableList.of(\"bash\", \"-c\", commandText));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzMjg3MA==", "bodyText": "Without bash you would not need any escaping.", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520032870", "createdAt": "2020-11-09T18:39:26Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/PrestoCliLauncher.java", "diffHunk": "@@ -78,9 +78,18 @@ protected void launchPrestoCli(List<String> arguments)\n \n     protected ProcessBuilder getProcessBuilder(List<String> arguments)\n     {\n-        return new ProcessBuilder(ImmutableList.<String>builder()\n+        ImmutableList<String> command = ImmutableList.<String>builder()\n                 .add(JAVA_BIN, \"-Xmx50m\", \"-cp\", CLASSPATH, Presto.class.getCanonicalName())\n                 .addAll(arguments)\n-                .build());\n+                .build();\n+\n+        String commandText = Joiner.on(' ').join(command);\n+\n+        return new ProcessBuilder(ImmutableList.of(\"bash\", \"-c\", commandText));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzMjYzMQ=="}, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0MjY1NA==", "bodyText": "To be able to redirect stdin to it", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520042654", "createdAt": "2020-11-09T18:55:39Z", "author": {"login": "wendigo"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/PrestoCliLauncher.java", "diffHunk": "@@ -78,9 +78,18 @@ protected void launchPrestoCli(List<String> arguments)\n \n     protected ProcessBuilder getProcessBuilder(List<String> arguments)\n     {\n-        return new ProcessBuilder(ImmutableList.<String>builder()\n+        ImmutableList<String> command = ImmutableList.<String>builder()\n                 .add(JAVA_BIN, \"-Xmx50m\", \"-cp\", CLASSPATH, Presto.class.getCanonicalName())\n                 .addAll(arguments)\n-                .build());\n+                .build();\n+\n+        String commandText = Joiner.on(' ').join(command);\n+\n+        return new ProcessBuilder(ImmutableList.of(\"bash\", \"-c\", commandText));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzMjYzMQ=="}, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUwOTg4Nw==", "bodyText": "java.lang.ProcessBuilder#redirectInput() seems to support that?", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520509887", "createdAt": "2020-11-10T12:01:57Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/PrestoCliLauncher.java", "diffHunk": "@@ -78,9 +78,18 @@ protected void launchPrestoCli(List<String> arguments)\n \n     protected ProcessBuilder getProcessBuilder(List<String> arguments)\n     {\n-        return new ProcessBuilder(ImmutableList.<String>builder()\n+        ImmutableList<String> command = ImmutableList.<String>builder()\n                 .add(JAVA_BIN, \"-Xmx50m\", \"-cp\", CLASSPATH, Presto.class.getCanonicalName())\n                 .addAll(arguments)\n-                .build());\n+                .build();\n+\n+        String commandText = Joiner.on(' ').join(command);\n+\n+        return new ProcessBuilder(ImmutableList.of(\"bash\", \"-c\", commandText));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzMjYzMQ=="}, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI3Nzc5Mg==", "bodyText": "Did we arrive at a conclusion here?", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r524277792", "createdAt": "2020-11-16T13:46:17Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/PrestoCliLauncher.java", "diffHunk": "@@ -78,9 +78,18 @@ protected void launchPrestoCli(List<String> arguments)\n \n     protected ProcessBuilder getProcessBuilder(List<String> arguments)\n     {\n-        return new ProcessBuilder(ImmutableList.<String>builder()\n+        ImmutableList<String> command = ImmutableList.<String>builder()\n                 .add(JAVA_BIN, \"-Xmx50m\", \"-cp\", CLASSPATH, Presto.class.getCanonicalName())\n                 .addAll(arguments)\n-                .build());\n+                .build();\n+\n+        String commandText = Joiner.on(' ').join(command);\n+\n+        return new ProcessBuilder(ImmutableList.of(\"bash\", \"-c\", commandText));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzMjYzMQ=="}, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc4Nzc4Mw==", "bodyText": "I've removed bash", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r526787783", "createdAt": "2020-11-19T11:21:25Z", "author": {"login": "wendigo"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/PrestoCliLauncher.java", "diffHunk": "@@ -78,9 +78,18 @@ protected void launchPrestoCli(List<String> arguments)\n \n     protected ProcessBuilder getProcessBuilder(List<String> arguments)\n     {\n-        return new ProcessBuilder(ImmutableList.<String>builder()\n+        ImmutableList<String> command = ImmutableList.<String>builder()\n                 .add(JAVA_BIN, \"-Xmx50m\", \"-cp\", CLASSPATH, Presto.class.getCanonicalName())\n                 .addAll(arguments)\n-                .build());\n+                .build();\n+\n+        String commandText = Joiner.on(' ').join(command);\n+\n+        return new ProcessBuilder(ImmutableList.of(\"bash\", \"-c\", commandText));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzMjYzMQ=="}, "originalCommit": null, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDAzNTM0OnYy", "diffSide": "RIGHT", "path": "presto-cli/src/main/java/io/prestosql/cli/Console.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo0Mjo1OFrOHv8amw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo0Mjo1OFrOHv8amw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNDk3MQ==", "bodyText": "I guess this is fine. But other option to consider is also allowing passing - as a filename", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520034971", "createdAt": "2020-11-09T18:42:58Z", "author": {"login": "losipiuk"}, "path": "presto-cli/src/main/java/io/prestosql/cli/Console.java", "diffHunk": "@@ -127,6 +129,22 @@ public boolean run()\n             }\n         }\n \n+        // Read queries from stdin\n+        if (!hasQuery && !detectRealTerminal()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDA0MTQ1OnYy", "diffSide": "RIGHT", "path": "presto-cli/src/main/java/io/prestosql/cli/Console.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo0NDozMlrOHv8eKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxOTowODoxNlrOHv9gcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNTg4Mw==", "bodyText": "should we assume that locale in terminal is UTF_8?", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520035883", "createdAt": "2020-11-09T18:44:32Z", "author": {"login": "losipiuk"}, "path": "presto-cli/src/main/java/io/prestosql/cli/Console.java", "diffHunk": "@@ -127,6 +129,22 @@ public boolean run()\n             }\n         }\n \n+        // Read queries from stdin\n+        if (!hasQuery && !detectRealTerminal()) {\n+            try {\n+                if (System.in.available() > 0) {\n+                    query = new String(ByteStreams.toByteArray(System.in), UTF_8) + \";\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA1Mjg1MA==", "bodyText": "Fixed", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520052850", "createdAt": "2020-11-09T19:08:16Z", "author": {"login": "wendigo"}, "path": "presto-cli/src/main/java/io/prestosql/cli/Console.java", "diffHunk": "@@ -127,6 +129,22 @@ public boolean run()\n             }\n         }\n \n+        // Read queries from stdin\n+        if (!hasQuery && !detectRealTerminal()) {\n+            try {\n+                if (System.in.available() > 0) {\n+                    query = new String(ByteStreams.toByteArray(System.in), UTF_8) + \";\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNTg4Mw=="}, "originalCommit": null, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDA0MzM0OnYy", "diffSide": "RIGHT", "path": "presto-cli/src/main/java/io/prestosql/cli/Console.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo0NTowMFrOHv8fSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo1NjozMVrOHv86uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNjE3MA==", "bodyText": "what happens if there is already ; at the end of data in stdin?", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520036170", "createdAt": "2020-11-09T18:45:00Z", "author": {"login": "losipiuk"}, "path": "presto-cli/src/main/java/io/prestosql/cli/Console.java", "diffHunk": "@@ -127,6 +129,22 @@ public boolean run()\n             }\n         }\n \n+        // Read queries from stdin\n+        if (!hasQuery && !detectRealTerminal()) {\n+            try {\n+                if (System.in.available() > 0) {\n+                    query = new String(ByteStreams.toByteArray(System.in), UTF_8) + \";\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0MzE5NQ==", "bodyText": "It's the same logic as in --execute. Works fine", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520043195", "createdAt": "2020-11-09T18:56:31Z", "author": {"login": "wendigo"}, "path": "presto-cli/src/main/java/io/prestosql/cli/Console.java", "diffHunk": "@@ -127,6 +129,22 @@ public boolean run()\n             }\n         }\n \n+        // Read queries from stdin\n+        if (!hasQuery && !detectRealTerminal()) {\n+            try {\n+                if (System.in.available() > 0) {\n+                    query = new String(ByteStreams.toByteArray(System.in), UTF_8) + \";\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNjE3MA=="}, "originalCommit": null, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MjgzMjE4OnYy", "diffSide": "RIGHT", "path": "presto-cli/src/main/java/io/prestosql/cli/ConsolePrinter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMDo0Njo1MFrOHwWtFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMDo0Njo1MFrOHwWtFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ2NTY4Ng==", "bodyText": "move to helper class and make public", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520465686", "createdAt": "2020-11-10T10:46:50Z", "author": {"login": "losipiuk"}, "path": "presto-cli/src/main/java/io/prestosql/cli/ConsolePrinter.java", "diffHunk": "@@ -92,7 +92,7 @@ public boolean isRealTerminal()\n         return REAL_TERMINAL;\n     }\n \n-    private static boolean detectRealTerminal()\n+    protected static boolean detectRealTerminal()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MzEwNjE0OnYy", "diffSide": "RIGHT", "path": "presto-cli/src/main/java/io/prestosql/cli/InputHighlighter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjowMDowOVrOHwZVow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzo1MjoyNFrOHwdglw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUwODgzNQ==", "bodyText": "do you know who calls this and whether it's fully safe to ignore this?", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520508835", "createdAt": "2020-11-10T12:00:09Z", "author": {"login": "findepi"}, "path": "presto-cli/src/main/java/io/prestosql/cli/InputHighlighter.java", "diffHunk": "@@ -88,6 +89,12 @@ else if (isComment(type)) {\n         return builder.toAttributedString();\n     }\n \n+    @Override\n+    public void setErrorPattern(Pattern pattern) {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU3NTE2OA==", "bodyText": "Nope. I was trying to understand that but no luck. I've seen in the DefaultHighlighter that errorPattern and index are used directly by the highlight method to change style when buffer matches. I decided that it's ok to omit that functionality for now.", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520575168", "createdAt": "2020-11-10T13:49:33Z", "author": {"login": "wendigo"}, "path": "presto-cli/src/main/java/io/prestosql/cli/InputHighlighter.java", "diffHunk": "@@ -88,6 +89,12 @@ else if (isComment(type)) {\n         return builder.toAttributedString();\n     }\n \n+    @Override\n+    public void setErrorPattern(Pattern pattern) {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUwODgzNQ=="}, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU3NzE3NQ==", "bodyText": "i saw that too. Thanks for checking.", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520577175", "createdAt": "2020-11-10T13:52:24Z", "author": {"login": "findepi"}, "path": "presto-cli/src/main/java/io/prestosql/cli/InputHighlighter.java", "diffHunk": "@@ -88,6 +89,12 @@ else if (isComment(type)) {\n         return builder.toAttributedString();\n     }\n \n+    @Override\n+    public void setErrorPattern(Pattern pattern) {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUwODgzNQ=="}, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MzExNjIxOnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/PrestoCliLauncher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjowMzowN1rOHwZcAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjowMzo0M1rOHwZdNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMDQ2Ng==", "bodyText": "This is not correct.\nrequireNonNull(value, \"value is null\");\nreturn \"'\" + value.replace(\"'\", \"'\\\\''\") + \"'\";", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520510466", "createdAt": "2020-11-10T12:03:07Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/PrestoCliLauncher.java", "diffHunk": "@@ -78,9 +78,18 @@ protected void launchPrestoCli(List<String> arguments)\n \n     protected ProcessBuilder getProcessBuilder(List<String> arguments)\n     {\n-        return new ProcessBuilder(ImmutableList.<String>builder()\n+        List<String> command = ImmutableList.<String>builder()\n                 .add(JAVA_BIN, \"-Xmx50m\", \"-cp\", CLASSPATH, Presto.class.getCanonicalName())\n                 .addAll(arguments)\n-                .build());\n+                .build();\n+\n+        String commandText = Joiner.on(' ').join(command);\n+\n+        return new ProcessBuilder(ImmutableList.of(\"bash\", \"-c\", commandText));\n+    }\n+\n+    static String escapeForBash(String value)\n+    {\n+        return '\"' + value + '\"';", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMDc3NA==", "bodyText": "Anyway, i'd rather see the code without need for escape, and bash. Too error prone.", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520510774", "createdAt": "2020-11-10T12:03:43Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/PrestoCliLauncher.java", "diffHunk": "@@ -78,9 +78,18 @@ protected void launchPrestoCli(List<String> arguments)\n \n     protected ProcessBuilder getProcessBuilder(List<String> arguments)\n     {\n-        return new ProcessBuilder(ImmutableList.<String>builder()\n+        List<String> command = ImmutableList.<String>builder()\n                 .add(JAVA_BIN, \"-Xmx50m\", \"-cp\", CLASSPATH, Presto.class.getCanonicalName())\n                 .addAll(arguments)\n-                .build());\n+                .build();\n+\n+        String commandText = Joiner.on(' ').join(command);\n+\n+        return new ProcessBuilder(ImmutableList.of(\"bash\", \"-c\", commandText));\n+    }\n+\n+    static String escapeForBash(String value)\n+    {\n+        return '\"' + value + '\"';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMDQ2Ng=="}, "originalCommit": null, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MzExOTE4OnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/TestPrestoCli.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjowNDowM1rOHwZdyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzo0ODoyN1rOHz_dsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMDkyMw==", "bodyText": "Any reason why escaping is not a hidden aspect of the launchPrestoCliWithServerArgument method? or even deeper?", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520510923", "createdAt": "2020-11-10T12:04:03Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/TestPrestoCli.java", "diffHunk": "@@ -122,7 +122,7 @@ public void shouldRunQuery()\n     public void shouldRunBatchQuery()\n             throws Exception\n     {\n-        launchPrestoCliWithServerArgument(\"--execute\", \"select * from hive.default.nation;\");\n+        launchPrestoCliWithServerArgument(\"--execute\", escapeForBash(\"select * from hive.default.nation;\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA5MDI0Nw==", "bodyText": "I could do that", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r522090247", "createdAt": "2020-11-12T13:04:35Z", "author": {"login": "wendigo"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/TestPrestoCli.java", "diffHunk": "@@ -122,7 +122,7 @@ public void shouldRunQuery()\n     public void shouldRunBatchQuery()\n             throws Exception\n     {\n-        launchPrestoCliWithServerArgument(\"--execute\", \"select * from hive.default.nation;\");\n+        launchPrestoCliWithServerArgument(\"--execute\", escapeForBash(\"select * from hive.default.nation;\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMDkyMw=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA5MDQ5NQ==", "bodyText": "But I would need separate methods that test redirects", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r522090495", "createdAt": "2020-11-12T13:05:01Z", "author": {"login": "wendigo"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/TestPrestoCli.java", "diffHunk": "@@ -122,7 +122,7 @@ public void shouldRunQuery()\n     public void shouldRunBatchQuery()\n             throws Exception\n     {\n-        launchPrestoCliWithServerArgument(\"--execute\", \"select * from hive.default.nation;\");\n+        launchPrestoCliWithServerArgument(\"--execute\", escapeForBash(\"select * from hive.default.nation;\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMDkyMw=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI3OTIxOA==", "bodyText": "If we really have to use bash wrapper around CLI, let's do that in an isolated place, single test method.\nThis way:\n\nwe do not need to call escapeForBash (which we will be forgetting to call; and we do not forget, this reduces code readability)\nwe can remove bash more easily, which is my ultimate goal :)", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r524279218", "createdAt": "2020-11-16T13:48:27Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/TestPrestoCli.java", "diffHunk": "@@ -122,7 +122,7 @@ public void shouldRunQuery()\n     public void shouldRunBatchQuery()\n             throws Exception\n     {\n-        launchPrestoCliWithServerArgument(\"--execute\", \"select * from hive.default.nation;\");\n+        launchPrestoCliWithServerArgument(\"--execute\", escapeForBash(\"select * from hive.default.nation;\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMDkyMw=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MzEyMDY2OnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/TestPrestoLdapCli.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjowNDozM1rOHwZesw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzo0NToyMFrOHz_Vcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMTE1NQ==", "bodyText": "any reason to escape user name but not eg ldapTruststorePassword?", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520511155", "createdAt": "2020-11-10T12:04:33Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/TestPrestoLdapCli.java", "diffHunk": "@@ -274,7 +274,7 @@ private void launchPrestoCliWithServerArgument(String... arguments)\n                 \"--server\", ldapServerAddress,\n                 \"--truststore-path\", ldapTruststorePath,\n                 \"--truststore-password\", ldapTruststorePassword,\n-                \"--user\", ldapUserName,\n+                \"--user\", escapeForBash(ldapUserName),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA3MzkxNw==", "bodyText": "ldapUserName is tested to be empty. TrustStore is always provided", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r522073917", "createdAt": "2020-11-12T12:36:49Z", "author": {"login": "wendigo"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/TestPrestoLdapCli.java", "diffHunk": "@@ -274,7 +274,7 @@ private void launchPrestoCliWithServerArgument(String... arguments)\n                 \"--server\", ldapServerAddress,\n                 \"--truststore-path\", ldapTruststorePath,\n                 \"--truststore-password\", ldapTruststorePassword,\n-                \"--user\", ldapUserName,\n+                \"--user\", escapeForBash(ldapUserName),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMTE1NQ=="}, "originalCommit": null, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI3NzEwNg==", "bodyText": "i don't understand this?", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r524277106", "createdAt": "2020-11-16T13:45:20Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/TestPrestoLdapCli.java", "diffHunk": "@@ -274,7 +274,7 @@ private void launchPrestoCliWithServerArgument(String... arguments)\n                 \"--server\", ldapServerAddress,\n                 \"--truststore-path\", ldapTruststorePath,\n                 \"--truststore-password\", ldapTruststorePassword,\n-                \"--user\", ldapUserName,\n+                \"--user\", escapeForBash(ldapUserName),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMTE1NQ=="}, "originalCommit": null, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MzEyNDk1OnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/SuiteRun.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjowNTo0M1rOHwZhUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMjozNjo1OFrOHx43lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMTgyNg==", "bodyText": "--cli-jar -> --cli-bin, or --cli-executable?\n\"Path to executable cli JAR\" -> \"Path to CLI executable\"", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520511826", "createdAt": "2020-11-10T12:05:43Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/SuiteRun.java", "diffHunk": "@@ -103,6 +103,9 @@ public Integer call()\n         @Option(names = \"--test-jar\", paramLabel = \"<jar>\", description = \"Path to test JAR \" + DEFAULT_VALUE, defaultValue = \"${product-tests.module}/target/${product-tests.module}-${project.version}-executable.jar\")\n         public File testJar;\n \n+        @Option(names = \"--cli-jar\", paramLabel = \"<jar>\", description = \"Path to executable cli JAR \" + DEFAULT_VALUE, defaultValue = \"${cli.bin}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA3NDAwNg==", "bodyText": "Sure.", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r522074006", "createdAt": "2020-11-12T12:36:58Z", "author": {"login": "wendigo"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/SuiteRun.java", "diffHunk": "@@ -103,6 +103,9 @@ public Integer call()\n         @Option(names = \"--test-jar\", paramLabel = \"<jar>\", description = \"Path to test JAR \" + DEFAULT_VALUE, defaultValue = \"${product-tests.module}/target/${product-tests.module}-${project.version}-executable.jar\")\n         public File testJar;\n \n+        @Option(names = \"--cli-jar\", paramLabel = \"<jar>\", description = \"Path to executable cli JAR \" + DEFAULT_VALUE, defaultValue = \"${cli.bin}\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMTgyNg=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MzEyODk4OnYy", "diffSide": "LEFT", "path": "presto-product-tests/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjowNjo1M1rOHwZjyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjowNjo1M1rOHwZjyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMjQ1Nw==", "bodyText": "\u2764\ufe0f", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520512457", "createdAt": "2020-11-10T12:06:53Z", "author": {"login": "findepi"}, "path": "presto-product-tests/pom.xml", "diffHunk": "@@ -18,11 +18,6 @@\n     </properties>\n \n     <dependencies>\n-        <dependency>\n-            <groupId>io.prestosql</groupId>\n-            <artifactId>presto-cli</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MzEzMjAzOnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjowNzo0OFrOHwZlrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMjozOTozNlrOHx49Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMjk0Mw==", "bodyText": "we can hide the fact CLI jar is a jar:\n.withFileSystemBind(cliBin.getPath(), \"/docker/presto-cli\", READ_ONLY)\n\nyou will also want to make the file inside docker executable", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520512943", "createdAt": "2020-11-10T12:07:48Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -253,6 +258,7 @@ private Environment getEnvironment()\n                 container\n                         // the test jar is hundreds MB and file system bind is much more efficient\n                         .withFileSystemBind(testJar.getPath(), \"/docker/test.jar\", READ_ONLY)\n+                        .withFileSystemBind(cliJar.getPath(), \"/docker/presto-cli-executable.jar\", READ_ONLY)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA3NTQ4Mw==", "bodyText": "sure. this file is already executable", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r522075483", "createdAt": "2020-11-12T12:39:36Z", "author": {"login": "wendigo"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -253,6 +258,7 @@ private Environment getEnvironment()\n                 container\n                         // the test jar is hundreds MB and file system bind is much more efficient\n                         .withFileSystemBind(testJar.getPath(), \"/docker/test.jar\", READ_ONLY)\n+                        .withFileSystemBind(cliJar.getPath(), \"/docker/presto-cli-executable.jar\", READ_ONLY)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMjk0Mw=="}, "originalCommit": null, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MzEzODE3OnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/TestPrestoCli.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjowOTozOFrOHwZpnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMzowNDoxN1rOHx52Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMzk0OA==", "bodyText": "This will make it impossible to run the test from IDE, right?\nMaybe we can infer the version from something else, that will be loaded from a jar on classpath?\npresto jdbc driver maybe, something else? anyone?", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520513948", "createdAt": "2020-11-10T12:09:38Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/TestPrestoCli.java", "diffHunk": "@@ -105,7 +104,7 @@ public void shouldDisplayVersion()\n             throws IOException\n     {\n         launchPrestoCli(\"--version\");\n-        String version = firstNonNull(Presto.class.getPackage().getImplementationVersion(), \"(version unknown)\");\n+        String version = firstNonNull(TestPrestoCli.class.getPackage().getImplementationVersion(), \"(version unknown)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA5MDA1OQ==", "bodyText": "It's a product test executed by tempto. So it should work", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r522090059", "createdAt": "2020-11-12T13:04:17Z", "author": {"login": "wendigo"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/TestPrestoCli.java", "diffHunk": "@@ -105,7 +104,7 @@ public void shouldDisplayVersion()\n             throws IOException\n     {\n         launchPrestoCli(\"--version\");\n-        String version = firstNonNull(Presto.class.getPackage().getImplementationVersion(), \"(version unknown)\");\n+        String version = firstNonNull(TestPrestoCli.class.getPackage().getImplementationVersion(), \"(version unknown)\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMzk0OA=="}, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MzE0MzkyOnYy", "diffSide": "RIGHT", "path": "presto-cli/src/main/java/io/prestosql/cli/Console.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjoxMToxNlrOHwZtBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzo1MToxMFrOHwddCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxNDgyMg==", "bodyText": "are we chopping this into indivual queries later?", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520514822", "createdAt": "2020-11-10T12:11:16Z", "author": {"login": "findepi"}, "path": "presto-cli/src/main/java/io/prestosql/cli/Console.java", "diffHunk": "@@ -127,6 +129,22 @@ public boolean run()\n             }\n         }\n \n+        // Read queries from stdin\n+        if (!hasQuery && !detectRealTerminal()) {\n+            try {\n+                if (System.in.available() > 0) {\n+                    query = new String(ByteStreams.toByteArray(System.in), terminal().encoding()) + \";\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU3NjI2Ng==", "bodyText": "Yeah, it's being done in the non-changed code path which was working before for --execute and -f", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520576266", "createdAt": "2020-11-10T13:51:10Z", "author": {"login": "wendigo"}, "path": "presto-cli/src/main/java/io/prestosql/cli/Console.java", "diffHunk": "@@ -127,6 +129,22 @@ public boolean run()\n             }\n         }\n \n+        // Read queries from stdin\n+        if (!hasQuery && !detectRealTerminal()) {\n+            try {\n+                if (System.in.available() > 0) {\n+                    query = new String(ByteStreams.toByteArray(System.in), terminal().encoding()) + \";\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxNDgyMg=="}, "originalCommit": null, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4437, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}