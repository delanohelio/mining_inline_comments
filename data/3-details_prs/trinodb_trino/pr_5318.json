{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzOTc3MTcy", "number": 5318, "title": "Check expected exceptions precisely in TestJdbcResultSet", "bodyText": "Replace assertThrows with assertThatThrownBy.", "createdAt": "2020-09-28T08:29:50Z", "url": "https://github.com/trinodb/trino/pull/5318", "merged": true, "mergeCommit": {"oid": "cbcba450481feb3d7b92fb862dd6692b6a921f7e"}, "closed": true, "closedAt": "2020-09-28T17:05:16Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNPV3zgFqTQ5NzI5MzIzMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNSK11gFqTQ5NzQzMzI0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MjkzMjMz", "url": "https://github.com/trinodb/trino/pull/5318#pullrequestreview-497293233", "createdAt": "2020-09-28T08:30:06Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODozMDowNlrOHYziag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODozMDoyMVrOHYzi5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc3MjI2Ng==", "bodyText": "#5313", "url": "https://github.com/trinodb/trino/pull/5318#discussion_r495772266", "createdAt": "2020-09-28T08:30:06Z", "author": {"login": "findepi"}, "path": "presto-jdbc/src/test/java/io/prestosql/jdbc/BaseTestJdbcResultSet.java", "diffHunk": "@@ -150,9 +171,13 @@ public void testTime()\n             checkRepresentation(connectedStatement.getStatement(), \"TIME '09:39:05.000'\", Types.TIME, (rs, column) -> {\n                 assertEquals(rs.getObject(column), Time.valueOf(LocalTime.of(9, 39, 5)));\n                 assertEquals(rs.getObject(column, Time.class), Time.valueOf(LocalTime.of(9, 39, 5)));\n-                assertThrows(() -> rs.getDate(column));\n+                assertThatThrownBy(() -> rs.getDate(column))\n+                        .isInstanceOf(SQLException.class)\n+                        .hasMessage(\"Invalid date from server: 09:39:05.000\"); // TODO (https://github.com/prestosql/presto/issues/5313) wrong message", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc3MjMxNw==", "bodyText": "#5315", "url": "https://github.com/trinodb/trino/pull/5318#discussion_r495772317", "createdAt": "2020-09-28T08:30:13Z", "author": {"login": "findepi"}, "path": "presto-jdbc/src/test/java/io/prestosql/jdbc/BaseTestJdbcResultSet.java", "diffHunk": "@@ -150,9 +171,13 @@ public void testTime()\n             checkRepresentation(connectedStatement.getStatement(), \"TIME '09:39:05.000'\", Types.TIME, (rs, column) -> {\n                 assertEquals(rs.getObject(column), Time.valueOf(LocalTime.of(9, 39, 5)));\n                 assertEquals(rs.getObject(column, Time.class), Time.valueOf(LocalTime.of(9, 39, 5)));\n-                assertThrows(() -> rs.getDate(column));\n+                assertThatThrownBy(() -> rs.getDate(column))\n+                        .isInstanceOf(SQLException.class)\n+                        .hasMessage(\"Invalid date from server: 09:39:05.000\"); // TODO (https://github.com/prestosql/presto/issues/5313) wrong message\n                 assertEquals(rs.getTime(column), Time.valueOf(LocalTime.of(9, 39, 5)));\n-                assertThrows(() -> rs.getTimestamp(column));\n+                assertThatThrownBy(() -> rs.getTimestamp(column))\n+                        .isInstanceOf(IllegalArgumentException.class) // TODO (https://github.com/prestosql/presto/issues/5315) SQLException", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc3MjM4OQ==", "bodyText": "#5317", "url": "https://github.com/trinodb/trino/pull/5318#discussion_r495772389", "createdAt": "2020-09-28T08:30:21Z", "author": {"login": "findepi"}, "path": "presto-jdbc/src/test/java/io/prestosql/jdbc/BaseTestJdbcResultSet.java", "diffHunk": "@@ -163,9 +188,13 @@ public void testTime()\n \n             checkRepresentation(connectedStatement.getStatement(), \"TIME '09:39:07 +01:00'\", Types.TIME /* TODO TIME_WITH_TIMEZONE */, (rs, column) -> {\n                 assertEquals(rs.getObject(column), Time.valueOf(LocalTime.of(1, 39, 7))); // TODO this should represent TIME '09:39:07 +01:00'\n-                assertThrows(() -> rs.getDate(column));\n+                assertThatThrownBy(() -> rs.getDate(column))\n+                        .isInstanceOf(SQLException.class)\n+                        .hasMessage(\"Invalid date from server: 09:39:07+01:00\"); // TODO (https://github.com/prestosql/presto/issues/5313) wrong message\n                 assertEquals(rs.getTime(column), Time.valueOf(LocalTime.of(1, 39, 7))); // TODO this should fail, or represent TIME '09:39:07'\n-                assertThrows(() -> rs.getTimestamp(column));\n+                assertThatThrownBy(() -> rs.getTimestamp(column))\n+                        .isInstanceOf(IllegalArgumentException.class) // TODO (https://github.com/prestosql/presto/issues/5315) SQLException\n+                        .hasMessage(\"Expected column to be a timestamp type but is time with time zone(0)\"); // TODO (https://github.com/prestosql/presto/issues/5317) placement of precision parameter", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 120}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "69fe4a9d2671f16b12585dc40a92d21b31f6d500", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/69fe4a9d2671f16b12585dc40a92d21b31f6d500", "committedDate": "2020-09-28T10:49:46Z", "message": "Check expected exceptions precisely in TestJdbcResultSet\n\nReplace `assertThrows` with `assertThatThrownBy`."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db49df718efd908b69e9826d2a75413ee431bbd7", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/db49df718efd908b69e9826d2a75413ee431bbd7", "committedDate": "2020-09-28T10:49:46Z", "message": "Improve running TestJdbcResultSetCompatibilityOldServer from IDE\n\nPreviously running the test from IDE required setting\nTESTED_PRESTO_SERVER_VERSIONS environment."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d160dc114e41cc522a60c3a5cde00a1be8047e74", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/d160dc114e41cc522a60c3a5cde00a1be8047e74", "committedDate": "2020-09-28T10:49:47Z", "message": "Remove unused field"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "d160dc114e41cc522a60c3a5cde00a1be8047e74", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/d160dc114e41cc522a60c3a5cde00a1be8047e74", "committedDate": "2020-09-28T10:49:47Z", "message": "Remove unused field"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NDMzMTA4", "url": "https://github.com/trinodb/trino/pull/5318#pullrequestreview-497433108", "createdAt": "2020-09-28T11:48:12Z", "commit": {"oid": "db49df718efd908b69e9826d2a75413ee431bbd7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMTo0ODoxMlrOHY6EKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMTo0ODoxMlrOHY6EKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg3OTIwOQ==", "bodyText": "Hmmm. It was still useful to be able to test agains specific versions manually. Maybe not enough to keep it... IDK", "url": "https://github.com/trinodb/trino/pull/5318#discussion_r495879209", "createdAt": "2020-09-28T11:48:12Z", "author": {"login": "losipiuk"}, "path": "presto-test-jdbc-compatibility-old-server/src/test/java/io/prestosql/TestJdbcResultSetCompatibilityOldServer.java", "diffHunk": "@@ -43,7 +43,6 @@\n {\n     private static final int NUMBER_OF_TESTED_VERSIONS = 5;\n     private static final int TESTED_VERSIONS_GRANULARITY = 3;\n-    private static final String TESTED_VERSIONS_ENV_KEY = \"TESTED_PRESTO_SERVER_VERSIONS\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db49df718efd908b69e9826d2a75413ee431bbd7"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NDMzMjQ2", "url": "https://github.com/trinodb/trino/pull/5318#pullrequestreview-497433246", "createdAt": "2020-09-28T11:48:23Z", "commit": {"oid": "d160dc114e41cc522a60c3a5cde00a1be8047e74"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3472, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}