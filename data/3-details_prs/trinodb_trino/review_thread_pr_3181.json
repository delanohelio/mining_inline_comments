{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNzAzMTU5", "number": 3181, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMDoyMTowOVrODqAPMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMDoyMTowOVrODqAPMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzcwNjc1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/sql/planner/iterative/rule/PruneDeleteSourceColumns.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMDoyMTowOVrOF5iE8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDozODoyN1rOF9J4Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg3MTQ3NA==", "bodyText": "Add a comment explaining why it's OK to ignore deleteNode.getOutputSymbols()\nMaybe:\n// DeleteNode's output symbols are not taken from source; it's aggregate information about deleted data\n\nyou can also add same comment in io.prestosql.sql.planner.optimizations.PruneUnreferencedOutputs.Rewriter#visitDelete", "url": "https://github.com/trinodb/trino/pull/3181#discussion_r395871474", "createdAt": "2020-03-20T20:21:09Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/iterative/rule/PruneDeleteSourceColumns.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.sql.planner.iterative.rule;\n+\n+import com.google.common.collect.ImmutableSet;\n+import io.prestosql.matching.Captures;\n+import io.prestosql.matching.Pattern;\n+import io.prestosql.sql.planner.iterative.Rule;\n+import io.prestosql.sql.planner.plan.DeleteNode;\n+\n+import static io.prestosql.sql.planner.iterative.rule.Util.restrictChildOutputs;\n+import static io.prestosql.sql.planner.plan.Patterns.delete;\n+\n+public class PruneDeleteSourceColumns\n+        implements Rule<DeleteNode>\n+{\n+    private static final Pattern<DeleteNode> PATTERN = delete();\n+\n+    @Override\n+    public Pattern<DeleteNode> getPattern()\n+    {\n+        return PATTERN;\n+    }\n+\n+    @Override\n+    public Result apply(DeleteNode deleteNode, Captures captures, Context context)\n+    {\n+        return restrictChildOutputs(context.getIdAllocator(), deleteNode, ImmutableSet.of(deleteNode.getRowId()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2OTI4Nw==", "bodyText": "Added a comment in DeleteNode instead.", "url": "https://github.com/trinodb/trino/pull/3181#discussion_r399669287", "createdAt": "2020-03-28T14:38:27Z", "author": {"login": "kasiafi"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/iterative/rule/PruneDeleteSourceColumns.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.sql.planner.iterative.rule;\n+\n+import com.google.common.collect.ImmutableSet;\n+import io.prestosql.matching.Captures;\n+import io.prestosql.matching.Pattern;\n+import io.prestosql.sql.planner.iterative.Rule;\n+import io.prestosql.sql.planner.plan.DeleteNode;\n+\n+import static io.prestosql.sql.planner.iterative.rule.Util.restrictChildOutputs;\n+import static io.prestosql.sql.planner.plan.Patterns.delete;\n+\n+public class PruneDeleteSourceColumns\n+        implements Rule<DeleteNode>\n+{\n+    private static final Pattern<DeleteNode> PATTERN = delete();\n+\n+    @Override\n+    public Pattern<DeleteNode> getPattern()\n+    {\n+        return PATTERN;\n+    }\n+\n+    @Override\n+    public Result apply(DeleteNode deleteNode, Captures captures, Context context)\n+    {\n+        return restrictChildOutputs(context.getIdAllocator(), deleteNode, ImmutableSet.of(deleteNode.getRowId()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg3MTQ3NA=="}, "originalCommit": null, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 437, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}