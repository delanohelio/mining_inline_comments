{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMTMxMzY1", "number": 3162, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzoxNDoyNVrODpmgRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMToxOToyNlrOD-cYHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTQ5MDYxOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzoxNDoyNVrOF44bQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzoxNDoyNVrOF44bQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE4OTA1Ng==", "bodyText": "Remember", "url": "https://github.com/trinodb/trino/pull/3162#discussion_r395189056", "createdAt": "2020-03-19T17:14:25Z", "author": {"login": "findepi"}, "path": "pom.xml", "diffHunk": "@@ -45,6 +45,7 @@\n \n         <dep.antlr.version>4.7.1</dep.antlr.version>\n         <dep.airlift.version>0.193</dep.airlift.version>\n+        <dep.slice.version>0.39-SNAPSHOT</dep.slice.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODAyNDYxOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HivePartitionKey.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMToxNDo0MVrOGYjCbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMToxNDo0MVrOGYjCbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MzA2OQ==", "bodyText": "This wrapping seems excessive. I understand why you'd do it for a longer list of names, but this class is a key/value pair, no need to be extensible.", "url": "https://github.com/trinodb/trino/pull/3162#discussion_r428393069", "createdAt": "2020-05-21T01:14:41Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HivePartitionKey.java", "diffHunk": "@@ -55,9 +56,11 @@ public String getValue()\n         return value;\n     }\n \n-    public int getEstimatedSizeInBytes()\n+    public long getEstimatedSizeInBytes()\n     {\n-        return INSTANCE_SIZE + name.length() * Character.BYTES + value.length() * Character.BYTES;\n+        return INSTANCE_SIZE +", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODAyNDg5OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveTypeName.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMToxNDo0OVrOGYjClw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMToxNDo0OVrOGYjClw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MzExMQ==", "bodyText": "This class is to hold a single string. No need to wrap here.", "url": "https://github.com/trinodb/trino/pull/3162#discussion_r428393111", "createdAt": "2020-05-21T01:14:49Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveTypeName.java", "diffHunk": "@@ -42,9 +43,10 @@ public HiveType toHiveType()\n         return HiveType.valueOf(value);\n     }\n \n-    public int getEstimatedSizeInBytes()\n+    public long getEstimatedSizeInBytes()\n     {\n-        return INSTANCE_SIZE + value.length() * Character.BYTES;\n+        return INSTANCE_SIZE +", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODAzMjI5OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/InternalHiveSplit.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMToxOToyNlrOGYjHBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwOToxOToyMVrOGYsE_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5NDI0Nw==", "bodyText": "We could add a helper estimatedSizeOf(HostAddress)\nreturn INSTANCE_SIZE + estimatedSizeOf(addresses, InternalHiveBlock::estimatedSize);", "url": "https://github.com/trinodb/trino/pull/3162#discussion_r428394247", "createdAt": "2020-05-21T01:19:26Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/InternalHiveSplit.java", "diffHunk": "@@ -275,14 +267,10 @@ public long getEnd()\n             return addresses;\n         }\n \n-        public int getEstimatedSizeInBytes()\n+        public long getEstimatedSizeInBytes()\n         {\n-            int result = INSTANCE_SIZE;\n-            result += sizeOfObjectArray(addresses.size());\n-            for (HostAddress address : addresses) {\n-                result += HOST_ADDRESS_INSTANCE_SIZE + address.getHostText().length() * Character.BYTES;\n-            }\n-            return result;\n+            return INSTANCE_SIZE", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU0MTE4MQ==", "bodyText": "Within this class, it doesn't help much. Maybe we could have a new,\u00a0reusable SizeOf for guava classes, but i don't think this is warranted yet.", "url": "https://github.com/trinodb/trino/pull/3162#discussion_r428541181", "createdAt": "2020-05-21T09:19:21Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/InternalHiveSplit.java", "diffHunk": "@@ -275,14 +267,10 @@ public long getEnd()\n             return addresses;\n         }\n \n-        public int getEstimatedSizeInBytes()\n+        public long getEstimatedSizeInBytes()\n         {\n-            int result = INSTANCE_SIZE;\n-            result += sizeOfObjectArray(addresses.size());\n-            for (HostAddress address : addresses) {\n-                result += HOST_ADDRESS_INSTANCE_SIZE + address.getHostText().length() * Character.BYTES;\n-            }\n-            return result;\n+            return INSTANCE_SIZE", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5NDI0Nw=="}, "originalCommit": null, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 423, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}