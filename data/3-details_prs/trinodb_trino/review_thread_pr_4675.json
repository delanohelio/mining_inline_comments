{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMTkyNDM3", "number": 4675, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODowNzo0MFrOEU5G6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODowNzo0MFrOEU5G6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzQyNjM0OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/server/DynamicFilterService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODowNzo0MFrOG7Vt7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMjo1ODoyNFrOG7fNTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg3NDk4OQ==", "bodyText": "Would it be possible to compute the \"non-lazy\" dynamic filters using:\nintersection(getProducedDynamicFilters(plan.getRoot()), getConsumedDynamicFilters(plan.getRoot()))\nso we'll make sure that every produced dynamic filter is handled...", "url": "https://github.com/trinodb/trino/pull/4675#discussion_r464874989", "createdAt": "2020-08-04T08:07:40Z", "author": {"login": "rzeyde-varada"}, "path": "presto-main/src/main/java/io/prestosql/server/DynamicFilterService.java", "diffHunk": "@@ -323,6 +319,39 @@ private synchronized void addDynamicFilters(QueryId queryId, Map<DynamicFilterId\n                         descriptor -> columnHandles.get(Symbol.from(descriptor.getInput()))));\n     }\n \n+    private static Set<DynamicFilterId> getLazyDynamicFilters(PlanFragment plan)\n+    {\n+        // lazy dynamic filters cannot be consumed by the same stage where they are produced as it would result in query deadlock\n+        return difference(getProducedDynamicFilters(plan.getRoot()), getConsumedDynamicFilters(plan.getRoot()));\n+    }\n+\n+    private static Set<DynamicFilterId> getReplicatedDynamicFilters(PlanNode planNode)\n+    {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 161}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk5NzMyNQ==", "bodyText": "Would it be possible to compute the \"non-lazy\" dynamic filters using:\n\nwhat would be the difference here in practice?\nI prefer that lazy DFs are selected explicitly as they can result in deadlock", "url": "https://github.com/trinodb/trino/pull/4675#discussion_r464997325", "createdAt": "2020-08-04T11:58:00Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/server/DynamicFilterService.java", "diffHunk": "@@ -323,6 +319,39 @@ private synchronized void addDynamicFilters(QueryId queryId, Map<DynamicFilterId\n                         descriptor -> columnHandles.get(Symbol.from(descriptor.getInput()))));\n     }\n \n+    private static Set<DynamicFilterId> getLazyDynamicFilters(PlanFragment plan)\n+    {\n+        // lazy dynamic filters cannot be consumed by the same stage where they are produced as it would result in query deadlock\n+        return difference(getProducedDynamicFilters(plan.getRoot()), getConsumedDynamicFilters(plan.getRoot()));\n+    }\n+\n+    private static Set<DynamicFilterId> getReplicatedDynamicFilters(PlanNode planNode)\n+    {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg3NDk4OQ=="}, "originalCommit": null, "originalPosition": 161}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAzMDQ3Ng==", "bodyText": "I prefer that lazy DFs are selected explicitly as they can result in deadlock\n\nAgree :)", "url": "https://github.com/trinodb/trino/pull/4675#discussion_r465030476", "createdAt": "2020-08-04T12:58:24Z", "author": {"login": "rzeyde-varada"}, "path": "presto-main/src/main/java/io/prestosql/server/DynamicFilterService.java", "diffHunk": "@@ -323,6 +319,39 @@ private synchronized void addDynamicFilters(QueryId queryId, Map<DynamicFilterId\n                         descriptor -> columnHandles.get(Symbol.from(descriptor.getInput()))));\n     }\n \n+    private static Set<DynamicFilterId> getLazyDynamicFilters(PlanFragment plan)\n+    {\n+        // lazy dynamic filters cannot be consumed by the same stage where they are produced as it would result in query deadlock\n+        return difference(getProducedDynamicFilters(plan.getRoot()), getConsumedDynamicFilters(plan.getRoot()));\n+    }\n+\n+    private static Set<DynamicFilterId> getReplicatedDynamicFilters(PlanNode planNode)\n+    {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg3NDk4OQ=="}, "originalCommit": null, "originalPosition": 161}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3587, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}