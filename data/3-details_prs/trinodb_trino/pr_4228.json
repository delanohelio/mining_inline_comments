{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMjE5NTU2", "number": 4228, "title": "Fix potential dynamic filters leak", "bodyText": "Query was registered to DynamicFilterService\nvia query state machine event listener. However,\nsuch notifications could potentially be executed\nout of order. Therfore query could have been registered\nafter it has finished. This commit makes sure\nthat query won't be registered to DynamicFilterService\nonce its done and that registration/deregistration\nare executed in parallel.", "createdAt": "2020-06-25T19:39:22Z", "url": "https://github.com/trinodb/trino/pull/4228", "merged": true, "mergeCommit": {"oid": "99d1e7be3545cf6c259aa2ebb12774b4a2b4a6f9"}, "closed": true, "closedAt": "2020-06-29T10:10:25Z", "author": {"login": "sopel39"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcu0AmXgBqjM0ODM4ODE1MTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcvKkATAFqTQzODYxODUyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4Mzk4Mzc1", "url": "https://github.com/trinodb/trino/pull/4228#pullrequestreview-438398375", "createdAt": "2020-06-26T15:38:56Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNTozODo1N1rOGplhsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNTo0MDoyNlrOGplk3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI1OTYzNA==", "bodyText": "Why do this before distributed planning?  In the old code this was performed after starting, which is a few lines down in this file.", "url": "https://github.com/trinodb/trino/pull/4228#discussion_r446259634", "createdAt": "2020-06-26T15:38:57Z", "author": {"login": "dain"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryExecution.java", "diffHunk": "@@ -352,6 +365,7 @@ public void start()\n                 }\n \n                 PlanRoot plan = planQuery();\n+                registerDynamicFilteringQuery();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI2MDIwNw==", "bodyText": "Can we do this without the condition on isEnableDynamicFiltering?  If so, I would just for safety.", "url": "https://github.com/trinodb/trino/pull/4228#discussion_r446260207", "createdAt": "2020-06-26T15:40:00Z", "author": {"login": "dain"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryExecution.java", "diffHunk": "@@ -211,6 +199,31 @@ else if (state.isDone()) {\n         }\n     }\n \n+    private synchronized void registerDynamicFilteringQuery()\n+    {\n+        if (!isEnableDynamicFiltering(stateMachine.getSession())) {\n+            return;\n+        }\n+\n+        if (isDone()) {\n+            // query already finished\n+            return;\n+        }\n+\n+        dynamicFilterService.registerQuery(this);\n+    }\n+\n+    private synchronized void unregisterDynamicFilteringQuery()\n+    {\n+        if (!isEnableDynamicFiltering(stateMachine.getSession())) {\n+            return;\n+        }\n+\n+        if (isDone()) {\n+            dynamicFilterService.removeQuery(stateMachine.getQueryId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI2MDQ0Nw==", "bodyText": "Maybe merge these conditions", "url": "https://github.com/trinodb/trino/pull/4228#discussion_r446260447", "createdAt": "2020-06-26T15:40:26Z", "author": {"login": "dain"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryExecution.java", "diffHunk": "@@ -211,6 +199,31 @@ else if (state.isDone()) {\n         }\n     }\n \n+    private synchronized void registerDynamicFilteringQuery()\n+    {\n+        if (!isEnableDynamicFiltering(stateMachine.getSession())) {\n+            return;\n+        }\n+\n+        if (isDone()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8f8b550fb8bbc568f31d6afe6b917eb563aee11", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/a8f8b550fb8bbc568f31d6afe6b917eb563aee11", "committedDate": "2020-06-26T21:23:01Z", "message": "Fix potential dynamic filters leak\n\nQuery was registered to DynamicFilterService\nvia query state machine event listener. However,\nsuch notifications could potentially be executed\nout of order. Therfore query could have been registered\nafter it has finished. This commit makes sure\nthat query won't be registered to DynamicFilterService\nonce its done and that registration/deregistration\nare executed in parallel."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "a8f8b550fb8bbc568f31d6afe6b917eb563aee11", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/a8f8b550fb8bbc568f31d6afe6b917eb563aee11", "committedDate": "2020-06-26T21:23:01Z", "message": "Fix potential dynamic filters leak\n\nQuery was registered to DynamicFilterService\nvia query state machine event listener. However,\nsuch notifications could potentially be executed\nout of order. Therfore query could have been registered\nafter it has finished. This commit makes sure\nthat query won't be registered to DynamicFilterService\nonce its done and that registration/deregistration\nare executed in parallel."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NTk5OTcw", "url": "https://github.com/trinodb/trino/pull/4228#pullrequestreview-438599970", "createdAt": "2020-06-26T21:16:13Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMToxNjoxM1rOGpu7rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMToxOTozN1rOGpvAQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQxMzc0Mw==", "bodyText": "I prefer to leave comment here as it's not obvious why we check this condition here. I've improved comment.", "url": "https://github.com/trinodb/trino/pull/4228#discussion_r446413743", "createdAt": "2020-06-26T21:16:13Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryExecution.java", "diffHunk": "@@ -211,6 +199,31 @@ else if (state.isDone()) {\n         }\n     }\n \n+    private synchronized void registerDynamicFilteringQuery()\n+    {\n+        if (!isEnableDynamicFiltering(stateMachine.getSession())) {\n+            return;\n+        }\n+\n+        if (isDone()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI2MDQ0Nw=="}, "originalCommit": null, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQxNDkxMg==", "bodyText": "DynamicFilterService needs plan to extract DF, so query registration has to happen after planning.\ndynamic filter suppliers are created in planDistribution just line below.\n\nRegistering query here removes the need to support query has not been registered yet case in DynamicFilterService, which simplifies #4224.\nI will add comment to code", "url": "https://github.com/trinodb/trino/pull/4228#discussion_r446414912", "createdAt": "2020-06-26T21:19:37Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryExecution.java", "diffHunk": "@@ -352,6 +365,7 @@ public void start()\n                 }\n \n                 PlanRoot plan = planQuery();\n+                registerDynamicFilteringQuery();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI1OTYzNA=="}, "originalCommit": null, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NjE4NTI4", "url": "https://github.com/trinodb/trino/pull/4228#pullrequestreview-438618528", "createdAt": "2020-06-26T21:58:54Z", "commit": {"oid": "a8f8b550fb8bbc568f31d6afe6b917eb563aee11"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 183, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}