{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4OTQ0NzQ1", "number": 4187, "title": "Support mysql unsigned types", "bodyText": "Fixes #4146\nMapping unsigned types to wider type.\n\nTINYINT to SMALLINT\nSMALLINT to INTEGER\nINTEGER to BIGINT\nBIGINT to DECIMAL(20,0)", "createdAt": "2020-06-24T03:55:08Z", "url": "https://github.com/trinodb/trino/pull/4187", "merged": true, "mergeCommit": {"oid": "ed1c554acf31db6bab9d2f971419e798ab15289a"}, "closed": true, "closedAt": "2020-06-29T07:35:50Z", "author": {"login": "chhsiao90"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuWvIBgFqTQzNjQ3ODkwNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcv2ol4AH2gAyNDM4OTQ0NzQ1OmQ3YWM4ZWJhZmU1NTBjOGM3Yzc2MmMxZWMzMjNlYmU5YjlhNDVhM2I=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NDc4OTA0", "url": "https://github.com/trinodb/trino/pull/4187#pullrequestreview-436478904", "createdAt": "2020-06-24T09:29:03Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOToyOTowM1rOGoKW_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTozNTozOFrOGoKlaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc2NTk1MA==", "bodyText": "inline", "url": "https://github.com/trinodb/trino/pull/4187#discussion_r444765950", "createdAt": "2020-06-24T09:29:03Z", "author": {"login": "findepi"}, "path": "presto-mysql/src/main/java/io/prestosql/plugin/mysql/MySqlClient.java", "diffHunk": "@@ -174,6 +178,12 @@ protected String getTableSchemaName(ResultSet resultSet)\n         if (mapping.isPresent()) {\n             return mapping;\n         }\n+\n+        Optional<ColumnMapping> unsignedMapping = getUnsignedMapping(typeHandle);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc2NjkxNg==", "bodyText": "Does mysql support user defined types?\nI think it would be better to have a (case-insensitive?) equality condition on type name rather than contains check\nif (jdbcTypeName.equalsIgnoreCase(\"tinyint unsigned\")) {\n\n-- like we do for json", "url": "https://github.com/trinodb/trino/pull/4187#discussion_r444766916", "createdAt": "2020-06-24T09:30:43Z", "author": {"login": "findepi"}, "path": "presto-mysql/src/main/java/io/prestosql/plugin/mysql/MySqlClient.java", "diffHunk": "@@ -306,6 +316,24 @@ private ColumnMapping jsonColumnMapping()\n                 DISABLE_PUSHDOWN);\n     }\n \n+    private static Optional<ColumnMapping> getUnsignedMapping(JdbcTypeHandle typeHandle)\n+    {\n+        if (typeHandle.getJdbcTypeName().isPresent() &&\n+            typeHandle.getJdbcTypeName().get().toUpperCase(ENGLISH).contains(\"UNSIGNED\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc2OTY0MA==", "bodyText": "Did you try defining a DataType for them?\nThis could perhaps look like this:\nprivate static DataType<Short> mysqlUnsignedTinyint()\n{\n    return dataType(\"tinyint unsigned\", SMALLINT, Object::toString);\n}\n\nsee testJson for example. In your test you would use mysqlCreateAndInsert runner only, as Presto obviously cannot create these types.", "url": "https://github.com/trinodb/trino/pull/4187#discussion_r444769640", "createdAt": "2020-06-24T09:35:38Z", "author": {"login": "findepi"}, "path": "presto-mysql/src/test/java/io/prestosql/plugin/mysql/TestMySqlTypeMapping.java", "diffHunk": "@@ -484,6 +485,35 @@ public void testDouble()\n                 .execute(getQueryRunner(), mysqlCreateAndInsert(\"tpch.mysql_test_double\"));\n     }\n \n+    @Test(dataProvider = \"testUnsignedTypesProvider\")\n+    public void testUnsignedTypes(String type, String prestoType, String value)\n+    {\n+        try (TestTable testTable = new TestTable(\n+                mysqlServer::execute,\n+                \"tpch.test_unsigned_types\",\n+                format(\"(d_col %s unsigned)\", type),\n+                singletonList(value))) {\n+            assertQuery(\n+                    \"SELECT d_col FROM \" + testTable.getName(),\n+                    \"VALUES \" + value);\n+            assertQuery(\n+                    sessionWithDecimalMappingAllowOverflow(UNNECESSARY, 8),\n+                    format(\"SELECT column_name, data_type FROM information_schema.columns WHERE table_schema = 'tpch' AND table_schema||'.'||table_name = '%s'\", testTable.getName()),\n+                    format(\"VALUES ('d_col', '%s')\", prestoType));\n+        }\n+    }\n+\n+    @DataProvider\n+    public static Object[][] testUnsignedTypesProvider()\n+    {\n+        return new Object[][] {\n+                {\"tinyint\", \"smallint\", \"255\"},\n+                {\"smallint\", \"integer\", \"65535\"},\n+                {\"integer\", \"bigint\", \"4294967295\"},\n+                {\"bigint\", \"decimal(20,0)\", \"18446744073709551615\"},", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7ac8ebafe550c8c7c762c1ec323ebe9b9a45a3b", "author": {"user": {"login": "chhsiao90", "name": "Chun-Han, Hsiao"}}, "url": "https://github.com/trinodb/trino/commit/d7ac8ebafe550c8c7c762c1ec323ebe9b9a45a3b", "committedDate": "2020-06-29T01:19:44Z", "message": "Support mysql unsigned types\n\nMapping unsigned types to wider type.\n- TINYINT to SMALLINT\n- SMALLINT to INTEGER\n- INTEGER to BIGINT\n- BIGINT to DECIMAL(20,0)"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 140, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}