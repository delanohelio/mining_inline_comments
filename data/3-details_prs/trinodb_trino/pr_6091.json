{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3MzkyMjk3", "number": 6091, "title": "Fix indeterminism in PlanNodeStats mergeability check", "bodyText": "For example HashCollisionPlanNodeStats#mergeWith requires that the\nobject being merged with is also HashCollisionPlanNodeStats  and not\ne.g. plain PlanNodeStats. However,\nthe same validation logic is not applied when the first stats found are\nPlanNodeStats and HashCollisionPlanNodeStats are being merged with.\nThus, whether we were getting a result or a failure was not fully\ndeterministic.", "createdAt": "2020-11-25T11:56:02Z", "url": "https://github.com/trinodb/trino/pull/6091", "merged": true, "mergeCommit": {"oid": "872e0271b46bf6aa2715bdf7f93943bab4256011"}, "closed": true, "closedAt": "2020-11-29T19:03:47Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdf9Gr8AFqTUzODQyNTM4NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgUSudABqjQwNDI5MjM0MjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NDI1Mzg1", "url": "https://github.com/trinodb/trino/pull/6091#pullrequestreview-538425385", "createdAt": "2020-11-25T12:00:24Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NDI1ODAz", "url": "https://github.com/trinodb/trino/pull/6091#pullrequestreview-538425803", "createdAt": "2020-11-25T12:00:54Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMjowMDo1NVrOH5wQoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMjowMDo1NVrOH5wQoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMyMTU2OA==", "bodyText": "We don't know make sure all worker nodes have consistent configuration is the root cause yet", "url": "https://github.com/trinodb/trino/pull/6091#discussion_r530321568", "createdAt": "2020-11-25T12:00:55Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/planprinter/PlanNodeStats.java", "diffHunk": "@@ -153,4 +154,9 @@ public PlanNodeStats mergeWith(PlanNodeStats other)\n                 planNodeOutputPositions, planNodeOutputDataSize,\n                 operatorInputStats);\n     }\n+\n+    protected void checkMergeable(PlanNodeStats other)\n+    {\n+        checkArgument(this.getClass() == other.getClass(), \"Cannot merge stats %s and %s, make sure all worker nodes have consistent configuration\", this, other);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "93e2e0855c3b941ed56ea963c381d928f9fe0eae", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/93e2e0855c3b941ed56ea963c381d928f9fe0eae", "committedDate": "2020-11-26T15:01:12Z", "message": "Fix indeterminism in PlanNodeStats mergeability check\n\nFor example `HashCollisionPlanNodeStats#mergeWith` requires that the\nobject being merged with is also `HashCollisionPlanNodeStats`  and not\ne.g. plain `PlanNodeStats`. However,\nthe same validation logic is not applied when the first stats found are\n`PlanNodeStats` and `HashCollisionPlanNodeStats` are being merged with.\nThus, whether we were getting a result or a failure was not fully\ndeterministic."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "93e2e0855c3b941ed56ea963c381d928f9fe0eae", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/93e2e0855c3b941ed56ea963c381d928f9fe0eae", "committedDate": "2020-11-26T15:01:12Z", "message": "Fix indeterminism in PlanNodeStats mergeability check\n\nFor example `HashCollisionPlanNodeStats#mergeWith` requires that the\nobject being merged with is also `HashCollisionPlanNodeStats`  and not\ne.g. plain `PlanNodeStats`. However,\nthe same validation logic is not applied when the first stats found are\n`PlanNodeStats` and `HashCollisionPlanNodeStats` are being merged with.\nThus, whether we were getting a result or a failure was not fully\ndeterministic."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2339, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}