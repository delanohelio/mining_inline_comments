{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExMzU0MDMx", "number": 3592, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTozMjozNlrOD4ANvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTozMjozNlrOD4ANvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDUwMzY2OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/RubixConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTozMjozNlrOGOlQAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTo0NjowNFrOGOlqJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk0MzU1NA==", "bodyText": "We didnt discuss this much in the initial PR, we fixing on read-through mode by default now? read-through will impact the query times when query hits the cold cache", "url": "https://github.com/trinodb/trino/pull/3592#discussion_r417943554", "createdAt": "2020-04-30T11:32:36Z", "author": {"login": "shubhamtagra"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/RubixConfig.java", "diffHunk": "@@ -18,22 +18,58 @@\n \n import javax.validation.constraints.NotNull;\n \n+import static java.lang.String.format;\n+import static java.util.Locale.ENGLISH;\n+import static java.util.Objects.requireNonNull;\n+\n public class RubixConfig\n {\n-    private boolean parallelWarmupEnabled = true;\n+    public enum ReadMode\n+    {\n+        READ_THROUGH(false),\n+        ASYNC(true);\n+\n+        private final boolean parallelWarmupEnabled;\n+\n+        ReadMode(boolean parallelWarmupEnabled)\n+        {\n+            this.parallelWarmupEnabled = parallelWarmupEnabled;\n+        }\n+\n+        public boolean isParallelWarmupEnabled()\n+        {\n+            return parallelWarmupEnabled;\n+        }\n+\n+        public static ReadMode fromString(String value)\n+        {\n+            switch (requireNonNull(value, \"value is null\").toLowerCase(ENGLISH)) {\n+                case \"async\":\n+                    return ASYNC;\n+                case \"read-through\":\n+                    return READ_THROUGH;\n+            }\n+\n+            throw new IllegalArgumentException(format(\"Unrecognized value: '%s'\", value));\n+        }\n+    }\n+\n     private String cacheLocation;\n     private int bookKeeperServerPort = CacheConfig.DEFAULT_BOOKKEEPER_SERVER_PORT;\n     private int dataTransferServerPort = CacheConfig.DEFAULT_DATA_TRANSFER_SERVER_PORT;\n \n-    public boolean isParallelWarmupEnabled()\n+    private ReadMode readMode = ReadMode.READ_THROUGH;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk1MDI0NQ==", "bodyText": "Let's discuss on #3591.", "url": "https://github.com/trinodb/trino/pull/3592#discussion_r417950245", "createdAt": "2020-04-30T11:46:04Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/RubixConfig.java", "diffHunk": "@@ -18,22 +18,58 @@\n \n import javax.validation.constraints.NotNull;\n \n+import static java.lang.String.format;\n+import static java.util.Locale.ENGLISH;\n+import static java.util.Objects.requireNonNull;\n+\n public class RubixConfig\n {\n-    private boolean parallelWarmupEnabled = true;\n+    public enum ReadMode\n+    {\n+        READ_THROUGH(false),\n+        ASYNC(true);\n+\n+        private final boolean parallelWarmupEnabled;\n+\n+        ReadMode(boolean parallelWarmupEnabled)\n+        {\n+            this.parallelWarmupEnabled = parallelWarmupEnabled;\n+        }\n+\n+        public boolean isParallelWarmupEnabled()\n+        {\n+            return parallelWarmupEnabled;\n+        }\n+\n+        public static ReadMode fromString(String value)\n+        {\n+            switch (requireNonNull(value, \"value is null\").toLowerCase(ENGLISH)) {\n+                case \"async\":\n+                    return ASYNC;\n+                case \"read-through\":\n+                    return READ_THROUGH;\n+            }\n+\n+            throw new IllegalArgumentException(format(\"Unrecognized value: '%s'\", value));\n+        }\n+    }\n+\n     private String cacheLocation;\n     private int bookKeeperServerPort = CacheConfig.DEFAULT_BOOKKEEPER_SERVER_PORT;\n     private int dataTransferServerPort = CacheConfig.DEFAULT_DATA_TRANSFER_SERVER_PORT;\n \n-    public boolean isParallelWarmupEnabled()\n+    private ReadMode readMode = ReadMode.READ_THROUGH;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk0MzU1NA=="}, "originalCommit": null, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4981, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}