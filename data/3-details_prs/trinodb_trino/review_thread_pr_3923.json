{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MDI0NTUy", "number": 3923, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzo1NjoxM1rOEC2tyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzo1NjoxM1rOEC2tyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDI5MDY3OnYy", "diffSide": "LEFT", "path": "presto-main/src/test/java/io/prestosql/sql/planner/iterative/rule/TestReorderJoins.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzo1NjoxM1rOGfkMIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODoxNzo1N1rOGfk2wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc1MTk2OA==", "bodyText": "Is that old values(...) method still used?", "url": "https://github.com/trinodb/trino/pull/3923#discussion_r435751968", "createdAt": "2020-06-05T07:56:13Z", "author": {"login": "sopel39"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/iterative/rule/TestReorderJoins.java", "diffHunk": "@@ -96,8 +91,8 @@ public void testKeepsOutputSymbols()\n                 .on(p ->\n                         p.join(\n                                 INNER,\n-                                p.values(new PlanNodeId(\"valuesA\"), ImmutableList.of(p.symbol(\"A1\"), p.symbol(\"A2\")), TWO_ROWS),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc2Mjg4MQ==", "bodyText": "yes, it provides implementation for other values() methods.", "url": "https://github.com/trinodb/trino/pull/3923#discussion_r435762881", "createdAt": "2020-06-05T08:17:57Z", "author": {"login": "kasiafi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/iterative/rule/TestReorderJoins.java", "diffHunk": "@@ -96,8 +91,8 @@ public void testKeepsOutputSymbols()\n                 .on(p ->\n                         p.join(\n                                 INNER,\n-                                p.values(new PlanNodeId(\"valuesA\"), ImmutableList.of(p.symbol(\"A1\"), p.symbol(\"A2\")), TWO_ROWS),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc1MTk2OA=="}, "originalCommit": null, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4228, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}