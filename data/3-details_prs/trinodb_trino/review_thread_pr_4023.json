{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0MTA1MDc2", "number": 4023, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNzo0ODoxMlrOEFbOqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMDo1NDozN1rOEHPCkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MTI0NDU5OnYy", "diffSide": "RIGHT", "path": "presto-tests/src/test/java/io/prestosql/tests/AbstractTestEngineOnlyQueries.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNzo0ODoxMlrOGjmzmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzozODowN1rOGjyiIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk4OTE0NA==", "bodyText": "It looks like we are missing dedicated test for this feature. Can you please add it where you could also test other parametric types including timestamp, char and decimal?", "url": "https://github.com/trinodb/trino/pull/4023#discussion_r439989144", "createdAt": "2020-06-15T07:48:12Z", "author": {"login": "kokosing"}, "path": "presto-tests/src/test/java/io/prestosql/tests/AbstractTestEngineOnlyQueries.java", "diffHunk": "@@ -730,7 +730,7 @@ public void testDescribeInput()\n         MaterializedResult expected = resultBuilder(session, BIGINT, VARCHAR)\n                 .row(0, \"unknown\")\n                 .row(1, \"bigint\")\n-                .row(2, \"varchar\")\n+                .row(2, \"varchar(25)\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE4MTI4Mw==", "bodyText": "Thanks for your insight. Fixed it", "url": "https://github.com/trinodb/trino/pull/4023#discussion_r440181283", "createdAt": "2020-06-15T13:38:07Z", "author": {"login": "Praveen2112"}, "path": "presto-tests/src/test/java/io/prestosql/tests/AbstractTestEngineOnlyQueries.java", "diffHunk": "@@ -730,7 +730,7 @@ public void testDescribeInput()\n         MaterializedResult expected = resultBuilder(session, BIGINT, VARCHAR)\n                 .row(0, \"unknown\")\n                 .row(1, \"bigint\")\n-                .row(2, \"varchar\")\n+                .row(2, \"varchar(25)\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk4OTE0NA=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzUyMDIyOnYy", "diffSide": "RIGHT", "path": "presto-tests/src/test/java/io/prestosql/tests/AbstractTestEngineOnlyQueries.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODowOToxMVrOGj9KlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODoyNToyMVrOGkQpsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM1NTQ3Nw==", "bodyText": "can you have a test with  timestamp(6) as well as unbound varchar?", "url": "https://github.com/trinodb/trino/pull/4023#discussion_r440355477", "createdAt": "2020-06-15T18:09:11Z", "author": {"login": "kokosing"}, "path": "presto-tests/src/test/java/io/prestosql/tests/AbstractTestEngineOnlyQueries.java", "diffHunk": "@@ -730,7 +730,18 @@ public void testDescribeInput()\n         MaterializedResult expected = resultBuilder(session, BIGINT, VARCHAR)\n                 .row(0, \"unknown\")\n                 .row(1, \"bigint\")\n-                .row(2, \"varchar\")\n+                .row(2, \"varchar(25)\")\n+                .build();\n+        assertEqualsIgnoreOrder(actual, expected);\n+\n+        session = Session.builder(getSession())\n+                .addPreparedStatement(\"my_query\", \"SELECT 1 from (VALUES (CHAR 'Pi', TIMESTAMP '2012-03-14 1:59:26.535', DECIMAL '3.14')) AS t (t_varchar, t_timestamp, t_decimal) WHERE t_varchar = ? AND t_timestamp = ? AND t_decimal = ?\")\n+                .build();\n+        actual = computeActual(session, \"DESCRIBE INPUT my_query\");\n+        expected = resultBuilder(session, BIGINT, VARCHAR)\n+                .row(0, \"char(2)\")\n+                .row(1, \"timestamp(3)\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY3NDczNg==", "bodyText": "I have added test for timestamp and unbounded varchar", "url": "https://github.com/trinodb/trino/pull/4023#discussion_r440674736", "createdAt": "2020-06-16T08:25:21Z", "author": {"login": "Praveen2112"}, "path": "presto-tests/src/test/java/io/prestosql/tests/AbstractTestEngineOnlyQueries.java", "diffHunk": "@@ -730,7 +730,18 @@ public void testDescribeInput()\n         MaterializedResult expected = resultBuilder(session, BIGINT, VARCHAR)\n                 .row(0, \"unknown\")\n                 .row(1, \"bigint\")\n-                .row(2, \"varchar\")\n+                .row(2, \"varchar(25)\")\n+                .build();\n+        assertEqualsIgnoreOrder(actual, expected);\n+\n+        session = Session.builder(getSession())\n+                .addPreparedStatement(\"my_query\", \"SELECT 1 from (VALUES (CHAR 'Pi', TIMESTAMP '2012-03-14 1:59:26.535', DECIMAL '3.14')) AS t (t_varchar, t_timestamp, t_decimal) WHERE t_varchar = ? AND t_timestamp = ? AND t_decimal = ?\")\n+                .build();\n+        actual = computeActual(session, \"DESCRIBE INPUT my_query\");\n+        expected = resultBuilder(session, BIGINT, VARCHAR)\n+                .row(0, \"char(2)\")\n+                .row(1, \"timestamp(3)\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM1NTQ3Nw=="}, "originalCommit": null, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDIxOTA3OnYy", "diffSide": "RIGHT", "path": "presto-tests/src/test/java/io/prestosql/tests/AbstractTestEngineOnlyQueries.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMDo1NDozN1rOGmhA-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMDo1NDozN1rOGmhA-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAzOTk5NQ==", "bodyText": "This is hard to read due to the length -- try to wrap it somehow", "url": "https://github.com/trinodb/trino/pull/4023#discussion_r443039995", "createdAt": "2020-06-19T20:54:37Z", "author": {"login": "electrum"}, "path": "presto-tests/src/test/java/io/prestosql/tests/AbstractTestEngineOnlyQueries.java", "diffHunk": "@@ -730,7 +730,24 @@ public void testDescribeInput()\n         MaterializedResult expected = resultBuilder(session, BIGINT, VARCHAR)\n                 .row(0, \"unknown\")\n                 .row(1, \"bigint\")\n-                .row(2, \"varchar\")\n+                .row(2, \"varchar(25)\")\n+                .build();\n+        assertEqualsIgnoreOrder(actual, expected);\n+\n+        session = Session.builder(getSession())\n+                .addPreparedStatement(\n+                        \"my_query\",\n+                        \"SELECT 1 from \" +\n+                        \"    (VALUES (CHAR 'Pi', CAST ('PI' AS VARCHAR), TIMESTAMP '2012-03-14 1:59:26.535', TIMESTAMP '2012-03-14 1:59:26.535897', DECIMAL '3.14')) AS t (t_char, t_varchar, t_timestamp, t_timestamp_2, t_decimal) \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4070, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}