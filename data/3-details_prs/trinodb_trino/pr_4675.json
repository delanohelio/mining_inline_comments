{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMTkyNDM3", "number": 4675, "title": "Improve extraction of lazy dynamic filter", "bodyText": "", "createdAt": "2020-08-03T13:54:36Z", "url": "https://github.com/trinodb/trino/pull/4675", "merged": true, "mergeCommit": {"oid": "80e1bcc2e38d28a05d9caa4440cadf359ef4fdbf"}, "closed": true, "closedAt": "2020-08-20T13:35:55Z", "author": {"login": "sopel39"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7iFEDgFqTQ2MDU4ODQ4NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAvy6ZgBqjM2NzUxMjAyNjA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNTg4NDg1", "url": "https://github.com/trinodb/trino/pull/4675#pullrequestreview-460588485", "createdAt": "2020-08-04T08:07:40Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODowNzo0MFrOG7Vt7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODowNzo0MFrOG7Vt7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg3NDk4OQ==", "bodyText": "Would it be possible to compute the \"non-lazy\" dynamic filters using:\nintersection(getProducedDynamicFilters(plan.getRoot()), getConsumedDynamicFilters(plan.getRoot()))\nso we'll make sure that every produced dynamic filter is handled...", "url": "https://github.com/trinodb/trino/pull/4675#discussion_r464874989", "createdAt": "2020-08-04T08:07:40Z", "author": {"login": "rzeyde-varada"}, "path": "presto-main/src/main/java/io/prestosql/server/DynamicFilterService.java", "diffHunk": "@@ -323,6 +319,39 @@ private synchronized void addDynamicFilters(QueryId queryId, Map<DynamicFilterId\n                         descriptor -> columnHandles.get(Symbol.from(descriptor.getInput()))));\n     }\n \n+    private static Set<DynamicFilterId> getLazyDynamicFilters(PlanFragment plan)\n+    {\n+        // lazy dynamic filters cannot be consumed by the same stage where they are produced as it would result in query deadlock\n+        return difference(getProducedDynamicFilters(plan.getRoot()), getConsumedDynamicFilters(plan.getRoot()));\n+    }\n+\n+    private static Set<DynamicFilterId> getReplicatedDynamicFilters(PlanNode planNode)\n+    {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 161}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNjc0ODQ2", "url": "https://github.com/trinodb/trino/pull/4675#pullrequestreview-470674846", "createdAt": "2020-08-19T17:09:34Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "e07c7cc7ccb7e09298c0b3aba1452cc00df14b21", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/e07c7cc7ccb7e09298c0b3aba1452cc00df14b21", "committedDate": "2020-08-20T12:57:08Z", "message": "Remove \"num\" from dynamic filters stat fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "270b9bd0b74764a9af8588d43c668559d30cfdc1", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/270b9bd0b74764a9af8588d43c668559d30cfdc1", "committedDate": "2020-08-20T12:57:09Z", "message": "Use forEach directly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80dfc25069f9494ca16e66d60dc64ffba1b8f3c8", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/80dfc25069f9494ca16e66d60dc64ffba1b8f3c8", "committedDate": "2020-08-20T12:57:09Z", "message": "Simplify LocalDynamicFilterConsumer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6574ba40401bd30d6647014eba59d862809a215c", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/6574ba40401bd30d6647014eba59d862809a215c", "committedDate": "2020-08-20T12:57:09Z", "message": "Introduce DynamicFilterService.DynamicFilterContext"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1e2ffe68b735c05cf6d45fdb5dfaf8ccebfa58b", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/c1e2ffe68b735c05cf6d45fdb5dfaf8ccebfa58b", "committedDate": "2020-08-20T12:57:09Z", "message": "Make sure lazy dynamic filters are blocked initally"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "215225dedcfe11c38b052d74868b24f08894b077", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/215225dedcfe11c38b052d74868b24f08894b077", "committedDate": "2020-08-20T12:57:35Z", "message": "Improve extraction of lazy dynamic filters\n\nLazy dynamic filters cannot be consumed by the same stage\nwhere they are produced (join node) as it would result in\nquery deadlock."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc49bb3b89bfc6f03f1c2e6b78bdb275ef9b1b24", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/fc49bb3b89bfc6f03f1c2e6b78bdb275ef9b1b24", "committedDate": "2020-08-20T12:57:36Z", "message": "Use explicit field for lazy dynamic filter futures"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "fc49bb3b89bfc6f03f1c2e6b78bdb275ef9b1b24", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/fc49bb3b89bfc6f03f1c2e6b78bdb275ef9b1b24", "committedDate": "2020-08-20T12:57:36Z", "message": "Use explicit field for lazy dynamic filter futures"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4613, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}