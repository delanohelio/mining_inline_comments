{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNzEwNDk2", "number": 4924, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNzoyNDozM1rOEbDCJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNzoyNjo1MFrOEbDE8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2Nzk2NzEwOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/sql/planner/LocalDynamicFilterConsumer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNzoyNDozM1rOHE1TjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwOTozOToxMVrOHFco-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgyOTcwOA==", "bodyText": "What if two calls to addPartition race with each other? Whoever's watching resultFuture may see one value and miss the other one. If resultFuture is being used in any way other that as a flag to indicate something changed, that would be a problem.", "url": "https://github.com/trinodb/trino/pull/4924#discussion_r474829708", "createdAt": "2020-08-21T17:24:33Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/LocalDynamicFilterConsumer.java", "diffHunk": "@@ -91,16 +91,22 @@ public LocalDynamicFilterConsumer(Multimap<DynamicFilterId, Symbol> probeSymbols\n         return Futures.transform(resultFuture, this::convertTupleDomainForLocalFilters, directExecutor());\n     }\n \n-    private synchronized void addPartition(TupleDomain<DynamicFilterId> tupleDomain)\n+    private void addPartition(TupleDomain<DynamicFilterId> tupleDomain)\n     {\n-        // Called concurrently by each DynamicFilterSourceOperator instance (when collection is over).\n-        verify(partitions.size() < partitionCount);\n-        // NOTE: may result in a bit more relaxed constraint if there are multiple columns and multiple rows.\n-        // See the comment at TupleDomain::columnWiseUnion() for more details.\n-        partitions.add(tupleDomain);\n-        if (partitions.size() == partitionCount) {\n-            TupleDomain<DynamicFilterId> result = TupleDomain.columnWiseUnion(partitions);\n-            // No more partitions are left to be processed.\n+        TupleDomain<DynamicFilterId> result = null;\n+        synchronized (this) {\n+            // Called concurrently by each DynamicFilterSourceOperator instance (when collection is over).\n+            verify(partitions.size() < partitionCount);\n+            // NOTE: may result in a bit more relaxed constraint if there are multiple columns and multiple rows.\n+            // See the comment at TupleDomain::columnWiseUnion() for more details.\n+            partitions.add(tupleDomain);\n+            if (partitions.size() == partitionCount) {\n+                // No more partitions are left to be processed.\n+                result = TupleDomain.columnWiseUnion(partitions);\n+            }\n+        }\n+\n+        if (result != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "929a0dcb02e3b25fd36e9d47ce49dcf2bd02752c"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ3NDE3MQ==", "bodyText": "resultFuture contains union of all partitions.\nThe condition of setting future is:\n\nall partitions have been set (none of them is all)\none of the partitions is all\n\nIn 1) only the last partition would trigger setting of the future\nIn 2) the final DF would always be the same (all), but we don't really have to wait for all partitions", "url": "https://github.com/trinodb/trino/pull/4924#discussion_r475474171", "createdAt": "2020-08-24T09:39:11Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/LocalDynamicFilterConsumer.java", "diffHunk": "@@ -91,16 +91,22 @@ public LocalDynamicFilterConsumer(Multimap<DynamicFilterId, Symbol> probeSymbols\n         return Futures.transform(resultFuture, this::convertTupleDomainForLocalFilters, directExecutor());\n     }\n \n-    private synchronized void addPartition(TupleDomain<DynamicFilterId> tupleDomain)\n+    private void addPartition(TupleDomain<DynamicFilterId> tupleDomain)\n     {\n-        // Called concurrently by each DynamicFilterSourceOperator instance (when collection is over).\n-        verify(partitions.size() < partitionCount);\n-        // NOTE: may result in a bit more relaxed constraint if there are multiple columns and multiple rows.\n-        // See the comment at TupleDomain::columnWiseUnion() for more details.\n-        partitions.add(tupleDomain);\n-        if (partitions.size() == partitionCount) {\n-            TupleDomain<DynamicFilterId> result = TupleDomain.columnWiseUnion(partitions);\n-            // No more partitions are left to be processed.\n+        TupleDomain<DynamicFilterId> result = null;\n+        synchronized (this) {\n+            // Called concurrently by each DynamicFilterSourceOperator instance (when collection is over).\n+            verify(partitions.size() < partitionCount);\n+            // NOTE: may result in a bit more relaxed constraint if there are multiple columns and multiple rows.\n+            // See the comment at TupleDomain::columnWiseUnion() for more details.\n+            partitions.add(tupleDomain);\n+            if (partitions.size() == partitionCount) {\n+                // No more partitions are left to be processed.\n+                result = TupleDomain.columnWiseUnion(partitions);\n+            }\n+        }\n+\n+        if (result != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgyOTcwOA=="}, "originalCommit": {"oid": "929a0dcb02e3b25fd36e9d47ce49dcf2bd02752c"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2Nzk3NDI3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/server/DynamicFilterService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNzoyNjo1MFrOHE1X5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMTozODowM1rOHE-iOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgzMDgyMg==", "bodyText": "Not sure I understand why. Aren't the filters \"ANDed\" together?", "url": "https://github.com/trinodb/trino/pull/4924#discussion_r474830822", "createdAt": "2020-08-21T17:26:50Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/server/DynamicFilterService.java", "diffHunk": "@@ -268,6 +268,11 @@ void collectDynamicFilters()\n                         .collect(groupingBy(Map.Entry::getKey, mapping(Map.Entry::getValue, toImmutableList())))\n                         .entrySet().stream()\n                         .filter(stageDomains -> {\n+                            if (stageDomains.getValue().stream().anyMatch(Domain::isAll)) {\n+                                // if one of the domains is all, we don't need to get dynamic filters from all tasks", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a05e91fee593162be3ff0325fd916b712b2feacd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk4MDkyMA==", "bodyText": "union @ https://github.com/prestosql/presto/blob/80e1bcc2e38d28a05d9caa4440cadf359ef4fdbf/presto-main/src/main/java/io/prestosql/server/DynamicFilterService.java#L279", "url": "https://github.com/trinodb/trino/pull/4924#discussion_r474980920", "createdAt": "2020-08-21T21:38:03Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/server/DynamicFilterService.java", "diffHunk": "@@ -268,6 +268,11 @@ void collectDynamicFilters()\n                         .collect(groupingBy(Map.Entry::getKey, mapping(Map.Entry::getValue, toImmutableList())))\n                         .entrySet().stream()\n                         .filter(stageDomains -> {\n+                            if (stageDomains.getValue().stream().anyMatch(Domain::isAll)) {\n+                                // if one of the domains is all, we don't need to get dynamic filters from all tasks", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgzMDgyMg=="}, "originalCommit": {"oid": "a05e91fee593162be3ff0325fd916b712b2feacd"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3241, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}