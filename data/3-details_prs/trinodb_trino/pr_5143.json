{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1MjcwMTE4", "number": 5143, "title": "Product tests improvements", "bodyText": "This PR introduces the following product tests improvements:\n\nadds logging of the container and environment lifecycle events (starting, started, stopping, stopped)\nrefactor codebase to use common, const container names\nadds printing of container stats (cpu/mem/network/pids) before it's stopped\nrefactors picocli's Commands to use Callable and make exit codes explicit\nadds 4 distinct container output handling modes (DISCARD, PRINT, WRITE, PRINT_WRITE)", "createdAt": "2020-09-11T17:00:02Z", "url": "https://github.com/trinodb/trino/pull/5143", "merged": true, "mergeCommit": {"oid": "9291cd6fdbac0fec67c490359b0907aa45150857"}, "closed": true, "closedAt": "2020-09-14T10:34:02Z", "author": {"login": "wendigo"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdH5dFsAFqTQ4NzAxOTgzOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdIv5megBqjM3NjIzOTkyMDI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MDE5ODM5", "url": "https://github.com/trinodb/trino/pull/5143#pullrequestreview-487019839", "createdAt": "2020-09-11T18:11:04Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODoxMTowNFrOHQo4OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODoxMTowNFrOHQo4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIwOTAxNg==", "bodyText": "private?", "url": "https://github.com/trinodb/trino/pull/5143#discussion_r487209016", "createdAt": "2020-09-11T18:11:04Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/Environment.java", "diffHunk": "@@ -173,6 +261,16 @@ public Builder removeContainer(String name)\n         }\n \n         public Environment build()\n+        {\n+            return build(Optional.empty());\n+        }\n+\n+        public Environment build(EnvironmentListener listener)\n+        {\n+            return build(Optional.of(listener));\n+        }\n+\n+        protected Environment build(Optional<EnvironmentListener> listener)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 159}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MDIwMjMw", "url": "https://github.com/trinodb/trino/pull/5143#pullrequestreview-487020230", "createdAt": "2020-09-11T18:11:39Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODoxMTozOVrOHQo5Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODoxMTozOVrOHQo5Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIwOTI5OA==", "bodyText": "nit: I would drop \"on\" prefix from the methods.", "url": "https://github.com/trinodb/trino/pull/5143#discussion_r487209298", "createdAt": "2020-09-11T18:11:39Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentListener.java", "diffHunk": "@@ -0,0 +1,164 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.tests.product.launcher.env;\n+\n+import com.github.dockerjava.api.command.InspectContainerResponse;\n+import io.airlift.log.Logger;\n+\n+import java.util.List;\n+\n+public interface EnvironmentListener", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MDMxNTQ3", "url": "https://github.com/trinodb/trino/pull/5143#pullrequestreview-487031547", "createdAt": "2020-09-11T18:29:22Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODoyOToyMlrOHQpbbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODoyOToyMlrOHQpbbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxODAyOA==", "bodyText": "this can be moved to commit which introduced compose", "url": "https://github.com/trinodb/trino/pull/5143#discussion_r487218028", "createdAt": "2020-09-11T18:29:22Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentListener.java", "diffHunk": "@@ -54,56 +56,56 @@ default void onContainerStopped(DockerContainer container, InspectContainerRespo\n     {\n     }\n \n-    static EnvironmentListener compose(List<EnvironmentListener> listeners)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MDMyMzA1", "url": "https://github.com/trinodb/trino/pull/5143#pullrequestreview-487032305", "createdAt": "2020-09-11T18:30:31Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODozMDozMlrOHQpdvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODozMDozMlrOHQpdvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxODYyMA==", "bodyText": "make logBaseDir non-empty and instead do not create listener in code flow when now you create it with Optional.empty()", "url": "https://github.com/trinodb/trino/pull/5143#discussion_r487218620", "createdAt": "2020-09-11T18:30:32Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentListener.java", "diffHunk": "@@ -161,4 +163,24 @@ public void onContainerStopped(DockerContainer container, InspectContainerRespon\n             }\n         };\n     }\n+\n+    static EnvironmentListener logCopyingListener(Optional<Path> logBaseDir)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MDMyNDAz", "url": "https://github.com/trinodb/trino/pull/5143#pullrequestreview-487032403", "createdAt": "2020-09-11T18:30:41Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODozMDo0MVrOHQpd-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODozMDo0MVrOHQpd-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxODY4Mw==", "bodyText": "why do we need this one?", "url": "https://github.com/trinodb/trino/pull/5143#discussion_r487218683", "createdAt": "2020-09-11T18:30:41Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentListener.java", "diffHunk": "@@ -161,4 +163,24 @@ public void onContainerStopped(DockerContainer container, InspectContainerRespon\n             }\n         };\n     }\n+\n+    static EnvironmentListener logCopyingListener(Optional<Path> logBaseDir)\n+    {\n+        if (logBaseDir.isEmpty()) {\n+            return noop();\n+        }\n+\n+        return new EnvironmentListener() {\n+            @Override\n+            public void onContainerStopping(DockerContainer container, InspectContainerResponse response)\n+            {\n+                container.copyLogsToHostPath(logBaseDir.get());\n+            }\n+        };\n+    }\n+\n+    static EnvironmentListener noop()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 97}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MDM1NDMz", "url": "https://github.com/trinodb/trino/pull/5143#pullrequestreview-487035433", "createdAt": "2020-09-11T18:35:43Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODozNTo0M1rOHQpm5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODozNTo0M1rOHQpm5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIyMDk2NA==", "bodyText": "I think it is fine to leave if it works", "url": "https://github.com/trinodb/trino/pull/5143#discussion_r487220964", "createdAt": "2020-09-11T18:35:43Z", "author": {"login": "losipiuk"}, "path": ".github/workflows/ci.yml", "diffHunk": "@@ -298,5 +298,5 @@ jobs:\n           rm -rf ~/.m2/repository\n       - name: Product Tests\n         run: |\n-          presto-product-tests-launcher/bin/run-launcher suite run --suite ${{ matrix.suite }} --config ${{ matrix.config }} --no-bind\n+          presto-product-tests-launcher/bin/run-launcher suite run --suite ${{ matrix.suite }} --config ${{ matrix.config }} --no-bind --logs-dir logs/", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MDM1NzI2", "url": "https://github.com/trinodb/trino/pull/5143#pullrequestreview-487035726", "createdAt": "2020-09-11T18:36:12Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MjA5NDk3", "url": "https://github.com/trinodb/trino/pull/5143#pullrequestreview-487209497", "createdAt": "2020-09-12T06:47:42Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQwNjo0Nzo0MlrOHQzJbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQwNjo0Nzo0MlrOHQzJbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM3NzI2MQ==", "bodyText": "This should be in different commit", "url": "https://github.com/trinodb/trino/pull/5143#discussion_r487377261", "createdAt": "2020-09-12T06:47:42Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/DockerContainer.java", "diffHunk": "@@ -155,26 +153,70 @@ private void copyFileToContainer(String containerPath, Runnable copy)\n         log.info(\"Copied files into %s %s in %.1f s\", this, containerPath, stopwatch.elapsed(MILLISECONDS) / 1000.);\n     }\n \n-    // Mounting a non-existing file results in docker creating a directory. This is often not the desired effect. Fail fast instead.\n-    private static void verifyHostPath(String hostPath)\n+    public void clearDependencies()\n     {\n-        if (!Files.exists(Paths.get(hostPath))) {\n-            throw new IllegalArgumentException(\"Host path does not exist: \" + hostPath);\n+        dependencies.clear();\n+    }\n+\n+    public void copyLogsToHostPath(Path hostPath)\n+    {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MjA5NzI0", "url": "https://github.com/trinodb/trino/pull/5143#pullrequestreview-487209724", "createdAt": "2020-09-12T06:52:35Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQwNjo1MjozNVrOHQzK7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQwNjo1MjozNVrOHQzK7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM3NzY0Ng==", "bodyText": "Can we print to stout also in write mode", "url": "https://github.com/trinodb/trino/pull/5143#discussion_r487377646", "createdAt": "2020-09-12T06:52:35Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/Environment.java", "diffHunk": "@@ -280,20 +293,24 @@ public Environment build(EnvironmentListener listener)\n \n         private Environment build(Optional<EnvironmentListener> listener)\n         {\n-            // write directly to System.out, bypassing logging & io.airlift.log.Logging#rewireStdStreams\n-            PrintStream out;\n-            try {\n-                //noinspection resource\n-                out = new PrintStream(new FileOutputStream(FileDescriptor.out), true, Charset.defaultCharset().name());\n-            }\n-            catch (UnsupportedEncodingException e) {\n-                throw new RuntimeException(e);\n+            switch (outputMode) {\n+                case DISCARD:\n+                    log.warn(\"Containers logs are not printed to stdout\");\n+                    setContainerOutputConsumer(this::discardContainerLogs);\n+                    break;\n+\n+                case PRINT:", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 105}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MjA5Nzg1", "url": "https://github.com/trinodb/trino/pull/5143#pullrequestreview-487209785", "createdAt": "2020-09-12T06:53:49Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQwNjo1Mzo0OVrOHQzLSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQwNjo1Mzo0OVrOHQzLSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM3NzczOQ==", "bodyText": "Separate commit?", "url": "https://github.com/trinodb/trino/pull/5143#discussion_r487377739", "createdAt": "2020-09-12T06:53:49Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/Environment.java", "diffHunk": "@@ -304,7 +321,57 @@ private Environment build(Optional<EnvironmentListener> listener)\n                         });\n             });\n \n-            return new Environment(name, containers, listener);\n+            return new Environment(name, startupRetries, containers, listener);\n+        }\n+\n+        private Consumer<OutputFrame> writeContainerLogs(DockerContainer container, Path path)\n+        {\n+            Path containerLogFile = path.resolve(container.getLogicalName() + \"/container.log\");\n+            log.info(\"Writing container %s logs to %s\", container, containerLogFile);\n+\n+            try {\n+                ensurePathExists(containerLogFile.getParent());\n+                return new PrintingLogConsumer(new PrintStream(containerLogFile.toFile()), \"\");\n+            }\n+            catch (FileNotFoundException e) {\n+                throw new UncheckedIOException(e);\n+            }\n+        }\n+\n+        private Consumer<OutputFrame> printContainerLogs(DockerContainer container)\n+        {\n+            try {\n+                // write directly to System.out, bypassing logging & io.airlift.log.Logging#rewireStdStreams\n+                //noinspection resource\n+                PrintStream out = new PrintStream(new FileOutputStream(FileDescriptor.out), true, Charset.defaultCharset().name());\n+                return new PrintingLogConsumer(out, format(\"%-20s| \", container.getLogicalName()));\n+            }\n+            catch (UnsupportedEncodingException e) {\n+                throw new RuntimeException(e);\n+            }\n+        }\n+\n+        private Consumer<OutputFrame> discardContainerLogs(DockerContainer container)\n+        {\n+            // Discard log frames\n+            return outputFrame -> {};\n+        }\n+\n+        private void setContainerOutputConsumer(Function<DockerContainer, Consumer<OutputFrame>> consumer)\n+        {\n+            configureContainers(container -> container.withLogConsumer(consumer.apply(container)));\n+        }\n+\n+        public Builder setStartupRetries(int startupRetries)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 167}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NDQ0OTc3", "url": "https://github.com/trinodb/trino/pull/5143#pullrequestreview-487444977", "createdAt": "2020-09-14T06:23:08Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNjoyMzowOFrOHRFXIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNjoyNjozNlrOHRFc8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY3NTY4Mg==", "bodyText": "unrelated to commit", "url": "https://github.com/trinodb/trino/pull/5143#discussion_r487675682", "createdAt": "2020-09-14T06:23:08Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentListener.java", "diffHunk": "@@ -73,7 +75,7 @@ public void environmentStarted(Environment environment)\n             @Override\n             public void environmentStopping(Environment environment)\n             {\n-                Arrays.stream(listeners).forEach(listener -> listener.environmentStarted(environment));\n+                Arrays.stream(listeners).forEach(listener -> listener.environmentStopping(environment));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY3NzE3MA==", "bodyText": "Well - I meant whole migration from exposeLogsInHOstPath to log copying. Currently it is part of Add DockerContainer logical name.", "url": "https://github.com/trinodb/trino/pull/5143#discussion_r487677170", "createdAt": "2020-09-14T06:26:36Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/DockerContainer.java", "diffHunk": "@@ -155,26 +153,70 @@ private void copyFileToContainer(String containerPath, Runnable copy)\n         log.info(\"Copied files into %s %s in %.1f s\", this, containerPath, stopwatch.elapsed(MILLISECONDS) / 1000.);\n     }\n \n-    // Mounting a non-existing file results in docker creating a directory. This is often not the desired effect. Fail fast instead.\n-    private static void verifyHostPath(String hostPath)\n+    public void clearDependencies()\n     {\n-        if (!Files.exists(Paths.get(hostPath))) {\n-            throw new IllegalArgumentException(\"Host path does not exist: \" + hostPath);\n+        dependencies.clear();\n+    }\n+\n+    public void copyLogsToHostPath(Path hostPath)\n+    {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM3NzI2MQ=="}, "originalCommit": null, "originalPosition": 80}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b35b9495d6dfd41f8db2f364eb32df29419e9241", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/b35b9495d6dfd41f8db2f364eb32df29419e9241", "committedDate": "2020-09-14T09:13:45Z", "message": "Improve product tests environment startup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f9827d2b317fbe5b042e53f165d276959a9297b", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/5f9827d2b317fbe5b042e53f165d276959a9297b", "committedDate": "2020-09-14T09:13:49Z", "message": "Make EnvironmentDefaults class final"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2debaec7cbe48c16f97934c47376d62e7252d166", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/2debaec7cbe48c16f97934c47376d62e7252d166", "committedDate": "2020-09-14T09:21:17Z", "message": "Add DockerContainer logical name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d922e881cb1e27ea0ce273580dcf3bef6b7a82aa", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/d922e881cb1e27ea0ce273580dcf3bef6b7a82aa", "committedDate": "2020-09-14T09:33:19Z", "message": "List and copy log files from running container"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a412fe74b2ca75cfdb5ac1d4fb510cb8b355b033", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/a412fe74b2ca75cfdb5ac1d4fb510cb8b355b033", "committedDate": "2020-09-14T09:34:00Z", "message": "Print container stats on container shutdown"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bec0d9761532970f8200fd9a3018e51525634899", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/bec0d9761532970f8200fd9a3018e51525634899", "committedDate": "2020-09-14T09:34:01Z", "message": "Make launcher commands callable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82f6ed29c5240d1534a4b0f8d662acdf350a5e98", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/82f6ed29c5240d1534a4b0f8d662acdf350a5e98", "committedDate": "2020-09-14T09:34:01Z", "message": "Configure launcher bin location"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7afa90a17b8b9fb8ad706bfc05ca4ec8519e740b", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/7afa90a17b8b9fb8ad706bfc05ca4ec8519e740b", "committedDate": "2020-09-14T09:34:02Z", "message": "Drop environment configuration comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85f1cb64c5e2b6adb8b0fbe3ce5acea8ea62be40", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/85f1cb64c5e2b6adb8b0fbe3ce5acea8ea62be40", "committedDate": "2020-09-14T09:34:02Z", "message": "Removeme: copy logs from containers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4d9a115adf2e6001d814ba5bf6d6d480dc9b21c", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/f4d9a115adf2e6001d814ba5bf6d6d480dc9b21c", "committedDate": "2020-09-14T09:34:02Z", "message": "Fix suite describe command printing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05bed984aed44efc2d917687b5c76da0f86fe554", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/05bed984aed44efc2d917687b5c76da0f86fe554", "committedDate": "2020-09-14T09:34:02Z", "message": "Add container output handling modes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37f5d81270cc1155e49fa0954e9341e686c29f16", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/37f5d81270cc1155e49fa0954e9341e686c29f16", "committedDate": "2020-09-14T09:34:33Z", "message": "Refactor logCopyingListener initialization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6abf06a0db0172f252c6e6131a026e1dfeed88f5", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/6abf06a0db0172f252c6e6131a026e1dfeed88f5", "committedDate": "2020-09-14T09:34:35Z", "message": "Remove redundant pruneEnvironment call"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed151e8bcf9d11611c40e8f5ece22997318a302a", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/ed151e8bcf9d11611c40e8f5ece22997318a302a", "committedDate": "2020-09-14T09:34:35Z", "message": "Pass startup retries to environment builder"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "ed151e8bcf9d11611c40e8f5ece22997318a302a", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/ed151e8bcf9d11611c40e8f5ece22997318a302a", "committedDate": "2020-09-14T09:34:35Z", "message": "Pass startup retries to environment builder"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3961, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}