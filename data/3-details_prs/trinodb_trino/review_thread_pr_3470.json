{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1Mzg3ODg5", "number": 3470, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMjo1MDo0NlrOD0A-ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMjo1MDo0NlrOD0A-ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1ODY4NjAyOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/sql/planner/iterative/rule/PushPredicateIntoTableScan.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMjo1MDo0NlrOGIwFFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMjo1MDo0NlrOGIwFFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgyOTUyNQ==", "bodyText": "This should compare the table handles directly. This layer of the code (i.e., the optimizer) shouldn't be concerned about ConnectorTableHandle.", "url": "https://github.com/trinodb/trino/pull/3470#discussion_r411829525", "createdAt": "2020-04-21T02:50:46Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/iterative/rule/PushPredicateIntoTableScan.java", "diffHunk": "@@ -131,7 +131,8 @@ private boolean arePlansSame(FilterNode filter, TableScanNode tableScan, PlanNod\n \n         TableScanNode rewrittenTableScan = (TableScanNode) rewrittenFilter.getSource();\n \n-        return Objects.equals(tableScan.getEnforcedConstraint(), rewrittenTableScan.getEnforcedConstraint());\n+        return Objects.equals(tableScan.getEnforcedConstraint(), rewrittenTableScan.getEnforcedConstraint()) &&\n+                Objects.equals(tableScan.getTable().getConnectorHandle(), rewrittenTableScan.getTable().getConnectorHandle());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 173, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}