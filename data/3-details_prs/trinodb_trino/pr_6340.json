{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMDU1Mzk2", "number": 6340, "title": "Allow implementations of AbstractRowEncoder to support Structural type", "bodyText": "", "createdAt": "2020-12-15T07:58:21Z", "url": "https://github.com/trinodb/trino/pull/6340", "merged": true, "mergeCommit": {"oid": "79ef8d8f57973dbfaeea23c6824c1f27ec5e2aac"}, "closed": true, "closedAt": "2020-12-16T08:51:45Z", "author": {"login": "Praveen2112"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmVzrygBqjQxMTMyMjQ0MTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmq_aZAFqTU1MzQ3MDIyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMjE1ODcy", "url": "https://github.com/trinodb/trino/pull/6340#pullrequestreview-552215872", "createdAt": "2020-12-15T08:39:11Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODozOToxMVrOIF_Hnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODo0MDo0N1rOIF_L3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE0NzkzNQ==", "bodyText": "This error message could be extracted to separate commit.", "url": "https://github.com/trinodb/trino/pull/6340#discussion_r543147935", "createdAt": "2020-12-15T08:39:11Z", "author": {"login": "kokosing"}, "path": "presto-kafka/src/main/java/io/prestosql/plugin/kafka/encoder/AbstractRowEncoder.java", "diffHunk": "@@ -118,8 +122,17 @@ else if (type instanceof TimestampType) {\n         else if (type instanceof TimestampWithTimeZoneType) {\n             appendSqlTimestampWithTimeZone((SqlTimestampWithTimeZone) type.getObjectValue(session, block, position));\n         }\n+        else if (type instanceof ArrayType) {\n+            appendArray((List<Object>) type.getObjectValue(session, block, position));\n+        }\n+        else if (type instanceof MapType) {\n+            appendMap((Map<Object, Object>) type.getObjectValue(session, block, position));\n+        }\n+        else if (type instanceof RowType) {\n+            appendRow((List<Object>) type.getObjectValue(session, block, position));\n+        }\n         else {\n-            throw new UnsupportedOperationException(format(\"Column '%s' does not support 'null' value\", columnHandles.get(currentColumnIndex).getName()));\n+            throw new UnsupportedOperationException(format(\"Unsupported type '%s' for column '%s'\", type, columnHandles.get(currentColumnIndex).getName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE0OTAyMQ==", "bodyText": "Commit message is a bit misleading. You didn't add support for structural types, but you allowed to implementations of AbstractRowEncoder to support them.\n[optional] It would be nice use it, how about insert of structural types in Avro for Kafka?", "url": "https://github.com/trinodb/trino/pull/6340#discussion_r543149021", "createdAt": "2020-12-15T08:40:47Z", "author": {"login": "kokosing"}, "path": "presto-kafka/src/main/java/io/prestosql/plugin/kafka/encoder/AbstractRowEncoder.java", "diffHunk": "@@ -18,6 +18,9 @@\n import com.google.common.primitives.SignedBytes;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMzMzNjc1", "url": "https://github.com/trinodb/trino/pull/6340#pullrequestreview-552333675", "createdAt": "2020-12-15T10:58:31Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMzQzNDI2", "url": "https://github.com/trinodb/trino/pull/6340#pullrequestreview-552343426", "createdAt": "2020-12-15T11:11:31Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e48a9449ded9f9ce26d21ad9df18e352a76c881", "author": {"user": {"login": "Praveen2112", "name": "Praveen Krishna"}}, "url": "https://github.com/trinodb/trino/commit/1e48a9449ded9f9ce26d21ad9df18e352a76c881", "committedDate": "2020-12-16T06:03:33Z", "message": "Fix error message"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "73e5750f768d52a0189de6d803f089d8535c2d29", "author": {"user": {"login": "Praveen2112", "name": "Praveen Krishna"}}, "url": "https://github.com/trinodb/trino/commit/73e5750f768d52a0189de6d803f089d8535c2d29", "committedDate": "2020-12-16T06:11:05Z", "message": "Allow implementations of AbstractRowEncoder to support Structural type"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "73e5750f768d52a0189de6d803f089d8535c2d29", "author": {"user": {"login": "Praveen2112", "name": "Praveen Krishna"}}, "url": "https://github.com/trinodb/trino/commit/73e5750f768d52a0189de6d803f089d8535c2d29", "committedDate": "2020-12-16T06:11:05Z", "message": "Allow implementations of AbstractRowEncoder to support Structural type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMzkxODk2", "url": "https://github.com/trinodb/trino/pull/6340#pullrequestreview-553391896", "createdAt": "2020-12-16T06:34:15Z", "commit": {"oid": "73e5750f768d52a0189de6d803f089d8535c2d29"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNDcwMjI2", "url": "https://github.com/trinodb/trino/pull/6340#pullrequestreview-553470226", "createdAt": "2020-12-16T08:51:32Z", "commit": {"oid": "73e5750f768d52a0189de6d803f089d8535c2d29"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODo1MTozMlrOIG6UXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODo1MTozMlrOIG6UXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExNzg1NQ==", "bodyText": "you could extract a method in separate PR, as this would change the entire convention in this clas", "url": "https://github.com/trinodb/trino/pull/6340#discussion_r544117855", "createdAt": "2020-12-16T08:51:32Z", "author": {"login": "kokosing"}, "path": "presto-kafka/src/main/java/io/prestosql/plugin/kafka/encoder/AbstractRowEncoder.java", "diffHunk": "@@ -201,6 +214,21 @@ protected void appendSqlTimestampWithTimeZone(SqlTimestampWithTimeZone value)\n         throw new UnsupportedOperationException(format(\"Unsupported type '%s' for column '%s'\", value.getClass().getName(), columnHandles.get(currentColumnIndex).getName()));\n     }\n \n+    protected void appendArray(List<Object> value)\n+    {\n+        throw new UnsupportedOperationException(format(\"Unsupported type '%s' for column '%s'\", value.getClass().getName(), columnHandles.get(currentColumnIndex).getName()));\n+    }\n+\n+    protected void appendMap(Map<Object, Object> value)\n+    {\n+        throw new UnsupportedOperationException(format(\"Unsupported type '%s' for column '%s'\", value.getClass().getName(), columnHandles.get(currentColumnIndex).getName()));\n+    }\n+\n+    protected void appendRow(List<Object> value)\n+    {\n+        throw new UnsupportedOperationException(format(\"Unsupported type '%s' for column '%s'\", value.getClass().getName(), columnHandles.get(currentColumnIndex).getName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73e5750f768d52a0189de6d803f089d8535c2d29"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1833, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}