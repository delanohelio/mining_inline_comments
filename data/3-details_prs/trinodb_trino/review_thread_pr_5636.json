{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3NzUzNDQ3", "number": 5636, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxODowNToxOFrOEwZO9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNDoxMDo1NVrOExORww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MTgwNTMzOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveMetadata.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxODowNToxOFrOHl7aGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwMzoyNTowOVrOHmPNwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTUzMjY5Ng==", "bodyText": "Can we please have some test for that?", "url": "https://github.com/trinodb/trino/pull/5636#discussion_r509532696", "createdAt": "2020-10-21T18:05:18Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveMetadata.java", "diffHunk": "@@ -1856,6 +1856,10 @@ public void dropView(ConnectorSession session, SchemaTableName viewName)\n         return metastore.getTable(new HiveIdentity(session), viewName.getSchemaName(), viewName.getTableName())\n                 .filter(ViewReaderUtil::canDecodeView)\n                 .map(view -> {\n+                    if (!translateHiveViews && !isPrestoView(view)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYwODIwMw==", "bodyText": "@kokosing since this is not a session property, I think it's currently hard to test in the product tests without adding a separate config file. But I'm not sure a different configuration is worth the overhead in product test framework.\nDo you have a suggestion on it? or should we add a session property instead?", "url": "https://github.com/trinodb/trino/pull/5636#discussion_r509608203", "createdAt": "2020-10-21T19:27:18Z", "author": {"login": "phd3"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveMetadata.java", "diffHunk": "@@ -1856,6 +1856,10 @@ public void dropView(ConnectorSession session, SchemaTableName viewName)\n         return metastore.getTable(new HiveIdentity(session), viewName.getSchemaName(), viewName.getTableName())\n                 .filter(ViewReaderUtil::canDecodeView)\n                 .map(view -> {\n+                    if (!translateHiveViews && !isPrestoView(view)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTUzMjY5Ng=="}, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY3MzY3MQ==", "bodyText": "Do we need product tests for that? If we could test it \"unit\" tests then it would be nice. I guess it might be possible to enhance file based metastore for that. WDYT?", "url": "https://github.com/trinodb/trino/pull/5636#discussion_r509673671", "createdAt": "2020-10-21T20:36:32Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveMetadata.java", "diffHunk": "@@ -1856,6 +1856,10 @@ public void dropView(ConnectorSession session, SchemaTableName viewName)\n         return metastore.getTable(new HiveIdentity(session), viewName.getSchemaName(), viewName.getTableName())\n                 .filter(ViewReaderUtil::canDecodeView)\n                 .map(view -> {\n+                    if (!translateHiveViews && !isPrestoView(view)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTUzMjY5Ng=="}, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg1NzIxNw==", "bodyText": "@kokosing added a test in AbstractTestHive, the test seems a bit hacky, since we need to create a table through the client (non-presto code path). But I think it should work for our purpose.", "url": "https://github.com/trinodb/trino/pull/5636#discussion_r509857217", "createdAt": "2020-10-22T03:25:09Z", "author": {"login": "phd3"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveMetadata.java", "diffHunk": "@@ -1856,6 +1856,10 @@ public void dropView(ConnectorSession session, SchemaTableName viewName)\n         return metastore.getTable(new HiveIdentity(session), viewName.getSchemaName(), viewName.getTableName())\n                 .filter(ViewReaderUtil::canDecodeView)\n                 .map(view -> {\n+                    if (!translateHiveViews && !isPrestoView(view)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTUzMjY5Ng=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NDM1ODQzOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/AbstractTestHive.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNzo0MzowNlrOHmUqRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNzo0MzowNlrOHmUqRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk0NjQzNw==", "bodyText": "It would be nice add a test where changing config property would actually return a view here.\nWe have product tests for that, so if adding a test here is problematic then maybe a comment would be enough.", "url": "https://github.com/trinodb/trino/pull/5636#discussion_r509946437", "createdAt": "2020-10-22T07:43:06Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/AbstractTestHive.java", "diffHunk": "@@ -2556,6 +2557,38 @@ public void testViewCreation()\n         }\n     }\n \n+    @Test\n+    public void testHiveViewTranslationError()\n+    {\n+        String tableName = \"test_hive_view\";\n+        ConnectorSession session = newSession();\n+        Table table = Table.builder()\n+                .setDatabaseName(database)\n+                .setTableName(tableName)\n+                .setOwner(session.getUser())\n+                // Create a view without using PRESTO_VIEW_FLAG\n+                .setTableType(TableType.VIRTUAL_VIEW.name())\n+                .setDataColumns(ImmutableList.of(new Column(\"dummy\", HIVE_STRING, Optional.empty())))\n+                .setPartitionColumns(ImmutableList.of())\n+                .setViewOriginalText(Optional.of(\"SELECT 'a'\"))\n+                .withStorage(storage -> storage.setStorageFormat(VIEW_STORAGE_FORMAT)\n+                        .setLocation(\"\")\n+                        .build())\n+                .build();\n+\n+        metastoreClient.createTable(new HiveIdentity(session), table, testingPrincipalPrivilege(session));\n+\n+        try (Transaction transaction = newTransaction()) {\n+            ConnectorMetadata metadata = transaction.getMetadata();\n+            assertThatThrownBy(() -> metadata.getView(session, new SchemaTableName(database, tableName)))\n+                    .isInstanceOf(HiveViewNotSupportedException.class)\n+                    .hasMessageContaining(\"Hive views are not supported\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5Nzc5ODI0OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastore.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMjoyMjo0N1rOHm18KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMDowMjoyM1rOHm3_fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ5MTY4OA==", "bodyText": "We shouldn't need any view specific logic in the metastore, as the metastore's job is to simply store/retrieve the table metadata. This specific check seems to be a sanity check that the file metastore doesn't contain a Hive view, but that should be impossible since the code is only used by Presto.", "url": "https://github.com/trinodb/trino/pull/5636#discussion_r510491688", "createdAt": "2020-10-22T22:22:47Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastore.java", "diffHunk": "@@ -314,7 +316,15 @@ else if (table.getTableType().equals(EXTERNAL_TABLE.name())) {\n     @Override\n     public synchronized Optional<Table> getTable(HiveIdentity identity, String databaseName, String tableName)\n     {\n-        return getTable(databaseName, tableName);\n+        Optional<Table> optionalTable = getTable(databaseName, tableName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDUwMTM3OQ==", "bodyText": "got it, agreed. ThriftHiveMetastore::getAllViews also involves usage of view specific config, may be we can move it out too in future.", "url": "https://github.com/trinodb/trino/pull/5636#discussion_r510501379", "createdAt": "2020-10-22T22:50:58Z", "author": {"login": "phd3"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastore.java", "diffHunk": "@@ -314,7 +316,15 @@ else if (table.getTableType().equals(EXTERNAL_TABLE.name())) {\n     @Override\n     public synchronized Optional<Table> getTable(HiveIdentity identity, String databaseName, String tableName)\n     {\n-        return getTable(databaseName, tableName);\n+        Optional<Table> optionalTable = getTable(databaseName, tableName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ5MTY4OA=="}, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDUyNTMwOQ==", "bodyText": "You're right, it's always had logic to do filtering based on presto_view flag, but I forgot that it also has special logic based on whether or not we're translating Hive views. In that case, maybe it is required to add more logic to ThriftHiveMetastore. Though FileHiveMetastore doesn't have any today, so I'd need to be more convinced for that one.", "url": "https://github.com/trinodb/trino/pull/5636#discussion_r510525309", "createdAt": "2020-10-23T00:02:23Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastore.java", "diffHunk": "@@ -314,7 +316,15 @@ else if (table.getTableType().equals(EXTERNAL_TABLE.name())) {\n     @Override\n     public synchronized Optional<Table> getTable(HiveIdentity identity, String databaseName, String tableName)\n     {\n-        return getTable(databaseName, tableName);\n+        Optional<Table> optionalTable = getTable(databaseName, tableName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ5MTY4OA=="}, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzgwMDM5OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftHiveMetastore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMjoyMzo1M1rOHm19iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMjoyMzo1M1rOHm19iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ5MjA0Mw==", "bodyText": "Similar to the other comment, this check should be done in HiveMetadata where the translation occurs.", "url": "https://github.com/trinodb/trino/pull/5636#discussion_r510492043", "createdAt": "2020-10-22T22:23:53Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftHiveMetastore.java", "diffHunk": "@@ -343,6 +343,14 @@ public ThriftMetastoreStats getStats()\n                     .stopOnIllegalExceptions()\n                     .run(\"getTable\", stats.getGetTable().wrap(() -> {\n                         Table table = getTableFromMetastore(identity, databaseName, tableName);\n+\n+                        // Check if hive view is supported\n+                        if (!translateHiveViews", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzgxNTgyOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/AbstractTestHive.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMjozMDowOFrOHm2Gqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMjozMDowOFrOHm2Gqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ5NDM3OA==", "bodyText": "We shouldn't need to create a new Hive view here, as these tests already create presto_test_view (referenced by the view field in this class). It should be enough to call\nmetadata.getView(session, view);", "url": "https://github.com/trinodb/trino/pull/5636#discussion_r510494378", "createdAt": "2020-10-22T22:30:08Z", "author": {"login": "electrum"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/AbstractTestHive.java", "diffHunk": "@@ -2556,6 +2557,40 @@ public void testViewCreation()\n         }\n     }\n \n+    @Test\n+    public void testHiveViewTranslationError()\n+    {\n+        String tableName = \"test_hive_view\";\n+        ConnectorSession session = newSession();\n+        Table table = Table.builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5ODA4ODU4OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/connector/hive.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMDo0MTozMFrOHm4liQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMjowMDowOVrOHm5sAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDUzNTA0OQ==", "bodyText": "as per @mosabua 's comment: #5623 (comment)", "url": "https://github.com/trinodb/trino/pull/5636#discussion_r510535049", "createdAt": "2020-10-23T00:41:30Z", "author": {"login": "phd3"}, "path": "presto-docs/src/main/sphinx/connector/hive.rst", "diffHunk": "@@ -306,6 +306,8 @@ Property Name                                      Description\n ``hive.temporary-staging-directory-path``          Controls the location of temporary staging directory that    ``/tmp/${USER}``\n                                                    is used for write operations. The ``${USER}`` placeholder\n                                                    can be used to use a different location for each user.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU1MzA4OQ==", "bodyText": "thx. looks good.", "url": "https://github.com/trinodb/trino/pull/5636#discussion_r510553089", "createdAt": "2020-10-23T02:00:09Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/connector/hive.rst", "diffHunk": "@@ -306,6 +306,8 @@ Property Name                                      Description\n ``hive.temporary-staging-directory-path``          Controls the location of temporary staging directory that    ``/tmp/${USER}``\n                                                    is used for write operations. The ``${USER}`` placeholder\n                                                    can be used to use a different location for each user.\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDUzNTA0OQ=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMDQ3NjQ0OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/connector/hive.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNDowNjoxNlrOHnPYVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNDowNjoxNlrOHnPYVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwODUwMA==", "bodyText": "Please capitalize Hive", "url": "https://github.com/trinodb/trino/pull/5636#discussion_r510908500", "createdAt": "2020-10-23T14:06:16Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/connector/hive.rst", "diffHunk": "@@ -306,6 +306,8 @@ Property Name                                      Description\n ``hive.temporary-staging-directory-path``          Controls the location of temporary staging directory that    ``/tmp/${USER}``\n                                                    is used for write operations. The ``${USER}`` placeholder\n                                                    can be used to use a different location for each user.\n+\n+``hive.translate-hive-views``                      Enable translation for hive views. (experimental)            ``false``", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMDQ5NjAzOnYy", "diffSide": "RIGHT", "path": "presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHive.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNDoxMDo1NVrOHnPkSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNDoyMDoyMlrOHnP8rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkxMTU2MQ==", "bodyText": "currently not possible ...\n\nthis is not true, it is possible (#5636 (comment))\nat most, we decided not to do this\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // TODO: combine this with tests for successful translation in TestHiveViews product test, it is\n          \n          \n            \n                        // currently not possible because translation is not controlled by a session property\n          \n          \n            \n                        // TODO: combine this with tests for successful translation in TestHiveViews product test", "url": "https://github.com/trinodb/trino/pull/5636#discussion_r510911561", "createdAt": "2020-10-23T14:10:55Z", "author": {"login": "findepi"}, "path": "presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHive.java", "diffHunk": "@@ -80,4 +81,17 @@ public void testHideDeltaLakeTables()\n \n         throw new SkipException(\"not supported\");\n     }\n+\n+    @Test\n+    public void testHiveViewTranslationError()\n+    {\n+        try (Transaction transaction = newTransaction()) {\n+            assertThatThrownBy(() -> transaction.getMetadata().getView(newSession(), view))\n+                    .isInstanceOf(HiveViewNotSupportedException.class)\n+                    .hasMessageContaining(\"Hive views are not supported\");\n+\n+            // TODO: combine this with tests for successful translation in TestHiveViews product test, it is\n+            // currently not possible because translation is not controlled by a session property", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkxNjc5NQ==", "bodyText": "@findepi does this looks better?\n// TODO: combine this with tests for successful view translation (currently in TestHiveViews product test)", "url": "https://github.com/trinodb/trino/pull/5636#discussion_r510916795", "createdAt": "2020-10-23T14:18:54Z", "author": {"login": "phd3"}, "path": "presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHive.java", "diffHunk": "@@ -80,4 +81,17 @@ public void testHideDeltaLakeTables()\n \n         throw new SkipException(\"not supported\");\n     }\n+\n+    @Test\n+    public void testHiveViewTranslationError()\n+    {\n+        try (Transaction transaction = newTransaction()) {\n+            assertThatThrownBy(() -> transaction.getMetadata().getView(newSession(), view))\n+                    .isInstanceOf(HiveViewNotSupportedException.class)\n+                    .hasMessageContaining(\"Hive views are not supported\");\n+\n+            // TODO: combine this with tests for successful translation in TestHiveViews product test, it is\n+            // currently not possible because translation is not controlled by a session property", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkxMTU2MQ=="}, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkxNzgwNw==", "bodyText": "nice, thanks", "url": "https://github.com/trinodb/trino/pull/5636#discussion_r510917807", "createdAt": "2020-10-23T14:20:22Z", "author": {"login": "findepi"}, "path": "presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHive.java", "diffHunk": "@@ -80,4 +81,17 @@ public void testHideDeltaLakeTables()\n \n         throw new SkipException(\"not supported\");\n     }\n+\n+    @Test\n+    public void testHiveViewTranslationError()\n+    {\n+        try (Transaction transaction = newTransaction()) {\n+            assertThatThrownBy(() -> transaction.getMetadata().getView(newSession(), view))\n+                    .isInstanceOf(HiveViewNotSupportedException.class)\n+                    .hasMessageContaining(\"Hive views are not supported\");\n+\n+            // TODO: combine this with tests for successful translation in TestHiveViews product test, it is\n+            // currently not possible because translation is not controlled by a session property", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkxMTU2MQ=="}, "originalCommit": null, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4497, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}