{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMTMzMTAy", "number": 5481, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMToyNToxMVrOEry8Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMToyNToxMVrOEry8Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MzU4ODQyOnYy", "diffSide": "RIGHT", "path": "presto-plugin-toolkit/src/main/java/io/prestosql/plugin/base/security/FileBasedSystemAccessControl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMToyNToxMVrOHew9Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNzozMTowN1rOHe-Sdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAyMTQyMg==", "bodyText": "This doesn't deny query, impersonation, principal, or system rules.", "url": "https://github.com/trinodb/trino/pull/5481#discussion_r502021422", "createdAt": "2020-10-08T21:25:11Z", "author": {"login": "dain"}, "path": "presto-plugin-toolkit/src/main/java/io/prestosql/plugin/base/security/FileBasedSystemAccessControl.java", "diffHunk": "@@ -803,15 +803,26 @@ public static Builder builder()\n \n     public static final class Builder\n     {\n-        private List<CatalogAccessControlRule> catalogRules = ImmutableList.of();\n+        private List<CatalogAccessControlRule> catalogRules = ImmutableList.of(CatalogAccessControlRule.ALLOW_ALL);\n         private Optional<List<QueryAccessRule>> queryAccessRules = Optional.empty();\n         private Optional<List<ImpersonationRule>> impersonationRules = Optional.empty();\n         private Optional<List<PrincipalUserMatchRule>> principalUserMatchRules = Optional.empty();\n         private Optional<List<SystemInformationRule>> systemInformationRules = Optional.empty();\n-        private List<CatalogSchemaAccessControlRule> schemaRules = ImmutableList.of();\n-        private List<CatalogTableAccessControlRule> tableRules = ImmutableList.of();\n-        private List<SessionPropertyAccessControlRule> sessionPropertyRules = ImmutableList.of();\n-        private List<CatalogSessionPropertyAccessControlRule> catalogSessionPropertyRules = ImmutableList.of();\n+        private List<CatalogSchemaAccessControlRule> schemaRules = ImmutableList.of(CatalogSchemaAccessControlRule.ALLOW_ALL);\n+        private List<CatalogTableAccessControlRule> tableRules = ImmutableList.of(CatalogTableAccessControlRule.ALLOW_ALL);\n+        private List<SessionPropertyAccessControlRule> sessionPropertyRules = ImmutableList.of(SessionPropertyAccessControlRule.ALLOW_ALL);\n+        private List<CatalogSessionPropertyAccessControlRule> catalogSessionPropertyRules = ImmutableList.of(CatalogSessionPropertyAccessControlRule.ALLOW_ALL);\n+\n+        @SuppressWarnings(\"unused\")\n+        public Builder denyAllAccess()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjIzOTg2Mw==", "bodyText": "Thanks", "url": "https://github.com/trinodb/trino/pull/5481#discussion_r502239863", "createdAt": "2020-10-09T07:31:07Z", "author": {"login": "kokosing"}, "path": "presto-plugin-toolkit/src/main/java/io/prestosql/plugin/base/security/FileBasedSystemAccessControl.java", "diffHunk": "@@ -803,15 +803,26 @@ public static Builder builder()\n \n     public static final class Builder\n     {\n-        private List<CatalogAccessControlRule> catalogRules = ImmutableList.of();\n+        private List<CatalogAccessControlRule> catalogRules = ImmutableList.of(CatalogAccessControlRule.ALLOW_ALL);\n         private Optional<List<QueryAccessRule>> queryAccessRules = Optional.empty();\n         private Optional<List<ImpersonationRule>> impersonationRules = Optional.empty();\n         private Optional<List<PrincipalUserMatchRule>> principalUserMatchRules = Optional.empty();\n         private Optional<List<SystemInformationRule>> systemInformationRules = Optional.empty();\n-        private List<CatalogSchemaAccessControlRule> schemaRules = ImmutableList.of();\n-        private List<CatalogTableAccessControlRule> tableRules = ImmutableList.of();\n-        private List<SessionPropertyAccessControlRule> sessionPropertyRules = ImmutableList.of();\n-        private List<CatalogSessionPropertyAccessControlRule> catalogSessionPropertyRules = ImmutableList.of();\n+        private List<CatalogSchemaAccessControlRule> schemaRules = ImmutableList.of(CatalogSchemaAccessControlRule.ALLOW_ALL);\n+        private List<CatalogTableAccessControlRule> tableRules = ImmutableList.of(CatalogTableAccessControlRule.ALLOW_ALL);\n+        private List<SessionPropertyAccessControlRule> sessionPropertyRules = ImmutableList.of(SessionPropertyAccessControlRule.ALLOW_ALL);\n+        private List<CatalogSessionPropertyAccessControlRule> catalogSessionPropertyRules = ImmutableList.of(CatalogSessionPropertyAccessControlRule.ALLOW_ALL);\n+\n+        @SuppressWarnings(\"unused\")\n+        public Builder denyAllAccess()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAyMTQyMg=="}, "originalCommit": null, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4649, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}