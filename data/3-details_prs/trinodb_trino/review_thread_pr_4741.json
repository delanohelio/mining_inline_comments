{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NzkwMTQ0", "number": 4741, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMDowMzoyMFrOEWVrZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMjoxNjo1OVrOEWYLEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxODU5MzAxOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/binary.rst", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMDowMzoyMFrOG9mUew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMTo1MjoxN1rOG-0U-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0NDE1NQ==", "bodyText": "also add to the list of functions", "url": "https://github.com/trinodb/trino/pull/4741#discussion_r467244155", "createdAt": "2020-08-07T20:03:20Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/binary.rst", "diffHunk": "@@ -53,6 +53,11 @@ Binary Functions\n     negative starting position is interpreted as being relative to the end of\n     the string.\n \n+.. function:: reverse(binary) -> varbinary", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI5NDE0OA==", "bodyText": "@mosabua I'm not too familiar with the docs. functions.rst already includes this binary.rst file. Where is the list of functions that I should add to?", "url": "https://github.com/trinodb/trino/pull/4741#discussion_r467294148", "createdAt": "2020-08-07T21:48:19Z", "author": {"login": "posulliv"}, "path": "presto-docs/src/main/sphinx/functions/binary.rst", "diffHunk": "@@ -53,6 +53,11 @@ Binary Functions\n     negative starting position is interpreted as being relative to the end of\n     the string.\n \n+.. function:: reverse(binary) -> varbinary", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0NDE1NQ=="}, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMwODM5OA==", "bodyText": "@mosabua is referring to presto-docs/src/main/sphinx/functions/list.rst\nBut we can't add it there, since the link for reverse already goes to the string version.", "url": "https://github.com/trinodb/trino/pull/4741#discussion_r467308398", "createdAt": "2020-08-07T22:12:53Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/binary.rst", "diffHunk": "@@ -53,6 +53,11 @@ Binary Functions\n     negative starting position is interpreted as being relative to the end of\n     the string.\n \n+.. function:: reverse(binary) -> varbinary", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0NDE1NQ=="}, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMxNzY0NQ==", "bodyText": "hm ... need to find a better name for the function then I guess .. or another way to deal with this name overlap with some sort of disambiguation or so .. any suggestions @electrum ?", "url": "https://github.com/trinodb/trino/pull/4741#discussion_r467317645", "createdAt": "2020-08-07T22:49:19Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/binary.rst", "diffHunk": "@@ -53,6 +53,11 @@ Binary Functions\n     negative starting position is interpreted as being relative to the end of\n     the string.\n \n+.. function:: reverse(binary) -> varbinary", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0NDE1NQ=="}, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUyMjIzNA==", "bodyText": "Do you need me to do anything as part of this PR to address this?\nI see there are a few other functions with string and binary versions that have this issue e.g. substr.", "url": "https://github.com/trinodb/trino/pull/4741#discussion_r468522234", "createdAt": "2020-08-11T11:52:17Z", "author": {"login": "posulliv"}, "path": "presto-docs/src/main/sphinx/functions/binary.rst", "diffHunk": "@@ -53,6 +53,11 @@ Binary Functions\n     negative starting position is interpreted as being relative to the end of\n     the string.\n \n+.. function:: reverse(binary) -> varbinary", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0NDE1NQ=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxOTAwMTc4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/operator/scalar/VarbinaryFunctions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMjoxNjo1OVrOG9qT3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMzozNzoxNFrOG9rchg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMwOTUzNA==", "bodyText": "I think we could simplify this as\nfor (int i = 0; i < length; i++) {\n    reverse.setByte(i, inputSlice.getByte(length - i));\n}", "url": "https://github.com/trinodb/trino/pull/4741#discussion_r467309534", "createdAt": "2020-08-07T22:16:59Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/VarbinaryFunctions.java", "diffHunk": "@@ -447,4 +447,24 @@ public static Slice rightPad(@SqlType(\"varbinary\") Slice inputSlice, @SqlType(St\n     {\n         return pad(inputSlice, targetLength, padBytes, inputSlice.length());\n     }\n+\n+    @Description(\"Reverse a given varbinary\")\n+    @ScalarFunction(\"reverse\")\n+    @SqlType(StandardTypes.VARBINARY)\n+    public static Slice reverse(@SqlType(\"varbinary\") Slice inputSlice)\n+    {\n+        if (inputSlice.length() == 0) {\n+            return EMPTY_SLICE;\n+        }\n+        int length = inputSlice.length();\n+        Slice reverse = Slices.allocate(length);\n+        int forwardPosition = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMyODEzNA==", "bodyText": "Yes, good point. I updated it to be more concise.", "url": "https://github.com/trinodb/trino/pull/4741#discussion_r467328134", "createdAt": "2020-08-07T23:37:14Z", "author": {"login": "posulliv"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/VarbinaryFunctions.java", "diffHunk": "@@ -447,4 +447,24 @@ public static Slice rightPad(@SqlType(\"varbinary\") Slice inputSlice, @SqlType(St\n     {\n         return pad(inputSlice, targetLength, padBytes, inputSlice.length());\n     }\n+\n+    @Description(\"Reverse a given varbinary\")\n+    @ScalarFunction(\"reverse\")\n+    @SqlType(StandardTypes.VARBINARY)\n+    public static Slice reverse(@SqlType(\"varbinary\") Slice inputSlice)\n+    {\n+        if (inputSlice.length() == 0) {\n+            return EMPTY_SLICE;\n+        }\n+        int length = inputSlice.length();\n+        Slice reverse = Slices.allocate(length);\n+        int forwardPosition = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMwOTUzNA=="}, "originalCommit": null, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3398, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}