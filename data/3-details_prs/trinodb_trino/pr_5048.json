{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MTQ0ODcy", "number": 5048, "title": "Add from_iso8601_timestamp_nanos operation", "bodyText": "This addresses the nanos use case of #5037\nIf this approach looks reasonable to you @dain @electrum @martint happy to update this with the micros version as well, or we can do that in a separate PR", "createdAt": "2020-09-01T15:02:16Z", "url": "https://github.com/trinodb/trino/pull/5048", "merged": true, "mergeCommit": {"oid": "353dba200305c18ff41bc055dd3f724f362deafb"}, "closed": true, "closedAt": "2020-09-22T20:31:16Z", "author": {"login": "alec-heif"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFVA26ABqjM3MjYwNjAzMzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLeDGAABqjM3OTUwNzQyNDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMDYyODEw", "url": "https://github.com/trinodb/trino/pull/5048#pullrequestreview-491062810", "createdAt": "2020-09-17T23:54:01Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMzo1NDowMVrOHT5TYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMDowMjo0MFrOHT5ciA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYyMzg0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static LongTimestampWithTimeZone fromISO8601TimestampNanos(ConnectorSession session, @SqlType(\"varchar(x)\") Slice iso8601DateTime)\n          \n          \n            \n                public static LongTimestampWithTimeZone fromIso8601TimestampNanos(ConnectorSession session, @SqlType(\"varchar(x)\") Slice iso8601DateTime)", "url": "https://github.com/trinodb/trino/pull/5048#discussion_r490623843", "createdAt": "2020-09-17T23:54:01Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/DateTimeFunctions.java", "diffHunk": "@@ -162,6 +168,19 @@ public static long fromISO8601Timestamp(ConnectorSession session, @SqlType(\"varc\n         return packDateTimeWithZone(parseDateTimeHelper(formatter, iso8601DateTime.toStringUtf8()));\n     }\n \n+    @ScalarFunction(\"from_iso8601_timestamp_nanos\")\n+    @LiteralParameters(\"x\")\n+    @SqlType(\"timestamp(9) with time zone\")\n+    public static LongTimestampWithTimeZone fromISO8601TimestampNanos(ConnectorSession session, @SqlType(\"varchar(x)\") Slice iso8601DateTime)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYyNDUxNQ==", "bodyText": "This method is unnecessary. It's used in a single place and doesn't provide much value. Inline it where it's being called.", "url": "https://github.com/trinodb/trino/pull/5048#discussion_r490624515", "createdAt": "2020-09-17T23:56:23Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/DateTimeFunctions.java", "diffHunk": "@@ -291,6 +310,24 @@ private static DateTime parseDateTimeHelper(DateTimeFormatter formatter, String\n         }\n     }\n \n+    private static ZonedDateTime parseJavaDateTimeHelper(java.time.format.DateTimeFormatter formatter, String datetimeString)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYyNTY2Ng==", "bodyText": "This is inconsistent with the other variant (from_iso8601_timestamp), which uses session timezone if the timezone is missing from the input value.", "url": "https://github.com/trinodb/trino/pull/5048#discussion_r490625666", "createdAt": "2020-09-18T00:00:39Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/DateTimeFunctions.java", "diffHunk": "@@ -291,6 +310,24 @@ private static DateTime parseDateTimeHelper(DateTimeFormatter formatter, String\n         }\n     }\n \n+    private static ZonedDateTime parseJavaDateTimeHelper(java.time.format.DateTimeFormatter formatter, String datetimeString)\n+    {\n+        TemporalAccessor dt;\n+        try {\n+            dt = formatter.parseBest(datetimeString, ZonedDateTime::from, LocalDateTime::from);\n+        }\n+        catch (DateTimeParseException e) {\n+            throw new PrestoException(INVALID_FUNCTION_ARGUMENT, e);\n+        }\n+\n+        if (dt instanceof ZonedDateTime) {\n+            return (ZonedDateTime) dt;\n+        }\n+        else {\n+            return ((LocalDateTime) dt).atZone(ZoneId.of(\"UTC\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYyNTc5MA==", "bodyText": "Don't abbreviate variable names.", "url": "https://github.com/trinodb/trino/pull/5048#discussion_r490625790", "createdAt": "2020-09-18T00:01:06Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/DateTimeFunctions.java", "diffHunk": "@@ -291,6 +310,24 @@ private static DateTime parseDateTimeHelper(DateTimeFormatter formatter, String\n         }\n     }\n \n+    private static ZonedDateTime parseJavaDateTimeHelper(java.time.format.DateTimeFormatter formatter, String datetimeString)\n+    {\n+        TemporalAccessor dt;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYyNTg0OA==", "bodyText": "Don't abbreviate variable names", "url": "https://github.com/trinodb/trino/pull/5048#discussion_r490625848", "createdAt": "2020-09-18T00:01:19Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/DateTimeFunctions.java", "diffHunk": "@@ -162,6 +168,19 @@ public static long fromISO8601Timestamp(ConnectorSession session, @SqlType(\"varc\n         return packDateTimeWithZone(parseDateTimeHelper(formatter, iso8601DateTime.toStringUtf8()));\n     }\n \n+    @ScalarFunction(\"from_iso8601_timestamp_nanos\")\n+    @LiteralParameters(\"x\")\n+    @SqlType(\"timestamp(9) with time zone\")\n+    public static LongTimestampWithTimeZone fromISO8601TimestampNanos(ConnectorSession session, @SqlType(\"varchar(x)\") Slice iso8601DateTime)\n+    {\n+        java.time.format.DateTimeFormatter formatter = java.time.format.DateTimeFormatter.ISO_DATE_TIME;\n+        ZonedDateTime zdt = parseJavaDateTimeHelper(formatter, iso8601DateTime.toStringUtf8());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYyNjA1MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    long picosOfSecond = zdt.getNano() * 1000L;\n          \n          \n            \n                    long picosOfSecond = zdt.getNano() * PICOSECONDS_PER_NANOSECOND;", "url": "https://github.com/trinodb/trino/pull/5048#discussion_r490626051", "createdAt": "2020-09-18T00:02:06Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/operator/scalar/DateTimeFunctions.java", "diffHunk": "@@ -162,6 +168,19 @@ public static long fromISO8601Timestamp(ConnectorSession session, @SqlType(\"varc\n         return packDateTimeWithZone(parseDateTimeHelper(formatter, iso8601DateTime.toStringUtf8()));\n     }\n \n+    @ScalarFunction(\"from_iso8601_timestamp_nanos\")\n+    @LiteralParameters(\"x\")\n+    @SqlType(\"timestamp(9) with time zone\")\n+    public static LongTimestampWithTimeZone fromISO8601TimestampNanos(ConnectorSession session, @SqlType(\"varchar(x)\") Slice iso8601DateTime)\n+    {\n+        java.time.format.DateTimeFormatter formatter = java.time.format.DateTimeFormatter.ISO_DATE_TIME;\n+        ZonedDateTime zdt = parseJavaDateTimeHelper(formatter, iso8601DateTime.toStringUtf8());\n+\n+        long picosOfSecond = zdt.getNano() * 1000L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYyNjE4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testFromISO8601Nanos()\n          \n          \n            \n                public void testFromIso8601Nanos()", "url": "https://github.com/trinodb/trino/pull/5048#discussion_r490626184", "createdAt": "2020-09-18T00:02:40Z", "author": {"login": "martint"}, "path": "presto-main/src/test/java/io/prestosql/operator/scalar/TestDateTimeFunctions.java", "diffHunk": "@@ -288,6 +290,23 @@ public void testFromISO8601()\n         assertFunction(\"from_iso8601_date('\" + DATE_ISO8601_STRING + \"')\", DateType.DATE, toDate(DATE));\n     }\n \n+    @Test\n+    public void testFromISO8601Nanos()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2191f78e0c4abaf3cd45dd977847092bff851cfa", "author": {"user": {"login": "alec-heif", "name": "Alec Heifetz"}}, "url": "https://github.com/trinodb/trino/commit/2191f78e0c4abaf3cd45dd977847092bff851cfa", "committedDate": "2020-09-22T20:26:57Z", "message": "Add from_iso8601_timestamp_nanos function"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "2191f78e0c4abaf3cd45dd977847092bff851cfa", "author": {"user": {"login": "alec-heif", "name": "Alec Heifetz"}}, "url": "https://github.com/trinodb/trino/commit/2191f78e0c4abaf3cd45dd977847092bff851cfa", "committedDate": "2020-09-22T20:26:57Z", "message": "Add from_iso8601_timestamp_nanos function"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3833, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}