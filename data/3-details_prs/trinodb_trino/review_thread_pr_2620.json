{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2ODIyNTUw", "number": 2620, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwODowNjowOVrODatKmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwODoxMDoxOFrODatLMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzI5NTYwOnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/environment/SinglenodeKerberosKmsHdfsImpersonation.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwODowNjowOVrOFhy2yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQyMjozNTo1N1rOFh2JJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4MDU1Mw==", "bodyText": "I find this wrapping strange. We don't normally do that with builders when the reference is a simple variable.", "url": "https://github.com/trinodb/trino/pull/2620#discussion_r370980553", "createdAt": "2020-01-26T08:06:09Z", "author": {"login": "electrum"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/environment/SinglenodeKerberosKmsHdfsImpersonation.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.tests.product.launcher.env.environment;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.prestosql.tests.product.launcher.docker.DockerFiles;\n+import io.prestosql.tests.product.launcher.env.Environment;\n+import io.prestosql.tests.product.launcher.env.EnvironmentOptions;\n+import io.prestosql.tests.product.launcher.env.common.AbstractEnvironmentProvider;\n+import io.prestosql.tests.product.launcher.env.common.Hadoop;\n+import io.prestosql.tests.product.launcher.env.common.Kerberos;\n+import io.prestosql.tests.product.launcher.env.common.Standard;\n+\n+import javax.inject.Inject;\n+\n+import static io.prestosql.tests.product.launcher.env.common.Hadoop.CONTAINER_PRESTO_HIVE_PROPERTIES;\n+import static io.prestosql.tests.product.launcher.env.common.Standard.CONTAINER_TEMPTO_PROFILE_CONFIG;\n+import static java.util.Objects.requireNonNull;\n+import static org.testcontainers.containers.BindMode.READ_ONLY;\n+\n+public final class SinglenodeKerberosKmsHdfsImpersonation\n+        extends AbstractEnvironmentProvider\n+{\n+    private final DockerFiles dockerFiles;\n+\n+    private final String imagesVersion;\n+\n+    @Inject\n+    public SinglenodeKerberosKmsHdfsImpersonation(DockerFiles dockerFiles, Standard standard, Hadoop hadoop, Kerberos kerberos, EnvironmentOptions environmentOptions)\n+    {\n+        super(ImmutableList.of(standard, hadoop, kerberos));\n+        this.dockerFiles = requireNonNull(dockerFiles, \"dockerFiles is null\");\n+        imagesVersion = requireNonNull(environmentOptions.imagesVersion, \"environmentOptions.imagesVersion is null\");\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"resource\")\n+    protected void extendEnvironment(Environment.Builder builder)\n+    {\n+        super.extendEnvironment(builder);\n+\n+        // TODO (https://github.com/prestosql/presto/issues/1652) create images with HDP and KMS\n+        String dockerImageName = \"prestodev/cdh5.15-hive-kerberized-kms:\" + imagesVersion;\n+\n+        builder.configureContainer(\"hadoop-master\", container -> {\n+            container.setDockerImageName(dockerImageName);\n+            container", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAzMTY3Ng==", "bodyText": "I use it in other places too\nhttps://github.com/prestosql/presto/blob/d047f22f3801eaf60042921e089c5758898b6d9d/presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/environment/MultinodeTls.java#L68-L70\nalso, the advantage of this is that code is copy-pastable between configureContainer and methods creating new container.\nthis is useful when eg setting some networking properties for both: new & existing containers", "url": "https://github.com/trinodb/trino/pull/2620#discussion_r371031676", "createdAt": "2020-01-26T21:44:55Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/environment/SinglenodeKerberosKmsHdfsImpersonation.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.tests.product.launcher.env.environment;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.prestosql.tests.product.launcher.docker.DockerFiles;\n+import io.prestosql.tests.product.launcher.env.Environment;\n+import io.prestosql.tests.product.launcher.env.EnvironmentOptions;\n+import io.prestosql.tests.product.launcher.env.common.AbstractEnvironmentProvider;\n+import io.prestosql.tests.product.launcher.env.common.Hadoop;\n+import io.prestosql.tests.product.launcher.env.common.Kerberos;\n+import io.prestosql.tests.product.launcher.env.common.Standard;\n+\n+import javax.inject.Inject;\n+\n+import static io.prestosql.tests.product.launcher.env.common.Hadoop.CONTAINER_PRESTO_HIVE_PROPERTIES;\n+import static io.prestosql.tests.product.launcher.env.common.Standard.CONTAINER_TEMPTO_PROFILE_CONFIG;\n+import static java.util.Objects.requireNonNull;\n+import static org.testcontainers.containers.BindMode.READ_ONLY;\n+\n+public final class SinglenodeKerberosKmsHdfsImpersonation\n+        extends AbstractEnvironmentProvider\n+{\n+    private final DockerFiles dockerFiles;\n+\n+    private final String imagesVersion;\n+\n+    @Inject\n+    public SinglenodeKerberosKmsHdfsImpersonation(DockerFiles dockerFiles, Standard standard, Hadoop hadoop, Kerberos kerberos, EnvironmentOptions environmentOptions)\n+    {\n+        super(ImmutableList.of(standard, hadoop, kerberos));\n+        this.dockerFiles = requireNonNull(dockerFiles, \"dockerFiles is null\");\n+        imagesVersion = requireNonNull(environmentOptions.imagesVersion, \"environmentOptions.imagesVersion is null\");\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"resource\")\n+    protected void extendEnvironment(Environment.Builder builder)\n+    {\n+        super.extendEnvironment(builder);\n+\n+        // TODO (https://github.com/prestosql/presto/issues/1652) create images with HDP and KMS\n+        String dockerImageName = \"prestodev/cdh5.15-hive-kerberized-kms:\" + imagesVersion;\n+\n+        builder.configureContainer(\"hadoop-master\", container -> {\n+            container.setDockerImageName(dockerImageName);\n+            container", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4MDU1Mw=="}, "originalCommit": null, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAzNDQwNQ==", "bodyText": "i have no hard feelings anyway. i am open, we can change it, if we want to", "url": "https://github.com/trinodb/trino/pull/2620#discussion_r371034405", "createdAt": "2020-01-26T22:35:57Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/environment/SinglenodeKerberosKmsHdfsImpersonation.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.tests.product.launcher.env.environment;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.prestosql.tests.product.launcher.docker.DockerFiles;\n+import io.prestosql.tests.product.launcher.env.Environment;\n+import io.prestosql.tests.product.launcher.env.EnvironmentOptions;\n+import io.prestosql.tests.product.launcher.env.common.AbstractEnvironmentProvider;\n+import io.prestosql.tests.product.launcher.env.common.Hadoop;\n+import io.prestosql.tests.product.launcher.env.common.Kerberos;\n+import io.prestosql.tests.product.launcher.env.common.Standard;\n+\n+import javax.inject.Inject;\n+\n+import static io.prestosql.tests.product.launcher.env.common.Hadoop.CONTAINER_PRESTO_HIVE_PROPERTIES;\n+import static io.prestosql.tests.product.launcher.env.common.Standard.CONTAINER_TEMPTO_PROFILE_CONFIG;\n+import static java.util.Objects.requireNonNull;\n+import static org.testcontainers.containers.BindMode.READ_ONLY;\n+\n+public final class SinglenodeKerberosKmsHdfsImpersonation\n+        extends AbstractEnvironmentProvider\n+{\n+    private final DockerFiles dockerFiles;\n+\n+    private final String imagesVersion;\n+\n+    @Inject\n+    public SinglenodeKerberosKmsHdfsImpersonation(DockerFiles dockerFiles, Standard standard, Hadoop hadoop, Kerberos kerberos, EnvironmentOptions environmentOptions)\n+    {\n+        super(ImmutableList.of(standard, hadoop, kerberos));\n+        this.dockerFiles = requireNonNull(dockerFiles, \"dockerFiles is null\");\n+        imagesVersion = requireNonNull(environmentOptions.imagesVersion, \"environmentOptions.imagesVersion is null\");\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"resource\")\n+    protected void extendEnvironment(Environment.Builder builder)\n+    {\n+        super.extendEnvironment(builder);\n+\n+        // TODO (https://github.com/prestosql/presto/issues/1652) create images with HDP and KMS\n+        String dockerImageName = \"prestodev/cdh5.15-hive-kerberized-kms:\" + imagesVersion;\n+\n+        builder.configureContainer(\"hadoop-master\", container -> {\n+            container.setDockerImageName(dockerImageName);\n+            container", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4MDU1Mw=="}, "originalCommit": null, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzI5NzEzOnYy", "diffSide": "LEFT", "path": "presto-product-tests/conf/docker/singlenode-kerberos-kms-hdfs-no-impersonation/docker-compose.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwODoxMDoxOFrOFhy3fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQyMTo0Mjo0M1rOFh196A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4MDczNA==", "bodyText": "It would be better to un-share these config files in a separate commit.", "url": "https://github.com/trinodb/trino/pull/2620#discussion_r370980734", "createdAt": "2020-01-26T08:10:18Z", "author": {"login": "electrum"}, "path": "presto-product-tests/conf/docker/singlenode-kerberos-kms-hdfs-no-impersonation/docker-compose.yml", "diffHunk": "@@ -1,17 +0,0 @@\n-version: '2'\n-services:\n-\n-  hadoop-master:\n-    image: 'prestodev/cdh5.15-hive-kerberized-kms:${DOCKER_IMAGES_VERSION}'\n-    volumes:\n-    - ../../../conf/hadoop/singlenode-kerberos-kms-hdfs-impersonation/kms-core-site.xml:/etc/hadoop-kms/conf/core-site.xml", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAzMTUyOA==", "bodyText": "I agree. but the benefit is minimal, so let me not redo the history now.", "url": "https://github.com/trinodb/trino/pull/2620#discussion_r371031528", "createdAt": "2020-01-26T21:42:43Z", "author": {"login": "findepi"}, "path": "presto-product-tests/conf/docker/singlenode-kerberos-kms-hdfs-no-impersonation/docker-compose.yml", "diffHunk": "@@ -1,17 +0,0 @@\n-version: '2'\n-services:\n-\n-  hadoop-master:\n-    image: 'prestodev/cdh5.15-hive-kerberized-kms:${DOCKER_IMAGES_VERSION}'\n-    volumes:\n-    - ../../../conf/hadoop/singlenode-kerberos-kms-hdfs-impersonation/kms-core-site.xml:/etc/hadoop-kms/conf/core-site.xml", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4MDczNA=="}, "originalCommit": null, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1079, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}