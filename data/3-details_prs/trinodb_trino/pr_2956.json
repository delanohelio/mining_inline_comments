{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNDM4NjM5", "number": 2956, "title": "Base JDBC connector improvements", "bodyText": "", "createdAt": "2020-02-26T18:33:09Z", "url": "https://github.com/trinodb/trino/pull/2956", "merged": true, "mergeCommit": {"oid": "337dd30d26a0ace0b5b2bd99ccedcc0a556f35de"}, "closed": true, "closedAt": "2020-02-27T01:02:51Z", "author": {"login": "electrum"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIMkBcgBqjMwNzUyNjg2ODg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIQq3tgBqjMwNzYwMDQ3ODE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MjU1NDI3", "url": "https://github.com/trinodb/trino/pull/2956#pullrequestreview-365255427", "createdAt": "2020-02-26T21:28:17Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToyODoxN1rOFu86lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMTo0NToxNVrOFu9cJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3Njg1NA==", "bodyText": "the related issue is not fixed.", "url": "https://github.com/trinodb/trino/pull/2956#discussion_r384776854", "createdAt": "2020-02-26T21:28:17Z", "author": {"login": "findepi"}, "path": "presto-phoenix/src/test/java/io/prestosql/plugin/phoenix/TestPhoenixIntegrationSmokeTest.java", "diffHunk": "@@ -157,12 +157,6 @@ public void testCreateSchema()\n         throw new SkipException(\"test disabled until issue fixed\"); // TODO https://github.com/prestosql/presto/issues/2348\n     }\n \n-    @Override\n-    public void testDropSchema()\n-    {\n-        throw new SkipException(\"test disabled until issue fixed\"); // TODO https://github.com/prestosql/presto/issues/2348", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3NzMyNA==", "bodyText": "Do we need any access control checks for this?", "url": "https://github.com/trinodb/trino/pull/2956#discussion_r384777324", "createdAt": "2020-02-26T21:29:07Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "diffHunk": "@@ -816,6 +816,17 @@ public void createSchema(JdbcIdentity identity, String schemaName)\n         }\n     }\n \n+    @Override\n+    public void dropSchema(JdbcIdentity identity, String schemaName)\n+    {\n+        try (Connection connection = connectionFactory.openConnection(identity)) {\n+            execute(connection, \"DROP SCHEMA \" + quoted(schemaName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3NzQwNA==", "bodyText": "i dont think it's needed", "url": "https://github.com/trinodb/trino/pull/2956#discussion_r384777404", "createdAt": "2020-02-26T21:29:17Z", "author": {"login": "findepi"}, "path": "presto-testing/src/main/java/io/prestosql/testing/datatype/CreateAsSelectDataSetup.java", "diffHunk": "@@ -45,7 +45,12 @@ public TestTable setupTestTable(List<DataTypeTest.Input<?>> inputs)\n         Stream<String> columnValuesWithNames = range(0, columnValues.size())\n                 .mapToObj(i -> format(\"%s col_%d\", columnValues.get(i), i));\n         String selectBody = Joiner.on(\",\\n\").join(columnValuesWithNames.iterator());\n-        return new TestTable(sqlExecutor, tableNamePrefix, \"AS SELECT \" + selectBody);\n+        return new TestTable(sqlExecutor, tableNamePrefix, getTableDefinition(selectBody));\n+    }\n+\n+    protected String getTableDefinition(String selectBody)\n+    {\n+        return \"AS SELECT \" + selectBody;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3NzY1Ng==", "bodyText": "it's better throw new SkipException", "url": "https://github.com/trinodb/trino/pull/2956#discussion_r384777656", "createdAt": "2020-02-26T21:29:50Z", "author": {"login": "findepi"}, "path": "presto-accumulo/src/test/java/io/prestosql/plugin/accumulo/TestAccumuloDistributedQueries.java", "diffHunk": "@@ -45,6 +45,12 @@ protected QueryRunner createQueryRunner()\n         return createAccumuloQueryRunner(ImmutableMap.of());\n     }\n \n+    @Override\n+    public void testCreateSchema()\n+    {\n+        // schema creation is not supported", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3NzcxOQ==", "bodyText": "SkipException", "url": "https://github.com/trinodb/trino/pull/2956#discussion_r384777719", "createdAt": "2020-02-26T21:29:58Z", "author": {"login": "findepi"}, "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/TestCassandraDistributedQueries.java", "diffHunk": "@@ -49,6 +49,12 @@ protected boolean supportsViews()\n         return false;\n     }\n \n+    @Override\n+    public void testCreateSchema()\n+    {\n+        // Cassandra does not support creating schemas", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc4Mjg3Mg==", "bodyText": "Please add a javadoc to ATDQ and ATIST governing what goes where.\nAlso, now the test is no longer run for: redis, jdbc+h2, kafka, thrift, ES, Kudu, Accumulo and Mongo", "url": "https://github.com/trinodb/trino/pull/2956#discussion_r384782872", "createdAt": "2020-02-26T21:40:15Z", "author": {"login": "findepi"}, "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -1153,4 +1154,19 @@ public void testCreateSchema()\n         assertUpdate(\"DROP SCHEMA test_schema_create\");\n         assertQueryFails(\"DROP SCHEMA test_schema_create\", \"line 1:1: Schema '.*\\\\.test_schema_create' does not exist\");\n     }\n+\n+    @Test\n+    public void testInsertForDefaultColumn()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc4NDEyNQ==", "bodyText": "i'd keep image name and version together (\"mysql:8.0.12\") -- no much drawback but a lot more flexible.\nAlso, we should run tests with Maria DB (follow up)", "url": "https://github.com/trinodb/trino/pull/2956#discussion_r384784125", "createdAt": "2020-02-26T21:42:48Z", "author": {"login": "findepi"}, "path": "presto-mysql/src/test/java/io/prestosql/plugin/mysql/TestingMySqlServer.java", "diffHunk": "@@ -22,12 +22,17 @@\n \n import static java.lang.String.format;\n \n-public class TestingMySqlServer\n+public final class TestingMySqlServer\n         extends MySQLContainer<TestingMySqlServer>\n {\n     public TestingMySqlServer()\n     {\n-        super(\"mysql:8.0.12\");\n+        this(\"8.0.12\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc4NTAxNQ==", "bodyText": "i feel it's better to avoid extending Config classes. can we avoid this?", "url": "https://github.com/trinodb/trino/pull/2956#discussion_r384785015", "createdAt": "2020-02-26T21:44:24Z", "author": {"login": "findepi"}, "path": "presto-mysql/src/main/java/io/prestosql/plugin/mysql/MySqlJdbcConfig.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.mysql;\n+\n+import com.mysql.jdbc.Driver;\n+import io.prestosql.plugin.jdbc.BaseJdbcConfig;\n+\n+import javax.validation.constraints.AssertTrue;\n+\n+import java.sql.SQLException;\n+import java.util.Properties;\n+\n+public class MySqlJdbcConfig\n+        extends BaseJdbcConfig", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc4NTQxOA==", "bodyText": "technically, it's redundant", "url": "https://github.com/trinodb/trino/pull/2956#discussion_r384785418", "createdAt": "2020-02-26T21:45:12Z", "author": {"login": "findepi"}, "path": "presto-accumulo/src/test/java/io/prestosql/plugin/accumulo/TestAccumuloIntegrationSmokeTest.java", "diffHunk": "@@ -33,28 +34,22 @@ protected QueryRunner createQueryRunner()\n         return createAccumuloQueryRunner(ImmutableMap.of());\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc4NTQ0NQ==", "bodyText": "technically, it's redundant", "url": "https://github.com/trinodb/trino/pull/2956#discussion_r384785445", "createdAt": "2020-02-26T21:45:15Z", "author": {"login": "findepi"}, "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/TestCassandraIntegrationSmokeTest.java", "diffHunk": "@@ -90,16 +92,23 @@ public void tearDown()\n         server.close();\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "4335b0540cb5dd5b09341be1685d3854562e90e7", "author": {"user": {"login": "electrum", "name": "David Phillips"}}, "url": "https://github.com/trinodb/trino/commit/4335b0540cb5dd5b09341be1685d3854562e90e7", "committedDate": "2020-02-27T01:02:41Z", "message": "Implement DROP SCHEMA for JDBC connectors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5de323182af11b14ef07c0089313556a8c136510", "author": {"user": {"login": "electrum", "name": "David Phillips"}}, "url": "https://github.com/trinodb/trino/commit/5de323182af11b14ef07c0089313556a8c136510", "committedDate": "2020-02-27T01:02:41Z", "message": "Move schema creation tests to distributed query tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b86387075bce4bff148125d974ca12ab91b70832", "author": {"user": {"login": "electrum", "name": "David Phillips"}}, "url": "https://github.com/trinodb/trino/commit/b86387075bce4bff148125d974ca12ab91b70832", "committedDate": "2020-02-27T01:02:41Z", "message": "Move insert default tests to distributed query tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65a5712b53b2c5ae11b8d6eccf11948d77c04e6e", "author": {"user": {"login": "electrum", "name": "David Phillips"}}, "url": "https://github.com/trinodb/trino/commit/65a5712b53b2c5ae11b8d6eccf11948d77c04e6e", "committedDate": "2020-02-27T01:02:41Z", "message": "Add CredentialPropertiesProvider for base JDBC"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5a0d781b37942e65e3ec1fdc15f89a611791136", "author": {"user": {"login": "electrum", "name": "David Phillips"}}, "url": "https://github.com/trinodb/trino/commit/e5a0d781b37942e65e3ec1fdc15f89a611791136", "committedDate": "2020-02-27T01:02:41Z", "message": "Make assertExplainAnalyze protected"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60dad01190eadb3850097767d62cb84f233cfb21", "author": {"user": {"login": "electrum", "name": "David Phillips"}}, "url": "https://github.com/trinodb/trino/commit/60dad01190eadb3850097767d62cb84f233cfb21", "committedDate": "2020-02-27T01:02:41Z", "message": "Allow overriding image for TestingMySqlServer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cb956fe8442e036328a76febe0575bdedfc3ecf", "author": {"user": {"login": "electrum", "name": "David Phillips"}}, "url": "https://github.com/trinodb/trino/commit/8cb956fe8442e036328a76febe0575bdedfc3ecf", "committedDate": "2020-02-27T01:02:41Z", "message": "Use bean validation for MySQL connector URL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e81a5ad098ea2f6cc1e98733999f524d4aaa3ca", "author": {"user": {"login": "electrum", "name": "David Phillips"}}, "url": "https://github.com/trinodb/trino/commit/1e81a5ad098ea2f6cc1e98733999f524d4aaa3ca", "committedDate": "2020-02-27T01:02:41Z", "message": "Simplify connector differences for testDescribeTable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "337dd30d26a0ace0b5b2bd99ccedcc0a556f35de", "author": {"user": {"login": "electrum", "name": "David Phillips"}}, "url": "https://github.com/trinodb/trino/commit/337dd30d26a0ace0b5b2bd99ccedcc0a556f35de", "committedDate": "2020-02-27T01:02:41Z", "message": "Make testDuplicatedRowCreateTable engine only"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "337dd30d26a0ace0b5b2bd99ccedcc0a556f35de", "author": {"user": {"login": "electrum", "name": "David Phillips"}}, "url": "https://github.com/trinodb/trino/commit/337dd30d26a0ace0b5b2bd99ccedcc0a556f35de", "committedDate": "2020-02-27T01:02:41Z", "message": "Make testDuplicatedRowCreateTable engine only"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1615, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}