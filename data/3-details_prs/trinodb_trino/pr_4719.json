{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MjYzNjk2", "number": 4719, "title": "Product tests environments startup hardening", "bodyText": "This PR simplifies product test environment startup by utilizing TestContainer's container dependencies.\nIt also adds retries/timeouts when the environment failed to start correctly.", "createdAt": "2020-08-06T21:05:36Z", "url": "https://github.com/trinodb/trino/pull/4719", "merged": true, "mergeCommit": {"oid": "47d3489db3c1affb8654aad76295a484c7140182"}, "closed": true, "closedAt": "2020-08-07T10:41:13Z", "author": {"login": "wendigo"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8Uu2qgH2gAyNDY0MjYzNjk2OmQ5ZmEzNDEzZTE2NDRkZDBmOWQ0YjNkMDY1NjM2OThiNWVkZjdiNTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8rLdDAFqTQ2MzYzODA0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d9fa3413e1644dd0f9d4b3d06563698b5edf7b50", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/d9fa3413e1644dd0f9d4b3d06563698b5edf7b50", "committedDate": "2020-08-06T19:10:49Z", "message": "Use unshaded classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a4852e7e66bb611621e7bc9fea0d56e2e5bb863", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/4a4852e7e66bb611621e7bc9fea0d56e2e5bb863", "committedDate": "2020-08-06T19:13:20Z", "message": "Replace deprecated method calls"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6156c4c0b9f1f74b9b3af549935a372658aff6a2", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/6156c4c0b9f1f74b9b3af549935a372658aff6a2", "committedDate": "2020-08-06T21:08:22Z", "message": "Simplify product tests startup order"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMTAwNzgz", "url": "https://github.com/trinodb/trino/pull/4719#pullrequestreview-463100783", "createdAt": "2020-08-07T07:42:20Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzo0MjoyMFrOG9P34Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzo0Mzo1OVrOG9P7Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3NjM4NQ==", "bodyText": "Use something more readable than 300000, Maybe MINUTES.of(5).toMillis()?", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r466876385", "createdAt": "2020-08-07T07:42:20Z", "author": {"login": "kokosing"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -129,20 +141,21 @@ public Execution(EnvironmentFactory environmentFactory, PathResolver pathResolve\n             this.testArguments = ImmutableList.copyOf(requireNonNull(testRunOptions.testArguments, \"testOptions.testArguments is null\"));\n             this.environment = requireNonNull(testRunOptions.environment, \"testRunOptions.environment is null\");\n             this.reportsDir = testRunOptions.reportsDir;\n+            this.startupTimeout = requireNonNull(testRunOptions.startupTimeout, \"testRunOptions.startupTimeout is null\");\n+            this.startupRetries = testRunOptions.startupRetries;\n         }\n \n         @Override\n         public void run()\n         {\n             try (UncheckedCloseable ignore = this::cleanUp) {\n-                log.info(\"Pruning old environment(s)\");\n-                Environments.pruneEnvironment();\n-\n-                Environment environment = getEnvironment();\n-\n-                log.info(\"Starting the environment '%s'\", environment);\n-                environment.start();\n-                log.info(\"Environment '%s' started\", environment);\n+                Environment environment = Failsafe.with(new RetryPolicy<>()\n+                        .withMaxRetries(startupRetries)\n+                        .withBackoff(100, 300000, ChronoUnit.MILLIS) // exponential backoff from 100 ms to 5 min", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3NjU4NA==", "bodyText": "Don't you need to setup max duration for failsafe?", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r466876584", "createdAt": "2020-08-07T07:42:43Z", "author": {"login": "kokosing"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -129,20 +141,21 @@ public Execution(EnvironmentFactory environmentFactory, PathResolver pathResolve\n             this.testArguments = ImmutableList.copyOf(requireNonNull(testRunOptions.testArguments, \"testOptions.testArguments is null\"));\n             this.environment = requireNonNull(testRunOptions.environment, \"testRunOptions.environment is null\");\n             this.reportsDir = testRunOptions.reportsDir;\n+            this.startupTimeout = requireNonNull(testRunOptions.startupTimeout, \"testRunOptions.startupTimeout is null\");\n+            this.startupRetries = testRunOptions.startupRetries;\n         }\n \n         @Override\n         public void run()\n         {\n             try (UncheckedCloseable ignore = this::cleanUp) {\n-                log.info(\"Pruning old environment(s)\");\n-                Environments.pruneEnvironment();\n-\n-                Environment environment = getEnvironment();\n-\n-                log.info(\"Starting the environment '%s'\", environment);\n-                environment.start();\n-                log.info(\"Environment '%s' started\", environment);\n+                Environment environment = Failsafe.with(new RetryPolicy<>()\n+                        .withMaxRetries(startupRetries)\n+                        .withBackoff(100, 300000, ChronoUnit.MILLIS) // exponential backoff from 100 ms to 5 min\n+                        .onFailedAttempt(event -> log.warn(\"Could not start environment '%s': %s\", this.environment, event.getLastFailure()))\n+                        .onRetry(event -> log.info(\"Trying to start environment '%s', %d failed attempt(s)\", this.environment, event.getAttemptCount() + 1))\n+                        .onSuccess(event -> log.info(\"Environment '%s' started in %s, %d attempt(s)\", this.environment, event.getElapsedTime(), event.getAttemptCount())))\n+                        .get(() -> tryStartEnvironment(startupTimeout));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3Njc0NA==", "bodyText": "Extract retry policy as variable", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r466876744", "createdAt": "2020-08-07T07:43:02Z", "author": {"login": "kokosing"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -129,20 +141,21 @@ public Execution(EnvironmentFactory environmentFactory, PathResolver pathResolve\n             this.testArguments = ImmutableList.copyOf(requireNonNull(testRunOptions.testArguments, \"testOptions.testArguments is null\"));\n             this.environment = requireNonNull(testRunOptions.environment, \"testRunOptions.environment is null\");\n             this.reportsDir = testRunOptions.reportsDir;\n+            this.startupTimeout = requireNonNull(testRunOptions.startupTimeout, \"testRunOptions.startupTimeout is null\");\n+            this.startupRetries = testRunOptions.startupRetries;\n         }\n \n         @Override\n         public void run()\n         {\n             try (UncheckedCloseable ignore = this::cleanUp) {\n-                log.info(\"Pruning old environment(s)\");\n-                Environments.pruneEnvironment();\n-\n-                Environment environment = getEnvironment();\n-\n-                log.info(\"Starting the environment '%s'\", environment);\n-                environment.start();\n-                log.info(\"Environment '%s' started\", environment);\n+                Environment environment = Failsafe.with(new RetryPolicy<>()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3NjkwNQ==", "bodyText": "undo", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r466876905", "createdAt": "2020-08-07T07:43:23Z", "author": {"login": "kokosing"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -179,15 +204,14 @@ private Environment getEnvironment()\n                         // the test jar is hundreds MB and file system bind is much more efficient\n                         .withFileSystemBind(pathResolver.resolvePlaceholders(testJar).getPath(), \"/docker/test.jar\", READ_ONLY)\n                         .withCommand(ImmutableList.<String>builder()\n-                                .add(\n-                                        \"/usr/lib/jvm/zulu-11/bin/java\",\n-                                        \"-Xmx1g\",\n-                                        // Force Parallel GC to ensure MaxHeapFreeRatio is respected\n-                                        \"-XX:+UseParallelGC\",\n-                                        \"-XX:MinHeapFreeRatio=10\",\n-                                        \"-XX:MaxHeapFreeRatio=10\",\n-                                        \"-Djava.util.logging.config.file=/docker/presto-product-tests/conf/tempto/logging.properties\",\n-                                        \"-Duser.timezone=Asia/Kathmandu\")\n+                                .add(\"/usr/lib/jvm/zulu-11/bin/java\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3NzIxMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    catch (ExecutionException e) {\n          \n          \n            \n                    catch (ExecutionException | TimeoutException e) {", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r466877210", "createdAt": "2020-08-07T07:43:59Z", "author": {"login": "kokosing"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/Environment.java", "diffHunk": "@@ -67,6 +70,9 @@ public void start()\n         catch (ExecutionException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "123cdc472299c0088fa604b0cec7daed9a558dd2", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/123cdc472299c0088fa604b0cec7daed9a558dd2", "committedDate": "2020-08-07T08:43:20Z", "message": "Try starting test environment multiple times before failing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14b7b939d3959d8a7985bde23c7eb00b727c50b9", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/14b7b939d3959d8a7985bde23c7eb00b727c50b9", "committedDate": "2020-08-07T09:00:58Z", "message": "Wait for tests to start before marking environment as running"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "14b7b939d3959d8a7985bde23c7eb00b727c50b9", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/14b7b939d3959d8a7985bde23c7eb00b727c50b9", "committedDate": "2020-08-07T09:00:58Z", "message": "Wait for tests to start before marking environment as running"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMjEyMjY2", "url": "https://github.com/trinodb/trino/pull/4719#pullrequestreview-463212266", "createdAt": "2020-08-07T10:39:49Z", "commit": {"oid": "123cdc472299c0088fa604b0cec7daed9a558dd2"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMDozOTo1MFrOG9VGEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMDozOTo1MFrOG9VGEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk2MTkzNg==", "bodyText": "I would inline these, they are used in single place.", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r466961936", "createdAt": "2020-08-07T10:39:50Z", "author": {"login": "kokosing"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -110,13 +121,20 @@ public Module toModule()\n     {\n         private static final String CONTAINER_REPORTS_DIR = \"/docker/test-reports\";\n \n+        // CI steps fail after 2h, starting environment should not take more than 30m\n+        private static final long TEST_RUN_STARTUP_TIMEOUT = Duration.valueOf(\"30m\").toMillis();\n+        private static final long BACKOFF_MIN = 100L;\n+        private static final long BACKOFF_MAX = Duration.valueOf(\"5m\").toMillis();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "123cdc472299c0088fa604b0cec7daed9a558dd2"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNjM4MDQ0", "url": "https://github.com/trinodb/trino/pull/4719#pullrequestreview-463638044", "createdAt": "2020-08-07T21:17:03Z", "commit": {"oid": "123cdc472299c0088fa604b0cec7daed9a558dd2"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMToxNzowM1rOG9oDbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMToxOTo0OVrOG9oHEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI3MjU1OQ==", "bodyText": "5m is too little and env up should have the same timeout (currently env up has 10m and this has 5m).\nbut, Idk why we need a startup timeout now, that we didn't before. Did you experience startup freeze?\nhow often does it happen?", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r467272559", "createdAt": "2020-08-07T21:17:03Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -94,6 +99,12 @@ public void run()\n         @Option(name = \"--reports-dir\", title = \"reports dir\", description = \"location of the reports directory\")\n         public String reportsDir;\n \n+        @Option(name = \"--startup-timeout\", title = \"startup timeout\", description = \"environment startup timeout\")\n+        public Duration startupTimeout = Duration.valueOf(\"5m\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "123cdc472299c0088fa604b0cec7daed9a558dd2"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI3Mjk2OQ==", "bodyText": "5m is very generous. What backoff is supposed to help with?\nSupposedly we're the only player in the system.", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r467272969", "createdAt": "2020-08-07T21:18:24Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -110,13 +121,20 @@ public Module toModule()\n     {\n         private static final String CONTAINER_REPORTS_DIR = \"/docker/test-reports\";\n \n+        // CI steps fail after 2h, starting environment should not take more than 30m\n+        private static final long TEST_RUN_STARTUP_TIMEOUT = Duration.valueOf(\"30m\").toMillis();\n+        private static final long BACKOFF_MIN = 100L;\n+        private static final long BACKOFF_MAX = Duration.valueOf(\"5m\").toMillis();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "123cdc472299c0088fa604b0cec7daed9a558dd2"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI3MzQ4OQ==", "bodyText": "Please add a code comment why we want to do so.", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r467273489", "createdAt": "2020-08-07T21:19:49Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -234,7 +235,8 @@ private Environment getEnvironment()\n                                                 .build()))\n                                 .addAll(testArguments)\n                                 .addAll(reportsDirOptions(reportsDir))\n-                                .build().toArray(new String[0]));\n+                                .build().toArray(new String[0]))\n+                        .waitingFor(new LogMessageWaitStrategy().withRegEx(\".*\\\\[TestNG] Running.*\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14b7b939d3959d8a7985bde23c7eb00b727c50b9"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4658, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}