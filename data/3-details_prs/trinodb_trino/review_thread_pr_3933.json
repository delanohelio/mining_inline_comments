{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NDQwMjIy", "number": 3933, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODo0OToyM1rOEDEAyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODo0OToyM1rOEDEAyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjQ2OTIzOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/sql/planner/optimizations/PredicatePushDown.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODo0OToyM1rOGf5sfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODo0OToyM1rOGf5sfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEwNDMxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if (buildSymbolToDynamicFilter.containsKey(buildSymbol)) {\n          \n          \n            \n                                    id = buildSymbolToDynamicFilter.get(buildSymbol);\n          \n          \n            \n                                }\n          \n          \n            \n                                else {\n          \n          \n            \n                                    id = \"df_\" + idAllocator.getNextId().toString();\n          \n          \n            \n                                    buildSymbolToDynamicFilter.put(buildSymbol, id);\n          \n          \n            \n                                }\n          \n          \n            \n                                id = buildSymbolToDynamicFilter.computeIfAbsent(buildSymbol, key -> \"df_\" + idAllocator.getNextId().toString());\n          \n      \n    \n    \n  \n\nHowever, it's not a good idea to modify the map returned by .collect(toMap(...)). There's no guarantee that the map is mutable or that it's safe to change. From the javadocs:\n\nThere are no guarantees on the type, mutability, serializability, or thread-safety of the Map returned.", "url": "https://github.com/trinodb/trino/pull/3933#discussion_r436104317", "createdAt": "2020-06-05T18:49:23Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/optimizations/PredicatePushDown.java", "diffHunk": "@@ -578,10 +578,19 @@ private DynamicFiltersResult createDynamicFilters(JoinNode node, List<JoinNode.E\n                 // Even if equiJoinClauses.equals(node.getCriteria), current dynamic filters may not match equiJoinClauses\n                 ImmutableMap.Builder<String, Symbol> dynamicFiltersBuilder = ImmutableMap.builder();\n                 ImmutableList.Builder<Expression> predicatesBuilder = ImmutableList.builder();\n+                Map<Symbol, String> buildSymbolToDynamicFilter = node.getDynamicFilters().entrySet().stream()\n+                        .collect(toMap(Map.Entry::getValue, Map.Entry::getKey));\n                 for (JoinNode.EquiJoinClause clause : equiJoinClauses) {\n                     Symbol probeSymbol = clause.getLeft();\n                     Symbol buildSymbol = clause.getRight();\n-                    String id = \"df_\" + idAllocator.getNextId().toString();\n+                    String id;\n+                    if (buildSymbolToDynamicFilter.containsKey(buildSymbol)) {\n+                        id = buildSymbolToDynamicFilter.get(buildSymbol);\n+                    }\n+                    else {\n+                        id = \"df_\" + idAllocator.getNextId().toString();\n+                        buildSymbolToDynamicFilter.put(buildSymbol, id);\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd972f6802ecda2e2c14c6baa7cd68b84c5a1286"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4234, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}