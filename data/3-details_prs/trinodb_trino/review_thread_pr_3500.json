{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NzUwMDE5", "number": 3500, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxODoxNDo0NFrOD0XlVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMDoyNDoxMFrOD1B-ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MjM4OTM0OnYy", "diffSide": "RIGHT", "path": "presto-password-authenticators/src/main/java/io/prestosql/plugin/password/ldap/LdapAuthenticator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxODoxNDo0NFrOGJR5Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxODoxNDo0NFrOGJR5Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM4MzU2Nw==", "bodyText": "Add this as an @AssertTrue validation the config class (search code base for examples)\nThis should be checkArgument since it's validating an argument. IllegalStateException means the class is in an inappropriate state for the current method invocation.", "url": "https://github.com/trinodb/trino/pull/3500#discussion_r412383567", "createdAt": "2020-04-21T18:14:44Z", "author": {"login": "electrum"}, "path": "presto-password-authenticators/src/main/java/io/prestosql/plugin/password/ldap/LdapAuthenticator.java", "diffHunk": "@@ -290,6 +291,14 @@ private DirContext createUserDirContext(String userDistinguishedName, String pas\n                 .build();\n     }\n \n+    private static void validateLdapUrl(String ldapUrl, boolean allowInsecure)\n+    {\n+        if (ldapUrl.matches(\"ldap://.*\")) {\n+            checkState(allowInsecure, \"Connecting to the LDAP server without SSL enabled requires `ldap.allow-insecure=true`\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MjQxMzcxOnYy", "diffSide": "RIGHT", "path": "presto-password-authenticators/src/main/java/io/prestosql/plugin/password/ldap/LdapAuthenticator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxODoyMDowMlrOGJSHjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxODoyMDowMlrOGJSHjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM4NzIxMw==", "bodyText": "It's better to tell users about the specific threat rather than a vague \"improved security\". How about\n\nPasswords will be sent in the clear to the LDAP server. Please consider using SSL to connect.", "url": "https://github.com/trinodb/trino/pull/3500#discussion_r412387213", "createdAt": "2020-04-21T18:20:02Z", "author": {"login": "electrum"}, "path": "presto-password-authenticators/src/main/java/io/prestosql/plugin/password/ldap/LdapAuthenticator.java", "diffHunk": "@@ -290,6 +291,14 @@ private DirContext createUserDirContext(String userDistinguishedName, String pas\n                 .build();\n     }\n \n+    private static void validateLdapUrl(String ldapUrl, boolean allowInsecure)\n+    {\n+        if (ldapUrl.matches(\"ldap://.*\")) {\n+            checkState(allowInsecure, \"Connecting to the LDAP server without SSL enabled requires `ldap.allow-insecure=true`\");\n+            log.warn(\"Presto will use non-secure connection to the LDAP server. Please consider using an SSL connection for improved security.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MjQyMTE5OnYy", "diffSide": "RIGHT", "path": "presto-password-authenticators/src/main/java/io/prestosql/plugin/password/ldap/LdapConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxODoyMTo0M1rOGJSMCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxODoyMTo0M1rOGJSMCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM4ODM2MA==", "bodyText": "Move this and the getter/setter to be directly after the URL, since they are related.", "url": "https://github.com/trinodb/trino/pull/3500#discussion_r412388360", "createdAt": "2020-04-21T18:21:43Z", "author": {"login": "electrum"}, "path": "presto-password-authenticators/src/main/java/io/prestosql/plugin/password/ldap/LdapConfig.java", "diffHunk": "@@ -33,9 +33,10 @@\n     private String bindPassword;\n     private boolean ignoreReferrals;\n     private Duration ldapCacheTtl = new Duration(1, TimeUnit.HOURS);\n+    private boolean allowInsecure;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MjQ0MjYxOnYy", "diffSide": "RIGHT", "path": "presto-password-authenticators/src/main/java/io/prestosql/plugin/password/ldap/LdapAuthenticator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxODoyNjozM1rOGJSYpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxODoyNjozM1rOGJSYpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM5MTU4OQ==", "bodyText": "This can be simplified to ldapUrl.startsWith(\"ldap://\")", "url": "https://github.com/trinodb/trino/pull/3500#discussion_r412391589", "createdAt": "2020-04-21T18:26:33Z", "author": {"login": "electrum"}, "path": "presto-password-authenticators/src/main/java/io/prestosql/plugin/password/ldap/LdapAuthenticator.java", "diffHunk": "@@ -290,6 +291,14 @@ private DirContext createUserDirContext(String userDistinguishedName, String pas\n                 .build();\n     }\n \n+    private static void validateLdapUrl(String ldapUrl, boolean allowInsecure)\n+    {\n+        if (ldapUrl.matches(\"ldap://.*\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTMyODAzOnYy", "diffSide": "RIGHT", "path": "presto-password-authenticators/src/main/java/io/prestosql/plugin/password/ldap/LdapConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMDoyMTowNlrOGKRMNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMDoyMjo0OFrOGKROUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQyMDU5Ng==", "bodyText": "Sorry for the confusion. The logging should be done in  LdapAuthenticator, as config classes should be pure configuration data. Also, from a conceptual standpoint, the LDAP authentication is where this matters. Simply creating/validating a config shouldn't cause a warning.", "url": "https://github.com/trinodb/trino/pull/3500#discussion_r413420596", "createdAt": "2020-04-23T00:21:06Z", "author": {"login": "electrum"}, "path": "presto-password-authenticators/src/main/java/io/prestosql/plugin/password/ldap/LdapConfig.java", "diffHunk": "@@ -49,6 +54,31 @@ public LdapConfig setLdapUrl(String url)\n         return this;\n     }\n \n+    public boolean isAllowInsecure()\n+    {\n+        return allowInsecure;\n+    }\n+\n+    @Config(\"ldap.allow-insecure\")\n+    @ConfigDescription(\"Allow insecure connection to the LDAP server\")\n+    public LdapConfig setAllowInsecure(boolean allowInsecure)\n+    {\n+        this.allowInsecure = allowInsecure;\n+        return this;\n+    }\n+\n+    @AssertTrue(message = \"Connecting to the LDAP server without SSL enabled requires `ldap.allow-insecure=true`\")\n+    public boolean isUrlConfigurationValid()\n+    {\n+        if (ldapUrl != null && ldapUrl.startsWith(\"ldap://\")) {\n+            if (!allowInsecure) {\n+                return false;\n+            }\n+            log.warn(\"Passwords will be sent in the clear to the LDAP server. Please consider using SSL to connect.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQyMTEzOQ==", "bodyText": "So this can be simplified to\nreturn !nullToEmpty(ldapUrl).startsWith(\"ldap://\") || allowInsecure;", "url": "https://github.com/trinodb/trino/pull/3500#discussion_r413421139", "createdAt": "2020-04-23T00:22:48Z", "author": {"login": "electrum"}, "path": "presto-password-authenticators/src/main/java/io/prestosql/plugin/password/ldap/LdapConfig.java", "diffHunk": "@@ -49,6 +54,31 @@ public LdapConfig setLdapUrl(String url)\n         return this;\n     }\n \n+    public boolean isAllowInsecure()\n+    {\n+        return allowInsecure;\n+    }\n+\n+    @Config(\"ldap.allow-insecure\")\n+    @ConfigDescription(\"Allow insecure connection to the LDAP server\")\n+    public LdapConfig setAllowInsecure(boolean allowInsecure)\n+    {\n+        this.allowInsecure = allowInsecure;\n+        return this;\n+    }\n+\n+    @AssertTrue(message = \"Connecting to the LDAP server without SSL enabled requires `ldap.allow-insecure=true`\")\n+    public boolean isUrlConfigurationValid()\n+    {\n+        if (ldapUrl != null && ldapUrl.startsWith(\"ldap://\")) {\n+            if (!allowInsecure) {\n+                return false;\n+            }\n+            log.warn(\"Passwords will be sent in the clear to the LDAP server. Please consider using SSL to connect.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQyMDU5Ng=="}, "originalCommit": null, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTMzMzMyOnYy", "diffSide": "RIGHT", "path": "presto-password-authenticators/src/test/java/io/prestosql/plugin/password/ldap/TestLdapConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMDoyMzoxNlrOGKRPDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMDoyMzoxNlrOGKRPDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQyMTMyNg==", "bodyText": "Nit: move directly after setLdapUrl", "url": "https://github.com/trinodb/trino/pull/3500#discussion_r413421326", "createdAt": "2020-04-23T00:23:16Z", "author": {"login": "electrum"}, "path": "presto-password-authenticators/src/test/java/io/prestosql/plugin/password/ldap/TestLdapConfig.java", "diffHunk": "@@ -43,7 +44,8 @@ public void testDefault()\n                 .setBindDistingushedName(null)\n                 .setBindPassword(null)\n                 .setIgnoreReferrals(false)\n-                .setLdapCacheTtl(new Duration(1, TimeUnit.HOURS)));\n+                .setLdapCacheTtl(new Duration(1, TimeUnit.HOURS))\n+                .setAllowInsecure(false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTMzNDM1OnYy", "diffSide": "RIGHT", "path": "presto-password-authenticators/src/test/java/io/prestosql/plugin/password/ldap/TestLdapConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMDoyMzo0NlrOGKRPqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMDoyMzo0NlrOGKRPqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQyMTQ4MQ==", "bodyText": "Same, move above, so the order is consistent", "url": "https://github.com/trinodb/trino/pull/3500#discussion_r413421481", "createdAt": "2020-04-23T00:23:46Z", "author": {"login": "electrum"}, "path": "presto-password-authenticators/src/test/java/io/prestosql/plugin/password/ldap/TestLdapConfig.java", "diffHunk": "@@ -58,6 +60,7 @@ public void testExplicitConfig()\n                 .put(\"ldap.bind-password\", \"password1234\")\n                 .put(\"ldap.ignore-referrals\", \"true\")\n                 .put(\"ldap.cache-ttl\", \"2m\")\n+                .put(\"ldap.allow-insecure\", \"true\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTMzNDYyOnYy", "diffSide": "RIGHT", "path": "presto-password-authenticators/src/test/java/io/prestosql/plugin/password/ldap/TestLdapConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMDoyMzo1MVrOGKRPyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMDoyMzo1MVrOGKRPyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQyMTUxMw==", "bodyText": "Here, too", "url": "https://github.com/trinodb/trino/pull/3500#discussion_r413421513", "createdAt": "2020-04-23T00:23:51Z", "author": {"login": "electrum"}, "path": "presto-password-authenticators/src/test/java/io/prestosql/plugin/password/ldap/TestLdapConfig.java", "diffHunk": "@@ -68,7 +71,8 @@ public void testExplicitConfig()\n                 .setBindDistingushedName(\"CN=User Name,OU=CITY_OU,OU=STATE_OU,DC=domain,DC=domain_root\")\n                 .setBindPassword(\"password1234\")\n                 .setIgnoreReferrals(true)\n-                .setLdapCacheTtl(new Duration(2, TimeUnit.MINUTES));\n+                .setLdapCacheTtl(new Duration(2, TimeUnit.MINUTES))\n+                .setAllowInsecure(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTMzNTM0OnYy", "diffSide": "RIGHT", "path": "presto-password-authenticators/src/test/java/io/prestosql/plugin/password/ldap/TestLdapConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMDoyNDoxMFrOGKRQLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMDoyNDoxMFrOGKRQLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQyMTYxNQ==", "bodyText": "Move after setLdapUrl", "url": "https://github.com/trinodb/trino/pull/3500#discussion_r413421615", "createdAt": "2020-04-23T00:24:10Z", "author": {"login": "electrum"}, "path": "presto-password-authenticators/src/test/java/io/prestosql/plugin/password/ldap/TestLdapConfig.java", "diffHunk": "@@ -82,9 +86,23 @@ public void testValidation()\n                 .setUserBaseDistinguishedName(\"dc=test,dc=com\")\n                 .setGroupAuthorizationSearchPattern(\"&(objectClass=user)(memberOf=cn=group)(user=username)\"));\n \n-        assertFailsValidation(new LdapConfig().setLdapUrl(\"ldap://\"), \"ldapUrl\", \"LDAP without SSL/TLS unsupported. Expected ldaps://\", Pattern.class);\n-        assertFailsValidation(new LdapConfig().setLdapUrl(\"localhost\"), \"ldapUrl\", \"LDAP without SSL/TLS unsupported. Expected ldaps://\", Pattern.class);\n-        assertFailsValidation(new LdapConfig().setLdapUrl(\"ldaps:/localhost\"), \"ldapUrl\", \"LDAP without SSL/TLS unsupported. Expected ldaps://\", Pattern.class);\n+        assertValidates(new LdapConfig()\n+                .setLdapUrl(\"ldap://localhost\")\n+                .setUserBindSearchPattern(\"uid=${USER},ou=org,dc=test,dc=com\")\n+                .setUserBaseDistinguishedName(\"dc=test,dc=com\")\n+                .setGroupAuthorizationSearchPattern(\"&(objectClass=user)(memberOf=cn=group)(user=username)\")\n+                .setAllowInsecure(true));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 203, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}