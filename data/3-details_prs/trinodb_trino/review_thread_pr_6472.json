{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2NzA0NDAx", "number": 6472, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxMDozODoxM1rOFKCtsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxMDozOTozMlrOFMFWWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MDc0NTQ2OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/operator/PagesHashStrategy.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxMDozODoxM1rOIMpLzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxODoxNDoxN1rOIMyl9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDEyODU4OA==", "bodyText": "move it above other positionNotDistinctFromRow", "url": "https://github.com/trinodb/trino/pull/6472#discussion_r550128588", "createdAt": "2020-12-30T10:38:13Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/operator/PagesHashStrategy.java", "diffHunk": "@@ -59,6 +66,15 @@\n      */\n     boolean positionEqualsRow(int leftBlockIndex, int leftPosition, int rightPosition, Page rightPage);\n \n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI4Mjc0MA==", "bodyText": "Sorry, could you clarify this comment on what you think should be moved? I put the NOT DISTINCT variants directly below each of the EQUALS variants.", "url": "https://github.com/trinodb/trino/pull/6472#discussion_r550282740", "createdAt": "2020-12-30T18:14:17Z", "author": {"login": "erichwang"}, "path": "presto-main/src/main/java/io/prestosql/operator/PagesHashStrategy.java", "diffHunk": "@@ -59,6 +66,15 @@\n      */\n     boolean positionEqualsRow(int leftBlockIndex, int leftPosition, int rightPosition, Page rightPage);\n \n+    /**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDEyODU4OA=="}, "originalCommit": null, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MDg5MjQ4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/sql/gen/TestJoinCompiler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxMToxMTozNlrOIMqr6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxMToxMTozNlrOIMqr6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE1MzE5NQ==", "bodyText": "add some nulls and NaNs to channel?", "url": "https://github.com/trinodb/trino/pull/6472#discussion_r550153195", "createdAt": "2020-12-30T11:11:36Z", "author": {"login": "sopel39"}, "path": "presto-main/src/test/java/io/prestosql/sql/gen/TestJoinCompiler.java", "diffHunk": "@@ -109,11 +111,15 @@ public void testSingleChannel(boolean hashEnabled)\n                     Block rightBlock = channel.get(rightBlockIndex);\n                     for (int rightBlockPosition = 0; rightBlockPosition < rightBlock.getPositionCount(); rightBlockPosition++) {\n                         boolean expected = equalOperator.equalNullSafe(leftBlock, leftBlockPosition, rightBlock, rightBlockPosition);\n+                        boolean expectedNotDistinct = !distinctFromOperator.isDistinctFrom(leftBlock, leftBlockPosition, rightBlock, rightBlockPosition);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MDkwMDk4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/operator/TestStreamingAggregationOperator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxMToxMzo0MlrOIMqxtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxMToxMzo0MlrOIMqxtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE1NDY3Nw==", "bodyText": "missing nulls", "url": "https://github.com/trinodb/trino/pull/6472#discussion_r550154677", "createdAt": "2020-12-30T11:13:42Z", "author": {"login": "sopel39"}, "path": "presto-main/src/test/java/io/prestosql/operator/TestStreamingAggregationOperator.java", "diffHunk": "@@ -92,37 +93,51 @@ public void tearDown()\n     @Test\n     public void test()\n     {\n-        RowPagesBuilder rowPagesBuilder = RowPagesBuilder.rowPagesBuilder(BOOLEAN, VARCHAR, BIGINT);\n+        OperatorFactory operatorFactory = StreamingAggregationOperator.createOperatorFactory(\n+                0,\n+                new PlanNodeId(\"test\"),\n+                ImmutableList.of(BOOLEAN, DOUBLE, BIGINT),\n+                ImmutableList.of(DOUBLE),\n+                ImmutableList.of(1),\n+                AggregationNode.Step.SINGLE,\n+                ImmutableList.of(COUNT.bind(ImmutableList.of(0), Optional.empty()),\n+                        LONG_SUM.bind(ImmutableList.of(2), Optional.empty())),\n+                new JoinCompiler(new TypeOperators()));\n+\n+        RowPagesBuilder rowPagesBuilder = RowPagesBuilder.rowPagesBuilder(BOOLEAN, DOUBLE, BIGINT);\n         List<Page> input = rowPagesBuilder\n                 .addSequencePage(3, 0, 0, 1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MDkwOTA0OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/operator/TestWindowOperator.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxMToxNTozMlrOIMq26g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMjo1Mjo1NlrOIM2qSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE1NjAxMA==", "bodyText": "please pick up #6462 as a prefix commit", "url": "https://github.com/trinodb/trino/pull/6472#discussion_r550156010", "createdAt": "2020-12-30T11:15:32Z", "author": {"login": "sopel39"}, "path": "presto-main/src/test/java/io/prestosql/operator/TestWindowOperator.java", "diffHunk": "@@ -727,6 +731,67 @@ public void testFindEndPosition()\n         assertFindEndPosition(\"000000000000001111111111\", 14);\n     }\n \n+    @Test(dataProvider = \"spillEnabled\")\n+    public void testDistinctPartitionAndPeers(boolean spillEnabled, boolean revokeMemoryWhenAddingPages, long memoryLimit)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI4MzQ2MQ==", "bodyText": "Sorry, this might be kind of n00b, but what does it mean to pick up a prefix commit?", "url": "https://github.com/trinodb/trino/pull/6472#discussion_r550283461", "createdAt": "2020-12-30T18:16:56Z", "author": {"login": "erichwang"}, "path": "presto-main/src/test/java/io/prestosql/operator/TestWindowOperator.java", "diffHunk": "@@ -727,6 +731,67 @@ public void testFindEndPosition()\n         assertFindEndPosition(\"000000000000001111111111\", 14);\n     }\n \n+    @Test(dataProvider = \"spillEnabled\")\n+    public void testDistinctPartitionAndPeers(boolean spillEnabled, boolean revokeMemoryWhenAddingPages, long memoryLimit)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE1NjAxMA=="}, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDMyNTA3OQ==", "bodyText": "I mean to cherry pick it before other commits", "url": "https://github.com/trinodb/trino/pull/6472#discussion_r550325079", "createdAt": "2020-12-30T20:57:16Z", "author": {"login": "sopel39"}, "path": "presto-main/src/test/java/io/prestosql/operator/TestWindowOperator.java", "diffHunk": "@@ -727,6 +731,67 @@ public void testFindEndPosition()\n         assertFindEndPosition(\"000000000000001111111111\", 14);\n     }\n \n+    @Test(dataProvider = \"spillEnabled\")\n+    public void testDistinctPartitionAndPeers(boolean spillEnabled, boolean revokeMemoryWhenAddingPages, long memoryLimit)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE1NjAxMA=="}, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM0NzQxNw==", "bodyText": "You mean integrate into this PR commit chain right?", "url": "https://github.com/trinodb/trino/pull/6472#discussion_r550347417", "createdAt": "2020-12-30T22:42:04Z", "author": {"login": "erichwang"}, "path": "presto-main/src/test/java/io/prestosql/operator/TestWindowOperator.java", "diffHunk": "@@ -727,6 +731,67 @@ public void testFindEndPosition()\n         assertFindEndPosition(\"000000000000001111111111\", 14);\n     }\n \n+    @Test(dataProvider = \"spillEnabled\")\n+    public void testDistinctPartitionAndPeers(boolean spillEnabled, boolean revokeMemoryWhenAddingPages, long memoryLimit)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE1NjAxMA=="}, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM0OTM4Nw==", "bodyText": "Yup. Or rebase after I merge that PR", "url": "https://github.com/trinodb/trino/pull/6472#discussion_r550349387", "createdAt": "2020-12-30T22:52:56Z", "author": {"login": "sopel39"}, "path": "presto-main/src/test/java/io/prestosql/operator/TestWindowOperator.java", "diffHunk": "@@ -727,6 +731,67 @@ public void testFindEndPosition()\n         assertFindEndPosition(\"000000000000001111111111\", 14);\n     }\n \n+    @Test(dataProvider = \"spillEnabled\")\n+    public void testDistinctPartitionAndPeers(boolean spillEnabled, boolean revokeMemoryWhenAddingPages, long memoryLimit)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE1NjAxMA=="}, "originalCommit": null, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MjE0ODc0OnYy", "diffSide": "RIGHT", "path": "core/trino-main/src/main/java/io/trino/operator/GroupedTopNRankAccumulator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxMDozOTozMlrOIPnhpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxMDozOTozMlrOIPnhpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzI0NzE0Mg==", "bodyText": "commit message is too long", "url": "https://github.com/trinodb/trino/pull/6472#discussion_r553247142", "createdAt": "2021-01-07T10:39:32Z", "author": {"login": "sopel39"}, "path": "core/trino-main/src/main/java/io/trino/operator/GroupedTopNRankAccumulator.java", "diffHunk": "@@ -577,11 +577,11 @@ private IntegrityStats verifyHeapIntegrity(long groupId, long heapNodeIndex)\n         verify(actualPeerGroupCount == peerGroupCount, \"Recorded peer group count does not match actual\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f00b28d9e16f87bea8426430adadc3cb720cc99"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4303, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}