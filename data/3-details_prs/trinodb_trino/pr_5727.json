{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExNjI3MTk5", "number": 5727, "title": "Improve InternalHiveSplitFactory#checkBlocks error message", "bodyText": "", "createdAt": "2020-10-28T15:17:23Z", "url": "https://github.com/trinodb/trino/pull/5727", "merged": true, "mergeCommit": {"oid": "039dd5f59336ca5b8b33f381821250e7043aa5aa"}, "closed": true, "closedAt": "2020-10-28T17:37:18Z", "author": {"login": "sopel39"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdW_XFQAFqTUxODc5NTU4Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXAPauAFqTUxODg2MDQ3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4Nzk1NTg3", "url": "https://github.com/trinodb/trino/pull/5727#pullrequestreview-518795587", "createdAt": "2020-10-28T15:32:48Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4Nzk2NzQ3", "url": "https://github.com/trinodb/trino/pull/5727#pullrequestreview-518796747", "createdAt": "2020-10-28T15:33:48Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNTozMzo0OFrOHpwK2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNTozMzo0OFrOHpwK2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU0Mjg3NA==", "bodyText": "Add a check for negative start here, too", "url": "https://github.com/trinodb/trino/pull/5727#discussion_r513542874", "createdAt": "2020-10-28T15:33:48Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/InternalHiveSplitFactory.java", "diffHunk": "@@ -224,14 +224,29 @@ public String getPartitionName()\n                 acidInfo));\n     }\n \n-    private static void checkBlocks(List<InternalHiveBlock> blocks, long start, long length)\n+    private static void checkBlocks(Path path, List<InternalHiveBlock> blocks, long start, long length)\n     {\n-        checkArgument(length >= 0);\n-        checkArgument(!blocks.isEmpty());\n-        checkArgument(start == blocks.get(0).getStart());\n-        checkArgument(start + length == blocks.get(blocks.size() - 1).getEnd());\n+        checkArgument(length >= 0, \"Split (%s) has negative length (%s)\", path, length);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56586cc425603a010577394109cdcddd5f003978", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/56586cc425603a010577394109cdcddd5f003978", "committedDate": "2020-10-28T16:00:53Z", "message": "Improve InternalHiveSplitFactory#checkBlocks error message"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "56586cc425603a010577394109cdcddd5f003978", "author": {"user": {"login": "sopel39", "name": "Karol Sobczak"}}, "url": "https://github.com/trinodb/trino/commit/56586cc425603a010577394109cdcddd5f003978", "committedDate": "2020-10-28T16:00:53Z", "message": "Improve InternalHiveSplitFactory#checkBlocks error message"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4ODYwNDc1", "url": "https://github.com/trinodb/trino/pull/5727#pullrequestreview-518860475", "createdAt": "2020-10-28T16:33:18Z", "commit": {"oid": "56586cc425603a010577394109cdcddd5f003978"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjozMzoxOFrOHpzFIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjozMzoxOFrOHpzFIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU5MDU2MQ==", "bodyText": "minor suggestion: also include index i in the error message? feel free to drop this if the block-end values seems sufficient.", "url": "https://github.com/trinodb/trino/pull/5727#discussion_r513590561", "createdAt": "2020-10-28T16:33:18Z", "author": {"login": "phd3"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/InternalHiveSplitFactory.java", "diffHunk": "@@ -224,14 +224,30 @@ public String getPartitionName()\n                 acidInfo));\n     }\n \n-    private static void checkBlocks(List<InternalHiveBlock> blocks, long start, long length)\n+    private static void checkBlocks(Path path, List<InternalHiveBlock> blocks, long start, long length)\n     {\n-        checkArgument(length >= 0);\n-        checkArgument(!blocks.isEmpty());\n-        checkArgument(start == blocks.get(0).getStart());\n-        checkArgument(start + length == blocks.get(blocks.size() - 1).getEnd());\n+        checkArgument(start >= 0, \"Split (%s) has negative start (%s)\", path, start);\n+        checkArgument(length >= 0, \"Split (%s) has negative length (%s)\", path, length);\n+        checkArgument(!blocks.isEmpty(), \"Split (%s) has no blocks\", path);\n+        checkArgument(\n+                start == blocks.get(0).getStart(),\n+                \"Split (%s) start (%s) does not match first block start (%s)\",\n+                path,\n+                start,\n+                blocks.get(0).getStart());\n+        checkArgument(\n+                start + length == blocks.get(blocks.size() - 1).getEnd(),\n+                \"Split (%s) end (%s) does not match last block end (%s)\",\n+                path,\n+                start + length,\n+                blocks.get(blocks.size() - 1).getEnd());\n         for (int i = 1; i < blocks.size(); i++) {\n-            checkArgument(blocks.get(i - 1).getEnd() == blocks.get(i).getStart());\n+            checkArgument(\n+                    blocks.get(i - 1).getEnd() == blocks.get(i).getStart(),\n+                    \"Split (%s) block end (%s) does not match next block start (%s)\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56586cc425603a010577394109cdcddd5f003978"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3213, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}