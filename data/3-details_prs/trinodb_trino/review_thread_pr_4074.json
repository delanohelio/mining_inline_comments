{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2Mjc1NTI2", "number": 4074, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOTo1MzoxM1rOEGrm_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMTo0NzoxMlrOEGtzBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NDQxNDA3OnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/cassandra/TestInsertIntoCassandraTable.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOTo1MzoxM1rOGloJcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMDoyNzozNFrOGlpT8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEwODI3Mg==", "bodyText": "why they are marked as PROFILE_SPECIFIC_TESTS?", "url": "https://github.com/trinodb/trino/pull/4074#discussion_r442108272", "createdAt": "2020-06-18T09:53:13Z", "author": {"login": "sopel39"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cassandra/TestInsertIntoCassandraTable.java", "diffHunk": "@@ -57,7 +58,7 @@ public Requirement getRequirements(Configuration configuration)\n         return mutableTable(CASSANDRA_ALL_TYPES, CASSANDRA_INSERT_TABLE, CREATED);\n     }\n \n-    @Test(groups = CASSANDRA)\n+    @Test(groups = {CASSANDRA, PROFILE_SPECIFIC_TESTS})", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEyNzM0Ng==", "bodyText": "because they are specific to specific environment.\nfor example (before my changes):\n$ ( cd presto-product-tests/src/main/java/io/prestosql/tests/sqlserver; git grep PROFILE_SPECIFIC_TESTS ; )\nTestInsert.java:import static io.prestosql.tests.TestGroups.PROFILE_SPECIFIC_TESTS;\nTestInsert.java:    @Test(groups = {SQL_SERVER, PROFILE_SPECIFIC_TESTS})\nTestInsert.java:    @Test(groups = {SQL_SERVER, PROFILE_SPECIFIC_TESTS})\nTestInsert.java:    @Test(groups = {SQL_SERVER, PROFILE_SPECIFIC_TESTS})\nTestInvalidSelect.java:import static io.prestosql.tests.TestGroups.PROFILE_SPECIFIC_TESTS;\nTestInvalidSelect.java:    @Test(groups = {SQL_SERVER, PROFILE_SPECIFIC_TESTS})\nTestInvalidSelect.java:    @Test(groups = {SQL_SERVER, PROFILE_SPECIFIC_TESTS})\nTestInvalidSelect.java:    @Test(groups = {SQL_SERVER, PROFILE_SPECIFIC_TESTS})\nTestSelect.java:import static io.prestosql.tests.TestGroups.PROFILE_SPECIFIC_TESTS;\nTestSelect.java:    @Test(groups = {SQL_SERVER, PROFILE_SPECIFIC_TESTS})\nTestSelect.java:    @Test(groups = {SQL_SERVER, PROFILE_SPECIFIC_TESTS})\nTestSelect.java:    @Test(groups = {SQL_SERVER, PROFILE_SPECIFIC_TESTS})\nTestSelect.java:    @Test(groups = {SQL_SERVER, PROFILE_SPECIFIC_TESTS})\nTestSelect.java:    @Test(groups = {SQL_SERVER, PROFILE_SPECIFIC_TESTS})", "url": "https://github.com/trinodb/trino/pull/4074#discussion_r442127346", "createdAt": "2020-06-18T10:27:34Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cassandra/TestInsertIntoCassandraTable.java", "diffHunk": "@@ -57,7 +58,7 @@ public Requirement getRequirements(Configuration configuration)\n         return mutableTable(CASSANDRA_ALL_TYPES, CASSANDRA_INSERT_TABLE, CREATED);\n     }\n \n-    @Test(groups = CASSANDRA)\n+    @Test(groups = {CASSANDRA, PROFILE_SPECIFIC_TESTS})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEwODI3Mg=="}, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NDc3MDg2OnYy", "diffSide": "LEFT", "path": "presto-product-tests/bin/product-tests-suite-1.sh", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMTo0Njo0MVrOGlrrTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMjowNTozMVrOGlsQkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE2NjA5NA==", "bodyText": "I would keep quarantine", "url": "https://github.com/trinodb/trino/pull/4074#discussion_r442166094", "createdAt": "2020-06-18T11:46:41Z", "author": {"login": "kokosing"}, "path": "presto-product-tests/bin/product-tests-suite-1.sh", "diffHunk": "@@ -10,7 +10,7 @@ suite_exit_code=0\n presto-product-tests-launcher/bin/run-launcher test run \\\n     --environment multinode \\\n     -- \\\n-    -x quarantine,big_query,storage_formats,profile_specific_tests,tpcds,cassandra,mysql,postgresql,kafka,hive_compression,\"${DISTRO_SKIP_GROUP}\" \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE3NTYzMg==", "bodyText": "i thought about that. Note that quarantine was plugged in suite-1n only, and not in the others suites.\nSo if you wanted to quarantine some other test, you still need to do a modification of a suite.\nLet's drop it now, and readd (where necessary) later, if needed.", "url": "https://github.com/trinodb/trino/pull/4074#discussion_r442175632", "createdAt": "2020-06-18T12:05:31Z", "author": {"login": "findepi"}, "path": "presto-product-tests/bin/product-tests-suite-1.sh", "diffHunk": "@@ -10,7 +10,7 @@ suite_exit_code=0\n presto-product-tests-launcher/bin/run-launcher test run \\\n     --environment multinode \\\n     -- \\\n-    -x quarantine,big_query,storage_formats,profile_specific_tests,tpcds,cassandra,mysql,postgresql,kafka,hive_compression,\"${DISTRO_SKIP_GROUP}\" \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE2NjA5NA=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NDc3MjU0OnYy", "diffSide": "LEFT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/TestGroups.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMTo0NzoxMlrOGlrsVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMjowNzozOVrOGlsU2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE2NjM1Nw==", "bodyText": "this groups were used in convention tests, maybe you want to remove them from there as well.", "url": "https://github.com/trinodb/trino/pull/4074#discussion_r442166357", "createdAt": "2020-06-18T11:47:12Z", "author": {"login": "kokosing"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/TestGroups.java", "diffHunk": "@@ -33,17 +32,7 @@\n     public static final String QUERY_ENGINE = \"qe\";\n     public static final String COMPARISON = \"comparison\";\n     public static final String LOGICAL = \"logical\";\n-    public static final String SET_OPERATION = \"set_operation\";\n     public static final String JSON_FUNCTIONS = \"json_functions\";\n-    public static final String URL_FUNCTIONS = \"url_functions\";\n-    public static final String ARRAY_FUNCTIONS = \"array_functions\";\n-    public static final String BINARY_FUNCTIONS = \"binary_functions\";\n-    public static final String CONVERSION_FUNCTIONS = \"conversion_functions\";\n-    public static final String HOROLOGY_FUNCTIONS = \"horology_functions\";\n-    public static final String MAP_FUNCTIONS = \"map_functions\";\n-    public static final String REGEX_FUNCTIONS = \"regex_functions\";\n-    public static final String STRING_FUNCTIONS = \"string_functions\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE3NjcyOA==", "bodyText": "Indeed. It's a mess. Some test convention tests' groups are not defined here (eg postgresql, an important example, as it's used to select tests for singlenode-postgresql env).\ni remove these here to clear annoying compiler warning mostly. I don't think it's worthy keeping them, but if you see a value in this, I can restore them here.", "url": "https://github.com/trinodb/trino/pull/4074#discussion_r442176728", "createdAt": "2020-06-18T12:07:39Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/TestGroups.java", "diffHunk": "@@ -33,17 +32,7 @@\n     public static final String QUERY_ENGINE = \"qe\";\n     public static final String COMPARISON = \"comparison\";\n     public static final String LOGICAL = \"logical\";\n-    public static final String SET_OPERATION = \"set_operation\";\n     public static final String JSON_FUNCTIONS = \"json_functions\";\n-    public static final String URL_FUNCTIONS = \"url_functions\";\n-    public static final String ARRAY_FUNCTIONS = \"array_functions\";\n-    public static final String BINARY_FUNCTIONS = \"binary_functions\";\n-    public static final String CONVERSION_FUNCTIONS = \"conversion_functions\";\n-    public static final String HOROLOGY_FUNCTIONS = \"horology_functions\";\n-    public static final String MAP_FUNCTIONS = \"map_functions\";\n-    public static final String REGEX_FUNCTIONS = \"regex_functions\";\n-    public static final String STRING_FUNCTIONS = \"string_functions\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE2NjM1Nw=="}, "originalCommit": null, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4106, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}