{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwODc3MjIx", "number": 2728, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMDowNjozOVrODdHHyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMjozNToyMlrODeb9Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxODUxOTc5OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/connector/informationschema/InformationSchemaMetadata.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMDowNjozOVrOFlhw4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMToyMDo0MlrOFl0TFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg5NDgxNg==", "bodyText": "Can you please add a test that?", "url": "https://github.com/trinodb/trino/pull/2728#discussion_r374894816", "createdAt": "2020-02-04T20:06:39Z", "author": {"login": "kokosing"}, "path": "presto-main/src/main/java/io/prestosql/connector/informationschema/InformationSchemaMetadata.java", "diffHunk": "@@ -164,7 +165,13 @@ public boolean usesLegacyTableLayouts()\n     @Override\n     public ConnectorTableProperties getTableProperties(ConnectorSession session, ConnectorTableHandle table)\n     {\n-        return new ConnectorTableProperties();\n+        InformationSchemaTableHandle tableHandle = (InformationSchemaTableHandle) table;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE2Mjk4OA==", "bodyText": "have added a test for the same", "url": "https://github.com/trinodb/trino/pull/2728#discussion_r375162988", "createdAt": "2020-02-05T10:06:49Z", "author": {"login": "Praveen2112"}, "path": "presto-main/src/main/java/io/prestosql/connector/informationschema/InformationSchemaMetadata.java", "diffHunk": "@@ -164,7 +165,13 @@ public boolean usesLegacyTableLayouts()\n     @Override\n     public ConnectorTableProperties getTableProperties(ConnectorSession session, ConnectorTableHandle table)\n     {\n-        return new ConnectorTableProperties();\n+        InformationSchemaTableHandle tableHandle = (InformationSchemaTableHandle) table;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg5NDgxNg=="}, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE5ODQ4Ng==", "bodyText": "My idea for test here is to run a query and see that plan does not contain table scan. That possibly could be added to io.prestosql.tests.TestInformationSchemaConnector.", "url": "https://github.com/trinodb/trino/pull/2728#discussion_r375198486", "createdAt": "2020-02-05T11:20:42Z", "author": {"login": "kokosing"}, "path": "presto-main/src/main/java/io/prestosql/connector/informationschema/InformationSchemaMetadata.java", "diffHunk": "@@ -164,7 +165,13 @@ public boolean usesLegacyTableLayouts()\n     @Override\n     public ConnectorTableProperties getTableProperties(ConnectorSession session, ConnectorTableHandle table)\n     {\n-        return new ConnectorTableProperties();\n+        InformationSchemaTableHandle tableHandle = (InformationSchemaTableHandle) table;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg5NDgxNg=="}, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTU5MDA4OnYy", "diffSide": "RIGHT", "path": "presto-tests/src/test/java/io/prestosql/tests/TestInformationSchemaConnector.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMjoxODowOFrOFnL56g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQxNToyMDoyMlrOFnVjhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYzMzgzNA==", "bodyText": "I was also thinking about:\n        assertFalse(searchFrom(getQueryRunner().createPlan(getSession(), \"SELECT count(*) from test_catalog.information_schema.tables WHERE table_schema = ''\", WarningCollector.NOOP).getRoot())\n                .where(TableScanNode.class::isInstance)\n                .findFirst()\n                .isPresent());", "url": "https://github.com/trinodb/trino/pull/2728#discussion_r376633834", "createdAt": "2020-02-07T22:18:08Z", "author": {"login": "kokosing"}, "path": "presto-tests/src/test/java/io/prestosql/tests/TestInformationSchemaConnector.java", "diffHunk": "@@ -192,6 +192,12 @@ public void testMetadataCalls()\n                         .withListSchemasCount(1)\n                         .withListTablesCount(2)\n                         .withGetColumnsCount(10000));\n+        assertNoMetadataCalls(\"SELECT count(*) from test_catalog.information_schema.tables WHERE table_schema = ''\", \"VALUES 0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc5MTk0Mw==", "bodyText": "Thanks for your insights. I have applied your comments", "url": "https://github.com/trinodb/trino/pull/2728#discussion_r376791943", "createdAt": "2020-02-09T15:20:22Z", "author": {"login": "Praveen2112"}, "path": "presto-tests/src/test/java/io/prestosql/tests/TestInformationSchemaConnector.java", "diffHunk": "@@ -192,6 +192,12 @@ public void testMetadataCalls()\n                         .withListSchemasCount(1)\n                         .withListTablesCount(2)\n                         .withGetColumnsCount(10000));\n+        assertNoMetadataCalls(\"SELECT count(*) from test_catalog.information_schema.tables WHERE table_schema = ''\", \"VALUES 0\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYzMzgzNA=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMTkzMTE1OnYy", "diffSide": "RIGHT", "path": "presto-tests/src/test/java/io/prestosql/tests/TestInformationSchemaConnector.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwOTo1Mzo1OFrOFnf0hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwOTo1Mzo1OFrOFnf0hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk2MDEzNQ==", "bodyText": "please extract a method assertNoTableScan(\"SELECT count(*) from test_catalog.information_schema.tables WHERE table_name = ''\")\nAlso please pass some message to assertFalse", "url": "https://github.com/trinodb/trino/pull/2728#discussion_r376960135", "createdAt": "2020-02-10T09:53:58Z", "author": {"login": "kokosing"}, "path": "presto-tests/src/test/java/io/prestosql/tests/TestInformationSchemaConnector.java", "diffHunk": "@@ -192,13 +196,20 @@ public void testMetadataCalls()\n                         .withListSchemasCount(1)\n                         .withListTablesCount(2)\n                         .withGetColumnsCount(10000));\n+        assertNoMetadataCalls(\"SELECT count(*) from test_catalog.information_schema.tables WHERE table_schema = ''\", \"VALUES 0\");\n     }\n \n     @Test\n     public void testInformationForEmptyNames()\n     {\n-        assertQuery(\"SELECT count(*) FROM test_catalog.information_schema.tables WHERE table_schema='tpch' AND table_name=''\", \"VALUES 0\");\n-        assertQuery(\"SELECT count(*) FROM test_catalog.information_schema.tables WHERE table_schema='' AND table_name='table'\", \"VALUES 0\");\n+        assertFalse(searchFrom(getQueryRunner().createPlan(getSession(), \"SELECT count(*) from test_catalog.information_schema.tables WHERE table_schema = ''\", WarningCollector.NOOP).getRoot())\n+                .where(TableScanNode.class::isInstance)\n+                .findFirst()\n+                .isPresent());\n+        assertFalse(searchFrom(getQueryRunner().createPlan(getSession(), \"SELECT count(*) from test_catalog.information_schema.tables WHERE table_name = ''\", WarningCollector.NOOP).getRoot())\n+                .where(TableScanNode.class::isInstance)\n+                .findFirst()\n+                .isPresent());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjQxODc4OnYy", "diffSide": "RIGHT", "path": "presto-tests/src/test/java/io/prestosql/tests/TestInformationSchemaConnector.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMjozNToyMlrOFnkdQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMjozNToyMlrOFnkdQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzAzNjA5Nw==", "bodyText": "you lost table_schema='tpch'", "url": "https://github.com/trinodb/trino/pull/2728#discussion_r377036097", "createdAt": "2020-02-10T12:35:22Z", "author": {"login": "kokosing"}, "path": "presto-tests/src/test/java/io/prestosql/tests/TestInformationSchemaConnector.java", "diffHunk": "@@ -192,13 +196,14 @@ public void testMetadataCalls()\n                         .withListSchemasCount(1)\n                         .withListTablesCount(2)\n                         .withGetColumnsCount(10000));\n+        assertNoMetadataCalls(\"SELECT count(*) from test_catalog.information_schema.tables WHERE table_schema = ''\", \"VALUES 0\");\n     }\n \n     @Test\n     public void testInformationForEmptyNames()\n     {\n-        assertQuery(\"SELECT count(*) FROM test_catalog.information_schema.tables WHERE table_schema='tpch' AND table_name=''\", \"VALUES 0\");\n-        assertQuery(\"SELECT count(*) FROM test_catalog.information_schema.tables WHERE table_schema='' AND table_name='table'\", \"VALUES 0\");\n+        assertNoTableScan(\"SELECT count(*) from test_catalog.information_schema.tables WHERE table_schema = ''\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59cec2a05c77eb7f286608128a96e230cc16c169"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 861, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}