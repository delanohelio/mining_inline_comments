{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNzIxNjcz", "number": 2528, "title": "Enable CBO on by default", "bodyText": "CBO behavior is currently controlled by two flags which we're ready to\nhave ON by default:\njoin_reordering_strategy=COST_BASED\njoin_distribution_type=AUTOMATIC", "createdAt": "2020-01-16T16:01:50Z", "url": "https://github.com/trinodb/trino/pull/2528", "merged": true, "mergeCommit": {"oid": "1936a50432fcac12bc80bf44a762d38bff580b4a"}, "closed": true, "closedAt": "2020-01-21T16:45:32Z", "author": {"login": "wendigo"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7KeL8gFqTM0NDQyMTgyNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8d4v6gBqjI5NjU0Njg4MzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NDIxODI0", "url": "https://github.com/trinodb/trino/pull/2528#pullrequestreview-344421824", "createdAt": "2020-01-17T08:24:41Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwODoyNDo0MlrOFexsog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwODoyODowNFrOFexxhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNTg0Mg==", "bodyText": "JoinReorderingStrategy.NONE.name() would be preferred", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r367815842", "createdAt": "2020-01-17T08:24:42Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestLocalDynamicFilter.java", "diffHunk": "@@ -54,6 +55,7 @@ public TestLocalDynamicFilter()\n     {\n         super(ImmutableMap.of(\n                 FORCE_SINGLE_NODE_OUTPUT, \"false\",\n+                JOIN_REORDERING_STRATEGY, \"NONE\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNTkxMA==", "bodyText": "JoinReorderingStrategy.NONE.name() would be preferred", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r367815910", "createdAt": "2020-01-17T08:24:56Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestDynamicFilter.java", "diffHunk": "@@ -47,7 +49,10 @@\n     TestDynamicFilter()\n     {\n         // in order to test testUncorrelatedSubqueries with Dynamic Filtering, enable it\n-        super(ImmutableMap.of(ENABLE_DYNAMIC_FILTERING, \"true\"));\n+        super(ImmutableMap.of(\n+                ENABLE_DYNAMIC_FILTERING, \"true\",\n+                JOIN_REORDERING_STRATEGY, \"NONE\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNjExMA==", "bodyText": "please use the opportunity and make the ctor public", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r367816110", "createdAt": "2020-01-17T08:25:32Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestDynamicFilter.java", "diffHunk": "@@ -47,7 +49,10 @@\n     TestDynamicFilter()\n     {\n         // in order to test testUncorrelatedSubqueries with Dynamic Filtering, enable it\n-        super(ImmutableMap.of(ENABLE_DYNAMIC_FILTERING, \"true\"));\n+        super(ImmutableMap.of(", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNzA5Mg==", "bodyText": "Also update docs for optimizer.join-reordering-strategy", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r367817092", "createdAt": "2020-01-17T08:28:04Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/admin/properties.rst", "diffHunk": "@@ -18,7 +18,7 @@ General Properties\n \n     * **Type:** ``string``\n     * **Allowed values:** ``AUTOMATIC``, ``PARTITIONED``, ``BROADCAST``\n-    * **Default value:** ``PARTITIONED``\n+    * **Default value:** ``AUTOMATIC``", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MTQ1NTg5", "url": "https://github.com/trinodb/trino/pull/2528#pullrequestreview-345145589", "createdAt": "2020-01-20T08:40:27Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwODo0MDoyN1rOFfWraw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwODo1NTo1M1rOFfXEIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyMTczOQ==", "bodyText": "Please format this this way:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertPlan(\"SELECT o.orderkey FROM orders o, lineitem l WHERE l.orderkey = o.orderkey\", disableCbo(),\n          \n          \n            \n                    assertPlan(\n          \n          \n            \n                    \"SELECT o.orderkey FROM orders o, lineitem l WHERE l.orderkey = o.orderkey\",\n          \n          \n            \n                     disableCbo(),", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368421739", "createdAt": "2020-01-20T08:40:27Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestPlanMatchingFramework.java", "diffHunk": "@@ -140,13 +143,13 @@ public void testTableScan()\n     @Test\n     public void testJoinMatcher()\n     {\n-        assertPlan(\"SELECT o.orderkey FROM orders o, lineitem l WHERE l.orderkey = o.orderkey\",\n+        assertPlan(\"SELECT o.orderkey FROM orders o, lineitem l WHERE l.orderkey = o.orderkey\", disableCbo(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyMTc5Mw==", "bodyText": "as above", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368421793", "createdAt": "2020-01-20T08:40:36Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestPlanMatchingFramework.java", "diffHunk": "@@ -240,13 +243,13 @@ public void testStrictProjectExtraSymbols()\n     @Test(expectedExceptions = IllegalStateException.class, expectedExceptionsMessageRegExp = \".*already bound to expression.*\")\n     public void testDuplicateAliases()\n     {\n-        assertPlan(\"SELECT o.orderkey FROM orders o, lineitem l WHERE l.orderkey = o.orderkey\",\n+        assertPlan(\"SELECT o.orderkey FROM orders o, lineitem l WHERE l.orderkey = o.orderkey\", disableCbo(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyMjE1OA==", "bodyText": "If this method is supposed to disable CBO, it should also set JOIN_REORDERING_STRATEGY= to eg NONE", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368422158", "createdAt": "2020-01-20T08:41:36Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestPlanMatchingFramework.java", "diffHunk": "@@ -257,4 +260,11 @@ public void testProjectLimitsScope()\n                         project(ImmutableMap.of(\"EXPRESSION\", expression(\"CAST(1 AS bigint) + ORDERKEY\")),\n                                 tableScan(\"lineitem\", ImmutableMap.of(\"ORDERKEY\", \"orderkey\")))));\n     }\n+\n+    private Session disableCbo()\n+    {\n+        return Session.builder(getQueryRunner().getDefaultSession())\n+                .setSystemProperty(JOIN_DISTRIBUTION_TYPE, JoinNode.DistributionType.PARTITIONED.name())", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyMzU3Mw==", "bodyText": "This class is a general planner test. It should use default settings.\nSome test methods, however, would fail.\nLet's introduce noJoinReordering method and use it in these tests.", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368423573", "createdAt": "2020-01-20T08:45:12Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestLogicalPlanner.java", "diffHunk": "@@ -122,6 +124,13 @@\n public class TestLogicalPlanner\n         extends BasePlanTest\n {\n+    public TestLogicalPlanner()\n+    {\n+        super(ImmutableMap.of(\n+                JOIN_REORDERING_STRATEGY, JoinReorderingStrategy.NONE.name(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyNjQwOA==", "bodyText": "rename to noJoinReordering (as in https://github.com/prestosql/presto/blob/90833ad2484a2206ce7f572eb911611be9cacf0d/presto-testing/src/main/java/io/prestosql/testing/AbstractTestJoinQueries.java#L2278-L2284)", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368426408", "createdAt": "2020-01-20T08:51:55Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestPlanMatchingFramework.java", "diffHunk": "@@ -257,4 +260,11 @@ public void testProjectLimitsScope()\n                         project(ImmutableMap.of(\"EXPRESSION\", expression(\"CAST(1 AS bigint) + ORDERKEY\")),\n                                 tableScan(\"lineitem\", ImmutableMap.of(\"ORDERKEY\", \"orderkey\")))));\n     }\n+\n+    private Session disableCbo()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyNjk4Mw==", "bodyText": "Remove these and try to fix the two failing tests by updating the expected plans.", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368426983", "createdAt": "2020-01-20T08:53:21Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestPredicatePushdown.java", "diffHunk": "@@ -52,9 +56,12 @@\n {\n     private final Metadata metadata = createTestMetadataManager();\n \n-    TestPredicatePushdown()\n+    public TestPredicatePushdown()\n     {\n-        super(ImmutableMap.of(ENABLE_DYNAMIC_FILTERING, \"true\"));\n+        super(ImmutableMap.of(\n+                JOIN_REORDERING_STRATEGY, JoinReorderingStrategy.NONE.name(),\n+                JOIN_DISTRIBUTION_TYPE, JoinDistributionType.PARTITIONED.name(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyNzYwNQ==", "bodyText": "remove and use disableCbo in the only failing test", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368427605", "createdAt": "2020-01-20T08:54:48Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/optimizations/TestAddExchangesPlans.java", "diffHunk": "@@ -214,6 +224,7 @@ private Session spillEnabledWithJoinDistributionType(JoinDistributionType joinDi\n     {\n         return Session.builder(getQueryRunner().getDefaultSession())\n                 .setSystemProperty(JOIN_DISTRIBUTION_TYPE, joinDistributionType.toString())\n+                .setSystemProperty(JOIN_REORDERING_STRATEGY, JoinReorderingStrategy.NONE.name())", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyODA2Nw==", "bodyText": "For this test, it seems to make sense to use JOIN_REORDERING_STRATEGY=NONE.\nThen the variable: disableCbo -> noJoinReordering.", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368428067", "createdAt": "2020-01-20T08:55:53Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/optimizations/TestWindow.java", "diffHunk": "@@ -117,8 +119,14 @@ public void testWindow()\n     @Test\n     public void testWindowAfterJoin()\n     {\n+        Session disableCbo = Session.builder(getQueryRunner().getDefaultSession())\n+                .setSystemProperty(JOIN_DISTRIBUTION_TYPE, PARTITIONED.name())\n+                .setSystemProperty(JOIN_REORDERING_STRATEGY, ELIMINATE_CROSS_JOINS.name())", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MTgzODQz", "url": "https://github.com/trinodb/trino/pull/2528#pullrequestreview-345183843", "createdAt": "2020-01-20T09:44:45Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwOTo0NDo0NVrOFfYd9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwOTo0NDo0NVrOFfYd9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ1MTA2MQ==", "bodyText": "I don't think:\nJOIN_DISTRIBUTION_TYPE, JoinDistributionType.BROADCAST.name())\n\nis needed. Could you try remove it?", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368451061", "createdAt": "2020-01-20T09:44:45Z", "author": {"login": "sopel39"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestDynamicFilter.java", "diffHunk": "@@ -44,10 +48,13 @@\n {\n     private final Metadata metadata = createTestMetadataManager();\n \n-    TestDynamicFilter()\n+    public TestDynamicFilter()\n     {\n         // in order to test testUncorrelatedSubqueries with Dynamic Filtering, enable it\n-        super(ImmutableMap.of(ENABLE_DYNAMIC_FILTERING, \"true\"));\n+        super(ImmutableMap.of(\n+                ENABLE_DYNAMIC_FILTERING, \"true\",\n+                JOIN_REORDERING_STRATEGY, JoinReorderingStrategy.NONE.name(),\n+                JOIN_DISTRIBUTION_TYPE, JoinDistributionType.BROADCAST.name()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MTk2MTAx", "url": "https://github.com/trinodb/trino/pull/2528#pullrequestreview-345196101", "createdAt": "2020-01-20T10:03:39Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMDowMzozOVrOFfZD7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMDowMzozOVrOFfZD7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ2MDc4Mg==", "bodyText": "Moved it to a noJoinReordering() method (used in test-cases when needed)", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368460782", "createdAt": "2020-01-20T10:03:39Z", "author": {"login": "wendigo"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestLocalDynamicFilter.java", "diffHunk": "@@ -48,13 +49,12 @@\n public class TestLocalDynamicFilter\n         extends BasePlanTest\n {\n-    private static final Metadata METADATA = createTestMetadataManager();\n-\n     public TestLocalDynamicFilter()\n     {\n         super(ImmutableMap.of(\n                 FORCE_SINGLE_NODE_OUTPUT, \"false\",\n-                JOIN_DISTRIBUTION_TYPE, \"BROADCAST\",\n+                JOIN_REORDERING_STRATEGY, JoinReorderingStrategy.NONE.name(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NDI2OTkw", "url": "https://github.com/trinodb/trino/pull/2528#pullrequestreview-345426990", "createdAt": "2020-01-20T16:36:47Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "567469f83b1be050debe37943560c8c8cddc0714", "author": {"user": {"login": "ilfrin", "name": "Wojciech Biela"}}, "url": "https://github.com/trinodb/trino/commit/567469f83b1be050debe37943560c8c8cddc0714", "committedDate": "2020-01-21T09:39:14Z", "message": "Set CBO on by default"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "567469f83b1be050debe37943560c8c8cddc0714", "author": {"user": {"login": "ilfrin", "name": "Wojciech Biela"}}, "url": "https://github.com/trinodb/trino/commit/567469f83b1be050debe37943560c8c8cddc0714", "committedDate": "2020-01-21T09:39:14Z", "message": "Set CBO on by default"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 887, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}