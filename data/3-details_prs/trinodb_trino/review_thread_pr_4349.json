{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NDQ2OTcx", "number": 4349, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQyMDo1MjowMlrOELfo7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMjoyNDo0NVrOEL52Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDg4MTc0OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/connector/informationschema/InformationSchemaPageSource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQyMDo1MjowMlrOGtEygA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjoxMjo0OFrOGuFzXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkxNzU2OA==", "bodyText": "We should introduce a configuration option / session property to toggle this behavior. It will be temporary until clients get a chance to update their logic to handle variable-precision types.", "url": "https://github.com/trinodb/trino/pull/4349#discussion_r449917568", "createdAt": "2020-07-05T20:52:02Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/connector/informationschema/InformationSchemaPageSource.java", "diffHunk": "@@ -249,10 +251,21 @@ private void addColumnsRecords(QualifiedTablePrefix prefix)\n         for (Map.Entry<SchemaTableName, List<ColumnMetadata>> entry : listTableColumns(session, metadata, accessControl, prefix).entrySet()) {\n             SchemaTableName tableName = entry.getKey();\n             int ordinalPosition = 1;\n+            String columnDisplayName = \"\";\n             for (ColumnMetadata column : entry.getValue()) {\n                 if (column.isHidden()) {\n                     continue;\n                 }\n+                if (column.getType() instanceof TimestampType && ((TimestampType) column.getType()).getPrecision() == TimestampType.DEFAULT_PRECISION) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDEzNzIzNA==", "bodyText": "Working on this change now.", "url": "https://github.com/trinodb/trino/pull/4349#discussion_r450137234", "createdAt": "2020-07-06T10:43:12Z", "author": {"login": "sajjoseph"}, "path": "presto-main/src/main/java/io/prestosql/connector/informationschema/InformationSchemaPageSource.java", "diffHunk": "@@ -249,10 +251,21 @@ private void addColumnsRecords(QualifiedTablePrefix prefix)\n         for (Map.Entry<SchemaTableName, List<ColumnMetadata>> entry : listTableColumns(session, metadata, accessControl, prefix).entrySet()) {\n             SchemaTableName tableName = entry.getKey();\n             int ordinalPosition = 1;\n+            String columnDisplayName = \"\";\n             for (ColumnMetadata column : entry.getValue()) {\n                 if (column.isHidden()) {\n                     continue;\n                 }\n+                if (column.getType() instanceof TimestampType && ((TimestampType) column.getType()).getPrecision() == TimestampType.DEFAULT_PRECISION) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkxNzU2OA=="}, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk4Mjc0OQ==", "bodyText": "Made the changes to allow session level parameter to control this option.", "url": "https://github.com/trinodb/trino/pull/4349#discussion_r450982749", "createdAt": "2020-07-07T16:12:48Z", "author": {"login": "sajjoseph"}, "path": "presto-main/src/main/java/io/prestosql/connector/informationschema/InformationSchemaPageSource.java", "diffHunk": "@@ -249,10 +251,21 @@ private void addColumnsRecords(QualifiedTablePrefix prefix)\n         for (Map.Entry<SchemaTableName, List<ColumnMetadata>> entry : listTableColumns(session, metadata, accessControl, prefix).entrySet()) {\n             SchemaTableName tableName = entry.getKey();\n             int ordinalPosition = 1;\n+            String columnDisplayName = \"\";\n             for (ColumnMetadata column : entry.getValue()) {\n                 if (column.isHidden()) {\n                     continue;\n                 }\n+                if (column.getType() instanceof TimestampType && ((TimestampType) column.getType()).getPrecision() == TimestampType.DEFAULT_PRECISION) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkxNzU2OA=="}, "originalCommit": null, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDg4MjIyOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/connector/informationschema/InformationSchemaPageSource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQyMDo1Mjo0MVrOGtEytw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQyMzo1ODo0MFrOGtFwmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkxNzYyMw==", "bodyText": "This variable can be declared inside the look, right before if (column.getType instanceof ...)", "url": "https://github.com/trinodb/trino/pull/4349#discussion_r449917623", "createdAt": "2020-07-05T20:52:41Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/connector/informationschema/InformationSchemaPageSource.java", "diffHunk": "@@ -249,10 +251,21 @@ private void addColumnsRecords(QualifiedTablePrefix prefix)\n         for (Map.Entry<SchemaTableName, List<ColumnMetadata>> entry : listTableColumns(session, metadata, accessControl, prefix).entrySet()) {\n             SchemaTableName tableName = entry.getKey();\n             int ordinalPosition = 1;\n+            String columnDisplayName = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkzMzQ2Nw==", "bodyText": "Will do.", "url": "https://github.com/trinodb/trino/pull/4349#discussion_r449933467", "createdAt": "2020-07-05T23:58:40Z", "author": {"login": "sajjoseph"}, "path": "presto-main/src/main/java/io/prestosql/connector/informationschema/InformationSchemaPageSource.java", "diffHunk": "@@ -249,10 +251,21 @@ private void addColumnsRecords(QualifiedTablePrefix prefix)\n         for (Map.Entry<SchemaTableName, List<ColumnMetadata>> entry : listTableColumns(session, metadata, accessControl, prefix).entrySet()) {\n             SchemaTableName tableName = entry.getKey();\n             int ordinalPosition = 1;\n+            String columnDisplayName = \"\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkxNzYyMw=="}, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTE3MTIzOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/SystemSessionProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMjoyMjozNVrOGts9tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzo0NDoxOFrOGuJIww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU3NTc5OA==", "bodyText": "legacy already has a special meaning for timestamps. It's used to indicate timestamp semantics where timestamps are treated like instants.\nI would suggest a different name, such as \"omit_timestamp_precision\"", "url": "https://github.com/trinodb/trino/pull/4349#discussion_r450575798", "createdAt": "2020-07-07T02:22:35Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/SystemSessionProperties.java", "diffHunk": "@@ -128,6 +128,7 @@\n     public static final String REQUIRED_WORKERS_COUNT = \"required_workers_count\";\n     public static final String REQUIRED_WORKERS_MAX_WAIT_TIME = \"required_workers_max_wait_time\";\n     public static final String COST_ESTIMATION_WORKER_COUNT = \"cost_estimation_worker_count\";\n+    public static final String ENABLE_LEGACY_TIMESTAMP_FORMAT_SUPPORT = \"enable_legacy_timestamp_support\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzNzM3OQ==", "bodyText": "done.", "url": "https://github.com/trinodb/trino/pull/4349#discussion_r451037379", "createdAt": "2020-07-07T17:44:18Z", "author": {"login": "sajjoseph"}, "path": "presto-main/src/main/java/io/prestosql/SystemSessionProperties.java", "diffHunk": "@@ -128,6 +128,7 @@\n     public static final String REQUIRED_WORKERS_COUNT = \"required_workers_count\";\n     public static final String REQUIRED_WORKERS_MAX_WAIT_TIME = \"required_workers_max_wait_time\";\n     public static final String COST_ESTIMATION_WORKER_COUNT = \"cost_estimation_worker_count\";\n+    public static final String ENABLE_LEGACY_TIMESTAMP_FORMAT_SUPPORT = \"enable_legacy_timestamp_support\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU3NTc5OA=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTE3NTM1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/FeaturesConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMjoyNDo0NVrOGttAEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzo0NDowMlrOGuJIBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU3NjQwMA==", "bodyText": "See comment above. Also, let's prefix the config option with deprecated. to make it clear this is on its way out.", "url": "https://github.com/trinodb/trino/pull/4349#discussion_r450576400", "createdAt": "2020-07-07T02:24:45Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/FeaturesConfig.java", "diffHunk": "@@ -215,6 +216,18 @@ public FeaturesConfig setDistributedIndexJoinsEnabled(boolean distributedIndexJo\n         return this;\n     }\n \n+    public boolean isLegacyTimestampFormatEnabled()\n+    {\n+        return enableLegacyTimestampFormat;\n+    }\n+\n+    @Config(\"legacy-timestamp-format-enabled\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzNzE5MQ==", "bodyText": "Fixed", "url": "https://github.com/trinodb/trino/pull/4349#discussion_r451037191", "createdAt": "2020-07-07T17:44:02Z", "author": {"login": "sajjoseph"}, "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/FeaturesConfig.java", "diffHunk": "@@ -215,6 +216,18 @@ public FeaturesConfig setDistributedIndexJoinsEnabled(boolean distributedIndexJo\n         return this;\n     }\n \n+    public boolean isLegacyTimestampFormatEnabled()\n+    {\n+        return enableLegacyTimestampFormat;\n+    }\n+\n+    @Config(\"legacy-timestamp-format-enabled\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU3NjQwMA=="}, "originalCommit": null, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3812, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}