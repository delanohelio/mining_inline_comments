{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwNTQwMDAz", "number": 5492, "title": "Refactor metastore Guice setup", "bodyText": "", "createdAt": "2020-10-09T11:56:21Z", "url": "https://github.com/trinodb/trino/pull/5492", "merged": true, "mergeCommit": {"oid": "73da2fded36e59956f14fa3ee10590256079741e"}, "closed": true, "closedAt": "2020-10-10T07:42:57Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQ2QFeABqjM4NjAxODAzOTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQ8jpmAH2gAyNTAwNTQwMDAzOjAwMmE1MDhhMjJhZTRjZmEyMzMwM2UzMjVjMzVmNTA3MjNkY2ZkMTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1Njg3MTYy", "url": "https://github.com/trinodb/trino/pull/5492#pullrequestreview-505687162", "createdAt": "2020-10-09T13:46:12Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzo0NjoxMlrOHfKY2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzo0NjoxMlrOHfKY2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQzODEwNQ==", "bodyText": "I am not convinced that it adds useful coverage, as we are not able to assert anything meaningful.", "url": "https://github.com/trinodb/trino/pull/5492#discussion_r502438105", "createdAt": "2020-10-09T13:46:12Z", "author": {"login": "losipiuk"}, "path": "presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHiveHadoop2Plugin.java", "diffHunk": "@@ -65,6 +67,46 @@ public void deinitializeRubix()\n         CachingFileSystem.deinitialize();\n     }\n \n+    @Test\n+    public void testCreateConnector()\n+    {\n+        Plugin plugin = new HiveHadoop2Plugin();\n+        ConnectorFactory factory = getOnlyElement(plugin.getConnectorFactories());\n+        // simplest possible configuration\n+        factory.create(\"test\", ImmutableMap.of(\"hive.metastore.uri\", \"thrift://foo:1234\"), new TestingConnectorContext()).shutdown();\n+    }\n+\n+    @Test\n+    public void testThriftMetastore()\n+    {\n+        Plugin plugin = new HiveHadoop2Plugin();\n+        ConnectorFactory factory = getOnlyElement(plugin.getConnectorFactories());\n+        factory.create(\n+                \"test\",\n+                ImmutableMap.of(\n+                        \"hive.metastore\", \"thrift\",\n+                        \"hive.metastore.uri\", \"thrift://foo:1234\"),\n+                new TestingConnectorContext())\n+                .shutdown();\n+    }\n+\n+    @Test\n+    public void testGlueMetastore()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 44}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NjkxNDYy", "url": "https://github.com/trinodb/trino/pull/5492#pullrequestreview-505691462", "createdAt": "2020-10-09T13:51:12Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzo1MToxMlrOHfKlXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzo1MToxMlrOHfKlXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ0MTMwOA==", "bodyText": "Maybe RecordingAwareHiveMetastoreModule. Or OptionalRecordingHiveMetastoreModule. As now it has conditional logic inside.", "url": "https://github.com/trinodb/trino/pull/5492#discussion_r502441308", "createdAt": "2020-10-09T13:51:12Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/RecordingHiveMetastoreModule.java", "diffHunk": "@@ -28,24 +32,52 @@\n import static org.weakref.jmx.guice.ExportBinder.newExporter;\n \n public class RecordingHiveMetastoreModule", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NjkzODE4", "url": "https://github.com/trinodb/trino/pull/5492#pullrequestreview-505693818", "createdAt": "2020-10-09T13:53:53Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzo1Mzo1M1rOHfKsTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzo1Mzo1M1rOHfKsTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ0MzA4NA==", "bodyText": "Why exactly this one is needed?", "url": "https://github.com/trinodb/trino/pull/5492#discussion_r502443084", "createdAt": "2020-10-09T13:53:53Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/RecordingHiveMetastoreModule.java", "diffHunk": "@@ -28,24 +32,52 @@\n import static org.weakref.jmx.guice.ExportBinder.newExporter;\n \n public class RecordingHiveMetastoreModule\n-        implements Module\n+        extends AbstractConfigurationAwareModule\n {\n     @Override\n-    public void configure(Binder binder)\n+    protected void setup(Binder binder)\n     {\n-        binder.bind(HiveMetastore.class)\n-                .annotatedWith(ForCachingHiveMetastore.class)\n-                .to(RecordingHiveMetastore.class)\n-                .in(Scopes.SINGLETON);\n-        binder.bind(RecordingHiveMetastore.class).in(Scopes.SINGLETON);\n-        binder.bind(HiveBlockEncodingSerde.class).in(Scopes.SINGLETON);\n+        if (buildConfigObject(HiveConfig.class).getRecordingPath() != null) {\n+            install(new RecordingModule());\n+        }\n+        else {\n+            install(new NoRecordingModule());\n+        }\n+    }\n+\n+    public static class RecordingModule\n+            implements Module\n+    {\n+        @Override\n+        public void configure(Binder binder)\n+        {\n+            binder.bind(HiveMetastore.class)\n+                    .annotatedWith(ForCachingHiveMetastore.class)\n+                    .to(RecordingHiveMetastore.class)\n+                    .in(Scopes.SINGLETON);\n+            binder.bind(RecordingHiveMetastore.class).in(Scopes.SINGLETON);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1Njk3NjAw", "url": "https://github.com/trinodb/trino/pull/5492#pullrequestreview-505697600", "createdAt": "2020-10-09T13:58:04Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzo1ODowNFrOHfK3dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzo1ODowNFrOHfK3dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ0NTk0Mg==", "bodyText": "isnotnull check?", "url": "https://github.com/trinodb/trino/pull/5492#discussion_r502445942", "createdAt": "2020-10-09T13:58:04Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/glue/DefaultGlueMetastoreTableFilterProvider.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.hive.metastore.glue;\n+\n+import com.amazonaws.services.glue.model.Table;\n+import io.prestosql.plugin.hive.metastore.MetastoreConfig;\n+\n+import javax.inject.Inject;\n+import javax.inject.Provider;\n+\n+import java.util.function.Predicate;\n+\n+import static io.prestosql.plugin.hive.HiveMetadata.DELTA_LAKE_PROVIDER;\n+import static io.prestosql.plugin.hive.HiveMetadata.SPARK_TABLE_PROVIDER_KEY;\n+import static java.util.Objects.requireNonNull;\n+import static java.util.function.Predicate.not;\n+\n+public class DefaultGlueMetastoreTableFilterProvider\n+        implements Provider<Predicate<Table>>\n+{\n+    private final boolean hideDeltaLakeTables;\n+\n+    @Inject\n+    public DefaultGlueMetastoreTableFilterProvider(MetastoreConfig metastoreConfig)\n+    {\n+        requireNonNull(metastoreConfig, \"metastoreConfig is null\");\n+        this.hideDeltaLakeTables = metastoreConfig.isHideDeltaLakeTables();\n+    }\n+\n+    @Override\n+    public Predicate<Table> get()\n+    {\n+        if (hideDeltaLakeTables) {\n+            return not(DefaultGlueMetastoreTableFilterProvider::isDeltaLakeTable);\n+        }\n+        return table -> true;\n+    }\n+\n+    public static boolean isDeltaLakeTable(Table table)\n+    {\n+        return table.getParameters().getOrDefault(SPARK_TABLE_PROVIDER_KEY, \"\").equalsIgnoreCase(DELTA_LAKE_PROVIDER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1Njk3Njgw", "url": "https://github.com/trinodb/trino/pull/5492#pullrequestreview-505697680", "createdAt": "2020-10-09T13:58:10Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "d335b6a78ead6e94dba9b79a66a2e8101be5d3d1", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/d335b6a78ead6e94dba9b79a66a2e8101be5d3d1", "committedDate": "2020-10-09T20:33:38Z", "message": "Add more tests in TestHiveHadoop2Plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "438b6271e18832aa3f6d895d9dee8fad6be4f903", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/438b6271e18832aa3f6d895d9dee8fad6be4f903", "committedDate": "2020-10-09T20:33:38Z", "message": "Bind WriteHiveMetastoreRecordingProcedure in appropriate module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "706fb6de7f5d3f7fa94a3efdc0439bd26fd1ad2a", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/706fb6de7f5d3f7fa94a3efdc0439bd26fd1ad2a", "committedDate": "2020-10-09T20:33:38Z", "message": "Simplify RecordingHiveMetastoreModule usage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47428197bdcaad1d1ab9c3305782621fee19f9f3", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/47428197bdcaad1d1ab9c3305782621fee19f9f3", "committedDate": "2020-10-09T20:33:38Z", "message": "Take just required information in createCache()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf2ddc87446af996882594aa34a1c7999700d9a3", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/bf2ddc87446af996882594aa34a1c7999700d9a3", "committedDate": "2020-10-09T20:33:39Z", "message": "Move recording metastore configs to separate class\n\nThis makes the configuration options unavailable when they are not\nsupported, e.g. when using `file` metastore."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76ad0dee2efddc55f0bc6efd534d30f737f21cb1", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/76ad0dee2efddc55f0bc6efd534d30f737f21cb1", "committedDate": "2020-10-09T20:33:39Z", "message": "Allow injecting table filter in Glue metastore"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "76ad0dee2efddc55f0bc6efd534d30f737f21cb1", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/76ad0dee2efddc55f0bc6efd534d30f737f21cb1", "committedDate": "2020-10-09T20:33:39Z", "message": "Allow injecting table filter in Glue metastore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "002a508a22ae4cfa23303e325c35f50723dcfd15", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/002a508a22ae4cfa23303e325c35f50723dcfd15", "committedDate": "2020-10-09T20:53:16Z", "message": "Remove unused constant"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3365, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}