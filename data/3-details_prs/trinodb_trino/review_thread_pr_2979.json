{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMjk3MjI0", "number": 2979, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwOTozNzoyNFrODk-OEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwOTozODo1N1rODk-Qaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMDk0NzM5OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/statistics/MetastoreHiveStatisticsProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwOTozNzoyNVrOFxmAyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwOTozNzoyNVrOFxmAyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU0NzMzOQ==", "bodyText": "you should filter by isPresent here (or peek validate the optional)", "url": "https://github.com/trinodb/trino/pull/2979#discussion_r387547339", "createdAt": "2020-03-04T09:37:25Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/statistics/MetastoreHiveStatisticsProvider.java", "diffHunk": "@@ -550,18 +550,21 @@ private static OptionalDouble getPartitionRowCount(String partitionName, Map<Str\n     @VisibleForTesting\n     static Optional<DoubleRange> calculateRangeForPartitioningKey(HiveColumnHandle column, Type type, List<HivePartition> partitions)\n     {\n-        if (!isRangeSupported(type)) {\n-            return Optional.empty();\n-        }\n-\n-        List<Double> values = partitions.stream()\n+        List<OptionalDouble> convertedValues = partitions.stream()\n                 .map(HivePartition::getKeys)\n                 .map(keys -> keys.get(column))\n                 .filter(value -> !value.isNull())\n                 .map(NullableValue::getValue)\n                 .map(value -> convertPartitionValueToDouble(type, value))\n                 .collect(toImmutableList());\n \n+        if (convertedValues.stream().noneMatch(OptionalDouble::isPresent)) {\n+            return Optional.empty();\n+        }\n+        List<Double> values = convertedValues.stream()\n+                .map(OptionalDouble::getAsDouble)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMDk1MzM5OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/statistics/MetastoreHiveStatisticsProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwOTozODo1N1rOFxmEVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzo0NjoxMlrOFxtzRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU0ODI0NA==", "bodyText": "could you add a comment here? It seems that all or none value will be present.\nMaybe change the condition to !convertedValues.stream().allMatch(Optional::isPresent)", "url": "https://github.com/trinodb/trino/pull/2979#discussion_r387548244", "createdAt": "2020-03-04T09:38:57Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/statistics/MetastoreHiveStatisticsProvider.java", "diffHunk": "@@ -550,18 +550,21 @@ private static OptionalDouble getPartitionRowCount(String partitionName, Map<Str\n     @VisibleForTesting\n     static Optional<DoubleRange> calculateRangeForPartitioningKey(HiveColumnHandle column, Type type, List<HivePartition> partitions)\n     {\n-        if (!isRangeSupported(type)) {\n-            return Optional.empty();\n-        }\n-\n-        List<Double> values = partitions.stream()\n+        List<OptionalDouble> convertedValues = partitions.stream()\n                 .map(HivePartition::getKeys)\n                 .map(keys -> keys.get(column))\n                 .filter(value -> !value.isNull())\n                 .map(NullableValue::getValue)\n                 .map(value -> convertPartitionValueToDouble(type, value))\n                 .collect(toImmutableList());\n \n+        if (convertedValues.stream().noneMatch(OptionalDouble::isPresent)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3NDk0OQ==", "bodyText": "They all should be present or absent. I want to fail if some are present and some are not.", "url": "https://github.com/trinodb/trino/pull/2979#discussion_r387674949", "createdAt": "2020-03-04T13:46:12Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/statistics/MetastoreHiveStatisticsProvider.java", "diffHunk": "@@ -550,18 +550,21 @@ private static OptionalDouble getPartitionRowCount(String partitionName, Map<Str\n     @VisibleForTesting\n     static Optional<DoubleRange> calculateRangeForPartitioningKey(HiveColumnHandle column, Type type, List<HivePartition> partitions)\n     {\n-        if (!isRangeSupported(type)) {\n-            return Optional.empty();\n-        }\n-\n-        List<Double> values = partitions.stream()\n+        List<OptionalDouble> convertedValues = partitions.stream()\n                 .map(HivePartition::getKeys)\n                 .map(keys -> keys.get(column))\n                 .filter(value -> !value.isNull())\n                 .map(NullableValue::getValue)\n                 .map(value -> convertPartitionValueToDouble(type, value))\n                 .collect(toImmutableList());\n \n+        if (convertedValues.stream().noneMatch(OptionalDouble::isPresent)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU0ODI0NA=="}, "originalCommit": null, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 845, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}