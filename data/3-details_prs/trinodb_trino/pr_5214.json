{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MTk0MTMw", "number": 5214, "title": "Fix standard mapping for char exceeding allowed length", "bodyText": "Various editorial fixes in TestPostgreSqlTypeMapping and mapping fix for very long char types.", "createdAt": "2020-09-18T09:30:17Z", "url": "https://github.com/trinodb/trino/pull/5214", "merged": true, "mergeCommit": {"oid": "dff8506c4391364d71250d9be9d2803ca379b4d4"}, "closed": true, "closedAt": "2020-09-24T22:47:46Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdKCSu8gBqjM3ODE3ODY4NDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMChnLgBqjM4MDM2OTQyNDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMzI5ODc3", "url": "https://github.com/trinodb/trino/pull/5214#pullrequestreview-491329877", "createdAt": "2020-09-18T10:09:57Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDowOTo1N1rOHUGvww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDowOTo1N1rOHUGvww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg0NDA5OQ==", "bodyText": "typo in commit messge", "url": "https://github.com/trinodb/trino/pull/5214#discussion_r490844099", "createdAt": "2020-09-18T10:09:57Z", "author": {"login": "losipiuk"}, "path": "presto-postgresql/src/test/java/io/prestosql/plugin/postgresql/TestPostgreSqlTypeMapping.java", "diffHunk": "@@ -211,17 +211,19 @@ private DataTypeTest varbinaryTestCases(DataType<byte[]> varbinaryDataType)\n     }\n \n     @Test\n-    public void testPrestoCreatedParameterizedVarchar()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMzMwNzI2", "url": "https://github.com/trinodb/trino/pull/5214#pullrequestreview-491330726", "createdAt": "2020-09-18T10:11:12Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDoxMToxMlrOHUGyPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDoxMToxMlrOHUGyPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg0NDczMg==", "bodyText": "not reviewing this one. Assume it is just moving code around.", "url": "https://github.com/trinodb/trino/pull/5214#discussion_r490844732", "createdAt": "2020-09-18T10:11:12Z", "author": {"login": "losipiuk"}, "path": "presto-postgresql/src/test/java/io/prestosql/plugin/postgresql/TestPostgreSqlTypeMapping.java", "diffHunk": "@@ -190,78 +190,44 @@ public void testBasicTypes()\n     }\n \n     @Test\n-    public void testVarbinary()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMzM1NDI2", "url": "https://github.com/trinodb/trino/pull/5214#pullrequestreview-491335426", "createdAt": "2020-09-18T10:18:53Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDoxODo1M1rOHUHApQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDoxODo1M1rOHUHApQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg0ODQyMQ==", "bodyText": "why unbounded? Would bounded varchar, which has higher limit, be more appropriate here?", "url": "https://github.com/trinodb/trino/pull/5214#discussion_r490848421", "createdAt": "2020-09-18T10:18:53Z", "author": {"login": "losipiuk"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/StandardColumnMappings.java", "diffHunk": "@@ -468,9 +467,10 @@ public static LocalTime fromPrestoTime(long value)\n \n             case Types.CHAR:\n             case Types.NCHAR:\n-                // TODO this is wrong, we're going to construct malformed Slice representation if source > charLength\n-                int charLength = min(columnSize, CharType.MAX_LENGTH);\n-                return Optional.of(charColumnMapping(createCharType(charLength)));\n+                if (columnSize > CharType.MAX_LENGTH) {\n+                    return Optional.of(varcharColumnMapping(createUnboundedVarcharType()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMzY2OTkx", "url": "https://github.com/trinodb/trino/pull/5214#pullrequestreview-491366991", "createdAt": "2020-09-18T11:09:44Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMTowOTo0NFrOHUIkog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMToxMDozOVrOHUImXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg3NDAxOA==", "bodyText": "I would make these tests parametric instead. IDE supports to run test with particular parameters which is nice. That it is also cleaner, separate tests are in separate test executions.", "url": "https://github.com/trinodb/trino/pull/5214#discussion_r490874018", "createdAt": "2020-09-18T11:09:44Z", "author": {"login": "kokosing"}, "path": "presto-postgresql/src/test/java/io/prestosql/plugin/postgresql/TestPostgreSqlTypeMapping.java", "diffHunk": "@@ -1271,10 +1272,10 @@ private DataTypeTest hstoreTestCases(DataType<Map<String, String>> varcharMapDat\n     public void testUuid()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg3NDQ2MQ==", "bodyText": "Actually it is against the good practice to keep separate test cases in separate tests.\n\nWe usually test all aspects of a type within single test method.\n\nWe do it, and I am not very proud of it.", "url": "https://github.com/trinodb/trino/pull/5214#discussion_r490874461", "createdAt": "2020-09-18T11:10:39Z", "author": {"login": "kokosing"}, "path": "presto-postgresql/src/test/java/io/prestosql/plugin/postgresql/TestPostgreSqlTypeMapping.java", "diffHunk": "@@ -234,38 +236,20 @@ private DataTypeTest varcharDataTypeTest()\n                 .addRoundTrip(varcharDataType(), \"unbounded\");\n     }\n \n-    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyNDIzOTM3", "url": "https://github.com/trinodb/trino/pull/5214#pullrequestreview-492423937", "createdAt": "2020-09-21T09:35:44Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a349b57d5df1a42fb3342cca9153bea8e76f480", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/8a349b57d5df1a42fb3342cca9153bea8e76f480", "committedDate": "2020-09-24T14:59:15Z", "message": "Test read path before testing round trip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e8eff13b8c891c84f0f81f50d932ead0c470f33", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/5e8eff13b8c891c84f0f81f50d932ead0c470f33", "committedDate": "2020-09-24T15:00:39Z", "message": "Consolidate char/varchar tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b359c2c5f986204c5ed43c5c151cb871473a7d4", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/7b359c2c5f986204c5ed43c5c151cb871473a7d4", "committedDate": "2020-09-24T15:00:39Z", "message": "Fix standard mapping for char exceeding allowed length"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "7b359c2c5f986204c5ed43c5c151cb871473a7d4", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/7b359c2c5f986204c5ed43c5c151cb871473a7d4", "committedDate": "2020-09-24T15:00:39Z", "message": "Fix standard mapping for char exceeding allowed length"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3645, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}