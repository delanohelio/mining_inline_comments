{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0NjEwNjM0", "number": 4036, "title": "Fix old client compatibility with parametric timestamp type", "bodyText": "The type was being communicated to the client via two parallel paths: a structural\nform and a string form. We missed the latter when adding the capability check to\nthe protocol.", "createdAt": "2020-06-15T15:21:43Z", "url": "https://github.com/trinodb/trino/pull/4036", "merged": true, "mergeCommit": {"oid": "b3359c2bdeeee30cfc5e6348b48462305fce5005"}, "closed": true, "closedAt": "2020-06-15T20:56:25Z", "author": {"login": "martint"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcri1eAAFqTQzMDc4MDUwMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrnEyQgBqjM0NDYxNTg2MDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNzgwNTAz", "url": "https://github.com/trinodb/trino/pull/4036#pullrequestreview-430780503", "createdAt": "2020-06-15T15:57:07Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTo1NzowN1rOGj4ioA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTo1NzowN1rOGj4ioA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3OTcxMg==", "bodyText": "This should be TIMESTAMP as used in toClientTypeSignature", "url": "https://github.com/trinodb/trino/pull/4036#discussion_r440279712", "createdAt": "2020-06-15T15:57:07Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/server/protocol/Query.java", "diffHunk": "@@ -575,8 +576,13 @@ private URI createPartialCancelUri(int stage, UriInfo uriInfo, long nextToken)\n \n     private Column createColumn(String name, Type type)\n     {\n-        TypeSignature signature = type.getTypeSignature();\n-        return new Column(name, type.getDisplayName(), toClientTypeSignature(signature));\n+        String typeName = type.getDisplayName();\n+\n+        if (type instanceof TimestampType && !supportsParametricDateTime) {\n+            typeName = \"timestamp\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNzgzNDEy", "url": "https://github.com/trinodb/trino/pull/4036#pullrequestreview-430783412", "createdAt": "2020-06-15T16:00:33Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNjowMDozM1rOGj4rZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNjowMDozM1rOGj4rZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4MTk1OA==", "bodyText": "Should we compare the type signature so that it's consistent with toClientTypeSignature?", "url": "https://github.com/trinodb/trino/pull/4036#discussion_r440281958", "createdAt": "2020-06-15T16:00:33Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/server/protocol/Query.java", "diffHunk": "@@ -575,8 +576,13 @@ private URI createPartialCancelUri(int stage, UriInfo uriInfo, long nextToken)\n \n     private Column createColumn(String name, Type type)\n     {\n-        TypeSignature signature = type.getTypeSignature();\n-        return new Column(name, type.getDisplayName(), toClientTypeSignature(signature));\n+        String typeName = type.getDisplayName();\n+\n+        if (type instanceof TimestampType && !supportsParametricDateTime) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwOTM2OTc1", "url": "https://github.com/trinodb/trino/pull/4036#pullrequestreview-430936975", "createdAt": "2020-06-15T19:37:44Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwOTM3MTA5", "url": "https://github.com/trinodb/trino/pull/4036#pullrequestreview-430937109", "createdAt": "2020-06-15T19:37:58Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwOTg1NTQ1", "url": "https://github.com/trinodb/trino/pull/4036#pullrequestreview-430985545", "createdAt": "2020-06-15T20:53:51Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo1Mzo1MVrOGkCXew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo1Mzo1MVrOGkCXew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0MDY5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // and special types such as timestamp(p) with timezone in a future version\n          \n          \n            \n                    // and special types such as timestamp(p) with time zone in a future version", "url": "https://github.com/trinodb/trino/pull/4036#discussion_r440440699", "createdAt": "2020-06-15T20:53:51Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/server/protocol/Query.java", "diffHunk": "@@ -575,8 +575,11 @@ private URI createPartialCancelUri(int stage, UriInfo uriInfo, long nextToken)\n \n     private Column createColumn(String name, Type type)\n     {\n-        TypeSignature signature = type.getTypeSignature();\n-        return new Column(name, type.getDisplayName(), toClientTypeSignature(signature));\n+        ClientTypeSignature signature = toClientTypeSignature(type.getTypeSignature());\n+\n+        // TODO: the type name should be rendered by the SQL expression formatter to account for delimited field names in row types\n+        // and special types such as timestamp(p) with timezone in a future version", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3359c2bdeeee30cfc5e6348b48462305fce5005", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/b3359c2bdeeee30cfc5e6348b48462305fce5005", "committedDate": "2020-06-15T20:56:15Z", "message": "Fix old client compatibility with parametric timestamp type\n\nThe type was being communicated to the client via two parallel paths: a structural\nform and a string form. We missed the latter when adding the capability check to\nthe protocol."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "b3359c2bdeeee30cfc5e6348b48462305fce5005", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/b3359c2bdeeee30cfc5e6348b48462305fce5005", "committedDate": "2020-06-15T20:56:15Z", "message": "Fix old client compatibility with parametric timestamp type\n\nThe type was being communicated to the client via two parallel paths: a structural\nform and a string form. We missed the latter when adding the capability check to\nthe protocol."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 374, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}