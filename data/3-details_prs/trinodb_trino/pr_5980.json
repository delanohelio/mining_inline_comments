{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxNzg4MjM0", "number": 5980, "title": "Test Hive VIEW with JOIN and subquery", "bodyText": "Relates to: #5606", "createdAt": "2020-11-16T16:46:31Z", "url": "https://github.com/trinodb/trino/pull/5980", "merged": true, "mergeCommit": {"oid": "42336379cc6b7523b2db27a6c171551e419a43c4"}, "closed": true, "closedAt": "2020-11-17T08:09:16Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddHyVOgH2gAyNTIxNzg4MjM0OmJlNGU0NjMxMTljZDI1NGE2MmExZTNmYWVjYWRlM2EzODkxNzI4MTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddTYVggFqTUzMjA0ODE3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "be4e463119cd254a62a1e3faecade3a389172814", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/be4e463119cd254a62a1e3faecade3a389172814", "committedDate": "2020-11-16T16:45:21Z", "message": "Test Hive VIEW with JOIN and subquery"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNjIwNDMx", "url": "https://github.com/trinodb/trino/pull/5980#pullrequestreview-531620431", "createdAt": "2020-11-16T19:04:14Z", "commit": {"oid": "be4e463119cd254a62a1e3faecade3a389172814"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNzgyMjc0", "url": "https://github.com/trinodb/trino/pull/5980#pullrequestreview-531782274", "createdAt": "2020-11-16T21:10:25Z", "commit": {"oid": "be4e463119cd254a62a1e3faecade3a389172814"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMToxMDoyNVrOH0SGMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMToxMTozMlrOH0SKww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU4NDQ5OQ==", "bodyText": "Why do you remove it? You are using nation table so it should be somehow provisioned. I guess in your case it was provisioned for other test.", "url": "https://github.com/trinodb/trino/pull/5980#discussion_r524584499", "createdAt": "2020-11-16T21:10:25Z", "author": {"login": "kokosing"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveViews.java", "diffHunk": "@@ -13,37 +13,34 @@\n  */\n package io.prestosql.tests.hive;\n \n-import io.prestosql.tempto.Requirement;\n-import io.prestosql.tempto.RequirementsProvider;\n+import io.prestosql.tempto.Requires;\n import io.prestosql.tempto.assertions.QueryAssert;\n-import io.prestosql.tempto.configuration.Configuration;\n+import io.prestosql.tempto.fulfillment.table.hive.tpch.ImmutableTpchTablesRequirements.ImmutableNationTable;\n+import io.prestosql.tempto.fulfillment.table.hive.tpch.ImmutableTpchTablesRequirements.ImmutableOrdersTable;\n import io.prestosql.tempto.query.QueryResult;\n import org.testng.annotations.Test;\n \n import java.math.BigDecimal;\n+import java.sql.Date;\n+import java.time.LocalDate;\n import java.util.function.Consumer;\n \n import static io.prestosql.tempto.assertions.QueryAssert.Row.row;\n import static io.prestosql.tempto.assertions.QueryAssert.assertThat;\n-import static io.prestosql.tempto.fulfillment.table.TableRequirements.immutableTable;\n-import static io.prestosql.tempto.fulfillment.table.hive.tpch.TpchTableDefinitions.NATION;\n import static io.prestosql.tempto.query.QueryExecutor.query;\n import static io.prestosql.tests.TestGroups.HIVE_VIEWS;\n import static io.prestosql.tests.utils.QueryExecutors.onHive;\n import static io.prestosql.tests.utils.QueryExecutors.onPresto;\n import static java.lang.String.format;\n import static org.testng.Assert.assertEquals;\n \n+@Requires({\n+        ImmutableNationTable.class,\n+        ImmutableOrdersTable.class,\n+})\n public class TestHiveViews\n         extends HiveProductTest\n-        implements RequirementsProvider\n {\n-    @Override\n-    public Requirement getRequirements(Configuration configuration)\n-    {\n-        return immutableTable(NATION);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be4e463119cd254a62a1e3faecade3a389172814"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU4NTEyNA==", "bodyText": "It would be nice to have #4510 implemented so we can have coverage as integration test.", "url": "https://github.com/trinodb/trino/pull/5980#discussion_r524585124", "createdAt": "2020-11-16T21:11:01Z", "author": {"login": "kokosing"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveViews.java", "diffHunk": "@@ -13,37 +13,34 @@\n  */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be4e463119cd254a62a1e3faecade3a389172814"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU4NTY2Nw==", "bodyText": "same comment as previously, it would be nice to have single test per case", "url": "https://github.com/trinodb/trino/pull/5980#discussion_r524585667", "createdAt": "2020-11-16T21:11:32Z", "author": {"login": "kokosing"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveViews.java", "diffHunk": "@@ -172,19 +169,24 @@ public void testRichSqlSyntax()\n                 \"   CASE WHEN n_name = \\\"BRAZIL\\\" THEN 'is BRAZIL' WHEN n_name = \\\"ALGERIA\\\" THEN 'is ALGERIA' ELSE \\\"\\\" END is_something,\\n\" + // searched CASE, double quote string literals\n                 \"   COALESCE(IF(n_name LIKE 'A%', NULL, n_name), 'A%') AS coalesced_name, \\n\" + // coalesce\n                 \"   round(tan(n_nationkey), 3) AS rounded_tan, \\n\" + // functions\n+                \"   o_orderdate AS the_orderdate, \\n\" +\n                 \"   `n`.`n_nationkey` + `n_nationkey` + n.n_nationkey + n_nationkey + 10000 - -1 AS arithmetic--some comment without leading space \\n\" +\n-                \"FROM `default`.`nation` AS `n`\");\n+                \"FROM `default`.`nation` AS `n` \\n\" +\n+                // join, subquery\n+                \"LEFT JOIN (SELECT * FROM orders WHERE o_custkey > 1000) `o` ON `o`.`o_orderkey` = `n`.`n_nationkey` \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be4e463119cd254a62a1e3faecade3a389172814"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMDQ4MTcz", "url": "https://github.com/trinodb/trino/pull/5980#pullrequestreview-532048173", "createdAt": "2020-11-17T06:15:49Z", "commit": {"oid": "be4e463119cd254a62a1e3faecade3a389172814"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2593, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}