{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNzQ4MTIx", "number": 4983, "title": "Fix CONVERT_TO_VARCHAR with arrays", "bodyText": "Fixes #4981\nFixes #4885", "createdAt": "2020-08-26T08:37:39Z", "url": "https://github.com/trinodb/trino/pull/4983", "merged": true, "mergeCommit": {"oid": "26055ea44c18289fbbe1c0d70a440cf6e1b6b3bb"}, "closed": true, "closedAt": "2020-08-26T09:41:30Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCnSZ2gH2gAyNDczNzQ4MTIxOjg5ZGQ5M2I3NTNhMGNjMzA2NjQyNDYzODVmM2QzMzEwNzA1YzIxYzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCoWH1gFqTQ3NTMxMjIxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "89dd93b753a0cc30664246385f3d3310705c21c7", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/89dd93b753a0cc30664246385f3d3310705c21c7", "committedDate": "2020-08-26T08:11:29Z", "message": "Extract variable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e8bbacd3433e185c0fda13c59908d5f22782b03", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/4e8bbacd3433e185c0fda13c59908d5f22782b03", "committedDate": "2020-08-26T08:11:55Z", "message": "Fx bytea[] array exclusion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0014b1065a22ba0ff91ad1e95113cea5961a591", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/f0014b1065a22ba0ff91ad1e95113cea5961a591", "committedDate": "2020-08-26T08:37:29Z", "message": "Fix CONVERT_TO_VARCHAR with arrays"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MzExMDQy", "url": "https://github.com/trinodb/trino/pull/4983#pullrequestreview-475311042", "createdAt": "2020-08-26T09:23:53Z", "commit": {"oid": "f0014b1065a22ba0ff91ad1e95113cea5961a591"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MzEyMjE5", "url": "https://github.com/trinodb/trino/pull/4983#pullrequestreview-475312219", "createdAt": "2020-08-26T09:25:26Z", "commit": {"oid": "f0014b1065a22ba0ff91ad1e95113cea5961a591"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOToyNToyNlrOHHDwMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOToyNToyNlrOHHDwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE2MzU3MA==", "bodyText": "testUnsupportedDataTypeConvertedToVarchar and testUnsupportedDataTypeAsIgnored creates a table per each test. Hence it could take a long time to test all use cases. We had this issue before with regular type mapping tests. Maybe we should think to extend that framework to support unsupported type testing.\nWDYT?\nNo change requested, just thinking at loud.", "url": "https://github.com/trinodb/trino/pull/4983#discussion_r477163570", "createdAt": "2020-08-26T09:25:26Z", "author": {"login": "kokosing"}, "path": "presto-postgresql/src/test/java/io/prestosql/plugin/postgresql/TestPostgreSqlTypeMapping.java", "diffHunk": "@@ -819,6 +840,12 @@ public void testArrayAsJson()\n                 .addRoundTrip(arrayAsJsonDataType(\"_text\"), \"[]\")\n                 .execute(getQueryRunner(), session, postgresCreateAndInsert(\"tpch.test_varchar_array_as_json\"));\n \n+        testUnsupportedDataTypeAsIgnored(session, \"bytea[]\", \"ARRAY['binary value'::bytea]\");\n+        testUnsupportedDataTypeAsIgnored(session, \"bytea[]\", \"ARRAY[ARRAY['binary value'::bytea]]\");\n+        testUnsupportedDataTypeAsIgnored(session, \"bytea[]\", \"ARRAY[ARRAY[ARRAY['binary value'::bytea]]]\");\n+        testUnsupportedDataTypeAsIgnored(session, \"_bytea\", \"ARRAY['binary value'::bytea]\");\n+        testUnsupportedDataTypeConvertedToVarchar(session, \"bytea[]\", \"ARRAY['binary value'::bytea]\", \"'{\\\"\\\\\\\\x62696e6172792076616c7565\\\"}'\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0014b1065a22ba0ff91ad1e95113cea5961a591"}, "originalPosition": 121}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4187, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}