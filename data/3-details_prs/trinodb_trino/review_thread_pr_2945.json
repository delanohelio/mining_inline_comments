{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5OTU5MDA0", "number": 2945, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQwNTozMDowOVrODkAPeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQwNTozMDowOVrODkAPeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDc5Mjg4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/operator/aggregation/minmaxby/AbstractMinMaxBy.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQwNTozMDowOVrOFwHxlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQwNTozMDowOVrOFwHxlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAwMzM0OQ==", "bodyText": "This could be\nreturn stream(stateClass.getMethods())\n        .filter(method -> method.getName().equals(name))\n        .findFirst()\n        .orElseThrow(() -> new IllegalArgumentException(\"State class does not have a method named \" + name));", "url": "https://github.com/trinodb/trino/pull/2945#discussion_r386003349", "createdAt": "2020-02-29T05:30:09Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/operator/aggregation/minmaxby/AbstractMinMaxBy.java", "diffHunk": "@@ -280,4 +303,14 @@ private void generateOutputMethod(ClassDefinition definition, CallSiteBinder bin\n         ifStatement.ifFalse(valueSqlType.writeValue(out, getValueExpression));\n         method.getBody().append(ifStatement).ret();\n     }\n+\n+    private static Method getMethod(Class<?> stateClass, String name)\n+    {\n+        for (Method method : stateClass.getMethods()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 122}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 827, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}