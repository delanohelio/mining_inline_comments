{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwNTY3NjA1", "number": 4890, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwODo1OTo0MVrOEaa1pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwODo1OTo0MVrOEaa1pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MTM4MTQ4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/operator/PagesIndex.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwODo1OTo0MVrOHD1sUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNToyNjozNlrOHEG4iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc4NzQ3NA==", "bodyText": "Should we use https://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html#MIN_VALUE instead?", "url": "https://github.com/trinodb/trino/pull/4890#discussion_r473787474", "createdAt": "2020-08-20T08:59:41Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/operator/PagesIndex.java", "diffHunk": "@@ -218,6 +220,9 @@ public void addPage(Page page)\n \n         for (int position = 0; position < page.getPositionCount(); position++) {\n             long sliceAddress = encodeSyntheticAddress(pageIndex, position);\n+            if (valueAddresses.size() >= 2_000_000_000) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzgxOTU5Ng==", "bodyText": "@sopel39  valueAddresses.size() is an int, so surely kess than Integer.MAX_VALUE\n@electrum where does 2B come from? safety measure?\nplease add a code comment", "url": "https://github.com/trinodb/trino/pull/4890#discussion_r473819596", "createdAt": "2020-08-20T09:38:42Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/operator/PagesIndex.java", "diffHunk": "@@ -218,6 +220,9 @@ public void addPage(Page page)\n \n         for (int position = 0; position < page.getPositionCount(); position++) {\n             long sliceAddress = encodeSyntheticAddress(pageIndex, position);\n+            if (valueAddresses.size() >= 2_000_000_000) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc4NzQ3NA=="}, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDA1ODg3OQ==", "bodyText": "I was picking a round number, like we do in other places (search for \"1 billion\")", "url": "https://github.com/trinodb/trino/pull/4890#discussion_r474058879", "createdAt": "2020-08-20T15:11:36Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/operator/PagesIndex.java", "diffHunk": "@@ -218,6 +220,9 @@ public void addPage(Page page)\n \n         for (int position = 0; position < page.getPositionCount(); position++) {\n             long sliceAddress = encodeSyntheticAddress(pageIndex, position);\n+            if (valueAddresses.size() >= 2_000_000_000) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc4NzQ3NA=="}, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDA2OTEzMQ==", "bodyText": "Added a comment", "url": "https://github.com/trinodb/trino/pull/4890#discussion_r474069131", "createdAt": "2020-08-20T15:26:36Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/operator/PagesIndex.java", "diffHunk": "@@ -218,6 +220,9 @@ public void addPage(Page page)\n \n         for (int position = 0; position < page.getPositionCount(); position++) {\n             long sliceAddress = encodeSyntheticAddress(pageIndex, position);\n+            if (valueAddresses.size() >= 2_000_000_000) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc4NzQ3NA=="}, "originalCommit": null, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3513, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}