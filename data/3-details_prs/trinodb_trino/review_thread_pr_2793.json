{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNjQ5NDQy", "number": 2793, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxOTo1OTowNVrODhM7nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQyMTo1OTo0OVrODiG7ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MTQxNDcxOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/sql/planner/PlanOptimizers.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxOTo1OTowNVrOFr1m-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQyMDo0NzoxMVrOFtM08Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUxMTQxOQ==", "bodyText": "Since we are using a new instance of StatsRecordingPlanOptimizer for the 3 places where PredicatePushDown rule is applied, it looks like this will reset the stats each time for this rule (Check OptimizerStatsRecorder#register). Is that ok ? I think we would want to know the combined time taken of PredicatePushDown rule in all the invocations or record them all separately.", "url": "https://github.com/trinodb/trino/pull/2793#discussion_r381511419", "createdAt": "2020-02-19T19:59:05Z", "author": {"login": "raunaqmorarka"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/PlanOptimizers.java", "diffHunk": "@@ -405,7 +403,7 @@ public PlanOptimizers(\n                 new CheckSubqueryNodesAreRewritten(),\n                 new StatsRecordingPlanOptimizer(\n                         optimizerStats,\n-                        new PredicatePushDown(metadata, typeAnalyzer, false)),\n+                        new StatsRecordingPlanOptimizer(optimizerStats, new PredicatePushDown(metadata, typeAnalyzer, false, false))),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk0MDQwMQ==", "bodyText": "I will report to same optimizerStats every time, so it accumulates stats for PredicatePushDown", "url": "https://github.com/trinodb/trino/pull/2793#discussion_r382940401", "createdAt": "2020-02-22T20:47:11Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/PlanOptimizers.java", "diffHunk": "@@ -405,7 +403,7 @@ public PlanOptimizers(\n                 new CheckSubqueryNodesAreRewritten(),\n                 new StatsRecordingPlanOptimizer(\n                         optimizerStats,\n-                        new PredicatePushDown(metadata, typeAnalyzer, false)),\n+                        new StatsRecordingPlanOptimizer(optimizerStats, new PredicatePushDown(metadata, typeAnalyzer, false, false))),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUxMTQxOQ=="}, "originalCommit": null, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDkwOTUxOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/sql/planner/PlanOptimizers.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQyMTo0NDozMlrOFtNCDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQyMTo0NDozMlrOFtNCDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk0Mzc1OQ==", "bodyText": "Typo in commit message: \"Prediacate\"", "url": "https://github.com/trinodb/trino/pull/2793#discussion_r382943759", "createdAt": "2020-02-22T21:44:32Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/PlanOptimizers.java", "diffHunk": "@@ -279,8 +279,6 @@ public PlanOptimizers(\n                         .add(new RemoveTrivialFilters())", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDkxMTQyOnYy", "diffSide": "LEFT", "path": "presto-main/src/main/java/io/prestosql/sql/planner/PlanOptimizers.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQyMTo0ODoxOFrOFtNC7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMTo0ODo1OVrOFwcyWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk0Mzk4MA==", "bodyText": "Hmm... this is going to have to change once we move PredicatePushdown to the iterative optimizer, as it will be interleaved with all other rules.", "url": "https://github.com/trinodb/trino/pull/2793#discussion_r382943980", "createdAt": "2020-02-22T21:48:18Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/PlanOptimizers.java", "diffHunk": "@@ -407,7 +405,7 @@ public PlanOptimizers(\n                 new CheckSubqueryNodesAreRewritten(),\n                 new StatsRecordingPlanOptimizer(\n                         optimizerStats,\n-                        new PredicatePushDown(metadata, typeAnalyzer, false)),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM0NzYxMA==", "bodyText": "Yup. I think in this case it might be relatively easy to remove this dependency, so that dynamic filters don't change existing plans. I just didn't want to dig into this particular issue", "url": "https://github.com/trinodb/trino/pull/2793#discussion_r386347610", "createdAt": "2020-03-02T11:48:59Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/PlanOptimizers.java", "diffHunk": "@@ -407,7 +405,7 @@ public PlanOptimizers(\n                 new CheckSubqueryNodesAreRewritten(),\n                 new StatsRecordingPlanOptimizer(\n                         optimizerStats,\n-                        new PredicatePushDown(metadata, typeAnalyzer, false)),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk0Mzk4MA=="}, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDkxMjI4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/sql/planner/LocalExecutionPlanner.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQyMTo1MDoxMVrOFtNDXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQyMTo1MDoxMVrOFtNDXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk0NDA5NA==", "bodyText": "Can you add some details to the commit message explaining the motivation? I..e, what about grouped execution makes it incompatible with dynamic filters?", "url": "https://github.com/trinodb/trino/pull/2793#discussion_r382944094", "createdAt": "2020-02-22T21:50:11Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/LocalExecutionPlanner.java", "diffHunk": "@@ -2042,7 +2042,7 @@ private PhysicalOperation createLookupJoin(\n             ImmutableList.Builder<OperatorFactory> factoriesBuilder = new ImmutableList.Builder<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDkxNjc1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/split/PageSourceManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQyMTo1OToxNlrOFtNFiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQyMTo1OToxNlrOFtNFiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk0NDY1MQ==", "bodyText": "Can you add some details to the commit message explaining the motivation?", "url": "https://github.com/trinodb/trino/pull/2793#discussion_r382944651", "createdAt": "2020-02-22T21:59:16Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/split/PageSourceManager.java", "diffHunk": "@@ -13,15 +13,13 @@\n  */", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDkxNjkwOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HivePageSourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQyMTo1OTo0OVrOFtNFow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQyMTo1OTo0OVrOFtNFow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk0NDY3NQ==", "bodyText": "Same here, can you add a comment in the commit message explaining the motivation?", "url": "https://github.com/trinodb/trino/pull/2793#discussion_r382944675", "createdAt": "2020-02-22T21:59:49Z", "author": {"login": "martint"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HivePageSourceProvider.java", "diffHunk": "@@ -117,7 +117,7 @@ public ConnectorPageSource createPageSource(ConnectorTransactionHandle transacti\n                 hiveSplit.getFileSize(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 906, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}