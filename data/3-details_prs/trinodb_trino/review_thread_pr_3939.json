{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI5MjQ1MTI4", "number": 3939, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMToxNDoxNlrOEGkN-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMTozNjo1NVrOEGkb2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzIwMzE1OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMToxNDoxNlrOGlcVCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMToxNDoxNlrOGlcVCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkxNDYzMw==", "bodyText": "I'd add error handling for this.  The property might not be present and might not be a double.  In either case, I'd just throw a PrestoException with HIVE_UNSUPPORTED_FORMAT error code.", "url": "https://github.com/trinodb/trino/pull/3939#discussion_r441914633", "createdAt": "2020-06-18T01:14:16Z", "author": {"login": "dain"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveUtil.java", "diffHunk": "@@ -1056,4 +1060,14 @@ private static int getPositiveIntegerValue(Properties schema, String key, String\n     {\n         return toHiveTypes(schema.getProperty(IOConstants.COLUMNS_TYPES, \"\"));\n     }\n+\n+    public static OrcWriterOptions getOrcWriterOptions(Properties schema, OrcWriterOptions orcWriterOptions)\n+    {\n+        if (schema.contains(ORC_BLOOM_FILTER_COLUMNS)) {\n+            return orcWriterOptions\n+                    .withBloomFilterColumns(ImmutableSet.copyOf(COLUMN_NAMES_SPLITTER.splitToList(schema.getProperty(ORC_BLOOM_FILTER_COLUMNS))))\n+                    .withBloomFilterFpp(Double.parseDouble(schema.getProperty(ORC_BLOOM_FILTER_FPP)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzIxMDkxOnYy", "diffSide": "RIGHT", "path": "presto-orc/src/main/java/io/prestosql/orc/OrcWriterOptions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMToxODo1NFrOGlcZoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMToxODo1NFrOGlcZoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkxNTgwOA==", "bodyText": "The Options class isn't really intended to be factory, but a simple data-only struct.  I move this code to the caller, and add a boolean isBloomFilterColumn(String columnName) here instead.", "url": "https://github.com/trinodb/trino/pull/3939#discussion_r441915808", "createdAt": "2020-06-18T01:18:54Z", "author": {"login": "dain"}, "path": "presto-orc/src/main/java/io/prestosql/orc/OrcWriterOptions.java", "diffHunk": "@@ -117,39 +132,62 @@ public DataSize getMaxCompressionBufferSize()\n         return maxCompressionBufferSize;\n     }\n \n+    public double getBloomFilterFpp()\n+    {\n+        return bloomFilterFpp;\n+    }\n+\n+    public Supplier<BloomFilterBuilder> getBloomFilterBuilder(String columnName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzIyMTkzOnYy", "diffSide": "RIGHT", "path": "presto-orc/src/main/java/io/prestosql/orc/metadata/statistics/Utf8BloomFilterBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMToyNTo1MlrOGlcgTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMToyNTo1MlrOGlcgTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkxNzUxNw==", "bodyText": "This makes a copy of the data.  Is is possible to pass the underlying array, offset, and length?", "url": "https://github.com/trinodb/trino/pull/3939#discussion_r441917517", "createdAt": "2020-06-18T01:25:52Z", "author": {"login": "dain"}, "path": "presto-orc/src/main/java/io/prestosql/orc/metadata/statistics/Utf8BloomFilterBuilder.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.orc.metadata.statistics;\n+\n+import io.airlift.slice.Slice;\n+\n+public class Utf8BloomFilterBuilder\n+        implements BloomFilterBuilder\n+{\n+    private final BloomFilter bloomFilter;\n+\n+    public Utf8BloomFilterBuilder(int expectedSize, double fpp)\n+    {\n+        bloomFilter = new BloomFilter(expectedSize, fpp);\n+    }\n+\n+    @Override\n+    public BloomFilterBuilder addString(Slice val)\n+    {\n+        bloomFilter.add(val.getBytes());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzIzODY2OnYy", "diffSide": "RIGHT", "path": "presto-orc/src/test/java/io/prestosql/orc/metadata/statistics/TestDoubleStatisticsBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMTozNjo1NVrOGlcqoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMTozNjo1NVrOGlcqoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkyMDE2MQ==", "bodyText": "I'd like to see the bloom filter actually tested in these.  For example the assertValues in the parent class could verify the expected values are matched by the bloom filter.", "url": "https://github.com/trinodb/trino/pull/3939#discussion_r441920161", "createdAt": "2020-06-18T01:36:55Z", "author": {"login": "dain"}, "path": "presto-orc/src/test/java/io/prestosql/orc/metadata/statistics/TestDoubleStatisticsBuilder.java", "diffHunk": "@@ -34,7 +34,7 @@\n \n     public TestDoubleStatisticsBuilder()\n     {\n-        super(DOUBLE, DoubleStatisticsBuilder::new, DoubleStatisticsBuilder::addValue);\n+        super(DOUBLE, () -> new DoubleStatisticsBuilder(new NoOpBloomFilterBuilder()), DoubleStatisticsBuilder::addValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4242, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}