{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3MzcyMzA0", "number": 5173, "title": "Add column pruning for EXPLAIN ANALYZE ", "bodyText": "Fixes #4760", "createdAt": "2020-09-15T15:17:33Z", "url": "https://github.com/trinodb/trino/pull/5173", "merged": true, "mergeCommit": {"oid": "9a712a75a91780c87befcd82b8029eb040918160"}, "closed": true, "closedAt": "2020-10-07T06:42:46Z", "author": {"login": "Praveen2112"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJLWh1gBqjM3Njk1NDk2MzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPyzAgABqjM4NDM3Njg1MDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwODQwOTE0", "url": "https://github.com/trinodb/trino/pull/5173#pullrequestreview-490840914", "createdAt": "2020-09-17T17:41:51Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMjIyODk3", "url": "https://github.com/trinodb/trino/pull/5173#pullrequestreview-491222897", "createdAt": "2020-09-18T07:40:46Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNzo0MDo0N1rOHUBrIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNzo0MDo0N1rOHUBrIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc2MDk5NQ==", "bodyText": "The assertion passes even if the table scan has more projections than just this one,\nso it is a wrong test for the change.\nYou can see this by changing the query to EXPLAIN ANALYZE SELECT regionkey, nationkey FROM nation\nwithout changing the expected plan. You would want this to fail.", "url": "https://github.com/trinodb/trino/pull/5173#discussion_r490760995", "createdAt": "2020-09-18T07:40:47Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestLogicalPlanner.java", "diffHunk": "@@ -1526,6 +1527,18 @@ public void testSizeBasedSemiJoin()\n                                                 values(\"T_A\"))))));\n     }\n \n+    @Test\n+    public void testExplainAnalyze()\n+    {\n+        assertPlan(\"EXPLAIN ANALYZE SELECT regionkey FROM nation\",\n+                output(\n+                        node(ExplainAnalyzeNode.class,\n+                                exchange(\n+                                        LOCAL,\n+                                        GATHER,\n+                                        tableScan(\"nation\", ImmutableMap.of(\"regionkey\", \"regionkey\"))))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMzc5ODUz", "url": "https://github.com/trinodb/trino/pull/5173#pullrequestreview-491379853", "createdAt": "2020-09-18T11:25:56Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMToyNTo1N1rOHUJEMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMToyNTo1N1rOHUJEMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg4MjA5Ng==", "bodyText": "The call to mapper.map() potentially modifies mapping. For clarity, move it before the constructor, like mapping of the output symbols.", "url": "https://github.com/trinodb/trino/pull/5173#discussion_r490882096", "createdAt": "2020-09-18T11:25:57Z", "author": {"login": "kasiafi"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/optimizations/UnaliasSymbolReferences.java", "diffHunk": "@@ -203,7 +203,7 @@ public PlanAndMappings visitExplainAnalyze(ExplainAnalyzeNode node, UnaliasConte\n             Symbol newOutputSymbol = mapper.map(node.getOutputSymbol());\n \n             return new PlanAndMappings(\n-                    new ExplainAnalyzeNode(node.getId(), rewrittenSource.getRoot(), newOutputSymbol, node.isVerbose()),\n+                    new ExplainAnalyzeNode(node.getId(), rewrittenSource.getRoot(), newOutputSymbol, mapper.map(node.getActualOutputs()), node.isVerbose()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMDA0NzQ4", "url": "https://github.com/trinodb/trino/pull/5173#pullrequestreview-492004748", "createdAt": "2020-09-19T15:10:51Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOVQxNToxMDo1MVrOHUslCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOVQxNToxMDo1OFrOHUslFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ2Mzk0NQ==", "bodyText": "Use node(ExchangeNode.class (or better) instead of any", "url": "https://github.com/trinodb/trino/pull/5173#discussion_r491463945", "createdAt": "2020-09-19T15:10:51Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestLogicalPlanner.java", "diffHunk": "@@ -1526,6 +1527,19 @@ public void testSizeBasedSemiJoin()\n                                                 values(\"T_A\"))))));\n     }\n \n+    @Test\n+    public void testExplainAnalyze()\n+    {\n+        assertPlan(\"EXPLAIN ANALYZE SELECT regionkey FROM nation ORDER BY nationkey\",\n+                output(\n+                        node(ExplainAnalyzeNode.class,\n+                                strictProject(ImmutableMap.of(\"regionkey\", expression(\"regionkey\")),\n+                                        any(", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ2Mzk1OA==", "bodyText": "This works, but is a bit indirect way of checking this.\nMaybe, instead of adding ORDER BY and strictProject,\nyou can have \"strictTableScan\" matcher?", "url": "https://github.com/trinodb/trino/pull/5173#discussion_r491463958", "createdAt": "2020-09-19T15:10:58Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestLogicalPlanner.java", "diffHunk": "@@ -1526,6 +1527,19 @@ public void testSizeBasedSemiJoin()\n                                                 values(\"T_A\"))))));\n     }\n \n+    @Test\n+    public void testExplainAnalyze()\n+    {\n+        assertPlan(\"EXPLAIN ANALYZE SELECT regionkey FROM nation ORDER BY nationkey\",\n+                output(\n+                        node(ExplainAnalyzeNode.class,\n+                                strictProject(ImmutableMap.of(\"regionkey\", expression(\"regionkey\")),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2MTQwNzUx", "url": "https://github.com/trinodb/trino/pull/5173#pullrequestreview-496140751", "createdAt": "2020-09-25T06:27:10Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNjoyNzoxMFrOHX2kNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNjo0NzowMlrOHX3DNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc3MzMwMg==", "bodyText": "columnNumber isn't used.", "url": "https://github.com/trinodb/trino/pull/5173#discussion_r494773302", "createdAt": "2020-09-25T06:27:10Z", "author": {"login": "kasiafi"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/LogicalPlanner.java", "diffHunk": "@@ -267,7 +267,17 @@ private RelationPlan createExplainAnalyzePlan(Analysis analysis, Explain stateme\n         PlanNode root = underlyingPlan.getRoot();\n         Scope scope = analysis.getScope(statement);\n         Symbol outputSymbol = symbolAllocator.newSymbol(scope.getRelationType().getFieldByIndex(0));\n-        root = new ExplainAnalyzeNode(idAllocator.getNextId(), root, outputSymbol, statement.isVerbose());\n+\n+        ImmutableList.Builder<Symbol> actualOutputs = ImmutableList.builder();\n+        int columnNumber = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc3OTY1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.actualOutputs = requireNonNull(actualOutputs, \"outputs is null\");\n          \n          \n            \n                    this.actualOutputs = requireNonNull(actualOutputs, \"actualOutputs is null\");", "url": "https://github.com/trinodb/trino/pull/5173#discussion_r494779652", "createdAt": "2020-09-25T06:43:12Z", "author": {"login": "kasiafi"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/plan/ExplainAnalyzeNode.java", "diffHunk": "@@ -31,18 +31,21 @@\n {\n     private final PlanNode source;\n     private final Symbol outputSymbol;\n+    private final List<Symbol> actualOutputs;\n     private final boolean verbose;\n \n     @JsonCreator\n     public ExplainAnalyzeNode(\n             @JsonProperty(\"id\") PlanNodeId id,\n             @JsonProperty(\"source\") PlanNode source,\n             @JsonProperty(\"outputSymbol\") Symbol outputSymbol,\n+            @JsonProperty(\"actualOutputs\") List<Symbol> actualOutputs,\n             @JsonProperty(\"verbose\") boolean verbose)\n     {\n         super(id);\n         this.source = requireNonNull(source, \"source is null\");\n         this.outputSymbol = requireNonNull(outputSymbol, \"outputSymbol is null\");\n+        this.actualOutputs = requireNonNull(actualOutputs, \"outputs is null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc4MTIzNw==", "bodyText": "Please add a check that source output symbols contain all actualOutputs.", "url": "https://github.com/trinodb/trino/pull/5173#discussion_r494781237", "createdAt": "2020-09-25T06:47:02Z", "author": {"login": "kasiafi"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/plan/ExplainAnalyzeNode.java", "diffHunk": "@@ -31,18 +31,21 @@\n {\n     private final PlanNode source;\n     private final Symbol outputSymbol;\n+    private final List<Symbol> actualOutputs;\n     private final boolean verbose;\n \n     @JsonCreator\n     public ExplainAnalyzeNode(\n             @JsonProperty(\"id\") PlanNodeId id,\n             @JsonProperty(\"source\") PlanNode source,\n             @JsonProperty(\"outputSymbol\") Symbol outputSymbol,\n+            @JsonProperty(\"actualOutputs\") List<Symbol> actualOutputs,\n             @JsonProperty(\"verbose\") boolean verbose)\n     {\n         super(id);\n         this.source = requireNonNull(source, \"source is null\");\n         this.outputSymbol = requireNonNull(outputSymbol, \"outputSymbol is null\");\n+        this.actualOutputs = requireNonNull(actualOutputs, \"outputs is null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MzQyNjc0", "url": "https://github.com/trinodb/trino/pull/5173#pullrequestreview-499342674", "createdAt": "2020-09-30T11:44:23Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMTo0NDoyM1rOHaZlpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMTo0NDoyM1rOHaZlpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ0NDI2Mw==", "bodyText": "Do the non-null check first.", "url": "https://github.com/trinodb/trino/pull/5173#discussion_r497444263", "createdAt": "2020-09-30T11:44:23Z", "author": {"login": "kasiafi"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/plan/ExplainAnalyzeNode.java", "diffHunk": "@@ -31,18 +33,22 @@\n {\n     private final PlanNode source;\n     private final Symbol outputSymbol;\n+    private final List<Symbol> actualOutputs;\n     private final boolean verbose;\n \n     @JsonCreator\n     public ExplainAnalyzeNode(\n             @JsonProperty(\"id\") PlanNodeId id,\n             @JsonProperty(\"source\") PlanNode source,\n             @JsonProperty(\"outputSymbol\") Symbol outputSymbol,\n+            @JsonProperty(\"actualOutputs\") List<Symbol> actualOutputs,\n             @JsonProperty(\"verbose\") boolean verbose)\n     {\n         super(id);\n         this.source = requireNonNull(source, \"source is null\");\n         this.outputSymbol = requireNonNull(outputSymbol, \"outputSymbol is null\");\n+        checkArgument(ImmutableSet.copyOf(source.getOutputSymbols()).containsAll(actualOutputs), \"Source does not supply all required input symbols\");\n+        this.actualOutputs = requireNonNull(actualOutputs, \"actualOutputs is null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "b466fd56baf755e8c5edacf7a5485d4b1ba1550e", "author": {"user": {"login": "Praveen2112", "name": "Praveen Krishna"}}, "url": "https://github.com/trinodb/trino/commit/b466fd56baf755e8c5edacf7a5485d4b1ba1550e", "committedDate": "2020-10-06T06:56:38Z", "message": "Maintain actual output column details in ExplainAnalyze"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e19c3af10738a59e43adc0d6879e4b45b64bb195", "author": {"user": {"login": "Praveen2112", "name": "Praveen Krishna"}}, "url": "https://github.com/trinodb/trino/commit/e19c3af10738a59e43adc0d6879e4b45b64bb195", "committedDate": "2020-10-06T06:56:39Z", "message": "Add column-pruning rule for ExplainAnalyzeNode"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "e19c3af10738a59e43adc0d6879e4b45b64bb195", "author": {"user": {"login": "Praveen2112", "name": "Praveen Krishna"}}, "url": "https://github.com/trinodb/trino/commit/e19c3af10738a59e43adc0d6879e4b45b64bb195", "committedDate": "2020-10-06T06:56:39Z", "message": "Add column-pruning rule for ExplainAnalyzeNode"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4016, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}