{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NDExMzEy", "number": 6149, "title": "Fix TIMESTAMP [TZ] in JDBC when nanos overflow", "bodyText": "Fixes #6147", "createdAt": "2020-11-30T09:23:05Z", "url": "https://github.com/trinodb/trino/pull/6149", "merged": true, "mergeCommit": {"oid": "ee45530f06c8874f13138b04b444863be8eca95a"}, "closed": true, "closedAt": "2020-12-04T07:10:44Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhhzyRAH2gAyNTI5NDExMzEyOmJiMjVjZjE5MTFkMzM2MzQ1YTRhMjhkZGNhYzE4OGViMzgzZTQxNmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdipEGngBqjQwNjk1MzU2MTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bb25cf1911d336345a4a28ddcac188eb383e416d", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/bb25cf1911d336345a4a28ddcac188eb383e416d", "committedDate": "2020-11-30T09:20:10Z", "message": "Remove redundant checks on server capabilities\n\nIn these cases the relevant check is applied outside of the test case\nand does not need to be repeated in assertions."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c08b4339f4ebbf405f048f160206a3a0c850d66", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/6c08b4339f4ebbf405f048f160206a3a0c850d66", "committedDate": "2020-11-30T09:20:10Z", "message": "Separate TIMESTAMP and TIMESTAMP WITH TIME ZONE test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxOTk1NjU2", "url": "https://github.com/trinodb/trino/pull/6149#pullrequestreview-541995656", "createdAt": "2020-12-01T15:08:58Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzOTUwNzkz", "url": "https://github.com/trinodb/trino/pull/6149#pullrequestreview-543950793", "createdAt": "2020-12-03T13:27:54Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzoyNzo1NFrOH-bonw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzoyNzo1NFrOH-bonw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIyNjUyNw==", "bodyText": "what about the \"before-epoch\" values. Are those handled correctly. Do we have tests coverage?", "url": "https://github.com/trinodb/trino/pull/6149#discussion_r535226527", "createdAt": "2020-12-03T13:27:54Z", "author": {"login": "losipiuk"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/AbstractPrestoResultSet.java", "diffHunk": "@@ -1931,19 +1931,23 @@ private static Timestamp parseTimestamp(String value, Function<String, ZoneId> t\n         long epochSecond = LocalDateTime.of(year, month, day, hour, minute, second, 0)\n                 .atZone(zoneId)\n                 .toEpochSecond();\n-        long epochMillis = SECONDS.toMillis(epochSecond);\n \n-        Timestamp timestamp;\n-        if (epochMillis >= START_OF_MODERN_ERA) {\n-            timestamp = new Timestamp(epochMillis);\n-        }\n-        else {\n+        if (epochSecond < START_OF_MODERN_ERA_SECONDS) {\n             // slower path, but accurate for historical dates\n             GregorianCalendar calendar = new GregorianCalendar(year, month - 1, day, hour, minute, second);\n             calendar.setTimeZone(TimeZone.getTimeZone(zoneId));\n-            timestamp = new Timestamp(calendar.getTimeInMillis());\n+            verify(calendar.getTimeInMillis() % MILLISECONDS_PER_SECOND == 0, \"Fractional second when recalculating epochSecond of a historical date: %s\", value);\n+            epochSecond = calendar.getTimeInMillis() / MILLISECONDS_PER_SECOND;\n         }\n-        timestamp.setNanos((int) rescale(fractionValue, precision, 9));\n+\n+        int nanoOfSecond = (int) rescale(fractionValue, precision, 9);\n+        if (nanoOfSecond == NANOSECONDS_PER_SECOND) {\n+            epochSecond++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MTk2MTIx", "url": "https://github.com/trinodb/trino/pull/6149#pullrequestreview-544196121", "createdAt": "2020-12-03T17:19:06Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "725cc5a67e79a935694d393cb2ad4e80f46cfdce", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/725cc5a67e79a935694d393cb2ad4e80f46cfdce", "committedDate": "2020-12-03T20:20:58Z", "message": "Fix TIMESTAMP [TZ] in JDBC when nanos overflow"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bbfe571337878034aabb4e5340700995e6d8837", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/1bbfe571337878034aabb4e5340700995e6d8837", "committedDate": "2020-12-03T20:20:58Z", "message": "Fix formatting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "1bbfe571337878034aabb4e5340700995e6d8837", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/1bbfe571337878034aabb4e5340700995e6d8837", "committedDate": "2020-12-03T20:20:58Z", "message": "Fix formatting"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2440, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}