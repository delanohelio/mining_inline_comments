{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MjEzNjU4", "number": 3490, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwOToyNjo1MlrOD0JOqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOTowNjo0NlrOD0pgRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MDAzNzUyOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/optimizer/TestHiveProjectionPushdownIntoTableScan.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwOToyNjo1MlrOGI7_GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwOToyNjo1MlrOGI7_GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAyNDYwMA==", "bodyText": "move \"CREATE TABLE  %s (col0) AS\" + to newline", "url": "https://github.com/trinodb/trino/pull/3490#discussion_r412024600", "createdAt": "2020-04-21T09:26:52Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/optimizer/TestHiveProjectionPushdownIntoTableScan.java", "diffHunk": "@@ -89,13 +92,34 @@ protected LocalQueryRunner createLocalQueryRunner()\n         return queryRunner;\n     }\n \n+    @Test\n+    public void testPushdownDisabled()\n+    {\n+        String testTable = \"test_disabled_pushdown\";\n+\n+        Session session = Session.builder(getQueryRunner().getDefaultSession())\n+                .setCatalogSessionProperty(HIVE_CATALOG_NAME, \"projection_pushdown_enabled\", \"false\")\n+                .build();\n+\n+        getQueryRunner().execute(format(\"CREATE TABLE  %s (col0) AS\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MDAzOTg5OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/optimizer/TestHiveProjectionPushdownIntoTableScan.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwOToyNzoyNlrOGI8Anw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwOToyNzoyNlrOGI8Anw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAyNDk5MQ==", "bodyText": "inline tableName usage", "url": "https://github.com/trinodb/trino/pull/3490#discussion_r412024991", "createdAt": "2020-04-21T09:27:26Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/optimizer/TestHiveProjectionPushdownIntoTableScan.java", "diffHunk": "@@ -89,13 +92,34 @@ protected LocalQueryRunner createLocalQueryRunner()\n         return queryRunner;\n     }\n \n+    @Test\n+    public void testPushdownDisabled()\n+    {\n+        String testTable = \"test_disabled_pushdown\";\n+\n+        Session session = Session.builder(getQueryRunner().getDefaultSession())\n+                .setCatalogSessionProperty(HIVE_CATALOG_NAME, \"projection_pushdown_enabled\", \"false\")\n+                .build();\n+\n+        getQueryRunner().execute(format(\"CREATE TABLE  %s (col0) AS\" +\n+                \" SELECT cast(row(5, 6) as row(a bigint, b bigint)) AS col0 WHERE false\", testTable));\n+\n+        assertPlan(\n+                format(\"SELECT col0.a expr_a, col0.b expr_b FROM %s\", testTable),\n+                session,\n+                any(\n+                        project(\n+                                ImmutableMap.of(\"expr\", expression(\"col0.a\"), \"expr_2\", expression(\"col0.b\")),\n+                                tableScan(testTable, ImmutableMap.of(\"col0\", \"col0\")))));\n+    }\n+\n     @Test\n     public void testProjectionPushdown()\n     {\n         String testTable = \"test_simple_projection_pushdown\";\n         QualifiedObjectName completeTableName = new QualifiedObjectName(HIVE_CATALOG_NAME, SCHEMA_NAME, testTable);\n \n-        String tableName = HIVE_CATALOG_NAME + \".\" + SCHEMA_NAME + \".\" + testTable;\n+        String tableName = testTable;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NTMyNTUxOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/optimizer/TestHiveProjectionPushdownIntoTableScan.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOTowNjo0NlrOGJryZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOTowNjo0NlrOGJryZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgwNzc4Mg==", "bodyText": "nit: each arg in newline, so move testTable to next line", "url": "https://github.com/trinodb/trino/pull/3490#discussion_r412807782", "createdAt": "2020-04-22T09:06:46Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/optimizer/TestHiveProjectionPushdownIntoTableScan.java", "diffHunk": "@@ -89,15 +92,37 @@ protected LocalQueryRunner createLocalQueryRunner()\n         return queryRunner;\n     }\n \n+    @Test\n+    public void testPushdownDisabled()\n+    {\n+        String testTable = \"test_disabled_pushdown\";\n+\n+        Session session = Session.builder(getQueryRunner().getDefaultSession())\n+                .setCatalogSessionProperty(HIVE_CATALOG_NAME, \"projection_pushdown_enabled\", \"false\")\n+                .build();\n+\n+        getQueryRunner().execute(format(\n+                \"CREATE TABLE %s (col0) AS\" +\n+                        \" SELECT cast(row(5, 6) as row(a bigint, b bigint)) AS col0 WHERE false\", testTable));\n+\n+        assertPlan(\n+                format(\"SELECT col0.a expr_a, col0.b expr_b FROM %s\", testTable),\n+                session,\n+                any(\n+                        project(\n+                                ImmutableMap.of(\"expr\", expression(\"col0.a\"), \"expr_2\", expression(\"col0.b\")),\n+                                tableScan(testTable, ImmutableMap.of(\"col0\", \"col0\")))));\n+    }\n+\n     @Test\n     public void testProjectionPushdown()\n     {\n         String testTable = \"test_simple_projection_pushdown\";\n         QualifiedObjectName completeTableName = new QualifiedObjectName(HIVE_CATALOG_NAME, SCHEMA_NAME, testTable);\n \n-        String tableName = HIVE_CATALOG_NAME + \".\" + SCHEMA_NAME + \".\" + testTable;\n-        getQueryRunner().execute(\"CREATE TABLE \" + tableName + \" \" + \"(col0) AS\" +\n-                \" SELECT cast(row(5, 6) as row(a bigint, b bigint)) as col0 where false\");\n+        getQueryRunner().execute(format(\n+                \"CREATE TABLE %s (col0) AS\" +\n+                        \" SELECT cast(row(5, 6) as row(a bigint, b bigint)) as col0 where false\", testTable));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 188, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}