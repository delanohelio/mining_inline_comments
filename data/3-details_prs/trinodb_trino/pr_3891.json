{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NTUwMzQ2", "number": 3891, "title": "Use only first char from escapeChar table property in Hive", "bodyText": "Hive's CSV Serde only reads the first character of the serde properties\n(https://github.com/apache/hive/blob/60ff1fc7f8a9b010b99db0b1add788289f836b77/serde/src/java/org/apache/hadoop/hive/serde2/OpenCSVSerde.java#L98-L106)\nThis change allows Presto to use the same behaviour when reading\nexisting tables. Note that creating new tables with CSV serde from\nPresto still validates the length of the serde properties.\nFixes #3868", "createdAt": "2020-05-31T02:29:04Z", "url": "https://github.com/trinodb/trino/pull/3891", "merged": true, "mergeCommit": {"oid": "6a40a28c157fa55b2964fbe4ccdc8dbdf98d5f2b"}, "closed": true, "closedAt": "2020-06-17T19:50:36Z", "author": {"login": "hashhar"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcp7AGSgFqTQyODE0Njk1MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsIj_TAH2gAyNDI1NTUwMzQ2OmYxNWRlNDA1NjQ5ZDhhYWYzZDI0Mzc2ZDZmMWI0YjdjMDgyY2Q1NDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MTQ2OTUw", "url": "https://github.com/trinodb/trino/pull/3891#pullrequestreview-428146950", "createdAt": "2020-06-10T15:01:29Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTowMToyOVrOGh5Jew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTowMToyOVrOGh5Jew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE5MjUwNw==", "bodyText": "Note that there is no test for partitioned CTAS since Hive versions < 3.2 don't support it. See https://cwiki.apache.org/confluence/display/hive/LanguageManual+DDL#LanguageManualDDL-CreateTableAsSelect(CTAS).\n\nStarting with Hive 3.2.0, CTAS statements can define a partitioning specification for the target table (HIVE-20241).", "url": "https://github.com/trinodb/trino/pull/3891#discussion_r438192507", "createdAt": "2020-06-10T15:01:29Z", "author": {"login": "hashhar"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestCsv.java", "diffHunk": "@@ -174,4 +175,89 @@ private static void assertSelect(String query, String tableName)\n                 .hasColumns(expected.getColumnTypes())\n                 .containsOnly(expectedRows);\n     }\n+\n+    @Test(groups = STORAGE_FORMATS)\n+    public void testInsertIntoCsvTableWithCustomMultiCharProperties()\n+    {\n+        String tableName = \"storage_formats_test_insert_into_csv_with_custom_multi_char_properties\";\n+        query(format(\"DROP TABLE IF EXISTS %s\", tableName));\n+        onHive().executeQuery(format(\n+                \"CREATE TABLE %s(\" +\n+                        \"   a  string,\" +\n+                        \"   b  string,\" +\n+                        \"   c  string\" +\n+                        \") ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.OpenCSVSerde' \" +\n+                        \"WITH SERDEPROPERTIES ('escapeChar'='ee','separatorChar'='ss','quoteChar'='qq') \" +\n+                        \"STORED AS \" +\n+                        \"INPUTFORMAT 'org.apache.hadoop.mapred.TextInputFormat' \" +\n+                        \"OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'\",\n+                tableName));\n+\n+        query(format(\n+                \"INSERT INTO %s(a, b, c) VALUES \" +\n+                        \"('1', 'a', 'A'), \" +\n+                        \"('2', 'b', 'B'), \" +\n+                        \"('3', 'c', 'C')\",\n+                tableName));\n+        assertThat(query(format(\"SELECT * FROM %s\", tableName)))\n+                .containsOnly(\n+                        row(\"1\", \"a\", \"A\"),\n+                        row(\"2\", \"b\", \"B\"),\n+                        row(\"3\", \"c\", \"C\"));\n+        query(format(\"DROP TABLE %s\", tableName));\n+    }\n+\n+    @Test(groups = STORAGE_FORMATS)\n+    public void testCreateCsvTableAsWithCustomMultiCharProperties()\n+    {\n+        String tableName = \"test_csv_table_multi_char_properties\";\n+        query(format(\"DROP TABLE IF EXISTS %s\", tableName));\n+        onHive().executeQuery(format(\n+                \"CREATE TABLE %s \" +\n+                        \"ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.OpenCSVSerde' \" +\n+                        \"WITH SERDEPROPERTIES ('escapeChar'='ee','separatorChar'='ss','quoteChar'='qq') \" +\n+                        \"STORED AS \" +\n+                        \"INPUTFORMAT 'org.apache.hadoop.mapred.TextInputFormat' \" +\n+                        \"OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat' \" +\n+                        \"AS \" +\n+                        \"SELECT \" +\n+                        \"'1' AS a, 'a' AS b, 'A' AS c\",\n+                tableName));\n+\n+        assertThat(query(format(\"SELECT * FROM %s\", tableName)))\n+                .containsOnly(row(\"1\", \"a\", \"A\"));\n+        query(format(\"DROP TABLE %s\", tableName));\n+    }\n+\n+    @Test(groups = STORAGE_FORMATS)\n+    public void testInsertIntoPartitionedCsvTableWithCustomMultiCharProperties()\n+    {\n+        String tableName = \"test_partitioned_csv_table_with_custom_multi_char_parameters\";\n+        query(format(\"DROP TABLE IF EXISTS %s\", tableName));\n+        onHive().executeQuery(format(\n+                \"CREATE TABLE %s(\" +\n+                        \"   a  string,\" +\n+                        \"   b  string,\" +\n+                        \"   c  string\" +\n+                        \") PARTITIONED BY (d bigint) \" +\n+                        \"ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.OpenCSVSerde' \" +\n+                        \"WITH SERDEPROPERTIES ('escapeChar'='ee','separatorChar'='ss','quoteChar'='qq') \" +\n+                        \"STORED AS \" +\n+                        \"INPUTFORMAT 'org.apache.hadoop.mapred.TextInputFormat' \" +\n+                        \"OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'\",\n+                tableName));\n+\n+        query(format(\n+                \"INSERT INTO %s(a, b, c, d) VALUES \" +\n+                        \"('1', 'a', 'A', 1), \" +\n+                        \"('2', 'b', 'B', 2), \" +\n+                        \"('3', 'c', 'C', 3)\",\n+                tableName));\n+        assertThat(query(format(\"SELECT * FROM %s\", tableName)))\n+                .containsOnly(\n+                        row(\"1\", \"a\", \"A\", 1L),\n+                        row(\"2\", \"b\", \"B\", 2L),\n+                        row(\"3\", \"c\", \"C\", 3L));\n+        query(format(\"DROP TABLE %s\", tableName));\n+    }\n }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 97}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxODc3ODAy", "url": "https://github.com/trinodb/trino/pull/3891#pullrequestreview-431877802", "createdAt": "2020-06-16T20:45:27Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDo0NToyOFrOGkshLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDo0NToyOFrOGkshLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEzMTMxMA==", "bodyText": "csvSerdeProperty.substring(0, 1)\n(also, can these properties be set to empty string? will we fail here?)", "url": "https://github.com/trinodb/trino/pull/3891#discussion_r441131310", "createdAt": "2020-06-16T20:45:28Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveMetadata.java", "diffHunk": "@@ -624,12 +624,7 @@ private ConnectorTableMetadata doGetTableMetadata(ConnectorSession session, Sche\n \n     private static Optional<String> getCsvSerdeProperty(Table table, String key)\n     {\n-        return getSerdeProperty(table, key).map(csvSerdeProperty -> {\n-            if (csvSerdeProperty.length() > 1) {\n-                throw new PrestoException(HIVE_INVALID_METADATA, \"Only single character can be set for property: \" + key);\n-            }\n-            return csvSerdeProperty;\n-        });\n+        return getSerdeProperty(table, key).map(csvSerdeProperty -> String.valueOf(csvSerdeProperty.charAt(0)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMDg0NTE1", "url": "https://github.com/trinodb/trino/pull/3891#pullrequestreview-432084515", "createdAt": "2020-06-17T06:09:23Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjowOToyM1rOGk26lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjowOToyM1rOGk26lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMwMTY1NQ==", "bodyText": "move below testReadCsvTableWithMultiCharProperties, as a person reasing this class should see testReadCsvTableWithMultiCharProperties first, we logically depend on results of that test", "url": "https://github.com/trinodb/trino/pull/3891#discussion_r441301655", "createdAt": "2020-06-17T06:09:23Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestCsv.java", "diffHunk": "@@ -174,4 +175,67 @@ private static void assertSelect(String query, String tableName)\n                 .hasColumns(expected.getColumnTypes())\n                 .containsOnly(expectedRows);\n     }\n+\n+    @Test(groups = STORAGE_FORMATS)\n+    public void testWriteCsvTableWithMultiCharProperties()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f15de405649d8aaf3d24376d6f1b4b7c082cd540", "author": {"user": {"login": "hashhar", "name": "Ashhar Hasan"}}, "url": "https://github.com/trinodb/trino/commit/f15de405649d8aaf3d24376d6f1b4b7c082cd540", "committedDate": "2020-06-17T11:57:18Z", "message": "Use only first char from csv serde properties in Hive\n\nHive's CSV Serde only reads the first character of the serde properties\n(https://github.com/apache/hive/blob/60ff1fc7f8a9b010b99db0b1add788289f836b77/serde/src/java/org/apache/hadoop/hive/serde2/OpenCSVSerde.java#L98-L106)\nThis change allows Presto to use the same behaviour when reading\nexisting tables.\n\nNote that creating new tables with CSV serde from\nPresto still validates the length of the serde properties.\n\nFixes #3868."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 537, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}