{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMjE5NTU2", "number": 4228, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNTozODo1N1rOEJLUzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNTo0MDoyNlrOEJLWzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MDU4MTg4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryExecution.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNTozODo1N1rOGplhsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMToxOTozN1rOGpvAQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI1OTYzNA==", "bodyText": "Why do this before distributed planning?  In the old code this was performed after starting, which is a few lines down in this file.", "url": "https://github.com/trinodb/trino/pull/4228#discussion_r446259634", "createdAt": "2020-06-26T15:38:57Z", "author": {"login": "dain"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryExecution.java", "diffHunk": "@@ -352,6 +365,7 @@ public void start()\n                 }\n \n                 PlanRoot plan = planQuery();\n+                registerDynamicFilteringQuery();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQxNDkxMg==", "bodyText": "DynamicFilterService needs plan to extract DF, so query registration has to happen after planning.\ndynamic filter suppliers are created in planDistribution just line below.\n\nRegistering query here removes the need to support query has not been registered yet case in DynamicFilterService, which simplifies #4224.\nI will add comment to code", "url": "https://github.com/trinodb/trino/pull/4228#discussion_r446414912", "createdAt": "2020-06-26T21:19:37Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryExecution.java", "diffHunk": "@@ -352,6 +365,7 @@ public void start()\n                 }\n \n                 PlanRoot plan = planQuery();\n+                registerDynamicFilteringQuery();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI1OTYzNA=="}, "originalCommit": null, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MDU4NTQwOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryExecution.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNTo0MDowMFrOGplj7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNTo0MDowMFrOGplj7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI2MDIwNw==", "bodyText": "Can we do this without the condition on isEnableDynamicFiltering?  If so, I would just for safety.", "url": "https://github.com/trinodb/trino/pull/4228#discussion_r446260207", "createdAt": "2020-06-26T15:40:00Z", "author": {"login": "dain"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryExecution.java", "diffHunk": "@@ -211,6 +199,31 @@ else if (state.isDone()) {\n         }\n     }\n \n+    private synchronized void registerDynamicFilteringQuery()\n+    {\n+        if (!isEnableDynamicFiltering(stateMachine.getSession())) {\n+            return;\n+        }\n+\n+        if (isDone()) {\n+            // query already finished\n+            return;\n+        }\n+\n+        dynamicFilterService.registerQuery(this);\n+    }\n+\n+    private synchronized void unregisterDynamicFilteringQuery()\n+    {\n+        if (!isEnableDynamicFiltering(stateMachine.getSession())) {\n+            return;\n+        }\n+\n+        if (isDone()) {\n+            dynamicFilterService.removeQuery(stateMachine.getQueryId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MDU4NzAyOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryExecution.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNTo0MDoyNlrOGplk3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMToxNjoxM1rOGpu7rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI2MDQ0Nw==", "bodyText": "Maybe merge these conditions", "url": "https://github.com/trinodb/trino/pull/4228#discussion_r446260447", "createdAt": "2020-06-26T15:40:26Z", "author": {"login": "dain"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryExecution.java", "diffHunk": "@@ -211,6 +199,31 @@ else if (state.isDone()) {\n         }\n     }\n \n+    private synchronized void registerDynamicFilteringQuery()\n+    {\n+        if (!isEnableDynamicFiltering(stateMachine.getSession())) {\n+            return;\n+        }\n+\n+        if (isDone()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQxMzc0Mw==", "bodyText": "I prefer to leave comment here as it's not obvious why we check this condition here. I've improved comment.", "url": "https://github.com/trinodb/trino/pull/4228#discussion_r446413743", "createdAt": "2020-06-26T21:16:13Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryExecution.java", "diffHunk": "@@ -211,6 +199,31 @@ else if (state.isDone()) {\n         }\n     }\n \n+    private synchronized void registerDynamicFilteringQuery()\n+    {\n+        if (!isEnableDynamicFiltering(stateMachine.getSession())) {\n+            return;\n+        }\n+\n+        if (isDone()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI2MDQ0Nw=="}, "originalCommit": null, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3950, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}