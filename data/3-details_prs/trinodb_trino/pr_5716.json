{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMzc2NzAx", "number": 5716, "title": "Introduce AbstractTestExtract", "bodyText": "cc @martint @choiwaiyiu\nrelates to #5626\nrelates to #5627", "createdAt": "2020-10-28T08:41:37Z", "url": "https://github.com/trinodb/trino/pull/5716", "merged": true, "mergeCommit": {"oid": "7bdc5b9eb3ce5824f404a8ff6312f52aa6ef0f72"}, "closed": true, "closedAt": "2020-11-04T09:02:59Z", "author": {"login": "findepi"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdW5fgJAH2gAyNTExMzc2NzAxOjFhZGUyZjc5NmMzNDMwY2FiOTAxMGUyODk4MjI0NzNmOGNmMDgyYjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYpntfAFqTUyMTkxOTgzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1ade2f796c3430cab9010e289822473f8cf082b4", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/1ade2f796c3430cab9010e289822473f8cf082b4", "committedDate": "2020-10-28T08:42:34Z", "message": "Fix getOnlyColumnAsSet() for nulls"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4f8d21efa0d1ce4719b7845b6336b8d20f1a3c4", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/b4f8d21efa0d1ce4719b7845b6336b8d20f1a3c4", "committedDate": "2020-10-28T08:42:43Z", "message": "Introduce AbstractTestExtract"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40c119f9699a8c1278a5f167ce3fe5b2474cf1fa", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/40c119f9699a8c1278a5f167ce3fe5b2474cf1fa", "committedDate": "2020-10-28T08:42:43Z", "message": "Add missing tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "40c119f9699a8c1278a5f167ce3fe5b2474cf1fa", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/40c119f9699a8c1278a5f167ce3fe5b2474cf1fa", "committedDate": "2020-10-28T08:42:43Z", "message": "Add missing tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxOTE5ODM5", "url": "https://github.com/trinodb/trino/pull/5716#pullrequestreview-521919839", "createdAt": "2020-11-02T19:10:29Z", "commit": {"oid": "b4f8d21efa0d1ce4719b7845b6336b8d20f1a3c4"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxOToxMDoyOVrOHsSHqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxOToxMDoyOVrOHsSHqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE5NjI2Nw==", "bodyText": "Catch and throw an error with a better message", "url": "https://github.com/trinodb/trino/pull/5716#discussion_r516196267", "createdAt": "2020-11-02T19:10:29Z", "author": {"login": "martint"}, "path": "presto-main/src/test/java/io/prestosql/operator/scalar/AbstractTestExtract.java", "diffHunk": "@@ -0,0 +1,170 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.operator.scalar;\n+\n+import com.google.common.base.CaseFormat;\n+import io.prestosql.spi.PrestoException;\n+import io.prestosql.sql.query.QueryAssertions;\n+import io.prestosql.sql.tree.Extract;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.util.List;\n+\n+import static java.lang.String.format;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+\n+public abstract class AbstractTestExtract\n+{\n+    protected QueryAssertions assertions;\n+\n+    @BeforeClass\n+    public void init()\n+    {\n+        assertions = new QueryAssertions();\n+    }\n+\n+    @AfterClass(alwaysRun = true)\n+    public void tearDown()\n+    {\n+        assertions.close();\n+        assertions = null;\n+    }\n+\n+    @Test\n+    public void testTestCompleteness()\n+            throws NoSuchMethodException\n+    {\n+        for (Extract.Field value : Extract.Field.values()) {\n+            String testMethodName = \"test\" + CaseFormat.UPPER_UNDERSCORE.to(CaseFormat.UPPER_CAMEL, value.name());\n+            this.getClass().getMethod(testMethodName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4f8d21efa0d1ce4719b7845b6336b8d20f1a3c4"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3191, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}