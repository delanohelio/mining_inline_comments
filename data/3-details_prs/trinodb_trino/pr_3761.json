{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4ODkwNDEy", "number": 3761, "title": "Use Instant to track session start time", "bodyText": "This is needed for higher precision version of the special\ndatetime functions (localtimestamp, current_timestamp, etc),\nsince Instant can provide nanosecond precision vs the current\nvalue in milliseconds.", "createdAt": "2020-05-16T00:51:57Z", "url": "https://github.com/trinodb/trino/pull/3761", "merged": true, "mergeCommit": {"oid": "7ff3ace9e84848943e4dbc232a9162fa14998d72"}, "closed": true, "closedAt": "2020-05-17T21:24:02Z", "author": {"login": "martint"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABch2CitAFqTQxMzA3Mzc1Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABciB5e-ABqjMzNDQxMTg4NzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDczNzUz", "url": "https://github.com/trinodb/trino/pull/3761#pullrequestreview-413073753", "createdAt": "2020-05-16T12:40:08Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxMjo0MDowOVrOGWaJVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxMjo0MjozNlrOGWaKCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE1MDIzMQ==", "bodyText": "rename field and ctor to start", "url": "https://github.com/trinodb/trino/pull/3761#discussion_r426150231", "createdAt": "2020-05-16T12:40:09Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/testing/TestingConnectorSession.java", "diffHunk": "@@ -48,7 +49,7 @@\n     private final TimeZoneKey timeZoneKey;\n     private final Locale locale;\n     private final Optional<String> traceToken;\n-    private final long startTime;\n+    private final Instant startTime;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE1MDI0Ng==", "bodyText": "start", "url": "https://github.com/trinodb/trino/pull/3761#discussion_r426150246", "createdAt": "2020-05-16T12:40:21Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/testing/TestingConnectorSession.java", "diffHunk": "@@ -164,7 +165,7 @@ public static Builder builder()\n         private TimeZoneKey timeZoneKey = UTC_KEY;\n         private final Locale locale = ENGLISH;\n         private final Optional<String> traceToken = Optional.empty();\n-        private Optional<Long> startTime = Optional.empty();\n+        private Optional<Instant> startTime = Optional.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE1MDI2Nw==", "bodyText": "setStart", "url": "https://github.com/trinodb/trino/pull/3761#discussion_r426150267", "createdAt": "2020-05-16T12:40:40Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/testing/TestingConnectorSession.java", "diffHunk": "@@ -181,7 +182,7 @@ public Builder setTimeZoneKey(TimeZoneKey timeZoneKey)\n             return this;\n         }\n \n-        public Builder setStartTime(long startTime)\n+        public Builder setStartTime(Instant startTime)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE1MDM1MQ==", "bodyText": "In session builder you can leave an overload taking millis, this would improve readability of the code here.", "url": "https://github.com/trinodb/trino/pull/3761#discussion_r426150351", "createdAt": "2020-05-16T12:41:55Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/operator/scalar/TestDateTimeFunctions.java", "diffHunk": "@@ -50,7 +52,7 @@ public void testFormatDateCannotImplicitlyAddTimeZoneToTimestampLiteral()\n     public void testLocalTime()\n     {\n         Session localSession = Session.builder(session)\n-                .setStartTime(new DateTime(2017, 3, 1, 14, 30, 0, 0, DATE_TIME_ZONE).getMillis())\n+                .setStartTime(Instant.ofEpochMilli(new DateTime(2017, 3, 1, 14, 30, 0, 0, DATE_TIME_ZONE).getMillis()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE1MDQxMA==", "bodyText": "add @Deprecated too?\n(should we have a static check?)", "url": "https://github.com/trinodb/trino/pull/3761#discussion_r426150410", "createdAt": "2020-05-16T12:42:36Z", "author": {"login": "findepi"}, "path": "presto-spi/src/main/java/io/prestosql/spi/connector/ConnectorSession.java", "diffHunk": "@@ -38,7 +39,15 @@ default String getUser()\n \n     Optional<String> getTraceToken();\n \n-    long getStartTime();\n+    /**\n+     * @deprecated use {@link #getStart()} instead\n+     */\n+    default long getStartTime()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18ff2e5ce83cdd91a4c8d48b8ab9b4f126f374b0", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/18ff2e5ce83cdd91a4c8d48b8ab9b4f126f374b0", "committedDate": "2020-05-17T02:31:59Z", "message": "Use Instant to track session start time\n\nThis is needed for higher precision version of the special\ndatetime functions (localtimestamp, current_timestamp, etc),\nsince Instant can provide nanosecond precision vs the current\nvalue in milliseconds."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "18ff2e5ce83cdd91a4c8d48b8ab9b4f126f374b0", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/18ff2e5ce83cdd91a4c8d48b8ab9b4f126f374b0", "committedDate": "2020-05-17T02:31:59Z", "message": "Use Instant to track session start time\n\nThis is needed for higher precision version of the special\ndatetime functions (localtimestamp, current_timestamp, etc),\nsince Instant can provide nanosecond precision vs the current\nvalue in milliseconds."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1134, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}