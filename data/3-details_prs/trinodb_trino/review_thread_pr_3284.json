{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1Njc1NjA2", "number": 3284, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxODoxNjoxMFrODsy68A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxODozMTozMFrODszRpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Mjk4MjI0OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxODoxNjoxMFrOF92Sqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMTo0Mjo0OFrOF99U9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM5Njk3MQ==", "bodyText": "Where execute is defined?", "url": "https://github.com/trinodb/trino/pull/3284#discussion_r400396971", "createdAt": "2020-03-30T18:16:10Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "diffHunk": "@@ -622,29 +621,18 @@ public void renameColumn(JdbcIdentity identity, JdbcTableHandle handle, JdbcColu\n     @Override\n     public void dropColumn(JdbcIdentity identity, JdbcTableHandle handle, JdbcColumnHandle column)\n     {\n-        try (Connection connection = connectionFactory.openConnection(identity)) {\n-            String sql = format(\n-                    \"ALTER TABLE %s DROP COLUMN %s\",\n-                    quoted(handle.getCatalogName(), handle.getSchemaName(), handle.getTableName()),\n-                    column.getColumnName());\n-            execute(connection, sql);\n-        }\n-        catch (SQLException e) {\n-            throw new PrestoException(JDBC_ERROR, e);\n-        }\n+        String sql = format(\n+                \"ALTER TABLE %s DROP COLUMN %s\",\n+                quoted(handle.getCatalogName(), handle.getSchemaName(), handle.getTableName()),\n+                column.getColumnName());\n+        execute(identity, sql);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUxMjI0Nw==", "bodyText": "in BaseJdbcClient", "url": "https://github.com/trinodb/trino/pull/3284#discussion_r400512247", "createdAt": "2020-03-30T21:42:48Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "diffHunk": "@@ -622,29 +621,18 @@ public void renameColumn(JdbcIdentity identity, JdbcTableHandle handle, JdbcColu\n     @Override\n     public void dropColumn(JdbcIdentity identity, JdbcTableHandle handle, JdbcColumnHandle column)\n     {\n-        try (Connection connection = connectionFactory.openConnection(identity)) {\n-            String sql = format(\n-                    \"ALTER TABLE %s DROP COLUMN %s\",\n-                    quoted(handle.getCatalogName(), handle.getSchemaName(), handle.getTableName()),\n-                    column.getColumnName());\n-            execute(connection, sql);\n-        }\n-        catch (SQLException e) {\n-            throw new PrestoException(JDBC_ERROR, e);\n-        }\n+        String sql = format(\n+                \"ALTER TABLE %s DROP COLUMN %s\",\n+                quoted(handle.getCatalogName(), handle.getSchemaName(), handle.getTableName()),\n+                column.getColumnName());\n+        execute(identity, sql);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM5Njk3MQ=="}, "originalCommit": null, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Mjk4NjE1OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxODoxNzoxOFrOF92VTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMTo0NjozMlrOF99cGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM5NzY0Nw==", "bodyText": "Maybe add logging to execute method so it could log all queries.", "url": "https://github.com/trinodb/trino/pull/3284#discussion_r400397647", "createdAt": "2020-03-30T18:17:18Z", "author": {"login": "kokosing"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "diffHunk": "@@ -622,29 +621,18 @@ public void renameColumn(JdbcIdentity identity, JdbcTableHandle handle, JdbcColu\n     @Override\n     public void dropColumn(JdbcIdentity identity, JdbcTableHandle handle, JdbcColumnHandle column)\n     {\n-        try (Connection connection = connectionFactory.openConnection(identity)) {\n-            String sql = format(\n-                    \"ALTER TABLE %s DROP COLUMN %s\",\n-                    quoted(handle.getCatalogName(), handle.getSchemaName(), handle.getTableName()),\n-                    column.getColumnName());\n-            execute(connection, sql);\n-        }\n-        catch (SQLException e) {\n-            throw new PrestoException(JDBC_ERROR, e);\n-        }\n+        String sql = format(", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUxNDA3Mg==", "bodyText": "it's already there", "url": "https://github.com/trinodb/trino/pull/3284#discussion_r400514072", "createdAt": "2020-03-30T21:46:32Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "diffHunk": "@@ -622,29 +621,18 @@ public void renameColumn(JdbcIdentity identity, JdbcTableHandle handle, JdbcColu\n     @Override\n     public void dropColumn(JdbcIdentity identity, JdbcTableHandle handle, JdbcColumnHandle column)\n     {\n-        try (Connection connection = connectionFactory.openConnection(identity)) {\n-            String sql = format(\n-                    \"ALTER TABLE %s DROP COLUMN %s\",\n-                    quoted(handle.getCatalogName(), handle.getSchemaName(), handle.getTableName()),\n-                    column.getColumnName());\n-            execute(connection, sql);\n-        }\n-        catch (SQLException e) {\n-            throw new PrestoException(JDBC_ERROR, e);\n-        }\n+        String sql = format(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM5NzY0Nw=="}, "originalCommit": null, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MzAzODM4OnYy", "diffSide": "LEFT", "path": "presto-redshift/src/main/java/io/prestosql/plugin/redshift/RedshiftClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxODozMDo1N1rOF9210g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMTo0MzozOVrOF99Wpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQwNTk3MA==", "bodyText": "Undo?", "url": "https://github.com/trinodb/trino/pull/3284#discussion_r400405970", "createdAt": "2020-03-30T18:30:57Z", "author": {"login": "kokosing"}, "path": "presto-redshift/src/main/java/io/prestosql/plugin/redshift/RedshiftClient.java", "diffHunk": "@@ -44,7 +44,7 @@ public RedshiftClient(BaseJdbcConfig config, ConnectionFactory connectionFactory\n     protected void renameTable(JdbcIdentity identity, String catalogName, String schemaName, String tableName, SchemaTableName newTable)\n     {\n         if (!schemaName.equals(newTable.getSchemaName())) {\n-            throw new PrestoException(NOT_SUPPORTED, \"Table rename across schemas is not supported in Redshift\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUxMjY3OQ==", "bodyText": "Intentional. We usually don't mention connector name in exception messages, so this is for consistency.", "url": "https://github.com/trinodb/trino/pull/3284#discussion_r400512679", "createdAt": "2020-03-30T21:43:39Z", "author": {"login": "findepi"}, "path": "presto-redshift/src/main/java/io/prestosql/plugin/redshift/RedshiftClient.java", "diffHunk": "@@ -44,7 +44,7 @@ public RedshiftClient(BaseJdbcConfig config, ConnectionFactory connectionFactory\n     protected void renameTable(JdbcIdentity identity, String catalogName, String schemaName, String tableName, SchemaTableName newTable)\n     {\n         if (!schemaName.equals(newTable.getSchemaName())) {\n-            throw new PrestoException(NOT_SUPPORTED, \"Table rename across schemas is not supported in Redshift\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQwNTk3MA=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MzA0MDM2OnYy", "diffSide": "RIGHT", "path": "presto-sqlserver/src/main/java/io/prestosql/plugin/sqlserver/SqlServerClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxODozMTozMFrOF923Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMTo0NzoxMVrOF99dWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQwNjMwMg==", "bodyText": "Separate commit, test?", "url": "https://github.com/trinodb/trino/pull/3284#discussion_r400406302", "createdAt": "2020-03-30T18:31:30Z", "author": {"login": "kokosing"}, "path": "presto-sqlserver/src/main/java/io/prestosql/plugin/sqlserver/SqlServerClient.java", "diffHunk": "@@ -72,6 +74,10 @@ public SqlServerClient(BaseJdbcConfig config, ConnectionFactory connectionFactor\n     @Override\n     protected void renameTable(JdbcIdentity identity, String catalogName, String schemaName, String tableName, SchemaTableName newTable)\n     {\n+        if (!schemaName.equals(newTable.getSchemaName())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUxMjkzMQ==", "bodyText": "Yes, that was intended as a separate commit.", "url": "https://github.com/trinodb/trino/pull/3284#discussion_r400512931", "createdAt": "2020-03-30T21:44:05Z", "author": {"login": "findepi"}, "path": "presto-sqlserver/src/main/java/io/prestosql/plugin/sqlserver/SqlServerClient.java", "diffHunk": "@@ -72,6 +74,10 @@ public SqlServerClient(BaseJdbcConfig config, ConnectionFactory connectionFactor\n     @Override\n     protected void renameTable(JdbcIdentity identity, String catalogName, String schemaName, String tableName, SchemaTableName newTable)\n     {\n+        if (!schemaName.equals(newTable.getSchemaName())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQwNjMwMg=="}, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUxNDM5Mw==", "bodyText": "i would like to test this in a generic manner, but we don't have two schemas set up. Let's me pause on this.", "url": "https://github.com/trinodb/trino/pull/3284#discussion_r400514393", "createdAt": "2020-03-30T21:47:11Z", "author": {"login": "findepi"}, "path": "presto-sqlserver/src/main/java/io/prestosql/plugin/sqlserver/SqlServerClient.java", "diffHunk": "@@ -72,6 +74,10 @@ public SqlServerClient(BaseJdbcConfig config, ConnectionFactory connectionFactor\n     @Override\n     protected void renameTable(JdbcIdentity identity, String catalogName, String schemaName, String tableName, SchemaTableName newTable)\n     {\n+        if (!schemaName.equals(newTable.getSchemaName())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQwNjMwMg=="}, "originalCommit": null, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 526, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}