{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYxODM3OTE3", "number": 4668, "title": "Add schema access rules documentation", "bodyText": "Fixes #4665", "createdAt": "2020-08-02T17:44:42Z", "url": "https://github.com/trinodb/trino/pull/4668", "merged": true, "mergeCommit": {"oid": "6abb38d14a8cd1527402c2a896675dfc97db7789"}, "closed": true, "closedAt": "2020-08-13T18:26:08Z", "author": {"login": "hashhar"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7BbvQgFqTQ1OTY2NzcyMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-kSUtgFqTQ2NzAyNDYyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NjY3NzIz", "url": "https://github.com/trinodb/trino/pull/4668#pullrequestreview-459667723", "createdAt": "2020-08-02T18:07:48Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxODowNzo0OVrOG6mzDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxODowNzo0OVrOG6mzDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwNjI1Mg==", "bodyText": "This is very \"wordy\". Any simpler suggestions?", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r464106252", "createdAt": "2020-08-02T18:07:49Z", "author": {"login": "hashhar"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -77,13 +77,15 @@ contents:\n \n The config file is specified in JSON format.\n \n-* It contains the rules defining which catalog can be accessed by which user (see Catalog Rules below).\n+* The catalog rules specifying which catalog can be accessed by which user (see Catalog Rules below).\n+* The schema rules specifying which users have ownership of which schemas (see Schema Rules below).\n+* The table rules specifying which privileges are granted to which users over which tables (see Table Rules below).", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NjY4MDA1", "url": "https://github.com/trinodb/trino/pull/4668#pullrequestreview-459668005", "createdAt": "2020-08-02T18:10:28Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxODoxMDoyOFrOG6m0tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxODoxMDoyOFrOG6m0tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwNjY3Nw==", "bodyText": "With the way the table rules are actually evaluated in the built-in SAC means that by if no table rules are provided all users are assumed to have all privileges (documented now in this PR).\nIn addition to this all tables in information_schema are always allowed regardless of the rules in the config file. Should this be documented?", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r464106677", "createdAt": "2020-08-02T18:10:28Z", "author": {"login": "hashhar"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -169,6 +171,55 @@ following rules:\n For group-based rules to match, users need to be assigned to groups by a\n :doc:`/develop/group-provider`.\n \n+.. _schema_rules:\n+\n+Schema Rules\n+------------\n+\n+These rules govern who is considered an owner of a schema. The user is granted\n+the privileges based on the first matching rule read from top to bottom. If no\n+rule matches, the user is not considered an owner of the schema. Each rule is\n+composed of the following fields:\n+\n+* ``user`` (optional): regex to match against user name. Defaults to ``.*``.\n+* ``group`` (optional): regex to match against group names. Defaults to ``.*``.\n+* ``schema`` (optional): regex to match against schema names. Defaults to ``.*``.\n+* ``owner`` (required): boolean indicating whether the user is to be considered\n+  an owner of the schema. Defaults to ``false``.\n+\n+For example, to provide ownership of all schemas to user ``admin``, treat all\n+users as owners of ``default`` schema and prevent user ``guest`` from ownership\n+of any schema, you can use the following rules:\n+\n+.. literalinclude:: schema-access.json\n+    :language: json\n+\n+.. _table_rules:\n+\n+Table Rules", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMTgzMDI3", "url": "https://github.com/trinodb/trino/pull/4668#pullrequestreview-460183027", "createdAt": "2020-08-03T16:50:15Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNjo1MDoxNVrOG7BAAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNjo1MDoxNVrOG7BAAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUzNTU1Mw==", "bodyText": "This whole sentence can be removed after the above list is done and contains all of these.", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r464535553", "createdAt": "2020-08-03T16:50:15Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -77,13 +77,15 @@ contents:\n \n The config file is specified in JSON format.\n \n-* It contains the rules defining which catalog can be accessed by which user (see Catalog Rules below).\n+* The catalog rules specifying which catalog can be accessed by which user (see Catalog Rules below).\n+* The schema rules specifying which users have ownership of which schemas (see Schema Rules below).\n+* The table rules specifying which privileges are granted to which users over which tables (see Table Rules below).\n * The query rules specifying which queries can be managed by which user (see Query Rules below).\n * The impersonation rules specify which user impersonations are allowed (see Impersonation Rules below).\n * The principal rules specifying what principals can identify as what users (see Principal Rules below).\n * The system information rules specifying what users can access system management information (see System Information Rules below).\n \n-This plugin currently supports catalog access, query, impersonation, principal, and system information\n+This plugin currently supports catalog, schema, table access, query, impersonation, principal, and system information", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMjkwMzU0", "url": "https://github.com/trinodb/trino/pull/4668#pullrequestreview-460290354", "createdAt": "2020-08-03T19:37:48Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTozNzo0OFrOG7GQnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTozNzo0OFrOG7GQnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYyMTcyNA==", "bodyText": "Personally I would just inline the code snippet in a code block .. wdyt @electrum ?", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r464621724", "createdAt": "2020-08-03T19:37:48Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -169,6 +171,55 @@ following rules:\n For group-based rules to match, users need to be assigned to groups by a\n :doc:`/develop/group-provider`.\n \n+.. _schema_rules:\n+\n+Schema Rules\n+------------\n+\n+These rules govern who is considered an owner of a schema. The user is granted\n+the privileges based on the first matching rule read from top to bottom. If no\n+rule matches, the user is not considered an owner of the schema. Each rule is\n+composed of the following fields:\n+\n+* ``user`` (optional): regex to match against user name. Defaults to ``.*``.\n+* ``group`` (optional): regex to match against group names. Defaults to ``.*``.\n+* ``schema`` (optional): regex to match against schema names. Defaults to ``.*``.\n+* ``owner`` (required): boolean indicating whether the user is to be considered\n+  an owner of the schema. Defaults to ``false``.\n+\n+For example, to provide ownership of all schemas to user ``admin``, treat all\n+users as owners of ``default`` schema and prevent user ``guest`` from ownership\n+of any schema, you can use the following rules:\n+\n+.. literalinclude:: schema-access.json", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMjkxNjQ5", "url": "https://github.com/trinodb/trino/pull/4668#pullrequestreview-460291649", "createdAt": "2020-08-03T19:40:09Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTo0MDowOVrOG7GUyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTo0MDowOVrOG7GUyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYyMjc5Mw==", "bodyText": "The matching being done in order applies to all rules and should be explained in an earlier section.", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r464622793", "createdAt": "2020-08-03T19:40:09Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -169,6 +171,55 @@ following rules:\n For group-based rules to match, users need to be assigned to groups by a\n :doc:`/develop/group-provider`.\n \n+.. _schema_rules:\n+\n+Schema Rules\n+------------\n+\n+These rules govern who is considered an owner of a schema. The user is granted\n+the privileges based on the first matching rule read from top to bottom. If no", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMjkyMzg2", "url": "https://github.com/trinodb/trino/pull/4668#pullrequestreview-460292386", "createdAt": "2020-08-03T19:41:27Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTo0MToyOFrOG7GXSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTo0MToyOFrOG7GXSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYyMzQzNA==", "bodyText": "Schema rules allow you to grant ownership of a schema.", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r464623434", "createdAt": "2020-08-03T19:41:28Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -169,6 +171,55 @@ following rules:\n For group-based rules to match, users need to be assigned to groups by a\n :doc:`/develop/group-provider`.\n \n+.. _schema_rules:\n+\n+Schema Rules\n+------------\n+\n+These rules govern who is considered an owner of a schema. The user is granted", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMjkzMDAz", "url": "https://github.com/trinodb/trino/pull/4668#pullrequestreview-460293003", "createdAt": "2020-08-03T19:42:37Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTo0MjozOFrOG7GZOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTo0MjozOFrOG7GZOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYyMzkyOA==", "bodyText": "Tables rules define privileges for table access.", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r464623928", "createdAt": "2020-08-03T19:42:38Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -169,6 +171,55 @@ following rules:\n For group-based rules to match, users need to be assigned to groups by a\n :doc:`/develop/group-provider`.\n \n+.. _schema_rules:\n+\n+Schema Rules\n+------------\n+\n+These rules govern who is considered an owner of a schema. The user is granted\n+the privileges based on the first matching rule read from top to bottom. If no\n+rule matches, the user is not considered an owner of the schema. Each rule is\n+composed of the following fields:\n+\n+* ``user`` (optional): regex to match against user name. Defaults to ``.*``.\n+* ``group`` (optional): regex to match against group names. Defaults to ``.*``.\n+* ``schema`` (optional): regex to match against schema names. Defaults to ``.*``.\n+* ``owner`` (required): boolean indicating whether the user is to be considered\n+  an owner of the schema. Defaults to ``false``.\n+\n+For example, to provide ownership of all schemas to user ``admin``, treat all\n+users as owners of ``default`` schema and prevent user ``guest`` from ownership\n+of any schema, you can use the following rules:\n+\n+.. literalinclude:: schema-access.json\n+    :language: json\n+\n+.. _table_rules:\n+\n+Table Rules\n+-----------\n+\n+These rules govern the privileges granted to users on tables. The user is", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMjkzOTc5", "url": "https://github.com/trinodb/trino/pull/4668#pullrequestreview-460293979", "createdAt": "2020-08-03T19:44:29Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTo0NDozMFrOG7GcQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTo0NDozMFrOG7GcQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYyNDcwNg==", "bodyText": "Break this sentence up into a list of what happens... something like:\nThe following rules define the following table access:\n\ngrant all privileges to the user admin on all tables in all schemas\n...", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r464624706", "createdAt": "2020-08-03T19:44:30Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -169,6 +171,55 @@ following rules:\n For group-based rules to match, users need to be assigned to groups by a\n :doc:`/develop/group-provider`.\n \n+.. _schema_rules:\n+\n+Schema Rules\n+------------\n+\n+These rules govern who is considered an owner of a schema. The user is granted\n+the privileges based on the first matching rule read from top to bottom. If no\n+rule matches, the user is not considered an owner of the schema. Each rule is\n+composed of the following fields:\n+\n+* ``user`` (optional): regex to match against user name. Defaults to ``.*``.\n+* ``group`` (optional): regex to match against group names. Defaults to ``.*``.\n+* ``schema`` (optional): regex to match against schema names. Defaults to ``.*``.\n+* ``owner`` (required): boolean indicating whether the user is to be considered\n+  an owner of the schema. Defaults to ``false``.\n+\n+For example, to provide ownership of all schemas to user ``admin``, treat all\n+users as owners of ``default`` schema and prevent user ``guest`` from ownership\n+of any schema, you can use the following rules:\n+\n+.. literalinclude:: schema-access.json\n+    :language: json\n+\n+.. _table_rules:\n+\n+Table Rules\n+-----------\n+\n+These rules govern the privileges granted to users on tables. The user is\n+granted the privileges based on the first matching rule read from top to\n+bottom. If no rule matches, the user is assumed to have no privileges on the\n+table. If no table rules are specified, all users are treated as having all\n+privileges by default. Each rule is composed of the following fields:\n+\n+* ``user`` (optional): regex to match against user name. Defaults to ``.*``.\n+* ``group`` (optional): regex to match against group names. Defaults to ``.*``.\n+* ``schema`` (optional): regex to match against schema names. Defaults to ``.*``.\n+* ``table`` (optional): regex to match against table names. Defaults to ``.*``.\n+* ``privileges`` (required): zero or more of ``SELECT``, ``INSERT``,\n+  ``DELETE``, ``OWNERSHIP``, ``GRANT_SELECT``\n+\n+For example, to allow a user ``admin`` all privileges on all tables in all", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMjk0MDk0", "url": "https://github.com/trinodb/trino/pull/4668#pullrequestreview-460294094", "createdAt": "2020-08-03T19:44:43Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTo0NDo0M1rOG7GcoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTo0NDo0M1rOG7GcoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYyNDgwMA==", "bodyText": "Probably also inline", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r464624800", "createdAt": "2020-08-03T19:44:43Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -169,6 +171,55 @@ following rules:\n For group-based rules to match, users need to be assigned to groups by a\n :doc:`/develop/group-provider`.\n \n+.. _schema_rules:\n+\n+Schema Rules\n+------------\n+\n+These rules govern who is considered an owner of a schema. The user is granted\n+the privileges based on the first matching rule read from top to bottom. If no\n+rule matches, the user is not considered an owner of the schema. Each rule is\n+composed of the following fields:\n+\n+* ``user`` (optional): regex to match against user name. Defaults to ``.*``.\n+* ``group`` (optional): regex to match against group names. Defaults to ``.*``.\n+* ``schema`` (optional): regex to match against schema names. Defaults to ``.*``.\n+* ``owner`` (required): boolean indicating whether the user is to be considered\n+  an owner of the schema. Defaults to ``false``.\n+\n+For example, to provide ownership of all schemas to user ``admin``, treat all\n+users as owners of ``default`` schema and prevent user ``guest`` from ownership\n+of any schema, you can use the following rules:\n+\n+.. literalinclude:: schema-access.json\n+    :language: json\n+\n+.. _table_rules:\n+\n+Table Rules\n+-----------\n+\n+These rules govern the privileges granted to users on tables. The user is\n+granted the privileges based on the first matching rule read from top to\n+bottom. If no rule matches, the user is assumed to have no privileges on the\n+table. If no table rules are specified, all users are treated as having all\n+privileges by default. Each rule is composed of the following fields:\n+\n+* ``user`` (optional): regex to match against user name. Defaults to ``.*``.\n+* ``group`` (optional): regex to match against group names. Defaults to ``.*``.\n+* ``schema`` (optional): regex to match against schema names. Defaults to ``.*``.\n+* ``table`` (optional): regex to match against table names. Defaults to ``.*``.\n+* ``privileges`` (required): zero or more of ``SELECT``, ``INSERT``,\n+  ``DELETE``, ``OWNERSHIP``, ``GRANT_SELECT``\n+\n+For example, to allow a user ``admin`` all privileges on all tables in all\n+schemas, disallow all privileges to user ``banned_user`` and allow ``SELECT``\n+privileges to all users on any table in ``default`` schema, you can use the\n+following rules:\n+\n+.. literalinclude:: table-access.json", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyOTI2NzU1", "url": "https://github.com/trinodb/trino/pull/4668#pullrequestreview-462926755", "createdAt": "2020-08-06T22:50:52Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNDY5MjIz", "url": "https://github.com/trinodb/trino/pull/4668#pullrequestreview-463469223", "createdAt": "2020-08-07T17:06:13Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzowNjoxM1rOG9hX-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzowNjoxM1rOG9hX-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE2MzEzMQ==", "bodyText": "We should avoid adding refs for links within the same document. They duplicate the built-in anchors for section titles, and the names are global within Sphinx, so care must be taken when naming. Instead, you can link to the built-in section anchors:\n* `Catalogs <#catalog-rules>`__", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r467163131", "createdAt": "2020-08-07T17:06:13Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -75,18 +75,23 @@ contents:\n    access-control.name=file\n    security.config-file=etc/rules.json\n \n-The config file is specified in JSON format.\n+The config file is specified in JSON format. It contains rules that define\n+which users have access to which resources:\n \n-* It contains the rules defining which catalog can be accessed by which user (see Catalog Rules below).\n-* The query rules specifying which queries can be managed by which user (see Query Rules below).\n-* The impersonation rules specify which user impersonations are allowed (see Impersonation Rules below).\n-* The principal rules specifying what principals can identify as what users (see Principal Rules below).\n-* The system information rules specifying what users can access system management information (see System Information Rules below).\n+* :ref:`Catalogs <catalog_rules>`", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNDcwMzA0", "url": "https://github.com/trinodb/trino/pull/4668#pullrequestreview-463470304", "createdAt": "2020-08-07T17:08:03Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzowODowM1rOG9hbaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxOTo1OTo0MlrOG9mOxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE2NDAwOA==", "bodyText": "Let's write this as\nyou must implement a custom :doc:`/develop/system-access-control`.", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r467164008", "createdAt": "2020-08-07T17:08:03Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -75,18 +75,23 @@ contents:\n    access-control.name=file\n    security.config-file=etc/rules.json\n \n-The config file is specified in JSON format.\n+The config file is specified in JSON format. It contains rules that define\n+which users have access to which resources:\n \n-* It contains the rules defining which catalog can be accessed by which user (see Catalog Rules below).\n-* The query rules specifying which queries can be managed by which user (see Query Rules below).\n-* The impersonation rules specify which user impersonations are allowed (see Impersonation Rules below).\n-* The principal rules specifying what principals can identify as what users (see Principal Rules below).\n-* The system information rules specifying what users can access system management information (see System Information Rules below).\n+* :ref:`Catalogs <catalog_rules>`\n+* :ref:`Schemas <schema_rules>`\n+* :ref:`Tables <table_rules>`\n+* :ref:`Queries <query_rules>`\n+* :ref:`Impersonation <impersonation_rules>`\n+* :ref:`Principals <principal_rules>`\n+* :ref:`System Information <system_information_rules>`\n \n-This plugin currently supports catalog access, query, impersonation, principal, and system information\n-rules. If you want to limit access on a system level in any other way, you\n-must implement a custom SystemAccessControl plugin\n-(see :doc:`/develop/system-access-control`).\n+The rules are read from top to bottom and the first matching rule\n+is applied. If no rule matches, access is denied.\n+\n+If you want to limit access on a system level in any other way than the ones\n+listed above, you must implement a custom SystemAccessControl plugin (see", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE2NDg4Mw==", "bodyText": "Add \"and\" before last item in list", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r467164883", "createdAt": "2020-08-07T17:09:46Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -169,14 +173,65 @@ following rules:\n For group-based rules to match, users need to be assigned to groups by a\n :doc:`/develop/group-provider`.\n \n+.. _schema_rules:\n+\n+Schema Rules\n+------------\n+\n+These rules allow you to grant ownership of a schema. Having ownership of an\n+schema allows users to execute ``DROP SCHEMA``, ``ALTER SCHEMA`` (both renaming\n+and setting authorization), ``SHOW CREATE SCHEMA``. Each rule is composed of", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE2NTMxMw==", "bodyText": "name -> names\nSince there is only one schema to match (in the context of the rule)", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r467165313", "createdAt": "2020-08-07T17:10:38Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -169,14 +173,65 @@ following rules:\n For group-based rules to match, users need to be assigned to groups by a\n :doc:`/develop/group-provider`.\n \n+.. _schema_rules:\n+\n+Schema Rules\n+------------\n+\n+These rules allow you to grant ownership of a schema. Having ownership of an\n+schema allows users to execute ``DROP SCHEMA``, ``ALTER SCHEMA`` (both renaming\n+and setting authorization), ``SHOW CREATE SCHEMA``. Each rule is composed of\n+the following fields:\n+\n+* ``user`` (optional): regex to match against user name. Defaults to ``.*``.\n+* ``group`` (optional): regex to match against group names. Defaults to ``.*``.\n+* ``schema`` (optional): regex to match against schema names. Defaults to ``.*``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE2NTcwMA==", "bodyText": "Agreed, this seems preferable here.", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r467165700", "createdAt": "2020-08-07T17:11:25Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -169,6 +171,55 @@ following rules:\n For group-based rules to match, users need to be assigned to groups by a\n :doc:`/develop/group-provider`.\n \n+.. _schema_rules:\n+\n+Schema Rules\n+------------\n+\n+These rules govern who is considered an owner of a schema. The user is granted\n+the privileges based on the first matching rule read from top to bottom. If no\n+rule matches, the user is not considered an owner of the schema. Each rule is\n+composed of the following fields:\n+\n+* ``user`` (optional): regex to match against user name. Defaults to ``.*``.\n+* ``group`` (optional): regex to match against group names. Defaults to ``.*``.\n+* ``schema`` (optional): regex to match against schema names. Defaults to ``.*``.\n+* ``owner`` (required): boolean indicating whether the user is to be considered\n+  an owner of the schema. Defaults to ``false``.\n+\n+For example, to provide ownership of all schemas to user ``admin``, treat all\n+users as owners of ``default`` schema and prevent user ``guest`` from ownership\n+of any schema, you can use the following rules:\n+\n+.. literalinclude:: schema-access.json", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYyMTcyNA=="}, "originalCommit": null, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE2NTgzOQ==", "bodyText": "names -> name", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r467165839", "createdAt": "2020-08-07T17:11:43Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -169,14 +173,65 @@ following rules:\n For group-based rules to match, users need to be assigned to groups by a\n :doc:`/develop/group-provider`.\n \n+.. _schema_rules:\n+\n+Schema Rules\n+------------\n+\n+These rules allow you to grant ownership of a schema. Having ownership of an\n+schema allows users to execute ``DROP SCHEMA``, ``ALTER SCHEMA`` (both renaming\n+and setting authorization), ``SHOW CREATE SCHEMA``. Each rule is composed of\n+the following fields:\n+\n+* ``user`` (optional): regex to match against user name. Defaults to ``.*``.\n+* ``group`` (optional): regex to match against group names. Defaults to ``.*``.\n+* ``schema`` (optional): regex to match against schema names. Defaults to ``.*``.\n+* ``owner`` (required): boolean indicating whether the user is to be considered\n+  an owner of the schema. Defaults to ``false``.\n+\n+For example, to provide ownership of all schemas to user ``admin``, treat all\n+users as owners of ``default`` schema and prevent user ``guest`` from ownership\n+of any schema, you can use the following rules:\n+\n+.. literalinclude:: schema-access.json\n+    :language: json\n+\n+.. _table_rules:\n+\n+Table Rules\n+-----------\n+\n+These rules define the privileges for table access for users. If no table rules\n+are specified, all users are treated as having all privileges by default. Each\n+rule is composed of the following fields:\n+\n+* ``user`` (optional): regex to match against user name. Defaults to ``.*``.\n+* ``group`` (optional): regex to match against group names. Defaults to ``.*``.\n+* ``schema`` (optional): regex to match against schema names. Defaults to ``.*``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0MDUzMg==", "bodyText": "This seems misleading, since metadata access like information_schema has its own security restrictions. Perhaps this should say\n.. note:: These rules do not apply to ``information_schema``.", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r467240532", "createdAt": "2020-08-07T19:54:50Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -169,14 +173,65 @@ following rules:\n For group-based rules to match, users need to be assigned to groups by a\n :doc:`/develop/group-provider`.\n \n+.. _schema_rules:\n+\n+Schema Rules\n+------------\n+\n+These rules allow you to grant ownership of a schema. Having ownership of an\n+schema allows users to execute ``DROP SCHEMA``, ``ALTER SCHEMA`` (both renaming\n+and setting authorization), ``SHOW CREATE SCHEMA``. Each rule is composed of\n+the following fields:\n+\n+* ``user`` (optional): regex to match against user name. Defaults to ``.*``.\n+* ``group`` (optional): regex to match against group names. Defaults to ``.*``.\n+* ``schema`` (optional): regex to match against schema names. Defaults to ``.*``.\n+* ``owner`` (required): boolean indicating whether the user is to be considered\n+  an owner of the schema. Defaults to ``false``.\n+\n+For example, to provide ownership of all schemas to user ``admin``, treat all\n+users as owners of ``default`` schema and prevent user ``guest`` from ownership\n+of any schema, you can use the following rules:\n+\n+.. literalinclude:: schema-access.json\n+    :language: json\n+\n+.. _table_rules:\n+\n+Table Rules\n+-----------\n+\n+These rules define the privileges for table access for users. If no table rules\n+are specified, all users are treated as having all privileges by default. Each\n+rule is composed of the following fields:\n+\n+* ``user`` (optional): regex to match against user name. Defaults to ``.*``.\n+* ``group`` (optional): regex to match against group names. Defaults to ``.*``.\n+* ``schema`` (optional): regex to match against schema names. Defaults to ``.*``.\n+* ``table`` (optional): regex to match against table names. Defaults to ``.*``.\n+* ``privileges`` (required): zero or more of ``SELECT``, ``INSERT``,\n+  ``DELETE``, ``OWNERSHIP``, ``GRANT_SELECT``\n+\n+.. note::\n+\n+    Users always have all privileges on all tables in the ``information_schema``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0MTA0OQ==", "bodyText": "The example below defines the following table access policy:", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r467241049", "createdAt": "2020-08-07T19:55:55Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -169,14 +173,65 @@ following rules:\n For group-based rules to match, users need to be assigned to groups by a\n :doc:`/develop/group-provider`.\n \n+.. _schema_rules:\n+\n+Schema Rules\n+------------\n+\n+These rules allow you to grant ownership of a schema. Having ownership of an\n+schema allows users to execute ``DROP SCHEMA``, ``ALTER SCHEMA`` (both renaming\n+and setting authorization), ``SHOW CREATE SCHEMA``. Each rule is composed of\n+the following fields:\n+\n+* ``user`` (optional): regex to match against user name. Defaults to ``.*``.\n+* ``group`` (optional): regex to match against group names. Defaults to ``.*``.\n+* ``schema`` (optional): regex to match against schema names. Defaults to ``.*``.\n+* ``owner`` (required): boolean indicating whether the user is to be considered\n+  an owner of the schema. Defaults to ``false``.\n+\n+For example, to provide ownership of all schemas to user ``admin``, treat all\n+users as owners of ``default`` schema and prevent user ``guest`` from ownership\n+of any schema, you can use the following rules:\n+\n+.. literalinclude:: schema-access.json\n+    :language: json\n+\n+.. _table_rules:\n+\n+Table Rules\n+-----------\n+\n+These rules define the privileges for table access for users. If no table rules\n+are specified, all users are treated as having all privileges by default. Each\n+rule is composed of the following fields:\n+\n+* ``user`` (optional): regex to match against user name. Defaults to ``.*``.\n+* ``group`` (optional): regex to match against group names. Defaults to ``.*``.\n+* ``schema`` (optional): regex to match against schema names. Defaults to ``.*``.\n+* ``table`` (optional): regex to match against table names. Defaults to ``.*``.\n+* ``privileges`` (required): zero or more of ``SELECT``, ``INSERT``,\n+  ``DELETE``, ``OWNERSHIP``, ``GRANT_SELECT``\n+\n+.. note::\n+\n+    Users always have all privileges on all tables in the ``information_schema``.\n+\n+The following rules define the following table access policy:", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0MTg5OA==", "bodyText": "It's fine to repeat the \"top to bottom\" information here. A user might visit this section directly, without having read the introduction at the top. It's one extra sentence, so repeating it doesn't hurt readability, and serves to reinforce the concept.", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r467241898", "createdAt": "2020-08-07T19:57:45Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -99,14 +104,13 @@ Presto restart. The refresh period is specified in the ``etc/access-control.prop\n \n    security.refresh-period=1s\n \n+.. _catalog_rules:\n \n Catalog Rules\n -------------\n \n-These rules govern the catalogs particular users can access. The user is", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0MjQ3NQ==", "bodyText": "Let's add the \"top to bottom\" information here to be consistent with other sections.", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r467242475", "createdAt": "2020-08-07T19:59:11Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -169,14 +173,65 @@ following rules:\n For group-based rules to match, users need to be assigned to groups by a\n :doc:`/develop/group-provider`.\n \n+.. _schema_rules:\n+\n+Schema Rules\n+------------\n+\n+These rules allow you to grant ownership of a schema. Having ownership of an", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0MjU1NA==", "bodyText": "Add \"top to bottom\"", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r467242554", "createdAt": "2020-08-07T19:59:21Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -169,14 +173,65 @@ following rules:\n For group-based rules to match, users need to be assigned to groups by a\n :doc:`/develop/group-provider`.\n \n+.. _schema_rules:\n+\n+Schema Rules\n+------------\n+\n+These rules allow you to grant ownership of a schema. Having ownership of an\n+schema allows users to execute ``DROP SCHEMA``, ``ALTER SCHEMA`` (both renaming\n+and setting authorization), ``SHOW CREATE SCHEMA``. Each rule is composed of\n+the following fields:\n+\n+* ``user`` (optional): regex to match against user name. Defaults to ``.*``.\n+* ``group`` (optional): regex to match against group names. Defaults to ``.*``.\n+* ``schema`` (optional): regex to match against schema names. Defaults to ``.*``.\n+* ``owner`` (required): boolean indicating whether the user is to be considered\n+  an owner of the schema. Defaults to ``false``.\n+\n+For example, to provide ownership of all schemas to user ``admin``, treat all\n+users as owners of ``default`` schema and prevent user ``guest`` from ownership\n+of any schema, you can use the following rules:\n+\n+.. literalinclude:: schema-access.json\n+    :language: json\n+\n+.. _table_rules:\n+\n+Table Rules\n+-----------\n+\n+These rules define the privileges for table access for users. If no table rules", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0MjYwNg==", "bodyText": "Same, keep \"top to bottom\"", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r467242606", "createdAt": "2020-08-07T19:59:30Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -169,14 +173,65 @@ following rules:\n For group-based rules to match, users need to be assigned to groups by a\n :doc:`/develop/group-provider`.\n \n+.. _schema_rules:\n+\n+Schema Rules\n+------------\n+\n+These rules allow you to grant ownership of a schema. Having ownership of an\n+schema allows users to execute ``DROP SCHEMA``, ``ALTER SCHEMA`` (both renaming\n+and setting authorization), ``SHOW CREATE SCHEMA``. Each rule is composed of\n+the following fields:\n+\n+* ``user`` (optional): regex to match against user name. Defaults to ``.*``.\n+* ``group`` (optional): regex to match against group names. Defaults to ``.*``.\n+* ``schema`` (optional): regex to match against schema names. Defaults to ``.*``.\n+* ``owner`` (required): boolean indicating whether the user is to be considered\n+  an owner of the schema. Defaults to ``false``.\n+\n+For example, to provide ownership of all schemas to user ``admin``, treat all\n+users as owners of ``default`` schema and prevent user ``guest`` from ownership\n+of any schema, you can use the following rules:\n+\n+.. literalinclude:: schema-access.json\n+    :language: json\n+\n+.. _table_rules:\n+\n+Table Rules\n+-----------\n+\n+These rules define the privileges for table access for users. If no table rules\n+are specified, all users are treated as having all privileges by default. Each\n+rule is composed of the following fields:\n+\n+* ``user`` (optional): regex to match against user name. Defaults to ``.*``.\n+* ``group`` (optional): regex to match against group names. Defaults to ``.*``.\n+* ``schema`` (optional): regex to match against schema names. Defaults to ``.*``.\n+* ``table`` (optional): regex to match against table names. Defaults to ``.*``.\n+* ``privileges`` (required): zero or more of ``SELECT``, ``INSERT``,\n+  ``DELETE``, ``OWNERSHIP``, ``GRANT_SELECT``\n+\n+.. note::\n+\n+    Users always have all privileges on all tables in the ``information_schema``.\n+\n+The following rules define the following table access policy:\n+\n+* User ``admin`` has all privileges across all tables and schemas\n+* User ``banned_user`` has no privileges\n+* All users have ``SELECT`` privileges on all tables in ``default`` schema\n+\n+.. literalinclude:: table-access.json\n+    :language: json\n+\n .. _query_rules:\n \n Query Rules\n -----------\n \n-These rules control the ability of a user to execute, view, or kill a query. The user is", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0MjY3NA==", "bodyText": "Same, keep \"top to bottom\"", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r467242674", "createdAt": "2020-08-07T19:59:39Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -207,8 +262,7 @@ authenticates using their credentials, and then submits a query as a different\n user.  When the user context is changed, Presto will verify the administrator\n is authorized to run queries as the target user.\n \n-When these rules are present, the authorization is based on the first matching rule,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0MjY5Mg==", "bodyText": "Same, keep \"top to bottom\"", "url": "https://github.com/trinodb/trino/pull/4668#discussion_r467242692", "createdAt": "2020-08-07T19:59:42Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/security/built-in-system-access-control.rst", "diffHunk": "@@ -317,8 +371,7 @@ System Information Rules\n ------------------------\n \n These rules specify which users can access the system information management interface.\n-The user is granted or denied access, based on the first matching rule read from top to", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 135}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11c3337c8b1a14fbd3a6d6093b35728b7bf3b8c0", "author": {"user": {"login": "hashhar", "name": "Ashhar Hasan"}}, "url": "https://github.com/trinodb/trino/commit/11c3337c8b1a14fbd3a6d6093b35728b7bf3b8c0", "committedDate": "2020-08-07T21:17:59Z", "message": "Add schema and table access rules documentation\n\nFixes #4665"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MDI0NjI2", "url": "https://github.com/trinodb/trino/pull/4668#pullrequestreview-467024626", "createdAt": "2020-08-13T18:25:59Z", "commit": {"oid": "11c3337c8b1a14fbd3a6d6093b35728b7bf3b8c0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4593, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}