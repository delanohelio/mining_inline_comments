{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2OTk2MzE0", "number": 5043, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMjoxNzoxN1rOEf9p7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOToxNDowN1rOEidC6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTUxNDcwOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/server/DynamicFilterService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMjoxNzoxN1rOHMj4tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMzoxNTo0N1rOHMmDkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkzMjkxOA==", "bodyText": "Should there be short-circuiting here to declare the filter as complete as soon as one of the filters is an all ? (and equivalent change in isBlocked)", "url": "https://github.com/trinodb/trino/pull/5043#discussion_r482932918", "createdAt": "2020-09-03T12:17:17Z", "author": {"login": "raunaqmorarka"}, "path": "presto-main/src/main/java/io/prestosql/server/DynamicFilterService.java", "diffHunk": "@@ -223,8 +224,7 @@ public DynamicFilter createDynamicFilter(QueryId queryId, List<DynamicFilters.De\n             @Override\n             public boolean isComplete()\n             {\n-                return dynamicFilters.stream()\n-                        .allMatch(context.getDynamicFilterSummaries()::containsKey);\n+                return lazyDynamicFilterFutures.stream().allMatch(Future::isDone);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk2ODQ2Ng==", "bodyText": "we intersect multiple DFs, ignore the above", "url": "https://github.com/trinodb/trino/pull/5043#discussion_r482968466", "createdAt": "2020-09-03T13:15:47Z", "author": {"login": "raunaqmorarka"}, "path": "presto-main/src/main/java/io/prestosql/server/DynamicFilterService.java", "diffHunk": "@@ -223,8 +224,7 @@ public DynamicFilter createDynamicFilter(QueryId queryId, List<DynamicFilters.De\n             @Override\n             public boolean isComplete()\n             {\n-                return dynamicFilters.stream()\n-                        .allMatch(context.getDynamicFilterSummaries()::containsKey);\n+                return lazyDynamicFilterFutures.stream().allMatch(Future::isDone);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkzMjkxOA=="}, "originalCommit": null, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NTYwNzE3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/sql/planner/LocalDynamicFiltersCollector.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOToxMDoxOVrOHQVVxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMTowMzozN1rOHQacDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg4ODkwMA==", "bodyText": "or !isBlocked.isDone() ?", "url": "https://github.com/trinodb/trino/pull/5043#discussion_r486888900", "createdAt": "2020-09-11T09:10:19Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/LocalDynamicFiltersCollector.java", "diffHunk": "@@ -154,6 +154,12 @@ public synchronized boolean isComplete()\n             return futuresLeft == 0;\n         }\n \n+        @Override\n+        public synchronized boolean isAwaitable()\n+        {\n+            return futuresLeft > 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjkxOTYxMA==", "bodyText": "isBlocked will unblock when DF is narrowed down partially, but DF is still awaitable", "url": "https://github.com/trinodb/trino/pull/5043#discussion_r486919610", "createdAt": "2020-09-11T09:40:58Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/LocalDynamicFiltersCollector.java", "diffHunk": "@@ -154,6 +154,12 @@ public synchronized boolean isComplete()\n             return futuresLeft == 0;\n         }\n \n+        @Override\n+        public synchronized boolean isAwaitable()\n+        {\n+            return futuresLeft > 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg4ODkwMA=="}, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk2MTk3Ng==", "bodyText": "Yes, but then new isBlocked should be created, right?\nSo, in every moment current value of isBlocked.isBlocked() could be used here -- am i right?", "url": "https://github.com/trinodb/trino/pull/5043#discussion_r486961976", "createdAt": "2020-09-11T10:40:19Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/LocalDynamicFiltersCollector.java", "diffHunk": "@@ -154,6 +154,12 @@ public synchronized boolean isComplete()\n             return futuresLeft == 0;\n         }\n \n+        @Override\n+        public synchronized boolean isAwaitable()\n+        {\n+            return futuresLeft > 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg4ODkwMA=="}, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk3MjQyOA==", "bodyText": "Yes, but then new isBlocked should be created, right?\n\nAh, right. Although futuresLeft > 0; seems more explicit", "url": "https://github.com/trinodb/trino/pull/5043#discussion_r486972428", "createdAt": "2020-09-11T11:03:37Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/LocalDynamicFiltersCollector.java", "diffHunk": "@@ -154,6 +154,12 @@ public synchronized boolean isComplete()\n             return futuresLeft == 0;\n         }\n \n+        @Override\n+        public synchronized boolean isAwaitable()\n+        {\n+            return futuresLeft > 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg4ODkwMA=="}, "originalCommit": null, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NTYxNTcwOnYy", "diffSide": "RIGHT", "path": "presto-spi/src/main/java/io/prestosql/spi/connector/DynamicFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOToxMTo0MlrOHQVbog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOToxMTo0MlrOHQVbog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg5MDQwMg==", "bodyText": "Grammar wise it could be phrased as\nReturns a future, which ...", "url": "https://github.com/trinodb/trino/pull/5043#discussion_r486890402", "createdAt": "2020-09-11T09:11:42Z", "author": {"login": "findepi"}, "path": "presto-spi/src/main/java/io/prestosql/spi/connector/DynamicFilter.java", "diffHunk": "@@ -43,7 +49,9 @@ public boolean isComplete()\n     };\n \n     /**\n-     * Block until dynamic filter is narrowed down.\n+     * Returned future blocks until dynamic filter is narrowed down. Future\n+     * completes immediately if filter cannot be narrowed down more or filter\n+     * cannot be waited for (consult result of {@link DynamicFilter#isAwaitable()} method).", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NTYyNTgyOnYy", "diffSide": "RIGHT", "path": "presto-tests/src/test/java/io/prestosql/execution/TestLazyCoordinatorDynamicFiltering.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOToxMzozMVrOHQVigw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOToxMzozMVrOHQVigw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg5MjE2Mw==", "bodyText": "why not just !splitProduced.get() ?", "url": "https://github.com/trinodb/trino/pull/5043#discussion_r486892163", "createdAt": "2020-09-11T09:13:31Z", "author": {"login": "findepi"}, "path": "presto-tests/src/test/java/io/prestosql/execution/TestLazyCoordinatorDynamicFiltering.java", "diffHunk": "@@ -211,7 +211,7 @@ public void close()\n                         @Override\n                         public boolean isFinished()\n                         {\n-                            if (!dynamicFilter.isComplete() || !splitProduced.get()) {\n+                            if (dynamicFilter.isAwaitable() || !splitProduced.get()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NTYyOTIyOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/server/DynamicFilterService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOToxNDowN1rOHQVk6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOToxNDowN1rOHQVk6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg5Mjc3OQ==", "bodyText": "nit: why not fmt this just like isComplete above?", "url": "https://github.com/trinodb/trino/pull/5043#discussion_r486892779", "createdAt": "2020-09-11T09:14:07Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/server/DynamicFilterService.java", "diffHunk": "@@ -227,6 +227,12 @@ public boolean isComplete()\n                         .allMatch(context.getDynamicFilterSummaries()::containsKey);\n             }\n \n+            @Override\n+            public boolean isAwaitable()\n+            {\n+                return lazyDynamicFilterFutures.stream().anyMatch(future -> !future.isDone());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3102, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}