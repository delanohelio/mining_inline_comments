{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1Njg1ODM3", "number": 3687, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNjo1MjowMlrOD7UnMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQxNDozMzoyNlrOFUiPUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTMwMjkxOnYy", "diffSide": "RIGHT", "path": "presto-bigquery/src/main/java/io/prestosql/plugin/bigquery/BigQueryMetadata.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNjo1MjowMlrOGTkzIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMzo0MDozNlrOGTxFow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE3OTA0MQ==", "bodyText": "Is the second call to viewDefinition.getQuery() needed?", "url": "https://github.com/trinodb/trino/pull/3687#discussion_r423179041", "createdAt": "2020-05-11T16:52:02Z", "author": {"login": "davidrabinowitz"}, "path": "presto-bigquery/src/main/java/io/prestosql/plugin/bigquery/BigQueryMetadata.java", "diffHunk": "@@ -118,6 +123,30 @@ public BigQueryMetadata(BigQueryClient bigQueryClient, BigQueryConfig config)\n         return tableNames.build();\n     }\n \n+    @Override\n+    public Optional<ConnectorViewDefinition> getView(ConnectorSession session, SchemaTableName viewName)\n+    {\n+        TableInfo tableInfo = getBigQueryTable(viewName);\n+\n+        if (tableInfo.getDefinition() instanceof ViewDefinition) {\n+            List<BigQueryColumnHandle> columns = getTableColumns(tableInfo);\n+            ViewDefinition viewDefinition = tableInfo.getDefinition();\n+            ConnectorViewDefinition definition = new ConnectorViewDefinition(\n+                    viewDefinition.getQuery(),\n+                    Optional.of(catalogName.toString()),\n+                    Optional.of(viewName.getSchemaName()),\n+                    columns.stream()\n+                            .map(column -> new ConnectorViewDefinition.ViewColumn(column.getName(), column.getPrestoType().getTypeId()))\n+                            .collect(toImmutableList()),\n+                    Optional.ofNullable(tableInfo.getDescription()),\n+                    Optional.empty(),\n+                    false);\n+            viewDefinition.getQuery();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5bb8c8a83bd0a3b3be4f9d4f430880e920fc3cc"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM4MDM4Nw==", "bodyText": "It's my mistake. Let me remove.", "url": "https://github.com/trinodb/trino/pull/3687#discussion_r423380387", "createdAt": "2020-05-11T23:40:36Z", "author": {"login": "ebyhr"}, "path": "presto-bigquery/src/main/java/io/prestosql/plugin/bigquery/BigQueryMetadata.java", "diffHunk": "@@ -118,6 +123,30 @@ public BigQueryMetadata(BigQueryClient bigQueryClient, BigQueryConfig config)\n         return tableNames.build();\n     }\n \n+    @Override\n+    public Optional<ConnectorViewDefinition> getView(ConnectorSession session, SchemaTableName viewName)\n+    {\n+        TableInfo tableInfo = getBigQueryTable(viewName);\n+\n+        if (tableInfo.getDefinition() instanceof ViewDefinition) {\n+            List<BigQueryColumnHandle> columns = getTableColumns(tableInfo);\n+            ViewDefinition viewDefinition = tableInfo.getDefinition();\n+            ConnectorViewDefinition definition = new ConnectorViewDefinition(\n+                    viewDefinition.getQuery(),\n+                    Optional.of(catalogName.toString()),\n+                    Optional.of(viewName.getSchemaName()),\n+                    columns.stream()\n+                            .map(column -> new ConnectorViewDefinition.ViewColumn(column.getName(), column.getPrestoType().getTypeId()))\n+                            .collect(toImmutableList()),\n+                    Optional.ofNullable(tableInfo.getDescription()),\n+                    Optional.empty(),\n+                    false);\n+            viewDefinition.getQuery();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE3OTA0MQ=="}, "originalCommit": {"oid": "b5bb8c8a83bd0a3b3be4f9d4f430880e920fc3cc"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NjEyNjA3OnYy", "diffSide": "RIGHT", "path": "docs/src/main/sphinx/connector/bigquery.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwMToxNTo0MlrOIOuSFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwMjowNzozOFrOIOvK_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMwOTI2OA==", "bodyText": "How about customer_view$view_definition, instead?", "url": "https://github.com/trinodb/trino/pull/3687#discussion_r552309268", "createdAt": "2021-01-06T01:15:42Z", "author": {"login": "martint"}, "path": "docs/src/main/sphinx/connector/bigquery.rst", "diffHunk": "@@ -161,6 +161,12 @@ BigQuery       Trino                        Notes\n ``TIMESTAMP``  ``TIMESTAMP_WITH_TIME_ZONE`` Time zone is UTC\n =============  ============================ =============================================================================================================\n \n+System Tables\n+-------------\n+\n+The connector supports queries of the view definition. Given a view ``customer_view``,\n+``SELECT * customer_view$big_query_views`` shows the view definition.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMyMzgzNw==", "bodyText": "Looks good. Changed to the new name. Let me remove syntax-needs-review now.", "url": "https://github.com/trinodb/trino/pull/3687#discussion_r552323837", "createdAt": "2021-01-06T02:07:38Z", "author": {"login": "ebyhr"}, "path": "docs/src/main/sphinx/connector/bigquery.rst", "diffHunk": "@@ -161,6 +161,12 @@ BigQuery       Trino                        Notes\n ``TIMESTAMP``  ``TIMESTAMP_WITH_TIME_ZONE`` Time zone is UTC\n =============  ============================ =============================================================================================================\n \n+System Tables\n+-------------\n+\n+The connector supports queries of the view definition. Given a view ``customer_view``,\n+``SELECT * customer_view$big_query_views`` shows the view definition.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMwOTI2OA=="}, "originalCommit": null, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NjEzMzk1OnYy", "diffSide": "RIGHT", "path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryMetadata.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwMToxOTo1NVrOIOuWkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwMToxOTo1NVrOIOuWkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMxMDQxOQ==", "bodyText": "This abstraction seems unnecessary. There's only one type of handler, and it's not clear that future ones would use the same suffix matching logic. If and when we need to add others, we can refactor the code to use a generic enum if appropriate.", "url": "https://github.com/trinodb/trino/pull/3687#discussion_r552310419", "createdAt": "2021-01-06T01:19:55Z", "author": {"login": "martint"}, "path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryMetadata.java", "diffHunk": "@@ -311,4 +344,29 @@ private static boolean containSameElements(Iterable<? extends ColumnHandle> firs\n     {\n         return ImmutableSet.copyOf(first).equals(ImmutableSet.copyOf(second));\n     }\n+\n+    private enum SystemTableHandler", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NjE1MTk3OnYy", "diffSide": "RIGHT", "path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryMetadata.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwMToyOTozMlrOIOugzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwMToyOTozMlrOIOugzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMxMzAzOA==", "bodyText": "Is the name viewName accurate? That represents something like customer_view$big_query_views, no? In that case, it would be the \"view definition table name\", not the actual view name.", "url": "https://github.com/trinodb/trino/pull/3687#discussion_r552313038", "createdAt": "2021-01-06T01:29:32Z", "author": {"login": "martint"}, "path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryMetadata.java", "diffHunk": "@@ -160,6 +167,32 @@ public ConnectorTableMetadata getTableMetadata(ConnectorSession session, Connect\n         return new ConnectorTableMetadata(schemaTableName, columns);\n     }\n \n+    @Override\n+    public Optional<SystemTable> getSystemTable(ConnectorSession session, SchemaTableName tableName)\n+    {\n+        if (SystemTableHandler.BIG_QUERY_VIEWS.matches(tableName)) {\n+            return getBigQueryViewsSystemTable(tableName, SystemTableHandler.BIG_QUERY_VIEWS.getSourceTableName(tableName));\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private Optional<SystemTable> getBigQueryViewsSystemTable(SchemaTableName viewName, SchemaTableName sourceTableName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU3MDczMDc0OnYy", "diffSide": "RIGHT", "path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/util/SystemTables.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQxNDoyNDo1N1rOIcmKOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQxNDoyNDo1N1rOIcmKOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Njg1NjI1MQ==", "bodyText": "nit: move as private method to BigQueryMetadata.java?", "url": "https://github.com/trinodb/trino/pull/3687#discussion_r566856251", "createdAt": "2021-01-29T14:24:57Z", "author": {"login": "losipiuk"}, "path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/util/SystemTables.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.trino.plugin.bigquery.util;\n+\n+import io.trino.spi.connector.ConnectorSession;\n+import io.trino.spi.connector.ConnectorTableMetadata;\n+import io.trino.spi.connector.ConnectorTransactionHandle;\n+import io.trino.spi.connector.RecordCursor;\n+import io.trino.spi.connector.SystemTable;\n+import io.trino.spi.predicate.TupleDomain;\n+\n+import java.util.function.Function;\n+\n+public class SystemTables\n+{\n+    private SystemTables() {}\n+\n+    public static SystemTable createSystemTable(ConnectorTableMetadata metadata, Function<TupleDomain<Integer>, RecordCursor> cursor)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU3MDc2ODE5OnYy", "diffSide": "RIGHT", "path": "docs/src/main/sphinx/connector/bigquery.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQxNDozMzoyNlrOIcmg7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQxNDozMzoyNlrOIcmg7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Njg2MjA2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The connector supports queries of the view definition. Given a view ``customer_view``,\n          \n          \n            \n            ``SELECT * customer_view$view_definition`` shows the view definition.\n          \n          \n            \n            For each Trino table which maps to BigQuery view there exists a system table which exposes BigQuery view definition.\n          \n          \n            \n            Given a BigQuery view ``customer_view`` you can send query\n          \n          \n            \n            ``SELECT * customer_view$view_definition`` to see the SQL which defines view in BigQuery.", "url": "https://github.com/trinodb/trino/pull/3687#discussion_r566862060", "createdAt": "2021-01-29T14:33:26Z", "author": {"login": "losipiuk"}, "path": "docs/src/main/sphinx/connector/bigquery.rst", "diffHunk": "@@ -161,6 +161,12 @@ BigQuery       Trino                        Notes\n ``TIMESTAMP``  ``TIMESTAMP_WITH_TIME_ZONE`` Time zone is UTC\n =============  ============================ =============================================================================================================\n \n+System tables\n+-------------\n+\n+The connector supports queries of the view definition. Given a view ``customer_view``,\n+``SELECT * customer_view$view_definition`` shows the view definition.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 80, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}