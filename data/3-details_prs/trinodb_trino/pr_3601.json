{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNTQ2ODE0", "number": 3601, "title": "Quote column name in Phoenix CREATE TABLE statement", "bodyText": "Related to #3466", "createdAt": "2020-05-03T04:27:55Z", "url": "https://github.com/trinodb/trino/pull/3601", "merged": true, "mergeCommit": {"oid": "300d830d2bfef8c29b27d3109369e708f723c0ca"}, "closed": true, "closedAt": "2020-10-07T09:59:03Z", "author": {"login": "ebyhr"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcdwLT4gFqTQwNDY1MDU3Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPRL-fABqjM4Mzc2ODUwNjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NjUwNTcz", "url": "https://github.com/trinodb/trino/pull/3601#pullrequestreview-404650573", "createdAt": "2020-05-03T19:37:40Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxOTozNzo0MFrOGPu2Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxOTozNzo0MFrOGPu2Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0OTMzNQ==", "bodyText": "That's incorrect error message. We didn't ask to create a column of type quote.\nThis is because getEscapedArgument doesn't support escaping \" within the name.\nIf Phoenix does not support this, we need to filter this out on our side.\nThen, the correct way to exclude this test case would be like here\nhttps://github.com/prestosql/presto/blob/329a48592ecb6c628712ef3648f2e8da7eb33d38/presto-mysql/src/test/java/io/prestosql/plugin/mysql/TestMySqlDistributedQueries.java#L123-L127", "url": "https://github.com/trinodb/trino/pull/3601#discussion_r419149335", "createdAt": "2020-05-03T19:37:40Z", "author": {"login": "findepi"}, "path": "presto-phoenix/src/test/java/io/prestosql/plugin/phoenix/TestPhoenixDistributedQueries.java", "diffHunk": "@@ -136,8 +137,13 @@ public void testCreateSchema()\n     @Override\n     public void testColumnName(String columnName)\n     {\n-        // TODO (https://github.com/prestosql/presto/issues/3466) Phoenix generally lacks quoting in underlying queries\n-        throw new SkipException(\"TODO\");\n+        if (columnName.equals(\"a\\\"quote\")) {\n+            assertThatThrownBy(() -> super.testColumnName(columnName))\n+                    .hasMessageContaining(\"Illegal data. Unsupported sql type: QUOTE\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "acd1cfa40465b9a34f434e822bc0249722d6915c", "author": {"user": {"login": "ebyhr", "name": "Yuya Ebihara"}}, "url": "https://github.com/trinodb/trino/commit/acd1cfa40465b9a34f434e822bc0249722d6915c", "committedDate": "2020-05-05T12:36:34Z", "message": "Quote column name in Phoenix CREATE TABLE statement\n\nAdditionally, enable testColumnName test in Phoenix."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5Mjc0MjM0", "url": "https://github.com/trinodb/trino/pull/3601#pullrequestreview-439274234", "createdAt": "2020-06-29T15:43:56Z", "commit": {"oid": "acd1cfa40465b9a34f434e822bc0249722d6915c"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNTo0Mzo1NlrOGqW-cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNTo0ODoyN1rOGqXKXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA2OTgxMQ==", "bodyText": "@vincentpoon should we go thru toMetadataCasing here before calling getEscapedArgument?", "url": "https://github.com/trinodb/trino/pull/3601#discussion_r447069811", "createdAt": "2020-06-29T15:43:56Z", "author": {"login": "findepi"}, "path": "presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixMetadata.java", "diffHunk": "@@ -351,7 +351,7 @@ private JdbcOutputTableHandle createTable(ConnectorSession session, ConnectorTab\n                     typeStatement += \" not null\";\n                     pkNames.add(columnName);\n                 }\n-                columnList.add(format(\"%s %s\", columnName, typeStatement));\n+                columnList.add(format(\"%s %s\", getEscapedArgument(columnName), typeStatement));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd1cfa40465b9a34f434e822bc0249722d6915c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA3Mjg2MA==", "bodyText": "Leave some TODO comment still.\nCurrently the \" in column name leads to SQL injection.\nUse of a\"quote column should produce a reasonable exception message like \"Invalid column name\" or \"Column name cannot contain a quotation sign\".  Then, here you should verify the actual exception message.", "url": "https://github.com/trinodb/trino/pull/3601#discussion_r447072860", "createdAt": "2020-06-29T15:48:27Z", "author": {"login": "findepi"}, "path": "presto-phoenix/src/test/java/io/prestosql/plugin/phoenix/TestPhoenixDistributedQueries.java", "diffHunk": "@@ -134,10 +134,9 @@ public void testCreateSchema()\n     }\n \n     @Override\n-    public void testColumnName(String columnName)\n+    protected boolean isColumnNameRejected(Exception exception, String columnName, boolean delimited)\n     {\n-        // TODO (https://github.com/prestosql/presto/issues/3466) Phoenix generally lacks quoting in underlying queries\n-        throw new SkipException(\"TODO\");\n+        return columnName.equals(\"a\\\"quote\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd1cfa40465b9a34f434e822bc0249722d6915c"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf8c7e5ee566554703eda2cd768b966233287df1", "author": {"user": {"login": "ebyhr", "name": "Yuya Ebihara"}}, "url": "https://github.com/trinodb/trino/commit/cf8c7e5ee566554703eda2cd768b966233287df1", "committedDate": "2020-10-04T15:46:36Z", "message": "Quote column name in Phoenix CREATE TABLE statement\n\nAdditionally, enable testColumnName test in Phoenix."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "acd1cfa40465b9a34f434e822bc0249722d6915c", "author": {"user": {"login": "ebyhr", "name": "Yuya Ebihara"}}, "url": "https://github.com/trinodb/trino/commit/acd1cfa40465b9a34f434e822bc0249722d6915c", "committedDate": "2020-05-05T12:36:34Z", "message": "Quote column name in Phoenix CREATE TABLE statement\n\nAdditionally, enable testColumnName test in Phoenix."}, "afterCommit": {"oid": "cf8c7e5ee566554703eda2cd768b966233287df1", "author": {"user": {"login": "ebyhr", "name": "Yuya Ebihara"}}, "url": "https://github.com/trinodb/trino/commit/cf8c7e5ee566554703eda2cd768b966233287df1", "committedDate": "2020-10-04T15:46:36Z", "message": "Quote column name in Phoenix CREATE TABLE statement\n\nAdditionally, enable testColumnName test in Phoenix."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1358, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}