{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3ODg3NjU0", "number": 3526, "title": "Ensure proper memory visibility in RubixConfigurationInitializer", "bodyText": "Making RubixConfigurationInitializer.cacheNotReady volatile to ensure\nchanges made to instance variables before cacheNotReady was switched  to\nfalse are visible to thread calling out to initializeConfiguration.", "createdAt": "2020-04-23T12:36:33Z", "url": "https://github.com/trinodb/trino/pull/3526", "merged": true, "mergeCommit": {"oid": "e53af1cc4570dc1515c0850420a255a1cf73110b"}, "closed": true, "closedAt": "2020-04-27T12:18:12Z", "author": {"login": "losipiuk"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcacGQGgH2gAyNDA3ODg3NjU0OjNjZjJkNDhhZTI5OWQzN2U4MWIyMDVlMjA1YTkyZTUyYTM3NDAyY2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcacpKegFqTM5OTA4MDY3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3cf2d48ae299d37e81b205e205a92e52a37402ca", "author": {"user": {"login": "losipiuk", "name": "\u0141ukasz Osipiuk"}}, "url": "https://github.com/trinodb/trino/commit/3cf2d48ae299d37e81b205e205a92e52a37402ca", "committedDate": "2020-04-23T12:32:17Z", "message": "Ensure proper memory visibility in RubixConfigurationInitializer\n\nMaking RubixConfigurationInitializer.cacheNotReady volatile to ensure\nchanges made to instance variables before cacheNotReady was switched  to\nfalse are visible to thread calling out to initializeConfiguration."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5MDgwNjc5", "url": "https://github.com/trinodb/trino/pull/3526#pullrequestreview-399080679", "createdAt": "2020-04-23T13:08:00Z", "commit": {"oid": "3cf2d48ae299d37e81b205e205a92e52a37402ca"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMzowODowMFrOGKoX3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMzoxMDoxMVrOGKodsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgwMDQxNA==", "bodyText": "Let's reverse this variable, call it cacheReady", "url": "https://github.com/trinodb/trino/pull/3526#discussion_r413800414", "createdAt": "2020-04-23T13:08:00Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/RubixConfigurationInitializer.java", "diffHunk": "@@ -53,7 +53,7 @@\n     private final int dataTransferServerPort;\n \n     // Configs below are dependent on node joining the cluster\n-    private boolean cacheNotReady = true;\n+    private volatile boolean cacheNotReady = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cf2d48ae299d37e81b205e205a92e52a37402ca"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgwMTkwNg==", "bodyText": "How long lived are Configuration objects. Is there a potential for race condition where Configuration will be set without cache for minutes (even though cache initialize a second after)?", "url": "https://github.com/trinodb/trino/pull/3526#discussion_r413801906", "createdAt": "2020-04-23T13:10:11Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/RubixConfigurationInitializer.java", "diffHunk": "@@ -53,7 +53,7 @@\n     private final int dataTransferServerPort;\n \n     // Configs below are dependent on node joining the cluster\n-    private boolean cacheNotReady = true;\n+    private volatile boolean cacheNotReady = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgwMDQxNA=="}, "originalCommit": {"oid": "3cf2d48ae299d37e81b205e205a92e52a37402ca"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1632, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}