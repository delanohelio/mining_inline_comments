{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExNTk2ODkx", "number": 5725, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo0NDowMlrOEy2NQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1MjoyMlrOEy2efA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzUyMzg0OnYy", "diffSide": "RIGHT", "path": "presto-testng-services/src/main/java/io/prestosql/testng/services/FlakyTestRetryAnalyzer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo0NDowM1rOHptqXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1MjoxMlrOHpuF8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUwMTc4OQ==", "bodyText": "make this warn\nothers can be debug maybe?", "url": "https://github.com/trinodb/trino/pull/5725#discussion_r513501789", "createdAt": "2020-10-28T14:44:03Z", "author": {"login": "findepi"}, "path": "presto-testng-services/src/main/java/io/prestosql/testng/services/FlakyTestRetryAnalyzer.java", "diffHunk": "@@ -49,22 +49,30 @@\n     @Override\n     public boolean retry(ITestResult result)\n     {\n+        if (result.isSuccess()) {\n+            return false;\n+        }\n         if (!isEnabled()) {\n+            log.info(\"not retrying; FlakyTestRetryAnalyzer disabled\");\n             return false;\n         }\n         Method javaMethod = result.getMethod().getConstructorOrMethod().getMethod();\n         if (javaMethod == null) {\n+            log.info(\"not retrying; cannot get java method\");\n             return false;\n         }\n         Flaky annotation = javaMethod.getAnnotation(Flaky.class);\n         if (annotation == null) {\n+            log.info(\"not retrying; @Flaky annotation not present\");\n             return false;\n         }\n         if (result.getThrowable() == null) {\n+            log.info(\"not retrying; throwable not present in result\");\n             return false;\n         }\n         String stackTrace = getStackTraceAsString(result.getThrowable());\n         if (!Pattern.compile(annotation.match()).matcher(stackTrace).find()) {\n+            log.info(\"not retrying; stacktrace '\" + stackTrace + \"' does not match pattern '\" + annotation.match() + \"'\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUwODg1MA==", "bodyText": "Debug are disabled by default turning them on is not trivial.", "url": "https://github.com/trinodb/trino/pull/5725#discussion_r513508850", "createdAt": "2020-10-28T14:52:12Z", "author": {"login": "kokosing"}, "path": "presto-testng-services/src/main/java/io/prestosql/testng/services/FlakyTestRetryAnalyzer.java", "diffHunk": "@@ -49,22 +49,30 @@\n     @Override\n     public boolean retry(ITestResult result)\n     {\n+        if (result.isSuccess()) {\n+            return false;\n+        }\n         if (!isEnabled()) {\n+            log.info(\"not retrying; FlakyTestRetryAnalyzer disabled\");\n             return false;\n         }\n         Method javaMethod = result.getMethod().getConstructorOrMethod().getMethod();\n         if (javaMethod == null) {\n+            log.info(\"not retrying; cannot get java method\");\n             return false;\n         }\n         Flaky annotation = javaMethod.getAnnotation(Flaky.class);\n         if (annotation == null) {\n+            log.info(\"not retrying; @Flaky annotation not present\");\n             return false;\n         }\n         if (result.getThrowable() == null) {\n+            log.info(\"not retrying; throwable not present in result\");\n             return false;\n         }\n         String stackTrace = getStackTraceAsString(result.getThrowable());\n         if (!Pattern.compile(annotation.match()).matcher(stackTrace).find()) {\n+            log.info(\"not retrying; stacktrace '\" + stackTrace + \"' does not match pattern '\" + annotation.match() + \"'\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUwMTc4OQ=="}, "originalCommit": null, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzU2MTU1OnYy", "diffSide": "RIGHT", "path": "presto-testng-services/src/main/java/io/prestosql/testng/services/FlakyTestRetryAnalyzer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1MToxMVrOHpuCiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1MToxMVrOHpuCiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUwNzk3Nw==", "bodyText": "separate commit?", "url": "https://github.com/trinodb/trino/pull/5725#discussion_r513507977", "createdAt": "2020-10-28T14:51:11Z", "author": {"login": "kokosing"}, "path": "presto-testng-services/src/main/java/io/prestosql/testng/services/FlakyTestRetryAnalyzer.java", "diffHunk": "@@ -49,22 +49,30 @@\n     @Override\n     public boolean retry(ITestResult result)\n     {\n+        if (result.isSuccess()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzU2Nzk2OnYy", "diffSide": "RIGHT", "path": "presto-testng-services/src/main/java/io/prestosql/testng/services/FlakyTestRetryAnalyzer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1MjoyMlrOHpuGkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1MjoyMlrOHpuGkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUwOTAwOQ==", "bodyText": "Do not use concatenation with logging", "url": "https://github.com/trinodb/trino/pull/5725#discussion_r513509009", "createdAt": "2020-10-28T14:52:22Z", "author": {"login": "kokosing"}, "path": "presto-testng-services/src/main/java/io/prestosql/testng/services/FlakyTestRetryAnalyzer.java", "diffHunk": "@@ -49,22 +49,30 @@\n     @Override\n     public boolean retry(ITestResult result)\n     {\n+        if (result.isSuccess()) {\n+            return false;\n+        }\n         if (!isEnabled()) {\n+            log.info(\"not retrying; FlakyTestRetryAnalyzer disabled\");\n             return false;\n         }\n         Method javaMethod = result.getMethod().getConstructorOrMethod().getMethod();\n         if (javaMethod == null) {\n+            log.info(\"not retrying; cannot get java method\");\n             return false;\n         }\n         Flaky annotation = javaMethod.getAnnotation(Flaky.class);\n         if (annotation == null) {\n+            log.info(\"not retrying; @Flaky annotation not present\");\n             return false;\n         }\n         if (result.getThrowable() == null) {\n+            log.info(\"not retrying; throwable not present in result\");\n             return false;\n         }\n         String stackTrace = getStackTraceAsString(result.getThrowable());\n         if (!Pattern.compile(annotation.match()).matcher(stackTrace).find()) {\n+            log.info(\"not retrying; stacktrace '\" + stackTrace + \"' does not match pattern '\" + annotation.match() + \"'\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4564, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}