{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3NzI2Mjc4", "number": 5881, "title": "Execute queries from redirected input stream in presto-cli", "bodyText": "Testes with following invocations styles:\n\necho \"SELECT 1; SELECT 2; SELECT 3\" | ./presto-cli-executable.jar\n./presto-cli-executable.jar < file.sql\n./presto-cli-executable.jar < <(echo \"SELECT 1; SELECT 2; SELECT 3\")", "createdAt": "2020-11-09T12:25:35Z", "url": "https://github.com/trinodb/trino/pull/5881", "merged": true, "mergeCommit": {"oid": "14e8dc002cc5a3f1b8f76a494ddaaa653beb56f4"}, "closed": true, "closedAt": "2020-11-19T13:28:08Z", "author": {"login": "wendigo"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABda2J0iABqjM5NzQyMjE0Nzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdeA_EVgFqTUzNDMyODIwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NTQxODc3", "url": "https://github.com/trinodb/trino/pull/5881#pullrequestreview-526541877", "createdAt": "2020-11-09T18:37:21Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODozNzoyMVrOHv8NwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo0NTowMFrOHv8fSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzMTY4MQ==", "bodyText": "@Override\n    public void setErrorPattern(Pattern pattern) {}\n\n    @Override\n    public void setErrorIndex(int i) {}", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520031681", "createdAt": "2020-11-09T18:37:21Z", "author": {"login": "losipiuk"}, "path": "presto-cli/src/main/java/io/prestosql/cli/InputHighlighter.java", "diffHunk": "@@ -88,6 +89,16 @@ else if (isComment(type)) {\n         return builder.toAttributedString();\n     }\n \n+    @Override\n+    public void setErrorPattern(Pattern pattern)\n+    {\n+    }\n+\n+    @Override\n+    public void setErrorIndex(int i)\n+    {\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzMTkwOQ==", "bodyText": "declare as List<...>", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520031909", "createdAt": "2020-11-09T18:37:47Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/PrestoCliLauncher.java", "diffHunk": "@@ -78,9 +78,18 @@ protected void launchPrestoCli(List<String> arguments)\n \n     protected ProcessBuilder getProcessBuilder(List<String> arguments)\n     {\n-        return new ProcessBuilder(ImmutableList.<String>builder()\n+        ImmutableList<String> command = ImmutableList.<String>builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzMjYzMQ==", "bodyText": "Why do we need bash for that? Can't we just execut java?", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520032631", "createdAt": "2020-11-09T18:39:01Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/PrestoCliLauncher.java", "diffHunk": "@@ -78,9 +78,18 @@ protected void launchPrestoCli(List<String> arguments)\n \n     protected ProcessBuilder getProcessBuilder(List<String> arguments)\n     {\n-        return new ProcessBuilder(ImmutableList.<String>builder()\n+        ImmutableList<String> command = ImmutableList.<String>builder()\n                 .add(JAVA_BIN, \"-Xmx50m\", \"-cp\", CLASSPATH, Presto.class.getCanonicalName())\n                 .addAll(arguments)\n-                .build());\n+                .build();\n+\n+        String commandText = Joiner.on(' ').join(command);\n+\n+        return new ProcessBuilder(ImmutableList.of(\"bash\", \"-c\", commandText));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzMjg3MA==", "bodyText": "Without bash you would not need any escaping.", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520032870", "createdAt": "2020-11-09T18:39:26Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/PrestoCliLauncher.java", "diffHunk": "@@ -78,9 +78,18 @@ protected void launchPrestoCli(List<String> arguments)\n \n     protected ProcessBuilder getProcessBuilder(List<String> arguments)\n     {\n-        return new ProcessBuilder(ImmutableList.<String>builder()\n+        ImmutableList<String> command = ImmutableList.<String>builder()\n                 .add(JAVA_BIN, \"-Xmx50m\", \"-cp\", CLASSPATH, Presto.class.getCanonicalName())\n                 .addAll(arguments)\n-                .build());\n+                .build();\n+\n+        String commandText = Joiner.on(' ').join(command);\n+\n+        return new ProcessBuilder(ImmutableList.of(\"bash\", \"-c\", commandText));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzMjYzMQ=="}, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNDk3MQ==", "bodyText": "I guess this is fine. But other option to consider is also allowing passing - as a filename", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520034971", "createdAt": "2020-11-09T18:42:58Z", "author": {"login": "losipiuk"}, "path": "presto-cli/src/main/java/io/prestosql/cli/Console.java", "diffHunk": "@@ -127,6 +129,22 @@ public boolean run()\n             }\n         }\n \n+        // Read queries from stdin\n+        if (!hasQuery && !detectRealTerminal()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNTg4Mw==", "bodyText": "should we assume that locale in terminal is UTF_8?", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520035883", "createdAt": "2020-11-09T18:44:32Z", "author": {"login": "losipiuk"}, "path": "presto-cli/src/main/java/io/prestosql/cli/Console.java", "diffHunk": "@@ -127,6 +129,22 @@ public boolean run()\n             }\n         }\n \n+        // Read queries from stdin\n+        if (!hasQuery && !detectRealTerminal()) {\n+            try {\n+                if (System.in.available() > 0) {\n+                    query = new String(ByteStreams.toByteArray(System.in), UTF_8) + \";\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNjE3MA==", "bodyText": "what happens if there is already ; at the end of data in stdin?", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520036170", "createdAt": "2020-11-09T18:45:00Z", "author": {"login": "losipiuk"}, "path": "presto-cli/src/main/java/io/prestosql/cli/Console.java", "diffHunk": "@@ -127,6 +129,22 @@ public boolean run()\n             }\n         }\n \n+        // Read queries from stdin\n+        if (!hasQuery && !detectRealTerminal()) {\n+            try {\n+                if (System.in.available() > 0) {\n+                    query = new String(ByteStreams.toByteArray(System.in), UTF_8) + \";\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MDc2MTAz", "url": "https://github.com/trinodb/trino/pull/5881#pullrequestreview-527076103", "createdAt": "2020-11-10T10:46:25Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMDo0Njo1MFrOHwWtFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMDo0Njo1MFrOHwWtFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ2NTY4Ng==", "bodyText": "move to helper class and make public", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520465686", "createdAt": "2020-11-10T10:46:50Z", "author": {"login": "losipiuk"}, "path": "presto-cli/src/main/java/io/prestosql/cli/ConsolePrinter.java", "diffHunk": "@@ -92,7 +92,7 @@ public boolean isRealTerminal()\n         return REAL_TERMINAL;\n     }\n \n-    private static boolean detectRealTerminal()\n+    protected static boolean detectRealTerminal()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTMxMzc2", "url": "https://github.com/trinodb/trino/pull/5881#pullrequestreview-527131376", "createdAt": "2020-11-10T12:00:09Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjowMDowOVrOHwZVow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjowOTozOFrOHwZpnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUwODgzNQ==", "bodyText": "do you know who calls this and whether it's fully safe to ignore this?", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520508835", "createdAt": "2020-11-10T12:00:09Z", "author": {"login": "findepi"}, "path": "presto-cli/src/main/java/io/prestosql/cli/InputHighlighter.java", "diffHunk": "@@ -88,6 +89,12 @@ else if (isComment(type)) {\n         return builder.toAttributedString();\n     }\n \n+    @Override\n+    public void setErrorPattern(Pattern pattern) {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUwOTg4Nw==", "bodyText": "java.lang.ProcessBuilder#redirectInput() seems to support that?", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520509887", "createdAt": "2020-11-10T12:01:57Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/PrestoCliLauncher.java", "diffHunk": "@@ -78,9 +78,18 @@ protected void launchPrestoCli(List<String> arguments)\n \n     protected ProcessBuilder getProcessBuilder(List<String> arguments)\n     {\n-        return new ProcessBuilder(ImmutableList.<String>builder()\n+        ImmutableList<String> command = ImmutableList.<String>builder()\n                 .add(JAVA_BIN, \"-Xmx50m\", \"-cp\", CLASSPATH, Presto.class.getCanonicalName())\n                 .addAll(arguments)\n-                .build());\n+                .build();\n+\n+        String commandText = Joiner.on(' ').join(command);\n+\n+        return new ProcessBuilder(ImmutableList.of(\"bash\", \"-c\", commandText));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzMjYzMQ=="}, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMDQ2Ng==", "bodyText": "This is not correct.\nrequireNonNull(value, \"value is null\");\nreturn \"'\" + value.replace(\"'\", \"'\\\\''\") + \"'\";", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520510466", "createdAt": "2020-11-10T12:03:07Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/PrestoCliLauncher.java", "diffHunk": "@@ -78,9 +78,18 @@ protected void launchPrestoCli(List<String> arguments)\n \n     protected ProcessBuilder getProcessBuilder(List<String> arguments)\n     {\n-        return new ProcessBuilder(ImmutableList.<String>builder()\n+        List<String> command = ImmutableList.<String>builder()\n                 .add(JAVA_BIN, \"-Xmx50m\", \"-cp\", CLASSPATH, Presto.class.getCanonicalName())\n                 .addAll(arguments)\n-                .build());\n+                .build();\n+\n+        String commandText = Joiner.on(' ').join(command);\n+\n+        return new ProcessBuilder(ImmutableList.of(\"bash\", \"-c\", commandText));\n+    }\n+\n+    static String escapeForBash(String value)\n+    {\n+        return '\"' + value + '\"';", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMDc3NA==", "bodyText": "Anyway, i'd rather see the code without need for escape, and bash. Too error prone.", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520510774", "createdAt": "2020-11-10T12:03:43Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/PrestoCliLauncher.java", "diffHunk": "@@ -78,9 +78,18 @@ protected void launchPrestoCli(List<String> arguments)\n \n     protected ProcessBuilder getProcessBuilder(List<String> arguments)\n     {\n-        return new ProcessBuilder(ImmutableList.<String>builder()\n+        List<String> command = ImmutableList.<String>builder()\n                 .add(JAVA_BIN, \"-Xmx50m\", \"-cp\", CLASSPATH, Presto.class.getCanonicalName())\n                 .addAll(arguments)\n-                .build());\n+                .build();\n+\n+        String commandText = Joiner.on(' ').join(command);\n+\n+        return new ProcessBuilder(ImmutableList.of(\"bash\", \"-c\", commandText));\n+    }\n+\n+    static String escapeForBash(String value)\n+    {\n+        return '\"' + value + '\"';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMDQ2Ng=="}, "originalCommit": null, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMDkyMw==", "bodyText": "Any reason why escaping is not a hidden aspect of the launchPrestoCliWithServerArgument method? or even deeper?", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520510923", "createdAt": "2020-11-10T12:04:03Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/TestPrestoCli.java", "diffHunk": "@@ -122,7 +122,7 @@ public void shouldRunQuery()\n     public void shouldRunBatchQuery()\n             throws Exception\n     {\n-        launchPrestoCliWithServerArgument(\"--execute\", \"select * from hive.default.nation;\");\n+        launchPrestoCliWithServerArgument(\"--execute\", escapeForBash(\"select * from hive.default.nation;\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMTE1NQ==", "bodyText": "any reason to escape user name but not eg ldapTruststorePassword?", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520511155", "createdAt": "2020-11-10T12:04:33Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/TestPrestoLdapCli.java", "diffHunk": "@@ -274,7 +274,7 @@ private void launchPrestoCliWithServerArgument(String... arguments)\n                 \"--server\", ldapServerAddress,\n                 \"--truststore-path\", ldapTruststorePath,\n                 \"--truststore-password\", ldapTruststorePassword,\n-                \"--user\", ldapUserName,\n+                \"--user\", escapeForBash(ldapUserName),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMTgyNg==", "bodyText": "--cli-jar -> --cli-bin, or --cli-executable?\n\"Path to executable cli JAR\" -> \"Path to CLI executable\"", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520511826", "createdAt": "2020-11-10T12:05:43Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/SuiteRun.java", "diffHunk": "@@ -103,6 +103,9 @@ public Integer call()\n         @Option(names = \"--test-jar\", paramLabel = \"<jar>\", description = \"Path to test JAR \" + DEFAULT_VALUE, defaultValue = \"${product-tests.module}/target/${product-tests.module}-${project.version}-executable.jar\")\n         public File testJar;\n \n+        @Option(names = \"--cli-jar\", paramLabel = \"<jar>\", description = \"Path to executable cli JAR \" + DEFAULT_VALUE, defaultValue = \"${cli.bin}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMjQ1Nw==", "bodyText": "\u2764\ufe0f", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520512457", "createdAt": "2020-11-10T12:06:53Z", "author": {"login": "findepi"}, "path": "presto-product-tests/pom.xml", "diffHunk": "@@ -18,11 +18,6 @@\n     </properties>\n \n     <dependencies>\n-        <dependency>\n-            <groupId>io.prestosql</groupId>\n-            <artifactId>presto-cli</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMjk0Mw==", "bodyText": "we can hide the fact CLI jar is a jar:\n.withFileSystemBind(cliBin.getPath(), \"/docker/presto-cli\", READ_ONLY)\n\nyou will also want to make the file inside docker executable", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520512943", "createdAt": "2020-11-10T12:07:48Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -253,6 +258,7 @@ private Environment getEnvironment()\n                 container\n                         // the test jar is hundreds MB and file system bind is much more efficient\n                         .withFileSystemBind(testJar.getPath(), \"/docker/test.jar\", READ_ONLY)\n+                        .withFileSystemBind(cliJar.getPath(), \"/docker/presto-cli-executable.jar\", READ_ONLY)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMzk0OA==", "bodyText": "This will make it impossible to run the test from IDE, right?\nMaybe we can infer the version from something else, that will be loaded from a jar on classpath?\npresto jdbc driver maybe, something else? anyone?", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520513948", "createdAt": "2020-11-10T12:09:38Z", "author": {"login": "findepi"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/cli/TestPrestoCli.java", "diffHunk": "@@ -105,7 +104,7 @@ public void shouldDisplayVersion()\n             throws IOException\n     {\n         launchPrestoCli(\"--version\");\n-        String version = firstNonNull(Presto.class.getPackage().getImplementationVersion(), \"(version unknown)\");\n+        String version = firstNonNull(TestPrestoCli.class.getPackage().getImplementationVersion(), \"(version unknown)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTM5MTg2", "url": "https://github.com/trinodb/trino/pull/5881#pullrequestreview-527139186", "createdAt": "2020-11-10T12:11:15Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjoxMToxNlrOHwZtBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjoxMToxNlrOHwZtBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxNDgyMg==", "bodyText": "are we chopping this into indivual queries later?", "url": "https://github.com/trinodb/trino/pull/5881#discussion_r520514822", "createdAt": "2020-11-10T12:11:16Z", "author": {"login": "findepi"}, "path": "presto-cli/src/main/java/io/prestosql/cli/Console.java", "diffHunk": "@@ -127,6 +129,22 @@ public boolean run()\n             }\n         }\n \n+        // Read queries from stdin\n+        if (!hasQuery && !detectRealTerminal()) {\n+            try {\n+                if (System.in.available() > 0) {\n+                    query = new String(ByteStreams.toByteArray(System.in), terminal().encoding()) + \";\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "299f6d90835d508f4b7dabf3c26c7e1c3e911db3", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/299f6d90835d508f4b7dabf3c26c7e1c3e911db3", "committedDate": "2020-11-19T09:55:09Z", "message": "Update JLine to 3.17.1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2048cee5ec7d1c019bf576c9ad4e06c6bd3b82db", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/2048cee5ec7d1c019bf576c9ad4e06c6bd3b82db", "committedDate": "2020-11-19T10:45:36Z", "message": "Use real executable CLI jar in product tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f41855782edf232f01f953fb1ea9b3960c21cb6c", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/f41855782edf232f01f953fb1ea9b3960c21cb6c", "committedDate": "2020-11-19T11:09:48Z", "message": "Execute queries from redirected input stream\n\nThis enables previously non-working cli invocations like:\n\n- echo \"SELECT 1; SELECT 2; SELECT 3\" | ./presto-cli-executable.jar or\n- ./presto-cli-executable.jar < file.sql"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa78832c655b698260e6fc3067464b4f67a0f619", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/fa78832c655b698260e6fc3067464b4f67a0f619", "committedDate": "2020-11-19T11:09:48Z", "message": "Extract terminal utils"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "fa78832c655b698260e6fc3067464b4f67a0f619", "author": {"user": {"login": "wendigo", "name": "Mateusz \"Serafin\" Gajewski"}}, "url": "https://github.com/trinodb/trino/commit/fa78832c655b698260e6fc3067464b4f67a0f619", "committedDate": "2020-11-19T11:09:48Z", "message": "Extract terminal utils"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MzI4MjAx", "url": "https://github.com/trinodb/trino/pull/5881#pullrequestreview-534328201", "createdAt": "2020-11-19T11:23:51Z", "commit": {"oid": "fa78832c655b698260e6fc3067464b4f67a0f619"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2935, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}