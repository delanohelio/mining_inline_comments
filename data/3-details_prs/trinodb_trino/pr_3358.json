{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5Njg0Njgx", "number": 3358, "title": "Add EventListener to HiveConnector", "bodyText": "opens up the possibility to add external event listeners\nthat live in hive plugin ecosystem", "createdAt": "2020-04-06T14:25:32Z", "url": "https://github.com/trinodb/trino/pull/3358", "merged": true, "mergeCommit": {"oid": "b5e3aff2bb0e707823bb747e1e4fc4facb176f42"}, "closed": true, "closedAt": "2020-04-09T08:29:39Z", "author": {"login": "s2lomon"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVDOAFAFqTM4ODUxNzU3Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVno50ABqjMyMTQwMzAzMjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NTE3NTc3", "url": "https://github.com/trinodb/trino/pull/3358#pullrequestreview-388517577", "createdAt": "2020-04-06T18:38:22Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODozODoyMlrOGBk64g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODo0MzoxMVrOGBlFyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNjY1OA==", "bodyText": "Why not to toImmutableSet()?", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404306658", "createdAt": "2020-04-06T18:38:22Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/InternalHiveConnectorFactory.java", "diffHunk": "@@ -133,6 +139,10 @@ public static Connector createConnector(String catalogName, Map<String, String>\n                     classLoader);\n             Set<Procedure> procedures = injector.getInstance(Key.get(new TypeLiteral<Set<Procedure>>() {}));\n             Set<SystemTable> systemTables = injector.getInstance(Key.get(new TypeLiteral<Set<SystemTable>>() {}));\n+            List<EventListener> eventListeners = injector.getInstance(Key.get(new TypeLiteral<Set<EventListener>>() {}))\n+                    .stream()\n+                    .map(listener -> new ClassLoaderSafeEventListener(listener, classLoader))\n+                    .collect(toImmutableList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNzQ4OQ==", "bodyText": "Just add newSetBinder(binder, EventListener.class); here. I don't see a need for defaultEventListenerModule() method.", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404307489", "createdAt": "2020-04-06T18:39:46Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/InternalHiveConnectorFactory.java", "diffHunk": "@@ -104,6 +109,7 @@ public static Connector createConnector(String catalogName, Map<String, String>\n                         binder.bind(PageSorter.class).toInstance(context.getPageSorter());\n                         binder.bind(CatalogName.class).toInstance(new CatalogName(catalogName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwODE4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public ClassLoaderSafeEventListener(EventListener delegate, ClassLoader classLoader)\n          \n          \n            \n                public ClassLoaderSafeEventListener(@ForClassLoaderSafe  EventListener delegate, ClassLoader classLoader)", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404308189", "createdAt": "2020-04-06T18:41:01Z", "author": {"login": "kokosing"}, "path": "presto-plugin-toolkit/src/main/java/io/prestosql/plugin/base/classloader/ClassLoaderSafeEventListener.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.base.classloader;\n+\n+import io.prestosql.spi.classloader.ThreadContextClassLoader;\n+import io.prestosql.spi.eventlistener.EventListener;\n+import io.prestosql.spi.eventlistener.QueryCompletedEvent;\n+import io.prestosql.spi.eventlistener.QueryCreatedEvent;\n+import io.prestosql.spi.eventlistener.SplitCompletedEvent;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class ClassLoaderSafeEventListener\n+        implements EventListener\n+{\n+    private final EventListener delegate;\n+    private final ClassLoader classLoader;\n+\n+    public ClassLoaderSafeEventListener(EventListener delegate, ClassLoader classLoader)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwODQ3Nw==", "bodyText": "I would add it in separate commit.\nAdd a test for this class to io.prestosql.plugin.base.classloader.TestClassLoaderSafeWrappers", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404308477", "createdAt": "2020-04-06T18:41:30Z", "author": {"login": "kokosing"}, "path": "presto-plugin-toolkit/src/main/java/io/prestosql/plugin/base/classloader/ClassLoaderSafeEventListener.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.base.classloader;\n+\n+import io.prestosql.spi.classloader.ThreadContextClassLoader;\n+import io.prestosql.spi.eventlistener.EventListener;\n+import io.prestosql.spi.eventlistener.QueryCompletedEvent;\n+import io.prestosql.spi.eventlistener.QueryCreatedEvent;\n+import io.prestosql.spi.eventlistener.SplitCompletedEvent;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class ClassLoaderSafeEventListener", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwOTQ0OA==", "bodyText": "I would simply write Allow HiveConnector to return EventListener for commit message.\nTerms like external event listeners or hive plugin ecosystem are a bit misleading. Maybe this just a matter of taste.", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404309448", "createdAt": "2020-04-06T18:43:11Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConnector.java", "diffHunk": "@@ -28,6 +28,7 @@\n import io.prestosql.spi.connector.ConnectorSplitManager;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MDM0OTU0", "url": "https://github.com/trinodb/trino/pull/3358#pullrequestreview-389034954", "createdAt": "2020-04-07T11:44:05Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMTo0NDowNVrOGB_pdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMTo0NDowNVrOGB_pdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc0NDU2NA==", "bodyText": "static import", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404744564", "createdAt": "2020-04-07T11:44:05Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/InternalHiveConnectorFactory.java", "diffHunk": "@@ -152,4 +162,12 @@ public static Connector createConnector(String catalogName, Map<String, String>\n                     classLoader);\n         }\n     }\n+\n+    private static Module defaultEventListenerModule()\n+    {\n+        return binder -> {\n+            Multibinder.newSetBinder(binder, EventListener.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8e7518045ed50931350dadcbaf2e37357717baf", "author": {"user": {"login": "s2lomon", "name": "Szymon Homa"}}, "url": "https://github.com/trinodb/trino/commit/a8e7518045ed50931350dadcbaf2e37357717baf", "committedDate": "2020-04-07T12:03:03Z", "message": "Add ClassLoader safe Event Listener"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MDY1MzY1", "url": "https://github.com/trinodb/trino/pull/3358#pullrequestreview-389065365", "createdAt": "2020-04-07T12:29:09Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MzMyODUw", "url": "https://github.com/trinodb/trino/pull/3358#pullrequestreview-389332850", "createdAt": "2020-04-07T17:23:39Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzoyMzo0MFrOGCOM9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzoyNjowNVrOGCOStw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4MzAzMQ==", "bodyText": "Agreed, we should just bind an empty set here.", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404983031", "createdAt": "2020-04-07T17:23:40Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/InternalHiveConnectorFactory.java", "diffHunk": "@@ -104,6 +109,7 @@ public static Connector createConnector(String catalogName, Map<String, String>\n                         binder.bind(PageSorter.class).toInstance(context.getPageSorter());\n                         binder.bind(CatalogName.class).toInstance(new CatalogName(catalogName));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNzQ4OQ=="}, "originalCommit": null, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4NDUwMw==", "bodyText": "There's no need to create a no-op listener. The default implementation of Connector.getEventListeners() returns an empty set, so empty iterable is legal. We just need to create the set binder.", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404984503", "createdAt": "2020-04-07T17:26:05Z", "author": {"login": "electrum"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/InternalHiveConnectorFactory.java", "diffHunk": "@@ -152,4 +162,12 @@ public static Connector createConnector(String catalogName, Map<String, String>\n                     classLoader);\n         }\n     }\n+\n+    private static Module defaultEventListenerModule()\n+    {\n+        return binder -> {\n+            newSetBinder(binder, EventListener.class)\n+                    .addBinding().toInstance(new EventListener() {});", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef9202da64d589eac52c2de8731ddd8807cd088f", "author": {"user": {"login": "s2lomon", "name": "Szymon Homa"}}, "url": "https://github.com/trinodb/trino/commit/ef9202da64d589eac52c2de8731ddd8807cd088f", "committedDate": "2020-04-08T13:09:16Z", "message": "Allow HiveConnector to return EventListener"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "ef9202da64d589eac52c2de8731ddd8807cd088f", "author": {"user": {"login": "s2lomon", "name": "Szymon Homa"}}, "url": "https://github.com/trinodb/trino/commit/ef9202da64d589eac52c2de8731ddd8807cd088f", "committedDate": "2020-04-08T13:09:16Z", "message": "Allow HiveConnector to return EventListener"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1805, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}