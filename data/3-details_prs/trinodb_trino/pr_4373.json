{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1MTIyNTc5", "number": 4373, "title": "Fix ExpressionEquivalence for long timestamp", "bodyText": "", "createdAt": "2020-07-07T03:26:28Z", "url": "https://github.com/trinodb/trino/pull/4373", "merged": true, "mergeCommit": {"oid": "64e6226956704485d431c2347ffd49bb983debc4"}, "closed": true, "closedAt": "2020-07-07T07:38:26Z", "author": {"login": "dain"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcyeyWzgFqTQ0MzU2NjY3MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyg04UgBqjM1MTkwNDMzNDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNTY2Njcw", "url": "https://github.com/trinodb/trino/pull/4373#pullrequestreview-443566670", "createdAt": "2020-07-07T05:12:26Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNToxMjoyNlrOGtvVnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNToxMzo1MVrOGtvXBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxNDY4NQ==", "bodyText": "no need for unsignedm sine they are in \"signed\" range", "url": "https://github.com/trinodb/trino/pull/4373#discussion_r450614685", "createdAt": "2020-07-07T05:12:26Z", "author": {"login": "findepi"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/LongTimestamp.java", "diffHunk": "@@ -63,4 +64,14 @@ public int hashCode()\n     {\n         return Objects.hash(epochMicros, picosOfMicro);\n     }\n+\n+    @Override\n+    public int compareTo(LongTimestamp other)\n+    {\n+        int value = Long.compare(epochMicros, other.epochMicros);\n+        if (value != 0) {\n+            return value;\n+        }\n+        return Integer.compareUnsigned(picosOfMicro, other.picosOfMicro);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxNDkwNw==", "bodyText": "techncally this cast is wrong, leftValue is not Comparable<Object>\ni'd rather cast to a raw type Comparable (and add rawtypes to noinspection as well)", "url": "https://github.com/trinodb/trino/pull/4373#discussion_r450614907", "createdAt": "2020-07-07T05:13:16Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/optimizations/ExpressionEquivalence.java", "diffHunk": "@@ -285,8 +284,13 @@ public int compare(RowExpression left, RowExpression right)\n                 if (javaType == float.class || javaType == double.class) {\n                     return Double.compare(((Number) leftValue).doubleValue(), ((Number) rightValue).doubleValue());\n                 }\n-                if (javaType == Slice.class) {\n-                    return ((Slice) leftValue).compareTo((Slice) rightValue);\n+                if (leftValue instanceof Comparable) {\n+                    try {\n+                        //noinspection unchecked\n+                        return ((Comparable<Object>) leftValue).compareTo(rightValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxNTA0NA==", "bodyText": "Integer.compare", "url": "https://github.com/trinodb/trino/pull/4373#discussion_r450615044", "createdAt": "2020-07-07T05:13:51Z", "author": {"login": "findepi"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/LongTimestampWithTimeZone.java", "diffHunk": "@@ -66,4 +69,34 @@ public short getTimeZoneKey()\n     {\n         return timeZoneKey;\n     }\n+\n+    @Override\n+    public boolean equals(Object o)\n+    {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+        LongTimestampWithTimeZone that = (LongTimestampWithTimeZone) o;\n+        return epochMillis == that.epochMillis &&\n+                picosOfMilli == that.picosOfMilli;\n+    }\n+\n+    @Override\n+    public int hashCode()\n+    {\n+        return Objects.hash(epochMillis, picosOfMilli);\n+    }\n+\n+    @Override\n+    public int compareTo(LongTimestampWithTimeZone other)\n+    {\n+        int value = Long.compare(epochMillis, other.epochMillis);\n+        if (value != 0) {\n+            return value;\n+        }\n+        return Integer.compareUnsigned(picosOfMilli, other.picosOfMilli);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7e74b0734eb605401c07297d3089fbb20d200fe", "author": {"user": {"login": "dain", "name": "Dain Sundstrom"}}, "url": "https://github.com/trinodb/trino/commit/f7e74b0734eb605401c07297d3089fbb20d200fe", "committedDate": "2020-07-07T07:36:45Z", "message": "Fix ExpressionEquivalence for long timestamp"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "f7e74b0734eb605401c07297d3089fbb20d200fe", "author": {"user": {"login": "dain", "name": "Dain Sundstrom"}}, "url": "https://github.com/trinodb/trino/commit/f7e74b0734eb605401c07297d3089fbb20d200fe", "committedDate": "2020-07-07T07:36:45Z", "message": "Fix ExpressionEquivalence for long timestamp"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4987, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}