{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NzIxNDM4", "number": 4739, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNzo0MDoyOFrOEWr5pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNzo0MjowNFrOEWr7hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjIzMzk5OnYy", "diffSide": "RIGHT", "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoConnection.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNzo0MDoyOFrOG-ENcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMDowNDo1NFrOHB5DDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzczMzg3NQ==", "bodyText": "I find it a bit unintuitive that getSource does not simply return a source value. Maybe Source could get a default value that could evaluated using the below code?", "url": "https://github.com/trinodb/trino/pull/4739#discussion_r467733875", "createdAt": "2020-08-10T07:40:28Z", "author": {"login": "kokosing"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoConnection.java", "diffHunk": "@@ -805,4 +797,23 @@ private static String getIsolationLevel(int level)\n         }\n         throw new SQLException(\"Invalid transaction isolation level: \" + level);\n     }\n+\n+    private String getSource()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkyODE1MQ==", "bodyText": "@kokosing thank you for the feedback!\nConnectionProperty does have a getDefault method but the issue I see with this is the logic to construct source depends on another connection property (applicationNamePrefix) and I don't see a way to access other connection properties from within a ConnectionProperty instance.\nIs this what you were thinking? Is there a way to do this that I am missing?", "url": "https://github.com/trinodb/trino/pull/4739#discussion_r467928151", "createdAt": "2020-08-10T14:06:37Z", "author": {"login": "posulliv"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoConnection.java", "diffHunk": "@@ -805,4 +797,23 @@ private static String getIsolationLevel(int level)\n         }\n         throw new SQLException(\"Invalid transaction isolation level: \" + level);\n     }\n+\n+    private String getSource()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzczMzg3NQ=="}, "originalCommit": null, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ2NTMzNg==", "bodyText": "Ok, then let's rename the method. getActualSource?", "url": "https://github.com/trinodb/trino/pull/4739#discussion_r470465336", "createdAt": "2020-08-14T07:48:00Z", "author": {"login": "kokosing"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoConnection.java", "diffHunk": "@@ -805,4 +797,23 @@ private static String getIsolationLevel(int level)\n         }\n         throw new SQLException(\"Invalid transaction isolation level: \" + level);\n     }\n+\n+    private String getSource()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzczMzg3NQ=="}, "originalCommit": null, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0NTI5NA==", "bodyText": "Sounds good. Updated.", "url": "https://github.com/trinodb/trino/pull/4739#discussion_r471745294", "createdAt": "2020-08-17T20:04:54Z", "author": {"login": "posulliv"}, "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoConnection.java", "diffHunk": "@@ -805,4 +797,23 @@ private static String getIsolationLevel(int level)\n         }\n         throw new SQLException(\"Invalid transaction isolation level: \" + level);\n     }\n+\n+    private String getSource()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzczMzg3NQ=="}, "originalCommit": null, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjIzODc3OnYy", "diffSide": "RIGHT", "path": "presto-jdbc/src/test/java/io/prestosql/jdbc/TestJdbcConnection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNzo0MjowNFrOG-EQPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMDowNDo0N1rOHB5C2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzczNDU4OQ==", "bodyText": "can you please also add tests for assertConnectionSource(connection, \"testing\"); where source parameter is not given in connection string.", "url": "https://github.com/trinodb/trino/pull/4739#discussion_r467734589", "createdAt": "2020-08-10T07:42:04Z", "author": {"login": "kokosing"}, "path": "presto-jdbc/src/test/java/io/prestosql/jdbc/TestJdbcConnection.java", "diffHunk": "@@ -289,6 +289,29 @@ public void testApplicationName()\n         }\n     }\n \n+    @Test\n+    public void testSource()\n+            throws SQLException\n+    {\n+        try (Connection connection = createConnection(\"source=testing\")) {\n+            assertConnectionSource(connection, \"testing\");\n+        }\n+\n+        try (Connection connection = createConnection(\"source=testing&applicationNamePrefix=fruit:\")) {\n+            assertConnectionSource(connection, \"testing\");\n+        }\n+\n+        try (Connection connection = createConnection(\"source=testing\")) {\n+            connection.setClientInfo(\"ApplicationName\", \"testingApplicationName\");\n+            assertConnectionSource(connection, \"testing\");\n+        }\n+\n+        try (Connection connection = createConnection(\"source=testing&applicationNamePrefix=fruit:\")) {\n+            connection.setClientInfo(\"ApplicationName\", \"testingApplicationName\");\n+            assertConnectionSource(connection, \"testing\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0NTI0Mw==", "bodyText": "yes, done.", "url": "https://github.com/trinodb/trino/pull/4739#discussion_r471745243", "createdAt": "2020-08-17T20:04:47Z", "author": {"login": "posulliv"}, "path": "presto-jdbc/src/test/java/io/prestosql/jdbc/TestJdbcConnection.java", "diffHunk": "@@ -289,6 +289,29 @@ public void testApplicationName()\n         }\n     }\n \n+    @Test\n+    public void testSource()\n+            throws SQLException\n+    {\n+        try (Connection connection = createConnection(\"source=testing\")) {\n+            assertConnectionSource(connection, \"testing\");\n+        }\n+\n+        try (Connection connection = createConnection(\"source=testing&applicationNamePrefix=fruit:\")) {\n+            assertConnectionSource(connection, \"testing\");\n+        }\n+\n+        try (Connection connection = createConnection(\"source=testing\")) {\n+            connection.setClientInfo(\"ApplicationName\", \"testingApplicationName\");\n+            assertConnectionSource(connection, \"testing\");\n+        }\n+\n+        try (Connection connection = createConnection(\"source=testing&applicationNamePrefix=fruit:\")) {\n+            connection.setClientInfo(\"ApplicationName\", \"testingApplicationName\");\n+            assertConnectionSource(connection, \"testing\");\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzczNDU4OQ=="}, "originalCommit": null, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3395, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}