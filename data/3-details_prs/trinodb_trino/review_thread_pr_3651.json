{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MjQ4NzIz", "number": 3651, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMTowNTo1M1rOD6DRyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMTowNjowNFrOD6eWvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTk3NzA0OnYy", "diffSide": "LEFT", "path": "presto-tests/src/test/java/io/prestosql/tests/AbstractTestEngineOnlyQueries.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMTowNTo1M1rOGRqxow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMTowNTo1M1rOGRqxow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE3OTgxMQ==", "bodyText": "TPCH connector doesn't support DELETE", "url": "https://github.com/trinodb/trino/pull/3651#discussion_r421179811", "createdAt": "2020-05-07T01:05:53Z", "author": {"login": "martint"}, "path": "presto-tests/src/test/java/io/prestosql/tests/AbstractTestEngineOnlyQueries.java", "diffHunk": "@@ -800,7 +800,6 @@ public void testDescribeOutputNamedAndUnnamed()\n     public void testDescribeOutputNonSelect()\n     {\n         assertDescribeOutputRowCount(\"CREATE TABLE foo AS SELECT * FROM nation\");\n-        assertDescribeOutputRowCount(\"DELETE FROM orders\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMjg0NjI1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/Analysis.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNzo1Njo1NlrOGRyyVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwODoxNzo1M1rOGRziLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxMTA2MA==", "bodyText": "Why that happened? Does it deserve a comment in the code?", "url": "https://github.com/trinodb/trino/pull/3651#discussion_r421311060", "createdAt": "2020-05-07T07:56:56Z", "author": {"login": "kokosing"}, "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/Analysis.java", "diffHunk": "@@ -783,6 +787,7 @@ public void addColumnMask(Table table, String column, Expression mask)\n                     NodeRef<Table> table = entry.getKey();\n \n                     List<ColumnInfo> columns = referencedFields.get(table).stream()\n+                            .filter(field -> field.getName().isPresent())", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNzQwOQ==", "bodyText": "When a table is analyzed during delete, the engine performs all access checks, including masks. The synthetic column that contains the row id used for deletion doesn\u2019t have a name, which breaks the assumption this code had. I\u2019ll add a comment.", "url": "https://github.com/trinodb/trino/pull/3651#discussion_r421317409", "createdAt": "2020-05-07T08:07:48Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/Analysis.java", "diffHunk": "@@ -783,6 +787,7 @@ public void addColumnMask(Table table, String column, Expression mask)\n                     NodeRef<Table> table = entry.getKey();\n \n                     List<ColumnInfo> columns = referencedFields.get(table).stream()\n+                            .filter(field -> field.getName().isPresent())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxMTA2MA=="}, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMyMzMxMA==", "bodyText": "This is what I suspected. But it was easy because I saw change that introduced this.\nThanks", "url": "https://github.com/trinodb/trino/pull/3651#discussion_r421323310", "createdAt": "2020-05-07T08:17:53Z", "author": {"login": "kokosing"}, "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/Analysis.java", "diffHunk": "@@ -783,6 +787,7 @@ public void addColumnMask(Table table, String column, Expression mask)\n                     NodeRef<Table> table = entry.getKey();\n \n                     List<ColumnInfo> columns = referencedFields.get(table).stream()\n+                            .filter(field -> field.getName().isPresent())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxMTA2MA=="}, "originalCommit": null, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjQxMzQxOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/Analysis.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMTowNjowNFrOGSVeJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMTo0NDowMFrOGSWGhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg3OTMzNQ==", "bodyText": "Should we add a check afterwards that the count matches unless it is a delete query?", "url": "https://github.com/trinodb/trino/pull/3651#discussion_r421879335", "createdAt": "2020-05-08T01:06:04Z", "author": {"login": "dain"}, "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/Analysis.java", "diffHunk": "@@ -783,6 +787,7 @@ public void addColumnMask(Table table, String column, Expression mask)\n                     NodeRef<Table> table = entry.getKey();\n \n                     List<ColumnInfo> columns = referencedFields.get(table).stream()\n+                            .filter(field -> field.getName().isPresent()) // For DELETE queries, the synthetic column for row id doesn't have a name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52dd92eef6175093c1ab63a689a5a42448176eac"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg4OTY3MA==", "bodyText": "No, I don't think so. This piece of code doesn't particularly care about whether it's a DELETE. It should work generically for any case where fields without a name are synthesized. The comment is there to clarify why that might happen.", "url": "https://github.com/trinodb/trino/pull/3651#discussion_r421889670", "createdAt": "2020-05-08T01:44:00Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/Analysis.java", "diffHunk": "@@ -783,6 +787,7 @@ public void addColumnMask(Table table, String column, Expression mask)\n                     NodeRef<Table> table = entry.getKey();\n \n                     List<ColumnInfo> columns = referencedFields.get(table).stream()\n+                            .filter(field -> field.getName().isPresent()) // For DELETE queries, the synthetic column for row id doesn't have a name", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg3OTMzNQ=="}, "originalCommit": {"oid": "52dd92eef6175093c1ab63a689a5a42448176eac"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 57, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}