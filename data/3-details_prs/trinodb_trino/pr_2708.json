{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMDE1ODM3", "number": 2708, "title": "Replace AuthenticatedIdentity with Identity", "bodyText": "", "createdAt": "2020-02-02T14:24:22Z", "url": "https://github.com/trinodb/trino/pull/2708", "merged": true, "mergeCommit": {"oid": "e57c819aaa4b77b66942396508ae9f6186483327"}, "closed": true, "closedAt": "2020-02-07T13:04:44Z", "author": {"login": "dain"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcAZxnRABqjMwMDAwODYyNjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcB_AeugBqjMwMTc1NzM5MzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMjU3ODA1", "url": "https://github.com/trinodb/trino/pull/2708#pullrequestreview-353257805", "createdAt": "2020-02-04T19:53:56Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxOTo1Mzo1N1rOFlhZgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMDoxMjoxOFrOFlh6_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg4ODgzMg==", "bodyText": "Use orElseGet", "url": "https://github.com/trinodb/trino/pull/2708#discussion_r374888832", "createdAt": "2020-02-04T19:53:57Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/server/HttpRequestSessionContext.java", "diffHunk": "@@ -186,6 +171,20 @@ else if (nameParts.size() == 2) {\n         transactionId = parseTransactionId(transactionIdHeader);\n     }\n \n+    private static Identity buildSessionIdentity(Optional<Identity> authenticatedIdentity, HttpServletRequest servletRequest)\n+    {\n+        String prestoUser = trimEmptyToNull(servletRequest.getHeader(PRESTO_USER));\n+        String user = prestoUser != null ? prestoUser : authenticatedIdentity.map(Identity::getUser).orElse(null);\n+        assertRequest(user != null, \"User must be set\");\n+        return authenticatedIdentity\n+                .map(Identity::from)\n+                .map(identity -> identity.withUser(user))\n+                .orElse(Identity.forUser(user))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg5MTA4Ng==", "bodyText": "Maybe collapse these to\n.map(authenticated -> Identity.from(authenticated).withUser(user))\nSo that it's more clear what's happening compared to the \"or else\" case.", "url": "https://github.com/trinodb/trino/pull/2708#discussion_r374891086", "createdAt": "2020-02-04T19:58:35Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/server/HttpRequestSessionContext.java", "diffHunk": "@@ -186,6 +171,20 @@ else if (nameParts.size() == 2) {\n         transactionId = parseTransactionId(transactionIdHeader);\n     }\n \n+    private static Identity buildSessionIdentity(Optional<Identity> authenticatedIdentity, HttpServletRequest servletRequest)\n+    {\n+        String prestoUser = trimEmptyToNull(servletRequest.getHeader(PRESTO_USER));\n+        String user = prestoUser != null ? prestoUser : authenticatedIdentity.map(Identity::getUser).orElse(null);\n+        assertRequest(user != null, \"User must be set\");\n+        return authenticatedIdentity\n+                .map(Identity::from)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg5NzQwNA==", "bodyText": "This would be easier to read if extract a variable for the new identity", "url": "https://github.com/trinodb/trino/pull/2708#discussion_r374897404", "createdAt": "2020-02-04T20:12:18Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/server/security/AuthenticationFilter.java", "diffHunk": "@@ -87,7 +87,9 @@ public void doFilter(ServletRequest servletRequest, ServletResponse servletRespo\n                 response.setContentType(PLAIN_TEXT_UTF_8.toString());\n                 return;\n             }\n-            nextFilter.doFilter(withPrincipal(request, principal), response);\n+            withAuthenticatedIdentity(nextFilter, request, response, Identity.forUser(\"<internal>\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a34a88c1d3168b1947261bf2a393e5f294c4c45a", "author": {"user": {"login": "dain", "name": "Dain Sundstrom"}}, "url": "https://github.com/trinodb/trino/commit/a34a88c1d3168b1947261bf2a393e5f294c4c45a", "committedDate": "2020-02-07T12:51:35Z", "message": "Clean up warnings in HttpRequestSessionContext"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe962c2ef889cf7d37bb8631bece4a70e16efd95", "author": {"user": {"login": "dain", "name": "Dain Sundstrom"}}, "url": "https://github.com/trinodb/trino/commit/fe962c2ef889cf7d37bb8631bece4a70e16efd95", "committedDate": "2020-02-07T12:58:35Z", "message": "Replace AuthenticatedIdentity with Identity"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "fe962c2ef889cf7d37bb8631bece4a70e16efd95", "author": {"user": {"login": "dain", "name": "Dain Sundstrom"}}, "url": "https://github.com/trinodb/trino/commit/fe962c2ef889cf7d37bb8631bece4a70e16efd95", "committedDate": "2020-02-07T12:58:35Z", "message": "Replace AuthenticatedIdentity with Identity"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1773, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}