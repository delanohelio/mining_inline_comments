{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMzIxNjI2", "number": 6185, "title": "Ensure exactly single delivery of query completion event", "bodyText": "Thoughtful part of this PR by @findepi. I did the final edit :)", "createdAt": "2020-12-02T22:13:30Z", "url": "https://github.com/trinodb/trino/pull/6185", "merged": true, "mergeCommit": {"oid": "90d04bd94b02fb38d09ff6c3043edd3690b68058"}, "closed": true, "closedAt": "2020-12-03T17:10:05Z", "author": {"login": "losipiuk"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdih4V0ABqjQwNjcxMDMwODg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdilKYMgBqjQwNjgyNDg4OTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MDgzMDI4", "url": "https://github.com/trinodb/trino/pull/6185#pullrequestreview-544083028", "createdAt": "2020-12-03T15:31:06Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNTozMTowNlrOH-iJKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNTozNToxM1rOH-ieMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMzMzE2Mg==", "bodyText": "remember to remove", "url": "https://github.com/trinodb/trino/pull/6185#discussion_r535333162", "createdAt": "2020-12-03T15:31:06Z", "author": {"login": "findepi"}, "path": "presto-tests/src/test/java/io/prestosql/execution/TestEventListenerBasic.java", "diffHunk": "@@ -259,7 +259,7 @@ public void testReferencedTablesAndRoutines()\n         assertEquals(routine.getAuthorization(), \"user\");\n     }\n \n-    @Test\n+    @Test(invocationCount = 100)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMzMzI3OA==", "bodyText": "reminder", "url": "https://github.com/trinodb/trino/pull/6185#discussion_r535333278", "createdAt": "2020-12-03T15:31:11Z", "author": {"login": "findepi"}, "path": ".github/workflows/ci.yml", "diffHunk": "@@ -239,7 +239,7 @@ jobs:\n           - \"presto-oracle\"\n           - \"presto-kudu\"\n           - \"presto-phoenix,presto-iceberg,presto-druid\"\n-    timeout-minutes: 60\n+    timeout-minutes: 180", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMzNDk2Mg==", "bodyText": "private final\n\n\nremove false, as its the default (\"code style\" i guess)", "url": "https://github.com/trinodb/trino/pull/6185#discussion_r535334962", "createdAt": "2020-12-03T15:32:18Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/dispatcher/LocalDispatchQuery.java", "diffHunk": "@@ -56,22 +56,27 @@\n     private final QueryStateMachine stateMachine;\n     private final ListenableFuture<QueryExecution> queryExecutionFuture;\n \n+    private final QueryMonitor queryMonitor;\n     private final ClusterSizeMonitor clusterSizeMonitor;\n \n     private final Executor queryExecutor;\n \n     private final Consumer<QueryExecution> querySubmitter;\n-    private final SettableFuture<DispatchStatus> submitted = SettableFuture.create();\n+    private final SettableFuture<?> submitted = SettableFuture.create();\n+\n+    AtomicBoolean notificationSentOrGuaranteed = new AtomicBoolean(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMzNjk4MA==", "bodyText": "Previously queryExecutionFuture.cancel(true); was done only for FAILED state. Let's maybe retain that behavior, as it seems not related", "url": "https://github.com/trinodb/trino/pull/6185#discussion_r535336980", "createdAt": "2020-12-03T15:33:47Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/dispatcher/LocalDispatchQuery.java", "diffHunk": "@@ -86,16 +91,16 @@ public LocalDispatchQuery(\n             }\n         });\n \n+        queryMonitor.queryCreatedEvent(stateMachine.getBasicQueryInfo(Optional.empty()));\n         stateMachine.addStateChangeListener(state -> {\n             if (state == QueryState.FAILED) {\n-                // if query is failed and dispatching was not finished yet, marking dispatching as failed\n-                submitted.set(FAILED);\n-                queryExecutionFuture.cancel(true);\n+                if (notificationSentOrGuaranteed.compareAndSet(false, true)) {\n+                    queryMonitor.queryImmediateFailureEvent(getBasicQueryInfo(), getFullQueryInfo().getFailureInfo());\n+                }\n             }\n-\n-            if (state.ordinal() > QueryState.DISPATCHING.ordinal()) {\n-                // we went past dispatching phase; warking submitted as successful\n-                submitted.set(DISPATCHED);\n+            if (state.isDone()) {\n+                submitted.set(null);\n+                queryExecutionFuture.cancel(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMzNzcxOQ==", "bodyText": "too many empty line\n(this is fixed in the TMP commit)", "url": "https://github.com/trinodb/trino/pull/6185#discussion_r535337719", "createdAt": "2020-12-03T15:34:28Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/dispatcher/LocalDispatchQueryFactory.java", "diffHunk": "@@ -110,7 +109,7 @@ public DispatchQuery createDispatchQuery(\n                 warningCollector,\n                 StatementUtils.getQueryType(preparedQuery.getStatement().getClass()));\n \n-        queryMonitor.queryCreatedEvent(stateMachine.getBasicQueryInfo(Optional.empty()));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMzODU0Nw==", "bodyText": "separate commit, or revert", "url": "https://github.com/trinodb/trino/pull/6185#discussion_r535338547", "createdAt": "2020-12-03T15:35:13Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/execution/SqlQueryManager.java", "diffHunk": "@@ -323,8 +315,8 @@ private void enforceScanLimits()\n             Optional<DataSize> limitOpt = getQueryMaxScanPhysicalBytes(query.getSession());\n             if (maxQueryScanPhysicalBytes.isPresent()) {\n                 limitOpt = limitOpt\n-                    .flatMap(sessionLimit -> maxQueryScanPhysicalBytes.map(serverLimit -> Ordering.natural().min(serverLimit, sessionLimit)))\n-                    .or(() -> maxQueryScanPhysicalBytes);\n+                        .flatMap(sessionLimit -> maxQueryScanPhysicalBytes.map(serverLimit -> Ordering.natural().min(serverLimit, sessionLimit)))\n+                        .or(() -> maxQueryScanPhysicalBytes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b2ce509109eb816af51a7efdd399315bace0394", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/1b2ce509109eb816af51a7efdd399315bace0394", "committedDate": "2020-12-03T15:46:59Z", "message": "Ensure exactly single delivery of query completion event"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "1b2ce509109eb816af51a7efdd399315bace0394", "author": {"user": {"login": "findepi", "name": "Piotr Findeisen"}}, "url": "https://github.com/trinodb/trino/commit/1b2ce509109eb816af51a7efdd399315bace0394", "committedDate": "2020-12-03T15:46:59Z", "message": "Ensure exactly single delivery of query completion event"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2014, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}