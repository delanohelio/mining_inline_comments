{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5NDE2MDQ4", "number": 5218, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwODo0NzowNlrOEljqtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwODo0NzowNlrOEljqtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3ODE3MTQyOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/operator/HashSemiJoinOperator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwODo0NzowNlrOHVF-Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNDoyNzozMlrOHVS6gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg3OTk0Ng==", "bodyText": "Maybe that should just be called getColumn instead?", "url": "https://github.com/trinodb/trino/pull/5218#discussion_r491879946", "createdAt": "2020-09-21T08:47:06Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/operator/HashSemiJoinOperator.java", "diffHunk": "@@ -184,7 +184,7 @@ public SemiJoinPages(SetSupplier channelSetFuture, int probeJoinChannel, Optiona\n             // we know the exact size required for the block\n             BlockBuilder blockBuilder = BOOLEAN.createFixedSizeBlockBuilder(inputPage.getPositionCount());\n \n-            Page probeJoinPage = new Page(inputPage.getBlock(probeJoinChannel));\n+            Page probeJoinPage = inputPage.getColumns(probeJoinChannel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2dc995b4e1467a48ed23f1ccc18313ff56f076b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxMzIwMQ==", "bodyText": "I thought about that but wanted to overload the varargs method so that single column extraction didn\u2019t accidentally incur the temporary array cost. I could also add a getColumn version of the same thing but would still advocate for the single int overload to make sure accidental usage of the varargs version with a single argument doesn\u2019t incur the temporary array cost. Thoughts?", "url": "https://github.com/trinodb/trino/pull/5218#discussion_r492013201", "createdAt": "2020-09-21T12:42:52Z", "author": {"login": "pettyjamesm"}, "path": "presto-main/src/main/java/io/prestosql/operator/HashSemiJoinOperator.java", "diffHunk": "@@ -184,7 +184,7 @@ public SemiJoinPages(SetSupplier channelSetFuture, int probeJoinChannel, Optiona\n             // we know the exact size required for the block\n             BlockBuilder blockBuilder = BOOLEAN.createFixedSizeBlockBuilder(inputPage.getPositionCount());\n \n-            Page probeJoinPage = new Page(inputPage.getBlock(probeJoinChannel));\n+            Page probeJoinPage = inputPage.getColumns(probeJoinChannel);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg3OTk0Ng=="}, "originalCommit": {"oid": "c2dc995b4e1467a48ed23f1ccc18313ff56f076b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA5MjAzMw==", "bodyText": "Yes. That makes sense. Thank you.", "url": "https://github.com/trinodb/trino/pull/5218#discussion_r492092033", "createdAt": "2020-09-21T14:27:32Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/operator/HashSemiJoinOperator.java", "diffHunk": "@@ -184,7 +184,7 @@ public SemiJoinPages(SetSupplier channelSetFuture, int probeJoinChannel, Optiona\n             // we know the exact size required for the block\n             BlockBuilder blockBuilder = BOOLEAN.createFixedSizeBlockBuilder(inputPage.getPositionCount());\n \n-            Page probeJoinPage = new Page(inputPage.getBlock(probeJoinChannel));\n+            Page probeJoinPage = inputPage.getColumns(probeJoinChannel);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg3OTk0Ng=="}, "originalCommit": {"oid": "c2dc995b4e1467a48ed23f1ccc18313ff56f076b"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2997, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}