{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NTg4ODU5", "number": 2601, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNToyNzoyNVrODahX1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNToyNzoyNVrODahX1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MTM2MzQyOnYy", "diffSide": "RIGHT", "path": "presto-postgresql/src/main/java/io/prestosql/plugin/postgresql/PostgreSqlClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNToyNzoyNVrOFhhPyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxNTo0NDowNFrOFhwYtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY5MjA0MQ==", "bodyText": "Did you consider the following funciton? (It might be misleading though)\ntypedVarcharWriteFunction(\"money\"),", "url": "https://github.com/trinodb/trino/pull/2601#discussion_r370692041", "createdAt": "2020-01-24T15:27:25Z", "author": {"login": "ebyhr"}, "path": "presto-postgresql/src/main/java/io/prestosql/plugin/postgresql/PostgreSqlClient.java", "diffHunk": "@@ -661,6 +663,35 @@ private static SliceWriteFunction typedVarcharWriteFunction(String jdbcTypeName)\n         };\n     }\n \n+    private static ColumnMapping moneyColumnMapping()\n+    {\n+        // Money mapping can be improved when PostgreSQL gains explicit money type support.\n+        // See https://github.com/pgjdbc/pgjdbc/issues/425 for more information.\n+        return ColumnMapping.sliceMapping(\n+                VARCHAR,\n+                new SliceReadFunction()\n+                {\n+                    @Override\n+                    public boolean isNull(ResultSet resultSet, int columnIndex)\n+                            throws SQLException\n+                    {\n+                        // In PostgreSQL JDBC, money is mapped as double.\n+                        // .getObject() calls .getDouble and it fails to parse the money value.\n+                        resultSet.getString(columnIndex);\n+                        return resultSet.wasNull();\n+                    }\n+\n+                    @Override\n+                    public Slice readSlice(ResultSet resultSet, int columnIndex)\n+                            throws SQLException\n+                    {\n+                        return utf8Slice(resultSet.getString(columnIndex));\n+                    }\n+                },\n+                (statement, index, value) -> { throw new PrestoException(NOT_SUPPORTED, \"Money type is not supported for INSERT\"); },", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkzOTM3OQ==", "bodyText": "No, i didn't, thanks for point this out.\nI don't fully understand the rules of the money type in pg.\nI sympathize a bit with pgjdbc/pgjdbc#425 (comment) .\nI'd prefer to understand the type better before unlocking writing.\nAlso, current mapping money \u2192 varchar isn't really suitable for writing.\nMapping to decimal(.., 2) sounds like a better idea, but this is much harder to implement the reading.\nPostgres returns a String like $10,000.42 and I'd need to parse it. OK, but what do i do if it returns \u00a510,000.42?\nThat's why i mapped it to varchar, without any interpretation on our side.", "url": "https://github.com/trinodb/trino/pull/2601#discussion_r370939379", "createdAt": "2020-01-25T15:32:39Z", "author": {"login": "findepi"}, "path": "presto-postgresql/src/main/java/io/prestosql/plugin/postgresql/PostgreSqlClient.java", "diffHunk": "@@ -661,6 +663,35 @@ private static SliceWriteFunction typedVarcharWriteFunction(String jdbcTypeName)\n         };\n     }\n \n+    private static ColumnMapping moneyColumnMapping()\n+    {\n+        // Money mapping can be improved when PostgreSQL gains explicit money type support.\n+        // See https://github.com/pgjdbc/pgjdbc/issues/425 for more information.\n+        return ColumnMapping.sliceMapping(\n+                VARCHAR,\n+                new SliceReadFunction()\n+                {\n+                    @Override\n+                    public boolean isNull(ResultSet resultSet, int columnIndex)\n+                            throws SQLException\n+                    {\n+                        // In PostgreSQL JDBC, money is mapped as double.\n+                        // .getObject() calls .getDouble and it fails to parse the money value.\n+                        resultSet.getString(columnIndex);\n+                        return resultSet.wasNull();\n+                    }\n+\n+                    @Override\n+                    public Slice readSlice(ResultSet resultSet, int columnIndex)\n+                            throws SQLException\n+                    {\n+                        return utf8Slice(resultSet.getString(columnIndex));\n+                    }\n+                },\n+                (statement, index, value) -> { throw new PrestoException(NOT_SUPPORTED, \"Money type is not supported for INSERT\"); },", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY5MjA0MQ=="}, "originalCommit": null, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0MDA4NQ==", "bodyText": "I added some comment in the code.", "url": "https://github.com/trinodb/trino/pull/2601#discussion_r370940085", "createdAt": "2020-01-25T15:44:04Z", "author": {"login": "findepi"}, "path": "presto-postgresql/src/main/java/io/prestosql/plugin/postgresql/PostgreSqlClient.java", "diffHunk": "@@ -661,6 +663,35 @@ private static SliceWriteFunction typedVarcharWriteFunction(String jdbcTypeName)\n         };\n     }\n \n+    private static ColumnMapping moneyColumnMapping()\n+    {\n+        // Money mapping can be improved when PostgreSQL gains explicit money type support.\n+        // See https://github.com/pgjdbc/pgjdbc/issues/425 for more information.\n+        return ColumnMapping.sliceMapping(\n+                VARCHAR,\n+                new SliceReadFunction()\n+                {\n+                    @Override\n+                    public boolean isNull(ResultSet resultSet, int columnIndex)\n+                            throws SQLException\n+                    {\n+                        // In PostgreSQL JDBC, money is mapped as double.\n+                        // .getObject() calls .getDouble and it fails to parse the money value.\n+                        resultSet.getString(columnIndex);\n+                        return resultSet.wasNull();\n+                    }\n+\n+                    @Override\n+                    public Slice readSlice(ResultSet resultSet, int columnIndex)\n+                            throws SQLException\n+                    {\n+                        return utf8Slice(resultSet.getString(columnIndex));\n+                    }\n+                },\n+                (statement, index, value) -> { throw new PrestoException(NOT_SUPPORTED, \"Money type is not supported for INSERT\"); },", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY5MjA0MQ=="}, "originalCommit": null, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1072, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}