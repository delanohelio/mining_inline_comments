{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1ODU0NTU4", "number": 6444, "title": "Merge TestingKafka classes", "bodyText": "Retry sending kafka message in tests", "createdAt": "2020-12-27T20:38:06Z", "url": "https://github.com/trinodb/trino/pull/6444", "merged": true, "mergeCommit": {"oid": "e3b40c87f2d58ba349a72bc69f6dcdce0cee790d"}, "closed": true, "closedAt": "2021-01-05T07:59:10Z", "author": {"login": "kokosing"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdqkrxjgFqTU1OTEwODcyNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABds8EFUABqjQxNjY1Mjk3NzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MTA4NzI0", "url": "https://github.com/trinodb/trino/pull/6444#pullrequestreview-559108724", "createdAt": "2020-12-28T11:36:03Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMTozNjowM1rOIL3mhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMTo0NToxMlrOIL3wbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMxNjIyOA==", "bodyText": "nit: remove one of the only words in the second sentence of commit message", "url": "https://github.com/trinodb/trino/pull/6444#discussion_r549316228", "createdAt": "2020-12-28T11:36:03Z", "author": {"login": "skrzypo987"}, "path": "presto-kafka/src/test/java/io/prestosql/plugin/kafka/TestKafkaIntegrationPushDown.java", "diffHunk": "@@ -13,7 +13,6 @@\n  */\n package io.prestosql.plugin.kafka;\n \n-import com.google.common.collect.ImmutableList;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMxODc2Ng==", "bodyText": "\"Optional\" arguments should be at the end of arg list.", "url": "https://github.com/trinodb/trino/pull/6444#discussion_r549318766", "createdAt": "2020-12-28T11:45:12Z", "author": {"login": "skrzypo987"}, "path": "presto-testing-kafka/src/main/java/io/prestosql/testing/kafka/TestingKafka.java", "diffHunk": "@@ -30,6 +33,13 @@\n \n     void createTopicWithConfig(int partitions, int replication, String topic, boolean enableLogAppendTime);\n \n+    default <K, V> RecordMetadata sendMessages(Stream<ProducerRecord<K, V>> recordStream)\n+    {\n+        return sendMessages(ImmutableMap.of(), recordStream);\n+    }\n+\n+    <K, V> RecordMetadata sendMessages(Map<String, String> extraProducerProperties, Stream<ProducerRecord<K, V>> recordStream);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwOTAwNDEy", "url": "https://github.com/trinodb/trino/pull/6444#pullrequestreview-560900412", "createdAt": "2021-01-04T09:54:12Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwOTo1NDoxMlrOINrc7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMjowMTozOVrOINvPjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIxNDMxNg==", "bodyText": "The URL is common across all the test methods.. Can we move it to TestingKafkaWithSchemaRegistry#createProducer", "url": "https://github.com/trinodb/trino/pull/6444#discussion_r551214316", "createdAt": "2021-01-04T09:54:12Z", "author": {"login": "Praveen2112"}, "path": "presto-kafka/src/test/java/io/prestosql/plugin/kafka/schema/confluent/TestKafkaWithConfluentSchemaRegistryMinimalFunctionality.java", "diffHunk": "@@ -93,7 +97,11 @@ public void testBasicTopic()\n                 format(\"SELECT col_1, col_2 FROM %s\", toDoubleQuoted(topic)),\n                 format(\"SELECT col_1, col_2, col_3 FROM %s\", toDoubleQuoted(topic)),\n                 false,\n-                () -> testingKafkaWithSchemaRegistry.createProducer());\n+                ImmutableMap.<String, String>builder()\n+                        .put(SCHEMA_REGISTRY_URL_CONFIG, testingKafkaWithSchemaRegistry.getSchemaRegistryConnectString())", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI3NjQyOQ==", "bodyText": "Can we extract the common properties ?", "url": "https://github.com/trinodb/trino/pull/6444#discussion_r551276429", "createdAt": "2021-01-04T12:01:39Z", "author": {"login": "Praveen2112"}, "path": "plugin/trino-kafka/src/test/java/io/trino/plugin/kafka/schema/confluent/TestKafkaWithConfluentSchemaRegistryMinimalFunctionality.java", "diffHunk": "@@ -88,60 +89,84 @@ protected QueryRunner createQueryRunner()\n     public void testBasicTopic()\n     {\n         String topic = \"topic-basic-MixedCase\";\n-        assertTopic(topic,\n+        assertTopic(\n+                topic,\n                 format(\"SELECT col_1, col_2 FROM %s\", toDoubleQuoted(topic)),\n                 format(\"SELECT col_1, col_2, col_3 FROM %s\", toDoubleQuoted(topic)),\n                 false,\n-                () -> testingKafkaWithSchemaRegistry.createProducer());\n+                ImmutableMap.<String, String>builder()\n+                        .put(SCHEMA_REGISTRY_URL_CONFIG, testingKafka.getSchemaRegistryConnectString())\n+                        .put(KEY_SERIALIZER_CLASS_CONFIG, LongSerializer.class.getName())\n+                        .put(VALUE_SERIALIZER_CLASS_CONFIG, KafkaAvroSerializer.class.getName())\n+                        .build());\n     }\n \n     @Test\n     public void testTopicWithKeySubject()\n     {\n         String topic = \"topic-Key-Subject\";\n-        assertTopic(topic,\n+        assertTopic(\n+                topic,\n                 format(\"SELECT \\\"%s-key\\\", col_1, col_2 FROM %s\", topic, toDoubleQuoted(topic)),\n                 format(\"SELECT \\\"%s-key\\\", col_1, col_2, col_3 FROM %s\", topic, toDoubleQuoted(topic)),\n                 true,\n-                () -> testingKafkaWithSchemaRegistry.createConfluentProducer());\n+                ImmutableMap.<String, String>builder()\n+                        .put(SCHEMA_REGISTRY_URL_CONFIG, testingKafka.getSchemaRegistryConnectString())", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 93}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "f68a00bbc5edbb5db13dabaff277298e119ba511", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/f68a00bbc5edbb5db13dabaff277298e119ba511", "committedDate": "2021-01-04T20:02:27Z", "message": "Fix formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7de6287901d7cbf1cc8cd05fd2171a702e0e9c91", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/7de6287901d7cbf1cc8cd05fd2171a702e0e9c91", "committedDate": "2021-01-04T20:02:27Z", "message": "Update latest Kafka for testing to 6.0.1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f59be9548497f77278ef645f79b07f3fd041868", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/8f59be9548497f77278ef645f79b07f3fd041868", "committedDate": "2021-01-04T20:02:27Z", "message": "Close testing kafka instance after tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "361b15f6359f6c897d8f94dae3518ee6a974af2a", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/361b15f6359f6c897d8f94dae3518ee6a974af2a", "committedDate": "2021-01-04T20:03:38Z", "message": "Close testing kafka after query runner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53333ae513d6b57052364a6737a70d8bad2eaecf", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/53333ae513d6b57052364a6737a70d8bad2eaecf", "committedDate": "2021-01-04T20:03:40Z", "message": "Remove debug timestamp test dump\n\nIt is only useful for local development when debugging issues.\nLikely during debugging simple additional logging would be much easier\nand less complex for that.\n\nThis code makes tests code to be less maintainable. As it make tests\ncases non trivial."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd0a0f9b922f21064dd08ac8afbc774b436ccab9", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/bd0a0f9b922f21064dd08ac8afbc774b436ccab9", "committedDate": "2021-01-04T20:03:40Z", "message": "Inline createConfluentProducer methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4cfd72562318d14b538ce661769c365a33a4d62", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/c4cfd72562318d14b538ce661769c365a33a4d62", "committedDate": "2021-01-04T20:04:25Z", "message": "Extract TestingKafka::sendMessages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ab9e3bf19f8b451c366854e6dae3b9e75c0f6cf", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/5ab9e3bf19f8b451c366854e6dae3b9e75c0f6cf", "committedDate": "2021-01-04T20:04:27Z", "message": "Retry sending kafka message in tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60a207c4b66dfae3658b57faccc15d047b37a10e", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/60a207c4b66dfae3658b57faccc15d047b37a10e", "committedDate": "2021-01-04T20:05:30Z", "message": "Merge TestingKafka classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6797caad488c706a3aad0e3d4ed2939f339168d0", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/6797caad488c706a3aad0e3d4ed2939f339168d0", "committedDate": "2021-01-04T20:05:32Z", "message": "Add logging for testing Kafka dockers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "6797caad488c706a3aad0e3d4ed2939f339168d0", "author": {"user": {"login": "kokosing", "name": "Grzegorz Kokosi\u0144ski"}}, "url": "https://github.com/trinodb/trino/commit/6797caad488c706a3aad0e3d4ed2939f339168d0", "committedDate": "2021-01-04T20:05:32Z", "message": "Add logging for testing Kafka dockers"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1934, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}