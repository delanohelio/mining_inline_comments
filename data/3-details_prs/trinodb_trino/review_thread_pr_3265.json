{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MDMxMTA3", "number": 3265, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNzo1NToyMlrODsjXRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNzo1ODowOVrODsjbTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MDQzMzMyOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/connector/hive.rst", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNzo1NToyMlrOF9dpgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwODoxMjoyMlrOF9ePZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk5MzIxOA==", "bodyText": "IIRC there was an issue with specifing accessKey and secretKey together iamRole. Should we document this? Or maybe even disallow such mappings in the code.", "url": "https://github.com/trinodb/trino/pull/3265#discussion_r399993218", "createdAt": "2020-03-30T07:55:22Z", "author": {"login": "kokosing"}, "path": "presto-docs/src/main/sphinx/connector/hive.rst", "diffHunk": "@@ -429,6 +429,101 @@ or credentials for a specific use case (e.g., bucket/user specific credentials).\n This Hadoop configuration property must be set in the Hadoop configuration\n files referenced by the ``hive.config.resources`` Hive connector property.\n \n+S3 Security Mapping\n+^^^^^^^^^^^^^^^^^^^\n+\n+Presto supports flexible security mapping for S3, allowing for separate\n+credentials or IAM roles for specific users or buckets/paths. The IAM role\n+for a specific query can be selected from a list of allowed roles by providing\n+it as an *extra credential*.\n+\n+Each security mapping entry may specify one or more match criteria. If multiple\n+criteria are specified, all criteria must match. Available match criteria:\n+\n+* ``user``: Regular expression to match against username. Example: ``alice|bob``\n+\n+* ``group``: Regular expression to match against any of the groups that the user\n+  belongs to. Example: ``finance|sales``\n+\n+* ``prefix``: S3 URL prefix. It can specify an entire bucket or a path within a\n+  bucket. The URL must start with ``s3://`` but will also match ``s3a`` or ``s3n``.\n+  Example: ``s3://bucket-name/abc/xyz/``\n+\n+The security mapping must provide one or more configuration settings:\n+\n+* ``accessKey`` and ``secretKey``: AWS access key and secret key. This overrides\n+  any globally configured credentials, such as access key or instance credentials.\n+\n+* ``iamRole``: IAM role to use if no user provided role is specified as an\n+  extra credential. This overrides any globally configured IAM role. This role\n+  is allowed to be specified as an extra credential, although specifying it\n+  explicitly has no effect, as it would be used anyway.\n+\n+* ``allowedIamRoles``: IAM roles that are allowed to be specified as an extra\n+  credential. This is useful because a particular AWS account may have permissions\n+  to use many roles, but a specific user should only be allowed to use a subset\n+  of those roles.\n+\n+The security mapping entries are processed in the order listed in the configuration\n+file. More specific mappings should thus be specified before less specific mappings.\n+For example, the mapping list might have URL prefix ``s3://abc/xyz/`` followed by\n+``s3://abc/`` to allow different configuration for a specific path within a bucket\n+than for other paths within the bucket. You can set default configuration by not\n+including any match criteria for the last entry in the list.\n+\n+Example JSON configuration file:\n+\n+.. code-block:: json\n+\n+    {\n+      \"mappings\": [\n+        {\n+          \"prefix\": \"s3://bucket-name/abc/\",\n+          \"iamRole\": \"arn:aws:iam::123456789101:role/test_path\"\n+        },\n+        {\n+          \"user\": \"bob|charlie\",\n+          \"iamRole\": \"arn:aws:iam::123456789101:role/test_default\",\n+          \"allowedIamRoles\": [\n+            \"arn:aws:iam::123456789101:role/test1\",\n+            \"arn:aws:iam::123456789101:role/test2\",\n+            \"arn:aws:iam::123456789101:role/test3\"\n+          ]\n+        },\n+        {\n+          \"prefix\": \"s3://special-bucket/\",\n+          \"accessKey\": \"AKIAxxxaccess\",\n+          \"secretKey\": \"iXbXxxxsecret\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAwMjkxOA==", "bodyText": "You're right, the current code in PrestoS3FileSystem#createAwsCredentialsProvider returns AWSStaticCredentialsProvider if credentials exist. However, the intent is that they can be used together, so we should fix that to make these the withLongLivedCredentials(...) for STSAssumeRoleSessionCredentialsProvider.", "url": "https://github.com/trinodb/trino/pull/3265#discussion_r400002918", "createdAt": "2020-03-30T08:12:22Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/connector/hive.rst", "diffHunk": "@@ -429,6 +429,101 @@ or credentials for a specific use case (e.g., bucket/user specific credentials).\n This Hadoop configuration property must be set in the Hadoop configuration\n files referenced by the ``hive.config.resources`` Hive connector property.\n \n+S3 Security Mapping\n+^^^^^^^^^^^^^^^^^^^\n+\n+Presto supports flexible security mapping for S3, allowing for separate\n+credentials or IAM roles for specific users or buckets/paths. The IAM role\n+for a specific query can be selected from a list of allowed roles by providing\n+it as an *extra credential*.\n+\n+Each security mapping entry may specify one or more match criteria. If multiple\n+criteria are specified, all criteria must match. Available match criteria:\n+\n+* ``user``: Regular expression to match against username. Example: ``alice|bob``\n+\n+* ``group``: Regular expression to match against any of the groups that the user\n+  belongs to. Example: ``finance|sales``\n+\n+* ``prefix``: S3 URL prefix. It can specify an entire bucket or a path within a\n+  bucket. The URL must start with ``s3://`` but will also match ``s3a`` or ``s3n``.\n+  Example: ``s3://bucket-name/abc/xyz/``\n+\n+The security mapping must provide one or more configuration settings:\n+\n+* ``accessKey`` and ``secretKey``: AWS access key and secret key. This overrides\n+  any globally configured credentials, such as access key or instance credentials.\n+\n+* ``iamRole``: IAM role to use if no user provided role is specified as an\n+  extra credential. This overrides any globally configured IAM role. This role\n+  is allowed to be specified as an extra credential, although specifying it\n+  explicitly has no effect, as it would be used anyway.\n+\n+* ``allowedIamRoles``: IAM roles that are allowed to be specified as an extra\n+  credential. This is useful because a particular AWS account may have permissions\n+  to use many roles, but a specific user should only be allowed to use a subset\n+  of those roles.\n+\n+The security mapping entries are processed in the order listed in the configuration\n+file. More specific mappings should thus be specified before less specific mappings.\n+For example, the mapping list might have URL prefix ``s3://abc/xyz/`` followed by\n+``s3://abc/`` to allow different configuration for a specific path within a bucket\n+than for other paths within the bucket. You can set default configuration by not\n+including any match criteria for the last entry in the list.\n+\n+Example JSON configuration file:\n+\n+.. code-block:: json\n+\n+    {\n+      \"mappings\": [\n+        {\n+          \"prefix\": \"s3://bucket-name/abc/\",\n+          \"iamRole\": \"arn:aws:iam::123456789101:role/test_path\"\n+        },\n+        {\n+          \"user\": \"bob|charlie\",\n+          \"iamRole\": \"arn:aws:iam::123456789101:role/test_default\",\n+          \"allowedIamRoles\": [\n+            \"arn:aws:iam::123456789101:role/test1\",\n+            \"arn:aws:iam::123456789101:role/test2\",\n+            \"arn:aws:iam::123456789101:role/test3\"\n+          ]\n+        },\n+        {\n+          \"prefix\": \"s3://special-bucket/\",\n+          \"accessKey\": \"AKIAxxxaccess\",\n+          \"secretKey\": \"iXbXxxxsecret\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk5MzIxOA=="}, "originalCommit": null, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MDQ0MzY2OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/s3/S3SecurityMappingConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNzo1ODowOVrOF9dvnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNzo1ODowOVrOF9dvnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk5NDc4MQ==", "bodyText": "Add @ConfigDescription to these.", "url": "https://github.com/trinodb/trino/pull/3265#discussion_r399994781", "createdAt": "2020-03-30T07:58:09Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/s3/S3SecurityMappingConfig.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.hive.s3;\n+\n+import io.airlift.configuration.Config;\n+import io.airlift.units.Duration;\n+\n+import java.io.File;\n+import java.util.Optional;\n+\n+public class S3SecurityMappingConfig\n+{\n+    private File configFile;\n+    private String roleCredentialName;\n+    private Duration refreshPeriod;\n+    private String colonEscape;\n+\n+    public Optional<File> getConfigFile()\n+    {\n+        return Optional.ofNullable(configFile);\n+    }\n+\n+    @Config(\"hive.s3.security-mapping.config-file\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 511, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}