{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzODkxNDM2", "number": 3638, "title": "Parallelize stats update", "bodyText": "Fixes #2493", "createdAt": "2020-05-06T05:51:22Z", "url": "https://github.com/trinodb/trino/pull/3638", "merged": true, "mergeCommit": {"oid": "be931e74cbf7df8a44c6f982bd64473e83ee8566"}, "closed": true, "closedAt": "2020-11-12T10:07:17Z", "author": {"login": "sanchitkashyap"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABci_VH-AFqTQxNDk0MTI2Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdazbpEgBqjM5NzMzNzE2MjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0OTQxMjY2", "url": "https://github.com/trinodb/trino/pull/3638#pullrequestreview-414941266", "createdAt": "2020-05-20T01:59:03Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwMTo1OTowM1rOGX4rPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwMTo1OTowM1rOGX4rPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY5OTAwNw==", "bodyText": "Perhaps use the signature we use elsewhere in this class (MoreFutures.getFutureValue(fileRenameFuture, PrestoException.class)).", "url": "https://github.com/trinodb/trino/pull/3638#discussion_r427699007", "createdAt": "2020-05-20T01:59:03Z", "author": {"login": "aalbu"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/SemiTransactionalHiveMetastore.java", "diffHunk": "@@ -1603,8 +1606,12 @@ private void executeAddPartitionOperations()\n \n         private void executeUpdateStatisticsOperations()\n         {\n+            ImmutableList.Builder<CompletableFuture<?>> executeUpdateFutures = ImmutableList.builder();\n             for (UpdateStatisticsOperation operation : updateStatisticsOperations) {\n-                operation.run(delegate);\n+                executeUpdateFutures.add(CompletableFuture.runAsync(() -> operation.run(delegate), updateExecutor));\n+            }\n+            for (CompletableFuture<?> executeUpdateFuture : executeUpdateFutures.build()) {\n+                MoreFutures.getFutureValue(executeUpdateFuture);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MDA0Nzkx", "url": "https://github.com/trinodb/trino/pull/3638#pullrequestreview-416004791", "createdAt": "2020-05-21T09:28:39Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwOToyODozOVrOGYsVcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwOTozMjo0N1rOGYsc_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU0NTM5NQ==", "bodyText": "Previously failed operation would cause fast-failure of stats update. Now update would continue (in threads) even though one of the futures failed. I think we should wait for all futures to complete. Perhaps we should have a utility method that encapsulates mechanism from executeIrreversibleMetastoreOperations\nWDYT: @electrum @findepi ?", "url": "https://github.com/trinodb/trino/pull/3638#discussion_r428545395", "createdAt": "2020-05-21T09:28:39Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/SemiTransactionalHiveMetastore.java", "diffHunk": "@@ -1603,8 +1606,12 @@ private void executeAddPartitionOperations()\n \n         private void executeUpdateStatisticsOperations()\n         {\n+            ImmutableList.Builder<CompletableFuture<?>> executeUpdateFutures = ImmutableList.builder();\n             for (UpdateStatisticsOperation operation : updateStatisticsOperations) {\n-                operation.run(delegate);\n+                executeUpdateFutures.add(CompletableFuture.runAsync(() -> operation.run(delegate), updateExecutor));\n+            }\n+            for (CompletableFuture<?> executeUpdateFuture : executeUpdateFutures.build()) {\n+                MoreFutures.getFutureValue(executeUpdateFuture, PrestoException.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU0NjU4MQ==", "bodyText": "I think now there can be a race condition if one of the update futures fails, but others continue. In such case update and undo operations would be executed at the same time", "url": "https://github.com/trinodb/trino/pull/3638#discussion_r428546581", "createdAt": "2020-05-21T09:31:16Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/SemiTransactionalHiveMetastore.java", "diffHunk": "@@ -1659,13 +1666,19 @@ private void undoAlterPartitionOperations()\n \n         private void undoUpdateStatisticsOperations()\n         {\n+            ImmutableList.Builder<CompletableFuture<?>> undoUpdateFutures = ImmutableList.builder();\n             for (UpdateStatisticsOperation operation : updateStatisticsOperations) {\n-                try {\n-                    operation.undo(delegate);\n-                }\n-                catch (Throwable throwable) {\n-                    logCleanupFailure(throwable, \"failed to rollback: %s\", operation.getDescription());\n-                }\n+                undoUpdateFutures.add(CompletableFuture.runAsync(() -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU0NzMyNA==", "bodyText": "just use getFutureValue(undoUpdateFuture). none of the futures can fail as we catch all throwables. You could add a comment also.", "url": "https://github.com/trinodb/trino/pull/3638#discussion_r428547324", "createdAt": "2020-05-21T09:32:47Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/SemiTransactionalHiveMetastore.java", "diffHunk": "@@ -1659,13 +1666,19 @@ private void undoAlterPartitionOperations()\n \n         private void undoUpdateStatisticsOperations()\n         {\n+            ImmutableList.Builder<CompletableFuture<?>> undoUpdateFutures = ImmutableList.builder();\n             for (UpdateStatisticsOperation operation : updateStatisticsOperations) {\n-                try {\n-                    operation.undo(delegate);\n-                }\n-                catch (Throwable throwable) {\n-                    logCleanupFailure(throwable, \"failed to rollback: %s\", operation.getDescription());\n-                }\n+                undoUpdateFutures.add(CompletableFuture.runAsync(() -> {\n+                    try {\n+                        operation.undo(delegate);\n+                    }\n+                    catch (Throwable throwable) {\n+                        logCleanupFailure(throwable, \"failed to rollback: %s\", operation.getDescription());\n+                    }\n+                }, updateExecutor));\n+            }\n+            for (CompletableFuture<?> undoUpdateFuture : undoUpdateFutures.build()) {\n+                MoreFutures.getFutureValue(undoUpdateFuture, PrestoException.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 60}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MDc2NjQw", "url": "https://github.com/trinodb/trino/pull/3638#pullrequestreview-526076640", "createdAt": "2020-11-09T09:41:41Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8de1fa4bdf6f15a068a663444772560baed5d1c", "author": {"user": null}, "url": "https://github.com/trinodb/trino/commit/f8de1fa4bdf6f15a068a663444772560baed5d1c", "committedDate": "2020-11-09T11:52:54Z", "message": "Parallelize stats update"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "f8de1fa4bdf6f15a068a663444772560baed5d1c", "author": {"user": null}, "url": "https://github.com/trinodb/trino/commit/f8de1fa4bdf6f15a068a663444772560baed5d1c", "committedDate": "2020-11-09T11:52:54Z", "message": "Parallelize stats update"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1405, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}