{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MDUwMjE2", "number": 5210, "title": "Add 342 release notes", "bodyText": "Closes #5111", "createdAt": "2020-09-18T03:43:25Z", "url": "https://github.com/trinodb/trino/pull/5210", "merged": true, "mergeCommit": {"oid": "244fe75ce738e4fe714240e86d908f77e9f460c6"}, "closed": true, "closedAt": "2020-09-24T19:30:54Z", "author": {"login": "martint"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdK-NDbgFqTQ5MjMyODA4Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMGYunABqjM4MDQ3NjYzMjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMzI4MDg3", "url": "https://github.com/trinodb/trino/pull/5210#pullrequestreview-492328087", "createdAt": "2020-09-21T07:16:33Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNzoxNjozM1rOHVDG-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNzoyMzo0NlrOHVDSqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzMzA4MQ==", "bodyText": "Maybe w should describe it in terms of SQL syntax, not internal operator.\nSth like:\nImprove performance of queries which use ``expression IN SELECT ...`` filters. This is achieved via additional support for dynamic filtering an dynamic partition pruning.", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r491833081", "createdAt": "2020-09-21T07:16:33Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve query performance by adding support for dynamic filtering and dynamic", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzMzUxMQ==", "bodyText": "Reduce dynamic partition pruning overhead?", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r491833511", "createdAt": "2020-09-21T07:17:37Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve query performance by adding support for dynamic filtering and dynamic\n+  partition pruning to semi-join relational operator. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzMzgwMA==", "bodyText": "I think this one requires explanation what it actually means for the user.", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r491833800", "createdAt": "2020-09-21T07:18:24Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve query performance by adding support for dynamic filtering and dynamic\n+  partition pruning to semi-join relational operator. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzNDkxNA==", "bodyText": "It feels to me that we are using dynamic partition pruning and dynamic filtering interchangeably without consequence. I think for changes which relate to both we should stick to dynamic filtering, as this is more general feature and only use dynamic partition pruning for specific cases.", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r491834914", "createdAt": "2020-09-21T07:20:56Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve query performance by adding support for dynamic filtering and dynamic\n+  partition pruning to semi-join relational operator. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzNTM0OQ==", "bodyText": "I do not understand what matching mean in this context (or rather I would not know if I did not read the PR).", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r491835349", "createdAt": "2020-09-21T07:22:07Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve query performance by adding support for dynamic filtering and dynamic\n+  partition pruning to semi-join relational operator. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzNjA3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Improve performance of `INSERT` statement when MySQL instance isn't running with GTID mode. ({issue}`4995`)\n          \n          \n            \n            * Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r491836072", "createdAt": "2020-09-21T07:23:46Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve query performance by adding support for dynamic filtering and dynamic\n+  partition pruning to semi-join relational operator. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when JSON encoder is in use. ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running with GTID mode. ({issue}`4995`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjM0NjYz", "url": "https://github.com/trinodb/trino/pull/5210#pullrequestreview-493234663", "createdAt": "2020-09-22T08:31:35Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODozMTozNVrOHVvjsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODo0NjowOVrOHVwG7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2MTMzMQ==", "bodyText": "\"the decimal\"\nalso \"decimal\" or \"decimal\"?", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492561331", "createdAt": "2020-09-22T08:31:35Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2MjQ5Ng==", "bodyText": "i think \"latency\" is an important aspect\nbut, this could be expressed more from end-user perspective\n\"Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters.\"\n(i know it's repetitive but i think it's important to stick \"dynamic filters\" here, as this is the recognized feature name)", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492562496", "createdAt": "2020-09-22T08:33:27Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve query performance by adding support for dynamic filtering and dynamic\n+  partition pruning to semi-join relational operator. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzMzUxMQ=="}, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2Mzk0OQ==", "bodyText": "\"inaccurate\" or \"incomplete\"?\nalso, it's a table who has missing stats, not the cost-based optimizer, so:\n\"Improve performance of queries joining tables with missing or incomplete column statistics when the cost-based optimizer is enabled (which is the default).\"\n(doesn't sound great....)", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492563949", "createdAt": "2020-09-22T08:35:50Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NDM2MQ==", "bodyText": "is this a SPI change? @sopel39", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492564361", "createdAt": "2020-09-22T08:36:35Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve query performance by adding support for dynamic filtering and dynamic\n+  partition pruning to semi-join relational operator. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzMzgwMA=="}, "originalCommit": null, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NTYwNA==", "bodyText": "\"Allow specifying\" is a bit of overstatement, as this was existing feature that we made more configurable.\nBTW @losipiuk @kokosing why did we not deprecate the hive.immutable-partitions?", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492565604", "createdAt": "2020-09-22T08:38:39Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NjI2Mw==", "bodyText": "is there mention this is also configurable with session dynamic_filtering_probe_blocking_timeout", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492566263", "createdAt": "2020-09-22T08:39:43Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NjkyMw==", "bodyText": "@losipiuk the wording is based on how we announced the change in 341:\n(341)\n* Match the existing user and group of the table or partition when creating new files on HDFS. ({issue}`4414`)\n\ni am not saying this is readable though", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492566923", "createdAt": "2020-09-22T08:40:48Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve query performance by adding support for dynamic filtering and dynamic\n+  partition pruning to semi-join relational operator. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzNTM0OQ=="}, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NzIxMg==", "bodyText": "lowercase VARCHAR and VARBINARY", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492567212", "createdAt": "2020-09-22T08:41:20Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NzMyMg==", "bodyText": "lowercase the types", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492567322", "createdAt": "2020-09-22T08:41:30Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` ", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NzUwNQ==", "bodyText": "\"when JSON encoder is in use\" -> \"when using JSON encoder\"", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492567505", "createdAt": "2020-09-22T08:41:51Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when JSON encoder is in use. ({issue}`4743`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2ODg5Mw==", "bodyText": "isn't -> is not\n(or even present simple)\nor maybe \" .... (unless MySQL instance runs in GTID mode)\" -- assuming GTID is an unusual configuration?", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492568893", "createdAt": "2020-09-22T08:44:01Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when JSON encoder is in use. ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2OTAwMA==", "bodyText": "lowercase the types\nwould s/variadic/parametric/ be acceptable (in the interest of making this easier to understand)?", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492569000", "createdAt": "2020-09-22T08:44:10Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when JSON encoder is in use. ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Extend type mapping to support variadic `TIMESTAMP` and `TIMESTAMP WITH ZONE` types. ({issue}`5124`, {issue}`5105`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2OTUxNA==", "bodyText": "lowercase varbinary", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492569514", "createdAt": "2020-09-22T08:44:53Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when JSON encoder is in use. ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Extend type mapping to support variadic `TIMESTAMP` and `TIMESTAMP WITH ZONE` types. ({issue}`5124`, {issue}`5105`)\n+\n+## SQL Server Connector Changes\n+\n+* Fix failure when inserting `NULL` to `VARBINARY` column. ({issue}`4846`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU3MDAzNw==", "bodyText": "This is a change in engine's behavior, but is it really a SPI change?\n@sopel39", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492570037", "createdAt": "2020-09-22T08:45:40Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when JSON encoder is in use. ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Extend type mapping to support variadic `TIMESTAMP` and `TIMESTAMP WITH ZONE` types. ({issue}`5124`, {issue}`5105`)\n+\n+## SQL Server Connector Changes\n+\n+* Fix failure when inserting `NULL` to `VARBINARY` column. ({issue}`4846`)\n+* Improve performance of aggregation queries by computing aggregations within SQL Server database.\n+  Currently, the following aggregate functions are eligible for pushdown:\n+  ``count``,  ``min``, ``max``, ``sum`` and ``avg``. ({issue}`4139`)\n+\n+## SPI Changes\n+\n+* Make dynamic filter futures resilient to cancellation. ({issue}`5099`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU3MDM0OA==", "bodyText": "remove \"via future\" (or add information what future this is ref'ing to)", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492570348", "createdAt": "2020-09-22T08:46:09Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when JSON encoder is in use. ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Extend type mapping to support variadic `TIMESTAMP` and `TIMESTAMP WITH ZONE` types. ({issue}`5124`, {issue}`5105`)\n+\n+## SQL Server Connector Changes\n+\n+* Fix failure when inserting `NULL` to `VARBINARY` column. ({issue}`4846`)\n+* Improve performance of aggregation queries by computing aggregations within SQL Server database.\n+  Currently, the following aggregate functions are eligible for pushdown:\n+  ``count``,  ``min``, ``max``, ``sum`` and ``avg``. ({issue}`4139`)\n+\n+## SPI Changes\n+\n+* Make dynamic filter futures resilient to cancellation. ({issue}`5099`)\n+* Add `DynamicFilter#isAwaitable` method that returns whether dynamic filter is not complete and can be\n+  awaited for via future. ({issue}`5043`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjgwODk4", "url": "https://github.com/trinodb/trino/pull/5210#pullrequestreview-493280898", "createdAt": "2020-09-22T09:30:54Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozMDo1NFrOHVxyXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNDo0OVrOHVx7Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU5Nzg1NA==", "bodyText": "Improve performance or", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492597854", "createdAt": "2020-09-22T09:30:54Z", "author": {"login": "sopel39"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU5OTM3MA==", "bodyText": "also, it's a table who has missing stats, not the cost-based optimizer, so:\n\ntechnically, intermediate cbo-stats stats can be inaccurate too. I'm fine with your version too", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492599370", "createdAt": "2020-09-22T09:33:31Z", "author": {"login": "sopel39"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2Mzk0OQ=="}, "originalCommit": null, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU5OTYyMw==", "bodyText": "this should be in SPI notes", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492599623", "createdAt": "2020-09-22T09:33:58Z", "author": {"login": "sopel39"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve query performance by adding support for dynamic filtering and dynamic\n+  partition pruning to semi-join relational operator. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzMzgwMA=="}, "originalCommit": null, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMDExMA==", "bodyText": "makes sense, let's stick to dynamic filtering", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492600110", "createdAt": "2020-09-22T09:34:49Z", "author": {"login": "sopel39"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve query performance by adding support for dynamic filtering and dynamic\n+  partition pruning to semi-join relational operator. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzNDkxNA=="}, "originalCommit": null, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NDYzNTY4", "url": "https://github.com/trinodb/trino/pull/5210#pullrequestreview-494463568", "createdAt": "2020-09-23T09:19:38Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwOToxOTozOFrOHWgJSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwOToxOTozOFrOHWgJSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM1NzM4Nw==", "bodyText": "TODO", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r493357387", "createdAt": "2020-09-23T09:19:38Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,62 @@\n+# Release 342 (XX Sep 2020)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MTY1Nzk4", "url": "https://github.com/trinodb/trino/pull/5210#pullrequestreview-495165798", "createdAt": "2020-09-24T01:48:26Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwMTo0ODoyNlrOHXG4rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwMTo0ODoyNlrOHXG4rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk5MjEwOA==", "bodyText": "This doesn't format well. The issue link is attached to the last item in this list.", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r493992108", "createdAt": "2020-09-24T01:48:26Z", "author": {"login": "martint"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)\n+* Improve planning time for queries with non-equality filters on\n+  partition columns when using the Glue metastore. ({issue}`5060`)\n+* Improve performance when reading `JSON` and `CSV` file formats. ({issue}`5142`)\n+    \n+# Iceberg Connector Changes\n+\n+* Fix partition transforms for temporal columns for dates before 1970. ({issue}`5273`)\n+\n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(varchar, array(varbinary))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when using the JSON encoder. ({issue}`4743`)\n+* In JSON decoder drop decoding support for temporal types for nonsensical combinations of input-format-type/data-type.\n+  Following combination are no longer supported:\n+  - `rfc2822`:  `DATE`, `TIME`, `TIME WITH TIME ZONE`\n+  - `milliseconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  - `seconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  ({issue}`4743`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MTc4NzU4", "url": "https://github.com/trinodb/trino/pull/5210#pullrequestreview-495178758", "createdAt": "2020-09-24T02:33:13Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwMjozMzoxNFrOHXHkcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwMjo1MTozNlrOHXH2Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwMzMxNA==", "bodyText": "What does \"partition pruning\" mean in the context of the engine?", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494003314", "createdAt": "2020-09-24T02:33:14Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwMzM1OA==", "bodyText": "Same question as above", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494003358", "createdAt": "2020-09-24T02:33:25Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwMzY1MA==", "bodyText": "We don't use the phrase \"cost-based optimizer\" in the documentation (since it's not correct)\n\nwhen cost based optimization is enabled", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494003650", "createdAt": "2020-09-24T02:34:35Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwMzY5Nw==", "bodyText": "Reduce latency for queries that perform a broadcast join of a large table.", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494003697", "createdAt": "2020-09-24T02:34:44Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNDEyMA==", "bodyText": "\"with the xxx configuration property\"", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494004120", "createdAt": "2020-09-24T02:36:17Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNDc2Nw==", "bodyText": "Allow overwrite on insert by default using the xxx configuration property.", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494004767", "createdAt": "2020-09-24T02:39:01Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNTMxNQ==", "bodyText": "Allow delaying table scans until dynamic filtering can be performed more efficiently. This can be enabled using the xxx configuration property or the xxx session property.", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494005315", "createdAt": "2020-09-24T02:41:16Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNTYyOA==", "bodyText": "It can be enabled using the xxx configuration property.", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494005628", "createdAt": "2020-09-24T02:42:33Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNTc1MQ==", "bodyText": "Improve performance when reading small files in RCTEXT or RCBINARY format.", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494005751", "createdAt": "2020-09-24T02:43:05Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNjMzMA==", "bodyText": "Contractions should generally only be used in friendly, informal writing. That's not how we currently write most of the documentation, including release notes.", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494006330", "createdAt": "2020-09-24T02:45:21Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when JSON encoder is in use. ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2ODg5Mw=="}, "originalCommit": null, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNjUyNA==", "bodyText": "Remove JSON decoder support for nonsensical combinations of input-format-type / data-type. The following combinations are no longer supported:", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494006524", "createdAt": "2020-09-24T02:46:12Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)\n+* Improve planning time for queries with non-equality filters on\n+  partition columns when using the Glue metastore. ({issue}`5060`)\n+* Improve performance when reading `JSON` and `CSV` file formats. ({issue}`5142`)\n+    \n+# Iceberg Connector Changes\n+\n+* Fix partition transforms for temporal columns for dates before 1970. ({issue}`5273`)\n+\n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(varchar, array(varbinary))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when using the JSON encoder. ({issue}`4743`)\n+* In JSON decoder drop decoding support for temporal types for nonsensical combinations of input-format-type/data-type.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNjY4NQ==", "bodyText": "Maybe put it at the after the : before the list", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494006685", "createdAt": "2020-09-24T02:46:54Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)\n+* Improve planning time for queries with non-equality filters on\n+  partition columns when using the Glue metastore. ({issue}`5060`)\n+* Improve performance when reading `JSON` and `CSV` file formats. ({issue}`5142`)\n+    \n+# Iceberg Connector Changes\n+\n+* Fix partition transforms for temporal columns for dates before 1970. ({issue}`5273`)\n+\n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(varchar, array(varbinary))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when using the JSON encoder. ({issue}`4743`)\n+* In JSON decoder drop decoding support for temporal types for nonsensical combinations of input-format-type/data-type.\n+  Following combination are no longer supported:\n+  - `rfc2822`:  `DATE`, `TIME`, `TIME WITH TIME ZONE`\n+  - `milliseconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  - `seconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  ({issue}`4743`)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk5MjEwOA=="}, "originalCommit": null, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNjg0MQ==", "bodyText": "I like @martint's phrasing", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494006841", "createdAt": "2020-09-24T02:47:38Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when JSON encoder is in use. ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2ODg5Mw=="}, "originalCommit": null, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNzAwMQ==", "bodyText": "I'm not sure what \"extend type mapping\" means. That sounds like an implementation detail. What is the user visible effect?", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494007001", "createdAt": "2020-09-24T02:48:20Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)\n+* Improve planning time for queries with non-equality filters on\n+  partition columns when using the Glue metastore. ({issue}`5060`)\n+* Improve performance when reading `JSON` and `CSV` file formats. ({issue}`5142`)\n+    \n+# Iceberg Connector Changes\n+\n+* Fix partition transforms for temporal columns for dates before 1970. ({issue}`5273`)\n+\n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(varchar, array(varbinary))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when using the JSON encoder. ({issue}`4743`)\n+* In JSON decoder drop decoding support for temporal types for nonsensical combinations of input-format-type/data-type.\n+  Following combination are no longer supported:\n+  - `rfc2822`:  `DATE`, `TIME`, `TIME WITH TIME ZONE`\n+  - `milliseconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  - `seconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Extend type mapping to support variable-precision `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` types. ({issue}`5124`, {issue}`5105`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNzExMw==", "bodyText": "We've been using uppercase in the others, so we should be consistent", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494007113", "createdAt": "2020-09-24T02:48:47Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when JSON encoder is in use. ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Extend type mapping to support variadic `TIMESTAMP` and `TIMESTAMP WITH ZONE` types. ({issue}`5124`, {issue}`5105`)\n+\n+## SQL Server Connector Changes\n+\n+* Fix failure when inserting `NULL` to `VARBINARY` column. ({issue}`4846`)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2OTUxNA=="}, "originalCommit": null, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNzE3Mw==", "bodyText": "to -> into a", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494007173", "createdAt": "2020-09-24T02:48:57Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)\n+* Improve planning time for queries with non-equality filters on\n+  partition columns when using the Glue metastore. ({issue}`5060`)\n+* Improve performance when reading `JSON` and `CSV` file formats. ({issue}`5142`)\n+    \n+# Iceberg Connector Changes\n+\n+* Fix partition transforms for temporal columns for dates before 1970. ({issue}`5273`)\n+\n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(varchar, array(varbinary))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when using the JSON encoder. ({issue}`4743`)\n+* In JSON decoder drop decoding support for temporal types for nonsensical combinations of input-format-type/data-type.\n+  Following combination are no longer supported:\n+  - `rfc2822`:  `DATE`, `TIME`, `TIME WITH TIME ZONE`\n+  - `milliseconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  - `seconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Extend type mapping to support variable-precision `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` types. ({issue}`5124`, {issue}`5105`)\n+\n+## SQL Server Connector Changes\n+\n+* Fix failure when inserting `NULL` to `VARBINARY` column. ({issue}`4846`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNzMyOA==", "bodyText": "Improve performance of aggregation queries by pushing aggregations into SQL Server.", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494007328", "createdAt": "2020-09-24T02:49:30Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)\n+* Improve planning time for queries with non-equality filters on\n+  partition columns when using the Glue metastore. ({issue}`5060`)\n+* Improve performance when reading `JSON` and `CSV` file formats. ({issue}`5142`)\n+    \n+# Iceberg Connector Changes\n+\n+* Fix partition transforms for temporal columns for dates before 1970. ({issue}`5273`)\n+\n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(varchar, array(varbinary))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when using the JSON encoder. ({issue}`4743`)\n+* In JSON decoder drop decoding support for temporal types for nonsensical combinations of input-format-type/data-type.\n+  Following combination are no longer supported:\n+  - `rfc2822`:  `DATE`, `TIME`, `TIME WITH TIME ZONE`\n+  - `milliseconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  - `seconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Extend type mapping to support variable-precision `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` types. ({issue}`5124`, {issue}`5105`)\n+\n+## SQL Server Connector Changes\n+\n+* Fix failure when inserting `NULL` to `VARBINARY` column. ({issue}`4846`)\n+* Improve performance of aggregation queries by computing aggregations within SQL Server database.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNzM3Nw==", "bodyText": "DynamicFilter.isAwaitable()", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494007377", "createdAt": "2020-09-24T02:49:40Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)\n+* Improve planning time for queries with non-equality filters on\n+  partition columns when using the Glue metastore. ({issue}`5060`)\n+* Improve performance when reading `JSON` and `CSV` file formats. ({issue}`5142`)\n+    \n+# Iceberg Connector Changes\n+\n+* Fix partition transforms for temporal columns for dates before 1970. ({issue}`5273`)\n+\n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(varchar, array(varbinary))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when using the JSON encoder. ({issue}`4743`)\n+* In JSON decoder drop decoding support for temporal types for nonsensical combinations of input-format-type/data-type.\n+  Following combination are no longer supported:\n+  - `rfc2822`:  `DATE`, `TIME`, `TIME WITH TIME ZONE`\n+  - `milliseconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  - `seconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Extend type mapping to support variable-precision `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` types. ({issue}`5124`, {issue}`5105`)\n+\n+## SQL Server Connector Changes\n+\n+* Fix failure when inserting `NULL` to `VARBINARY` column. ({issue}`4846`)\n+* Improve performance of aggregation queries by computing aggregations within SQL Server database.\n+  Currently, the following aggregate functions are eligible for pushdown:\n+  ``count``,  ``min``, ``max``, ``sum`` and ``avg``. ({issue}`4139`)\n+\n+## SPI Changes\n+\n+* Add `DynamicFilter#isAwaitable` method that returns whether dynamic filter is not complete and can be", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNzg0Nw==", "bodyText": "Add DynamicFilter.isAwaitable() method that returns whether or not the dynamic filter is complete and can be awaited for using the isBlocked() method.", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494007847", "createdAt": "2020-09-24T02:51:22Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)\n+* Improve planning time for queries with non-equality filters on\n+  partition columns when using the Glue metastore. ({issue}`5060`)\n+* Improve performance when reading `JSON` and `CSV` file formats. ({issue}`5142`)\n+    \n+# Iceberg Connector Changes\n+\n+* Fix partition transforms for temporal columns for dates before 1970. ({issue}`5273`)\n+\n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(varchar, array(varbinary))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when using the JSON encoder. ({issue}`4743`)\n+* In JSON decoder drop decoding support for temporal types for nonsensical combinations of input-format-type/data-type.\n+  Following combination are no longer supported:\n+  - `rfc2822`:  `DATE`, `TIME`, `TIME WITH TIME ZONE`\n+  - `milliseconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  - `seconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Extend type mapping to support variable-precision `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` types. ({issue}`5124`, {issue}`5105`)\n+\n+## SQL Server Connector Changes\n+\n+* Fix failure when inserting `NULL` to `VARBINARY` column. ({issue}`4846`)\n+* Improve performance of aggregation queries by computing aggregations within SQL Server database.\n+  Currently, the following aggregate functions are eligible for pushdown:\n+  ``count``,  ``min``, ``max``, ``sum`` and ``avg``. ({issue}`4139`)\n+\n+## SPI Changes\n+\n+* Add `DynamicFilter#isAwaitable` method that returns whether dynamic filter is not complete and can be", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNzM3Nw=="}, "originalCommit": null, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNzg5NA==", "bodyText": "join -> joins", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494007894", "createdAt": "2020-09-24T02:51:36Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)\n+* Improve planning time for queries with non-equality filters on\n+  partition columns when using the Glue metastore. ({issue}`5060`)\n+* Improve performance when reading `JSON` and `CSV` file formats. ({issue}`5142`)\n+    \n+# Iceberg Connector Changes\n+\n+* Fix partition transforms for temporal columns for dates before 1970. ({issue}`5273`)\n+\n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(varchar, array(varbinary))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when using the JSON encoder. ({issue}`4743`)\n+* In JSON decoder drop decoding support for temporal types for nonsensical combinations of input-format-type/data-type.\n+  Following combination are no longer supported:\n+  - `rfc2822`:  `DATE`, `TIME`, `TIME WITH TIME ZONE`\n+  - `milliseconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  - `seconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Extend type mapping to support variable-precision `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` types. ({issue}`5124`, {issue}`5105`)\n+\n+## SQL Server Connector Changes\n+\n+* Fix failure when inserting `NULL` to `VARBINARY` column. ({issue}`4846`)\n+* Improve performance of aggregation queries by computing aggregations within SQL Server database.\n+  Currently, the following aggregate functions are eligible for pushdown:\n+  ``count``,  ``min``, ``max``, ``sum`` and ``avg``. ({issue}`4139`)\n+\n+## SPI Changes\n+\n+* Add `DynamicFilter#isAwaitable` method that returns whether dynamic filter is not complete and can be\n+  awaited for using `DynamicFilter#isBlocked`. ({issue}`5043`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MTc1Njgy", "url": "https://github.com/trinodb/trino/pull/5210#pullrequestreview-495175682", "createdAt": "2020-09-24T02:22:24Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwMjoyMjoyNVrOHXHZ_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwMjozODo1NlrOHXHqDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwMDYzOA==", "bodyText": "Oh that should be of reading small files in...", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494000638", "createdAt": "2020-09-24T02:22:25Z", "author": {"login": "dain"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNDU3NA==", "bodyText": "Maybe This can be reenabled by setting the hive.fs.new-file-inherit-ownership...", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494004574", "createdAt": "2020-09-24T02:38:09Z", "author": {"login": "dain"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNDc1MQ==", "bodyText": "This wrapping seem a bit aggressive", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494004751", "createdAt": "2020-09-24T02:38:56Z", "author": {"login": "dain"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)\n+* Improve planning time for queries with non-equality filters on\n+  partition columns when using the Glue metastore. ({issue}`5060`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1ODc2MDQx", "url": "https://github.com/trinodb/trino/pull/5210#pullrequestreview-495876041", "createdAt": "2020-09-24T19:10:46Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxOToxMDo0NlrOHXpArw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxOToxMDo0NlrOHXpArw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU1MTIxNQ==", "bodyText": "Single backticks", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494551215", "createdAt": "2020-09-24T19:10:46Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,76 @@\n+# Release 342 (23 Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic filtering. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  when cost based optimization is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries that perform a broadcast join of a large table. ({issue}`5237`)\n+* Allow collection of dynamic filters for joins with large build side using the\n+  `enable-large-dynamic-filters` configuration property or the `enable_large_dynamic_filters`\n+  session property. ({issue}`5262`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with the \n+  `hive.timestamp-precision` configuration property. ({issue}`4953`)\n+* Allow overwrite on insert by default using the `hive.insert-existing-partitions-behavior` configuration property. ({issue}`4999`)\n+* Allow delaying table scans until dynamic filtering can be performed more efficiently. This can be enabled \n+  using the `hive.dynamic-filtering-probe-blocking-timeout` configuration property or the \n+  `dynamic_filtering_probe_blocking_timeout` session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. It can be enabled using the \n+  `hive.fs.new-file-inherit-ownership` configuration property. ({issue}`5187`)\n+* Improve performance when reading small files in `RCTEXT` or `RCBINARY` format. ({issue}`2536`)\n+* Improve planning time for queries with non-equality filters on partition columns when using the Glue metastore. ({issue}`5060`)\n+* Improve performance when reading `JSON` and `CSV` file formats. ({issue}`5142`)\n+    \n+## Iceberg Connector Changes\n+\n+* Fix partition transforms for temporal columns for dates before 1970. ({issue}`5273`)\n+\n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `MAP(VARCHAR, ARRAY(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when using the JSON encoder. ({issue}`4743`)\n+* Remove JSON decoder support for nonsensical combinations of input-format-type / data-type. The following \n+  combinations are no longer supported: ({issue}`4743`)\n+  - `rfc2822`:  `DATE`, `TIME`, `TIME WITH TIME ZONE`\n+  - `milliseconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  - `seconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Add support for variable-precision TIMESTAMP and TIMESTAMP WITH TIME ZONE types. ({issue}`5124`, {issue}`5105`)\n+\n+## SQL Server Connector Changes\n+\n+* Fix failure when inserting `NULL` into a `VARBINARY` column. ({issue}`4846`)\n+* Improve performance of aggregation queries by computing aggregations within SQL Server database.\n+  Currently, the following aggregate functions are eligible for pushdown:\n+  ``count``,  ``min``, ``max``, ``sum`` and ``avg``. ({issue}`4139`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1ODc2NTc5", "url": "https://github.com/trinodb/trino/pull/5210#pullrequestreview-495876579", "createdAt": "2020-09-24T19:11:34Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "244fe75ce738e4fe714240e86d908f77e9f460c6", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/244fe75ce738e4fe714240e86d908f77e9f460c6", "committedDate": "2020-09-24T19:30:39Z", "message": "Add 342 release notes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "244fe75ce738e4fe714240e86d908f77e9f460c6", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/244fe75ce738e4fe714240e86d908f77e9f460c6", "committedDate": "2020-09-24T19:30:39Z", "message": "Add 342 release notes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3641, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}