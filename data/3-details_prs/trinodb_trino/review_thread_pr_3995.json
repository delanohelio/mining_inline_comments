{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNzQ5OTc2", "number": 3995, "reviewThreads": {"totalCount": 32, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMzoyMzoyMFrOEEfaxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoxMTo0NVrOEGCFCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTQ0NTE2OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/language/types.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMzoyMzoyMFrOGiJd1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMzoyNTozMlrOGiJgXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1OTg2Mw==", "bodyText": "This is not yet supported in master. It's in progress: #3947", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r438459863", "createdAt": "2020-06-10T23:23:20Z", "author": {"login": "martint"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,22 +172,62 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P)``\n+^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    The default ``TIMESTAMP`` is equivalent to ``TIMESTAMP(3)`` and means that\n+    up millisecond values are included. A precision of up to 12, so picoseconds,\n+    is supported.\n+\n+    Casting to lower precision causes rounding, and to higher precision causes\n+    appended zero values.\n+\n+    The following examples illustrate the behavior::\n+\n+        SELECT TIMESTAMP('2020-06-10 15:55:23.383345');\n+        -- 2020-06-10 15:55:23.383345\n+\n+        SELECT typeof(TIMESTAMP '2020-06-10 15:55:23.383345');\n+        -- timestamp(6)\n+\n+        SELECT cast(TIMESTAMP '2020-06-10 15:55:23.383345' as TIMESTAMP(1));\n+         -- 2020-06-10 15:55:23.4\n+\n+        SELECT cast(TIMESTAMP '2020-06-10 15:55:23.383345' as TIMESTAMP(12));\n+        -- 2020-06-10 15:55:23.383345000000\n+\n ``TIMESTAMP WITH TIME ZONE``\n ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day with a time zone.\n     Values of this type are rendered using the time zone from the value.\n+    Equivalent to ``TIMESTAMP(3) WITH TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321 America/Los_Angeles'``\n \n+``TIMESTAMP(P) WITH TIME ZONE``", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ2MDE5Mw==", "bodyText": "oops ... let me take it back out..", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r438460193", "createdAt": "2020-06-10T23:24:30Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,22 +172,62 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P)``\n+^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    The default ``TIMESTAMP`` is equivalent to ``TIMESTAMP(3)`` and means that\n+    up millisecond values are included. A precision of up to 12, so picoseconds,\n+    is supported.\n+\n+    Casting to lower precision causes rounding, and to higher precision causes\n+    appended zero values.\n+\n+    The following examples illustrate the behavior::\n+\n+        SELECT TIMESTAMP('2020-06-10 15:55:23.383345');\n+        -- 2020-06-10 15:55:23.383345\n+\n+        SELECT typeof(TIMESTAMP '2020-06-10 15:55:23.383345');\n+        -- timestamp(6)\n+\n+        SELECT cast(TIMESTAMP '2020-06-10 15:55:23.383345' as TIMESTAMP(1));\n+         -- 2020-06-10 15:55:23.4\n+\n+        SELECT cast(TIMESTAMP '2020-06-10 15:55:23.383345' as TIMESTAMP(12));\n+        -- 2020-06-10 15:55:23.383345000000\n+\n ``TIMESTAMP WITH TIME ZONE``\n ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day with a time zone.\n     Values of this type are rendered using the time zone from the value.\n+    Equivalent to ``TIMESTAMP(3) WITH TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321 America/Los_Angeles'``\n \n+``TIMESTAMP(P) WITH TIME ZONE``", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1OTg2Mw=="}, "originalCommit": null, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ2MDUxMQ==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r438460511", "createdAt": "2020-06-10T23:25:32Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,22 +172,62 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P)``\n+^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    The default ``TIMESTAMP`` is equivalent to ``TIMESTAMP(3)`` and means that\n+    up millisecond values are included. A precision of up to 12, so picoseconds,\n+    is supported.\n+\n+    Casting to lower precision causes rounding, and to higher precision causes\n+    appended zero values.\n+\n+    The following examples illustrate the behavior::\n+\n+        SELECT TIMESTAMP('2020-06-10 15:55:23.383345');\n+        -- 2020-06-10 15:55:23.383345\n+\n+        SELECT typeof(TIMESTAMP '2020-06-10 15:55:23.383345');\n+        -- timestamp(6)\n+\n+        SELECT cast(TIMESTAMP '2020-06-10 15:55:23.383345' as TIMESTAMP(1));\n+         -- 2020-06-10 15:55:23.4\n+\n+        SELECT cast(TIMESTAMP '2020-06-10 15:55:23.383345' as TIMESTAMP(12));\n+        -- 2020-06-10 15:55:23.383345000000\n+\n ``TIMESTAMP WITH TIME ZONE``\n ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day with a time zone.\n     Values of this type are rendered using the time zone from the value.\n+    Equivalent to ``TIMESTAMP(3) WITH TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321 America/Los_Angeles'``\n \n+``TIMESTAMP(P) WITH TIME ZONE``", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1OTg2Mw=="}, "originalCommit": null, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTU4NzgwOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/language/types.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMzo1NDo0NVrOGiydug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMzo1NDo0NVrOGiydug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEzMTU3OA==", "bodyText": "typo: langugage", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439131578", "createdAt": "2020-06-11T23:54:45Z", "author": {"login": "martint"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default\n+    ``TIMESTAMP`` is an alias for ``TIMESTAMP(3)`` and means that up to\n+    millisecond values are included. A precision of up to 12, so picoseconds, is\n+    supported.\n+\n+    You can construct a timestamp value with the literal TIMESTAMP expression.\n+    Alternatively, langugage constructs such as ``localtimestamp(p)``, or a", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTU4ODYxOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/language/types.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMzo1NToxMlrOGiyePg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMzo1NToxMlrOGiyePg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEzMTcxMA==", "bodyText": "literal TIMESTAMP -> TIMESTAMP literal", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439131710", "createdAt": "2020-06-11T23:55:12Z", "author": {"login": "martint"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default\n+    ``TIMESTAMP`` is an alias for ``TIMESTAMP(3)`` and means that up to\n+    millisecond values are included. A precision of up to 12, so picoseconds, is\n+    supported.\n+\n+    You can construct a timestamp value with the literal TIMESTAMP expression.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjYxMTcyOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwODo1MToyMFrOGi8Ubw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjozMTozN1rOGjKa3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5MzAzOQ==", "bodyText": "This is only reformatting change and could be separate commit.\nWhile at it, what is \"zero time\"? I guess this could be \"time default to 00:00:00\"", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439293039", "createdAt": "2020-06-12T08:51:20Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -66,8 +72,8 @@ Date and Time Functions\n .. function:: from_iso8601_timestamp(string) -> timestamp with time zone\n \n     Parses the ISO 8601 formatted date ``string``, optionally with\n-    time and time zone, into a ``timestamp with time zone``. The time defaults\n-    to zero, and the time zone defaults to the session time zone::\n+    time and time zone, into a ``timestamp with time zone``. The time\n+    defaults to zero, and the time zone defaults to the session time zone::", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyNDA2MA==", "bodyText": "We had a change in here that I backed out .. but left format change. I will update the zero.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439524060", "createdAt": "2020-06-12T16:31:37Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -66,8 +72,8 @@ Date and Time Functions\n .. function:: from_iso8601_timestamp(string) -> timestamp with time zone\n \n     Parses the ISO 8601 formatted date ``string``, optionally with\n-    time and time zone, into a ``timestamp with time zone``. The time defaults\n-    to zero, and the time zone defaults to the session time zone::\n+    time and time zone, into a ``timestamp with time zone``. The time\n+    defaults to zero, and the time zone defaults to the session time zone::", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5MzAzOQ=="}, "originalCommit": null, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjYxNDkzOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwODo1MjoyMlrOGi8Wag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjozNDowOVrOGjKfsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5MzU0Ng==", "bodyText": "Would be good to mention this takes double input. Otherwise, reading the docs, it looks as if getting seond fractions was not possible with this method.\nWhile at it, we could mention this method can be used to process contemporary timestamp values with microseond precision, but no more.\ncc @martint", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439293546", "createdAt": "2020-06-12T08:52:22Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -101,19 +107,22 @@ Date and Time Functions\n \n     Returns a timestamp with time zone from ``timestamp`` and ``zone``.\n \n-.. function:: from_unixtime(unixtime) -> timestamp\n+.. function:: from_unixtime(unixtime) -> timestamp(3)\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime`` as a ``timestamp(3)``. ``unixtime``\n+    is the number of seconds since ``1970-01-01 00:00:00``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyNTI5Nw==", "bodyText": "Updated..", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439525297", "createdAt": "2020-06-12T16:34:09Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -101,19 +107,22 @@ Date and Time Functions\n \n     Returns a timestamp with time zone from ``timestamp`` and ``zone``.\n \n-.. function:: from_unixtime(unixtime) -> timestamp\n+.. function:: from_unixtime(unixtime) -> timestamp(3)\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime`` as a ``timestamp(3)``. ``unixtime``\n+    is the number of seconds since ``1970-01-01 00:00:00``.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5MzU0Ng=="}, "originalCommit": null, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjYyMzA2OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwODo1NDo1NlrOGi8blw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjozNDoyOVrOGjKgTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5NDg3MQ==", "bodyText": "Please separate reformatting changes from the content changes.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439294871", "createdAt": "2020-06-12T08:54:56Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -101,19 +107,22 @@ Date and Time Functions\n \n     Returns a timestamp with time zone from ``timestamp`` and ``zone``.\n \n-.. function:: from_unixtime(unixtime) -> timestamp\n+.. function:: from_unixtime(unixtime) -> timestamp(3)\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime`` as a ``timestamp(3)``. ``unixtime``\n+    is the number of seconds since ``1970-01-01 00:00:00``.\n \n .. function:: from_unixtime(unixtime, zone) -> timestamp with time zone\n \n     Returns the UNIX timestamp ``unixtime`` as a timestamp with time zone\n-    using ``zone`` for the time zone. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    using ``zone`` for the time zone. ``unixtime`` is the number of seconds\n+    since ``1970-01-01 00:00:00``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyNTQ1Mw==", "bodyText": "Add info", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439525453", "createdAt": "2020-06-12T16:34:29Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -101,19 +107,22 @@ Date and Time Functions\n \n     Returns a timestamp with time zone from ``timestamp`` and ``zone``.\n \n-.. function:: from_unixtime(unixtime) -> timestamp\n+.. function:: from_unixtime(unixtime) -> timestamp(3)\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime`` as a ``timestamp(3)``. ``unixtime``\n+    is the number of seconds since ``1970-01-01 00:00:00``.\n \n .. function:: from_unixtime(unixtime, zone) -> timestamp with time zone\n \n     Returns the UNIX timestamp ``unixtime`` as a timestamp with time zone\n-    using ``zone`` for the time zone. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    using ``zone`` for the time zone. ``unixtime`` is the number of seconds\n+    since ``1970-01-01 00:00:00``.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5NDg3MQ=="}, "originalCommit": null, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjYyNzM3OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwODo1NjoxNFrOGi8eXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjozNDo1OVrOGjKhOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5NTU4MA==", "bodyText": "This should be explicit that unixtime is number of seconds since 1970-01-01 00:00:00 UTC.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439295580", "createdAt": "2020-06-12T08:56:14Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -101,19 +107,22 @@ Date and Time Functions\n \n     Returns a timestamp with time zone from ``timestamp`` and ``zone``.\n \n-.. function:: from_unixtime(unixtime) -> timestamp\n+.. function:: from_unixtime(unixtime) -> timestamp(3)\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime`` as a ``timestamp(3)``. ``unixtime``\n+    is the number of seconds since ``1970-01-01 00:00:00``.\n \n .. function:: from_unixtime(unixtime, zone) -> timestamp with time zone\n \n     Returns the UNIX timestamp ``unixtime`` as a timestamp with time zone\n-    using ``zone`` for the time zone. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    using ``zone`` for the time zone. ``unixtime`` is the number of seconds\n+    since ``1970-01-01 00:00:00``.\n \n .. function:: from_unixtime(unixtime, hours, minutes) -> timestamp with time zone\n \n     Returns the UNIX timestamp ``unixtime`` as a timestamp with time zone\n-    using ``hours`` and ``minutes`` for the time zone offset. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    using ``hours`` and ``minutes`` for the time zone offset. ``unixtime`` is\n+    the number of seconds since ``1970-01-01 00:00:00``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyNTY4OA==", "bodyText": "Done", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439525688", "createdAt": "2020-06-12T16:34:59Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -101,19 +107,22 @@ Date and Time Functions\n \n     Returns a timestamp with time zone from ``timestamp`` and ``zone``.\n \n-.. function:: from_unixtime(unixtime) -> timestamp\n+.. function:: from_unixtime(unixtime) -> timestamp(3)\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime`` as a ``timestamp(3)``. ``unixtime``\n+    is the number of seconds since ``1970-01-01 00:00:00``.\n \n .. function:: from_unixtime(unixtime, zone) -> timestamp with time zone\n \n     Returns the UNIX timestamp ``unixtime`` as a timestamp with time zone\n-    using ``zone`` for the time zone. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    using ``zone`` for the time zone. ``unixtime`` is the number of seconds\n+    since ``1970-01-01 00:00:00``.\n \n .. function:: from_unixtime(unixtime, hours, minutes) -> timestamp with time zone\n \n     Returns the UNIX timestamp ``unixtime`` as a timestamp with time zone\n-    using ``hours`` and ``minutes`` for the time zone offset. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    using ``hours`` and ``minutes`` for the time zone offset. ``unixtime`` is\n+    the number of seconds since ``1970-01-01 00:00:00``.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5NTU4MA=="}, "originalCommit": null, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjYzMzg0OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwODo1Nzo0NlrOGi8iGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjozNTo1MVrOGjKjAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5NjUzNg==", "bodyText": "Is it worth documenting that p > 6 doesn't add more actual precision?\nhttps://twitter.com/findepi/status/1270445791832924160 :)", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439296536", "createdAt": "2020-06-12T08:57:46Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -123,6 +132,14 @@ Date and Time Functions\n \n     Returns the current timestamp as of the start of the query.\n \n+.. data:: localtimestamp(p)\n+\n+    Returns the current :ref:`timestamp <timestamp-data-type>` as of the start\n+    of the query, with ``p`` digits of subsecond precision::\n+\n+        SELECT localtimestamp(6);\n+        -- 2020-06-10 15:55:23.383628", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyNjE0NA==", "bodyText": "We decided against that for now..", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439526144", "createdAt": "2020-06-12T16:35:51Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -123,6 +132,14 @@ Date and Time Functions\n \n     Returns the current timestamp as of the start of the query.\n \n+.. data:: localtimestamp(p)\n+\n+    Returns the current :ref:`timestamp <timestamp-data-type>` as of the start\n+    of the query, with ``p`` digits of subsecond precision::\n+\n+        SELECT localtimestamp(6);\n+        -- 2020-06-10 15:55:23.383628", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5NjUzNg=="}, "originalCommit": null, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjYzODA3OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/language/types.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwODo1OToxMFrOGi8k5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjozNzowOVrOGjKlRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5NzI1NQ==", "bodyText": "in datetime.rst and elsewhere  we lowercase the type names.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439297255", "createdAt": "2020-06-12T08:59:10Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default\n+    ``TIMESTAMP`` is an alias for ``TIMESTAMP(3)`` and means that up to", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyNjcyNQ==", "bodyText": "Its consistent in this doc .. if we change this we should do it as separate bulk change. So not in this PR.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439526725", "createdAt": "2020-06-12T16:37:09Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default\n+    ``TIMESTAMP`` is an alias for ``TIMESTAMP(3)`` and means that up to", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5NzI1NQ=="}, "originalCommit": null, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjY0Mjc5OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/language/types.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwOTowMDo0MFrOGi8n7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjozNjoyOFrOGjKkKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5ODAyOA==", "bodyText": "\"so picoseconds\" sounds informal", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439298028", "createdAt": "2020-06-12T09:00:40Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default\n+    ``TIMESTAMP`` is an alias for ``TIMESTAMP(3)`` and means that up to\n+    millisecond values are included. A precision of up to 12, so picoseconds, is\n+    supported.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyNjQ0MA==", "bodyText": "yes.. and that is fine.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439526440", "createdAt": "2020-06-12T16:36:28Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default\n+    ``TIMESTAMP`` is an alias for ``TIMESTAMP(3)`` and means that up to\n+    millisecond values are included. A precision of up to 12, so picoseconds, is\n+    supported.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5ODAyOA=="}, "originalCommit": null, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjY0NDU2OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/language/types.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwOTowMToxM1rOGi8pBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjozODowNVrOGjKm9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5ODMwOQ==", "bodyText": "wrap TIMESTAMP in `` ?", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439298309", "createdAt": "2020-06-12T09:01:13Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default\n+    ``TIMESTAMP`` is an alias for ``TIMESTAMP(3)`` and means that up to\n+    millisecond values are included. A precision of up to 12, so picoseconds, is\n+    supported.\n+\n+    You can construct a timestamp value with the TIMESTAMP literal expression.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyNzE1OQ==", "bodyText": "Done", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439527159", "createdAt": "2020-06-12T16:38:05Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default\n+    ``TIMESTAMP`` is an alias for ``TIMESTAMP(3)`` and means that up to\n+    millisecond values are included. A precision of up to 12, so picoseconds, is\n+    supported.\n+\n+    You can construct a timestamp value with the TIMESTAMP literal expression.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5ODMwOQ=="}, "originalCommit": null, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjY0NTE2OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/language/types.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwOTowMToyOVrOGi8pbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjozODo1MFrOGjKoPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5ODQxNA==", "bodyText": "function -> functions", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439298414", "createdAt": "2020-06-12T09:01:29Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default\n+    ``TIMESTAMP`` is an alias for ``TIMESTAMP(3)`` and means that up to\n+    millisecond values are included. A precision of up to 12, so picoseconds, is\n+    supported.\n+\n+    You can construct a timestamp value with the TIMESTAMP literal expression.\n+    Alternatively, language constructs such as ``localtimestamp(p)``, or a\n+    number of :doc:`date and time function and operators </functions/datetime>`", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyNzQ4Nw==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439527487", "createdAt": "2020-06-12T16:38:50Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default\n+    ``TIMESTAMP`` is an alias for ``TIMESTAMP(3)`` and means that up to\n+    millisecond values are included. A precision of up to 12, so picoseconds, is\n+    supported.\n+\n+    You can construct a timestamp value with the TIMESTAMP literal expression.\n+    Alternatively, language constructs such as ``localtimestamp(p)``, or a\n+    number of :doc:`date and time function and operators </functions/datetime>`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5ODQxNA=="}, "originalCommit": null, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjY0ODYxOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/language/types.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwOTowMjo0NlrOGi8rkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0MDowN1rOGjKqlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5ODk2Mw==", "bodyText": "maybe explicit: \"causes rounding (not truncation)\"\nthe other part: values -> digits; but i would rather omit this.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439298963", "createdAt": "2020-06-12T09:02:46Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default\n+    ``TIMESTAMP`` is an alias for ``TIMESTAMP(3)`` and means that up to\n+    millisecond values are included. A precision of up to 12, so picoseconds, is\n+    supported.\n+\n+    You can construct a timestamp value with the TIMESTAMP literal expression.\n+    Alternatively, language constructs such as ``localtimestamp(p)``, or a\n+    number of :doc:`date and time function and operators </functions/datetime>`\n+    can return timestamp values.\n+\n+    Casting to lower precision causes rounding, and to higher precision causes\n+    appended zero values.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyODA4NA==", "bodyText": "Lets leave it in to be explicit.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439528084", "createdAt": "2020-06-12T16:40:07Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default\n+    ``TIMESTAMP`` is an alias for ``TIMESTAMP(3)`` and means that up to\n+    millisecond values are included. A precision of up to 12, so picoseconds, is\n+    supported.\n+\n+    You can construct a timestamp value with the TIMESTAMP literal expression.\n+    Alternatively, language constructs such as ``localtimestamp(p)``, or a\n+    number of :doc:`date and time function and operators </functions/datetime>`\n+    can return timestamp values.\n+\n+    Casting to lower precision causes rounding, and to higher precision causes\n+    appended zero values.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5ODk2Mw=="}, "originalCommit": null, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTc3MDI3OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo0MTo0MVrOGjaFog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzowMzo0NVrOGkk69g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDc3MA==", "bodyText": "We don't normally give directives in the documentation. Instead, phrase this as\nThese functions and operators operate on :ref:`date and time data types <date-time-data-types>`.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439780770", "createdAt": "2020-06-14T00:41:41Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -2,6 +2,12 @@\n Date and Time Functions and Operators\n =====================================\n \n+Use the date and time functions and operators, detailed in the following, to", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMwNDU1Ng==", "bodyText": "It would be more approachable to address the user .. do you still want me to rejig?", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r440304556", "createdAt": "2020-06-15T16:37:19Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -2,6 +2,12 @@\n Date and Time Functions and Operators\n =====================================\n \n+Use the date and time functions and operators, detailed in the following, to", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDc3MA=="}, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAwNjgzOA==", "bodyText": "Yes. We want to keep the style consistent.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r441006838", "createdAt": "2020-06-16T17:03:45Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -2,6 +2,12 @@\n Date and Time Functions and Operators\n =====================================\n \n+Use the date and time functions and operators, detailed in the following, to", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDc3MA=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTc3MDUyOnYy", "diffSide": "LEFT", "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo0MjoxN1rOGjaFvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzo0NjozNlrOGkmdQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDc5OQ==", "bodyText": "This seems to be just changing the wrapping. Please remove", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439780799", "createdAt": "2020-06-14T00:42:17Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -66,8 +72,9 @@ Date and Time Functions\n .. function:: from_iso8601_timestamp(string) -> timestamp with time zone\n \n     Parses the ISO 8601 formatted date ``string``, optionally with\n-    time and time zone, into a ``timestamp with time zone``. The time defaults", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyNzEwOQ==", "bodyText": "It adds the milliseconds for correctness as requested by @martint", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r440427109", "createdAt": "2020-06-15T20:26:46Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -66,8 +72,9 @@ Date and Time Functions\n .. function:: from_iso8601_timestamp(string) -> timestamp with time zone\n \n     Parses the ISO 8601 formatted date ``string``, optionally with\n-    time and time zone, into a ``timestamp with time zone``. The time defaults", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDc5OQ=="}, "originalCommit": null, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxMDMwNA==", "bodyText": "This formatting change makes it hard to see what actually changed. Please leave it alone except for adding the fractional seconds.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r441010304", "createdAt": "2020-06-16T17:09:41Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -66,8 +72,9 @@ Date and Time Functions\n .. function:: from_iso8601_timestamp(string) -> timestamp with time zone\n \n     Parses the ISO 8601 formatted date ``string``, optionally with\n-    time and time zone, into a ``timestamp with time zone``. The time defaults", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDc5OQ=="}, "originalCommit": null, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzMjAwMQ==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r441032001", "createdAt": "2020-06-16T17:46:36Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -66,8 +72,9 @@ Date and Time Functions\n .. function:: from_iso8601_timestamp(string) -> timestamp with time zone\n \n     Parses the ISO 8601 formatted date ``string``, optionally with\n-    time and time zone, into a ``timestamp with time zone``. The time defaults", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDc5OQ=="}, "originalCommit": null, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTc3MDg4OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo0MzoxMVrOGjaF6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDoyNzozMVrOGkBjzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDg0MQ==", "bodyText": "Leave this part alone. It's fine to say \"as a timestamp\" since the function definition gives the exact type.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439780841", "createdAt": "2020-06-14T00:43:11Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -101,19 +108,22 @@ Date and Time Functions\n \n     Returns a timestamp with time zone from ``timestamp`` and ``zone``.\n \n-.. function:: from_unixtime(unixtime) -> timestamp\n+.. function:: from_unixtime(unixtime) -> timestamp(3)\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime`` as a ``timestamp(3)``. ``unixtime``", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMwNDExOQ==", "bodyText": "@martint wanted to make sure we are explicit .. so I added it as he requested. Personally I think this helps. Can you guys decide together please..", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r440304119", "createdAt": "2020-06-15T16:36:31Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -101,19 +108,22 @@ Date and Time Functions\n \n     Returns a timestamp with time zone from ``timestamp`` and ``zone``.\n \n-.. function:: from_unixtime(unixtime) -> timestamp\n+.. function:: from_unixtime(unixtime) -> timestamp(3)\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime`` as a ``timestamp(3)``. ``unixtime``", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDg0MQ=="}, "originalCommit": null, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyNzQ2OA==", "bodyText": "@martint specifically requested this change on all outputs ..", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r440427468", "createdAt": "2020-06-15T20:27:31Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -101,19 +108,22 @@ Date and Time Functions\n \n     Returns a timestamp with time zone from ``timestamp`` and ``zone``.\n \n-.. function:: from_unixtime(unixtime) -> timestamp\n+.. function:: from_unixtime(unixtime) -> timestamp(3)\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime`` as a ``timestamp(3)``. ``unixtime``", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDg0MQ=="}, "originalCommit": null, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTc3MTAxOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo0Mzo0MVrOGjaF_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoxMDo1MVrOGklLIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDg2MA==", "bodyText": "This seems unrelated to timestamp with precision. Please remove.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439780860", "createdAt": "2020-06-14T00:43:41Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -101,19 +108,22 @@ Date and Time Functions\n \n     Returns a timestamp with time zone from ``timestamp`` and ``zone``.\n \n-.. function:: from_unixtime(unixtime) -> timestamp\n+.. function:: from_unixtime(unixtime) -> timestamp(3)\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime`` as a ``timestamp(3)``. ``unixtime``\n+    is the number of seconds since ``1970-01-01 00:00:00 UTC``.\n \n .. function:: from_unixtime(unixtime, zone) -> timestamp with time zone\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp with time zone\n-    using ``zone`` for the time zone. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime``, a double as a timestamp with", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyNzY4Mg==", "bodyText": "This add UTC as requested by @martint", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r440427682", "createdAt": "2020-06-15T20:27:56Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -101,19 +108,22 @@ Date and Time Functions\n \n     Returns a timestamp with time zone from ``timestamp`` and ``zone``.\n \n-.. function:: from_unixtime(unixtime) -> timestamp\n+.. function:: from_unixtime(unixtime) -> timestamp(3)\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime`` as a ``timestamp(3)``. ``unixtime``\n+    is the number of seconds since ``1970-01-01 00:00:00 UTC``.\n \n .. function:: from_unixtime(unixtime, zone) -> timestamp with time zone\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp with time zone\n-    using ``zone`` for the time zone. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime``, a double as a timestamp with", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDg2MA=="}, "originalCommit": null, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxMDk3Ng==", "bodyText": "Please only add \"UTC\" and don't make any formatting changes. Adding data types is unrelated to timestamp precision and should be done / discussed separately.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r441010976", "createdAt": "2020-06-16T17:10:51Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -101,19 +108,22 @@ Date and Time Functions\n \n     Returns a timestamp with time zone from ``timestamp`` and ``zone``.\n \n-.. function:: from_unixtime(unixtime) -> timestamp\n+.. function:: from_unixtime(unixtime) -> timestamp(3)\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime`` as a ``timestamp(3)``. ``unixtime``\n+    is the number of seconds since ``1970-01-01 00:00:00 UTC``.\n \n .. function:: from_unixtime(unixtime, zone) -> timestamp with time zone\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp with time zone\n-    using ``zone`` for the time zone. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime``, a double as a timestamp with", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDg2MA=="}, "originalCommit": null, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTc3MTA3OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo0Mzo1MFrOGjaGAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoxMToxMFrOGklL2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDg2Nw==", "bodyText": "Same", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439780867", "createdAt": "2020-06-14T00:43:50Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -101,19 +108,22 @@ Date and Time Functions\n \n     Returns a timestamp with time zone from ``timestamp`` and ``zone``.\n \n-.. function:: from_unixtime(unixtime) -> timestamp\n+.. function:: from_unixtime(unixtime) -> timestamp(3)\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime`` as a ``timestamp(3)``. ``unixtime``\n+    is the number of seconds since ``1970-01-01 00:00:00 UTC``.\n \n .. function:: from_unixtime(unixtime, zone) -> timestamp with time zone\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp with time zone\n-    using ``zone`` for the time zone. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime``, a double as a timestamp with\n+    time zone using ``zone`` for the time zone. ``unixtime`` is the number of\n+    seconds since ``1970-01-01 00:00:00 UTC`` in ``double`` data type.\n \n .. function:: from_unixtime(unixtime, hours, minutes) -> timestamp with time zone\n \n     Returns the UNIX timestamp ``unixtime`` as a timestamp with time zone\n-    using ``hours`` and ``minutes`` for the time zone offset. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    using ``hours`` and ``minutes`` for the time zone offset. ``unixtime`` is", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyNzk4MQ==", "bodyText": "this add the data type as requested by @findepi", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r440427981", "createdAt": "2020-06-15T20:28:26Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -101,19 +108,22 @@ Date and Time Functions\n \n     Returns a timestamp with time zone from ``timestamp`` and ``zone``.\n \n-.. function:: from_unixtime(unixtime) -> timestamp\n+.. function:: from_unixtime(unixtime) -> timestamp(3)\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime`` as a ``timestamp(3)``. ``unixtime``\n+    is the number of seconds since ``1970-01-01 00:00:00 UTC``.\n \n .. function:: from_unixtime(unixtime, zone) -> timestamp with time zone\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp with time zone\n-    using ``zone`` for the time zone. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime``, a double as a timestamp with\n+    time zone using ``zone`` for the time zone. ``unixtime`` is the number of\n+    seconds since ``1970-01-01 00:00:00 UTC`` in ``double`` data type.\n \n .. function:: from_unixtime(unixtime, hours, minutes) -> timestamp with time zone\n \n     Returns the UNIX timestamp ``unixtime`` as a timestamp with time zone\n-    using ``hours`` and ``minutes`` for the time zone offset. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    using ``hours`` and ``minutes`` for the time zone offset. ``unixtime`` is", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDg2Nw=="}, "originalCommit": null, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzNzM3OQ==", "bodyText": "I am out of context. what did i request that @electrum does not enjoy?", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r440437379", "createdAt": "2020-06-15T20:47:16Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -101,19 +108,22 @@ Date and Time Functions\n \n     Returns a timestamp with time zone from ``timestamp`` and ``zone``.\n \n-.. function:: from_unixtime(unixtime) -> timestamp\n+.. function:: from_unixtime(unixtime) -> timestamp(3)\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime`` as a ``timestamp(3)``. ``unixtime``\n+    is the number of seconds since ``1970-01-01 00:00:00 UTC``.\n \n .. function:: from_unixtime(unixtime, zone) -> timestamp with time zone\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp with time zone\n-    using ``zone`` for the time zone. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime``, a double as a timestamp with\n+    time zone using ``zone`` for the time zone. ``unixtime`` is the number of\n+    seconds since ``1970-01-01 00:00:00 UTC`` in ``double`` data type.\n \n .. function:: from_unixtime(unixtime, hours, minutes) -> timestamp with time zone\n \n     Returns the UNIX timestamp ``unixtime`` as a timestamp with time zone\n-    using ``hours`` and ``minutes`` for the time zone offset. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    using ``hours`` and ``minutes`` for the time zone offset. ``unixtime`` is", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDg2Nw=="}, "originalCommit": null, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxMTE2MA==", "bodyText": "Please revert this change as it's unrelated to timestamp precision.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r441011160", "createdAt": "2020-06-16T17:11:10Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -101,19 +108,22 @@ Date and Time Functions\n \n     Returns a timestamp with time zone from ``timestamp`` and ``zone``.\n \n-.. function:: from_unixtime(unixtime) -> timestamp\n+.. function:: from_unixtime(unixtime) -> timestamp(3)\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime`` as a ``timestamp(3)``. ``unixtime``\n+    is the number of seconds since ``1970-01-01 00:00:00 UTC``.\n \n .. function:: from_unixtime(unixtime, zone) -> timestamp with time zone\n \n-    Returns the UNIX timestamp ``unixtime`` as a timestamp with time zone\n-    using ``zone`` for the time zone. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    Returns the UNIX timestamp ``unixtime``, a double as a timestamp with\n+    time zone using ``zone`` for the time zone. ``unixtime`` is the number of\n+    seconds since ``1970-01-01 00:00:00 UTC`` in ``double`` data type.\n \n .. function:: from_unixtime(unixtime, hours, minutes) -> timestamp with time zone\n \n     Returns the UNIX timestamp ``unixtime`` as a timestamp with time zone\n-    using ``hours`` and ``minutes`` for the time zone offset. ``unixtime`` is the number of seconds since ``1970-01-01 00:00:00``.\n+    using ``hours`` and ``minutes`` for the time zone offset. ``unixtime`` is", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDg2Nw=="}, "originalCommit": null, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTc3MTIzOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo0NDoyNlrOGjaGFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDozMTo0NFrOGkBsSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDg4Nw==", "bodyText": "Add space after comma", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439780887", "createdAt": "2020-06-14T00:44:26Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -220,6 +238,12 @@ Unit              Description\n         SELECT date_diff('day', DATE '2020-03-01', DATE '2020-03-02');\n         -- 1\n \n+        SELECT date_diff('second', TIMESTAMP '2020-06-01 12:30:45.000000000',TIMESTAMP '2020-06-02 12:30:45.123456789');", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyOTY0Mw==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r440429643", "createdAt": "2020-06-15T20:31:44Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -220,6 +238,12 @@ Unit              Description\n         SELECT date_diff('day', DATE '2020-03-01', DATE '2020-03-02');\n         -- 1\n \n+        SELECT date_diff('second', TIMESTAMP '2020-06-01 12:30:45.000000000',TIMESTAMP '2020-06-02 12:30:45.123456789');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDg4Nw=="}, "originalCommit": null, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTc3MTM4OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo0NDo0OFrOGjaGKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzo0NToyNlrOGkmaXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDkwNQ==", "bodyText": "Remove the precision here, since this is a word, not a type.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439780905", "createdAt": "2020-06-14T00:44:48Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -307,9 +331,9 @@ Specifier Description\n \n     Formats ``timestamp`` as a string using ``format``.\n \n-.. function:: date_parse(string, format) -> timestamp\n+.. function:: date_parse(string, format) -> timestamp(3)\n \n-    Parses ``string`` into a timestamp using ``format``.\n+    Parses ``string`` into a timestamp(3) using ``format``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzMTI2MA==", "bodyText": "See comment. Please remove precision.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r441031260", "createdAt": "2020-06-16T17:45:26Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -307,9 +331,9 @@ Specifier Description\n \n     Formats ``timestamp`` as a string using ``format``.\n \n-.. function:: date_parse(string, format) -> timestamp\n+.. function:: date_parse(string, format) -> timestamp(3)\n \n-    Parses ``string`` into a timestamp using ``format``.\n+    Parses ``string`` into a timestamp(3) using ``format``.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDkwNQ=="}, "originalCommit": null, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTc3MTQ4OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/language/types.rst", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo0NTowMVrOGjaGMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDozNDo0OFrOGkByIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDkxNQ==", "bodyText": "Remove extra blank line", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439780915", "createdAt": "2020-06-14T00:45:01Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -141,6 +141,9 @@ String\n     JSON value type, which can be a JSON object, a JSON array, a JSON number, a JSON string,\n     ``true``, ``false`` or ``null``.\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzMTEzOA==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r440431138", "createdAt": "2020-06-15T20:34:48Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -141,6 +141,9 @@ String\n     JSON value type, which can be a JSON object, a JSON array, a JSON number, a JSON string,\n     ``true``, ``false`` or ``null``.\n \n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDkxNQ=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTc3MTg2OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/language/types.rst", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo0NTo1OFrOGjaGYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzo0NTo0N1rOGkmbIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDk2Mg==", "bodyText": "Remove the duplicate description. This section should only mention that this is an alias.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439780962", "createdAt": "2020-06-14T00:45:58Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzMTQ1Nw==", "bodyText": "See comment", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r441031457", "createdAt": "2020-06-16T17:45:47Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDk2Mg=="}, "originalCommit": null, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTc3MjA5OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/language/types.rst", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo0NjoyOVrOGjaGeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzo0NjowOFrOGkmcEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDk4NQ==", "bodyText": "We don't need to mention all the various redundant syntaxes.\n``TIMESTAMP`` is an alias for ``TIMESTAMP(3)``.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439780985", "createdAt": "2020-06-14T00:46:29Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzMTY5Ng==", "bodyText": "See comment", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r441031696", "createdAt": "2020-06-16T17:46:08Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MDk4NQ=="}, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTc3Mjg2OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/language/types.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo0ODozNlrOGjaG1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDozOToyNlrOGkB7Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MTA3Ng==", "bodyText": "Change this to just TIMESTAMP(P). We can mention in the description that this type can also be written as TIMESTAMP WITHOUT TIME ZONE. However, the canonical name for the type is just TIMESTAMP, when rendered by the SQL engine (e.g., in DESCRIBE) output, so we should call it that here.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439781076", "createdAt": "2020-06-14T00:48:36Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgyMjEzNw==", "bodyText": "Also, from purely human (non-scientific) perspective, TIMESTAMP WITHOUT TIME ZONE looks very similar to TIMESTAMP WITH TIME ZONE (eg has levenshtein distance of 3 with length of 27, being 88% similar).  TIMESTAMP is much easier to read.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439822137", "createdAt": "2020-06-14T11:56:11Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MTA3Ng=="}, "originalCommit": null, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzMzQ1MQ==", "bodyText": "Yes, that bit me a few times when writing the code to support these types. It's easy to get lost in a sea of names when you have things likeTimestampWithoutTimeZoneToTimestampWithTimeZoneCast. (I didn't go that route, fwiw)", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r440433451", "createdAt": "2020-06-15T20:39:26Z", "author": {"login": "martint"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MTA3Ng=="}, "originalCommit": null, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTc3MzAyOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/language/types.rst", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo0OToxNVrOGjaG6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzo0NjowNFrOGkmbzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MTA5Nw==", "bodyText": "We are missing this second sentence in the description below.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439781097", "createdAt": "2020-06-14T00:49:15Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzMTYzMA==", "bodyText": "See comment", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r441031630", "createdAt": "2020-06-16T17:46:04Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MTA5Nw=="}, "originalCommit": null, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTc3MzIzOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/language/types.rst", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo0OTo0OVrOGjaHAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo0MzoyMlrOGkCC3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MTEyMA==", "bodyText": "This should be the opposite. WITHOUT TIME ZONE is the equivalent longer name.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439781120", "createdAt": "2020-06-14T00:49:49Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4NjA3NA==", "bodyText": "Technically, no. The canonical name for the type in the SQL spec is \u201ctimestamp without time zone\u201d, even though we use the short name everywhere in Presto", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439786074", "createdAt": "2020-06-14T02:41:48Z", "author": {"login": "martint"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MTEyMA=="}, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3NDk2Mw==", "bodyText": "You can assume my comment means \"in Presto\".\nThe the documentation should reflect the actual usage. e.g., same with double precision. We document what exists, not what would exist if we exactly followed the specification.\nWhile I can see an argument for changing everything to use the longer name, that also seems like a tradeoff between readability/usability and being pedantic. (PostgreSQL seems to have chosen the latter in this case)", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r440274963", "createdAt": "2020-06-15T15:50:21Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MTEyMA=="}, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzNTQyMw==", "bodyText": "I'm not suggesting we change the names to the longer form. I was just commenting on the fact that the canonical name is actually the long form and the other version is just an alias, for the benefit of others that might see this discussion in the future.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r440435423", "createdAt": "2020-06-15T20:43:22Z", "author": {"login": "martint"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MTEyMA=="}, "originalCommit": null, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTc3MzUyOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/language/types.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo1MDoyM1rOGjaHIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo1MDoyM1rOGjaHIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MTE1Mw==", "bodyText": "A precision of up to 12 (picoseconds) is supported.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439781153", "createdAt": "2020-06-14T00:50:23Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default\n+    ``TIMESTAMP`` is an alias for ``TIMESTAMP(3)`` and means that up to\n+    millisecond values are included. A precision of up to 12, so picoseconds, is", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTc3MzcyOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/language/types.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo1MDo1N1rOGjaHNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzo0Njo1M1rOGkmd9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MTE3NA==", "bodyText": "It's best not to wrap in the middle of a :doc: reference. Better to put it on it's own line so the entire thing can be read and verified in its entirety.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439781174", "createdAt": "2020-06-14T00:50:57Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default\n+    ``TIMESTAMP`` is an alias for ``TIMESTAMP(3)`` and means that up to\n+    millisecond values are included. A precision of up to 12, so picoseconds, is\n+    supported.\n+\n+    You can construct a timestamp value with the ``TIMESTAMP`` literal\n+    expression. Alternatively, language constructs such as\n+    ``localtimestamp(p)``, or a number of :doc:`date and time functions and", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMwMjUzMA==", "bodyText": "I just use the wrapping of VisualCode to the 80 char and it works just fine. Do you really want me to manually wrap such occurrences..", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r440302530", "createdAt": "2020-06-15T16:33:47Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default\n+    ``TIMESTAMP`` is an alias for ``TIMESTAMP(3)`` and means that up to\n+    millisecond values are included. A precision of up to 12, so picoseconds, is\n+    supported.\n+\n+    You can construct a timestamp value with the ``TIMESTAMP`` literal\n+    expression. Alternatively, language constructs such as\n+    ``localtimestamp(p)``, or a number of :doc:`date and time functions and", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MTE3NA=="}, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzMjE4Mw==", "bodyText": "Yes, we format for readability, not arbitrary wrapping at 80 characters", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r441032183", "createdAt": "2020-06-16T17:46:53Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default\n+    ``TIMESTAMP`` is an alias for ``TIMESTAMP(3)`` and means that up to\n+    millisecond values are included. A precision of up to 12, so picoseconds, is\n+    supported.\n+\n+    You can construct a timestamp value with the ``TIMESTAMP`` literal\n+    expression. Alternatively, language constructs such as\n+    ``localtimestamp(p)``, or a number of :doc:`date and time functions and", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MTE3NA=="}, "originalCommit": null, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTc3MzgzOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/language/types.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo1MTozM1rOGjaHQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo1MTozM1rOGjaHQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MTE4Ng==", "bodyText": "\"truncating\" sounds weird. Let's say\n\ncauses the value to be rounded (not truncated).", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439781186", "createdAt": "2020-06-14T00:51:33Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default\n+    ``TIMESTAMP`` is an alias for ``TIMESTAMP(3)`` and means that up to\n+    millisecond values are included. A precision of up to 12, so picoseconds, is\n+    supported.\n+\n+    You can construct a timestamp value with the ``TIMESTAMP`` literal\n+    expression. Alternatively, language constructs such as\n+    ``localtimestamp(p)``, or a number of :doc:`date and time functions and\n+    operators </functions/datetime>` can return timestamp values.\n+\n+    Casting to lower precision causes rounding, and not truncating. Casting to", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTc3NDAxOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/language/types.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo1MjowM1rOGjaHWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo1MjowM1rOGjaHWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MTIwOA==", "bodyText": "Casting to higher precision appends zeros for the additional digits.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439781208", "createdAt": "2020-06-14T00:52:03Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default\n+    ``TIMESTAMP`` is an alias for ``TIMESTAMP(3)`` and means that up to\n+    millisecond values are included. A precision of up to 12, so picoseconds, is\n+    supported.\n+\n+    You can construct a timestamp value with the ``TIMESTAMP`` literal\n+    expression. Alternatively, language constructs such as\n+    ``localtimestamp(p)``, or a number of :doc:`date and time functions and\n+    operators </functions/datetime>` can return timestamp values.\n+\n+    Casting to lower precision causes rounding, and not truncating. Casting to\n+    higher precision causes appended zero digits.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTc3NDA2OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/language/types.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo1MjoxN1rOGjaHXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMDo1MjoxN1rOGjaHXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MTIxNA==", "bodyText": "Remove, since this is not implemented yet.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r439781214", "createdAt": "2020-06-14T00:52:17Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -169,19 +172,57 @@ See also :doc:`/language/timestamp`\n \n     Example: ``TIME '01:02:03.456 America/Los_Angeles'``\n \n+.. _timestamp-data-type:\n+\n ``TIMESTAMP``\n ^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day without a time zone.\n     Values of this type are parsed and rendered in the session time zone.\n+    Equivalent to ``TIMESTAMP WITHOUT TIME ZONE``, ``TIMESTAMP(3)``, and\n+    ``TIMESTAMP(3) WITHOUT TIME ZONE``.\n \n     Example: ``TIMESTAMP '2001-08-22 03:04:05.321'``\n \n+``TIMESTAMP(P) WITHOUT TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day without a time zone\n+    with ``P`` digits of precision for the fraction of seconds.\n+\n+    You can use ``TIMESTAMP(P)`` as an equivalent shorter name. The default\n+    ``TIMESTAMP`` is an alias for ``TIMESTAMP(3)`` and means that up to\n+    millisecond values are included. A precision of up to 12, so picoseconds, is\n+    supported.\n+\n+    You can construct a timestamp value with the ``TIMESTAMP`` literal\n+    expression. Alternatively, language constructs such as\n+    ``localtimestamp(p)``, or a number of :doc:`date and time functions and\n+    operators </functions/datetime>` can return timestamp values.\n+\n+    Casting to lower precision causes rounding, and not truncating. Casting to\n+    higher precision causes appended zero digits.\n+\n+    The following examples illustrate the behavior::\n+\n+        SELECT TIMESTAMP('2020-06-10 15:55:23.383345');\n+        -- 2020-06-10 15:55:23.383345\n+\n+        SELECT typeof(TIMESTAMP '2020-06-10 15:55:23.383345');\n+        -- timestamp(6)\n+\n+        SELECT cast(TIMESTAMP '2020-06-10 15:55:23.383345' as TIMESTAMP(1));\n+         -- 2020-06-10 15:55:23.4\n+\n+        SELECT cast(TIMESTAMP '2020-06-10 15:55:23.383345' as TIMESTAMP(12));\n+        -- 2020-06-10 15:55:23.383345000000\n+\n ``TIMESTAMP WITH TIME ZONE``\n ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n     Instant in time that includes the date and time of day with a time zone.\n     Values of this type are rendered using the time zone from the value.\n+    Equivalent to ``TIMESTAMP(3) WITH TIME ZONE``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzYwOTcxOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoxMTo0NVrOGklNEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo0NDozMVrOGkooIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxMTQ3Mg==", "bodyText": "We could add\n, with ``3`` digits of subsecond precision.", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r441011472", "createdAt": "2020-06-16T17:11:45Z", "author": {"login": "electrum"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -123,6 +133,14 @@ Date and Time Functions\n \n     Returns the current timestamp as of the start of the query.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2NzU1NA==", "bodyText": "added", "url": "https://github.com/trinodb/trino/pull/3995#discussion_r441067554", "createdAt": "2020-06-16T18:44:31Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -123,6 +133,14 @@ Date and Time Functions\n \n     Returns the current timestamp as of the start of the query.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxMTQ3Mg=="}, "originalCommit": null, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4290, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}