{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NTU4MzAx", "number": 4458, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODoyNToxMFrOEPBmgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwODowOToxNlrOEVt03g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTkwMzM5OnYy", "diffSide": "RIGHT", "path": "presto-hive/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODoyNToxMFrOGygZfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODoyNToxMFrOGygZfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYxMjc5OQ==", "bodyText": "please move it above to other compile scope airlift dependencies", "url": "https://github.com/trinodb/trino/pull/4458#discussion_r455612799", "createdAt": "2020-07-16T08:25:10Z", "author": {"login": "kokosing"}, "path": "presto-hive/pom.xml", "diffHunk": "@@ -351,6 +351,10 @@\n             <artifactId>jmh-generator-annprocess</artifactId>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>io.airlift</groupId>\n+            <artifactId>jmx</artifactId>\n+        </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTkwNDk0OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/cache/CachingHiveMetastore.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODoyNTozMFrOGygacQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQyMTowMDo0MVrOGzyU7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYxMzA0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    cacheBuilder = cacheBuilder.maximumSize(maximumSize);\n          \n          \n            \n                    cacheBuilder.recordStats();\n          \n          \n            \n                    cacheBuilder = cacheBuilder.maximumSize(maximumSize)\n          \n          \n            \n                        .recordStats();", "url": "https://github.com/trinodb/trino/pull/4458#discussion_r455613041", "createdAt": "2020-07-16T08:25:30Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/cache/CachingHiveMetastore.java", "diffHunk": "@@ -949,6 +951,7 @@ public boolean isImpersonationEnabled()\n             cacheBuilder = cacheBuilder.refreshAfterWrite(refreshMillis.getAsLong(), MILLISECONDS);\n         }\n         cacheBuilder = cacheBuilder.maximumSize(maximumSize);\n+        cacheBuilder.recordStats();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYxMzIxMg==", "bodyText": "Does it have influence on performance?", "url": "https://github.com/trinodb/trino/pull/4458#discussion_r455613212", "createdAt": "2020-07-16T08:25:46Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/cache/CachingHiveMetastore.java", "diffHunk": "@@ -949,6 +951,7 @@ public boolean isImpersonationEnabled()\n             cacheBuilder = cacheBuilder.refreshAfterWrite(refreshMillis.getAsLong(), MILLISECONDS);\n         }\n         cacheBuilder = cacheBuilder.maximumSize(maximumSize);\n+        cacheBuilder.recordStats();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYxMzA0MQ=="}, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5Mjg4Ng==", "bodyText": "Does it have influence on performance?\n\nCachingHiveMetastore used during query planning to get information about tables/partitions/etc. recordStats() pattern is used in ExpressionCompiler, JoinCompiler, other *Compilterclasses which called much more often  then CachingHiveMetastore (there more expressions that tables in each query). As a result I don't expect material performance impact.\nAlso, number of events should be close to number of events produced by ThriftHiveMetastore when no caching is used that already exposed via JMX.\nStill trying to figure out how to run benchmarking and coverage for these class.", "url": "https://github.com/trinodb/trino/pull/4458#discussion_r455992886", "createdAt": "2020-07-16T18:36:33Z", "author": {"login": "kosinsky"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/cache/CachingHiveMetastore.java", "diffHunk": "@@ -949,6 +951,7 @@ public boolean isImpersonationEnabled()\n             cacheBuilder = cacheBuilder.refreshAfterWrite(refreshMillis.getAsLong(), MILLISECONDS);\n         }\n         cacheBuilder = cacheBuilder.maximumSize(maximumSize);\n+        cacheBuilder.recordStats();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYxMzA0MQ=="}, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk1NTExOA==", "bodyText": "Still trying to figure out how to run benchmarking and coverage for these class.\n\nI don't think we need automated tests for that. It is ok.", "url": "https://github.com/trinodb/trino/pull/4458#discussion_r456955118", "createdAt": "2020-07-19T21:00:41Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/cache/CachingHiveMetastore.java", "diffHunk": "@@ -949,6 +951,7 @@ public boolean isImpersonationEnabled()\n             cacheBuilder = cacheBuilder.refreshAfterWrite(refreshMillis.getAsLong(), MILLISECONDS);\n         }\n         cacheBuilder = cacheBuilder.maximumSize(maximumSize);\n+        cacheBuilder.recordStats();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYxMzA0MQ=="}, "originalCommit": null, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NTU2NzE3OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/cache/CachingHiveMetastore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxODo1MDowMlrOG0a8hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOToyNjo1M1rOG8Xfgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyMDYxNQ==", "bodyText": "please only records stats for caching metastore between transactions. Do not enable it for transactional caching metastore (the one which is created per each transaction).", "url": "https://github.com/trinodb/trino/pull/4458#discussion_r457620615", "createdAt": "2020-07-20T18:50:02Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/cache/CachingHiveMetastore.java", "diffHunk": "@@ -948,7 +950,8 @@ public boolean isImpersonationEnabled()\n         if (refreshMillis.isPresent() && (expiresAfterWriteMillis.isEmpty() || expiresAfterWriteMillis.getAsLong() > refreshMillis.getAsLong())) {\n             cacheBuilder = cacheBuilder.refreshAfterWrite(refreshMillis.getAsLong(), MILLISECONDS);\n         }\n-        cacheBuilder = cacheBuilder.maximumSize(maximumSize);\n+        cacheBuilder = cacheBuilder.maximumSize(maximumSize)\n+            .recordStats();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk1MjY0Mg==", "bodyText": "Done. I'm not using recordStats() when cache created via memoizeMetastore that used in transactions", "url": "https://github.com/trinodb/trino/pull/4458#discussion_r465952642", "createdAt": "2020-08-05T19:26:53Z", "author": {"login": "kosinsky"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/cache/CachingHiveMetastore.java", "diffHunk": "@@ -948,7 +950,8 @@ public boolean isImpersonationEnabled()\n         if (refreshMillis.isPresent() && (expiresAfterWriteMillis.isEmpty() || expiresAfterWriteMillis.getAsLong() > refreshMillis.getAsLong())) {\n             cacheBuilder = cacheBuilder.refreshAfterWrite(refreshMillis.getAsLong(), MILLISECONDS);\n         }\n-        cacheBuilder = cacheBuilder.maximumSize(maximumSize);\n+        cacheBuilder = cacheBuilder.maximumSize(maximumSize)\n+            .recordStats();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyMDYxNQ=="}, "originalCommit": null, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjA2MzY2OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/cache/CachingHiveMetastore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwODowOToxNlrOG8oC1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNTo1NzoyNFrOG8556A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIyMzgyOA==", "bodyText": "Please define an enum. That way it will be much more readable when you pass STATS_RECORDING_ENABLED (or StatsRecording.ENABLED) instead of true.", "url": "https://github.com/trinodb/trino/pull/4458#discussion_r466223828", "createdAt": "2020-08-06T08:09:16Z", "author": {"login": "kokosing"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/cache/CachingHiveMetastore.java", "diffHunk": "@@ -132,7 +134,8 @@ public static HiveMetastore cachingHiveMetastore(HiveMetastore delegate, Executo\n                         .map(Duration::toMillis)\n                         .map(OptionalLong::of)\n                         .orElseGet(OptionalLong::empty),\n-                maximumSize);\n+                maximumSize,\n+                true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUxNjQ1Ng==", "bodyText": "Done", "url": "https://github.com/trinodb/trino/pull/4458#discussion_r466516456", "createdAt": "2020-08-06T15:57:24Z", "author": {"login": "kosinsky"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/cache/CachingHiveMetastore.java", "diffHunk": "@@ -132,7 +134,8 @@ public static HiveMetastore cachingHiveMetastore(HiveMetastore delegate, Executo\n                         .map(Duration::toMillis)\n                         .map(OptionalLong::of)\n                         .orElseGet(OptionalLong::empty),\n-                maximumSize);\n+                maximumSize,\n+                true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIyMzgyOA=="}, "originalCommit": null, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3640, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}