{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5NTUzNjQw", "number": 5079, "title": "Set X-Presto-User header to retrieve CPU usage", "bodyText": "As well as #4887, we need to provide X-Presto-User header to retrieve the process CPU time in the benchmark-driver.\n./presto-benchmark-driver/target/presto-benchmark-driver-341-SNAPSHOT-executable.jar --suite-config ./presto-benchmark-driver/src/test/resources/groups.json --sql ./presto-benchmark-driver/src/test/resources/sql --debug --catalog tpch\n2020-09-04T10:01:41.885+0900\tINFO\tmain\tio.airlift.log.Logging\tLogging to stderr\nsuite\tquery\tformat\tscale\twallTimeP50\twallTimeMean\twallTimeStd\tprocessCpuTimeP50\tprocessCpuTimeMean\tprocessCpuTimeStd\tqueryCpuTimeP50\tqueryCpuTimeMean\tqueryCpuTimeStd\tstatus\terror\njava.lang.NumberFormatException: For input string: \"Basic authentication or X-Presto-User must be sent\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat io.prestosql.benchmark.driver.BenchmarkQueryRunner.getTotalCpuTime(BenchmarkQueryRunner.java:275)\n\tat io.prestosql.benchmark.driver.BenchmarkQueryRunner.execute(BenchmarkQueryRunner.java:126)\n\tat io.prestosql.benchmark.driver.BenchmarkDriver.run(BenchmarkDriver.java:87)\n\tat io.prestosql.benchmark.driver.PrestoBenchmarkDriver.call(PrestoBenchmarkDriver.java:126)\n\tat io.prestosql.benchmark.driver.PrestoBenchmarkDriver.call(PrestoBenchmarkDriver.java:49)\n\tat picocli.CommandLine.executeUserObject(CommandLine.java:1933)\n\tat picocli.CommandLine.access$1100(CommandLine.java:145)\n\tat picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)\n\tat picocli.CommandLine$RunLast.handle(CommandLine.java:2326)\n\tat picocli.CommandLine$RunLast.handle(CommandLine.java:2291)\n\tat picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2159)\n\tat picocli.CommandLine.execute(CommandLine.java:2058)\n\tat io.prestosql.benchmark.driver.PrestoBenchmarkDriver.main(PrestoBenchmarkDriver.java:72)\njava.lang.NumberFormatException: For input string: \"Basic authentication or X-Presto-User must be sent\"", "createdAt": "2020-09-04T10:29:30Z", "url": "https://github.com/trinodb/trino/pull/5079", "merged": true, "mergeCommit": {"oid": "418c74a8ac823d560c6d3d4a5857892b19ece4a5"}, "closed": true, "closedAt": "2020-09-08T09:05:43Z", "author": {"login": "Lewuathe"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdGWMZbAFqTQ4MzE3NDgxNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdGqauVgBqjM3Mzg0NjA1Nzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMTc0ODE0", "url": "https://github.com/trinodb/trino/pull/5079#pullrequestreview-483174814", "createdAt": "2020-09-06T21:44:11Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQyMTo0NDoxMVrOHNsKvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQyMjoyODozMVrOHNsZ5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExNzE4MA==", "bodyText": "since we store user as a member variable in the class, we could just use that in this non-static method directly instead of passing it over from execute.", "url": "https://github.com/trinodb/trino/pull/5079#discussion_r484117180", "createdAt": "2020-09-06T21:44:11Z", "author": {"login": "phd3"}, "path": "presto-benchmark-driver/src/main/java/io/prestosql/benchmark/driver/BenchmarkQueryRunner.java", "diffHunk": "@@ -261,12 +262,12 @@ public void handleFailure(Exception e)\n         }\n     }\n \n-    private long getTotalCpuTime()\n+    private long getTotalCpuTime(String user)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExODcwMA==", "bodyText": "wondering about using session.getUser() here as opposed to a new member variable user.\nI think having this new member variable user makes sense, since getting cpu time is like a monitoring request, as opposed to a benchmark query fired by the session user.\nIn future, we can probably provide a different pre-configured \"super-user\"  in this constructor invocation from BenchmarkDriver, instead of clientSession.getUser.", "url": "https://github.com/trinodb/trino/pull/5079#discussion_r484118700", "createdAt": "2020-09-06T22:01:26Z", "author": {"login": "phd3"}, "path": "presto-benchmark-driver/src/main/java/io/prestosql/benchmark/driver/BenchmarkQueryRunner.java", "diffHunk": "@@ -122,13 +123,13 @@ public BenchmarkQueryResult execute(Suite suite, ClientSession session, Benchmar\n         double[] queryCpuTimeNanos = new double[runs];\n         for (int i = 0; i < runs; ) {\n             try {\n-                long startCpuTime = getTotalCpuTime();\n+                long startCpuTime = getTotalCpuTime(user);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEyMTA2Mg==", "bodyText": "this might be easier to read with multi-line formatting, and extracting out request preparation.\n            Request request = prepareGet()\n                    .setHeader(PrestoHeaders.PRESTO_USER, user)\n                    .setUri(uriBuilderFrom(server)\n                            .replacePath(\"/v1/jmx/mbean/java.lang:type=OperatingSystem/ProcessCpuTime\")\n                            .build())\n                    .build();\n            String data = httpClient.execute(request, createStringResponseHandler()).getBody();", "url": "https://github.com/trinodb/trino/pull/5079#discussion_r484121062", "createdAt": "2020-09-06T22:28:31Z", "author": {"login": "phd3"}, "path": "presto-benchmark-driver/src/main/java/io/prestosql/benchmark/driver/BenchmarkQueryRunner.java", "diffHunk": "@@ -261,12 +262,12 @@ public void handleFailure(Exception e)\n         }\n     }\n \n-    private long getTotalCpuTime()\n+    private long getTotalCpuTime(String user)\n     {\n         long totalCpuTime = 0;\n         for (URI server : nodes) {\n             URI addressUri = uriBuilderFrom(server).replacePath(\"/v1/jmx/mbean/java.lang:type=OperatingSystem/ProcessCpuTime\").build();\n-            String data = httpClient.execute(prepareGet().setUri(addressUri).build(), createStringResponseHandler()).getBody();\n+            String data = httpClient.execute(prepareGet().setHeader(PrestoHeaders.PRESTO_USER, user).setUri(addressUri).build(), createStringResponseHandler()).getBody();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMzg1MjMx", "url": "https://github.com/trinodb/trino/pull/5079#pullrequestreview-483385231", "createdAt": "2020-09-07T09:06:06Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a01d1f1321501627ef7141904d0d49e7483e5f9", "author": {"user": {"login": "Lewuathe", "name": "Kai Sasaki"}}, "url": "https://github.com/trinodb/trino/commit/9a01d1f1321501627ef7141904d0d49e7483e5f9", "committedDate": "2020-09-07T22:05:44Z", "message": "Set X-Presto-User header to retrieve CPU usage"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "9a01d1f1321501627ef7141904d0d49e7483e5f9", "author": {"user": {"login": "Lewuathe", "name": "Kai Sasaki"}}, "url": "https://github.com/trinodb/trino/commit/9a01d1f1321501627ef7141904d0d49e7483e5f9", "committedDate": "2020-09-07T22:05:44Z", "message": "Set X-Presto-User header to retrieve CPU usage"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3877, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}