{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0NjEwNjM0", "number": 4036, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTo1NzowN1rOEFmRJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo1Mzo1MVrOEFsVzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzA1MzE3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/server/protocol/Query.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTo1NzowN1rOGj4ioA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTo1NzowN1rOGj4ioA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3OTcxMg==", "bodyText": "This should be TIMESTAMP as used in toClientTypeSignature", "url": "https://github.com/trinodb/trino/pull/4036#discussion_r440279712", "createdAt": "2020-06-15T15:57:07Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/server/protocol/Query.java", "diffHunk": "@@ -575,8 +576,13 @@ private URI createPartialCancelUri(int stage, UriInfo uriInfo, long nextToken)\n \n     private Column createColumn(String name, Type type)\n     {\n-        TypeSignature signature = type.getTypeSignature();\n-        return new Column(name, type.getDisplayName(), toClientTypeSignature(signature));\n+        String typeName = type.getDisplayName();\n+\n+        if (type instanceof TimestampType && !supportsParametricDateTime) {\n+            typeName = \"timestamp\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzA2NzEzOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/server/protocol/Query.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNjowMDozM1rOGj4rZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo1NDo0MlrOGkCZHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4MTk1OA==", "bodyText": "Should we compare the type signature so that it's consistent with toClientTypeSignature?", "url": "https://github.com/trinodb/trino/pull/4036#discussion_r440281958", "createdAt": "2020-06-15T16:00:33Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/server/protocol/Query.java", "diffHunk": "@@ -575,8 +576,13 @@ private URI createPartialCancelUri(int stage, UriInfo uriInfo, long nextToken)\n \n     private Column createColumn(String name, Type type)\n     {\n-        TypeSignature signature = type.getTypeSignature();\n-        return new Column(name, type.getDisplayName(), toClientTypeSignature(signature));\n+        String typeName = type.getDisplayName();\n+\n+        if (type instanceof TimestampType && !supportsParametricDateTime) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4NTA0MQ==", "bodyText": "Actually, I realized this has a problem. It works for top-level timestamps, but not for, say, array(timestamp)", "url": "https://github.com/trinodb/trino/pull/4036#discussion_r440285041", "createdAt": "2020-06-15T16:05:24Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/server/protocol/Query.java", "diffHunk": "@@ -575,8 +576,13 @@ private URI createPartialCancelUri(int stage, UriInfo uriInfo, long nextToken)\n \n     private Column createColumn(String name, Type type)\n     {\n-        TypeSignature signature = type.getTypeSignature();\n-        return new Column(name, type.getDisplayName(), toClientTypeSignature(signature));\n+        String typeName = type.getDisplayName();\n+\n+        if (type instanceof TimestampType && !supportsParametricDateTime) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4MTk1OA=="}, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0MTExOQ==", "bodyText": "@martint add this as desired test-cases in #1787", "url": "https://github.com/trinodb/trino/pull/4036#discussion_r440441119", "createdAt": "2020-06-15T20:54:42Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/server/protocol/Query.java", "diffHunk": "@@ -575,8 +576,13 @@ private URI createPartialCancelUri(int stage, UriInfo uriInfo, long nextToken)\n \n     private Column createColumn(String name, Type type)\n     {\n-        TypeSignature signature = type.getTypeSignature();\n-        return new Column(name, type.getDisplayName(), toClientTypeSignature(signature));\n+        String typeName = type.getDisplayName();\n+\n+        if (type instanceof TimestampType && !supportsParametricDateTime) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4MTk1OA=="}, "originalCommit": null, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDA0ODEzOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/server/protocol/Query.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo1Mzo1MVrOGkCXew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo1Mzo1MVrOGkCXew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0MDY5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // and special types such as timestamp(p) with timezone in a future version\n          \n          \n            \n                    // and special types such as timestamp(p) with time zone in a future version", "url": "https://github.com/trinodb/trino/pull/4036#discussion_r440440699", "createdAt": "2020-06-15T20:53:51Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/server/protocol/Query.java", "diffHunk": "@@ -575,8 +575,11 @@ private URI createPartialCancelUri(int stage, UriInfo uriInfo, long nextToken)\n \n     private Column createColumn(String name, Type type)\n     {\n-        TypeSignature signature = type.getTypeSignature();\n-        return new Column(name, type.getDisplayName(), toClientTypeSignature(signature));\n+        ClientTypeSignature signature = toClientTypeSignature(type.getTypeSignature());\n+\n+        // TODO: the type name should be rendered by the SQL expression formatter to account for delimited field names in row types\n+        // and special types such as timestamp(p) with timezone in a future version", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4073, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}