{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0OTAxMDU1", "number": 2558, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyNDo1OFrODZQ5TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyODozNFrODZQ9vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODE3ODA1OnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyNDo1OFrOFfjn6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyNDo1OFrOFfjn6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYzMzgzMw==", "bodyText": "Move Cassandra Product Tests to launcher\n\nThis is the commit pattern i used. Not very important, but since this is a part of a series, we may choose to be consistent:\nConvert cassandra environment to Launcher\n\n(my commits didn't have \"environment\", but it seems we better add it, especially in this case)", "url": "https://github.com/trinodb/trino/pull/2558#discussion_r368633833", "createdAt": "2020-01-20T16:24:58Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentModule.java", "diffHunk": "@@ -21,6 +21,7 @@\n import io.prestosql.tests.product.launcher.env.common.Standard;\n import io.prestosql.tests.product.launcher.env.environment.Multinode;\n import io.prestosql.tests.product.launcher.env.environment.Singlenode;\n+import io.prestosql.tests.product.launcher.env.environment.SinglenodeCassandra;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODE4MTE1OnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/resources/docker/presto-product-tests/conf/presto/etc/catalog/cassandra.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyNjowMVrOFfjp1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyNjowMVrOFfjp1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYzNDMyNA==", "bodyText": "Include this comment:\nhttps://github.com/prestosql/presto/blob/cd65c0552816d36309ec24b8c0817831a49afdfd/presto-product-tests-launcher/src/main/resources/docker/presto-product-tests/conf/presto/etc/catalog/hive.properties#L1-L3", "url": "https://github.com/trinodb/trino/pull/2558#discussion_r368634324", "createdAt": "2020-01-20T16:26:01Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/resources/docker/presto-product-tests/conf/presto/etc/catalog/cassandra.properties", "diffHunk": "@@ -0,0 +1 @@\n+connector.name=jmx", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODE4MzI3OnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/environment/SinglenodeCassandra.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyNjo0MFrOFfjrIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyNjo0MFrOFfjrIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYzNDY1OA==", "bodyText": "just createCassandra?", "url": "https://github.com/trinodb/trino/pull/2558#discussion_r368634658", "createdAt": "2020-01-20T16:26:40Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/environment/SinglenodeCassandra.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.tests.product.launcher.env.environment;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.prestosql.tests.product.launcher.docker.DockerFiles;\n+import io.prestosql.tests.product.launcher.env.DockerContainer;\n+import io.prestosql.tests.product.launcher.env.Environment;\n+import io.prestosql.tests.product.launcher.env.common.AbstractEnvironmentProvider;\n+import io.prestosql.tests.product.launcher.env.common.Standard;\n+import io.prestosql.tests.product.launcher.testcontainers.SelectedPortWaitStrategy;\n+import org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy;\n+\n+import javax.inject.Inject;\n+\n+import java.time.Duration;\n+\n+import static io.prestosql.tests.product.launcher.testcontainers.TestcontainersUtil.exposePort;\n+import static java.util.Objects.requireNonNull;\n+\n+public class SinglenodeCassandra\n+        extends AbstractEnvironmentProvider\n+{\n+    private final DockerFiles dockerFiles;\n+\n+    public static final String CONTAINER_PRESTO_CASSANDRA_PROPERTIES = \"/docker/presto-product-tests/conf/presto/etc/catalog/cassandra.properties\";\n+    public static final int CASSANDRA_PORT = 9042;\n+\n+    @Inject\n+    protected SinglenodeCassandra(DockerFiles dockerFiles, Standard standard)\n+    {\n+        super(ImmutableList.of(standard));\n+        this.dockerFiles = requireNonNull(dockerFiles, \"dockerFiles is null\");\n+    }\n+\n+    @Override\n+    protected void extendEnvironment(Environment.Builder builder)\n+    {\n+        super.extendEnvironment(builder);\n+\n+        builder.addContainer(\"cassandra\", createCassandraNode());\n+\n+        builder.configureContainer(\"presto-master\", container -> container\n+                .withFileSystemBind(dockerFiles.getDockerFilesHostPath(\"conf/environment/singlenode-cassandra/cassandra.properties\"), CONTAINER_PRESTO_CASSANDRA_PROPERTIES));\n+    }\n+\n+    private DockerContainer createCassandraNode()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODE4OTQwOnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyODozNFrOFfjuuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyODozNFrOFfjuuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYzNTU3Nw==", "bodyText": "I'd add this at the end. (you placed this in between hadoop-based environments)", "url": "https://github.com/trinodb/trino/pull/2558#discussion_r368635577", "createdAt": "2020-01-20T16:28:34Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentModule.java", "diffHunk": "@@ -53,6 +54,8 @@ public void configure(Binder binder)\n \n         environments.addBinding(\"singlenode\").to(Singlenode.class);\n \n+        environments.addBinding(\"singlenode-cassandra\").to(SinglenodeCassandra.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1050, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}