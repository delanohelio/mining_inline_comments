{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4NTU4OTQ3", "number": 4856, "title": "Make Iceberg smoke tests more consistent and less verbose", "bodyText": "This commit makes TestIcebergSmoke more consistent and less verbose, and runs all tests for all storage formats:\n\nTestIcebergSmoke has been changed into an abstract class, whose derived classes, TestIcebergOrcSmoke and TestIcebergParquetSmoke, supply the FileFormat argument used by all the tests when creating databases.  All tests are run by each of the derived classes with the supplied storage format.  Moreover, the tables created when running tests on behalf of the two derived types can't conflict, because they are in different query runners.  This worked out very neatly.\nThis commit eliminated gratuitous session arguments to testWithAllFileFormats(), and to all calls to assertUpdate() and assertQuery().  The session passed is the same as the default in all tests, and so passing it is just pointless noise.\nThis commit gets rid of per-storage format table names.  They are unnecessary and make the tests less clear.\nThe test conventions are now more consistent.  One small example is always calling the dropTable() method rather than running DROP TABLE as an update.update.\nThis commit also fixes a bug in Iceberg's PrimitiveTypeBuilder which caused disagreements with Parquet for nested ARRAY types.", "createdAt": "2020-08-17T03:33:05Z", "url": "https://github.com/trinodb/trino/pull/4856", "merged": true, "mergeCommit": {"oid": "ba49f949448a85ee859756cbb60a7d652330b7b8"}, "closed": true, "closedAt": "2020-08-19T22:49:31Z", "author": {"login": "djsstarburst"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc_yIWUgFqTQ2ODQ0Mjg1NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAiDLqgBqjM2NzI1Nzk4NjM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NDQyODU0", "url": "https://github.com/trinodb/trino/pull/4856#pullrequestreview-468442854", "createdAt": "2020-08-17T13:04:37Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzowNDozN1rOHBn4Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzowNjo1MVrOHBn9GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ2Mzk3OQ==", "bodyText": "dropTable calls should be called always at the end of the tests. Currently if assertion fails the DROP will not be executed and test for another file format which uses same table name will fail on CREATE TABLE", "url": "https://github.com/trinodb/trino/pull/4856#discussion_r471463979", "createdAt": "2020-08-17T13:04:37Z", "author": {"login": "losipiuk"}, "path": "presto-iceberg/src/test/java/io/prestosql/plugin/iceberg/TestIcebergSmoke.java", "diffHunk": "@@ -387,177 +387,203 @@ private void testCreatePartitionedTableAs(Session session, FileFormat fileFormat\n \n //        assertEquals(partitions.size(), 3);\n \n-        assertQuery(session, \"SELECT * from test_create_partitioned_table_as\", \"SELECT orderkey, shippriority, orderstatus FROM orders\");\n+        assertQuery(\"SELECT * from test_create_partitioned_table_as\", \"SELECT orderkey, shippriority, orderstatus FROM orders\");\n \n-        dropTable(session, \"test_create_partitioned_table_as\");\n+        dropTable(\"test_create_partitioned_table_as\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 325}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ2NTI0MQ==", "bodyText": "instead doing loop manually you can use @DataProvider\nExample: https://github.com/prestosql/presto/blob/93faf7ad9a6b95a2436d4eaa9bf567756b759c3f/presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveStorageFormats.java#L63", "url": "https://github.com/trinodb/trino/pull/4856#discussion_r471465241", "createdAt": "2020-08-17T13:06:51Z", "author": {"login": "losipiuk"}, "path": "presto-iceberg/src/test/java/io/prestosql/plugin/iceberg/TestIcebergSmoke.java", "diffHunk": "@@ -248,30 +247,31 @@ private void testCreatePartitionedTable(Session session, FileFormat fileFormat)\n                 \", CAST('2017-05-01 10:12:34' AS TIMESTAMP) _timestamp\" +\n                 \", CAST('2017-05-01' AS DATE) _date\";\n \n-        assertUpdate(session, \"INSERT INTO test_partitioned_table \" + select, 1);\n-        assertQuery(session, \"SELECT * from test_partitioned_table\", select);\n-        assertQuery(session, \"\" +\n-                        \"SELECT * FROM test_partitioned_table WHERE\" +\n-                        \" 'foo' = _string\" +\n-                        \" AND 456 = _integer\" +\n-                        \" AND CAST(123 AS BIGINT) = _bigint\" +\n-                        \" AND true = _boolean\" +\n-                        \" AND CAST('3.14' AS DECIMAL(3,2)) = _decimal_short\" +\n-                        \" AND CAST('12345678901234567890.0123456789' AS DECIMAL(30,10)) = _decimal_long\" +\n-                        \" AND CAST('2017-05-01 10:12:34' AS TIMESTAMP) = _timestamp\" +\n-                        \" AND CAST('2017-05-01' AS DATE) = _date\",\n-                select);\n+        assertUpdate(format(\"INSERT INTO test_partitioned_table %s\", select), 1);\n+        assertQuery(\"SELECT * FROM test_partitioned_table\", select);\n \n-        dropTable(session, \"test_partitioned_table\");\n+        String selectAgain = \"\" +\n+                \"SELECT * FROM test_partitioned_table WHERE\" +\n+                \" 'foo' = _string\" +\n+                \" AND 456 = _integer\" +\n+                \" AND CAST(123 AS BIGINT) = _bigint\" +\n+                \" AND true = _boolean\" +\n+                \" AND CAST('3.14' AS DECIMAL(3,2)) = _decimal_short\" +\n+                \" AND CAST('12345678901234567890.0123456789' AS DECIMAL(30,10)) = _decimal_long\" +\n+                \" AND CAST('2017-05-01 10:12:34' AS TIMESTAMP) = _timestamp\" +\n+                \" AND CAST('2017-05-01' AS DATE) = _date\";\n+        assertQuery(selectAgain, select);\n+\n+        dropTable(\"test_partitioned_table\");\n     }\n \n     @Test\n     public void testCreatePartitionedTableWithNestedTypes()\n     {\n-        testWithAllFileFormats(this::testCreatePartitionedTableWithNestedTypes);\n+        testWithAllFileFormats(this::testCreatePartitionedTableWithNestedTypesForFormat);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 239}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MTQ2MTM2", "url": "https://github.com/trinodb/trino/pull/4856#pullrequestreview-469146136", "createdAt": "2020-08-18T09:21:09Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOToyMTowOVrOHCLBKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOTozMTo0MFrOHCLZbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAzOTcyMA==", "bodyText": "nit: I think name = \"allFormats\" is not needed if it matches method name.", "url": "https://github.com/trinodb/trino/pull/4856#discussion_r472039720", "createdAt": "2020-08-18T09:21:09Z", "author": {"login": "losipiuk"}, "path": "presto-iceberg/src/test/java/io/prestosql/plugin/iceberg/TestIcebergSmoke.java", "diffHunk": "@@ -73,8 +75,17 @@ protected QueryRunner createQueryRunner()\n         return createIcebergQueryRunner(ImmutableMap.of());\n     }\n \n-    @Test\n-    public void testShowCreateSchema()\n+    @DataProvider(name = \"allFormats\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA0MTQwNg==", "bodyText": "It seems this one should be renamed testShowCreateTable and method above should be dropped.", "url": "https://github.com/trinodb/trino/pull/4856#discussion_r472041406", "createdAt": "2020-08-18T09:24:04Z", "author": {"login": "losipiuk"}, "path": "presto-iceberg/src/test/java/io/prestosql/plugin/iceberg/TestIcebergSmoke.java", "diffHunk": "@@ -105,6 +121,12 @@ public void testDescribeTable()\n \n     @Override\n     public void testShowCreateTable()\n+    {\n+        testCreateTableForFormat(ORC);\n+    }\n+\n+    @Test(dataProvider = \"allFormats\")\n+    public void testCreateTableForFormat(FileFormat format)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA0MTU3MA==", "bodyText": "rename to testDescribeTable and drop method above?", "url": "https://github.com/trinodb/trino/pull/4856#discussion_r472041570", "createdAt": "2020-08-18T09:24:21Z", "author": {"login": "losipiuk"}, "path": "presto-iceberg/src/test/java/io/prestosql/plugin/iceberg/TestIcebergSmoke.java", "diffHunk": "@@ -84,9 +95,14 @@ public void testShowCreateSchema()\n                         \"\\\\)\");\n     }\n \n-    @Test\n     @Override\n     public void testDescribeTable()\n+    {\n+        testDescribeTableForFormat(ORC);\n+    }\n+\n+    @Test(dataProvider = \"allFormats\")\n+    public void testDescribeTableForFormat(FileFormat format)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA0NTkzNA==", "bodyText": "Before changes single table was only used for single test run, right? Then not having drop is not painful. We just end up with garbage.\nNow that we have same test executed multiple times (for different file formats), failure for test in format A will result in failure at the very beginning of test for format B.\nI think try/finally is fine approach. Though extra indentation makes code a bit less readable.\nOr you can use temporary table mechanism which @kokosing  intruduces in #4849, as soon as that one gets merged.", "url": "https://github.com/trinodb/trino/pull/4856#discussion_r472045934", "createdAt": "2020-08-18T09:31:40Z", "author": {"login": "losipiuk"}, "path": "presto-iceberg/src/test/java/io/prestosql/plugin/iceberg/TestIcebergSmoke.java", "diffHunk": "@@ -387,177 +387,203 @@ private void testCreatePartitionedTableAs(Session session, FileFormat fileFormat\n \n //        assertEquals(partitions.size(), 3);\n \n-        assertQuery(session, \"SELECT * from test_create_partitioned_table_as\", \"SELECT orderkey, shippriority, orderstatus FROM orders\");\n+        assertQuery(\"SELECT * from test_create_partitioned_table_as\", \"SELECT orderkey, shippriority, orderstatus FROM orders\");\n \n-        dropTable(session, \"test_create_partitioned_table_as\");\n+        dropTable(\"test_create_partitioned_table_as\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ2Mzk3OQ=="}, "originalCommit": null, "originalPosition": 325}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNjExNjQw", "url": "https://github.com/trinodb/trino/pull/4856#pullrequestreview-470611640", "createdAt": "2020-08-19T16:09:21Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNjowOToyMVrOHDOeEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNjoxNTo0MlrOHDOtmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE0NDg0OA==", "bodyText": "Check for null", "url": "https://github.com/trinodb/trino/pull/4856#discussion_r473144848", "createdAt": "2020-08-19T16:09:21Z", "author": {"login": "electrum"}, "path": "presto-iceberg/src/test/java/io/prestosql/plugin/iceberg/AbstractTestIcebergSmoke.java", "diffHunk": "@@ -57,20 +56,29 @@\n import static java.util.Locale.ENGLISH;\n import static java.util.stream.Collectors.joining;\n import static java.util.stream.IntStream.range;\n+import static org.apache.iceberg.FileFormat.ORC;\n+import static org.apache.iceberg.FileFormat.PARQUET;\n import static org.assertj.core.api.Assertions.assertThat;\n import static org.testng.Assert.assertFalse;\n import static org.testng.Assert.assertNotNull;\n \n-public class TestIcebergSmoke\n+public abstract class AbstractTestIcebergSmoke\n         extends AbstractTestIntegrationSmokeTest\n {\n     private static final Pattern WITH_CLAUSE_EXTRACTER = Pattern.compile(\".*(WITH\\\\s*\\\\([^)]*\\\\))\\\\s*$\", Pattern.DOTALL);\n \n+    private final FileFormat format;\n+\n+    public AbstractTestIcebergSmoke(FileFormat format)\n+    {\n+        this.format = format;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE0NTY2NQ==", "bodyText": "Remove", "url": "https://github.com/trinodb/trino/pull/4856#discussion_r473145665", "createdAt": "2020-08-19T16:10:39Z", "author": {"login": "electrum"}, "path": "presto-iceberg/src/test/java/io/prestosql/plugin/iceberg/AbstractTestIcebergSmoke.java", "diffHunk": "@@ -405,56 +363,56 @@ private void testCreatePartitionedTableAs(Session session, FileFormat fileFormat\n                         \"   order_status varchar\\n\" +\n                         \")\\n\" +\n                         \"WITH (\\n\" +\n-                        \"   format = '\" + fileFormat + \"',\\n\" +\n+                        \"   format = '%s',\\n\" +\n                         \"   partitioning = ARRAY['order_status','ship_priority','bucket(order_key, 9)']\\n\" +\n                         \")\",\n                 getSession().getCatalog().get(),\n                 getSession().getSchema().get(),\n-                \"test_create_partitioned_table_as\");\n+                \"test_create_partitioned_table_as\",\n+                format);\n \n         MaterializedResult actualResult = computeActual(\"SHOW CREATE TABLE test_create_partitioned_table_as\");\n         assertEquals(getOnlyElement(actualResult.getOnlyColumnAsSet()), createTableSql);\n \n //        assertEquals(partitions.size(), 3);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 363}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE0ODgyNA==", "bodyText": "We could make this\nFileFormat defaultFormat = new IcebergConfig().getFileFormat();\nreturn createIcebergQueryRunner(extraProperties, defaultFormat, true);", "url": "https://github.com/trinodb/trino/pull/4856#discussion_r473148824", "createdAt": "2020-08-19T16:15:42Z", "author": {"login": "electrum"}, "path": "presto-iceberg/src/test/java/io/prestosql/plugin/iceberg/IcebergQueryRunner.java", "diffHunk": "@@ -39,10 +41,16 @@ private IcebergQueryRunner() {}\n     public static DistributedQueryRunner createIcebergQueryRunner(Map<String, String> extraProperties)\n             throws Exception\n     {\n-        return createIcebergQueryRunner(extraProperties, true);\n+        return createIcebergQueryRunner(extraProperties, ORC, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20f3d59ccc88f970c470e2f313fed3b4dce42c39", "author": {"user": {"login": "djsstarburst", "name": "David Stryker"}}, "url": "https://github.com/trinodb/trino/commit/20f3d59ccc88f970c470e2f313fed3b4dce42c39", "committedDate": "2020-08-19T20:51:36Z", "message": "Make Iceberg smoke tests inmore consistent and less verbose\n\nThis commit makes TestIcebergSmoke more consistent and less verbose,\nand runs all tests for all storage formats:\n\no TestIcebergSmoke has been changed into an abstract class, whose\n  derived classes, TestIcebergOrcSmoke and TestIcebergParquetSmoke,\n  supply the FileFormat argument used by all the tests when creating\n  databases.  All tests are run by each of the derived classes with\n  the supplied storage format.  Moreover, the tables created when running\n  tests on behalf of the two derived types can't conflict, because\n  they are in different query runners.  This worked out very neatly.\no This commit eliminated gratuitous session arguments to testWithAllFileFormats(),\n  and to all calls to assertUpdate() and assertQuery().  The session passed\n  is the same as the default in all tests, and so passing it is just\n  pointless noise.\no This commit gets rid of per-storage format table names.  They are unnecessary\n  and make the tests less clear.\no The test conventions are now more consistent.  One small example\n  is always calling the dropTable() method rather than running DROP TABLE\n  as an update.update.\no This commit also fixes a bug in Iceberg's PrimitiveTypeBuilder which\n  caused disagreements with Parquet for nested ARRAY types."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "20f3d59ccc88f970c470e2f313fed3b4dce42c39", "author": {"user": {"login": "djsstarburst", "name": "David Stryker"}}, "url": "https://github.com/trinodb/trino/commit/20f3d59ccc88f970c470e2f313fed3b4dce42c39", "committedDate": "2020-08-19T20:51:36Z", "message": "Make Iceberg smoke tests inmore consistent and less verbose\n\nThis commit makes TestIcebergSmoke more consistent and less verbose,\nand runs all tests for all storage formats:\n\no TestIcebergSmoke has been changed into an abstract class, whose\n  derived classes, TestIcebergOrcSmoke and TestIcebergParquetSmoke,\n  supply the FileFormat argument used by all the tests when creating\n  databases.  All tests are run by each of the derived classes with\n  the supplied storage format.  Moreover, the tables created when running\n  tests on behalf of the two derived types can't conflict, because\n  they are in different query runners.  This worked out very neatly.\no This commit eliminated gratuitous session arguments to testWithAllFileFormats(),\n  and to all calls to assertUpdate() and assertQuery().  The session passed\n  is the same as the default in all tests, and so passing it is just\n  pointless noise.\no This commit gets rid of per-storage format table names.  They are unnecessary\n  and make the tests less clear.\no The test conventions are now more consistent.  One small example\n  is always calling the dropTable() method rather than running DROP TABLE\n  as an update.update.\no This commit also fixes a bug in Iceberg's PrimitiveTypeBuilder which\n  caused disagreements with Parquet for nested ARRAY types."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4407, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}