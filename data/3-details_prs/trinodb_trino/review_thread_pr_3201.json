{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMDg2MDk2", "number": 3201, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDo1MTo1OFrODrKH7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDo1MTo1OFrODrKH7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NTgxMjMxOnYy", "diffSide": "LEFT", "path": "presto-thrift/src/test/java/io/prestosql/plugin/thrift/integration/TestThriftDistributedQueries.java", "isResolved": false, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDo1MTo1OFrOF7VjuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwNjowMzowNVrOF-Ge5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc2MzUxMg==", "bodyText": "The problem with this test is that it stresses connector. It already was useful to find bugs in connectors implementation very often.", "url": "https://github.com/trinodb/trino/pull/3201#discussion_r397763512", "createdAt": "2020-03-25T10:51:58Z", "author": {"login": "kokosing"}, "path": "presto-thrift/src/test/java/io/prestosql/plugin/thrift/integration/TestThriftDistributedQueries.java", "diffHunk": "@@ -28,10 +28,4 @@ protected QueryRunner createQueryRunner()\n     {\n         return createThriftQueryRunner(3, 3, false, ImmutableMap.of());\n     }\n-\n-    @Override\n-    public void testAssignUniqueId()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc3MjYzNQ==", "bodyText": "How did this find bugs in connectors? If that's the case, we should add an explicit test to smoke tests. Ideally, anything here that tests connectors will move to smoke tests (which are there as connector tests), but that's a larger project.", "url": "https://github.com/trinodb/trino/pull/3201#discussion_r397772635", "createdAt": "2020-03-25T11:07:55Z", "author": {"login": "electrum"}, "path": "presto-thrift/src/test/java/io/prestosql/plugin/thrift/integration/TestThriftDistributedQueries.java", "diffHunk": "@@ -28,10 +28,4 @@ protected QueryRunner createQueryRunner()\n     {\n         return createThriftQueryRunner(3, 3, false, ImmutableMap.of());\n     }\n-\n-    @Override\n-    public void testAssignUniqueId()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc2MzUxMg=="}, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc3ODMxNw==", "bodyText": "It scans multiple tables at the same time (25x union). If connector for example implements pooling, this test will show if the pooling doesn't close connections etc.\nI think the test should be named differently, but it's valuable test.", "url": "https://github.com/trinodb/trino/pull/3201#discussion_r397778317", "createdAt": "2020-03-25T11:18:17Z", "author": {"login": "sopel39"}, "path": "presto-thrift/src/test/java/io/prestosql/plugin/thrift/integration/TestThriftDistributedQueries.java", "diffHunk": "@@ -28,10 +28,4 @@ protected QueryRunner createQueryRunner()\n     {\n         return createThriftQueryRunner(3, 3, false, ImmutableMap.of());\n     }\n-\n-    @Override\n-    public void testAssignUniqueId()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc2MzUxMg=="}, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc4MDcyMw==", "bodyText": "Also it exposes issues with any other shared resources within connector implementation that are not handling concurrency correctly.", "url": "https://github.com/trinodb/trino/pull/3201#discussion_r397780723", "createdAt": "2020-03-25T11:22:48Z", "author": {"login": "kokosing"}, "path": "presto-thrift/src/test/java/io/prestosql/plugin/thrift/integration/TestThriftDistributedQueries.java", "diffHunk": "@@ -28,10 +28,4 @@ protected QueryRunner createQueryRunner()\n     {\n         return createThriftQueryRunner(3, 3, false, ImmutableMap.of());\n     }\n-\n-    @Override\n-    public void testAssignUniqueId()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc2MzUxMg=="}, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc4NjkwMg==", "bodyText": "@kokosing @sopel39 let's copy the test do Distributed Queries. It can be outside of this PR", "url": "https://github.com/trinodb/trino/pull/3201#discussion_r397786902", "createdAt": "2020-03-25T11:34:19Z", "author": {"login": "findepi"}, "path": "presto-thrift/src/test/java/io/prestosql/plugin/thrift/integration/TestThriftDistributedQueries.java", "diffHunk": "@@ -28,10 +28,4 @@ protected QueryRunner createQueryRunner()\n     {\n         return createThriftQueryRunner(3, 3, false, ImmutableMap.of());\n     }\n-\n-    @Override\n-    public void testAssignUniqueId()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc2MzUxMg=="}, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyNDE5Nw==", "bodyText": "@findepi Shouldn't it go in smoke tests so that it runs for all connectors?", "url": "https://github.com/trinodb/trino/pull/3201#discussion_r399624197", "createdAt": "2020-03-28T05:50:27Z", "author": {"login": "electrum"}, "path": "presto-thrift/src/test/java/io/prestosql/plugin/thrift/integration/TestThriftDistributedQueries.java", "diffHunk": "@@ -28,10 +28,4 @@ protected QueryRunner createQueryRunner()\n     {\n         return createThriftQueryRunner(3, 3, false, ImmutableMap.of());\n     }\n-\n-    @Override\n-    public void testAssignUniqueId()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc2MzUxMg=="}, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA1ODM5NQ==", "bodyText": "I think distributed queries is a better place. Smoke tests are not implemented for each connector I guess. Other than that I would merge smoke tests with Distributed queries, I don't follow the difference between them.", "url": "https://github.com/trinodb/trino/pull/3201#discussion_r400058395", "createdAt": "2020-03-30T09:42:20Z", "author": {"login": "kokosing"}, "path": "presto-thrift/src/test/java/io/prestosql/plugin/thrift/integration/TestThriftDistributedQueries.java", "diffHunk": "@@ -28,10 +28,4 @@ protected QueryRunner createQueryRunner()\n     {\n         return createThriftQueryRunner(3, 3, false, ImmutableMap.of());\n     }\n-\n-    @Override\n-    public void testAssignUniqueId()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc2MzUxMg=="}, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU1MDE2OA==", "bodyText": "Which connectors don't have smoke tests that have distributed queries? I couldn't find any.", "url": "https://github.com/trinodb/trino/pull/3201#discussion_r400550168", "createdAt": "2020-03-30T23:15:04Z", "author": {"login": "electrum"}, "path": "presto-thrift/src/test/java/io/prestosql/plugin/thrift/integration/TestThriftDistributedQueries.java", "diffHunk": "@@ -28,10 +28,4 @@ protected QueryRunner createQueryRunner()\n     {\n         return createThriftQueryRunner(3, 3, false, ImmutableMap.of());\n     }\n-\n-    @Override\n-    public void testAssignUniqueId()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc2MzUxMg=="}, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY2MjI0NQ==", "bodyText": "i confirm. every connector impl'ing distributed queries test also impls smoke test.\nsome (those read-only) connectors implement smoke test only.\n(can be that a connector doesn't impl any, i didn't check)", "url": "https://github.com/trinodb/trino/pull/3201#discussion_r400662245", "createdAt": "2020-03-31T06:03:05Z", "author": {"login": "findepi"}, "path": "presto-thrift/src/test/java/io/prestosql/plugin/thrift/integration/TestThriftDistributedQueries.java", "diffHunk": "@@ -28,10 +28,4 @@ protected QueryRunner createQueryRunner()\n     {\n         return createThriftQueryRunner(3, 3, false, ImmutableMap.of());\n     }\n-\n-    @Override\n-    public void testAssignUniqueId()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc2MzUxMg=="}, "originalCommit": null, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 455, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}