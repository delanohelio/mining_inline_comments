{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNDc4NDk3", "number": 3213, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjoxODoxN1rODqc1dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwOTo0MDowOFrODqtlfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODM5MjIxOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestHiveDistributedJoinQueriesWithoutDynamicFiltering.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjoxODoxN1rOF6NHjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwOTo0MToxOFrOF6oHJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3NjY1NQ==", "bodyText": "I think we can remove it. There is no big benefit of this tests.", "url": "https://github.com/trinodb/trino/pull/3213#discussion_r396576655", "createdAt": "2020-03-23T16:18:17Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestHiveDistributedJoinQueriesWithoutDynamicFiltering.java", "diffHunk": "@@ -31,12 +32,14 @@\n import io.prestosql.testing.ResultWithQueryId;\n import org.testng.annotations.Test;\n \n-import static io.prestosql.SystemSessionProperties.ENABLE_DYNAMIC_FILTERING;\n import static io.prestosql.SystemSessionProperties.JOIN_DISTRIBUTION_TYPE;\n import static io.prestosql.tpch.TpchTable.getTables;\n import static org.testng.Assert.assertEquals;\n \n-public class TestHiveDistributedJoinQueriesWithDynamicFiltering\n+/**\n+ * @see TestHiveDistributedJoinQueries for tests with dynamic filtering enabled\n+ */\n+public class TestHiveDistributedJoinQueriesWithoutDynamicFiltering", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU4MjE0Mw==", "bodyText": "I cannot say I agree because of #3149 (comment)", "url": "https://github.com/trinodb/trino/pull/3213#discussion_r396582143", "createdAt": "2020-03-23T16:25:33Z", "author": {"login": "findepi"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestHiveDistributedJoinQueriesWithoutDynamicFiltering.java", "diffHunk": "@@ -31,12 +32,14 @@\n import io.prestosql.testing.ResultWithQueryId;\n import org.testng.annotations.Test;\n \n-import static io.prestosql.SystemSessionProperties.ENABLE_DYNAMIC_FILTERING;\n import static io.prestosql.SystemSessionProperties.JOIN_DISTRIBUTION_TYPE;\n import static io.prestosql.tpch.TpchTable.getTables;\n import static org.testng.Assert.assertEquals;\n \n-public class TestHiveDistributedJoinQueriesWithDynamicFiltering\n+/**\n+ * @see TestHiveDistributedJoinQueries for tests with dynamic filtering enabled\n+ */\n+public class TestHiveDistributedJoinQueriesWithoutDynamicFiltering", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3NjY1NQ=="}, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAxODkxNg==", "bodyText": "again I think it's unneeded. For example, we test joins with spill only in the engine: io.prestosql.tests.TestSpilledJoinQueries", "url": "https://github.com/trinodb/trino/pull/3213#discussion_r397018916", "createdAt": "2020-03-24T09:41:18Z", "author": {"login": "sopel39"}, "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestHiveDistributedJoinQueriesWithoutDynamicFiltering.java", "diffHunk": "@@ -31,12 +32,14 @@\n import io.prestosql.testing.ResultWithQueryId;\n import org.testng.annotations.Test;\n \n-import static io.prestosql.SystemSessionProperties.ENABLE_DYNAMIC_FILTERING;\n import static io.prestosql.SystemSessionProperties.JOIN_DISTRIBUTION_TYPE;\n import static io.prestosql.tpch.TpchTable.getTables;\n import static org.testng.Assert.assertEquals;\n \n-public class TestHiveDistributedJoinQueriesWithDynamicFiltering\n+/**\n+ * @see TestHiveDistributedJoinQueries for tests with dynamic filtering enabled\n+ */\n+public class TestHiveDistributedJoinQueriesWithoutDynamicFiltering", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3NjY1NQ=="}, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODM5Nzk4OnYy", "diffSide": "RIGHT", "path": "presto-tests/src/test/java/io/prestosql/tests/TestJoinQueriesWithoutDynamicFiltering.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjoxOToyNlrOF6NLKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMjo0MzoxM1rOF6ucOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3NzU3Ng==", "bodyText": "I'm not sure we really care about this setup. Maybe add a TODO: remove after few releases", "url": "https://github.com/trinodb/trino/pull/3213#discussion_r396577576", "createdAt": "2020-03-23T16:19:26Z", "author": {"login": "sopel39"}, "path": "presto-tests/src/test/java/io/prestosql/tests/TestJoinQueriesWithoutDynamicFiltering.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.tests;\n+\n+import com.google.common.collect.ImmutableMap;\n+import io.prestosql.testing.AbstractTestJoinQueries;\n+import io.prestosql.testing.QueryRunner;\n+import io.prestosql.tests.tpch.TpchQueryRunnerBuilder;\n+import org.testng.annotations.Test;\n+\n+/**\n+ * @see TestJoinQueries for tests with dynamic filtering enabled\n+ */\n+public class TestJoinQueriesWithoutDynamicFiltering", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU4MjkxMw==", "bodyText": "DF is pretty invasive, affects certain code areas, like CBO, reorder joins, PPD.\nAs long as we have a toggle to turn it on/off, we should have tests for both scenarios.", "url": "https://github.com/trinodb/trino/pull/3213#discussion_r396582913", "createdAt": "2020-03-23T16:26:36Z", "author": {"login": "findepi"}, "path": "presto-tests/src/test/java/io/prestosql/tests/TestJoinQueriesWithoutDynamicFiltering.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.tests;\n+\n+import com.google.common.collect.ImmutableMap;\n+import io.prestosql.testing.AbstractTestJoinQueries;\n+import io.prestosql.testing.QueryRunner;\n+import io.prestosql.tests.tpch.TpchQueryRunnerBuilder;\n+import org.testng.annotations.Test;\n+\n+/**\n+ * @see TestJoinQueries for tests with dynamic filtering enabled\n+ */\n+public class TestJoinQueriesWithoutDynamicFiltering", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3NzU3Ng=="}, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAxNzE5Mg==", "bodyText": "As long as we have a toggle to turn it on/off, we should have tests for both scenarios.\n\nWe have plenty of feature toggles in FeaturesConfig yet we don't do large scale tests with them on/off.", "url": "https://github.com/trinodb/trino/pull/3213#discussion_r397017192", "createdAt": "2020-03-24T09:38:33Z", "author": {"login": "sopel39"}, "path": "presto-tests/src/test/java/io/prestosql/tests/TestJoinQueriesWithoutDynamicFiltering.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.tests;\n+\n+import com.google.common.collect.ImmutableMap;\n+import io.prestosql.testing.AbstractTestJoinQueries;\n+import io.prestosql.testing.QueryRunner;\n+import io.prestosql.tests.tpch.TpchQueryRunnerBuilder;\n+import org.testng.annotations.Test;\n+\n+/**\n+ * @see TestJoinQueries for tests with dynamic filtering enabled\n+ */\n+public class TestJoinQueriesWithoutDynamicFiltering", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3NzU3Ng=="}, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEyMjYxNg==", "bodyText": "I can't name a feature toggle that impacts as many code areas as this one.\nIf there are such, we should do large scale tests for them too.", "url": "https://github.com/trinodb/trino/pull/3213#discussion_r397122616", "createdAt": "2020-03-24T12:43:13Z", "author": {"login": "findepi"}, "path": "presto-tests/src/test/java/io/prestosql/tests/TestJoinQueriesWithoutDynamicFiltering.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.tests;\n+\n+import com.google.common.collect.ImmutableMap;\n+import io.prestosql.testing.AbstractTestJoinQueries;\n+import io.prestosql.testing.QueryRunner;\n+import io.prestosql.tests.tpch.TpchQueryRunnerBuilder;\n+import org.testng.annotations.Test;\n+\n+/**\n+ * @see TestJoinQueries for tests with dynamic filtering enabled\n+ */\n+public class TestJoinQueriesWithoutDynamicFiltering", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3NzU3Ng=="}, "originalCommit": null, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MTEzMjQ3OnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/resources/docker/presto-product-tests/conf/environment/singlenode-kerberos-kms-hdfs-impersonation/hive.properties", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwOTozODo1OVrOF6oBhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMjo0NDoyN1rOF6ufPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAxNzQ3Nw==", "bodyText": "unrelated", "url": "https://github.com/trinodb/trino/pull/3213#discussion_r397017477", "createdAt": "2020-03-24T09:38:59Z", "author": {"login": "sopel39"}, "path": "presto-product-tests-launcher/src/main/resources/docker/presto-product-tests/conf/environment/singlenode-kerberos-kms-hdfs-impersonation/hive.properties", "diffHunk": "@@ -9,10 +9,9 @@ hive.allow-rename-column=true\n hive.metastore.authentication.type=KERBEROS\n hive.metastore.service.principal=hive/_HOST@LABS.TERADATA.COM\n # When using HDFS impersonation we talk to HDFS as session user configured in tempto (which is 'hive')\n-# However, TODO we don't have Metastore impersonation yet; when DROP TABLE is issued,\n-# Metastore needs to be able to delete the table files on HDFS, otherwise they be silently left behind,\n-# potentially causing some further tests to fail. For this reason, `hive.metastore.client.principal` needs\n-# to match session user configured in tempto.\n+# However, when DROP TABLE is issued, Metastore needs to be able to delete the table files on HDFS,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5acd9667d5ab7fd66b62cc71e94b0aaf260b6350"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEyMjg3MA==", "bodyText": "this is a separate commit. do you want me to move this commit to a separate PR?", "url": "https://github.com/trinodb/trino/pull/3213#discussion_r397122870", "createdAt": "2020-03-24T12:43:39Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/resources/docker/presto-product-tests/conf/environment/singlenode-kerberos-kms-hdfs-impersonation/hive.properties", "diffHunk": "@@ -9,10 +9,9 @@ hive.allow-rename-column=true\n hive.metastore.authentication.type=KERBEROS\n hive.metastore.service.principal=hive/_HOST@LABS.TERADATA.COM\n # When using HDFS impersonation we talk to HDFS as session user configured in tempto (which is 'hive')\n-# However, TODO we don't have Metastore impersonation yet; when DROP TABLE is issued,\n-# Metastore needs to be able to delete the table files on HDFS, otherwise they be silently left behind,\n-# potentially causing some further tests to fail. For this reason, `hive.metastore.client.principal` needs\n-# to match session user configured in tempto.\n+# However, when DROP TABLE is issued, Metastore needs to be able to delete the table files on HDFS,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAxNzQ3Nw=="}, "originalCommit": {"oid": "5acd9667d5ab7fd66b62cc71e94b0aaf260b6350"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEyMzM4OA==", "bodyText": "this is just nit really", "url": "https://github.com/trinodb/trino/pull/3213#discussion_r397123388", "createdAt": "2020-03-24T12:44:27Z", "author": {"login": "sopel39"}, "path": "presto-product-tests-launcher/src/main/resources/docker/presto-product-tests/conf/environment/singlenode-kerberos-kms-hdfs-impersonation/hive.properties", "diffHunk": "@@ -9,10 +9,9 @@ hive.allow-rename-column=true\n hive.metastore.authentication.type=KERBEROS\n hive.metastore.service.principal=hive/_HOST@LABS.TERADATA.COM\n # When using HDFS impersonation we talk to HDFS as session user configured in tempto (which is 'hive')\n-# However, TODO we don't have Metastore impersonation yet; when DROP TABLE is issued,\n-# Metastore needs to be able to delete the table files on HDFS, otherwise they be silently left behind,\n-# potentially causing some further tests to fail. For this reason, `hive.metastore.client.principal` needs\n-# to match session user configured in tempto.\n+# However, when DROP TABLE is issued, Metastore needs to be able to delete the table files on HDFS,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAxNzQ3Nw=="}, "originalCommit": {"oid": "5acd9667d5ab7fd66b62cc71e94b0aaf260b6350"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MTEzNjYwOnYy", "diffSide": "RIGHT", "path": "presto-tests/src/test/java/io/prestosql/tests/TestJoinQueriesWithoutDynamicFiltering.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwOTo0MDowOFrOF6oESQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMjo0NDoyNlrOF6ufMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAxODE4NQ==", "bodyText": "use ENABLE_DYNAMIC_FILTERING static import instead", "url": "https://github.com/trinodb/trino/pull/3213#discussion_r397018185", "createdAt": "2020-03-24T09:40:08Z", "author": {"login": "sopel39"}, "path": "presto-tests/src/test/java/io/prestosql/tests/TestJoinQueriesWithoutDynamicFiltering.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.tests;\n+\n+import com.google.common.collect.ImmutableMap;\n+import io.prestosql.testing.AbstractTestJoinQueries;\n+import io.prestosql.testing.QueryRunner;\n+import io.prestosql.tests.tpch.TpchQueryRunnerBuilder;\n+import org.testng.annotations.Test;\n+\n+/**\n+ * @see TestJoinQueries for tests with dynamic filtering enabled\n+ */\n+public class TestJoinQueriesWithoutDynamicFiltering\n+        extends AbstractTestJoinQueries\n+{\n+    @Override\n+    protected QueryRunner createQueryRunner()\n+            throws Exception\n+    {\n+        return TpchQueryRunnerBuilder.builder()\n+                .setExtraProperties(ImmutableMap.of(\"enable-dynamic-filtering\", \"false\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f008f9e35ab3b7cb98de8208378b2e3699ad5edc"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEyMzM3OA==", "bodyText": "ENABLE_DYNAMIC_FILTERING is for session property.", "url": "https://github.com/trinodb/trino/pull/3213#discussion_r397123378", "createdAt": "2020-03-24T12:44:26Z", "author": {"login": "findepi"}, "path": "presto-tests/src/test/java/io/prestosql/tests/TestJoinQueriesWithoutDynamicFiltering.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.tests;\n+\n+import com.google.common.collect.ImmutableMap;\n+import io.prestosql.testing.AbstractTestJoinQueries;\n+import io.prestosql.testing.QueryRunner;\n+import io.prestosql.tests.tpch.TpchQueryRunnerBuilder;\n+import org.testng.annotations.Test;\n+\n+/**\n+ * @see TestJoinQueries for tests with dynamic filtering enabled\n+ */\n+public class TestJoinQueriesWithoutDynamicFiltering\n+        extends AbstractTestJoinQueries\n+{\n+    @Override\n+    protected QueryRunner createQueryRunner()\n+            throws Exception\n+    {\n+        return TpchQueryRunnerBuilder.builder()\n+                .setExtraProperties(ImmutableMap.of(\"enable-dynamic-filtering\", \"false\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAxODE4NQ=="}, "originalCommit": {"oid": "f008f9e35ab3b7cb98de8208378b2e3699ad5edc"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 470, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}