{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyOTQyODY0", "number": 6388, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQwMTo0NTowMlrOFHgmZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQwMTo0NTowMlrOFHgmZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNDE4NDcxOnYy", "diffSide": "RIGHT", "path": "presto-druid/src/test/java/io/prestosql/plugin/druid/DruidQueryRunner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQwMTo0NTowMlrOII_75A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQwNToyMzozOVrOIJA-yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjMwNzA0NA==", "bodyText": "The existing usage is only two places. Could you move ImmutableMap.of() to TestDruidIntegrationSmokeTest & TestDruidIntegrationSmokeTestLatest instead of adding a method?", "url": "https://github.com/trinodb/trino/pull/6388#discussion_r546307044", "createdAt": "2020-12-20T01:45:02Z", "author": {"login": "ebyhr"}, "path": "presto-druid/src/test/java/io/prestosql/plugin/druid/DruidQueryRunner.java", "diffHunk": "@@ -39,10 +42,18 @@ private DruidQueryRunner() {}\n \n     public static QueryRunner createDruidQueryRunnerTpch(TestingDruidServer testingDruidServer)\n             throws Exception\n+    {\n+        return createDruidQueryRunnerTpch(testingDruidServer, ImmutableMap.of());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjMyNDE3MQ==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/6388#discussion_r546324171", "createdAt": "2020-12-20T05:23:39Z", "author": {"login": "shandeep00"}, "path": "presto-druid/src/test/java/io/prestosql/plugin/druid/DruidQueryRunner.java", "diffHunk": "@@ -39,10 +42,18 @@ private DruidQueryRunner() {}\n \n     public static QueryRunner createDruidQueryRunnerTpch(TestingDruidServer testingDruidServer)\n             throws Exception\n+    {\n+        return createDruidQueryRunnerTpch(testingDruidServer, ImmutableMap.of());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjMwNzA0NA=="}, "originalCommit": null, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4384, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}