{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MzU5NzQ2", "number": 4438, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODoxOTowNVrOEN70Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOToxODo1MFrOEOLOVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDQ2OTQzOnYy", "diffSide": "RIGHT", "path": "presto-record-decoder/src/main/java/io/prestosql/decoder/raw/RawColumnDecoder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODoxOTowNVrOGw0SGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODoyNTo0MlrOGw0hBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0MTQzNA==", "bodyText": "good catch. Can we have test for that?", "url": "https://github.com/trinodb/trino/pull/4438#discussion_r453841434", "createdAt": "2020-07-13T18:19:05Z", "author": {"login": "losipiuk"}, "path": "presto-record-decoder/src/main/java/io/prestosql/decoder/raw/RawColumnDecoder.java", "diffHunk": "@@ -289,6 +289,7 @@ private void checkEnoughBytes()\n         @Override\n         public Slice getSlice()\n         {\n+            value.position(start);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0NTI1Mg==", "bodyText": "yes I'll add one/update the old one", "url": "https://github.com/trinodb/trino/pull/4438#discussion_r453845252", "createdAt": "2020-07-13T18:25:42Z", "author": {"login": "charlesjmorgan"}, "path": "presto-record-decoder/src/main/java/io/prestosql/decoder/raw/RawColumnDecoder.java", "diffHunk": "@@ -289,6 +289,7 @@ private void checkEnoughBytes()\n         @Override\n         public Slice getSlice()\n         {\n+            value.position(start);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0MTQzNA=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjk5NDE1OnYy", "diffSide": "RIGHT", "path": "presto-kafka/src/test/java/io/prestosql/plugin/kafka/TestKafkaIntegrationSmokeTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOToxODo1MFrOGxLadQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOToxODo1MFrOGxLadQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIyMDQwNQ==", "bodyText": "Use larger values which span all the bytes for needed for given data type, so we are sure we are reading everything.\nIf you use 1 as test value for 8-byte char we can be reading just a single byte and still not-fail assertion. Sth like 0x1234567890abcdef will give better coverage.", "url": "https://github.com/trinodb/trino/pull/4438#discussion_r454220405", "createdAt": "2020-07-14T09:18:50Z", "author": {"login": "losipiuk"}, "path": "presto-kafka/src/test/java/io/prestosql/plugin/kafka/TestKafkaIntegrationSmokeTest.java", "diffHunk": "@@ -78,13 +92,39 @@ protected QueryRunner createQueryRunner()\n     @Test\n     public void testColumnReferencedTwice()\n     {\n-        ByteBuffer buf = ByteBuffer.allocate(8);\n-        buf.putLong(0, 1);\n+        ByteBuffer buf = ByteBuffer.allocate(48);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3894, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}