{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NTMwMzg2", "number": 4123, "title": "Reduce memory usage of TypedSet", "bodyText": "", "createdAt": "2020-06-21T11:13:05Z", "url": "https://github.com/trinodb/trino/pull/4123", "merged": true, "mergeCommit": {"oid": "547eb1a34afa83f7ace448b19c8f5ee884d24fbf"}, "closed": true, "closedAt": "2020-07-30T09:45:27Z", "author": {"login": "raunaqmorarka"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcukiq5gFqTQzNzExNDY0OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc57oAsABqjM2MDI3NTc3MjM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MTE0NjQ4", "url": "https://github.com/trinodb/trino/pull/4123#pullrequestreview-437114648", "createdAt": "2020-06-25T01:41:03Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5ODI0NDI2", "url": "https://github.com/trinodb/trino/pull/4123#pullrequestreview-439824426", "createdAt": "2020-06-30T09:12:40Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwOToxMjo0MFrOGqzWgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwOToyMTowNVrOGqzrUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUzNDcyMw==", "bodyText": "Int array list is backed by primitive array, but provides nicer interface and support for growing. No need to replace it", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r447534723", "createdAt": "2020-06-30T09:12:40Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/operator/aggregation/TypedSet.java", "diffHunk": "@@ -43,12 +44,11 @@\n     public static final DataSize MAX_FUNCTION_MEMORY = DataSize.of(4, MEGABYTE);\n \n     private static final int INSTANCE_SIZE = ClassLayout.parseClass(TypedSet.class).instanceSize();\n-    private static final int INT_ARRAY_LIST_INSTANCE_SIZE = ClassLayout.parseClass(IntArrayList.class).instanceSize();\n     private static final float FILL_RATIO = 0.75f;\n \n     private final Type elementType;\n     private final Optional<MethodHandle> elementIsDistinctFrom;\n-    private final IntArrayList blockPositionByHash;\n+    private int[] blockPositionByHash;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUzOTkwNg==", "bodyText": "Chart doesn't occupy full declared length. Trailing spaces are not stored.", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r447539906", "createdAt": "2020-06-30T09:20:49Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -45,6 +47,15 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        else if (type instanceof VarcharType) {\n+            // If bound on length of varchar is smaller than defaultSize, use that as expected size\n+            return ((VarcharType) type).getLength()\n+                    .map(length -> Math.min(length, defaultSize))\n+                    .orElse(defaultSize);\n+        }\n+        else if (type instanceof CharType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0MDA0OQ==", "bodyText": "Varchars usually won't occupy full declared length.", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r447540049", "createdAt": "2020-06-30T09:21:05Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -45,6 +47,15 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        else if (type instanceof VarcharType) {\n+            // If bound on length of varchar is smaller than defaultSize, use that as expected size\n+            return ((VarcharType) type).getLength()\n+                    .map(length -> Math.min(length, defaultSize))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NjM3NDU0", "url": "https://github.com/trinodb/trino/pull/4123#pullrequestreview-447637454", "createdAt": "2020-07-13T21:54:20Z", "commit": null, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fc03f402286ddd9a16817b46d599241e8761c00", "author": {"user": {"login": "raunaqmorarka", "name": "Raunaq Morarka"}}, "url": "https://github.com/trinodb/trino/commit/0fc03f402286ddd9a16817b46d599241e8761c00", "committedDate": "2020-07-27T20:01:49Z", "message": "Use getInt to access IntArrayList"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MzI2Nzg3", "url": "https://github.com/trinodb/trino/pull/4123#pullrequestreview-456326787", "createdAt": "2020-07-28T06:07:41Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjowNzo0MlrOG398Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjowNzo1N1rOG398Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMzOTY1MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // We may use up to 4 bytes per character due to UTF-8 encoding, assuming ascii for estimating size\n          \n          \n            \n                    // We may use up to 4 bytes per character due to UTF-8 encoding, assuming ASCII for estimating size", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r461339651", "createdAt": "2020-07-28T06:07:42Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -57,6 +59,16 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        // If bound on length of varchar or char is smaller than defaultSize, use that as expected size\n+        // We may use up to 4 bytes per character due to UTF-8 encoding, assuming ascii for estimating size", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMzOTY4Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    else if (type instanceof VarcharType) {\n          \n          \n            \n                    if (type instanceof VarcharType) {", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r461339683", "createdAt": "2020-07-28T06:07:48Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -57,6 +59,16 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        // If bound on length of varchar or char is smaller than defaultSize, use that as expected size\n+        // We may use up to 4 bytes per character due to UTF-8 encoding, assuming ascii for estimating size\n+        else if (type instanceof VarcharType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMzOTcyMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    else if (type instanceof CharType) {\n          \n          \n            \n                    if (type instanceof CharType) {", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r461339723", "createdAt": "2020-07-28T06:07:57Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -57,6 +59,16 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        // If bound on length of varchar or char is smaller than defaultSize, use that as expected size\n+        // We may use up to 4 bytes per character due to UTF-8 encoding, assuming ascii for estimating size\n+        else if (type instanceof VarcharType) {\n+            return ((VarcharType) type).getLength()\n+                    .map(length -> Math.min(length, defaultSize))\n+                    .orElse(defaultSize);\n+        }\n+        else if (type instanceof CharType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2NDQ4MTk3", "url": "https://github.com/trinodb/trino/pull/4123#pullrequestreview-456448197", "createdAt": "2020-07-28T09:11:23Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOToxMToyNFrOG4D1FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOToxMzoxMVrOG4D6Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQzNjE4MA==", "bodyText": "I still don't think that assuming that varchar will occupy entire length is the correct one. It seems very pessimistic. What do you think @dain?", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r461436180", "createdAt": "2020-07-28T09:11:24Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -45,6 +47,15 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        else if (type instanceof VarcharType) {\n+            // If bound on length of varchar is smaller than defaultSize, use that as expected size\n+            return ((VarcharType) type).getLength()\n+                    .map(length -> Math.min(length, defaultSize))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0MDA0OQ=="}, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQzNzM2Nw==", "bodyText": "this needs a comment about multibyte UTF-8", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r461437367", "createdAt": "2020-07-28T09:12:59Z", "author": {"login": "sopel39"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/VarcharType.java", "diffHunk": "@@ -136,6 +137,15 @@ public int compareTo(Block leftBlock, int leftPosition, Block rightBlock, int ri\n         return leftBlock.compareTo(leftPosition, 0, leftLength, rightBlock, rightPosition, 0, rightLength);\n     }\n \n+    @Override\n+    public BlockBuilder createBlockBuilder(BlockBuilderStatus blockBuilderStatus, int expectedEntries)\n+    {\n+        return createBlockBuilder(blockBuilderStatus, expectedEntries, getLength()\n+                // If bound on length is smaller than EXPECTED_BYTES_PER_ENTRY, use that as expected size", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQzNzQ0NQ==", "bodyText": "nit: each arg in newline", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r461437445", "createdAt": "2020-07-28T09:13:07Z", "author": {"login": "sopel39"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/VarcharType.java", "diffHunk": "@@ -136,6 +137,15 @@ public int compareTo(Block leftBlock, int leftPosition, Block rightBlock, int ri\n         return leftBlock.compareTo(leftPosition, 0, leftLength, rightBlock, rightPosition, 0, rightLength);\n     }\n \n+    @Override\n+    public BlockBuilder createBlockBuilder(BlockBuilderStatus blockBuilderStatus, int expectedEntries)\n+    {\n+        return createBlockBuilder(blockBuilderStatus, expectedEntries, getLength()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQzNzQ3OQ==", "bodyText": "this needs a comment about multibyte UTF-8", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r461437479", "createdAt": "2020-07-28T09:13:11Z", "author": {"login": "sopel39"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/CharType.java", "diffHunk": "@@ -108,6 +109,12 @@ public int compareTo(Block leftBlock, int leftPosition, Block rightBlock, int ri\n         return compareChars(leftSlice, rightSlice);\n     }\n \n+    @Override\n+    public BlockBuilder createBlockBuilder(BlockBuilderStatus blockBuilderStatus, int expectedEntries)\n+    {\n+        return createBlockBuilder(blockBuilderStatus, expectedEntries, Math.min(length, EXPECTED_BYTES_PER_ENTRY));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MzEzODgy", "url": "https://github.com/trinodb/trino/pull/4123#pullrequestreview-457313882", "createdAt": "2020-07-29T08:41:17Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3OTQ1MDc2", "url": "https://github.com/trinodb/trino/pull/4123#pullrequestreview-457945076", "createdAt": "2020-07-29T22:35:05Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMjozNTowNVrOG5Mo4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMjozNTowNVrOG5Mo4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYyOTA4OQ==", "bodyText": "I think we should assume the default size is one byte.  I would update the comment a bit:\nIt can take up to 4 bytes per character due to UTF-8 encoding, but we assume the data is ASCII and only needs one byte.", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r462629089", "createdAt": "2020-07-29T22:35:05Z", "author": {"login": "dain"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -45,6 +47,15 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        else if (type instanceof VarcharType) {\n+            // If bound on length of varchar is smaller than defaultSize, use that as expected size\n+            return ((VarcharType) type).getLength()\n+                    .map(length -> Math.min(length, defaultSize))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0MDA0OQ=="}, "originalCommit": null, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fa8534976b5a9672e54a30ae30b5d2bf29fb942", "author": {"user": {"login": "raunaqmorarka", "name": "Raunaq Morarka"}}, "url": "https://github.com/trinodb/trino/commit/3fa8534976b5a9672e54a30ae30b5d2bf29fb942", "committedDate": "2020-07-30T08:47:38Z", "message": "Use length of VarcharType and CharType to calculate EXPECTED_ENTRY_SIZE"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "3fa8534976b5a9672e54a30ae30b5d2bf29fb942", "author": {"user": {"login": "raunaqmorarka", "name": "Raunaq Morarka"}}, "url": "https://github.com/trinodb/trino/commit/3fa8534976b5a9672e54a30ae30b5d2bf29fb942", "committedDate": "2020-07-30T08:47:38Z", "message": "Use length of VarcharType and CharType to calculate EXPECTED_ENTRY_SIZE"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 473, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}