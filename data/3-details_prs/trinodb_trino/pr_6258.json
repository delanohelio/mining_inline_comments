{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NjUxNjU3", "number": 6258, "title": "Add 348 release notes", "bodyText": "Closes #6100", "createdAt": "2020-12-08T18:49:29Z", "url": "https://github.com/trinodb/trino/pull/6258", "merged": true, "mergeCommit": {"oid": "458cea57e2fbfbf898081c0b02b506e3c8abe15c"}, "closed": true, "closedAt": "2020-12-15T01:42:53Z", "author": {"login": "martint"}, "timelineItems": {"totalCount": 43, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkdR9FAFqTU0ODA5ODU1MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmQQccABqjQxMTIxNDk2NTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MDk4NTUx", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-548098551", "createdAt": "2020-12-09T11:41:35Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMTo0MTozNVrOICQXfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMTo0NDozNFrOICQe7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIzNjIyMA==", "bodyText": "@findepi Did it happen always? What was returned previously?", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r539236220", "createdAt": "2020-12-09T11:41:35Z", "author": {"login": "sopel39"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,60 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain filtered aggregations and outer joins. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats reporting in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with second fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIzODEyNQ==", "bodyText": "Maybe\nPreviously cache did not keep information whether table exists and remote database was always queried for table existence", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r539238125", "createdAt": "2020-12-09T11:44:34Z", "author": {"login": "sopel39"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,60 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain filtered aggregations and outer joins. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats reporting in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with second fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in same directory. ({issue}`6158`)\n+* Add deserializer class name to hive connector split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+\n+## Iceberg Connector Changes\n+\n+* Optimize predicate pushdown by using filters on non-partition columns during split generation and table scan. ({issue}`4932`)\n+\n+## Kafka Connector Changes\n+\n+* Allow writing `timestamp with time zone` values into columns using `milliseconds-since-epoch` or `seconds-since-epoch` JSON encoders. ({issue}`6074`)\n+\n+## Other Connector Changes\n+\n+* Fix table metadata information caching for PostgreSQL, MySQL, SQL Server, Redshift, MemSQL and Phoenix connectors. Previously cache did not \n+  store information if table exists and it was always verifing that in remote database.  ({issue}`6081`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NDA1MTEz", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-548405113", "createdAt": "2020-12-09T17:07:47Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNzowNzo0N1rOICfq0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNzowNzo0N1rOICfq0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ4NjkzMA==", "bodyText": "What are \"filtered aggregations\"?", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r539486930", "createdAt": "2020-12-09T17:07:47Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,60 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain filtered aggregations and outer joins. ({issue}`6141`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NTQwOTU2", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-548540956", "createdAt": "2020-12-09T19:35:27Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOTozNToyN1rOICl8qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOTozNTo1MFrOICl9sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU4OTgwMg==", "bodyText": "https://prestosql.io/docs/current/functions/aggregate.html#filtering-during-aggregation", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r539589802", "createdAt": "2020-12-09T19:35:27Z", "author": {"login": "kokosing"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,60 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain filtered aggregations and outer joins. ({issue}`6141`)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ4NjkzMA=="}, "originalCommit": null, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU5MDA2Ng==", "bodyText": "Is this the way to do nested indentation?", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r539590066", "createdAt": "2020-12-09T19:35:50Z", "author": {"login": "kokosing"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,62 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain filtered aggregations and outer joins. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats reporting in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with second fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in same directory. ({issue}`6158`)\n+* Add deserializer class name to hive connector split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+\n+## Iceberg Connector Changes\n+\n+* Optimize predicate pushdown by using filters on non-partition columns during split generation and table scan. ({issue}`4932`)\n+\n+## Kafka Connector Changes\n+\n+* Allow writing `timestamp with time zone` values into columns using `milliseconds-since-epoch` or `seconds-since-epoch` JSON encoders. ({issue}`6074`)\n+\n+## Other Connector Changes\n+\n+* Fix table metadata caching for PostgreSQL, MySQL, SQL Server, Redshift, MemSQL and Phoenix connectors:\n+  * Previously cache did not store information if table exists and it was always verifing that in remote database.  ({issue}`6081`)\n+  * Consider session properties when caching metadata, so there are different cache entries for diffent session properties. ({issue}`6167`)\n+  * Fix cache invalidation to remove entries for all users not only for the user that is running the query. ({issue}`6167`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NTkzMjY4", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-548593268", "createdAt": "2020-12-09T20:44:41Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDo0NDo0MlrOICoqCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDo0NDo0MlrOICoqCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYzNDE4NA==", "bodyText": "s/reporting/being reported/?", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r539634184", "createdAt": "2020-12-09T20:44:42Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,62 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain filtered aggregations and outer joins. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats reporting in stage performance view. ({issue}`6114`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NTk3ODAx", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-548597801", "createdAt": "2020-12-09T20:51:06Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDo1MTowN1rOICo5kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDo1MTowN1rOICo5kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYzODE2Mw==", "bodyText": "I feel some commas missing in this sentence. native-english-speaker needed :)", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r539638163", "createdAt": "2020-12-09T20:51:07Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,62 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain filtered aggregations and outer joins. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats reporting in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with second fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NjAxMzE2", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-548601316", "createdAt": "2020-12-09T20:56:03Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDo1NjowM1rOICpFbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDo1NjowM1rOICpFbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY0MTE5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Fix failure when instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n          \n          \n            \n            * Fix failure when an instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r539641198", "createdAt": "2020-12-09T20:56:03Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,62 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain filtered aggregations and outer joins. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats reporting in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with second fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NjAxNDQ3", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-548601447", "createdAt": "2020-12-09T20:56:14Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDo1NjoxNFrOICpF0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDo1NjoxNFrOICpF0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY0MTI5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Fix failure when instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n          \n          \n            \n            * Fix failure when an instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r539641298", "createdAt": "2020-12-09T20:56:14Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,62 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain filtered aggregations and outer joins. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats reporting in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with second fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NjAxODIz", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-548601823", "createdAt": "2020-12-09T20:56:46Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDo1Njo0NlrOICpHBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDo1Njo0NlrOICpHBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY0MTYwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              are located in same directory. ({issue}`6158`)\n          \n          \n            \n              are located in the same directory. ({issue}`6158`)", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r539641606", "createdAt": "2020-12-09T20:56:46Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,62 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain filtered aggregations and outer joins. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats reporting in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with second fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in same directory. ({issue}`6158`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NjAyOTI0", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-548602924", "createdAt": "2020-12-09T20:58:16Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDo1ODoxNlrOICpKuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDo1ODoxNlrOICpKuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY0MjU1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              * Previously cache did not store information if table exists and it was always verifing that in remote database.  ({issue}`6081`)\n          \n          \n            \n              * Consider session properties when caching metadata, so there are different cache entries for diffent session properties. ({issue}`6167`)\n          \n          \n            \n              * Fix cache invalidation to remove entries for all users not only for the user that is running the query. ({issue}`6167`)\n          \n          \n            \n              * Previously cache did not store information if table exists and it was always verifying that in the remote database.  ({issue}`6081`)\n          \n          \n            \n              * Consider session properties when caching metadata, so there are different cache entries for different session properties. ({issue}`6167`)\n          \n          \n            \n              * Fix cache invalidation to remove entries for all users not only for the user that is running the query. ({issue}`6167`)", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r539642553", "createdAt": "2020-12-09T20:58:16Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,62 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain filtered aggregations and outer joins. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats reporting in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with second fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in same directory. ({issue}`6158`)\n+* Add deserializer class name to hive connector split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+\n+## Iceberg Connector Changes\n+\n+* Optimize predicate pushdown by using filters on non-partition columns during split generation and table scan. ({issue}`4932`)\n+\n+## Kafka Connector Changes\n+\n+* Allow writing `timestamp with time zone` values into columns using `milliseconds-since-epoch` or `seconds-since-epoch` JSON encoders. ({issue}`6074`)\n+\n+## Other Connector Changes\n+\n+* Fix table metadata caching for PostgreSQL, MySQL, SQL Server, Redshift, MemSQL and Phoenix connectors:\n+  * Previously cache did not store information if table exists and it was always verifing that in remote database.  ({issue}`6081`)\n+  * Consider session properties when caching metadata, so there are different cache entries for diffent session properties. ({issue}`6167`)\n+  * Fix cache invalidation to remove entries for all users not only for the user that is running the query. ({issue}`6167`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NjAzNzUw", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-548603750", "createdAt": "2020-12-09T20:59:26Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDo1OToyNlrOICpNbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDo1OToyNlrOICpNbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY0MzI0Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Fix failure when reading a `timestamp` or `timestamp with time zone` value with second fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n          \n          \n            \n            * Fix failure when reading a `timestamp` or `timestamp with time zone` value with a second fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n          \n      \n    \n    \n  \n\nI am not sure though", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r539643247", "createdAt": "2020-12-09T20:59:26Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,62 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain filtered aggregations and outer joins. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats reporting in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with second fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NjQ5NTg5", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-548649589", "createdAt": "2020-12-09T22:05:09Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMjowNToxMFrOICroHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMjowNTo1MFrOICrpqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY4Mjg0NQ==", "bodyText": "Can this be described more from user perspective?\nThis is actually \"Fix potential query failures when using caching\" situation but the wording doesn't apparently communicate this.", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r539682845", "createdAt": "2020-12-09T22:05:10Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,62 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain filtered aggregations and outer joins. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats reporting in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with second fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in same directory. ({issue}`6158`)\n+* Add deserializer class name to hive connector split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+\n+## Iceberg Connector Changes\n+\n+* Optimize predicate pushdown by using filters on non-partition columns during split generation and table scan. ({issue}`4932`)\n+\n+## Kafka Connector Changes\n+\n+* Allow writing `timestamp with time zone` values into columns using `milliseconds-since-epoch` or `seconds-since-epoch` JSON encoders. ({issue}`6074`)\n+\n+## Other Connector Changes\n+\n+* Fix table metadata caching for PostgreSQL, MySQL, SQL Server, Redshift, MemSQL and Phoenix connectors:\n+  * Previously cache did not store information if table exists and it was always verifing that in remote database.  ({issue}`6081`)\n+  * Consider session properties when caching metadata, so there are different cache entries for diffent session properties. ({issue}`6167`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY4MzI0Mg==", "bodyText": "Can this be described more from user perspective?\nThis is actually \"Fix potential query failures -- eg SELECT * seeing a column that has already been removed -- when using caching\" situation but the wording doesn't apparently communicate this.", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r539683242", "createdAt": "2020-12-09T22:05:50Z", "author": {"login": "findepi"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,62 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain filtered aggregations and outer joins. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats reporting in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with second fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in same directory. ({issue}`6158`)\n+* Add deserializer class name to hive connector split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+\n+## Iceberg Connector Changes\n+\n+* Optimize predicate pushdown by using filters on non-partition columns during split generation and table scan. ({issue}`4932`)\n+\n+## Kafka Connector Changes\n+\n+* Allow writing `timestamp with time zone` values into columns using `milliseconds-since-epoch` or `seconds-since-epoch` JSON encoders. ({issue}`6074`)\n+\n+## Other Connector Changes\n+\n+* Fix table metadata caching for PostgreSQL, MySQL, SQL Server, Redshift, MemSQL and Phoenix connectors:\n+  * Previously cache did not store information if table exists and it was always verifing that in remote database.  ({issue}`6081`)\n+  * Consider session properties when caching metadata, so there are different cache entries for diffent session properties. ({issue}`6167`)\n+  * Fix cache invalidation to remove entries for all users not only for the user that is running the query. ({issue}`6167`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MTExMjkz", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549111293", "createdAt": "2020-12-10T11:39:26Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMTozOToyNlrOIDFC-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMTozOToyNlrOIDFC-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA5OTMyMQ==", "bodyText": "Remove redundant )) \u2192 )", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540099321", "createdAt": "2020-12-10T11:39:26Z", "author": {"login": "ebyhr"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,62 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain filtered aggregations and outer joins. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats reporting in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with second fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in same directory. ({issue}`6158`)\n+* Add deserializer class name to hive connector split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+\n+## Iceberg Connector Changes\n+\n+* Optimize predicate pushdown by using filters on non-partition columns during split generation and table scan. ({issue}`4932`)\n+\n+## Kafka Connector Changes\n+\n+* Allow writing `timestamp with time zone` values into columns using `milliseconds-since-epoch` or `seconds-since-epoch` JSON encoders. ({issue}`6074`)\n+\n+## Other Connector Changes\n+\n+* Fix table metadata caching for PostgreSQL, MySQL, SQL Server, Redshift, MemSQL and Phoenix connectors:\n+  * Previously cache did not store information if table exists and it was always verifing that in remote database.  ({issue}`6081`)\n+  * Consider session properties when caching metadata, so there are different cache entries for diffent session properties. ({issue}`6167`)\n+  * Fix cache invalidation to remove entries for all users not only for the user that is running the query. ({issue}`6167`)\n+\n+## SPI Changes\n+\n+* Change `SystemAccessControl#filterColumns` and `ConnectorAccessControl#filterColumns` method to accept a set of \n+  column names and return a set of visible column names. ({issue}`6084`))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NTg5NTY1", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549589565", "createdAt": "2020-12-10T20:48:54Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo0ODo1NFrOIDcrFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo0ODo1NFrOIDcrFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4NjQyMw==", "bodyText": "join statements ?", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540486423", "createdAt": "2020-12-10T20:48:54Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NTkwMTA3", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549590107", "createdAt": "2020-12-10T20:49:43Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo0OTo0M1rOIDcs8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo0OTo0M1rOIDcs8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4Njg5OQ==", "bodyText": "remove redundant \"in Web UI\"", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540486899", "createdAt": "2020-12-10T20:49:43Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NTkxNDgz", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549591483", "createdAt": "2020-12-10T20:51:43Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo1MTo0M1rOIDcxLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo1MTo0M1rOIDcxLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4Nzk4MA==", "bodyText": "Should we call this out more specifically as a breaking change for users of the JDBC driver?", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540487980", "createdAt": "2020-12-10T20:51:43Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats being reported in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NTkyNTg4", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549592588", "createdAt": "2020-12-10T20:53:15Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo1MzoxNVrOIDc0wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo1MzoxNVrOIDc0wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4ODg5OA==", "bodyText": "Again.. do we need to call this out as breaking change?", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540488898", "createdAt": "2020-12-10T20:53:15Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats being reported in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NTkyOTk2", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549592996", "createdAt": "2020-12-10T20:53:51Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo1Mzo1MVrOIDc2Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo1Mzo1MVrOIDc2Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4OTIxOQ==", "bodyText": "Should we add what it does now?", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540489219", "createdAt": "2020-12-10T20:53:51Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats being reported in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NTkzMTgx", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549593181", "createdAt": "2020-12-10T20:54:07Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo1NDowN1rOIDc2uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo1NDowN1rOIDc2uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4OTQwMA==", "bodyText": "lowercase geospatial", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540489400", "createdAt": "2020-12-10T20:54:07Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats being reported in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NTk3MTk3", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549597197", "createdAt": "2020-12-10T20:59:56Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo1OTo1NlrOIDdDpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo1OTo1NlrOIDdDpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5MjcwOA==", "bodyText": "lowercase geospatial", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540492708", "createdAt": "2020-12-10T20:59:56Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats being reported in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+* Fix cache entries invalidation, so entries are removed for all users not only the one that was running the query. ({issue}`6167`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NTkxMDI3", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549591027", "createdAt": "2020-12-10T20:51:02Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo1MTowMlrOIDcvlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTowMToxMFrOIDdGQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4NzU3NQ==", "bodyText": "how about in stage performance view -> on the Stage Performance page ?", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540487575", "createdAt": "2020-12-10T20:51:02Z", "author": {"login": "phd3"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats being reported in stage performance view. ({issue}`6114`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5MDcwMw==", "bodyText": "method --> methods", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540490703", "createdAt": "2020-12-10T20:56:26Z", "author": {"login": "phd3"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats being reported in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+* Fix cache entries invalidation, so entries are removed for all users not only the one that was running the query. ({issue}`6167`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in the same directory. ({issue}`6158`)\n+* Add deserializer class name to hive connector split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+* Add support for S3 streaming uploads. Data is uploaded to S3 as it is written, rather\n+  than staging to a local temporary file. This feature is disabled by default and can be enabled\n+  using the `hive.s3.streaming.enabled` configuration property. ({issue}`3712`, {issue}`6201`)\n+* Decrease default refresh thread count for metastore cache. ({issue}`6156`)\n+* Reduce load on metastore when metastore caching is enabled with background refresh\n+  by removing background refresh for partition metadata and statistics. ({issue}`6101`)\n+* Verify that data is in the correct bucket file when reading bucketed tables.\n+  This is enabled by default, as incorrect bucketing can cause incorrect query results,\n+  but can be disabled using the `hive.validate-bucketing` configuration property\n+  or the `validate_bucketing` session property. ({issue}`6012`)\n+* Allow configuring S3 endpoint in security mapping. ({issue}`3869`)\n+* Allow fallback to legacy Hive view translation logic via `hive.legacy-hive-view-translation` config property or \n+  `legacy_hive_view_translation` session property. ({issue}`6195 `)\n+    \n+## Iceberg Connector Changes\n+\n+* Optimize predicate pushdown by using filters on non-partition columns during split generation and table scan. ({issue}`4932`)\n+* Remove extra file system stat call when opening files. ({issue}`6174`)\n+* Add support for Google Cloud Storage and Azure Storage. ({issue}`6186`)\n+\n+## Kafka Connector Changes\n+\n+* Allow writing `timestamp with time zone` values into columns using `milliseconds-since-epoch` or `seconds-since-epoch` JSON encoders. ({issue}`6074`)\n+\n+## Other Connector Changes\n+\n+* Fix table metadata caching for PostgreSQL, MySQL, SQL Server, Redshift, MemSQL and Phoenix connectors:\n+  * Previously cache did not store information if table exists and it was always verifying that in the remote database. ({issue}`6081`)\n+  * Consider session properties when caching metadata, so there are different cache entries for different session properties. ({issue}`6167`)\n+  * Fix cache invalidation to remove entries for all users not only for the user that is running the query. ({issue}`6167`)\n+\n+## SPI Changes\n+\n+* Change `SystemAccessControl#filterColumns` and `ConnectorAccessControl#filterColumns` method to accept a set of ", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5MzM3OQ==", "bodyText": "How about\nFix cache invalidation by removing entries for all users, not only for the user running the query. ({issue}`6167`)", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540493379", "createdAt": "2020-12-10T21:01:10Z", "author": {"login": "phd3"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,62 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain filtered aggregations and outer joins. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats reporting in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with second fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in same directory. ({issue}`6158`)\n+* Add deserializer class name to hive connector split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+\n+## Iceberg Connector Changes\n+\n+* Optimize predicate pushdown by using filters on non-partition columns during split generation and table scan. ({issue}`4932`)\n+\n+## Kafka Connector Changes\n+\n+* Allow writing `timestamp with time zone` values into columns using `milliseconds-since-epoch` or `seconds-since-epoch` JSON encoders. ({issue}`6074`)\n+\n+## Other Connector Changes\n+\n+* Fix table metadata caching for PostgreSQL, MySQL, SQL Server, Redshift, MemSQL and Phoenix connectors:\n+  * Previously cache did not store information if table exists and it was always verifing that in remote database.  ({issue}`6081`)\n+  * Consider session properties when caching metadata, so there are different cache entries for diffent session properties. ({issue}`6167`)\n+  * Fix cache invalidation to remove entries for all users not only for the user that is running the query. ({issue}`6167`)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU5MDA2Ng=="}, "originalCommit": null, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NjI3MzE0", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549627314", "createdAt": "2020-12-10T21:43:59Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTo0Mzo1OVrOIDepDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTo0Mzo1OVrOIDepDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUxODY3MA==", "bodyText": "Uppercase \"Hive connector\"", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540518670", "createdAt": "2020-12-10T21:43:59Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats being reported in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+* Fix cache entries invalidation, so entries are removed for all users not only the one that was running the query. ({issue}`6167`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in the same directory. ({issue}`6158`)\n+* Add deserializer class name to hive connector split information, which is exposed through the event listener. ({issue}`6006`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NjQ1OTEw", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549645910", "createdAt": "2020-12-10T22:12:08Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjoxMjowOFrOIDfoQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjoxMjowOFrOIDfoQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUzNDg1MQ==", "bodyText": "rather than staged", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540534851", "createdAt": "2020-12-10T22:12:08Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats being reported in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+* Fix cache entries invalidation, so entries are removed for all users not only the one that was running the query. ({issue}`6167`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in the same directory. ({issue}`6158`)\n+* Add deserializer class name to hive connector split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+* Add support for S3 streaming uploads. Data is uploaded to S3 as it is written, rather\n+  than staging to a local temporary file. This feature is disabled by default and can be enabled", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NjQ2NTU0", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549646554", "createdAt": "2020-12-10T22:13:08Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjoxMzowOFrOIDfqlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjoxMzowOFrOIDfqlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUzNTQ0Nw==", "bodyText": "also .. is this property documented in https://prestosql.io/docs/current/connector/hive-s3.html ?", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540535447", "createdAt": "2020-12-10T22:13:08Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats being reported in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+* Fix cache entries invalidation, so entries are removed for all users not only the one that was running the query. ({issue}`6167`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in the same directory. ({issue}`6158`)\n+* Add deserializer class name to hive connector split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+* Add support for S3 streaming uploads. Data is uploaded to S3 as it is written, rather\n+  than staging to a local temporary file. This feature is disabled by default and can be enabled\n+  using the `hive.s3.streaming.enabled` configuration property. ({issue}`3712`, {issue}`6201`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NjQ2ODc4", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549646878", "createdAt": "2020-12-10T22:13:37Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjoxMzozN1rOIDfrqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjoxMzozN1rOIDfrqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUzNTcyMA==", "bodyText": "Break up into two sentenced maybe?", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540535720", "createdAt": "2020-12-10T22:13:37Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats being reported in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+* Fix cache entries invalidation, so entries are removed for all users not only the one that was running the query. ({issue}`6167`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in the same directory. ({issue}`6158`)\n+* Add deserializer class name to hive connector split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+* Add support for S3 streaming uploads. Data is uploaded to S3 as it is written, rather\n+  than staging to a local temporary file. This feature is disabled by default and can be enabled\n+  using the `hive.s3.streaming.enabled` configuration property. ({issue}`3712`, {issue}`6201`)\n+* Decrease default refresh thread count for metastore cache. ({issue}`6156`)\n+* Reduce load on metastore when metastore caching is enabled with background refresh", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NjQ3MTcy", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549647172", "createdAt": "2020-12-10T22:14:05Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjoxNDowNVrOIDfsxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjoxNDowNVrOIDfsxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUzNjAwNg==", "bodyText": "is this documented in hive.rst ?", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540536006", "createdAt": "2020-12-10T22:14:05Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats being reported in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+* Fix cache entries invalidation, so entries are removed for all users not only the one that was running the query. ({issue}`6167`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in the same directory. ({issue}`6158`)\n+* Add deserializer class name to hive connector split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+* Add support for S3 streaming uploads. Data is uploaded to S3 as it is written, rather\n+  than staging to a local temporary file. This feature is disabled by default and can be enabled\n+  using the `hive.s3.streaming.enabled` configuration property. ({issue}`3712`, {issue}`6201`)\n+* Decrease default refresh thread count for metastore cache. ({issue}`6156`)\n+* Reduce load on metastore when metastore caching is enabled with background refresh\n+  by removing background refresh for partition metadata and statistics. ({issue}`6101`)\n+* Verify that data is in the correct bucket file when reading bucketed tables.\n+  This is enabled by default, as incorrect bucketing can cause incorrect query results,\n+  but can be disabled using the `hive.validate-bucketing` configuration property", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NjUzOTY0", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549653964", "createdAt": "2020-12-10T22:25:14Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjoyNToxNFrOIDgESw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjoyNToxNFrOIDgESw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU0MjAyNw==", "bodyText": "comma: if tables exists, and", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540542027", "createdAt": "2020-12-10T22:25:14Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats being reported in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+* Fix cache entries invalidation, so entries are removed for all users not only the one that was running the query. ({issue}`6167`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in the same directory. ({issue}`6158`)\n+* Add deserializer class name to hive connector split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+* Add support for S3 streaming uploads. Data is uploaded to S3 as it is written, rather\n+  than staging to a local temporary file. This feature is disabled by default and can be enabled\n+  using the `hive.s3.streaming.enabled` configuration property. ({issue}`3712`, {issue}`6201`)\n+* Decrease default refresh thread count for metastore cache. ({issue}`6156`)\n+* Reduce load on metastore when metastore caching is enabled with background refresh\n+  by removing background refresh for partition metadata and statistics. ({issue}`6101`)\n+* Verify that data is in the correct bucket file when reading bucketed tables.\n+  This is enabled by default, as incorrect bucketing can cause incorrect query results,\n+  but can be disabled using the `hive.validate-bucketing` configuration property\n+  or the `validate_bucketing` session property. ({issue}`6012`)\n+* Allow configuring S3 endpoint in security mapping. ({issue}`3869`)\n+* Allow fallback to legacy Hive view translation logic via `hive.legacy-hive-view-translation` config property or \n+  `legacy_hive_view_translation` session property. ({issue}`6195 `)\n+    \n+## Iceberg Connector Changes\n+\n+* Optimize predicate pushdown by using filters on non-partition columns during split generation and table scan. ({issue}`4932`)\n+* Remove extra file system stat call when opening files. ({issue}`6174`)\n+* Add support for Google Cloud Storage and Azure Storage. ({issue}`6186`)\n+\n+## Kafka Connector Changes\n+\n+* Allow writing `timestamp with time zone` values into columns using `milliseconds-since-epoch` or `seconds-since-epoch` JSON encoders. ({issue}`6074`)\n+\n+## Other Connector Changes\n+\n+* Fix table metadata caching for PostgreSQL, MySQL, SQL Server, Redshift, MemSQL and Phoenix connectors:\n+  * Previously cache did not store information if table exists and it was always verifying that in the remote database. ({issue}`6081`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NjU0MzQx", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549654341", "createdAt": "2020-12-10T22:25:49Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjoyNTo0OVrOIDgFcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjoyNTo0OVrOIDgFcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU0MjMyMQ==", "bodyText": "comma: for all users, not only for the user...", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540542321", "createdAt": "2020-12-10T22:25:49Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats being reported in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+* Fix cache entries invalidation, so entries are removed for all users not only the one that was running the query. ({issue}`6167`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in the same directory. ({issue}`6158`)\n+* Add deserializer class name to hive connector split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+* Add support for S3 streaming uploads. Data is uploaded to S3 as it is written, rather\n+  than staging to a local temporary file. This feature is disabled by default and can be enabled\n+  using the `hive.s3.streaming.enabled` configuration property. ({issue}`3712`, {issue}`6201`)\n+* Decrease default refresh thread count for metastore cache. ({issue}`6156`)\n+* Reduce load on metastore when metastore caching is enabled with background refresh\n+  by removing background refresh for partition metadata and statistics. ({issue}`6101`)\n+* Verify that data is in the correct bucket file when reading bucketed tables.\n+  This is enabled by default, as incorrect bucketing can cause incorrect query results,\n+  but can be disabled using the `hive.validate-bucketing` configuration property\n+  or the `validate_bucketing` session property. ({issue}`6012`)\n+* Allow configuring S3 endpoint in security mapping. ({issue}`3869`)\n+* Allow fallback to legacy Hive view translation logic via `hive.legacy-hive-view-translation` config property or \n+  `legacy_hive_view_translation` session property. ({issue}`6195 `)\n+    \n+## Iceberg Connector Changes\n+\n+* Optimize predicate pushdown by using filters on non-partition columns during split generation and table scan. ({issue}`4932`)\n+* Remove extra file system stat call when opening files. ({issue}`6174`)\n+* Add support for Google Cloud Storage and Azure Storage. ({issue}`6186`)\n+\n+## Kafka Connector Changes\n+\n+* Allow writing `timestamp with time zone` values into columns using `milliseconds-since-epoch` or `seconds-since-epoch` JSON encoders. ({issue}`6074`)\n+\n+## Other Connector Changes\n+\n+* Fix table metadata caching for PostgreSQL, MySQL, SQL Server, Redshift, MemSQL and Phoenix connectors:\n+  * Previously cache did not store information if table exists and it was always verifying that in the remote database. ({issue}`6081`)\n+  * Consider session properties when caching metadata, so there are different cache entries for different session properties. ({issue}`6167`)\n+  * Fix cache invalidation to remove entries for all users not only for the user that is running the query. ({issue}`6167`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NjU0NzE2", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549654716", "createdAt": "2020-12-10T22:26:32Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjoyNjozMlrOIDgGqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjoyNjozMlrOIDgGqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU0MjYzMg==", "bodyText": "comma: column names, and return..", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540542632", "createdAt": "2020-12-10T22:26:32Z", "author": {"login": "mosabua"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats being reported in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+* Fix cache entries invalidation, so entries are removed for all users not only the one that was running the query. ({issue}`6167`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in the same directory. ({issue}`6158`)\n+* Add deserializer class name to hive connector split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+* Add support for S3 streaming uploads. Data is uploaded to S3 as it is written, rather\n+  than staging to a local temporary file. This feature is disabled by default and can be enabled\n+  using the `hive.s3.streaming.enabled` configuration property. ({issue}`3712`, {issue}`6201`)\n+* Decrease default refresh thread count for metastore cache. ({issue}`6156`)\n+* Reduce load on metastore when metastore caching is enabled with background refresh\n+  by removing background refresh for partition metadata and statistics. ({issue}`6101`)\n+* Verify that data is in the correct bucket file when reading bucketed tables.\n+  This is enabled by default, as incorrect bucketing can cause incorrect query results,\n+  but can be disabled using the `hive.validate-bucketing` configuration property\n+  or the `validate_bucketing` session property. ({issue}`6012`)\n+* Allow configuring S3 endpoint in security mapping. ({issue}`3869`)\n+* Allow fallback to legacy Hive view translation logic via `hive.legacy-hive-view-translation` config property or \n+  `legacy_hive_view_translation` session property. ({issue}`6195 `)\n+    \n+## Iceberg Connector Changes\n+\n+* Optimize predicate pushdown by using filters on non-partition columns during split generation and table scan. ({issue}`4932`)\n+* Remove extra file system stat call when opening files. ({issue}`6174`)\n+* Add support for Google Cloud Storage and Azure Storage. ({issue}`6186`)\n+\n+## Kafka Connector Changes\n+\n+* Allow writing `timestamp with time zone` values into columns using `milliseconds-since-epoch` or `seconds-since-epoch` JSON encoders. ({issue}`6074`)\n+\n+## Other Connector Changes\n+\n+* Fix table metadata caching for PostgreSQL, MySQL, SQL Server, Redshift, MemSQL and Phoenix connectors:\n+  * Previously cache did not store information if table exists and it was always verifying that in the remote database. ({issue}`6081`)\n+  * Consider session properties when caching metadata, so there are different cache entries for different session properties. ({issue}`6167`)\n+  * Fix cache invalidation to remove entries for all users not only for the user that is running the query. ({issue}`6167`)\n+\n+## SPI Changes\n+\n+* Change `SystemAccessControl#filterColumns` and `ConnectorAccessControl#filterColumns` method to accept a set of \n+  column names and return a set of visible column names. ({issue}`6084`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NjU1MDQ4", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549655048", "createdAt": "2020-12-10T22:27:07Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5ODI1OTI5", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549825929", "createdAt": "2020-12-11T06:13:45Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNjoxMzo0NVrOIDqnog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNjoxMzo0NVrOIDqnog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDcxNDkxNA==", "bodyText": "Can we move SPI changes after General Changes ? Sometime it might be skipped.", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540714914", "createdAt": "2020-12-11T06:13:45Z", "author": {"login": "Praveen2112"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain joins. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization. ({issue}`5355`)\n+* Fix invalid operator stats being reported in Stage Performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+* Fix cache entries invalidation, so entries are removed for all users, not only the one that was running the query. ({issue}`6167`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in the same directory. ({issue}`6158`)\n+* Add deserializer class name to split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+* Add support for S3 streaming uploads. Data is uploaded to S3 as it is written, rather\n+  than staged to a local temporary file. This feature is disabled by default, and can be enabled\n+  using the `hive.s3.streaming.enabled` configuration property. ({issue}`3712`, {issue}`6201`)\n+* Decrease default refresh thread count for metastore cache. ({issue}`6156`)\n+* Reduce load on metastore when metastore caching is enabled with background refresh\n+  by removing background refresh for partition metadata and statistics. ({issue}`6101`)\n+* Verify that data is in the correct bucket file when reading bucketed tables.\n+  This is enabled by default, as incorrect bucketing can cause incorrect query results,\n+  but can be disabled using the `hive.validate-bucketing` configuration property\n+  or the `validate_bucketing` session property. ({issue}`6012`)\n+* Allow configuring S3 endpoint in security mapping. ({issue}`3869`)\n+* Allow fallback to legacy Hive view translation logic via `hive.legacy-hive-view-translation` config property or \n+  `legacy_hive_view_translation` session property. ({issue}`6195 `)\n+    \n+## Iceberg Connector Changes\n+\n+* Optimize predicate pushdown by using filters on non-partition columns during split generation and table scan. ({issue}`4932`)\n+* Remove extra file system stat call when opening files. ({issue}`6174`)\n+* Add support for Google Cloud Storage and Azure Storage. ({issue}`6186`)\n+\n+## Kafka Connector Changes\n+\n+* Allow writing `timestamp with time zone` values into columns using `milliseconds-since-epoch` or `seconds-since-epoch` JSON encoders. ({issue}`6074`)\n+\n+## Other Connector Changes\n+\n+* Fix table metadata caching for PostgreSQL, MySQL, SQL Server, Redshift, MemSQL and Phoenix connectors:\n+  * Previously cache did not store information if table exists, and it was always verifying that in the remote database. ({issue}`6081`)\n+  * Consider session properties when caching metadata, so there are different cache entries for different session properties. ({issue}`6167`)\n+  * Fix cache invalidation to remove entries for all users not only for the user that is running the query. ({issue}`6167`)\n+\n+## SPI Changes", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5ODg5NjIy", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549889622", "createdAt": "2020-12-11T08:28:41Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwODoyODo0MlrOIDuIVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwODoyODo0MlrOIDuIVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc3MjQzOA==", "bodyText": "What is the user visible effect? Performance improvement? If so we should just state that IMO. Maybe we should drop that point at all if it is negligible.", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540772438", "createdAt": "2020-12-11T08:28:42Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain joins. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization. ({issue}`5355`)\n+* Fix invalid operator stats being reported in Stage Performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+* Fix cache entries invalidation, so entries are removed for all users, not only the one that was running the query. ({issue}`6167`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in the same directory. ({issue}`6158`)\n+* Add deserializer class name to split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+* Add support for S3 streaming uploads. Data is uploaded to S3 as it is written, rather\n+  than staged to a local temporary file. This feature is disabled by default, and can be enabled\n+  using the `hive.s3.streaming.enabled` configuration property. ({issue}`3712`, {issue}`6201`)\n+* Decrease default refresh thread count for metastore cache. ({issue}`6156`)\n+* Reduce load on metastore when metastore caching is enabled with background refresh\n+  by removing background refresh for partition metadata and statistics. ({issue}`6101`)\n+* Verify that data is in the correct bucket file when reading bucketed tables.\n+  This is enabled by default, as incorrect bucketing can cause incorrect query results,\n+  but can be disabled using the `hive.validate-bucketing` configuration property\n+  or the `validate_bucketing` session property. ({issue}`6012`)\n+* Allow configuring S3 endpoint in security mapping. ({issue}`3869`)\n+* Allow fallback to legacy Hive view translation logic via `hive.legacy-hive-view-translation` config property or \n+  `legacy_hive_view_translation` session property. ({issue}`6195 `)\n+    \n+## Iceberg Connector Changes\n+\n+* Optimize predicate pushdown by using filters on non-partition columns during split generation and table scan. ({issue}`4932`)\n+* Remove extra file system stat call when opening files. ({issue}`6174`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5ODkxNTY0", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-549891564", "createdAt": "2020-12-11T08:31:39Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwODozMTo0MFrOIDuPHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwODozMTo0MFrOIDuPHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc3NDE3Mw==", "bodyText": "Can we express this more in terms of user visible effects? Is a broader set of expressions pushed down?  Can we classify those somehow here?", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r540774173", "createdAt": "2020-12-11T08:31:40Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain joins. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization. ({issue}`5355`)\n+* Fix invalid operator stats being reported in Stage Performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+* Fix cache entries invalidation, so entries are removed for all users, not only the one that was running the query. ({issue}`6167`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in the same directory. ({issue}`6158`)\n+* Add deserializer class name to split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+* Add support for S3 streaming uploads. Data is uploaded to S3 as it is written, rather\n+  than staged to a local temporary file. This feature is disabled by default, and can be enabled\n+  using the `hive.s3.streaming.enabled` configuration property. ({issue}`3712`, {issue}`6201`)\n+* Decrease default refresh thread count for metastore cache. ({issue}`6156`)\n+* Reduce load on metastore when metastore caching is enabled with background refresh\n+  by removing background refresh for partition metadata and statistics. ({issue}`6101`)\n+* Verify that data is in the correct bucket file when reading bucketed tables.\n+  This is enabled by default, as incorrect bucketing can cause incorrect query results,\n+  but can be disabled using the `hive.validate-bucketing` configuration property\n+  or the `validate_bucketing` session property. ({issue}`6012`)\n+* Allow configuring S3 endpoint in security mapping. ({issue}`3869`)\n+* Allow fallback to legacy Hive view translation logic via `hive.legacy-hive-view-translation` config property or \n+  `legacy_hive_view_translation` session property. ({issue}`6195 `)\n+    \n+## Iceberg Connector Changes\n+\n+* Optimize predicate pushdown by using filters on non-partition columns during split generation and table scan. ({issue}`4932`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwODU3MTAy", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-550857102", "createdAt": "2020-12-12T19:46:37Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxOTo0NjozOFrOIEqVSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQyMDozNzoyM1rOIErZWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTc1ODc5NA==", "bodyText": "Maybe just Fix invalid operator stats in Stage Performance view. ({issue}6114)", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r541758794", "createdAt": "2020-12-12T19:46:38Z", "author": {"login": "dain"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain joins. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization. ({issue}`5355`)\n+* Fix invalid operator stats being reported in Stage Performance view. ({issue}`6114`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTc2MzUzNQ==", "bodyText": "Can we say what the new rendering is?", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r541763535", "createdAt": "2020-12-12T19:54:22Z", "author": {"login": "dain"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain joins. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization. ({issue}`5355`)\n+* Fix invalid operator stats being reported in Stage Performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+* Fix cache entries invalidation, so entries are removed for all users, not only the one that was running the query. ({issue}`6167`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTc2Mzk1Mw==", "bodyText": "How about Improve performance of symlink tables", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r541763953", "createdAt": "2020-12-12T19:54:55Z", "author": {"login": "dain"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,62 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain filtered aggregations and outer joins. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats reporting in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with second fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYzODE2Mw=="}, "originalCommit": null, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTc2NTMxMg==", "bodyText": "Add deserializer class name to split information exposed to the event listener.?", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r541765312", "createdAt": "2020-12-12T19:56:55Z", "author": {"login": "dain"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain joins. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization. ({issue}`5355`)\n+* Fix invalid operator stats being reported in Stage Performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+* Fix cache entries invalidation, so entries are removed for all users, not only the one that was running the query. ({issue}`6167`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in the same directory. ({issue}`6158`)\n+* Add deserializer class name to split information, which is exposed through the event listener. ({issue}`6006`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTc2NjExOQ==", "bodyText": "I say we just merg this into the line above about \"scheduler latency\", and just say \"symlink table are better now\"", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r541766119", "createdAt": "2020-12-12T19:58:06Z", "author": {"login": "dain"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain joins. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization. ({issue}`5355`)\n+* Fix invalid operator stats being reported in Stage Performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+* Fix cache entries invalidation, so entries are removed for all users, not only the one that was running the query. ({issue}`6167`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in the same directory. ({issue}`6158`)\n+* Add deserializer class name to split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTc3MjAwMg==", "bodyText": "maybe?\nReduce load on metastore when background cache refresh is enabled by not refreshing partition metadata and statistics in the background.", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r541772002", "createdAt": "2020-12-12T20:09:22Z", "author": {"login": "dain"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain join. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization in Web UI. ({issue}`5355`)\n+* Fix invalid operator stats being reported in stage performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+* Fix cache entries invalidation, so entries are removed for all users not only the one that was running the query. ({issue}`6167`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` Geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in the same directory. ({issue}`6158`)\n+* Add deserializer class name to hive connector split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+* Add support for S3 streaming uploads. Data is uploaded to S3 as it is written, rather\n+  than staging to a local temporary file. This feature is disabled by default and can be enabled\n+  using the `hive.s3.streaming.enabled` configuration property. ({issue}`3712`, {issue}`6201`)\n+* Decrease default refresh thread count for metastore cache. ({issue}`6156`)\n+* Reduce load on metastore when metastore caching is enabled with background refresh", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUzNTcyMA=="}, "originalCommit": null, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTc3Mjk3Nw==", "bodyText": "It is a performance improvement, but I believe it is not much. Maybe drop this entirelly?", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r541772977", "createdAt": "2020-12-12T20:15:46Z", "author": {"login": "dain"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain joins. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization. ({issue}`5355`)\n+* Fix invalid operator stats being reported in Stage Performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+* Fix cache entries invalidation, so entries are removed for all users, not only the one that was running the query. ({issue}`6167`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in the same directory. ({issue}`6158`)\n+* Add deserializer class name to split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+* Add support for S3 streaming uploads. Data is uploaded to S3 as it is written, rather\n+  than staged to a local temporary file. This feature is disabled by default, and can be enabled\n+  using the `hive.s3.streaming.enabled` configuration property. ({issue}`3712`, {issue}`6201`)\n+* Decrease default refresh thread count for metastore cache. ({issue}`6156`)\n+* Reduce load on metastore when metastore caching is enabled with background refresh\n+  by removing background refresh for partition metadata and statistics. ({issue}`6101`)\n+* Verify that data is in the correct bucket file when reading bucketed tables.\n+  This is enabled by default, as incorrect bucketing can cause incorrect query results,\n+  but can be disabled using the `hive.validate-bucketing` configuration property\n+  or the `validate_bucketing` session property. ({issue}`6012`)\n+* Allow configuring S3 endpoint in security mapping. ({issue}`3869`)\n+* Allow fallback to legacy Hive view translation logic via `hive.legacy-hive-view-translation` config property or \n+  `legacy_hive_view_translation` session property. ({issue}`6195 `)\n+    \n+## Iceberg Connector Changes\n+\n+* Optimize predicate pushdown by using filters on non-partition columns during split generation and table scan. ({issue}`4932`)\n+* Remove extra file system stat call when opening files. ({issue}`6174`)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc3MjQzOA=="}, "originalCommit": null, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTc3MzE0Nw==", "bodyText": "Session properties are now considered when caching metadata", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r541773147", "createdAt": "2020-12-12T20:16:52Z", "author": {"login": "dain"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain joins. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization. ({issue}`5355`)\n+* Fix invalid operator stats being reported in Stage Performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Consider session properties when caching metadata. ({issue}`6167`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+* Fix cache entries invalidation, so entries are removed for all users, not only the one that was running the query. ({issue}`6167`)\n+\n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Reduce scheduling latency for queries where scanned files that are referenced by symlinks\n+  are located in the same directory. ({issue}`6158`)\n+* Add deserializer class name to split information, which is exposed through the event listener. ({issue}`6006`)\n+* Improve parallelism for queries where scanned files are referenced by symlinks. ({issue}`6213`)\n+* Add support for S3 streaming uploads. Data is uploaded to S3 as it is written, rather\n+  than staged to a local temporary file. This feature is disabled by default, and can be enabled\n+  using the `hive.s3.streaming.enabled` configuration property. ({issue}`3712`, {issue}`6201`)\n+* Decrease default refresh thread count for metastore cache. ({issue}`6156`)\n+* Reduce load on metastore when metastore caching is enabled with background refresh\n+  by removing background refresh for partition metadata and statistics. ({issue}`6101`)\n+* Verify that data is in the correct bucket file when reading bucketed tables.\n+  This is enabled by default, as incorrect bucketing can cause incorrect query results,\n+  but can be disabled using the `hive.validate-bucketing` configuration property\n+  or the `validate_bucketing` session property. ({issue}`6012`)\n+* Allow configuring S3 endpoint in security mapping. ({issue}`3869`)\n+* Allow fallback to legacy Hive view translation logic via `hive.legacy-hive-view-translation` config property or \n+  `legacy_hive_view_translation` session property. ({issue}`6195 `)\n+    \n+## Iceberg Connector Changes\n+\n+* Optimize predicate pushdown by using filters on non-partition columns during split generation and table scan. ({issue}`4932`)\n+* Remove extra file system stat call when opening files. ({issue}`6174`)\n+* Add support for Google Cloud Storage and Azure Storage. ({issue}`6186`)\n+\n+## Kafka Connector Changes\n+\n+* Allow writing `timestamp with time zone` values into columns using `milliseconds-since-epoch` or `seconds-since-epoch` JSON encoders. ({issue}`6074`)\n+\n+## Other Connector Changes\n+\n+* Fix table metadata caching for PostgreSQL, MySQL, SQL Server, Redshift, MemSQL and Phoenix connectors:\n+  * Previously cache did not store information if table exists, and it was always verifying that in the remote database. ({issue}`6081`)\n+  * Consider session properties when caching metadata, so there are different cache entries for different session properties. ({issue}`6167`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTc3NjIxNg==", "bodyText": "Add:\n* Improve performance of top-n queries. ({issue}`6072`)", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r541776216", "createdAt": "2020-12-12T20:37:23Z", "author": {"login": "dain"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain joins. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNDM3MjUx", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-551437251", "createdAt": "2020-12-14T14:45:33Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDo0NTozNFrOIFT3Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDo0NTozNFrOIFT3Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQzOTI2Ng==", "bodyText": "I am not sure if this is too detailed entry. Maybe we should just remove it?", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r542439266", "createdAt": "2020-12-14T14:45:34Z", "author": {"login": "kokosing"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,86 @@\n+# Release 348 (XX Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Reduce memory pressure and improve performance of queries that contain joins. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix duplicate call to event listener on query completion, if query failed early during preparation. ({issue}`6103`)\n+* Support arbitrary query in `SHOW STATS`. ({issue}`3109`)\n+* Output of `SHOW STATS` is changed ({issue}`3109`): ", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNzA4MzEw", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-551708310", "createdAt": "2020-12-14T17:46:00Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzo0NjowMFrOIFcg_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzo0NjowMFrOIFcg_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU4MDk4OA==", "bodyText": "This description is long and still does not pass all the information needed to do the actual call (what value of java.sql.Types should be used).\nI think we should either make it shorter; like:\nExtend `PreparedStatement.setObject(int, Object, int)` to allow setting `time` and `timestamp` values with precision higher than nanoseconds. \nThis can be done via `String` object representing valid SQL literal.\n\nOr extend the alongside... part.\ncc: @findepi", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r542580988", "createdAt": "2020-12-14T17:46:00Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,89 @@\n+# Release 348 (14 Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Support `SHOW STATS` for arbitrary queries. ({issue}`3109`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Improve performance of `ORDER BY ... LIMIT` queries. ({issue}`6072`)\n+* Reduce memory pressure and improve performance of queries involving joins. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix incorrect query results when using `timestamp with time zone` constants with precision higher than 3 \n+  describing same point in time but in different zones. ({issue}`6318`)\n+* Fix duplicate query completion events if query fails early. ({issue}`6103`)\n+* Fix query failure when views are accessed and current session does not\n+  specify default schema and catalog. ({issue}`6294`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization. ({issue}`5355`)\n+* Fix invalid operator stats in Stage Performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Accept `java.time.LocalDate` in `PreparedStatement.setObject(int, Object)`. ({issue}`6301`)\n+* Extend `PreparedStatement.setObject(int, Object, int)` to allow setting `time` and `timestamp` values with precision higher than nanoseconds. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNzI0MTE3", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-551724117", "createdAt": "2020-12-14T17:54:36Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzo1NDozNlrOIFc4HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzo1NDozNlrOIFc4HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU4NjkwOA==", "bodyText": "User visible effect?", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r542586908", "createdAt": "2020-12-14T17:54:36Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,89 @@\n+# Release 348 (14 Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Support `SHOW STATS` for arbitrary queries. ({issue}`3109`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Improve performance of `ORDER BY ... LIMIT` queries. ({issue}`6072`)\n+* Reduce memory pressure and improve performance of queries involving joins. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix incorrect query results when using `timestamp with time zone` constants with precision higher than 3 \n+  describing same point in time but in different zones. ({issue}`6318`)\n+* Fix duplicate query completion events if query fails early. ({issue}`6103`)\n+* Fix query failure when views are accessed and current session does not\n+  specify default schema and catalog. ({issue}`6294`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization. ({issue}`5355`)\n+* Fix invalid operator stats in Stage Performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Accept `java.time.LocalDate` in `PreparedStatement.setObject(int, Object)`. ({issue}`6301`)\n+* Extend `PreparedStatement.setObject(int, Object, int)` to allow setting `time` and `timestamp` values with precision higher than nanoseconds. \n+  To set `time` or `timestamp` value a `String` should be provided with correct SQL literal representation of the value, alongside with `java.sql.Types`\n+  type constant. ({issue}`6300`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Report precision of the `time(p)`, `time(p) with time zone`,  `timestamp(p)` and `timestamp(p) with time zone` in the `DECIMAL_DIGITS` column\n+  in the result set returned from `DatabaseMetaData#getColumns`. ({issue}`6307`)\n+* Fix the value of the `DATA_TYPE` column for `time(p)` and `time(p) with time zone` in the result set returned from `DatabaseMetaData#getColumns`.  ({issue}`6307`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix `ResultSetMetaData.getColumnType` for `time with time zone`. Previously the type was miscategorized as `java.sql.Types.TIME`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+  \n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Allow configuring S3 endpoint in security mapping. ({issue}`3869`)\n+* Add support for S3 streaming uploads. Data is uploaded to S3 as it is written, rather\n+  than staged to a local temporary file. This feature is disabled by default, and can be enabled\n+  using the `hive.s3.streaming.enabled` configuration property. ({issue}`3712`, {issue}`6201`)\n+* Decrease default refresh thread count for metastore cache. ({issue}`6156`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNzI2MjUz", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-551726253", "createdAt": "2020-12-14T17:55:47Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzo1NTo0OFrOIFc7fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzo1NTo0OFrOIFc7fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU4Nzc3NQ==", "bodyText": "It seems to me we should merge this point with one above and just use Reduce load on metastore when background cache refresh is enabled as description.", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r542587775", "createdAt": "2020-12-14T17:55:48Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,89 @@\n+# Release 348 (14 Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Support `SHOW STATS` for arbitrary queries. ({issue}`3109`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Improve performance of `ORDER BY ... LIMIT` queries. ({issue}`6072`)\n+* Reduce memory pressure and improve performance of queries involving joins. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix incorrect query results when using `timestamp with time zone` constants with precision higher than 3 \n+  describing same point in time but in different zones. ({issue}`6318`)\n+* Fix duplicate query completion events if query fails early. ({issue}`6103`)\n+* Fix query failure when views are accessed and current session does not\n+  specify default schema and catalog. ({issue}`6294`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization. ({issue}`5355`)\n+* Fix invalid operator stats in Stage Performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Accept `java.time.LocalDate` in `PreparedStatement.setObject(int, Object)`. ({issue}`6301`)\n+* Extend `PreparedStatement.setObject(int, Object, int)` to allow setting `time` and `timestamp` values with precision higher than nanoseconds. \n+  To set `time` or `timestamp` value a `String` should be provided with correct SQL literal representation of the value, alongside with `java.sql.Types`\n+  type constant. ({issue}`6300`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Report precision of the `time(p)`, `time(p) with time zone`,  `timestamp(p)` and `timestamp(p) with time zone` in the `DECIMAL_DIGITS` column\n+  in the result set returned from `DatabaseMetaData#getColumns`. ({issue}`6307`)\n+* Fix the value of the `DATA_TYPE` column for `time(p)` and `time(p) with time zone` in the result set returned from `DatabaseMetaData#getColumns`.  ({issue}`6307`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix `ResultSetMetaData.getColumnType` for `time with time zone`. Previously the type was miscategorized as `java.sql.Types.TIME`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+  \n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Allow configuring S3 endpoint in security mapping. ({issue}`3869`)\n+* Add support for S3 streaming uploads. Data is uploaded to S3 as it is written, rather\n+  than staged to a local temporary file. This feature is disabled by default, and can be enabled\n+  using the `hive.s3.streaming.enabled` configuration property. ({issue}`3712`, {issue}`6201`)\n+* Decrease default refresh thread count for metastore cache. ({issue}`6156`)\n+* Reduce load on metastore when background cache refresh is enabled. Partition metadata and statistics are ", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNzMyNDM5", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-551732439", "createdAt": "2020-12-14T17:59:11Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzo1OToxMVrOIFdE5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzo1OToxMVrOIFdE5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU5MDE4MQ==", "bodyText": "It would be nice to capture shortly what is the nature of fix? Was cache not working? Or misbehave? Can it be done using single sentence?", "url": "https://github.com/trinodb/trino/pull/6258#discussion_r542590181", "createdAt": "2020-12-14T17:59:11Z", "author": {"login": "losipiuk"}, "path": "presto-docs/src/main/sphinx/release/release-348.md", "diffHunk": "@@ -0,0 +1,89 @@\n+# Release 348 (14 Dec 2020)\n+\n+## General Changes\n+\n+* Add support for `DISTINCT` clause in aggregations within correlated subqueries. ({issue}`5904`)\n+* Support `SHOW STATS` for arbitrary queries. ({issue}`3109`)\n+* Improve query performance by reducing worker to worker communication overhead. ({issue}`6126`)\n+* Improve performance of `ORDER BY ... LIMIT` queries. ({issue}`6072`)\n+* Reduce memory pressure and improve performance of queries involving joins. ({issue}`6176`)\n+* Fix ``EXPLAIN ANALYZE`` for certain queries that contain broadcast join. ({issue}`6115`)\n+* Fix planning failures for queries that contain outer joins and aggregations using `FILTER (WHERE <condition>)` syntax. ({issue}`6141`)\n+* Fix incorrect results when correlated subquery in join contains aggregation functions such as `array_agg` or `checksum`. ({issue}`6145`)\n+* Fix incorrect query results when using `timestamp with time zone` constants with precision higher than 3 \n+  describing same point in time but in different zones. ({issue}`6318`)\n+* Fix duplicate query completion events if query fails early. ({issue}`6103`)\n+* Fix query failure when views are accessed and current session does not\n+  specify default schema and catalog. ({issue}`6294`)\n+\n+## Web UI\n+\n+* Add support for OAuth2 authorization. ({issue}`5355`)\n+* Fix invalid operator stats in Stage Performance view. ({issue}`6114`)\n+\n+## JDBC Driver Changes\n+\n+* Allow reading `timestamp with time zone` value as `ZonedDateTime` using `ResultSet.getObject(int column, Class<?> type)` method. ({issue}`307`)\n+* Accept `java.time.LocalDate` in `PreparedStatement.setObject(int, Object)`. ({issue}`6301`)\n+* Extend `PreparedStatement.setObject(int, Object, int)` to allow setting `time` and `timestamp` values with precision higher than nanoseconds. \n+  To set `time` or `timestamp` value a `String` should be provided with correct SQL literal representation of the value, alongside with `java.sql.Types`\n+  type constant. ({issue}`6300`)\n+* Change representation of a `row` value. `ResultSet.getObject` now returns an instance of `io.prestosql.jdbc.Row` class, which better represents\n+  the returned value. Previously a `row` value was represented as a `Map` instance, with unnamed fields being named like `field0`, `field1`, etc. \n+  You can access the previous behavior by invoking `getObject(column, Map.class)` on the `ResultSet` object. ({issue}`4588`)\n+* Represent `varbinary` value using hex string representation in `ResultSet.getString`. Previously the return value was useless, similar to `\"B@2de82bf8\"`. ({issue}`6247`)\n+* Report precision of the `time(p)`, `time(p) with time zone`,  `timestamp(p)` and `timestamp(p) with time zone` in the `DECIMAL_DIGITS` column\n+  in the result set returned from `DatabaseMetaData#getColumns`. ({issue}`6307`)\n+* Fix the value of the `DATA_TYPE` column for `time(p)` and `time(p) with time zone` in the result set returned from `DatabaseMetaData#getColumns`.  ({issue}`6307`)\n+* Fix failure when reading a `timestamp` or `timestamp with time zone` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6147`)\n+* Fix failure when reading a `time` value with seconds fraction greater than or equal to 999999999500 picoseconds. ({issue}`6204`)\n+* Fix element representation in arrays returned from `ResultSet.getArray`, making it consistent with `ResultSet.getObject`.\n+  Previously the elements were represented using internal client representation (e.g. `String`). ({issue}`6048`)\n+* Fix `ResultSetMetaData.getColumnType` for `timestamp with time zone`. Previously the type was miscategorized as `java.sql.Types.TIMESTAMP`. ({issue}`6251`)\n+* Fix `ResultSetMetaData.getColumnType` for `time with time zone`. Previously the type was miscategorized as `java.sql.Types.TIME`. ({issue}`6251`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned in the `ResultSet`. ({issue}`6240`)\n+  \n+## CLI Changes\n+\n+* Fix rendering of `row` values with unnamed fields. Previously they were printed using fake field names like `field0`, `field1`, etc. ({issue}`4587`)\n+* Fix query progress reporting. ({issue}`6119`)\n+* Fix failure when an instance of `SphericalGeography` geospatial type is returned to the client. ({issue}`6238`)\n+\n+## Hive Connector Changes\n+\n+* Allow configuring S3 endpoint in security mapping. ({issue}`3869`)\n+* Add support for S3 streaming uploads. Data is uploaded to S3 as it is written, rather\n+  than staged to a local temporary file. This feature is disabled by default, and can be enabled\n+  using the `hive.s3.streaming.enabled` configuration property. ({issue}`3712`, {issue}`6201`)\n+* Decrease default refresh thread count for metastore cache. ({issue}`6156`)\n+* Reduce load on metastore when background cache refresh is enabled. Partition metadata and statistics are \n+  no longer refreshed in the background. ({issue}`6101`)\n+* Verify that data is in the correct bucket file when reading bucketed tables.\n+  This is enabled by default, as incorrect bucketing can cause incorrect query results,\n+  but can be disabled using the `hive.validate-bucketing` configuration property\n+  or the `validate_bucketing` session property. ({issue}`6012`)\n+* Allow fallback to legacy Hive view translation logic via `hive.legacy-hive-view-translation` config property or \n+  `legacy_hive_view_translation` session property. ({issue}`6195 `)\n+* Add deserializer class name to split information exposed to the event listener. ({issue}`6006`)\n+* Improve performance when querying tables that contain symlinks. ({issue}`6158`, {issue}`6213`)\n+    \n+## Iceberg Connector Changes\n+\n+* Improve performance of queries containing filters on non-partition columns. Such filters are now used \n+  for optimizing split generation and table scan.  ({issue}`4932`)\n+* Add support for Google Cloud Storage and Azure Storage. ({issue}`6186`)\n+\n+## Kafka Connector Changes\n+\n+* Allow writing `timestamp with time zone` values into columns using `milliseconds-since-epoch` or \n+  `seconds-since-epoch` JSON encoders. ({issue}`6074`)\n+\n+## Other Connector Changes\n+\n+* Fix table metadata caching for PostgreSQL, MySQL, SQL Server, Redshift, MemSQL and Phoenix connectors. ({issue}`6081`, {issue}`6167`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNzMzNjEy", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-551733612", "createdAt": "2020-12-14T17:59:52Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNzk0NDI0", "url": "https://github.com/trinodb/trino/pull/6258#pullrequestreview-551794424", "createdAt": "2020-12-14T18:51:28Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "458cea57e2fbfbf898081c0b02b506e3c8abe15c", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/458cea57e2fbfbf898081c0b02b506e3c8abe15c", "committedDate": "2020-12-15T01:42:42Z", "message": "Add 348 release notes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "458cea57e2fbfbf898081c0b02b506e3c8abe15c", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/458cea57e2fbfbf898081c0b02b506e3c8abe15c", "committedDate": "2020-12-15T01:42:42Z", "message": "Add 348 release notes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2108, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}