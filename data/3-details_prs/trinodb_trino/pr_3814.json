{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNzEwOTcw", "number": 3814, "title": "Use varchar for Elasticsearch passthrough query result", "bodyText": "Presto's JSON type imposes additional constraints that are not\ndesirable for this use case: JSON values must be equatable and\norderable. This requires parsing and re-organizing the document\nto canonicalize field ordering.\nUsing VARCHAR will also play better with the SQL 2016 JSON features,\nwhich operate on binary or string data directly.", "createdAt": "2020-05-22T04:43:18Z", "url": "https://github.com/trinodb/trino/pull/3814", "merged": true, "mergeCommit": {"oid": "097bffbbce5374a7fd2b3efc6b0faec2e151cd5d"}, "closed": true, "closedAt": "2020-05-22T19:13:26Z", "author": {"login": "martint"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjt_9MgFqTQxNjcyNzQyOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcj3IG8AFqTQxNzEzMjMwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NzI3NDI4", "url": "https://github.com/trinodb/trino/pull/3814#pullrequestreview-416727428", "createdAt": "2020-05-22T08:11:45Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODoxMTo0NVrOGZOhuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODoxMTo0NVrOGZOhuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEwNTU5Mw==", "bodyText": "\"result\" is appearing multiple times. Please either extract contant.\nOr move definition of PASSTHROUGH_QUERY_RESULT_COLUMN_METADATA above PASSTHROUGH_QUERY_COLUMNS.\nAnd the use PASSTHROUGH_QUERY_RESULT_COLUMN_METADATA.getName() in definition of PASSTHROUGH_QUERY_COLUMNS.", "url": "https://github.com/trinodb/trino/pull/3814#discussion_r429105593", "createdAt": "2020-05-22T08:11:45Z", "author": {"login": "losipiuk"}, "path": "presto-elasticsearch/src/main/java/io/prestosql/elasticsearch/ElasticsearchMetadata.java", "diffHunk": "@@ -80,8 +80,17 @@\n     private static final ObjectMapper JSON_PARSER = new ObjectMapperProvider().get();\n \n     private static final String PASSTHROUGH_QUERY_SUFFIX = \"$query\";\n-    private final Map<String, ColumnHandle> queryTableColumns;\n-    private final ColumnMetadata queryResultColumnMetadata;\n+\n+    private static final Map<String, ColumnHandle> PASSTHROUGH_QUERY_COLUMNS = ImmutableMap.of(\n+            \"result\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "342b133262d215b8dbca045c289a1e8d0787fdcd", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/342b133262d215b8dbca045c289a1e8d0787fdcd", "committedDate": "2020-05-22T14:16:21Z", "message": "Use varchar for Elasticsearch passthrough query result\n\nPresto's JSON type imposes additional constraints that are not\ndesirable for this use case: JSON values must be equatable and\norderable. This requires parsing and re-organizing the document\nto canonicalize field ordering.\n\nUsing VARCHAR will also play better with the SQL 2016 JSON features,\nwhich operate on binary or string data directly."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "342b133262d215b8dbca045c289a1e8d0787fdcd", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/342b133262d215b8dbca045c289a1e8d0787fdcd", "committedDate": "2020-05-22T14:16:21Z", "message": "Use varchar for Elasticsearch passthrough query result\n\nPresto's JSON type imposes additional constraints that are not\ndesirable for this use case: JSON values must be equatable and\norderable. This requires parsing and re-organizing the document\nto canonicalize field ordering.\n\nUsing VARCHAR will also play better with the SQL 2016 JSON features,\nwhich operate on binary or string data directly."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MTMyMzA3", "url": "https://github.com/trinodb/trino/pull/3814#pullrequestreview-417132307", "createdAt": "2020-05-22T19:07:04Z", "commit": {"oid": "342b133262d215b8dbca045c289a1e8d0787fdcd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1224, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}