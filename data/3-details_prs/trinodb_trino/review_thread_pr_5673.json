{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4ODg0NDI2", "number": 5673, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQyMTo1Nzo0NFrOExmPVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQyMTo1Nzo0NFrOExmPVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNDQyMTk3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestUnwrapCastInComparison.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQyMTo1Nzo0NFrOHn0n3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQwNjoyNTo1MFrOHn2whg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUxODY4Ng==", "bodyText": "$literal$ -> #5683\nI am concerned about >= here. This looks like a bug in Unwrap, some assumption that is not true for timestamp with time zone. @martint am i right?", "url": "https://github.com/trinodb/trino/pull/5673#discussion_r511518686", "createdAt": "2020-10-24T21:57:44Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestUnwrapCastInComparison.java", "diffHunk": "@@ -868,6 +868,20 @@ public void testTermOrder()\n                                 values(\"A\"))));\n     }\n \n+    @Test\n+    public void testCastToTimestampWithTimeZone()\n+    {\n+        assertPlan(\"SELECT * FROM (VALUES TIMESTAMP '2017-01-02 00:00:00') t(a) WHERE a > TIMESTAMP '1970-01-01 00:00:00 UTC'\",\n+                anyTree(\n+                        filter(\"A >= \\\"@$literal$@52QIVV94KJAG6012H0D1N0119RA6LCSSVNKM8B6JTILU3JAK21IEDGHNG60HPHG7PTGMGG1EK97JIUKSEI3OIA16H860JI4Q7NTACGH10Q5H8GCI8V7V3LAS2BG4DEIRONQPD9KEBO20HDMK79EBJB19D1TONRF80EHHKRHIOF9N2ADTIE7ERBEI4NEPQ100TE8GM1LJ3MA8JC9LUM7SBOBN\\\"(BIGINT '0')\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUxOTg3Ng==", "bodyText": "it's session zone dependent (so for example i get > if i add:\n Session.builder(getQueryRunner().getDefaultSession())\n                        .setTimeZoneKey(TimeZoneKey.getTimeZoneKey(\"Europe/Warsaw\"))\n                        .build(),\n\n)\nthe default zone is Apia. I'd expect to easily find values that pass for Apia with >...", "url": "https://github.com/trinodb/trino/pull/5673#discussion_r511519876", "createdAt": "2020-10-24T22:12:08Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestUnwrapCastInComparison.java", "diffHunk": "@@ -868,6 +868,20 @@ public void testTermOrder()\n                                 values(\"A\"))));\n     }\n \n+    @Test\n+    public void testCastToTimestampWithTimeZone()\n+    {\n+        assertPlan(\"SELECT * FROM (VALUES TIMESTAMP '2017-01-02 00:00:00') t(a) WHERE a > TIMESTAMP '1970-01-01 00:00:00 UTC'\",\n+                anyTree(\n+                        filter(\"A >= \\\"@$literal$@52QIVV94KJAG6012H0D1N0119RA6LCSSVNKM8B6JTILU3JAK21IEDGHNG60HPHG7PTGMGG1EK97JIUKSEI3OIA16H860JI4Q7NTACGH10Q5H8GCI8V7V3LAS2BG4DEIRONQPD9KEBO20HDMK79EBJB19D1TONRF80EHHKRHIOF9N2ADTIE7ERBEI4NEPQ100TE8GM1LJ3MA8JC9LUM7SBOBN\\\"(BIGINT '0')\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUxODY4Ng=="}, "originalCommit": null, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzMjE0Nw==", "bodyText": "Yeah, that's a bug. The problem is that the implicit coercion between timestamp -> timestamp with time zone is ill-defined due to its dependency on the session timezone. In particular:\nCAST(TIMESTAMP '1970-01-01 00:00:00 UTC' AS TIMESTAMP) = TIMESTAMP '1970-01-01 00:00:00'\nbut\nCAST(TIMESTAMP '1970-01-01 00:00:00' AS TIMESTAMP WITH TIME ZONE) <> TIMESTAMP '1970-01-01 00:00:00 UTC'\n(i.e, the conversion doesn't roundtrip)\nWe can add an exception to the Unwrap optimization, but we should also consider removing the implicit coercion between those types.", "url": "https://github.com/trinodb/trino/pull/5673#discussion_r511532147", "createdAt": "2020-10-25T01:11:28Z", "author": {"login": "martint"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestUnwrapCastInComparison.java", "diffHunk": "@@ -868,6 +868,20 @@ public void testTermOrder()\n                                 values(\"A\"))));\n     }\n \n+    @Test\n+    public void testCastToTimestampWithTimeZone()\n+    {\n+        assertPlan(\"SELECT * FROM (VALUES TIMESTAMP '2017-01-02 00:00:00') t(a) WHERE a > TIMESTAMP '1970-01-01 00:00:00 UTC'\",\n+                anyTree(\n+                        filter(\"A >= \\\"@$literal$@52QIVV94KJAG6012H0D1N0119RA6LCSSVNKM8B6JTILU3JAK21IEDGHNG60HPHG7PTGMGG1EK97JIUKSEI3OIA16H860JI4Q7NTACGH10Q5H8GCI8V7V3LAS2BG4DEIRONQPD9KEBO20HDMK79EBJB19D1TONRF80EHHKRHIOF9N2ADTIE7ERBEI4NEPQ100TE8GM1LJ3MA8JC9LUM7SBOBN\\\"(BIGINT '0')\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUxODY4Ng=="}, "originalCommit": null, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTU1MzY3MA==", "bodyText": "#5685", "url": "https://github.com/trinodb/trino/pull/5673#discussion_r511553670", "createdAt": "2020-10-25T06:25:50Z", "author": {"login": "findepi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestUnwrapCastInComparison.java", "diffHunk": "@@ -868,6 +868,20 @@ public void testTermOrder()\n                                 values(\"A\"))));\n     }\n \n+    @Test\n+    public void testCastToTimestampWithTimeZone()\n+    {\n+        assertPlan(\"SELECT * FROM (VALUES TIMESTAMP '2017-01-02 00:00:00') t(a) WHERE a > TIMESTAMP '1970-01-01 00:00:00 UTC'\",\n+                anyTree(\n+                        filter(\"A >= \\\"@$literal$@52QIVV94KJAG6012H0D1N0119RA6LCSSVNKM8B6JTILU3JAK21IEDGHNG60HPHG7PTGMGG1EK97JIUKSEI3OIA16H860JI4Q7NTACGH10Q5H8GCI8V7V3LAS2BG4DEIRONQPD9KEBO20HDMK79EBJB19D1TONRF80EHHKRHIOF9N2ADTIE7ERBEI4NEPQ100TE8GM1LJ3MA8JC9LUM7SBOBN\\\"(BIGINT '0')\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUxODY4Ng=="}, "originalCommit": null, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4511, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}