{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNDUxOTM3", "number": 3971, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODozMDowNlrOEDw_nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTowNTo0OFrOEDx88A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzgzOTAzOnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/sql/planner/optimizations/TestRemoveUnsupportedDynamicFilters.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODozMDowNlrOGg-W5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODo1OTozNlrOGg_jXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyOTI4NQ==", "bodyText": "nit: each argument in newline", "url": "https://github.com/trinodb/trino/pull/3971#discussion_r437229285", "createdAt": "2020-06-09T08:30:06Z", "author": {"login": "sopel39"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/optimizations/TestRemoveUnsupportedDynamicFilters.java", "diffHunk": "@@ -182,6 +182,39 @@ public void testUnmatchedDynamicFilter()\n                                         tableScan(\"lineitem\", ImmutableMap.of(\"LINEITEM_OK\", \"orderkey\"))))));\n     }\n \n+    @Test\n+    public void testRemoveDynamicFilterNotAboveTableScan()\n+    {\n+        PlanNode root = builder.output(\n+                ImmutableList.of(),\n+                ImmutableList.of(),\n+                builder.join(\n+                        INNER,\n+                        builder.filter(\n+                                combineConjuncts(\n+                                        metadata,\n+                                        PlanBuilder.expression(\"LINEITEM_OK > 0\"),\n+                                        createDynamicFilterExpression(metadata, \"DF\", BIGINT, ordersOrderKeySymbol.toSymbolReference())),\n+                                builder.values(lineitemOrderKeySymbol)),\n+                        ordersTableScanNode,\n+                        ImmutableList.of(new JoinNode.EquiJoinClause(lineitemOrderKeySymbol, ordersOrderKeySymbol)),\n+                        ImmutableList.of(),\n+                        ImmutableList.of(),\n+                        Optional.empty(),\n+                        Optional.empty(),\n+                        Optional.empty(),\n+                        ImmutableMap.of(\"DF\", ordersOrderKeySymbol)));\n+        assertPlan(\n+                removeUnsupportedDynamicFilters(root),\n+                output(\n+                        join(\n+                                INNER,\n+                                ImmutableList.of(equiJoinClause(\"LINEITEM_OK\", \"ORDERS_OK\")),\n+                                filter(\"LINEITEM_OK > 0\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIzMDIwMA==", "bodyText": "You should use io.prestosql.sql.planner.assertions.PlanMatchPattern#filter(io.prestosql.sql.tree.Expression, io.prestosql.sql.tree.Expression, io.prestosql.sql.planner.assertions.PlanMatchPattern) instead. This filter method doesn't validate dynamic filters.", "url": "https://github.com/trinodb/trino/pull/3971#discussion_r437230200", "createdAt": "2020-06-09T08:31:31Z", "author": {"login": "sopel39"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/optimizations/TestRemoveUnsupportedDynamicFilters.java", "diffHunk": "@@ -182,6 +182,39 @@ public void testUnmatchedDynamicFilter()\n                                         tableScan(\"lineitem\", ImmutableMap.of(\"LINEITEM_OK\", \"orderkey\"))))));\n     }\n \n+    @Test\n+    public void testRemoveDynamicFilterNotAboveTableScan()\n+    {\n+        PlanNode root = builder.output(\n+                ImmutableList.of(),\n+                ImmutableList.of(),\n+                builder.join(\n+                        INNER,\n+                        builder.filter(\n+                                combineConjuncts(\n+                                        metadata,\n+                                        PlanBuilder.expression(\"LINEITEM_OK > 0\"),\n+                                        createDynamicFilterExpression(metadata, \"DF\", BIGINT, ordersOrderKeySymbol.toSymbolReference())),\n+                                builder.values(lineitemOrderKeySymbol)),\n+                        ordersTableScanNode,\n+                        ImmutableList.of(new JoinNode.EquiJoinClause(lineitemOrderKeySymbol, ordersOrderKeySymbol)),\n+                        ImmutableList.of(),\n+                        ImmutableList.of(),\n+                        Optional.empty(),\n+                        Optional.empty(),\n+                        Optional.empty(),\n+                        ImmutableMap.of(\"DF\", ordersOrderKeySymbol)));\n+        assertPlan(\n+                removeUnsupportedDynamicFilters(root),\n+                output(\n+                        join(\n+                                INNER,\n+                                ImmutableList.of(equiJoinClause(\"LINEITEM_OK\", \"ORDERS_OK\")),\n+                                filter(\"LINEITEM_OK > 0\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyOTI4NQ=="}, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI0ODg2MA==", "bodyText": "Done", "url": "https://github.com/trinodb/trino/pull/3971#discussion_r437248860", "createdAt": "2020-06-09T08:59:36Z", "author": {"login": "raunaqmorarka"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/optimizations/TestRemoveUnsupportedDynamicFilters.java", "diffHunk": "@@ -182,6 +182,39 @@ public void testUnmatchedDynamicFilter()\n                                         tableScan(\"lineitem\", ImmutableMap.of(\"LINEITEM_OK\", \"orderkey\"))))));\n     }\n \n+    @Test\n+    public void testRemoveDynamicFilterNotAboveTableScan()\n+    {\n+        PlanNode root = builder.output(\n+                ImmutableList.of(),\n+                ImmutableList.of(),\n+                builder.join(\n+                        INNER,\n+                        builder.filter(\n+                                combineConjuncts(\n+                                        metadata,\n+                                        PlanBuilder.expression(\"LINEITEM_OK > 0\"),\n+                                        createDynamicFilterExpression(metadata, \"DF\", BIGINT, ordersOrderKeySymbol.toSymbolReference())),\n+                                builder.values(lineitemOrderKeySymbol)),\n+                        ordersTableScanNode,\n+                        ImmutableList.of(new JoinNode.EquiJoinClause(lineitemOrderKeySymbol, ordersOrderKeySymbol)),\n+                        ImmutableList.of(),\n+                        ImmutableList.of(),\n+                        Optional.empty(),\n+                        Optional.empty(),\n+                        Optional.empty(),\n+                        ImmutableMap.of(\"DF\", ordersOrderKeySymbol)));\n+        assertPlan(\n+                removeUnsupportedDynamicFilters(root),\n+                output(\n+                        join(\n+                                INNER,\n+                                ImmutableList.of(equiJoinClause(\"LINEITEM_OK\", \"ORDERS_OK\")),\n+                                filter(\"LINEITEM_OK > 0\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyOTI4NQ=="}, "originalCommit": null, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzk5NTQxOnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/sql/planner/optimizations/TestRemoveUnsupportedDynamicFilters.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTowNTo0MlrOGg_4VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOToyOToyOFrOGhA-ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1NDIyOQ==", "bodyText": "static import expression", "url": "https://github.com/trinodb/trino/pull/3971#discussion_r437254229", "createdAt": "2020-06-09T09:05:42Z", "author": {"login": "sopel39"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/optimizations/TestRemoveUnsupportedDynamicFilters.java", "diffHunk": "@@ -182,6 +182,41 @@ public void testUnmatchedDynamicFilter()\n                                         tableScan(\"lineitem\", ImmutableMap.of(\"LINEITEM_OK\", \"orderkey\"))))));\n     }\n \n+    @Test\n+    public void testRemoveDynamicFilterNotAboveTableScan()\n+    {\n+        PlanNode root = builder.output(\n+                ImmutableList.of(),\n+                ImmutableList.of(),\n+                builder.join(\n+                        INNER,\n+                        builder.filter(\n+                                combineConjuncts(\n+                                        metadata,\n+                                        PlanBuilder.expression(\"LINEITEM_OK > 0\"),\n+                                        createDynamicFilterExpression(metadata, \"DF\", BIGINT, ordersOrderKeySymbol.toSymbolReference())),\n+                                builder.values(lineitemOrderKeySymbol)),\n+                        ordersTableScanNode,\n+                        ImmutableList.of(new JoinNode.EquiJoinClause(lineitemOrderKeySymbol, ordersOrderKeySymbol)),\n+                        ImmutableList.of(),\n+                        ImmutableList.of(),\n+                        Optional.empty(),\n+                        Optional.empty(),\n+                        Optional.empty(),\n+                        ImmutableMap.of(\"DF\", ordersOrderKeySymbol)));\n+        assertPlan(\n+                removeUnsupportedDynamicFilters(root),\n+                output(\n+                        join(\n+                                INNER,\n+                                ImmutableList.of(equiJoinClause(\"LINEITEM_OK\", \"ORDERS_OK\")),\n+                                filter(\n+                                        PlanBuilder.expression(\"LINEITEM_OK > 0\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI3MjI1OQ==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/3971#discussion_r437272259", "createdAt": "2020-06-09T09:29:28Z", "author": {"login": "raunaqmorarka"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/optimizations/TestRemoveUnsupportedDynamicFilters.java", "diffHunk": "@@ -182,6 +182,41 @@ public void testUnmatchedDynamicFilter()\n                                         tableScan(\"lineitem\", ImmutableMap.of(\"LINEITEM_OK\", \"orderkey\"))))));\n     }\n \n+    @Test\n+    public void testRemoveDynamicFilterNotAboveTableScan()\n+    {\n+        PlanNode root = builder.output(\n+                ImmutableList.of(),\n+                ImmutableList.of(),\n+                builder.join(\n+                        INNER,\n+                        builder.filter(\n+                                combineConjuncts(\n+                                        metadata,\n+                                        PlanBuilder.expression(\"LINEITEM_OK > 0\"),\n+                                        createDynamicFilterExpression(metadata, \"DF\", BIGINT, ordersOrderKeySymbol.toSymbolReference())),\n+                                builder.values(lineitemOrderKeySymbol)),\n+                        ordersTableScanNode,\n+                        ImmutableList.of(new JoinNode.EquiJoinClause(lineitemOrderKeySymbol, ordersOrderKeySymbol)),\n+                        ImmutableList.of(),\n+                        ImmutableList.of(),\n+                        Optional.empty(),\n+                        Optional.empty(),\n+                        Optional.empty(),\n+                        ImmutableMap.of(\"DF\", ordersOrderKeySymbol)));\n+        assertPlan(\n+                removeUnsupportedDynamicFilters(root),\n+                output(\n+                        join(\n+                                INNER,\n+                                ImmutableList.of(equiJoinClause(\"LINEITEM_OK\", \"ORDERS_OK\")),\n+                                filter(\n+                                        PlanBuilder.expression(\"LINEITEM_OK > 0\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1NDIyOQ=="}, "originalCommit": null, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzk5NjAwOnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/sql/planner/sanity/TestDynamicFiltersChecker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTowNTo0OFrOGg_4pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOToyOTozN1rOGhA_GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1NDMxMQ==", "bodyText": "static import expression", "url": "https://github.com/trinodb/trino/pull/3971#discussion_r437254311", "createdAt": "2020-06-09T09:05:48Z", "author": {"login": "sopel39"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/sanity/TestDynamicFiltersChecker.java", "diffHunk": "@@ -140,6 +140,31 @@ public void testUnmatchedDynamicFilter()\n         validatePlan(root);\n     }\n \n+    @Test(expectedExceptions = VerifyException.class, expectedExceptionsMessageRegExp = \"Dynamic filters \\\\[Descriptor\\\\{id=DF, input=\\\"ORDERS_OK\\\"\\\\}\\\\] present in filter predicate whose source is not a table scan.\")\n+    public void testDynamicFilterNotAboveTableScan()\n+    {\n+        PlanNode root = builder.output(\n+                ImmutableList.of(),\n+                ImmutableList.of(),\n+                builder.join(\n+                        INNER,\n+                        builder.filter(\n+                                combineConjuncts(\n+                                        metadata,\n+                                        PlanBuilder.expression(\"LINEITEM_OK > 0\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI3MjM0NQ==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/3971#discussion_r437272345", "createdAt": "2020-06-09T09:29:37Z", "author": {"login": "raunaqmorarka"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/sanity/TestDynamicFiltersChecker.java", "diffHunk": "@@ -140,6 +140,31 @@ public void testUnmatchedDynamicFilter()\n         validatePlan(root);\n     }\n \n+    @Test(expectedExceptions = VerifyException.class, expectedExceptionsMessageRegExp = \"Dynamic filters \\\\[Descriptor\\\\{id=DF, input=\\\"ORDERS_OK\\\"\\\\}\\\\] present in filter predicate whose source is not a table scan.\")\n+    public void testDynamicFilterNotAboveTableScan()\n+    {\n+        PlanNode root = builder.output(\n+                ImmutableList.of(),\n+                ImmutableList.of(),\n+                builder.join(\n+                        INNER,\n+                        builder.filter(\n+                                combineConjuncts(\n+                                        metadata,\n+                                        PlanBuilder.expression(\"LINEITEM_OK > 0\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1NDMxMQ=="}, "originalCommit": null, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4277, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}