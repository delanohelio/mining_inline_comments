{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MTA5MjY3", "number": 3896, "title": "Remove legacy optimizers", "bodyText": "", "createdAt": "2020-06-01T17:12:26Z", "url": "https://github.com/trinodb/trino/pull/3896", "merged": true, "mergeCommit": {"oid": "c17e5fb2bfbd0ea7d67d4d0f7f90e1be70ea4a75"}, "closed": true, "closedAt": "2020-06-26T17:39:21Z", "author": {"login": "martint"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnD2rZABqjMzOTQxODQyMzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuwDA4AFqTQzNzU4Nzk0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMTk2MDEz", "url": "https://github.com/trinodb/trino/pull/3896#pullrequestreview-422196013", "createdAt": "2020-06-01T21:29:51Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMToyOTo1MlrOGdaztA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMToyOTo1MlrOGdaztA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUwMTEwOA==", "bodyText": "it does no longer be need to be legal for legacyRules to be empty when the test is true.\nif i just want to have disabling a rule, i should use Rule#isEnabled for that)", "url": "https://github.com/trinodb/trino/pull/3896#discussion_r433501108", "createdAt": "2020-06-01T21:29:52Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/iterative/IterativeOptimizer.java", "diffHunk": "@@ -80,7 +83,7 @@ public IterativeOptimizer(RuleStatsRecorder stats, StatsCalculator statsCalculat\n     public PlanNode optimize(PlanNode plan, Session session, TypeProvider types, SymbolAllocator symbolAllocator, PlanNodeIdAllocator idAllocator, WarningCollector warningCollector)\n     {\n         // only disable new rules if we have legacy rules to fall back to\n-        if (!SystemSessionProperties.isNewOptimizerEnabled(session) && !legacyRules.isEmpty()) {\n+        if (legacyRulesEnabled.test(session) && !legacyRules.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NzQ0MDAw", "url": "https://github.com/trinodb/trino/pull/3896#pullrequestreview-424744000", "createdAt": "2020-06-04T18:59:54Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODo1OTo1NFrOGfT3jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOTowOToxNlrOGfUK-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ4NDU1OA==", "bodyText": "legacyRulesPreferred would better reflect the semantics.", "url": "https://github.com/trinodb/trino/pull/3896#discussion_r435484558", "createdAt": "2020-06-04T18:59:54Z", "author": {"login": "kasiafi"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/iterative/IterativeOptimizer.java", "diffHunk": "@@ -57,17 +58,19 @@\n     private final CostCalculator costCalculator;\n     private final List<PlanOptimizer> legacyRules;\n     private final RuleIndex ruleIndex;\n+    private final Predicate<Session> legacyRulesEnabled;\n \n     public IterativeOptimizer(RuleStatsRecorder stats, StatsCalculator statsCalculator, CostCalculator costCalculator, Set<Rule<?>> rules)\n     {\n-        this(stats, statsCalculator, costCalculator, ImmutableList.of(), rules);\n+        this(stats, statsCalculator, costCalculator, session -> false, ImmutableList.of(), rules);\n     }\n \n-    public IterativeOptimizer(RuleStatsRecorder stats, StatsCalculator statsCalculator, CostCalculator costCalculator, List<PlanOptimizer> legacyRules, Set<Rule<?>> newRules)\n+    public IterativeOptimizer(RuleStatsRecorder stats, StatsCalculator statsCalculator, CostCalculator costCalculator, Predicate<Session> legacyRulesEnabled, List<PlanOptimizer> legacyRules, Set<Rule<?>> newRules)\n     {\n         this.stats = requireNonNull(stats, \"stats is null\");\n         this.statsCalculator = requireNonNull(statsCalculator, \"statsCalculator is null\");\n         this.costCalculator = requireNonNull(costCalculator, \"costCalculator is null\");\n+        this.legacyRulesEnabled = requireNonNull(legacyRulesEnabled, \"legacyRulesEnabled is null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ4OTUyOA==", "bodyText": "Rename this class to TestSetFlatteningRules or so.", "url": "https://github.com/trinodb/trino/pull/3896#discussion_r435489528", "createdAt": "2020-06-04T19:09:16Z", "author": {"login": "kasiafi"}, "path": "presto-main/src/test/java/io/prestosql/sql/planner/optimizations/TestSetFlatteningOptimizer.java", "diffHunk": "@@ -134,8 +138,12 @@ protected void assertPlan(String sql, PlanMatchPattern pattern)\n                         new RuleStatsRecorder(),\n                         getQueryRunner().getStatsCalculator(),\n                         getQueryRunner().getEstimatedExchangesCostCalculator(),\n-                        ImmutableSet.of(new RemoveRedundantIdentityProjections())),\n-                new SetFlatteningOptimizer());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "2d467e11104ee6ff0688771868fc5594729ee484", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/2d467e11104ee6ff0688771868fc5594729ee484", "committedDate": "2020-06-06T00:50:44Z", "message": "Remove config and session property to toggle iterative optimizer\n\nThere are not rules that currently depend on it.  Going forward,\nspecific instance of IterativeOptimizer can be turned on or off\nwith dedicated config options for the specific set of rules being\nmigrated:\n\n    new IterativeOptimizer(\n        ...,\n        session -> <predicate to check whether legacy rules should be enabled>,\n        <legacy rules>,\n        <new rules>)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NzI0ODM5", "url": "https://github.com/trinodb/trino/pull/3896#pullrequestreview-425724839", "createdAt": "2020-06-06T08:36:22Z", "commit": {"oid": "2d467e11104ee6ff0688771868fc5594729ee484"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwODozNjoyMlrOGgCp-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwODozNjoyMlrOGgCp-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI1MTEzMQ==", "bodyText": "adjust error message", "url": "https://github.com/trinodb/trino/pull/3896#discussion_r436251131", "createdAt": "2020-06-06T08:36:22Z", "author": {"login": "kasiafi"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/iterative/IterativeOptimizer.java", "diffHunk": "@@ -57,17 +58,19 @@\n     private final CostCalculator costCalculator;\n     private final List<PlanOptimizer> legacyRules;\n     private final RuleIndex ruleIndex;\n+    private final Predicate<Session> useLegacyRules;\n \n     public IterativeOptimizer(RuleStatsRecorder stats, StatsCalculator statsCalculator, CostCalculator costCalculator, Set<Rule<?>> rules)\n     {\n-        this(stats, statsCalculator, costCalculator, ImmutableList.of(), rules);\n+        this(stats, statsCalculator, costCalculator, session -> false, ImmutableList.of(), rules);\n     }\n \n-    public IterativeOptimizer(RuleStatsRecorder stats, StatsCalculator statsCalculator, CostCalculator costCalculator, List<PlanOptimizer> legacyRules, Set<Rule<?>> newRules)\n+    public IterativeOptimizer(RuleStatsRecorder stats, StatsCalculator statsCalculator, CostCalculator costCalculator, Predicate<Session> useLegacyRules, List<PlanOptimizer> legacyRules, Set<Rule<?>> newRules)\n     {\n         this.stats = requireNonNull(stats, \"stats is null\");\n         this.statsCalculator = requireNonNull(statsCalculator, \"statsCalculator is null\");\n         this.costCalculator = requireNonNull(costCalculator, \"costCalculator is null\");\n+        this.useLegacyRules = requireNonNull(useLegacyRules, \"legacyRulesEnabled is null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d467e11104ee6ff0688771868fc5594729ee484"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7bbc71cb79c6fa8b1f1f1a602cc31d435f84479", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/c7bbc71cb79c6fa8b1f1f1a602cc31d435f84479", "committedDate": "2020-06-09T06:31:27Z", "message": "Remove legacy ImplementIntersectAndExceptAsUnion\n\nThe new rules have been around for a while and shown to work well."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a6bdb24d3677f90defdb560d709bb2e4398fa8d", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/0a6bdb24d3677f90defdb560d709bb2e4398fa8d", "committedDate": "2020-06-09T06:31:27Z", "message": "Remove legacy SetFlatteningOptimizer\n\nThe new rules have been around for a while and show to work well."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dac933f9c00a352833683acbb0729a66e6ec2c9", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/6dac933f9c00a352833683acbb0729a66e6ec2c9", "committedDate": "2020-06-09T06:31:27Z", "message": "Rename TestSetFlatteningOptimizer class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6e4cd68747aaaa4e5f9ddd44b170ce521945eeb", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/a6e4cd68747aaaa4e5f9ddd44b170ce521945eeb", "committedDate": "2020-06-09T06:32:32Z", "message": "Remove config and session property to toggle iterative optimizer\n\nThere are not rules that currently depend on it.  Going forward,\nspecific instance of IterativeOptimizer can be turned on or off\nwith dedicated config options for the specific set of rules being\nmigrated:\n\n    new IterativeOptimizer(\n        ...,\n        session -> <predicate to check whether legacy rules should be enabled>,\n        <legacy rules>,\n        <new rules>)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2d467e11104ee6ff0688771868fc5594729ee484", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/2d467e11104ee6ff0688771868fc5594729ee484", "committedDate": "2020-06-06T00:50:44Z", "message": "Remove config and session property to toggle iterative optimizer\n\nThere are not rules that currently depend on it.  Going forward,\nspecific instance of IterativeOptimizer can be turned on or off\nwith dedicated config options for the specific set of rules being\nmigrated:\n\n    new IterativeOptimizer(\n        ...,\n        session -> <predicate to check whether legacy rules should be enabled>,\n        <legacy rules>,\n        <new rules>)"}, "afterCommit": {"oid": "a6e4cd68747aaaa4e5f9ddd44b170ce521945eeb", "author": {"user": {"login": "martint", "name": "Martin Traverso"}}, "url": "https://github.com/trinodb/trino/commit/a6e4cd68747aaaa4e5f9ddd44b170ce521945eeb", "committedDate": "2020-06-09T06:32:32Z", "message": "Remove config and session property to toggle iterative optimizer\n\nThere are not rules that currently depend on it.  Going forward,\nspecific instance of IterativeOptimizer can be turned on or off\nwith dedicated config options for the specific set of rules being\nmigrated:\n\n    new IterativeOptimizer(\n        ...,\n        session -> <predicate to check whether legacy rules should be enabled>,\n        <legacy rules>,\n        <new rules>)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3NTg3OTQ2", "url": "https://github.com/trinodb/trino/pull/3896#pullrequestreview-437587946", "createdAt": "2020-06-25T15:05:08Z", "commit": {"oid": "a6e4cd68747aaaa4e5f9ddd44b170ce521945eeb"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNTowNTowOFrOGo_Bxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNTowNTowOFrOGo_Bxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYyODg3MQ==", "bodyText": "Is there a way to set this useLegacy session rules and pass the legacy rule ?", "url": "https://github.com/trinodb/trino/pull/3896#discussion_r445628871", "createdAt": "2020-06-25T15:05:08Z", "author": {"login": "Praveen2112"}, "path": "presto-main/src/main/java/io/prestosql/sql/planner/iterative/IterativeOptimizer.java", "diffHunk": "@@ -57,17 +58,19 @@\n     private final CostCalculator costCalculator;\n     private final List<PlanOptimizer> legacyRules;\n     private final RuleIndex ruleIndex;\n+    private final Predicate<Session> useLegacyRules;\n \n     public IterativeOptimizer(RuleStatsRecorder stats, StatsCalculator statsCalculator, CostCalculator costCalculator, Set<Rule<?>> rules)\n     {\n-        this(stats, statsCalculator, costCalculator, ImmutableList.of(), rules);\n+        this(stats, statsCalculator, costCalculator, session -> false, ImmutableList.of(), rules);\n     }\n \n-    public IterativeOptimizer(RuleStatsRecorder stats, StatsCalculator statsCalculator, CostCalculator costCalculator, List<PlanOptimizer> legacyRules, Set<Rule<?>> newRules)\n+    public IterativeOptimizer(RuleStatsRecorder stats, StatsCalculator statsCalculator, CostCalculator costCalculator, Predicate<Session> useLegacyRules, List<PlanOptimizer> legacyRules, Set<Rule<?>> newRules)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6e4cd68747aaaa4e5f9ddd44b170ce521945eeb"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 543, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}