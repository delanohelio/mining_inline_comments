{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NTMwMzg2", "number": 4123, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwOToxMjo0MFrOEKAgDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOToxMzoxMVrOESuaDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTI5NDIzOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/operator/aggregation/TypedSet.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwOToxMjo0MFrOGqzWgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNTozNjo1MlrOG39Usg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUzNDcyMw==", "bodyText": "Int array list is backed by primitive array, but provides nicer interface and support for growing. No need to replace it", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r447534723", "createdAt": "2020-06-30T09:12:40Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/operator/aggregation/TypedSet.java", "diffHunk": "@@ -43,12 +44,11 @@\n     public static final DataSize MAX_FUNCTION_MEMORY = DataSize.of(4, MEGABYTE);\n \n     private static final int INSTANCE_SIZE = ClassLayout.parseClass(TypedSet.class).instanceSize();\n-    private static final int INT_ARRAY_LIST_INSTANCE_SIZE = ClassLayout.parseClass(IntArrayList.class).instanceSize();\n     private static final float FILL_RATIO = 0.75f;\n \n     private final Type elementType;\n     private final Optional<MethodHandle> elementIsDistinctFrom;\n-    private final IntArrayList blockPositionByHash;\n+    private int[] blockPositionByHash;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU3MjQ2NQ==", "bodyText": "Agreed. The only real issue is this code uses get instead of getInt", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r450572465", "createdAt": "2020-07-07T02:09:43Z", "author": {"login": "dain"}, "path": "presto-main/src/main/java/io/prestosql/operator/aggregation/TypedSet.java", "diffHunk": "@@ -43,12 +44,11 @@\n     public static final DataSize MAX_FUNCTION_MEMORY = DataSize.of(4, MEGABYTE);\n \n     private static final int INSTANCE_SIZE = ClassLayout.parseClass(TypedSet.class).instanceSize();\n-    private static final int INT_ARRAY_LIST_INSTANCE_SIZE = ClassLayout.parseClass(IntArrayList.class).instanceSize();\n     private static final float FILL_RATIO = 0.75f;\n \n     private final Type elementType;\n     private final Optional<MethodHandle> elementIsDistinctFrom;\n-    private final IntArrayList blockPositionByHash;\n+    private int[] blockPositionByHash;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUzNDcyMw=="}, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQwODEyOA==", "bodyText": "The reasons I thought this was a good idea\n\nSmall amount of extra memory for wrapper ClassLayout.parseClass(IntArrayList.class).instanceSize().\nWe don't use any of the fancy features from the wrapper class.\nCode is shorter and easier to read.\nExtra bounds checking on each set and get by the wrapper.\nIntArrays.ensureCapacity allocates a new array and then tries to preserve values from current array. In our usage we explicitly reset all the values anyway after blockPositionByHash.size(hashCapacity) calls so the extra work to preserve values is wasted.\nKeyValuePairs class has almost same code and it also avoids using the wrapper.\n\nBut I'm ok to drop the change if the above are not compelling enough reasons to replace the wrapper.", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r454408128", "createdAt": "2020-07-14T14:41:08Z", "author": {"login": "raunaqmorarka"}, "path": "presto-main/src/main/java/io/prestosql/operator/aggregation/TypedSet.java", "diffHunk": "@@ -43,12 +44,11 @@\n     public static final DataSize MAX_FUNCTION_MEMORY = DataSize.of(4, MEGABYTE);\n \n     private static final int INSTANCE_SIZE = ClassLayout.parseClass(TypedSet.class).instanceSize();\n-    private static final int INT_ARRAY_LIST_INSTANCE_SIZE = ClassLayout.parseClass(IntArrayList.class).instanceSize();\n     private static final float FILL_RATIO = 0.75f;\n \n     private final Type elementType;\n     private final Optional<MethodHandle> elementIsDistinctFrom;\n-    private final IntArrayList blockPositionByHash;\n+    private int[] blockPositionByHash;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUzNDcyMw=="}, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg0NjkyMA==", "bodyText": "But I'm ok to drop the change if the above are not compelling enough reasons to replace the wrapper.\n\n@raunaqmorarka Could you change the PR to use getInt instead of get?", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r460846920", "createdAt": "2020-07-27T12:15:10Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/operator/aggregation/TypedSet.java", "diffHunk": "@@ -43,12 +44,11 @@\n     public static final DataSize MAX_FUNCTION_MEMORY = DataSize.of(4, MEGABYTE);\n \n     private static final int INSTANCE_SIZE = ClassLayout.parseClass(TypedSet.class).instanceSize();\n-    private static final int INT_ARRAY_LIST_INSTANCE_SIZE = ClassLayout.parseClass(IntArrayList.class).instanceSize();\n     private static final float FILL_RATIO = 0.75f;\n \n     private final Type elementType;\n     private final Optional<MethodHandle> elementIsDistinctFrom;\n-    private final IntArrayList blockPositionByHash;\n+    private int[] blockPositionByHash;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUzNDcyMw=="}, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMyOTU4Ng==", "bodyText": "Done", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r461329586", "createdAt": "2020-07-28T05:36:52Z", "author": {"login": "raunaqmorarka"}, "path": "presto-main/src/main/java/io/prestosql/operator/aggregation/TypedSet.java", "diffHunk": "@@ -43,12 +44,11 @@\n     public static final DataSize MAX_FUNCTION_MEMORY = DataSize.of(4, MEGABYTE);\n \n     private static final int INSTANCE_SIZE = ClassLayout.parseClass(TypedSet.class).instanceSize();\n-    private static final int INT_ARRAY_LIST_INSTANCE_SIZE = ClassLayout.parseClass(IntArrayList.class).instanceSize();\n     private static final float FILL_RATIO = 0.75f;\n \n     private final Type elementType;\n     private final Optional<MethodHandle> elementIsDistinctFrom;\n-    private final IntArrayList blockPositionByHash;\n+    private int[] blockPositionByHash;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUzNDcyMw=="}, "originalCommit": null, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTMyNjMzOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwOToyMDo0OVrOGqzqwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNToxODoxNlrOG38-dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUzOTkwNg==", "bodyText": "Chart doesn't occupy full declared length. Trailing spaces are not stored.", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r447539906", "createdAt": "2020-06-30T09:20:49Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -45,6 +47,15 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        else if (type instanceof VarcharType) {\n+            // If bound on length of varchar is smaller than defaultSize, use that as expected size\n+            return ((VarcharType) type).getLength()\n+                    .map(length -> Math.min(length, defaultSize))\n+                    .orElse(defaultSize);\n+        }\n+        else if (type instanceof CharType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMyMzg5Mw==", "bodyText": "Currently CharType is not allowed to store trailing spaces https://github.com/prestosql/presto/blob/283f5b3c42002082dcd68b8eab37432b5b90b32f/presto-spi/src/main/java/io/prestosql/spi/type/CharType.java#L144\nThough you're right about not occupying full declared length, will change this.", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r461323893", "createdAt": "2020-07-28T05:18:16Z", "author": {"login": "raunaqmorarka"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -45,6 +47,15 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        else if (type instanceof VarcharType) {\n+            // If bound on length of varchar is smaller than defaultSize, use that as expected size\n+            return ((VarcharType) type).getLength()\n+                    .map(length -> Math.min(length, defaultSize))\n+                    .orElse(defaultSize);\n+        }\n+        else if (type instanceof CharType) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUzOTkwNg=="}, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTMyNzQxOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "isResolved": false, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwOToyMTowNVrOGqzrUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwODo0ODoyOFrOG5Z8vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0MDA0OQ==", "bodyText": "Varchars usually won't occupy full declared length.", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r447540049", "createdAt": "2020-06-30T09:21:05Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -45,6 +47,15 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        else if (type instanceof VarcharType) {\n+            // If bound on length of varchar is smaller than defaultSize, use that as expected size\n+            return ((VarcharType) type).getLength()\n+                    .map(length -> Math.min(length, defaultSize))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU3MzY1OQ==", "bodyText": "varchar length is \"character count\", andvarchar is encoded in UTF-8 which means up to 4 bytes per character.  If this is just an expected size, assuming ascii is reasoanble, but we should note that in a comment here.", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r450573659", "createdAt": "2020-07-07T02:14:16Z", "author": {"login": "dain"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -45,6 +47,15 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        else if (type instanceof VarcharType) {\n+            // If bound on length of varchar is smaller than defaultSize, use that as expected size\n+            return ((VarcharType) type).getLength()\n+                    .map(length -> Math.min(length, defaultSize))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0MDA0OQ=="}, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMyOTQ0Nw==", "bodyText": "Added a comment for UTF-8", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r461329447", "createdAt": "2020-07-28T05:36:29Z", "author": {"login": "raunaqmorarka"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -45,6 +47,15 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        else if (type instanceof VarcharType) {\n+            // If bound on length of varchar is smaller than defaultSize, use that as expected size\n+            return ((VarcharType) type).getLength()\n+                    .map(length -> Math.min(length, defaultSize))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0MDA0OQ=="}, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQzNjE4MA==", "bodyText": "I still don't think that assuming that varchar will occupy entire length is the correct one. It seems very pessimistic. What do you think @dain?", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r461436180", "createdAt": "2020-07-28T09:11:24Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -45,6 +47,15 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        else if (type instanceof VarcharType) {\n+            // If bound on length of varchar is smaller than defaultSize, use that as expected size\n+            return ((VarcharType) type).getLength()\n+                    .map(length -> Math.min(length, defaultSize))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0MDA0OQ=="}, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQzOTMwMA==", "bodyText": "@sopel39 that's why we do min here, right?", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r461439300", "createdAt": "2020-07-28T09:16:17Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -45,6 +47,15 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        else if (type instanceof VarcharType) {\n+            // If bound on length of varchar is smaller than defaultSize, use that as expected size\n+            return ((VarcharType) type).getLength()\n+                    .map(length -> Math.min(length, defaultSize))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0MDA0OQ=="}, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ1MTY2MA==", "bodyText": "I'm not sure what contract of defaultSize is here. Could it be excessively large?", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r461451660", "createdAt": "2020-07-28T09:36:49Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -45,6 +47,15 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        else if (type instanceof VarcharType) {\n+            // If bound on length of varchar is smaller than defaultSize, use that as expected size\n+            return ((VarcharType) type).getLength()\n+                    .map(length -> Math.min(length, defaultSize))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0MDA0OQ=="}, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU3NTkxMw==", "bodyText": "In current usage defaultSize is 16, 32 or 100 depending on where it's getting called from. This change should just reduce the expected size estimate when a smaller bound is known (E.g. varchar(10)). This would help reduce memory usage in cases where a large no. of TypeSet are generated but each set has small no. of entries which are a few characters long.", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r461575913", "createdAt": "2020-07-28T13:24:16Z", "author": {"login": "raunaqmorarka"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -45,6 +47,15 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        else if (type instanceof VarcharType) {\n+            // If bound on length of varchar is smaller than defaultSize, use that as expected size\n+            return ((VarcharType) type).getLength()\n+                    .map(length -> Math.min(length, defaultSize))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0MDA0OQ=="}, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYyOTA4OQ==", "bodyText": "I think we should assume the default size is one byte.  I would update the comment a bit:\nIt can take up to 4 bytes per character due to UTF-8 encoding, but we assume the data is ASCII and only needs one byte.", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r462629089", "createdAt": "2020-07-29T22:35:05Z", "author": {"login": "dain"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -45,6 +47,15 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        else if (type instanceof VarcharType) {\n+            // If bound on length of varchar is smaller than defaultSize, use that as expected size\n+            return ((VarcharType) type).getLength()\n+                    .map(length -> Math.min(length, defaultSize))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0MDA0OQ=="}, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg0NzE2NQ==", "bodyText": "Updated the comments in code", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r462847165", "createdAt": "2020-07-30T08:48:28Z", "author": {"login": "raunaqmorarka"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -45,6 +47,15 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        else if (type instanceof VarcharType) {\n+            // If bound on length of varchar is smaller than defaultSize, use that as expected size\n+            return ((VarcharType) type).getLength()\n+                    .map(length -> Math.min(length, defaultSize))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0MDA0OQ=="}, "originalCommit": null, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDA3MzMxOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjowNzo0MlrOG398Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjowNzo0MlrOG398Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMzOTY1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // We may use up to 4 bytes per character due to UTF-8 encoding, assuming ascii for estimating size\n          \n          \n            \n                    // We may use up to 4 bytes per character due to UTF-8 encoding, assuming ASCII for estimating size", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r461339651", "createdAt": "2020-07-28T06:07:42Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -57,6 +59,16 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        // If bound on length of varchar or char is smaller than defaultSize, use that as expected size\n+        // We may use up to 4 bytes per character due to UTF-8 encoding, assuming ascii for estimating size", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDA3MzUxOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjowNzo0OFrOG398Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjowNzo0OFrOG398Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMzOTY4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    else if (type instanceof VarcharType) {\n          \n          \n            \n                    if (type instanceof VarcharType) {", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r461339683", "createdAt": "2020-07-28T06:07:48Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -57,6 +59,16 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        // If bound on length of varchar or char is smaller than defaultSize, use that as expected size\n+        // We may use up to 4 bytes per character due to UTF-8 encoding, assuming ascii for estimating size\n+        else if (type instanceof VarcharType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDA3Mzc3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjowNzo1N1rOG398Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjowNzo1N1rOG398Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMzOTcyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    else if (type instanceof CharType) {\n          \n          \n            \n                    if (type instanceof CharType) {", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r461339723", "createdAt": "2020-07-28T06:07:57Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/type/TypeUtils.java", "diffHunk": "@@ -57,6 +59,16 @@ public static int expectedValueSize(Type type, int defaultSize)\n         if (type instanceof FixedWidthType) {\n             return ((FixedWidthType) type).getFixedSize();\n         }\n+        // If bound on length of varchar or char is smaller than defaultSize, use that as expected size\n+        // We may use up to 4 bytes per character due to UTF-8 encoding, assuming ascii for estimating size\n+        else if (type instanceof VarcharType) {\n+            return ((VarcharType) type).getLength()\n+                    .map(length -> Math.min(length, defaultSize))\n+                    .orElse(defaultSize);\n+        }\n+        else if (type instanceof CharType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDcwMDg1OnYy", "diffSide": "RIGHT", "path": "presto-spi/src/main/java/io/prestosql/spi/type/VarcharType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOToxMjo1OVrOG4D5tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOToxMjo1OVrOG4D5tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQzNzM2Nw==", "bodyText": "this needs a comment about multibyte UTF-8", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r461437367", "createdAt": "2020-07-28T09:12:59Z", "author": {"login": "sopel39"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/VarcharType.java", "diffHunk": "@@ -136,6 +137,15 @@ public int compareTo(Block leftBlock, int leftPosition, Block rightBlock, int ri\n         return leftBlock.compareTo(leftPosition, 0, leftLength, rightBlock, rightPosition, 0, rightLength);\n     }\n \n+    @Override\n+    public BlockBuilder createBlockBuilder(BlockBuilderStatus blockBuilderStatus, int expectedEntries)\n+    {\n+        return createBlockBuilder(blockBuilderStatus, expectedEntries, getLength()\n+                // If bound on length is smaller than EXPECTED_BYTES_PER_ENTRY, use that as expected size", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDcwMTM2OnYy", "diffSide": "RIGHT", "path": "presto-spi/src/main/java/io/prestosql/spi/type/VarcharType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOToxMzowN1rOG4D6BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOToxMzowN1rOG4D6BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQzNzQ0NQ==", "bodyText": "nit: each arg in newline", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r461437445", "createdAt": "2020-07-28T09:13:07Z", "author": {"login": "sopel39"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/VarcharType.java", "diffHunk": "@@ -136,6 +137,15 @@ public int compareTo(Block leftBlock, int leftPosition, Block rightBlock, int ri\n         return leftBlock.compareTo(leftPosition, 0, leftLength, rightBlock, rightPosition, 0, rightLength);\n     }\n \n+    @Override\n+    public BlockBuilder createBlockBuilder(BlockBuilderStatus blockBuilderStatus, int expectedEntries)\n+    {\n+        return createBlockBuilder(blockBuilderStatus, expectedEntries, getLength()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDcwMTU2OnYy", "diffSide": "RIGHT", "path": "presto-spi/src/main/java/io/prestosql/spi/type/CharType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOToxMzoxMVrOG4D6Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOToxMzoxMVrOG4D6Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQzNzQ3OQ==", "bodyText": "this needs a comment about multibyte UTF-8", "url": "https://github.com/trinodb/trino/pull/4123#discussion_r461437479", "createdAt": "2020-07-28T09:13:11Z", "author": {"login": "sopel39"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/CharType.java", "diffHunk": "@@ -108,6 +109,12 @@ public int compareTo(Block leftBlock, int leftPosition, Block rightBlock, int ri\n         return compareChars(leftSlice, rightSlice);\n     }\n \n+    @Override\n+    public BlockBuilder createBlockBuilder(BlockBuilderStatus blockBuilderStatus, int expectedEntries)\n+    {\n+        return createBlockBuilder(blockBuilderStatus, expectedEntries, Math.min(length, EXPECTED_BYTES_PER_ENTRY));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4145, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}