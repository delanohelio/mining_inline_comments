{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2NzQyNTE2", "number": 5858, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNDo1Mjo0MFrOE2HejQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNDo1NDowMVrOE2HgtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MTgxMDY5OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftMetastoreUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNDo1Mjo0MFrOHuxHkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNDo1Mjo0MFrOHuxHkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwMTI5Nw==", "bodyText": "This comment was vestigial, there is no longer such a thing \"legacy\" and \"non-legacy\" timestamp.", "url": "https://github.com/trinodb/trino/pull/5858#discussion_r518801297", "createdAt": "2020-11-06T14:52:40Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftMetastoreUtil.java", "diffHunk": "@@ -971,10 +971,13 @@ private static OptionalDouble getAverageColumnLength(OptionalLong totalSizeInByt\n         if (type.equals(BOOLEAN)) {\n             return ImmutableSet.of(NUMBER_OF_NON_NULL_VALUES, NUMBER_OF_TRUE_VALUES);\n         }\n-        if (isNumericType(type) || type.equals(DATE) || type.equals(TIMESTAMP_MILLIS)) {\n-            // TODO https://github.com/prestosql/presto/issues/37 support non-legacy TIMESTAMP\n+        if (isNumericType(type) || type.equals(DATE)) {\n             return ImmutableSet.of(MIN_VALUE, MAX_VALUE, NUMBER_OF_DISTINCT_VALUES, NUMBER_OF_NON_NULL_VALUES);\n         }\n+        if (type.equals(TIMESTAMP_MILLIS)) {\n+            // TODO https://github.com/prestosql/presto/issues/37 support non-legacy TIMESTAMP", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MTgxNDEzOnYy", "diffSide": "LEFT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/Statistics.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNDo1MzozMVrOHuxJwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNDo1NzozM1rOHuxT8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwMTg1OA==", "bodyText": "in a sense, this was valid, right? and OK to keep?", "url": "https://github.com/trinodb/trino/pull/5858#discussion_r518801858", "createdAt": "2020-11-06T14:53:31Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/Statistics.java", "diffHunk": "@@ -306,9 +305,6 @@ else if (type.equals(DOUBLE) || type.equals(REAL)) {\n         else if (type.equals(DATE)) {\n             result.setDateStatistics(new DateStatistics(Optional.empty(), Optional.empty()));\n         }\n-        else if (type.equals(TIMESTAMP_MILLIS)) {\n-            result.setIntegerStatistics(new IntegerStatistics(OptionalLong.empty(), OptionalLong.empty()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwNDQ2NQ==", "bodyText": "The issue is that it will not be ever called is we disable MIN_VALUE and MAX_VALUE value statistics type for timestamp columns. See createColumnStatisticsForEmptyPartition above", "url": "https://github.com/trinodb/trino/pull/5858#discussion_r518804465", "createdAt": "2020-11-06T14:57:33Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/Statistics.java", "diffHunk": "@@ -306,9 +305,6 @@ else if (type.equals(DOUBLE) || type.equals(REAL)) {\n         else if (type.equals(DATE)) {\n             result.setDateStatistics(new DateStatistics(Optional.empty(), Optional.empty()));\n         }\n-        else if (type.equals(TIMESTAMP_MILLIS)) {\n-            result.setIntegerStatistics(new IntegerStatistics(OptionalLong.empty(), OptionalLong.empty()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwMTg1OA=="}, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MTgxNjIwOnYy", "diffSide": "LEFT", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/Statistics.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNDo1NDowMVrOHuxLGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNToxMzowNFrOHux7_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwMjIwMw==", "bodyText": "lets create a follow up issue and keep a TODO here, so it's easier to impl later", "url": "https://github.com/trinodb/trino/pull/5858#discussion_r518802203", "createdAt": "2020-11-06T14:54:01Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/Statistics.java", "diffHunk": "@@ -424,9 +420,6 @@ else if (type.equals(DOUBLE) || type.equals(REAL)) {\n         else if (type.equals(DATE)) {\n             result.setDateStatistics(new DateStatistics(getDateValue(session, type, min), getDateValue(session, type, max)));\n         }\n-        else if (type.equals(TIMESTAMP_MILLIS)) {\n-            result.setIntegerStatistics(new IntegerStatistics(getTimestampValue(min), getTimestampValue(max)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgxNDcxNw==", "bodyText": "done", "url": "https://github.com/trinodb/trino/pull/5858#discussion_r518814717", "createdAt": "2020-11-06T15:13:04Z", "author": {"login": "losipiuk"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/Statistics.java", "diffHunk": "@@ -424,9 +420,6 @@ else if (type.equals(DOUBLE) || type.equals(REAL)) {\n         else if (type.equals(DATE)) {\n             result.setDateStatistics(new DateStatistics(getDateValue(session, type, min), getDateValue(session, type, max)));\n         }\n-        else if (type.equals(TIMESTAMP_MILLIS)) {\n-            result.setIntegerStatistics(new IntegerStatistics(getTimestampValue(min), getTimestampValue(max)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwMjIwMw=="}, "originalCommit": null, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4976, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}