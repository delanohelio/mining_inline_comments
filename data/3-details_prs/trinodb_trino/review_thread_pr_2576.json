{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1Nzc2MTIz", "number": 2576, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMDozNzo1NVrODZyOKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMDo0MzowOVrODZyUgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MzYzODE3OnYy", "diffSide": "LEFT", "path": "presto-main/src/main/java/io/prestosql/operator/LookupJoinOperator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMDozNzo1NVrOFgXijg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMjowNDo1OVrOFgZ10A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4NDQzMA==", "bodyText": "It means currentProbePositionProducedRow is no longer explicitly reset when we move to the next position.\nI think currentProbePositionProducedRow should be reset here or advanceProbePosition (equally non-ideal options), but rather not in the if above.\nAlso, i think the new code is not correct -- in case of spill if it affects current row, currentProbePositionProducedRow will remembered from last row being processed when we re-add the page.", "url": "https://github.com/trinodb/trino/pull/2576#discussion_r369484430", "createdAt": "2020-01-22T10:37:55Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/operator/LookupJoinOperator.java", "diffHunk": "@@ -550,13 +550,14 @@ private void processProbe(LookupSource lookupSource)\n                             break;\n                         }\n                     }\n+                    // reset row join state for next row\n+                    currentProbePositionProducedRow = false;\n+                    statisticsCounter.recordProbe(joinSourcePositions);\n+                    joinSourcePositions = 0;\n                 }\n-                currentProbePositionProducedRow = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUyMjEyOA==", "bodyText": "It means currentProbePositionProducedRow is no longer explicitly reset when we move to the next position.\n\nThere is no point of that since only non actual row (non -1) modifies row state (if (probe.getPosition() >= 0) { condition).\nI wanted to make row state reset consistent (after actual is processed), but also to avoid updating stats for -1 row.\n\nin case of spill if it affects current row, currentProbePositionProducedRow will remembered from last row being processed when we re-add the page.\n\nWhen we add new probe, it's position is set to -1. When we restore row, we explicitly restore row state.", "url": "https://github.com/trinodb/trino/pull/2576#discussion_r369522128", "createdAt": "2020-01-22T12:04:59Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/operator/LookupJoinOperator.java", "diffHunk": "@@ -550,13 +550,14 @@ private void processProbe(LookupSource lookupSource)\n                             break;\n                         }\n                     }\n+                    // reset row join state for next row\n+                    currentProbePositionProducedRow = false;\n+                    statisticsCounter.recordProbe(joinSourcePositions);\n+                    joinSourcePositions = 0;\n                 }\n-                currentProbePositionProducedRow = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4NDQzMA=="}, "originalCommit": null, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MzY1NDQxOnYy", "diffSide": "LEFT", "path": "presto-main/src/main/java/io/prestosql/operator/LookupJoinOperator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMDo0MzowOVrOFgXsKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMjoxMTowNFrOFgZ-iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4Njg4OA==", "bodyText": "we should move recordProbe (as you did) & leave the others here.\nWhat we should do, however, is reset joinSourcePositions and currentProbePositionProducedRow in the same place (currently not the case). Maybe let's move them all to advanceProbePosition, after joinPosition = probe.getCurrentJoinPosition(lookupSource); line", "url": "https://github.com/trinodb/trino/pull/2576#discussion_r369486888", "createdAt": "2020-01-22T10:43:09Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/operator/LookupJoinOperator.java", "diffHunk": "@@ -550,13 +550,14 @@ private void processProbe(LookupSource lookupSource)\n                             break;\n                         }\n                     }\n+                    // reset row join state for next row\n+                    currentProbePositionProducedRow = false;\n+                    statisticsCounter.recordProbe(joinSourcePositions);\n+                    joinSourcePositions = 0;\n                 }\n-                currentProbePositionProducedRow = false;\n                 if (!advanceProbePosition(lookupSource)) {\n                     break;\n                 }\n-                statisticsCounter.recordProbe(joinSourcePositions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUyNDM2MA==", "bodyText": "What we should do, however, is reset joinSourcePositions and\n\ngood idea.", "url": "https://github.com/trinodb/trino/pull/2576#discussion_r369524360", "createdAt": "2020-01-22T12:11:04Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/operator/LookupJoinOperator.java", "diffHunk": "@@ -550,13 +550,14 @@ private void processProbe(LookupSource lookupSource)\n                             break;\n                         }\n                     }\n+                    // reset row join state for next row\n+                    currentProbePositionProducedRow = false;\n+                    statisticsCounter.recordProbe(joinSourcePositions);\n+                    joinSourcePositions = 0;\n                 }\n-                currentProbePositionProducedRow = false;\n                 if (!advanceProbePosition(lookupSource)) {\n                     break;\n                 }\n-                statisticsCounter.recordProbe(joinSourcePositions);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4Njg4OA=="}, "originalCommit": null, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1063, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}