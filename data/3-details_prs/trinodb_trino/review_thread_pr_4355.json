{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NzQzMTg0", "number": 4355, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMjozMzo1NFrOELqpKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMjozMzo1NFrOELqpKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNjY4NDU3OnYy", "diffSide": "RIGHT", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMjozMzo1NFrOGtVW6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMjozNToyMlrOGtVZxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE4OTAzMg==", "bodyText": "Can you pass Instant to getTableCompactions and do the conversion to low-level unit internally. It is implementation detail that in SQL query to get transactions we need milliseconds.", "url": "https://github.com/trinodb/trino/pull/4355#discussion_r450189032", "createdAt": "2020-07-06T12:33:54Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "diffHunk": "@@ -245,7 +245,7 @@ private static void compactTableAndWait(CompactionMode compactMode, String table\n     private static void tryCompactingTable(CompactionMode compactMode, String tableName, String partitionString, Duration timeout)\n             throws TimeoutException\n     {\n-        long beforeCompactionStart = Instant.now().getEpochSecond();\n+        long beforeCompactionStart = Instant.now().getEpochSecond() * 1000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE4OTc2NQ==", "bodyText": "Sure, I can", "url": "https://github.com/trinodb/trino/pull/4355#discussion_r450189765", "createdAt": "2020-07-06T12:35:22Z", "author": {"login": "wendigo"}, "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "diffHunk": "@@ -245,7 +245,7 @@ private static void compactTableAndWait(CompactionMode compactMode, String table\n     private static void tryCompactingTable(CompactionMode compactMode, String tableName, String partitionString, Duration timeout)\n             throws TimeoutException\n     {\n-        long beforeCompactionStart = Instant.now().getEpochSecond();\n+        long beforeCompactionStart = Instant.now().getEpochSecond() * 1000;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE4OTAzMg=="}, "originalCommit": null, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3815, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}