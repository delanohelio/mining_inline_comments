{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNTk0NjQ3", "number": 6378, "title": "Decrease the number of access control checks in StatementAnalyzer", "bodyText": "", "createdAt": "2020-12-18T14:54:12Z", "url": "https://github.com/trinodb/trino/pull/6378", "merged": true, "mergeCommit": {"oid": "8d9ad2c37de0ae0b4d10ae37a8379f4549f5fb79"}, "closed": true, "closedAt": "2020-12-18T19:39:37Z", "author": {"login": "skrzypo987"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnZXDGgH2gAyNTQyNTk0NjQ3OjE0OGZiMDI4MWI3NGI0NDM3M2U2Y2UxNTQ3ZDgyNjBkMTgzNzdjNzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnfbGEAFqTU1NTgzNzYxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "148fb0281b74b44373e6ce1547d8260d18377c76", "author": {"user": {"login": "skrzypo987", "name": null}}, "url": "https://github.com/trinodb/trino/commit/148fb0281b74b44373e6ce1547d8260d18377c76", "committedDate": "2020-12-18T14:53:05Z", "message": "Decrease the number of access control checks in StatementAnalyzer\n\nCheck column for visibility after the column mask is checked.\nThis reduces the number of access control checks to the state\nprior to 6a47dfa92cd41069741306973f455e48a48252db while preserving\nthe behavior introduced there."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1NzY2NjMy", "url": "https://github.com/trinodb/trino/pull/6378#pullrequestreview-555766632", "createdAt": "2020-12-18T19:39:28Z", "commit": {"oid": "148fb0281b74b44373e6ce1547d8260d18377c76"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1ODM3NjE0", "url": "https://github.com/trinodb/trino/pull/6378#pullrequestreview-555837614", "createdAt": "2020-12-18T21:56:46Z", "commit": {"oid": "148fb0281b74b44373e6ce1547d8260d18377c76"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMTo1Njo0N1rOIIz5NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMTo1Njo0N1rOIIz5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjEwOTc0OQ==", "bodyText": "field.getName().orElseThrow() can be extracted to a variable", "url": "https://github.com/trinodb/trino/pull/6378#discussion_r546109749", "createdAt": "2020-12-18T21:56:47Z", "author": {"login": "ssheikin"}, "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/StatementAnalyzer.java", "diffHunk": "@@ -1278,19 +1278,16 @@ private void analyzeFiltersAndMasks(Table table, QualifiedObjectName name, Optio\n                     .withRelationType(RelationId.anonymous(), new RelationType(fields))\n                     .build();\n \n-            Set<String> allColumns = fields.stream()\n-                    .flatMap(field -> field.getName().stream())\n-                    .collect(toImmutableSet());\n-\n-            Set<String> visibleColumns = filterColumns(name, allColumns);\n-\n             ImmutableMap.Builder<Field, List<ViewExpression>> columnMasks = ImmutableMap.builder();\n             for (Field field : fields) {\n-                if (field.getName().isPresent() && visibleColumns.contains(field.getName().orElseThrow())) {\n+                if (field.getName().isPresent()) {\n                     List<ViewExpression> masks = accessControl.getColumnMasks(session.toSecurityContext(), name, field.getName().get(), field.getType());\n-                    columnMasks.put(field, masks);\n \n-                    masks.forEach(mask -> analyzeColumnMask(session.getIdentity().getUser(), table, name, field, accessControlScope, mask));\n+                    if (!masks.isEmpty() && checkCanSelectFromColumn(name, field.getName().orElseThrow())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "148fb0281b74b44373e6ce1547d8260d18377c76"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1867, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}