{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwNjc5NTYz", "number": 5496, "title": "Interface out AccessControlMetadataMetastore", "bodyText": "", "createdAt": "2020-10-09T15:51:03Z", "url": "https://github.com/trinodb/trino/pull/5496", "merged": true, "mergeCommit": {"oid": "65255053498405bae2897c50d46bbd30232da967"}, "closed": true, "closedAt": "2021-02-02T13:31:56Z", "author": {"login": "losipiuk"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdRvozLgBqjM4NjU0MTA2NDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd2HOMVgBqjQyNzc4NDU5MjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwMzU5NzIz", "url": "https://github.com/trinodb/trino/pull/5496#pullrequestreview-570359723", "createdAt": "2021-01-18T10:31:47Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQxMDozMTo0N1rOIVjCtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQxMDozNToyM1rOIVjLCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQ2NTE0Mw==", "bodyText": "Maybe we pass SqlStandardAccessControlMetadataMetastore here, instead of a function?\nalthough, i see the value of this too", "url": "https://github.com/trinodb/trino/pull/5496#discussion_r559465143", "createdAt": "2021-01-18T10:31:47Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftMetastoreUtil.java", "diffHunk": "@@ -263,45 +261,29 @@ protected RoleGrant computeNext()\n         });\n     }\n \n-    public static boolean isRoleApplicable(SemiTransactionalHiveMetastore metastore, HivePrincipal principal, String role)\n+    public static boolean isRoleApplicable(HivePrincipal principal, String role, Function<HivePrincipal, Set<RoleGrant>> listRoleGrants)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQ2NTQ0MA==", "bodyText": "here too, maybe SqlStandardAccessControlMetadataMetastore instead of a function", "url": "https://github.com/trinodb/trino/pull/5496#discussion_r559465440", "createdAt": "2021-01-18T10:32:16Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftMetastoreUtil.java", "diffHunk": "@@ -263,45 +261,29 @@ protected RoleGrant computeNext()\n         });\n     }\n \n-    public static boolean isRoleApplicable(SemiTransactionalHiveMetastore metastore, HivePrincipal principal, String role)\n+    public static boolean isRoleApplicable(HivePrincipal principal, String role, Function<HivePrincipal, Set<RoleGrant>> listRoleGrants)\n     {\n         if (principal.getType() == ROLE && principal.getName().equals(role)) {\n             return true;\n         }\n-        return listApplicableRoles(metastore, principal)\n+        return listApplicableRoleNames(principal, listRoleGrants)\n                 .anyMatch(role::equals);\n     }\n \n-    public static Stream<String> listApplicableRoles(SemiTransactionalHiveMetastore metastore, HivePrincipal principal)\n+    private static Stream<String> listApplicableRoleNames(HivePrincipal principal, Function<HivePrincipal, Set<RoleGrant>> listRoleGrants)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQ2NTUxOA==", "bodyText": "here too, maybe SqlStandardAccessControlMetadataMetastore instead of a function", "url": "https://github.com/trinodb/trino/pull/5496#discussion_r559465518", "createdAt": "2021-01-18T10:32:22Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftMetastoreUtil.java", "diffHunk": "@@ -263,45 +261,29 @@ protected RoleGrant computeNext()\n         });\n     }\n \n-    public static boolean isRoleApplicable(SemiTransactionalHiveMetastore metastore, HivePrincipal principal, String role)\n+    public static boolean isRoleApplicable(HivePrincipal principal, String role, Function<HivePrincipal, Set<RoleGrant>> listRoleGrants)\n     {\n         if (principal.getType() == ROLE && principal.getName().equals(role)) {\n             return true;\n         }\n-        return listApplicableRoles(metastore, principal)\n+        return listApplicableRoleNames(principal, listRoleGrants)\n                 .anyMatch(role::equals);\n     }\n \n-    public static Stream<String> listApplicableRoles(SemiTransactionalHiveMetastore metastore, HivePrincipal principal)\n+    private static Stream<String> listApplicableRoleNames(HivePrincipal principal, Function<HivePrincipal, Set<RoleGrant>> listRoleGrants)\n     {\n-        return listApplicableRoles(principal, metastore::listRoleGrants)\n+        return listApplicableRoles(principal, listRoleGrants)\n                 .map(RoleGrant::getRoleName);\n     }\n \n-    public static Stream<HivePrincipal> listEnabledPrincipals(SemiTransactionalHiveMetastore metastore, ConnectorIdentity identity)\n+    public static Stream<HivePrincipal> listEnabledPrincipals(ConnectorIdentity identity, Function<HivePrincipal, Set<RoleGrant>> listRoleGrants)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQ2NjEzMw==", "bodyText": "Are you sure this TODO is actionable? or it is going to stay with us for ever?\nAlso, since you're improving the situation\u00a0here, i don't feel like you need to add a TODO at all", "url": "https://github.com/trinodb/trino/pull/5496#discussion_r559466133", "createdAt": "2021-01-18T10:33:25Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/security/AccessControlMetadataFactory.java", "diffHunk": "@@ -13,9 +13,9 @@\n  */\n package io.prestosql.plugin.hive.security;\n \n-import io.prestosql.plugin.hive.metastore.SemiTransactionalHiveMetastore;\n-\n public interface AccessControlMetadataFactory\n {\n-    AccessControlMetadata create(SemiTransactionalHiveMetastore metastore);\n+    // TODO get rid of SqlStandardAccessControlMetastore. Possibly replace with something generic\n+    // not tied to selected access control implementation. E.g. HiveTransactionHandle.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQ2NzI3NA==", "bodyText": "That might be silly, but did you consider making SemiTransactionalHiveMetastore implement SqlStandardAccessControlMetadataMetastore directly?", "url": "https://github.com/trinodb/trino/pull/5496#discussion_r559467274", "createdAt": "2021-01-18T10:35:23Z", "author": {"login": "findepi"}, "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/security/SemiTransactionalHiveSqlStandardAccessControlMetadataMetastore.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.hive.security;\n+\n+import io.prestosql.plugin.hive.authentication.HiveIdentity;\n+import io.prestosql.plugin.hive.metastore.HivePrincipal;\n+import io.prestosql.plugin.hive.metastore.HivePrivilegeInfo;\n+import io.prestosql.plugin.hive.metastore.SemiTransactionalHiveMetastore;\n+import io.prestosql.spi.security.RoleGrant;\n+\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class SemiTransactionalHiveSqlStandardAccessControlMetadataMetastore\n+        implements SqlStandardAccessControlMetadataMetastore\n+{\n+    private final SemiTransactionalHiveMetastore hiveMetastore;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc3NzY5NTM1", "url": "https://github.com/trinodb/trino/pull/5496#pullrequestreview-577769535", "createdAt": "2021-01-27T21:22:49Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QyMTozODoxNFrOIbcqRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QyMTo0Nzo1NVrOIbc_yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTY1MjAzOQ==", "bodyText": "Maybe call this getEnabledPrincipals or streamEnabledPrincipals?\nIt can also be made private.", "url": "https://github.com/trinodb/trino/pull/5496#discussion_r565652039", "createdAt": "2021-01-27T21:38:14Z", "author": {"login": "jirassimok"}, "path": "plugin/trino-hive/src/main/java/io/trino/plugin/hive/security/SqlStandardAccessControlMetadata.java", "diffHunk": "@@ -218,6 +218,14 @@ public void revokeTablePrivileges(ConnectorSession session, SchemaTableName sche\n         return result.build();\n     }\n \n+    public Stream<HivePrincipal> listEnabledPrincipals(ConnectorIdentity identity)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTY1NzU0Nw==", "bodyText": "IntelliJ says that the implementation of every method in this interface is missing @Override.", "url": "https://github.com/trinodb/trino/pull/5496#discussion_r565657547", "createdAt": "2021-01-27T21:47:55Z", "author": {"login": "jirassimok"}, "path": "plugin/trino-hive/src/main/java/io/trino/plugin/hive/security/SqlStandardAccessControlMetadataMetastore.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.trino.plugin.hive.security;\n+\n+import io.trino.plugin.hive.authentication.HiveIdentity;\n+import io.trino.plugin.hive.metastore.HivePrincipal;\n+import io.trino.plugin.hive.metastore.HivePrivilegeInfo;\n+import io.trino.spi.security.RoleGrant;\n+\n+import java.util.Optional;\n+import java.util.Set;\n+\n+public interface SqlStandardAccessControlMetadataMetastore\n+{\n+    Set<String> listRoles();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwNDk2MTcw", "url": "https://github.com/trinodb/trino/pull/5496#pullrequestreview-580496170", "createdAt": "2021-02-01T15:53:56Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQxNTo1Mzo1N1rOIdn4IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQxNTo1Mzo1N1rOIdn4IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzkzMjk2MA==", "bodyText": "Why io.trino.plugin.hive.metastore.thrift.ThriftMetastoreUtil#listEnabledPrincipals inlined here?\nuninline?", "url": "https://github.com/trinodb/trino/pull/5496#discussion_r567932960", "createdAt": "2021-02-01T15:53:57Z", "author": {"login": "findepi"}, "path": "plugin/trino-hive/src/main/java/io/trino/plugin/hive/security/SqlStandardAccessControlMetadata.java", "diffHunk": "@@ -218,6 +218,14 @@ public void revokeTablePrivileges(ConnectorSession session, SchemaTableName sche\n         return result.build();\n     }\n \n+    private Stream<HivePrincipal> getEnabledPrincipals(ConnectorIdentity identity)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwNTEyNzQx", "url": "https://github.com/trinodb/trino/pull/5496#pullrequestreview-580512741", "createdAt": "2021-02-01T16:09:48Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71d12f09d7cca072a819d41075f3022b89eeb2ea", "author": {"user": {"login": "losipiuk", "name": "\u0141ukasz Osipiuk"}}, "url": "https://github.com/trinodb/trino/commit/71d12f09d7cca072a819d41075f3022b89eeb2ea", "committedDate": "2021-02-02T08:13:23Z", "message": "Interface out SqlStandardAccessControlMetadataMetastore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53832a3a01f78ed144bdfda518118bb251cef1ec", "author": {"user": {"login": "losipiuk", "name": "\u0141ukasz Osipiuk"}}, "url": "https://github.com/trinodb/trino/commit/53832a3a01f78ed144bdfda518118bb251cef1ec", "committedDate": "2021-02-02T08:13:23Z", "message": "Interface out SqlStandardAccessControlMetastore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "538720298abc52966fab59b1ab979b1fb75253fc", "author": {"user": {"login": "losipiuk", "name": "\u0141ukasz Osipiuk"}}, "url": "https://github.com/trinodb/trino/commit/538720298abc52966fab59b1ab979b1fb75253fc", "committedDate": "2021-02-02T08:13:23Z", "message": "Interface out LegacyAccessControlMetastore"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "538720298abc52966fab59b1ab979b1fb75253fc", "author": {"user": {"login": "losipiuk", "name": "\u0141ukasz Osipiuk"}}, "url": "https://github.com/trinodb/trino/commit/538720298abc52966fab59b1ab979b1fb75253fc", "committedDate": "2021-02-02T08:13:23Z", "message": "Interface out LegacyAccessControlMetastore"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3378, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}