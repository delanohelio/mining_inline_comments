{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNTM3OTk0", "number": 4262, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxODoxMjowM1rOELTukg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxODoxMjowM1rOELTukg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjkzMDEwOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/io/prestosql/server/DynamicFilterService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxODoxMjowM1rOGs1-TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwOToyMToyOFrOGtPkdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY3NDgyOA==", "bodyText": "Why?", "url": "https://github.com/trinodb/trino/pull/4262#discussion_r449674828", "createdAt": "2020-07-03T18:12:03Z", "author": {"login": "martint"}, "path": "presto-main/src/main/java/io/prestosql/server/DynamicFilterService.java", "diffHunk": "@@ -106,7 +106,7 @@ public void registerQuery(SqlQueryExecution sqlQueryExecution)\n     @VisibleForTesting\n     synchronized void registerQuery(QueryId queryId, Supplier<List<StageDynamicFilters>> stageDynamicFiltersSupplier, Set<SourceDescriptor> dynamicFilters)\n     {\n-        dynamicFilterSuppliers.putIfAbsent(queryId, stageDynamicFiltersSupplier);\n+        dynamicFilterSuppliers.put(queryId, stageDynamicFiltersSupplier);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd02457b65172873f929e8aca1d65306158826c2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA5NDE5OQ==", "bodyText": "It was inconsistent with other put for queryDynamicFilters.", "url": "https://github.com/trinodb/trino/pull/4262#discussion_r450094199", "createdAt": "2020-07-06T09:21:28Z", "author": {"login": "sopel39"}, "path": "presto-main/src/main/java/io/prestosql/server/DynamicFilterService.java", "diffHunk": "@@ -106,7 +106,7 @@ public void registerQuery(SqlQueryExecution sqlQueryExecution)\n     @VisibleForTesting\n     synchronized void registerQuery(QueryId queryId, Supplier<List<StageDynamicFilters>> stageDynamicFiltersSupplier, Set<SourceDescriptor> dynamicFilters)\n     {\n-        dynamicFilterSuppliers.putIfAbsent(queryId, stageDynamicFiltersSupplier);\n+        dynamicFilterSuppliers.put(queryId, stageDynamicFiltersSupplier);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY3NDgyOA=="}, "originalCommit": {"oid": "dd02457b65172873f929e8aca1d65306158826c2"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3988, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}