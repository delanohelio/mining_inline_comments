{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NjE0NzYw", "number": 2571, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwOTowMjozOVrODZwWiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwOTowMjozOVrODZwWiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MzMzMTk1OnYy", "diffSide": "LEFT", "path": "presto-main/src/main/java/io/prestosql/dispatcher/QueuedStatementResource.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwOTowMjozOVrOFgUpyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOToyMToxMFrOFgoBqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQzNzEzMA==", "bodyText": "Should we blacklist this method (eg using modernizer)?", "url": "https://github.com/trinodb/trino/pull/2571#discussion_r369437130", "createdAt": "2020-01-22T09:02:39Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/dispatcher/QueuedStatementResource.java", "diffHunk": "@@ -67,7 +68,6 @@\n import static com.google.common.util.concurrent.MoreExecutors.directExecutor;\n import static io.airlift.concurrent.MoreFutures.addTimeout;\n import static io.airlift.concurrent.Threads.threadsNamed;\n-import static io.airlift.http.client.HttpUriBuilder.uriBuilderFrom;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bc967bc3270a357206f1abc6d1d537ad05ae6b2"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQzODAzMw==", "bodyText": "Note that apparently there are more places like this.\nAlso, we could have a test for this -- you can ask docker for a specific hostname", "url": "https://github.com/trinodb/trino/pull/2571#discussion_r369438033", "createdAt": "2020-01-22T09:04:49Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/dispatcher/QueuedStatementResource.java", "diffHunk": "@@ -67,7 +68,6 @@\n import static com.google.common.util.concurrent.MoreExecutors.directExecutor;\n import static io.airlift.concurrent.MoreFutures.addTimeout;\n import static io.airlift.concurrent.Threads.threadsNamed;\n-import static io.airlift.http.client.HttpUriBuilder.uriBuilderFrom;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQzNzEzMA=="}, "originalCommit": {"oid": "4bc967bc3270a357206f1abc6d1d537ad05ae6b2"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY5OTE2MA==", "bodyText": "I think we should update it to fail if passed a URL without a host.\nIs there an existing test we could update to use a different host name? We could have one with underscore and dashes.", "url": "https://github.com/trinodb/trino/pull/2571#discussion_r369699160", "createdAt": "2020-01-22T17:28:33Z", "author": {"login": "electrum"}, "path": "presto-main/src/main/java/io/prestosql/dispatcher/QueuedStatementResource.java", "diffHunk": "@@ -67,7 +68,6 @@\n import static com.google.common.util.concurrent.MoreExecutors.directExecutor;\n import static io.airlift.concurrent.MoreFutures.addTimeout;\n import static io.airlift.concurrent.Threads.threadsNamed;\n-import static io.airlift.http.client.HttpUriBuilder.uriBuilderFrom;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQzNzEzMA=="}, "originalCommit": {"oid": "4bc967bc3270a357206f1abc6d1d537ad05ae6b2"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc1NDUzOA==", "bodyText": "You can take TestServer and override Host header.\nif you want the real hostname to have an underscrore, you need docker.\nIn docker (compose) (or PT Launcher), hostname = container name, so existing envs don't have an underscore and cannot be changed to have one. You'd need a new one.", "url": "https://github.com/trinodb/trino/pull/2571#discussion_r369754538", "createdAt": "2020-01-22T19:21:10Z", "author": {"login": "findepi"}, "path": "presto-main/src/main/java/io/prestosql/dispatcher/QueuedStatementResource.java", "diffHunk": "@@ -67,7 +68,6 @@\n import static com.google.common.util.concurrent.MoreExecutors.directExecutor;\n import static io.airlift.concurrent.MoreFutures.addTimeout;\n import static io.airlift.concurrent.Threads.threadsNamed;\n-import static io.airlift.http.client.HttpUriBuilder.uriBuilderFrom;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQzNzEzMA=="}, "originalCommit": {"oid": "4bc967bc3270a357206f1abc6d1d537ad05ae6b2"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1059, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}