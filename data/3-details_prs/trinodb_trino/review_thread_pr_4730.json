{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NTM3OTI1", "number": 4730, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMTowNzowNVrOEWLFsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMToxNDoyNFrOEWLMwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjg1ODExOnYy", "diffSide": "RIGHT", "path": "presto-spi/src/main/java/io/prestosql/spi/type/UnscaledDecimal128Arithmetic.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMTowNzowNVrOG9VzLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMTozMzo1OVrOG9WdGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk3MzQ4Nw==", "bodyText": "the one below uses & SIGN_INT_MASK) != 0;. I'm not sure which one is faster, but we could unify them one way or another", "url": "https://github.com/trinodb/trino/pull/4730#discussion_r466973487", "createdAt": "2020-08-07T11:07:05Z", "author": {"login": "sopel39"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/UnscaledDecimal128Arithmetic.java", "diffHunk": "@@ -728,6 +732,11 @@ public static boolean isStrictlyNegative(long rawLow, long rawHigh)\n         return isNegative(rawLow, rawHigh) && (rawLow != 0 || unpackUnsignedLong(rawHigh) != 0);\n     }\n \n+    private static boolean isNegative(int lastRawHigh)\n+    {\n+        return lastRawHigh >>> 31 == 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk4MTIwNg==", "bodyText": "This is extremely difficult to benchmark and might make a difference so I'd leave for now.", "url": "https://github.com/trinodb/trino/pull/4730#discussion_r466981206", "createdAt": "2020-08-07T11:26:38Z", "author": {"login": "skrzypo987"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/UnscaledDecimal128Arithmetic.java", "diffHunk": "@@ -728,6 +732,11 @@ public static boolean isStrictlyNegative(long rawLow, long rawHigh)\n         return isNegative(rawLow, rawHigh) && (rawLow != 0 || unpackUnsignedLong(rawHigh) != 0);\n     }\n \n+    private static boolean isNegative(int lastRawHigh)\n+    {\n+        return lastRawHigh >>> 31 == 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk3MzQ4Nw=="}, "originalCommit": null, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk4NDIxNw==", "bodyText": "please change it to & SIGN_INT_MASK) != 0 to keep code consistent.", "url": "https://github.com/trinodb/trino/pull/4730#discussion_r466984217", "createdAt": "2020-08-07T11:33:59Z", "author": {"login": "sopel39"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/UnscaledDecimal128Arithmetic.java", "diffHunk": "@@ -728,6 +732,11 @@ public static boolean isStrictlyNegative(long rawLow, long rawHigh)\n         return isNegative(rawLow, rawHigh) && (rawLow != 0 || unpackUnsignedLong(rawHigh) != 0);\n     }\n \n+    private static boolean isNegative(int lastRawHigh)\n+    {\n+        return lastRawHigh >>> 31 == 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk3MzQ4Nw=="}, "originalCommit": null, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjg3NjE4OnYy", "diffSide": "RIGHT", "path": "presto-spi/src/main/java/io/prestosql/spi/type/UnscaledDecimal128Arithmetic.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMToxNDoyNFrOG9V-SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMToyNTozN1rOG9WPqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk3NjMyOA==", "bodyText": "there are more places where it could be optimized, e.g: io.prestosql.spi.type.UnscaledDecimal128Arithmetic#multiplyDestructive", "url": "https://github.com/trinodb/trino/pull/4730#discussion_r466976328", "createdAt": "2020-08-07T11:14:24Z", "author": {"login": "sopel39"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/UnscaledDecimal128Arithmetic.java", "diffHunk": "@@ -511,7 +515,7 @@ public static void multiply(Slice left, Slice right, Slice result)\n             }\n         }\n \n-        pack(result, (int) z0, (int) z1, (int) z2, (int) z3, isNegative(left) != isNegative(right));\n+        pack(result, (int) z0, (int) z1, (int) z2, (int) z3, leftNegative != rightNegative);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk4MDc3Ng==", "bodyText": "This is just the beginning.\nI made a heavily-optimised version already but benchmarks went crazy.\nOne step at a time", "url": "https://github.com/trinodb/trino/pull/4730#discussion_r466980776", "createdAt": "2020-08-07T11:25:37Z", "author": {"login": "skrzypo987"}, "path": "presto-spi/src/main/java/io/prestosql/spi/type/UnscaledDecimal128Arithmetic.java", "diffHunk": "@@ -511,7 +515,7 @@ public static void multiply(Slice left, Slice right, Slice result)\n             }\n         }\n \n-        pack(result, (int) z0, (int) z1, (int) z2, (int) z3, isNegative(left) != isNegative(right));\n+        pack(result, (int) z0, (int) z1, (int) z2, (int) z3, leftNegative != rightNegative);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk3NjMyOA=="}, "originalCommit": null, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3624, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}