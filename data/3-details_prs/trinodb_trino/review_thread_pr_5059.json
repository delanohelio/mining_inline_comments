{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4MTA2Nzgw", "number": 5059, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOToyMTozMFrOEfm_PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMToyMDowMVrOEf8dLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTgwMDkzOnYy", "diffSide": "LEFT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/EnvironmentUp.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOToyMTozMFrOHL_JPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOToyMTozMFrOHL_JPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMzMDk0MQ==", "bodyText": "hmm. I recall we already remove it. Please make separate commit anyway.", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r482330941", "createdAt": "2020-09-02T19:21:30Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/EnvironmentUp.java", "diffHunk": "@@ -82,8 +83,8 @@ public void run()\n         @Option(name = \"--environment\", title = \"environment\", description = \"the name of the environment to start\", required = true)\n         public String environment;\n \n-        @Option(name = \"--startup-timeout\", title = \"environment startup timeout\", description = \"environment startup timeout\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTgyNDA1OnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/DockerContainer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOToyNTozMlrOHL_YdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTo0MToxM1rOHMAqIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMzNDgzNw==", "bodyText": "there can be quite a lot of those. Is there a limit on number of directories bound...\nI guess not very low - we used to bind a lot of stuff before moving to copying.", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r482334837", "createdAt": "2020-09-02T19:25:32Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/DockerContainer.java", "diffHunk": "@@ -81,6 +91,21 @@ public void copyFileToContainer(Transferable transferable, String containerPath)\n         copyFileToContainer(containerPath, () -> super.copyFileToContainer(transferable, containerPath));\n     }\n \n+    public DockerContainer withExposedLogPaths(String... logPaths)\n+    {\n+        this.logPaths.addAll(Arrays.asList(logPaths));\n+        return this;\n+    }\n+\n+    public void exposeLogsInHostPath(Path hostBasePath)\n+    {\n+        for (String containerLogPath : logPaths) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM1NTc0Nw==", "bodyText": "Neither docker java nor docker docs itself mention any limit on the number of binds", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r482355747", "createdAt": "2020-09-02T19:41:13Z", "author": {"login": "wendigo"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/DockerContainer.java", "diffHunk": "@@ -81,6 +91,21 @@ public void copyFileToContainer(Transferable transferable, String containerPath)\n         copyFileToContainer(containerPath, () -> super.copyFileToContainer(transferable, containerPath));\n     }\n \n+    public DockerContainer withExposedLogPaths(String... logPaths)\n+    {\n+        this.logPaths.addAll(Arrays.asList(logPaths));\n+        return this;\n+    }\n+\n+    public void exposeLogsInHostPath(Path hostBasePath)\n+    {\n+        for (String containerLogPath : logPaths) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMzNDgzNw=="}, "originalCommit": null, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNjc3MDA4OnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/EnvironmentUp.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMTo0MTozNlrOHMJjVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNTo1MTowMlrOHMW1wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjUwMTQ2MA==", "bodyText": "Please rebase onto #4908\ntitle should become paramLabel = <dir> and description should start with uppercase", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r482501460", "createdAt": "2020-09-02T21:41:36Z", "author": {"login": "electrum"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/EnvironmentUp.java", "diffHunk": "@@ -82,8 +83,8 @@ public void run()\n         @Option(name = \"--environment\", title = \"environment\", description = \"the name of the environment to start\", required = true)\n         public String environment;\n \n-        @Option(name = \"--startup-timeout\", title = \"environment startup timeout\", description = \"environment startup timeout\")\n-        public Duration startupTimeout = Duration.valueOf(\"10m\");\n+        @Option(name = \"--logs-dir\", title = \"logs dir\", description = \"location of the exported logs directory\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcxOTE2OA==", "bodyText": "Sure. Thx @electrum :)", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r482719168", "createdAt": "2020-09-03T05:51:02Z", "author": {"login": "wendigo"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/EnvironmentUp.java", "diffHunk": "@@ -82,8 +83,8 @@ public void run()\n         @Option(name = \"--environment\", title = \"environment\", description = \"the name of the environment to start\", required = true)\n         public String environment;\n \n-        @Option(name = \"--startup-timeout\", title = \"environment startup timeout\", description = \"environment startup timeout\")\n-        public Duration startupTimeout = Duration.valueOf(\"10m\");\n+        @Option(name = \"--logs-dir\", title = \"logs dir\", description = \"location of the exported logs directory\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjUwMTQ2MA=="}, "originalCommit": null, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODQ0NjQyOnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzozMzoyN1rOHMZzGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNTo1NDowM1rOHMtHAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc2NzY0MA==", "bodyText": "If i eg invoke test run from intellij directly, where will the logs go to?\nthe logs/ folder does not exist, right?\nmaybe it should be null by default, or tempdir?\n(same for env up)", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r482767640", "createdAt": "2020-09-03T07:33:27Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -97,8 +95,11 @@ public void run()\n         @Option(name = \"--environment\", title = \"environment\", description = \"the name of the environment to start\", required = true)\n         public String environment;\n \n+        @Option(name = \"--logs-dir\", title = \"logs dir\", description = \"location of the exported logs directory\")\n+        public String logsDirBase = \"logs/\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc3MjM2MQ==", "bodyText": "to logs/ dir which is emptied on every run.", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r482772361", "createdAt": "2020-09-03T07:41:15Z", "author": {"login": "wendigo"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -97,8 +95,11 @@ public void run()\n         @Option(name = \"--environment\", title = \"environment\", description = \"the name of the environment to start\", required = true)\n         public String environment;\n \n+        @Option(name = \"--logs-dir\", title = \"logs dir\", description = \"location of the exported logs directory\")\n+        public String logsDirBase = \"logs/\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc2NzY0MA=="}, "originalCommit": null, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAzNTMzMw==", "bodyText": "At the very least it should be gitignored, but IMO (currently) not exporting logs by default is more reasonable.", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r483035333", "createdAt": "2020-09-03T14:45:55Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -97,8 +95,11 @@ public void run()\n         @Option(name = \"--environment\", title = \"environment\", description = \"the name of the environment to start\", required = true)\n         public String environment;\n \n+        @Option(name = \"--logs-dir\", title = \"logs dir\", description = \"location of the exported logs directory\")\n+        public String logsDirBase = \"logs/\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc2NzY0MA=="}, "originalCommit": null, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA4NDAzMg==", "bodyText": "Yeah - I think it makes sense that default for --logs-dir should be null. And we handle that in a way that we do not bind any host directories for logs to containers.", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r483084032", "createdAt": "2020-09-03T15:54:03Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -97,8 +95,11 @@ public void run()\n         @Option(name = \"--environment\", title = \"environment\", description = \"the name of the environment to start\", required = true)\n         public String environment;\n \n+        @Option(name = \"--logs-dir\", title = \"logs dir\", description = \"location of the exported logs directory\")\n+        public String logsDirBase = \"logs/\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc2NzY0MA=="}, "originalCommit": null, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODQ0Njg2OnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzozMzozNVrOHMZzYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzozMzozNVrOHMZzYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc2NzcxNA==", "bodyText": "separate commit?", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r482767714", "createdAt": "2020-09-03T07:33:35Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -97,8 +95,11 @@ public void run()\n         @Option(name = \"--environment\", title = \"environment\", description = \"the name of the environment to start\", required = true)\n         public String environment;\n \n+        @Option(name = \"--logs-dir\", title = \"logs dir\", description = \"location of the exported logs directory\")\n+        public String logsDirBase = \"logs/\";\n+\n         @Option(name = \"--reports-dir\", title = \"reports dir\", description = \"location of the reports directory\")\n-        public String reportsDir = \"presto-product-tests/target/\";\n+        public String reportsDir = \"presto-product-tests/target/reports\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODQ1MTAzOnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/DockerContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzozNDo1MlrOHMZ2Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzozNDo1MlrOHMZ2Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc2ODM5NA==", "bodyText": "I'd rather see caller do the cleanup (if needed)\nThis configuration method should ideally be just that -- a configuration method without side effects", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r482768394", "createdAt": "2020-09-03T07:34:52Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/DockerContainer.java", "diffHunk": "@@ -81,6 +91,21 @@ public void copyFileToContainer(Transferable transferable, String containerPath)\n         copyFileToContainer(containerPath, () -> super.copyFileToContainer(transferable, containerPath));\n     }\n \n+    public DockerContainer withExposedLogPaths(String... logPaths)\n+    {\n+        this.logPaths.addAll(Arrays.asList(logPaths));\n+        return this;\n+    }\n+\n+    public void exposeLogsInHostPath(Path hostBasePath)\n+    {\n+        for (String containerLogPath : logPaths) {\n+            Path hostLogPath = Paths.get(hostBasePath.toString(), containerLogPath);\n+            cleanOrCreateHostPath(hostLogPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODQ2MzMyOnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/DockerContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzozNzo0N1rOHMZ9QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzozNzo0N1rOHMZ9QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc3MDI0MA==", "bodyText": "withExposedLogPaths and exposeLogsInHostPath look like configuration methods, but currently need to be called in correct order\nlet's add some verify to ensure they are always callled in that order.\nsimplest way would be\n\nto null out logPaths inside exposeLogsInHostPath\nto check logPaths != null yet in withExposedLogPaths\n\n(i don't see a need to support the methods being called in varying order, so let's not spend time on that)", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r482770240", "createdAt": "2020-09-03T07:37:47Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/DockerContainer.java", "diffHunk": "@@ -81,6 +91,21 @@ public void copyFileToContainer(Transferable transferable, String containerPath)\n         copyFileToContainer(containerPath, () -> super.copyFileToContainer(transferable, containerPath));\n     }\n \n+    public DockerContainer withExposedLogPaths(String... logPaths)\n+    {\n+        this.logPaths.addAll(Arrays.asList(logPaths));\n+        return this;\n+    }\n+\n+    public void exposeLogsInHostPath(Path hostBasePath)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODQ2NTkyOnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/DockerContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzozODoyNVrOHMZ-2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzozODoyNVrOHMZ-2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc3MDY1MA==", "bodyText": "See https://github.com/prestosql/presto/blob/51263348564d2f1853aad0dbae30ab212fc858a9/presto-raptor-legacy/src/test/java/io/prestosql/plugin/raptor/legacy/storage/TestOrcFileRewriter.java#L81", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r482770650", "createdAt": "2020-09-03T07:38:25Z", "author": {"login": "findepi"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/DockerContainer.java", "diffHunk": "@@ -95,4 +120,24 @@ private static void verifyHostPath(String hostPath)\n             throw new IllegalArgumentException(\"Host path does not exist: \" + hostPath);\n         }\n     }\n+\n+    public static void cleanOrCreateHostPath(Path path)\n+    {\n+        try {\n+            if (Files.exists(path)) {\n+                Files.walk(path)\n+                        .sorted(reverseOrder())\n+                        .map(Path::toFile)\n+                        .forEach(File::delete);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODczOTUyOnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/SuiteRun.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwODo0ODozMlrOHMcmIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwODo0ODozMlrOHMcmIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgxMzQ3Mw==", "bodyText": "nit: separate commit?", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r482813473", "createdAt": "2020-09-03T08:48:32Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/SuiteRun.java", "diffHunk": "@@ -173,7 +178,7 @@ private static void printTestRunsSummary(List<TestRunResult> results)\n                     .count();\n \n             log.info(\"Test runs summary (%d passed, %d failed): \", results.size() - failedRuns, failedRuns);\n-            results.forEach(result -> log.info(\" * '%s' %s in %s\", result.getSuiteRun(), result.isSuccessful() ? \"PASSED\" : \"FAILED\", result.getDuration()));\n+            results.forEach(result -> log.info(\" * '%s' %s in %s\", result.getSuiteRun(), result.isSuccessful() ? \"PASSED\" : format(\"FAILED (%s)\", result.getThrowable().orElse(null)), result.getDuration()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODc3MTUyOnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/Environment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwODo1NjoyOVrOHMc5fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwODo1NjoyOVrOHMc5fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgxODQyOQ==", "bodyText": "nit: rename to exposeLogsInHostPath for consistency.", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r482818429", "createdAt": "2020-09-03T08:56:29Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/Environment.java", "diffHunk": "@@ -195,5 +200,15 @@ public Environment build()\n \n             return new Environment(name, containers);\n         }\n+\n+        public Builder exposeLogsInPath(Path basePath)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODgwNDEwOnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/resources/launcher.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwOTowNDo0MlrOHMdN_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwOTowOTo1N1rOHMdbrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgyMzY3Nw==", "bodyText": "where do we need this?", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r482823677", "createdAt": "2020-09-03T09:04:42Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/resources/launcher.properties", "diffHunk": "@@ -0,0 +1 @@\n+project.version=${project.version}", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgyNzE4MQ==", "bodyText": "It's not. Sorry.", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r482827181", "createdAt": "2020-09-03T09:09:57Z", "author": {"login": "wendigo"}, "path": "presto-product-tests-launcher/src/main/resources/launcher.properties", "diffHunk": "@@ -0,0 +1 @@\n+project.version=${project.version}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgyMzY3Nw=="}, "originalCommit": null, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTI4NTQxOnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentOptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMToxMDo1OFrOHMhteQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMToyOTowNFrOHMiS8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg5NzI3Mw==", "bodyText": "What drive what is default value of option here. The value assigned to bindPorts variable?\nIf so can you just declare option ss @Option(names = \"--bind\", description = \"Bind ports on localhost\", negatable = true)", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r482897273", "createdAt": "2020-09-03T11:10:58Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentOptions.java", "diffHunk": "@@ -33,35 +30,12 @@\n     @Option(names = \"--without-presto\", description = \"Do not start presto-master\")\n     public boolean withoutPrestoMaster;\n \n-    @Option(names = \"--bind\", description = \"Bind ports on localhost\")\n-    public boolean bindPorts = toBoolean(firstNonNull(System.getenv(\"PTL_BIND_PORTS\"), \"true\"));\n+    @Option(names = \"--no-bind\", description = \"Bind ports on localhost\", negatable = true)\n+    public boolean bindPorts = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkwNjg2Ng==", "bodyText": "No I can't. It's just the way negatable works (so by default it's --bind, --no-bind will switch to false)", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r482906866", "createdAt": "2020-09-03T11:29:04Z", "author": {"login": "wendigo"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentOptions.java", "diffHunk": "@@ -33,35 +30,12 @@\n     @Option(names = \"--without-presto\", description = \"Do not start presto-master\")\n     public boolean withoutPrestoMaster;\n \n-    @Option(names = \"--bind\", description = \"Bind ports on localhost\")\n-    public boolean bindPorts = toBoolean(firstNonNull(System.getenv(\"PTL_BIND_PORTS\"), \"true\"));\n+    @Option(names = \"--no-bind\", description = \"Bind ports on localhost\", negatable = true)\n+    public boolean bindPorts = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg5NzI3Mw=="}, "originalCommit": null, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTI5NzU2OnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/SuiteRun.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMToxNDoyMVrOHMh0uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMToxNDoyMVrOHMh0uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg5OTEyOQ==", "bodyText": "I am not convinced we need those. And even if we do,  I would put them before failed ones. So it is easy to scroll down to failed list of failed tests on GHA.", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r482899129", "createdAt": "2020-09-03T11:14:21Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/SuiteRun.java", "diffHunk": "@@ -153,28 +154,41 @@ public void run()\n             }\n \n             List<TestRunResult> testRunsResults = results.build();\n-            boolean allSuccessful = testRunsResults.stream()\n-                    .allMatch(TestRunResult::isSuccessful);\n-\n-            if (allSuccessful) {\n-                log.info(\"Suite succeeded in %s:\", nanosSince(suiteStartTime));\n-                printTestRunsSummary(testRunsResults);\n-                exit(0);\n-            }\n-\n-            log.error(\"Suite failed in %s:\", nanosSince(suiteStartTime));\n-            printTestRunsSummary(testRunsResults);\n-            exit(1);\n+            printTestRunsSummary(suiteStartTime, suiteName, testRunsResults);\n         }\n \n-        private static void printTestRunsSummary(List<TestRunResult> results)\n+        private static void printTestRunsSummary(long startTime, String suiteName, List<TestRunResult> results)\n         {\n             long failedRuns = results.stream()\n                     .filter(TestRunResult::hasFailed)\n                     .count();\n \n-            log.info(\"Test runs summary (%d passed, %d failed): \", results.size() - failedRuns, failedRuns);\n-            results.forEach(result -> log.info(\" * '%s' %s in %s\", result.getSuiteRun(), result.isSuccessful() ? \"PASSED\" : \"FAILED\", result.getDuration()));\n+            if (failedRuns > 0) {\n+                log.info(\"Suite %s failed in %s (%d passed, %d failed): \", suiteName, nanosSince(startTime), results.size() - failedRuns, failedRuns);\n+            }\n+            else {\n+                log.info(\"Suite %s succeeded in %s: \", suiteName, nanosSince(startTime));\n+            }\n+\n+            results.stream()\n+                    .filter(TestRunResult::hasFailed)\n+                    .forEach(Execution::printTestRunSummary);\n+\n+            results.stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTMxODIwOnYy", "diffSide": "RIGHT", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/SuiteRun.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMToyMDowMVrOHMiBVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMToyMDowMVrOHMiBVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkwMjM1OA==", "bodyText": "this is not useful.\nCan we make it a single digit number. Only present if there actually is a conflict.\nOr alternatively you can just put an index of SuiteTestRun in the list in the string. Right?", "url": "https://github.com/trinodb/trino/pull/5059#discussion_r482902358", "createdAt": "2020-09-03T11:20:01Z", "author": {"login": "losipiuk"}, "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/SuiteRun.java", "diffHunk": "@@ -216,11 +219,19 @@ public TestRunResult executeSuiteTestRun(String suiteName, SuiteTestRun suiteTes\n             testRunOptions.environment = suiteTestRun.getEnvironmentName();\n             testRunOptions.testArguments = suiteTestRun.getTemptoRunArguments(environmentConfig);\n             testRunOptions.testJar = suiteRunOptions.testJar;\n-            String targetDirectory = format(\"%s-%s-%s\", suiteName, environmentConfig.getConfigName(), suiteTestRun.getEnvironmentName());\n-            testRunOptions.reportsDir = Paths.get(\"presto-product-tests/target/reports/\" + targetDirectory);\n-            testRunOptions.logsDirBase = logsDirBase.resolve(targetDirectory);\n+            String suiteRunId = suiteRunId(suiteName, suiteTestRun, environmentConfig);\n+            testRunOptions.reportsDir = Paths.get(\"presto-product-tests/target/reports/\" + suiteRunId);\n+            testRunOptions.logsDirBase = logsDirBase.resolve(suiteRunId);\n             return testRunOptions;\n         }\n+\n+        private static String suiteRunId(String suiteName, SuiteTestRun suiteTestRun, EnvironmentConfig environmentConfig)\n+        {\n+            List<String> testArguments = suiteTestRun.getTemptoRunArguments(environmentConfig);\n+            // suite-2 contains two singlenode environment test runs - use tempto arguments to uniquely identify each test run\n+            String testArgumentsHash = Hashing.sha256().hashString(Joiner.on(\"-\").skipNulls().join(testArguments), Charsets.UTF_8).toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3124, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}