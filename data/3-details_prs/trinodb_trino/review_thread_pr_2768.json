{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNzQ3MTEy", "number": 2768, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxOToyODo0OFrODeO6eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxOToyODo0OFrODeO6eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDI4MjE4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/io/prestosql/execution/TestSetRoleTask.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxOToyODo0OFrOFnRtSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwNTo0MDo0NlrOFnTaiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcyODkwNw==", "bodyText": "Can you please add tests for other statements?", "url": "https://github.com/trinodb/trino/pull/2768#discussion_r376728907", "createdAt": "2020-02-08T19:28:48Z", "author": {"login": "kokosing"}, "path": "presto-main/src/test/java/io/prestosql/execution/TestSetRoleTask.java", "diffHunk": "@@ -87,14 +89,29 @@ public void testSetRole()\n         assertSetRole(\"SET ROLE bar\", ImmutableMap.of(CATALOG_NAME, new SelectedRole(SelectedRole.Type.ROLE, Optional.of(\"bar\"))));\n     }\n \n+    @Test\n+    public void testSetRoleInvalidCatalog()\n+    {\n+        assertPrestoExceptionThrownBy(() -> executeSetRole(\"invalid\", \"SET ROLE foo\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc1Njg3Mw==", "bodyText": "Done", "url": "https://github.com/trinodb/trino/pull/2768#discussion_r376756873", "createdAt": "2020-02-09T05:40:46Z", "author": {"login": "electrum"}, "path": "presto-main/src/test/java/io/prestosql/execution/TestSetRoleTask.java", "diffHunk": "@@ -87,14 +89,29 @@ public void testSetRole()\n         assertSetRole(\"SET ROLE bar\", ImmutableMap.of(CATALOG_NAME, new SelectedRole(SelectedRole.Type.ROLE, Optional.of(\"bar\"))));\n     }\n \n+    @Test\n+    public void testSetRoleInvalidCatalog()\n+    {\n+        assertPrestoExceptionThrownBy(() -> executeSetRole(\"invalid\", \"SET ROLE foo\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcyODkwNw=="}, "originalCommit": null, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 891, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}