{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1NzUzNDA5", "number": 6057, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNzoxOToyMlrOE8UWqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOTo1Mjo0N1rOE8nxkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjgzNDk4OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/PredicatePushdownController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNzoxOToyMlrOH4Xq0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNzoxOToyMlrOH4Xq0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg3MDA5OA==", "bodyText": "Add to commit message that you actually enable simplification of pushed down domain in this comit", "url": "https://github.com/trinodb/trino/pull/6057#discussion_r528870098", "createdAt": "2020-11-23T17:19:22Z", "author": {"login": "losipiuk"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/PredicatePushdownController.java", "diffHunk": "@@ -14,15 +14,28 @@\n package io.prestosql.plugin.jdbc;\n \n import io.prestosql.spi.connector.ConnectorSession;\n+import io.prestosql.spi.predicate.DiscreteValues;\n import io.prestosql.spi.predicate.Domain;\n+import io.prestosql.spi.predicate.Ranges;\n \n+import static io.prestosql.plugin.jdbc.JdbcMetadataSessionProperties.getDomainCompactionThreshold;\n import static java.util.Objects.requireNonNull;\n \n public interface PredicatePushdownController\n {\n-    PredicatePushdownController FULL_PUSHDOWN = (session, domain) -> new DomainPushdownResult(domain, Domain.all(domain.getType()));\n-    PredicatePushdownController PUSHDOWN_AND_KEEP = (session, domain) -> new DomainPushdownResult(domain, domain);\n-    PredicatePushdownController DISABLE_PUSHDOWN = (session, domain) -> new DomainPushdownResult(Domain.all(domain.getType()), domain);\n+    PredicatePushdownController FULL_PUSHDOWN = (session, domain) -> {\n+        if (getDomainSize(domain) > getDomainCompactionThreshold(session)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjg0NzMwOnYy", "diffSide": "LEFT", "path": "presto-oracle/src/main/java/io/prestosql/plugin/oracle/OracleClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNzoyMjoxOFrOH4XykQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNzozNTowOVrOH4YSMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg3MjA4MQ==", "bodyText": "With this you are changing the default value to 32. Why so?", "url": "https://github.com/trinodb/trino/pull/6057#discussion_r528872081", "createdAt": "2020-11-23T17:22:18Z", "author": {"login": "losipiuk"}, "path": "presto-oracle/src/main/java/io/prestosql/plugin/oracle/OracleClient.java", "diffHunk": "@@ -126,8 +127,6 @@\n \n     private static final int PRECISION_OF_UNSPECIFIED_NUMBER = 127;\n \n-    private static final int ORACLE_MAX_LIST_EXPRESSIONS = 1000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg4MDE3Nw==", "bodyText": "It provides best balance in general use. Large IN lists really cause significant perf regresions.", "url": "https://github.com/trinodb/trino/pull/6057#discussion_r528880177", "createdAt": "2020-11-23T17:35:09Z", "author": {"login": "sopel39"}, "path": "presto-oracle/src/main/java/io/prestosql/plugin/oracle/OracleClient.java", "diffHunk": "@@ -126,8 +127,6 @@\n \n     private static final int PRECISION_OF_UNSPECIFIED_NUMBER = 127;\n \n-    private static final int ORACLE_MAX_LIST_EXPRESSIONS = 1000;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg3MjA4MQ=="}, "originalCommit": null, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDAwMDUyOnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcMetadataConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOTo1MDo0OVrOH42Vbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOTo1MDo0OVrOH42Vbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM3MjUyNg==", "bodyText": "more precisely, to IN list, or sequence of OR'd range conditions", "url": "https://github.com/trinodb/trino/pull/6057#discussion_r529372526", "createdAt": "2020-11-24T09:50:49Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcMetadataConfig.java", "diffHunk": "@@ -17,10 +17,17 @@\n import io.airlift.configuration.ConfigDescription;\n import io.airlift.configuration.LegacyConfig;\n \n+import javax.validation.constraints.Min;\n+\n public class JdbcMetadataConfig\n {\n     private boolean allowDropTable;\n     private boolean aggregationPushdownEnabled = true;\n+    // Pushed domains are transformed into SQL IN lists in JDBC connectors.\n+    // Too large IN lists cause significant performance regression.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDAxNjU4OnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcMetadataSessionProperties.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOTo1Mjo0NVrOH42fvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOTo1Mjo0NVrOH42fvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM3NTE2Nw==", "bodyText": "Quote the offending value", "url": "https://github.com/trinodb/trino/pull/6057#discussion_r529375167", "createdAt": "2020-11-24T09:52:45Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcMetadataSessionProperties.java", "diffHunk": "@@ -64,4 +70,17 @@ public static int getDomainCompactionThreshold(ConnectorSession session)\n     {\n         return session.getProperty(DOMAIN_COMPACTION_THRESHOLD, Integer.class);\n     }\n+\n+    private static void validateDomainCompactionThreshold(int domainCompactionThreshold, Optional<Integer> maxDomainCompactionThreshold)\n+    {\n+        if (domainCompactionThreshold < 1) {\n+            throw new PrestoException(INVALID_SESSION_PROPERTY, \"Domain compaction threshold must be greater than 0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDAxNjgyOnYy", "diffSide": "RIGHT", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcMetadataSessionProperties.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOTo1Mjo0N1rOH42f5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOTo1Mjo0N1rOH42f5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM3NTIwNA==", "bodyText": "Quote the offending value", "url": "https://github.com/trinodb/trino/pull/6057#discussion_r529375204", "createdAt": "2020-11-24T09:52:47Z", "author": {"login": "findepi"}, "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcMetadataSessionProperties.java", "diffHunk": "@@ -64,4 +70,17 @@ public static int getDomainCompactionThreshold(ConnectorSession session)\n     {\n         return session.getProperty(DOMAIN_COMPACTION_THRESHOLD, Integer.class);\n     }\n+\n+    private static void validateDomainCompactionThreshold(int domainCompactionThreshold, Optional<Integer> maxDomainCompactionThreshold)\n+    {\n+        if (domainCompactionThreshold < 1) {\n+            throw new PrestoException(INVALID_SESSION_PROPERTY, \"Domain compaction threshold must be greater than 0\");\n+        }\n+\n+        maxDomainCompactionThreshold.ifPresent(max -> {\n+            if (domainCompactionThreshold > max) {\n+                throw new PrestoException(INVALID_SESSION_PROPERTY, format(\"Domain compaction threshold cannot exceed %s\", max));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4611, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}