{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNTgyNTM3", "number": 295, "title": "BFD-63: Deployment information and troubleshooting documentation", "bodyText": "JIRA Ticket:\nBFD-63\nUser Story or Bug Summary:\nProvide deployment general and troubleshooting information as documentation\nWhat Does This PR Do?\nThis documentation outlines general information regarding how our Jenkins multibranch pipeline is architected, along with some edge cases.  It also provides deployment troubleshooting guidance based on past issues seen, and some theoretical scenarios that have never come to pass (rollbacks) but could be needed in the future.\nWhat Should Reviewers Watch For?\nIf you're reviewing this PR, please check these things, in particular:\n\nAnything else you feel you don't know about our deployment scenario that I could provide here?\n\nWhat Security Implications Does This PR Have?\nSubmitters should complete the following questionnaire:\n\nIf the answer to any of the questions below is Yes, then here's a link to the associated Security Impact Assessment: N/A.\n\nDoes this PR add any new software dependencies? No.\nDoes this PR modify or invalidate any of our security controls? No.\nDoes this PR store or transmit data that was not stored or transmitted before? No.\n\n\nIf the answer to any of the questions below is Yes, then please add @StewGoin as a reviewer, and note that this PR should not be merged unless/until he also approves it.\n\nDo you think this PR requires additional review of its security implications for other reasons? No.\n\n\n\nWhat Needs to Be Merged and Deployed Before this PR?\nN/A\nSubmitter Checklist\nBefore requesting final review, I've gone through and verified that this PR complies with the following requirements:\n\n\n I've refactored and rebased this PR (for help, see: this and this, if needed, so that it is as small as it can reasonably be, in order to:\n\nEnsure that any problems it causes have a small \"blast radius\".\nEnsure that it'll be easier to rollback if that becomes necessary.\nEase the burden on reviewers.\n\n\n\n I've verified that the commits in this PR:\n\n\nReasonably explain the \"what\" and \"why\" of the changes.\n\n\nLeverage JIRA's smart commits to reference the JIRA ticket that they're associated with. For example, aim for commit messages like this (note also the 50/72 formatting used here):\nAdded the whizbang to the doodad.\n\nThe new whizbang should really simplify things for our whoosit users.\nIt was a bit tricky to get it into the doodad, but we decided that the\nflipwhee pattern was the best approach for now. Might want to revisit\nthat in the future if it ends up being too hard to maintain.\n\nSOMEPROJECT-42\n\n\n\n\n\n I've verified that this PR includes all required documentation changes, including README updates and changelog / release notes entries.\n\n\n I've verified that all new and modified code is appropriately commented, such that the what and why of its design would be reasonably clear to engineers, preferably ones unfamiliar with the project.\n\n\n I've verified that all tech debt and/or shortcomings introduced by this PR is detailed in TODO and/or FIXME comments, which include a JIRA ticket ID for any items that require urgent attention.\n\n\n I've requested review from at least two other engineers on this project, at least one of whom is a senior engineer or owns the relevant component(s) here.\n\n\n I've requested review from any relevant engineers on other projects (e.g. BFD, SLS, etc.).\n\n\n I've verified that this PR and its changes comply with all other policies in the DASG Engineering Standards and have specifically called out any/all deviations in this PR.", "createdAt": "2020-06-10T16:53:26Z", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/295", "merged": true, "mergeCommit": {"oid": "8f93056b7c49b553dd340cf542d1fdda8c20e033"}, "closed": true, "closedAt": "2020-06-12T14:32:23Z", "author": {"login": "njdister"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcp8ejNgH2gAyNDMyNTgyNTM3OmIyNDIyMDM3ZjIwZWY1MDI5ZTljZmFiMjZhNjdlMjM1MTE0NGU2ZDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqjZ2kgFqTQyOTc2OTYyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b2422037f20ef5029e9cfab26a67e2351144e6d3", "author": {"user": null}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/b2422037f20ef5029e9cfab26a67e2351144e6d3", "committedDate": "2020-06-10T16:44:39Z", "message": "Add deployment information runbook"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b008ad3be5424f5d9b34cd6b48e08fe8b3a6766", "author": {"user": null}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/8b008ad3be5424f5d9b34cd6b48e08fe8b3a6766", "committedDate": "2020-06-10T16:54:09Z", "message": "Resize section headers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "650195a945ebe33c6eb13b86efc1df3cdecca88b", "author": {"user": null}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/650195a945ebe33c6eb13b86efc1df3cdecca88b", "committedDate": "2020-06-10T16:58:23Z", "message": "Add example tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "846ee9e8ef6ab3fb7892c56d631a0346eb495f62", "author": {"user": null}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/846ee9e8ef6ab3fb7892c56d631a0346eb495f62", "committedDate": "2020-06-10T17:00:12Z", "message": "Change doc name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MDQ1NzI5", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/295#pullrequestreview-429045729", "createdAt": "2020-06-11T15:43:09Z", "commit": {"oid": "846ee9e8ef6ab3fb7892c56d631a0346eb495f62"}, "state": "DISMISSED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTo0MzowOVrOGijZGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTo1Mzo1NlrOGij-3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NDYzMg==", "bodyText": "Good tip, thanks for that!", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/295#discussion_r438884632", "createdAt": "2020-06-11T15:43:09Z", "author": {"login": "jzulim"}, "path": "ops/ccs-ops-misc/DEPLOY-INFO.md", "diffHunk": "@@ -0,0 +1,36 @@\n+Deployment Info\n+---------------\n+\n+### General Info\n+\n+- Single, multibranch Jenkinsfile provides all stage orchestration.\n+  - App build logic located here: `apps/build.groovy`\n+  - Deploy logic located here: `ops/deploy-ccs.groovy`\n+- Platinum AMI is an optional stage controlled by `build_platinum` var.  Recommend building at least once a month.\n+- Only the master branch can deploy to production environments unless `deploy_prod_from_non_master` var is set to true.\n+- Deployment stages use locks to prevent multiple deployments from occuring at once to the same environment.\n+- There is a gate (manual approval stage) between TEST and PROD-SBX deployment, but not between PROD-SBX and PROD deployment.  Recommend locking the PROD environment in order to gate the PROD-SBX deployment for additional testing.\n+- Our merge strategy in Jenkins is to merge the current deploying branch with master, which creates a unique commit ID in Jenkins that is appended to deployed AMIs.  To look up the commit ID of an AMI, you'll need to look up the merge commit in Jenkins and then find the originating commit from the BFD repo.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "846ee9e8ef6ab3fb7892c56d631a0346eb495f62"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NTEwMw==", "bodyText": "Good advice.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/295#discussion_r438885103", "createdAt": "2020-06-11T15:43:47Z", "author": {"login": "jzulim"}, "path": "ops/ccs-ops-misc/DEPLOY-INFO.md", "diffHunk": "@@ -0,0 +1,36 @@\n+Deployment Info\n+---------------\n+\n+### General Info\n+\n+- Single, multibranch Jenkinsfile provides all stage orchestration.\n+  - App build logic located here: `apps/build.groovy`\n+  - Deploy logic located here: `ops/deploy-ccs.groovy`\n+- Platinum AMI is an optional stage controlled by `build_platinum` var.  Recommend building at least once a month.\n+- Only the master branch can deploy to production environments unless `deploy_prod_from_non_master` var is set to true.\n+- Deployment stages use locks to prevent multiple deployments from occuring at once to the same environment.\n+- There is a gate (manual approval stage) between TEST and PROD-SBX deployment, but not between PROD-SBX and PROD deployment.  Recommend locking the PROD environment in order to gate the PROD-SBX deployment for additional testing.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "846ee9e8ef6ab3fb7892c56d631a0346eb495f62"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg5NDMwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            \n          \n          \n            \n            For insight into the cloud-init stage look at /var/log/cloud-init.log and /var/log/cloud-init-output.log\n          \n          \n            \n            For insight into the BFD FHIR application servers look in /usr/local/bfd-server/", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/295#discussion_r438894303", "createdAt": "2020-06-11T15:53:56Z", "author": {"login": "jzulim"}, "path": "ops/ccs-ops-misc/DEPLOY-INFO.md", "diffHunk": "@@ -0,0 +1,36 @@\n+Deployment Info\n+---------------\n+\n+### General Info\n+\n+- Single, multibranch Jenkinsfile provides all stage orchestration.\n+  - App build logic located here: `apps/build.groovy`\n+  - Deploy logic located here: `ops/deploy-ccs.groovy`\n+- Platinum AMI is an optional stage controlled by `build_platinum` var.  Recommend building at least once a month.\n+- Only the master branch can deploy to production environments unless `deploy_prod_from_non_master` var is set to true.\n+- Deployment stages use locks to prevent multiple deployments from occuring at once to the same environment.\n+- There is a gate (manual approval stage) between TEST and PROD-SBX deployment, but not between PROD-SBX and PROD deployment.  Recommend locking the PROD environment in order to gate the PROD-SBX deployment for additional testing.\n+- Our merge strategy in Jenkins is to merge the current deploying branch with master, which creates a unique commit ID in Jenkins that is appended to deployed AMIs.  To look up the commit ID of an AMI, you'll need to look up the merge commit in Jenkins and then find the originating commit from the BFD repo.\n+\n+### Failed Deployment Troubleshooting\n+\n+ELB health checks and smoke testing embedded in the BFD startup script prevent completely broken deployments.  Additionally we use a create-before-destroy apply method in terraform when creating a new deployment autoscaling group.  If a new deployment fails these checks, it will time out the terraform deployment, leaving the original autoscaling group in tact, thus preventing an outage.\n+\n+Non-outage deployment timeout is the #1 issue encountered when deploying BFD, and unfortunately can happen for many reasons:\n+- Startup routines in the gold image defined stage of cloud-init are failing or slow\n+- Startup routines in our user data defined stage of cloud-init are failing or slow\n+  - Can occur in our actual user data bash script\n+  - Can occur in ansible launch playbook\n+- BFD service itself fails or is slow to start\n+- AWS operations called by terraform are slow\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "846ee9e8ef6ab3fb7892c56d631a0346eb495f62"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b76ed38e8891871a3831f60c2d307589d05361c9", "author": {"user": null}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/b76ed38e8891871a3831f60c2d307589d05361c9", "committedDate": "2020-06-11T19:27:13Z", "message": "Update deploy info doc with suggested change\n\nCo-authored-by: John Zulim <john.zulim@adhocteam.us>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MjMwODM3", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/295#pullrequestreview-429230837", "createdAt": "2020-06-11T19:44:58Z", "commit": {"oid": "b76ed38e8891871a3831f60c2d307589d05361c9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NzY5NjIy", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/295#pullrequestreview-429769622", "createdAt": "2020-06-12T14:05:49Z", "commit": {"oid": "b76ed38e8891871a3831f60c2d307589d05361c9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 561, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}