{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MjM4ODk1", "number": 262, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMjo1MDoyMFrOD1gn3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxODowNjo0OVrOD2KGVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NDM1NjEyOnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMjo1MDoyMFrOGK_QBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMjo1MDoyMFrOGK_QBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3NTIzNg==", "bodyText": "All the changes happened in this method and the methods it calls.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/262#discussion_r414175236", "createdAt": "2020-04-23T22:50:20Z", "author": {"login": "RickHawesUSDS"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -329,19 +332,38 @@ private CcwCodebookVariable partDCwVariableFor(String system) {\n    */\n   private List<Beneficiary> fetchBeneficiaries(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f7f5d191017185cec534157346b09465dc7d33a"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NDM1ODE5OnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMjo1MTowNFrOGK_RJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMjo1MTowNFrOGK_RJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3NTUyNA==", "bodyText": "Moving to TypedQuery return type improves the readability of the caller.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/262#discussion_r414175524", "createdAt": "2020-04-23T22:51:04Z", "author": {"login": "RickHawesUSDS"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -353,31 +375,74 @@ private CcwCodebookVariable partDCwVariableFor(String system) {\n    * @param joins to add for many-to-one relations\n    * @return the criteria\n    */\n-  private CriteriaQuery<Beneficiary> queryBeneficiariesBy(\n+  private TypedQuery<Beneficiary> queryBeneficiariesBy(\n       SingularAttribute<Beneficiary, String> field,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f7f5d191017185cec534157346b09465dc7d33a"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NDM2MjAyOnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMjo1MjowN1rOGK_TGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMjo1MjowN1rOGK_TGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3NjAyNA==", "bodyText": "Refactoring the whereClause for readability. The select statement is now the same for both paging and non-paging cases.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/262#discussion_r414176024", "createdAt": "2020-04-23T22:52:07Z", "author": {"login": "RickHawesUSDS"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -353,31 +375,74 @@ private CcwCodebookVariable partDCwVariableFor(String system) {\n    * @param joins to add for many-to-one relations\n    * @return the criteria\n    */\n-  private CriteriaQuery<Beneficiary> queryBeneficiariesBy(\n+  private TypedQuery<Beneficiary> queryBeneficiariesBy(\n       SingularAttribute<Beneficiary, String> field,\n       String value,\n       PatientLinkBuilder paging,\n       List<SetAttribute<Beneficiary, ?>> joins) {\n-\n     CriteriaBuilder cb = entityManager.getCriteriaBuilder();\n     CriteriaQuery<Beneficiary> criteria = cb.createQuery(Beneficiary.class);\n     Root<Beneficiary> b = criteria.from(Beneficiary.class);\n+\n     joins.forEach(f -> b.fetch(f, JoinType.LEFT));\n \n-    if (paging.isPagingRequested() && !paging.isFirstPage()) {\n-      return criteria\n-          .select(b)\n-          .where(\n-              cb.and(\n-                  cb.equal(b.get(field), value),\n-                  cb.greaterThan(b.get(\"beneficiaryId\"), paging.getCursor())))\n-          .orderBy(cb.asc(b.get(\"beneficiaryId\")));\n-    } else {\n-      return criteria\n-          .select(b)\n-          .where(cb.equal(b.get(field), value))\n-          .orderBy(cb.asc(b.get(\"beneficiaryId\")));\n-    }\n+    Predicate whereClause =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f7f5d191017185cec534157346b09465dc7d33a"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NDM2NjgyOnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMjo1Mzo0NlrOGK_Vrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMjo1Mzo0NlrOGK_Vrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3NjY4Ng==", "bodyText": "Although this whereClause is similar to the previous whereClause in the previous method. It is not. I tried to build a common function and it didn't work.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/262#discussion_r414176686", "createdAt": "2020-04-23T22:53:46Z", "author": {"login": "RickHawesUSDS"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -353,31 +375,74 @@ private CcwCodebookVariable partDCwVariableFor(String system) {\n    * @param joins to add for many-to-one relations\n    * @return the criteria\n    */\n-  private CriteriaQuery<Beneficiary> queryBeneficiariesBy(\n+  private TypedQuery<Beneficiary> queryBeneficiariesBy(\n       SingularAttribute<Beneficiary, String> field,\n       String value,\n       PatientLinkBuilder paging,\n       List<SetAttribute<Beneficiary, ?>> joins) {\n-\n     CriteriaBuilder cb = entityManager.getCriteriaBuilder();\n     CriteriaQuery<Beneficiary> criteria = cb.createQuery(Beneficiary.class);\n     Root<Beneficiary> b = criteria.from(Beneficiary.class);\n+\n     joins.forEach(f -> b.fetch(f, JoinType.LEFT));\n \n-    if (paging.isPagingRequested() && !paging.isFirstPage()) {\n-      return criteria\n-          .select(b)\n-          .where(\n-              cb.and(\n-                  cb.equal(b.get(field), value),\n-                  cb.greaterThan(b.get(\"beneficiaryId\"), paging.getCursor())))\n-          .orderBy(cb.asc(b.get(\"beneficiaryId\")));\n-    } else {\n-      return criteria\n-          .select(b)\n-          .where(cb.equal(b.get(field), value))\n-          .orderBy(cb.asc(b.get(\"beneficiaryId\")));\n-    }\n+    Predicate whereClause =\n+        paging.isPagingRequested() && !paging.isFirstPage()\n+            ? cb.and(\n+                cb.equal(b.get(field), value),\n+                cb.greaterThan(b.get(\"beneficiaryId\"), paging.getCursor()))\n+            : cb.equal(b.get(field), value);\n+\n+    return entityManager.createQuery(\n+        criteria.select(b).where(whereClause).orderBy(cb.asc(b.get(\"beneficiaryId\"))));\n+  }\n+\n+  /**\n+   * Build a criteria for a general beneficiaryId query\n+   *\n+   * @param field to match on\n+   * @param value to match on\n+   * @param paging to use for the result set\n+   * @return the criteria\n+   */\n+  private TypedQuery<String> queryBeneficiaryIds(\n+      SingularAttribute<Beneficiary, String> field, String value, PatientLinkBuilder paging) {\n+    CriteriaBuilder cb = entityManager.getCriteriaBuilder();\n+    CriteriaQuery<String> criteria = cb.createQuery(String.class);\n+    Root<Beneficiary> b = criteria.from(Beneficiary.class);\n+\n+    Predicate whereClause =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f7f5d191017185cec534157346b09465dc7d33a"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NzY0NjIwOnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNToxMjo0MlrOGLcbnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxMjo1NVrOGMrnCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY1MzM0Mw==", "bodyText": "Switching over to the JPQL style for these queries. Easier to understand and read to my eyes. Simpler code as well.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/262#discussion_r414653343", "createdAt": "2020-04-24T15:12:42Z", "author": {"login": "RickHawesUSDS"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -350,36 +353,96 @@ private CcwCodebookVariable partDCwVariableFor(String system) {\n    * @param field to match on\n    * @param value to match on\n    * @param paging to use for the result set\n-   * @param joins to add for many-to-one relations\n+   * @param identifiers to add for many-to-one relations\n    * @return the criteria\n    */\n-  private CriteriaQuery<Beneficiary> queryBeneficiariesBy(\n-      SingularAttribute<Beneficiary, String> field,\n-      String value,\n-      PatientLinkBuilder paging,\n-      List<SetAttribute<Beneficiary, ?>> joins) {\n+  private TypedQuery<Beneficiary> queryBeneficiariesBy(\n+      String field, String value, PatientLinkBuilder paging, List<String> identifiers) {\n+    String joinsClause = \"\";\n+    if (hasMBI(identifiers)) joinsClause += \"left join fetch b.medicareBeneficiaryIdHistories \";\n+    if (hasHICN(identifiers)) joinsClause += \"left join fetch b.beneficiaryHistories \";\n \n-    CriteriaBuilder cb = entityManager.getCriteriaBuilder();\n-    CriteriaQuery<Beneficiary> criteria = cb.createQuery(Beneficiary.class);\n-    Root<Beneficiary> b = criteria.from(Beneficiary.class);\n-    joins.forEach(f -> b.fetch(f, JoinType.LEFT));\n+    if (paging.isPagingRequested() && !paging.isFirstPage()) {\n+      String query =\n+          \"select b from Beneficiary b \"\n+              + joinsClause\n+              + \"where b.\"\n+              + field\n+              + \" = :value and b.beneficiaryId > :cursor \"\n+              + \"order by b.beneficiaryId asc\";\n+\n+      return entityManager\n+          .createQuery(query, Beneficiary.class)\n+          .setParameter(\"value\", value)\n+          .setParameter(\"cursor\", paging.getCursor());\n+    } else {\n+      String query =\n+          \"select b from Beneficiary b \"\n+              + joinsClause\n+              + \"where b.\"\n+              + field\n+              + \" = :value \"\n+              + \"order by b.beneficiaryId asc\";\n+\n+      return entityManager.createQuery(query, Beneficiary.class).setParameter(\"value\", value);\n+    }\n+  }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eab516819b7d5e4f1b74633604c8d9511c350063"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1MDYwMg==", "bodyText": "I like this and is easier to read for me too!", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/262#discussion_r415950602", "createdAt": "2020-04-27T16:12:55Z", "author": {"login": "dtisza1"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -350,36 +353,96 @@ private CcwCodebookVariable partDCwVariableFor(String system) {\n    * @param field to match on\n    * @param value to match on\n    * @param paging to use for the result set\n-   * @param joins to add for many-to-one relations\n+   * @param identifiers to add for many-to-one relations\n    * @return the criteria\n    */\n-  private CriteriaQuery<Beneficiary> queryBeneficiariesBy(\n-      SingularAttribute<Beneficiary, String> field,\n-      String value,\n-      PatientLinkBuilder paging,\n-      List<SetAttribute<Beneficiary, ?>> joins) {\n+  private TypedQuery<Beneficiary> queryBeneficiariesBy(\n+      String field, String value, PatientLinkBuilder paging, List<String> identifiers) {\n+    String joinsClause = \"\";\n+    if (hasMBI(identifiers)) joinsClause += \"left join fetch b.medicareBeneficiaryIdHistories \";\n+    if (hasHICN(identifiers)) joinsClause += \"left join fetch b.beneficiaryHistories \";\n \n-    CriteriaBuilder cb = entityManager.getCriteriaBuilder();\n-    CriteriaQuery<Beneficiary> criteria = cb.createQuery(Beneficiary.class);\n-    Root<Beneficiary> b = criteria.from(Beneficiary.class);\n-    joins.forEach(f -> b.fetch(f, JoinType.LEFT));\n+    if (paging.isPagingRequested() && !paging.isFirstPage()) {\n+      String query =\n+          \"select b from Beneficiary b \"\n+              + joinsClause\n+              + \"where b.\"\n+              + field\n+              + \" = :value and b.beneficiaryId > :cursor \"\n+              + \"order by b.beneficiaryId asc\";\n+\n+      return entityManager\n+          .createQuery(query, Beneficiary.class)\n+          .setParameter(\"value\", value)\n+          .setParameter(\"cursor\", paging.getCursor());\n+    } else {\n+      String query =\n+          \"select b from Beneficiary b \"\n+              + joinsClause\n+              + \"where b.\"\n+              + field\n+              + \" = :value \"\n+              + \"order by b.beneficiaryId asc\";\n+\n+      return entityManager.createQuery(query, Beneficiary.class).setParameter(\"value\", value);\n+    }\n+  }\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY1MzM0Mw=="}, "originalCommit": {"oid": "eab516819b7d5e4f1b74633604c8d9511c350063"}, "originalPosition": 158}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MTE1MTU5OnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxODowNjo0OVrOGL4fsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxODowNjo0OVrOGL4fsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTExMzEzNw==", "bodyText": "Much easier on the eyes.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/262#discussion_r415113137", "createdAt": "2020-04-25T18:06:49Z", "author": {"login": "jzulim"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -290,37 +290,26 @@ private CcwCodebookVariable partDCwVariableFor(String system) {\n     }\n   }\n \n-  private SingularAttribute<Beneficiary, String> partDFieldFor(CcwCodebookVariable cntrctMonth) {\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT01)\n-      return Beneficiary_.partDContractNumberJanId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT02)\n-      return Beneficiary_.partDContractNumberFebId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT03)\n-      return Beneficiary_.partDContractNumberMarId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT04)\n-      return Beneficiary_.partDContractNumberAprId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT05)\n-      return Beneficiary_.partDContractNumberMayId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT06)\n-      return Beneficiary_.partDContractNumberJunId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT07)\n-      return Beneficiary_.partDContractNumberJulId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT08)\n-      return Beneficiary_.partDContractNumberAugId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT09)\n-      return Beneficiary_.partDContractNumberSeptId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT10)\n-      return Beneficiary_.partDContractNumberOctId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT11)\n-      return Beneficiary_.partDContractNumberNovId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT12)\n-      return Beneficiary_.partDContractNumberDecId;\n+  private String partDFieldFor(CcwCodebookVariable month) {\n+    if (month == CcwCodebookVariable.PTDCNTRCT01) return \"partDContractNumberJanId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT02) return \"partDContractNumberFebId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT03) return \"partDContractNumberMarId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT04) return \"partDContractNumberAprId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT05) return \"partDContractNumberMayId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT06) return \"partDContractNumberJunId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT07) return \"partDContractNumberJulId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT08) return \"partDContractNumberAugId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT09) return \"partDContractNumberSeptId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT10) return \"partDContractNumberOctId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT11) return \"partDContractNumberNovId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT12) return \"partDContractNumberDecId\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eab516819b7d5e4f1b74633604c8d9511c350063"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 352, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}