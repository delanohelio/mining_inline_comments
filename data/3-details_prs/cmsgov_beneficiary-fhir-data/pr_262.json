{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MjM4ODk1", "number": 262, "title": "BLUEBUTTON 2001: Slow Coverage search with paging and identifiers", "bodyText": "Motivation\nhttps://jira.cms.gov/browse/BLUEBUTTON-2001 reports a bug where a coverage searches together with paging and include-identifiers timed-out.\nCause\nWhen include-identifiers is set, the search uses a join clause to fetch the bene-id history. When paging is enabled, the search uses a limit clause to limit the number of returned results.\nThere is subtle behavior with Hibernate where joins and limits cannot be used together; In this case, Hibernate drops the limit.\nThis post explains the problem as well.\nhttps://stackoverflow.com/questions/53569908/jpa-eager-fetching-and-pagination-best-practices\nNote: The current code returns correct or nearly correct results. Test cases passed and the current code works small history datasets like those in SBX.\nChanges Made\nWhen paging and include identifiers are set, execute the query in two steps: First, fetch bene-ids using a limit clause. Next, fetch a full list of beneficiaries with joins.\nAlso did some refactoring was done to make the code more readable. This work included switching to JPQL as the language for the query.\nReviewer Guidance\nLook that the existing queries did not change. Look at the queries for edge cases.\nSecurity\nNo impact", "createdAt": "2020-04-23T22:49:11Z", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/262", "merged": true, "mergeCommit": {"oid": "175316aa3ba73df74b02bb4e860c10197a3b05ed"}, "closed": true, "closedAt": "2020-04-27T21:04:22Z", "author": {"login": "RickHawesUSDS"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcajkuLAH2gAyNDA4MjM4ODk1OjZlMzdjMTk2MDNkYTZjN2IyMDU3ZGUyMTVhMTc1NjVkYTM5YzljZGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcb1lXQgFqTQwMDQxNzUyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6e37c19603da6c7b2057de215a17565da39c9cdd", "author": {"user": null}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/6e37c19603da6c7b2057de215a17565da39c9cdd", "committedDate": "2020-04-23T21:14:54Z", "message": "A fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "491c760061e4587091e40e10550dff67acfce697", "author": {"user": null}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/491c760061e4587091e40e10550dff67acfce697", "committedDate": "2020-04-23T22:22:23Z", "message": "Refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f7f5d191017185cec534157346b09465dc7d33a", "author": {"user": null}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/4f7f5d191017185cec534157346b09465dc7d33a", "committedDate": "2020-04-23T22:47:41Z", "message": "Update comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NTMwNTM1", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/262#pullrequestreview-399530535", "createdAt": "2020-04-23T22:50:20Z", "commit": {"oid": "4f7f5d191017185cec534157346b09465dc7d33a"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMjo1MDoyMFrOGK_QBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMjo1Mzo0NlrOGK_Vrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3NTIzNg==", "bodyText": "All the changes happened in this method and the methods it calls.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/262#discussion_r414175236", "createdAt": "2020-04-23T22:50:20Z", "author": {"login": "RickHawesUSDS"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -329,19 +332,38 @@ private CcwCodebookVariable partDCwVariableFor(String system) {\n    */\n   private List<Beneficiary> fetchBeneficiaries(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f7f5d191017185cec534157346b09465dc7d33a"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3NTUyNA==", "bodyText": "Moving to TypedQuery return type improves the readability of the caller.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/262#discussion_r414175524", "createdAt": "2020-04-23T22:51:04Z", "author": {"login": "RickHawesUSDS"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -353,31 +375,74 @@ private CcwCodebookVariable partDCwVariableFor(String system) {\n    * @param joins to add for many-to-one relations\n    * @return the criteria\n    */\n-  private CriteriaQuery<Beneficiary> queryBeneficiariesBy(\n+  private TypedQuery<Beneficiary> queryBeneficiariesBy(\n       SingularAttribute<Beneficiary, String> field,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f7f5d191017185cec534157346b09465dc7d33a"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3NjAyNA==", "bodyText": "Refactoring the whereClause for readability. The select statement is now the same for both paging and non-paging cases.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/262#discussion_r414176024", "createdAt": "2020-04-23T22:52:07Z", "author": {"login": "RickHawesUSDS"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -353,31 +375,74 @@ private CcwCodebookVariable partDCwVariableFor(String system) {\n    * @param joins to add for many-to-one relations\n    * @return the criteria\n    */\n-  private CriteriaQuery<Beneficiary> queryBeneficiariesBy(\n+  private TypedQuery<Beneficiary> queryBeneficiariesBy(\n       SingularAttribute<Beneficiary, String> field,\n       String value,\n       PatientLinkBuilder paging,\n       List<SetAttribute<Beneficiary, ?>> joins) {\n-\n     CriteriaBuilder cb = entityManager.getCriteriaBuilder();\n     CriteriaQuery<Beneficiary> criteria = cb.createQuery(Beneficiary.class);\n     Root<Beneficiary> b = criteria.from(Beneficiary.class);\n+\n     joins.forEach(f -> b.fetch(f, JoinType.LEFT));\n \n-    if (paging.isPagingRequested() && !paging.isFirstPage()) {\n-      return criteria\n-          .select(b)\n-          .where(\n-              cb.and(\n-                  cb.equal(b.get(field), value),\n-                  cb.greaterThan(b.get(\"beneficiaryId\"), paging.getCursor())))\n-          .orderBy(cb.asc(b.get(\"beneficiaryId\")));\n-    } else {\n-      return criteria\n-          .select(b)\n-          .where(cb.equal(b.get(field), value))\n-          .orderBy(cb.asc(b.get(\"beneficiaryId\")));\n-    }\n+    Predicate whereClause =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f7f5d191017185cec534157346b09465dc7d33a"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3NjY4Ng==", "bodyText": "Although this whereClause is similar to the previous whereClause in the previous method. It is not. I tried to build a common function and it didn't work.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/262#discussion_r414176686", "createdAt": "2020-04-23T22:53:46Z", "author": {"login": "RickHawesUSDS"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -353,31 +375,74 @@ private CcwCodebookVariable partDCwVariableFor(String system) {\n    * @param joins to add for many-to-one relations\n    * @return the criteria\n    */\n-  private CriteriaQuery<Beneficiary> queryBeneficiariesBy(\n+  private TypedQuery<Beneficiary> queryBeneficiariesBy(\n       SingularAttribute<Beneficiary, String> field,\n       String value,\n       PatientLinkBuilder paging,\n       List<SetAttribute<Beneficiary, ?>> joins) {\n-\n     CriteriaBuilder cb = entityManager.getCriteriaBuilder();\n     CriteriaQuery<Beneficiary> criteria = cb.createQuery(Beneficiary.class);\n     Root<Beneficiary> b = criteria.from(Beneficiary.class);\n+\n     joins.forEach(f -> b.fetch(f, JoinType.LEFT));\n \n-    if (paging.isPagingRequested() && !paging.isFirstPage()) {\n-      return criteria\n-          .select(b)\n-          .where(\n-              cb.and(\n-                  cb.equal(b.get(field), value),\n-                  cb.greaterThan(b.get(\"beneficiaryId\"), paging.getCursor())))\n-          .orderBy(cb.asc(b.get(\"beneficiaryId\")));\n-    } else {\n-      return criteria\n-          .select(b)\n-          .where(cb.equal(b.get(field), value))\n-          .orderBy(cb.asc(b.get(\"beneficiaryId\")));\n-    }\n+    Predicate whereClause =\n+        paging.isPagingRequested() && !paging.isFirstPage()\n+            ? cb.and(\n+                cb.equal(b.get(field), value),\n+                cb.greaterThan(b.get(\"beneficiaryId\"), paging.getCursor()))\n+            : cb.equal(b.get(field), value);\n+\n+    return entityManager.createQuery(\n+        criteria.select(b).where(whereClause).orderBy(cb.asc(b.get(\"beneficiaryId\"))));\n+  }\n+\n+  /**\n+   * Build a criteria for a general beneficiaryId query\n+   *\n+   * @param field to match on\n+   * @param value to match on\n+   * @param paging to use for the result set\n+   * @return the criteria\n+   */\n+  private TypedQuery<String> queryBeneficiaryIds(\n+      SingularAttribute<Beneficiary, String> field, String value, PatientLinkBuilder paging) {\n+    CriteriaBuilder cb = entityManager.getCriteriaBuilder();\n+    CriteriaQuery<String> criteria = cb.createQuery(String.class);\n+    Root<Beneficiary> b = criteria.from(Beneficiary.class);\n+\n+    Predicate whereClause =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f7f5d191017185cec534157346b09465dc7d33a"}, "originalPosition": 128}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eab516819b7d5e4f1b74633604c8d9511c350063", "author": {"user": null}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/eab516819b7d5e4f1b74633604c8d9511c350063", "committedDate": "2020-04-24T15:00:44Z", "message": "Moved to using JPQL for the queries.\n\nEasier to read because the java form has much more boilerplate."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMDM2MzEx", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/262#pullrequestreview-400036311", "createdAt": "2020-04-24T15:12:41Z", "commit": {"oid": "eab516819b7d5e4f1b74633604c8d9511c350063"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNToxMjo0MlrOGLcbnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNToxMjo0MlrOGLcbnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY1MzM0Mw==", "bodyText": "Switching over to the JPQL style for these queries. Easier to understand and read to my eyes. Simpler code as well.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/262#discussion_r414653343", "createdAt": "2020-04-24T15:12:42Z", "author": {"login": "RickHawesUSDS"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -350,36 +353,96 @@ private CcwCodebookVariable partDCwVariableFor(String system) {\n    * @param field to match on\n    * @param value to match on\n    * @param paging to use for the result set\n-   * @param joins to add for many-to-one relations\n+   * @param identifiers to add for many-to-one relations\n    * @return the criteria\n    */\n-  private CriteriaQuery<Beneficiary> queryBeneficiariesBy(\n-      SingularAttribute<Beneficiary, String> field,\n-      String value,\n-      PatientLinkBuilder paging,\n-      List<SetAttribute<Beneficiary, ?>> joins) {\n+  private TypedQuery<Beneficiary> queryBeneficiariesBy(\n+      String field, String value, PatientLinkBuilder paging, List<String> identifiers) {\n+    String joinsClause = \"\";\n+    if (hasMBI(identifiers)) joinsClause += \"left join fetch b.medicareBeneficiaryIdHistories \";\n+    if (hasHICN(identifiers)) joinsClause += \"left join fetch b.beneficiaryHistories \";\n \n-    CriteriaBuilder cb = entityManager.getCriteriaBuilder();\n-    CriteriaQuery<Beneficiary> criteria = cb.createQuery(Beneficiary.class);\n-    Root<Beneficiary> b = criteria.from(Beneficiary.class);\n-    joins.forEach(f -> b.fetch(f, JoinType.LEFT));\n+    if (paging.isPagingRequested() && !paging.isFirstPage()) {\n+      String query =\n+          \"select b from Beneficiary b \"\n+              + joinsClause\n+              + \"where b.\"\n+              + field\n+              + \" = :value and b.beneficiaryId > :cursor \"\n+              + \"order by b.beneficiaryId asc\";\n+\n+      return entityManager\n+          .createQuery(query, Beneficiary.class)\n+          .setParameter(\"value\", value)\n+          .setParameter(\"cursor\", paging.getCursor());\n+    } else {\n+      String query =\n+          \"select b from Beneficiary b \"\n+              + joinsClause\n+              + \"where b.\"\n+              + field\n+              + \" = :value \"\n+              + \"order by b.beneficiaryId asc\";\n+\n+      return entityManager.createQuery(query, Beneficiary.class).setParameter(\"value\", value);\n+    }\n+  }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eab516819b7d5e4f1b74633604c8d9511c350063"}, "originalPosition": 158}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMjIwMjEw", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/262#pullrequestreview-401220210", "createdAt": "2020-04-27T18:32:39Z", "commit": {"oid": "eab516819b7d5e4f1b74633604c8d9511c350063"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNDE3NTI1", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/262#pullrequestreview-400417525", "createdAt": "2020-04-25T18:06:49Z", "commit": {"oid": "eab516819b7d5e4f1b74633604c8d9511c350063"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxODowNjo0OVrOGL4fsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxODowNjo0OVrOGL4fsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTExMzEzNw==", "bodyText": "Much easier on the eyes.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/262#discussion_r415113137", "createdAt": "2020-04-25T18:06:49Z", "author": {"login": "jzulim"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -290,37 +290,26 @@ private CcwCodebookVariable partDCwVariableFor(String system) {\n     }\n   }\n \n-  private SingularAttribute<Beneficiary, String> partDFieldFor(CcwCodebookVariable cntrctMonth) {\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT01)\n-      return Beneficiary_.partDContractNumberJanId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT02)\n-      return Beneficiary_.partDContractNumberFebId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT03)\n-      return Beneficiary_.partDContractNumberMarId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT04)\n-      return Beneficiary_.partDContractNumberAprId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT05)\n-      return Beneficiary_.partDContractNumberMayId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT06)\n-      return Beneficiary_.partDContractNumberJunId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT07)\n-      return Beneficiary_.partDContractNumberJulId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT08)\n-      return Beneficiary_.partDContractNumberAugId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT09)\n-      return Beneficiary_.partDContractNumberSeptId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT10)\n-      return Beneficiary_.partDContractNumberOctId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT11)\n-      return Beneficiary_.partDContractNumberNovId;\n-    if (cntrctMonth == CcwCodebookVariable.PTDCNTRCT12)\n-      return Beneficiary_.partDContractNumberDecId;\n+  private String partDFieldFor(CcwCodebookVariable month) {\n+    if (month == CcwCodebookVariable.PTDCNTRCT01) return \"partDContractNumberJanId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT02) return \"partDContractNumberFebId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT03) return \"partDContractNumberMarId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT04) return \"partDContractNumberAprId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT05) return \"partDContractNumberMayId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT06) return \"partDContractNumberJunId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT07) return \"partDContractNumberJulId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT08) return \"partDContractNumberAugId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT09) return \"partDContractNumberSeptId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT10) return \"partDContractNumberOctId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT11) return \"partDContractNumberNovId\";\n+    if (month == CcwCodebookVariable.PTDCNTRCT12) return \"partDContractNumberDecId\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eab516819b7d5e4f1b74633604c8d9511c350063"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 738, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}