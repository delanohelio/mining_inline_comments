{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2NDk0NDUz", "number": 390, "reviewThreads": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNzoxOTozMFrOFPTCUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wM1QwMTo0NDozNlrOFV89Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTg0ODUxOnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/BeneficiaryTransformer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNzoxOTozMFrOIUlIyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNzoxOTozMFrOIUlIyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODQ1MDg5MQ==", "bodyText": "maybe just rename rh to requestHeader", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r558450891", "createdAt": "2021-01-15T17:19:30Z", "author": {"login": "cbrunefearless"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/BeneficiaryTransformer.java", "diffHunk": "@@ -65,18 +65,17 @@\n    * @param metricRegistry the {@link MetricRegistry} to use\n    * @param beneficiary the CCW {@link Beneficiary} to transform\n    * @param includeIdentifiersValues the includeIdentifiers header values to use\n+   * @param includeAddressFields the boolean flag includeAddressFields derived from header\n    * @return a FHIR {@link Patient} resource that represents the specified {@link Beneficiary}\n    */\n   @Trace\n   public static Patient transform(\n-      MetricRegistry metricRegistry,\n-      Beneficiary beneficiary,\n-      List<String> includeIdentifiersValues) {\n+      MetricRegistry metricRegistry, Beneficiary beneficiary, RequestHeaders rh) {\n     Timer.Context timer =\n         metricRegistry\n             .timer(MetricRegistry.name(BeneficiaryTransformer.class.getSimpleName(), \"transform\"))\n             .time();\n-    Patient patient = transform(beneficiary, includeIdentifiersValues);\n+    Patient patient = transform(beneficiary, rh);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTg0OTM3OnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/BeneficiaryTransformer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNzoxOTo0MlrOIUlJRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNzoxOTo0MlrOIUlJRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODQ1MTAxNA==", "bodyText": "maybe just rename rh to requestHeader", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r558451014", "createdAt": "2021-01-15T17:19:42Z", "author": {"login": "cbrunefearless"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/BeneficiaryTransformer.java", "diffHunk": "@@ -85,9 +84,11 @@ public static Patient transform(\n   /**\n    * @param beneficiary the CCW {@link Beneficiary} to transform\n    * @param includeIdentifiersValues the includeIdentifiers header values to use\n+   * @param includeAddressFields the includeAddressFields flag derived from header - used to\n+   *     determine if derived address info be included or not\n    * @return a FHIR {@link Patient} resource that represents the specified {@link Beneficiary}\n    */\n-  private static Patient transform(Beneficiary beneficiary, List<String> includeIdentifiersValues) {\n+  private static Patient transform(Beneficiary beneficiary, RequestHeaders rh) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTg1MjcxOnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/BeneficiaryTransformer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNzoyMDoyOFrOIUlLPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNzoyMDoyOFrOIUlLPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODQ1MTUxOA==", "bodyText": "great job!", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r558451518", "createdAt": "2021-01-15T17:20:28Z", "author": {"login": "cbrunefearless"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/BeneficiaryTransformer.java", "diffHunk": "@@ -176,11 +177,27 @@ private static Patient transform(Beneficiary beneficiary, List<String> includeId\n       }\n     }\n \n-    patient\n-        .addAddress()\n-        .setState(beneficiary.getStateCode())\n-        .setDistrict(beneficiary.getCountyCode())\n-        .setPostalCode(beneficiary.getPostalCode());\n+    // support header includeAddressFields from downstream components e.g. BB2\n+    // per requirement of BFD-379, BB2 always send header includeAddressFields = False\n+    Boolean addrHdrVal = rh.getValue(PatientResourceProvider.HEADER_NAME_INCLUDE_ADDRESS_FIELDS);\n+    if (addrHdrVal != null && addrHdrVal) {\n+      patient\n+          .addAddress()\n+          .setState(beneficiary.getStateCode())\n+          .setPostalCode(beneficiary.getPostalCode())\n+          .setCity(beneficiary.getDerivedCityName().orElse(null))\n+          .addLine(beneficiary.getDerivedMailingAddress1().orElse(null))\n+          .addLine(beneficiary.getDerivedMailingAddress2().orElse(null))\n+          .addLine(beneficiary.getDerivedMailingAddress3().orElse(null))\n+          .addLine(beneficiary.getDerivedMailingAddress4().orElse(null))\n+          .addLine(beneficiary.getDerivedMailingAddress5().orElse(null))\n+          .addLine(beneficiary.getDerivedMailingAddress6().orElse(null));\n+    } else {\n+      patient\n+          .addAddress()\n+          .setState(beneficiary.getStateCode())\n+          .setPostalCode(beneficiary.getPostalCode());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTg1Mzc4OnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNzoyMDo0NVrOIUlL5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNzoyMDo0NVrOIUlL5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODQ1MTY4Ng==", "bodyText": "maybe just rename rh to requestHeader", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r558451686", "createdAt": "2021-01-15T17:20:45Z", "author": {"login": "cbrunefearless"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -121,21 +121,22 @@ public Patient read(@IdParam IdType patientId, RequestDetails requestDetails) {\n     String beneIdText = patientId.getIdPart();\n     if (beneIdText == null || beneIdText.trim().isEmpty()) throw new IllegalArgumentException();\n \n-    List<String> includeIdentifiersValues = returnIncludeIdentifiersValues(requestDetails);\n+    RequestHeaders rh = RequestHeaders.getHeaderWrapper(requestDetails);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTkxMDUzOnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNzozNjozOFrOIUlu5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNzozNjozOFrOIUlu5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODQ2MDY0NA==", "bodyText": "maybe just rename rh to requestHeader", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r558460644", "createdAt": "2021-01-15T17:36:38Z", "author": {"login": "cbrunefearless"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -512,11 +518,11 @@ public Bundle searchByIdentifier(\n     if (!SUPPORTED_HASH_IDENTIFIER_SYSTEMS.contains(identifier.getSystem()))\n       throw new InvalidRequestException(\"Unsupported identifier system: \" + identifier.getSystem());\n \n-    List<String> includeIdentifiersValues = returnIncludeIdentifiersValues(requestDetails);\n+    RequestHeaders rh = RequestHeaders.getHeaderWrapper(requestDetails);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 184}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTkxMzg5OnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNzozNzozNFrOIUlw8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNzozNzozNFrOIUlw8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODQ2MTE2OQ==", "bodyText": "delete this commented out code", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r558461169", "createdAt": "2021-01-15T17:37:34Z", "author": {"login": "cbrunefearless"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -553,43 +559,55 @@ public Bundle searchByIdentifier(\n \n   /**\n    * @param hicnHash the {@link Beneficiary#getHicn()} hash value to match\n-   * @param includeIdentifiersValues the {@link #returnIncludeIdentifiersValues(RequestDetails)}\n-   *     value to use\n+   * @param rh the {@link #RequestHeaders} where resource request headers encapsulated\n    * @return a FHIR {@link Patient} for the CCW {@link Beneficiary} that matches the specified\n    *     {@link Beneficiary#getHicn()} hash value\n    * @throws NoResultException A {@link NoResultException} will be thrown if no matching {@link\n    *     Beneficiary} can be found\n    */\n   @Trace\n-  private Patient queryDatabaseByHicnHash(String hicnHash, List<String> includeIdentifiersValues) {\n-    return queryDatabaseByHash(\n-        hicnHash, \"hicn\", includeIdentifiersValues, Beneficiary_.hicn, BeneficiaryHistory_.hicn);\n+  private Patient queryDatabaseByHicnHash(String hicnHash, RequestHeaders rh) {\n+    return queryDatabaseByHash(hicnHash, \"hicn\", Beneficiary_.hicn, BeneficiaryHistory_.hicn, rh);\n   }\n+  // private Patient queryDatabaseByHicnHash(", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 225}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTkxNjAyOnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNzozODowMlrOIUlyJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNzozODowMlrOIUlyJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODQ2MTQ3Nw==", "bodyText": "delete comments out code", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r558461477", "createdAt": "2021-01-15T17:38:02Z", "author": {"login": "cbrunefearless"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -553,43 +559,55 @@ public Bundle searchByIdentifier(\n \n   /**\n    * @param hicnHash the {@link Beneficiary#getHicn()} hash value to match\n-   * @param includeIdentifiersValues the {@link #returnIncludeIdentifiersValues(RequestDetails)}\n-   *     value to use\n+   * @param rh the {@link #RequestHeaders} where resource request headers encapsulated\n    * @return a FHIR {@link Patient} for the CCW {@link Beneficiary} that matches the specified\n    *     {@link Beneficiary#getHicn()} hash value\n    * @throws NoResultException A {@link NoResultException} will be thrown if no matching {@link\n    *     Beneficiary} can be found\n    */\n   @Trace\n-  private Patient queryDatabaseByHicnHash(String hicnHash, List<String> includeIdentifiersValues) {\n-    return queryDatabaseByHash(\n-        hicnHash, \"hicn\", includeIdentifiersValues, Beneficiary_.hicn, BeneficiaryHistory_.hicn);\n+  private Patient queryDatabaseByHicnHash(String hicnHash, RequestHeaders rh) {\n+    return queryDatabaseByHash(hicnHash, \"hicn\", Beneficiary_.hicn, BeneficiaryHistory_.hicn, rh);\n   }\n+  // private Patient queryDatabaseByHicnHash(\n+  //     String hicnHash, List<String> includeIdentifiersValues, Boolean includeAddressFields) {\n+  //   return queryDatabaseByHash(\n+  //       hicnHash,\n+  //       \"hicn\",\n+  //       includeIdentifiersValues,\n+  //       Beneficiary_.hicn,\n+  //       BeneficiaryHistory_.hicn,\n+  //       includeAddressFields);\n+  // }\n \n   /**\n    * @param mbiHash the {@link Beneficiary#getMbiHash()} ()} hash value to match\n-   * @param includeIdentifiersValues the {@link #returnIncludeIdentifiersValues(RequestDetails)}\n-   *     value to use\n+   * @param rh the {@link #RequestHeaders} where resource request headers encapsulated\n    * @return a FHIR {@link Patient} for the CCW {@link Beneficiary} that matches the specified\n    *     {@link Beneficiary#getMbiHash()} ()} hash value\n    * @throws NoResultException A {@link NoResultException} will be thrown if no matching {@link\n    *     Beneficiary} can be found\n    */\n   @Trace\n-  private Patient queryDatabaseByMbiHash(String mbiHash, List<String> includeIdentifiersValues) {\n+  private Patient queryDatabaseByMbiHash(String mbiHash, RequestHeaders rh) {\n     return queryDatabaseByHash(\n-        mbiHash,\n-        \"mbi\",\n-        includeIdentifiersValues,\n-        Beneficiary_.mbiHash,\n-        BeneficiaryHistory_.mbiHash);\n+        mbiHash, \"mbi\", Beneficiary_.mbiHash, BeneficiaryHistory_.mbiHash, rh);\n   }\n+  // private Patient queryDatabaseByMbiHash(\n+  //     String mbiHash, List<String> includeIdentifiersValues, Boolean includeAddressFields) {\n+  //   return queryDatabaseByHash(\n+  //       mbiHash,\n+  //       \"mbi\",\n+  //       includeIdentifiersValues,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 262}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTkxNzI5OnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNzozODoyMlrOIUly7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNzozODoyMlrOIUly7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODQ2MTY3Nw==", "bodyText": "rename rh to requestHeader", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r558461677", "createdAt": "2021-01-15T17:38:22Z", "author": {"login": "cbrunefearless"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -601,9 +619,9 @@ private Patient queryDatabaseByMbiHash(String mbiHash, List<String> includeIdent\n   private Patient queryDatabaseByHash(\n       String hash,\n       String hashType,\n-      List<String> includeIdentifiersValues,\n       SingularAttribute<Beneficiary, String> beneficiaryHashField,\n-      SingularAttribute<BeneficiaryHistory, String> beneficiaryHistoryHashField) {\n+      SingularAttribute<BeneficiaryHistory, String> beneficiaryHistoryHashField,\n+      RequestHeaders rh) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 285}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzMzMxNDkyOnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/R4PatientResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxNjozMDo0MFrOIXHMZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxNjozMDo0MFrOIXHMZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTEwNjAyMw==", "bodyText": "Nice catch, thanks.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r561106023", "createdAt": "2021-01-20T16:30:40Z", "author": {"login": "jzulim"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/R4PatientResourceProvider.java", "diffHunk": "@@ -86,7 +86,7 @@ public void setMetricRegistry(MetricRegistry metricRegistry) {\n     this.metricRegistry = metricRegistry;\n   }\n \n-  /** @param loadedFilterManager the {@link R4LoadedFilterManager} to use */\n+  /** @param loadedFilterManager the {@link LoadedFilterManager} to use */", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzMzMyMTE1OnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/BeneficiaryTransformer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxNjozMjowMVrOIXHQSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxNjozMjowMVrOIXHQSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTEwNzAxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               *     determine if derived address info be included or not\n          \n          \n            \n               *     determine if derived address info shall be included or not", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r561107018", "createdAt": "2021-01-20T16:32:01Z", "author": {"login": "jzulim"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/BeneficiaryTransformer.java", "diffHunk": "@@ -85,9 +84,11 @@ public static Patient transform(\n   /**\n    * @param beneficiary the CCW {@link Beneficiary} to transform\n    * @param includeIdentifiersValues the includeIdentifiers header values to use\n+   * @param includeAddressFields the includeAddressFields flag derived from header - used to\n+   *     determine if derived address info be included or not", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzMzM1MTg5OnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxNjozOTowOFrOIXHjOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxNjozOTowOFrOIXHjOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTExMTg2NQ==", "bodyText": "Yes, they do. Thx.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r561111865", "createdAt": "2021-01-20T16:39:08Z", "author": {"login": "jzulim"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -262,17 +267,18 @@ public Bundle searchByCoverageContract(\n           String cursor,\n       RequestDetails requestDetails) {\n     checkCoverageId(coverageId);\n-    List<String> includeIdentifiersValues = returnIncludeIdentifiersValues(requestDetails);\n+    RequestHeaders requestHeader = RequestHeaders.getHeaderWrapper(requestDetails);\n     PatientLinkBuilder paging = new PatientLinkBuilder(requestDetails.getCompleteUrl());\n     checkPageSize(paging);\n \n     Operation operation = new Operation(Operation.Endpoint.V1_PATIENT);\n     operation.setOption(\"by\", \"coverageContract\");\n-    operation.setOption(\"IncludeIdentifiers\", includeIdentifiersValues.toString());\n+    // need to confirm if all headers of this nature participate in OPTION tracking", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzMzM2MTI5OnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxNjo0MToxOFrOIXHpCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxNjo0MToxOFrOIXHpCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTExMzM1NQ==", "bodyText": "No.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r561113355", "createdAt": "2021-01-20T16:41:18Z", "author": {"login": "jzulim"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -262,17 +267,18 @@ public Bundle searchByCoverageContract(\n           String cursor,\n       RequestDetails requestDetails) {\n     checkCoverageId(coverageId);\n-    List<String> includeIdentifiersValues = returnIncludeIdentifiersValues(requestDetails);\n+    RequestHeaders requestHeader = RequestHeaders.getHeaderWrapper(requestDetails);\n     PatientLinkBuilder paging = new PatientLinkBuilder(requestDetails.getCompleteUrl());\n     checkPageSize(paging);\n \n     Operation operation = new Operation(Operation.Endpoint.V1_PATIENT);\n     operation.setOption(\"by\", \"coverageContract\");\n-    operation.setOption(\"IncludeIdentifiers\", includeIdentifiersValues.toString());\n+    // need to confirm if all headers of this nature participate in OPTION tracking\n+    requestHeader.getNVPairs().forEach((n, v) -> operation.setOption(n, v.toString()));\n     operation.publishOperationName();\n \n-    List<Beneficiary> matchingBeneficiaries =\n-        fetchBeneficiaries(coverageId, includeIdentifiersValues, paging);\n+    // BFD379: do address fields participate in mathing?", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzMzM2ODEwOnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxNjo0MzowNVrOIXHthA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxNjo0MzowNVrOIXHthA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTExNDUwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param requestHeader the {@link #RequestHeaders} where resource request headers encapsulated\n          \n          \n            \n               * @param requestHeader the {@link #RequestHeaders} where resource request headers are encapsulated", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r561114500", "createdAt": "2021-01-20T16:43:05Z", "author": {"login": "jzulim"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -553,43 +563,36 @@ public Bundle searchByIdentifier(\n \n   /**\n    * @param hicnHash the {@link Beneficiary#getHicn()} hash value to match\n-   * @param includeIdentifiersValues the {@link #returnIncludeIdentifiersValues(RequestDetails)}\n-   *     value to use\n+   * @param requestHeader the {@link #RequestHeaders} where resource request headers encapsulated", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 214}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzMzM3MDMzOnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxNjo0MzozOVrOIXHvAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxNjo0MzozOVrOIXHvAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTExNDg4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param requestHeader the {@link #RequestHeaders} where resource request headers encapsulated\n          \n          \n            \n               * @param requestHeader the {@link #RequestHeaders} where resource request headers are encapsulated", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r561114880", "createdAt": "2021-01-20T16:43:39Z", "author": {"login": "jzulim"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -553,43 +563,36 @@ public Bundle searchByIdentifier(\n \n   /**\n    * @param hicnHash the {@link Beneficiary#getHicn()} hash value to match\n-   * @param includeIdentifiersValues the {@link #returnIncludeIdentifiersValues(RequestDetails)}\n-   *     value to use\n+   * @param requestHeader the {@link #RequestHeaders} where resource request headers encapsulated\n    * @return a FHIR {@link Patient} for the CCW {@link Beneficiary} that matches the specified\n    *     {@link Beneficiary#getHicn()} hash value\n    * @throws NoResultException A {@link NoResultException} will be thrown if no matching {@link\n    *     Beneficiary} can be found\n    */\n   @Trace\n-  private Patient queryDatabaseByHicnHash(String hicnHash, List<String> includeIdentifiersValues) {\n+  private Patient queryDatabaseByHicnHash(String hicnHash, RequestHeaders requestHeader) {\n     return queryDatabaseByHash(\n-        hicnHash, \"hicn\", includeIdentifiersValues, Beneficiary_.hicn, BeneficiaryHistory_.hicn);\n+        hicnHash, \"hicn\", Beneficiary_.hicn, BeneficiaryHistory_.hicn, requestHeader);\n   }\n \n   /**\n    * @param mbiHash the {@link Beneficiary#getMbiHash()} ()} hash value to match\n-   * @param includeIdentifiersValues the {@link #returnIncludeIdentifiersValues(RequestDetails)}\n-   *     value to use\n+   * @param requestHeader the {@link #RequestHeaders} where resource request headers encapsulated\n    * @return a FHIR {@link Patient} for the CCW {@link Beneficiary} that matches the specified\n    *     {@link Beneficiary#getMbiHash()} ()} hash value\n    * @throws NoResultException A {@link NoResultException} will be thrown if no matching {@link\n    *     Beneficiary} can be found\n    */\n   @Trace\n-  private Patient queryDatabaseByMbiHash(String mbiHash, List<String> includeIdentifiersValues) {\n+  private Patient queryDatabaseByMbiHash(String mbiHash, RequestHeaders requestHeader) {\n     return queryDatabaseByHash(\n-        mbiHash,\n-        \"mbi\",\n-        includeIdentifiersValues,\n-        Beneficiary_.mbiHash,\n-        BeneficiaryHistory_.mbiHash);\n+        mbiHash, \"mbi\", Beneficiary_.mbiHash, BeneficiaryHistory_.mbiHash, requestHeader);\n   }\n \n   /**\n    * @param hash the {@link Beneficiary} hash value to match\n    * @param hashType a string to represent the hash type (used for logging purposes)\n-   * @param includeIdentifiersValues the {@link #returnIncludeIdentifiersValues(RequestDetails)}\n-   *     value to use\n+   * @param requestHeader the {@link #RequestHeaders} where resource request headers encapsulated", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 255}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzMzQwNjM4OnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/BeneficiaryTransformer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxNjo1MTo1OFrOIXIF1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxNjo1MTo1OFrOIXIF1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTEyMDcyNg==", "bodyText": "Please add this change to R4BeneficiaryTransformer.java as well.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r561120726", "createdAt": "2021-01-20T16:51:58Z", "author": {"login": "jzulim"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/BeneficiaryTransformer.java", "diffHunk": "@@ -65,18 +65,17 @@\n    * @param metricRegistry the {@link MetricRegistry} to use\n    * @param beneficiary the CCW {@link Beneficiary} to transform\n    * @param includeIdentifiersValues the includeIdentifiers header values to use\n+   * @param includeAddressFields the boolean flag includeAddressFields derived from header", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzMzQwODg1OnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxNjo1MjozM1rOIXIHag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxNjo1MjozM1rOIXIHag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTEyMTEzMA==", "bodyText": "Please add this change to R4PatientResourceProvider.java as well.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r561121130", "createdAt": "2021-01-20T16:52:33Z", "author": {"login": "jzulim"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -121,21 +121,22 @@ public Patient read(@IdParam IdType patientId, RequestDetails requestDetails) {\n     String beneIdText = patientId.getIdPart();\n     if (beneIdText == null || beneIdText.trim().isEmpty()) throw new IllegalArgumentException();\n \n-    List<String> includeIdentifiersValues = returnIncludeIdentifiersValues(requestDetails);\n+    RequestHeaders requestHeader = RequestHeaders.getHeaderWrapper(requestDetails);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzMzQxMzIwOnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/RequestHeaders.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxNjo1Mzo0NFrOIXIKLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxNjo1Mzo0NFrOIXIKLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTEyMTgzOQ==", "bodyText": "Will you consider refactoring this to be included in the ../commons so it can be shared across V1 (stu3) and V2 (R4)?", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r561121839", "createdAt": "2021-01-20T16:53:44Z", "author": {"login": "jzulim"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/RequestHeaders.java", "diffHunk": "@@ -0,0 +1,157 @@\n+package gov.cms.bfd.server.war.stu3.providers;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU3MjE2NjY4OnYy", "diffSide": "LEFT", "path": "apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/stu3/providers/ExtraParamsInterceptor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQyMDo0NDozMFrOIc0COw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQyMDo0NDozMFrOIc0COw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzA4MzU3OQ==", "bodyText": "@JFU-GIT - Looks like a recent merge removed your comments. These should go back. Apologies.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r567083579", "createdAt": "2021-01-29T20:44:30Z", "author": {"login": "jzulim"}, "path": "apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/stu3/providers/ExtraParamsInterceptor.java", "diffHunk": "@@ -10,25 +10,16 @@\n /** A HAPI {@link IClientInterceptor} that allows us to add HTTP headers to our requests. */\n public class ExtraParamsInterceptor implements IClientInterceptor {\n   private RequestHeaders requestHeader;\n-  // private IHttpRequest theRequest;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU4NDQzNzkyOnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/commons/RequestHeaders.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQxOToyNzo1MFrOIehMTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQxOTo1OTo0M1rOIeiWlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODg3MjAxNQ==", "bodyText": "@jfuqian Can you detail the reason for failing requests if these request headers arent populated? These should be optional, and the default to false I believe. What was your thinking with this?", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r568872015", "createdAt": "2021-02-02T19:27:50Z", "author": {"login": "jzulim"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/commons/RequestHeaders.java", "diffHunk": "@@ -0,0 +1,207 @@\n+package gov.cms.bfd.server.war.commons;\n+\n+import ca.uhn.fhir.rest.api.server.RequestDetails;\n+import ca.uhn.fhir.rest.server.exceptions.InvalidRequestException;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A per request instance holds all resource (FHIR) request headers, such as: \"includeIdentifiers\"\n+ * {@link PatientResourceProvider#HEADER_NAME_INCLUDE_IDENTIFIERS} \"includeAddressFields\" {@link\n+ * PatientResourceProvider#HEADER_NAME_INCLUDE_ADDRESS_FIELDS} which serve as part of BFD API\n+ */\n+public class RequestHeaders {\n+  RequestDetails requestDetails;\n+  Map<String, Object> headerNVs = new HashMap<String, Object>();\n+\n+  private RequestHeaders(RequestDetails requestDetails) {\n+    this.requestDetails = requestDetails;\n+    // parse headers\n+    CommonHeaders.FHIR_REQUEST_HEADERS.forEach(\n+        (h) -> {\n+          String v = this.requestDetails.getHeader(h);\n+          if (h.equals(CommonHeaders.HEADER_NAME_INCLUDE_ADDRESS_FIELDS)) {\n+            this.headerNVs.put(h, returnIncludeAddressFieldsValue(v));\n+          }\n+          if (h.equals(CommonHeaders.HEADER_NAME_INCLUDE_IDENTIFIERS)) {\n+            this.headerNVs.put(h, returnIncludeIdentifiersValues(v));\n+          }\n+        });\n+  }\n+\n+  /**\n+   * instantiate an empty RH, used by tests\n+   *\n+   * @param requestDetails\n+   */\n+  private RequestHeaders() {}\n+\n+  /**\n+   * currently used by internal code to create a RH instance with ad hoc header/value pairs for\n+   * testing code\n+   *\n+   * @param hdrValues the header/value pairs\n+   */\n+  private RequestHeaders(String... hdrValues) {\n+    // convert h1 v1, h2 v2, ... into nv pairs\n+    if (hdrValues == null || hdrValues.length % 2 != 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa2f49b1f2d1e1f95050b5225d23d89c62f655f4"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODg5MTAyOQ==", "bodyText": "that constructor is used for tests only.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r568891029", "createdAt": "2021-02-02T19:59:43Z", "author": {"login": "JFU-GIT"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/commons/RequestHeaders.java", "diffHunk": "@@ -0,0 +1,207 @@\n+package gov.cms.bfd.server.war.commons;\n+\n+import ca.uhn.fhir.rest.api.server.RequestDetails;\n+import ca.uhn.fhir.rest.server.exceptions.InvalidRequestException;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A per request instance holds all resource (FHIR) request headers, such as: \"includeIdentifiers\"\n+ * {@link PatientResourceProvider#HEADER_NAME_INCLUDE_IDENTIFIERS} \"includeAddressFields\" {@link\n+ * PatientResourceProvider#HEADER_NAME_INCLUDE_ADDRESS_FIELDS} which serve as part of BFD API\n+ */\n+public class RequestHeaders {\n+  RequestDetails requestDetails;\n+  Map<String, Object> headerNVs = new HashMap<String, Object>();\n+\n+  private RequestHeaders(RequestDetails requestDetails) {\n+    this.requestDetails = requestDetails;\n+    // parse headers\n+    CommonHeaders.FHIR_REQUEST_HEADERS.forEach(\n+        (h) -> {\n+          String v = this.requestDetails.getHeader(h);\n+          if (h.equals(CommonHeaders.HEADER_NAME_INCLUDE_ADDRESS_FIELDS)) {\n+            this.headerNVs.put(h, returnIncludeAddressFieldsValue(v));\n+          }\n+          if (h.equals(CommonHeaders.HEADER_NAME_INCLUDE_IDENTIFIERS)) {\n+            this.headerNVs.put(h, returnIncludeIdentifiersValues(v));\n+          }\n+        });\n+  }\n+\n+  /**\n+   * instantiate an empty RH, used by tests\n+   *\n+   * @param requestDetails\n+   */\n+  private RequestHeaders() {}\n+\n+  /**\n+   * currently used by internal code to create a RH instance with ad hoc header/value pairs for\n+   * testing code\n+   *\n+   * @param hdrValues the header/value pairs\n+   */\n+  private RequestHeaders(String... hdrValues) {\n+    // convert h1 v1, h2 v2, ... into nv pairs\n+    if (hdrValues == null || hdrValues.length % 2 != 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODg3MjAxNQ=="}, "originalCommit": {"oid": "aa2f49b1f2d1e1f95050b5225d23d89c62f655f4"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU4NDQzOTY1OnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/commons/RequestHeaders.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQxOToyODoxM1rOIehNSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQxOTo1OToyM1rOIeiVyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODg3MjI2NA==", "bodyText": "Similar Question, what's the purpose for checking for brackets?", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r568872264", "createdAt": "2021-02-02T19:28:13Z", "author": {"login": "jzulim"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/commons/RequestHeaders.java", "diffHunk": "@@ -0,0 +1,207 @@\n+package gov.cms.bfd.server.war.commons;\n+\n+import ca.uhn.fhir.rest.api.server.RequestDetails;\n+import ca.uhn.fhir.rest.server.exceptions.InvalidRequestException;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A per request instance holds all resource (FHIR) request headers, such as: \"includeIdentifiers\"\n+ * {@link PatientResourceProvider#HEADER_NAME_INCLUDE_IDENTIFIERS} \"includeAddressFields\" {@link\n+ * PatientResourceProvider#HEADER_NAME_INCLUDE_ADDRESS_FIELDS} which serve as part of BFD API\n+ */\n+public class RequestHeaders {\n+  RequestDetails requestDetails;\n+  Map<String, Object> headerNVs = new HashMap<String, Object>();\n+\n+  private RequestHeaders(RequestDetails requestDetails) {\n+    this.requestDetails = requestDetails;\n+    // parse headers\n+    CommonHeaders.FHIR_REQUEST_HEADERS.forEach(\n+        (h) -> {\n+          String v = this.requestDetails.getHeader(h);\n+          if (h.equals(CommonHeaders.HEADER_NAME_INCLUDE_ADDRESS_FIELDS)) {\n+            this.headerNVs.put(h, returnIncludeAddressFieldsValue(v));\n+          }\n+          if (h.equals(CommonHeaders.HEADER_NAME_INCLUDE_IDENTIFIERS)) {\n+            this.headerNVs.put(h, returnIncludeIdentifiersValues(v));\n+          }\n+        });\n+  }\n+\n+  /**\n+   * instantiate an empty RH, used by tests\n+   *\n+   * @param requestDetails\n+   */\n+  private RequestHeaders() {}\n+\n+  /**\n+   * currently used by internal code to create a RH instance with ad hoc header/value pairs for\n+   * testing code\n+   *\n+   * @param hdrValues the header/value pairs\n+   */\n+  private RequestHeaders(String... hdrValues) {\n+    // convert h1 v1, h2 v2, ... into nv pairs\n+    if (hdrValues == null || hdrValues.length % 2 != 0) {\n+      throw new IllegalArgumentException(\n+          \"Header Value string not valid - must be in pairs like h1, v1, h2, v2, ...: \"\n+              + hdrValues);\n+    }\n+    Map<String, String> nvPairs = new HashMap<String, String>();\n+    String curKey = null;\n+    for (String s : hdrValues) {\n+      if (s.startsWith(\"[\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa2f49b1f2d1e1f95050b5225d23d89c62f655f4"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODg5MDUzOQ==", "bodyText": "OH, need to remove  the whole if ..., that was added while debugging an error, now that should never occur.\n  if (s.startsWith(\"[\")) {\n    String stackStr = \"CALLSTACK:\";\n    for (StackTraceElement ste : Thread.currentThread().getStackTrace()) {\n      stackStr = stackStr + ste.toString();\n    }\n    throw new InvalidRequestException(\n        \"got header value with BRACKET: \" + s + \", CALLSTACK:\" + stackStr);\n  }", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r568890539", "createdAt": "2021-02-02T19:58:52Z", "author": {"login": "JFU-GIT"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/commons/RequestHeaders.java", "diffHunk": "@@ -0,0 +1,207 @@\n+package gov.cms.bfd.server.war.commons;\n+\n+import ca.uhn.fhir.rest.api.server.RequestDetails;\n+import ca.uhn.fhir.rest.server.exceptions.InvalidRequestException;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A per request instance holds all resource (FHIR) request headers, such as: \"includeIdentifiers\"\n+ * {@link PatientResourceProvider#HEADER_NAME_INCLUDE_IDENTIFIERS} \"includeAddressFields\" {@link\n+ * PatientResourceProvider#HEADER_NAME_INCLUDE_ADDRESS_FIELDS} which serve as part of BFD API\n+ */\n+public class RequestHeaders {\n+  RequestDetails requestDetails;\n+  Map<String, Object> headerNVs = new HashMap<String, Object>();\n+\n+  private RequestHeaders(RequestDetails requestDetails) {\n+    this.requestDetails = requestDetails;\n+    // parse headers\n+    CommonHeaders.FHIR_REQUEST_HEADERS.forEach(\n+        (h) -> {\n+          String v = this.requestDetails.getHeader(h);\n+          if (h.equals(CommonHeaders.HEADER_NAME_INCLUDE_ADDRESS_FIELDS)) {\n+            this.headerNVs.put(h, returnIncludeAddressFieldsValue(v));\n+          }\n+          if (h.equals(CommonHeaders.HEADER_NAME_INCLUDE_IDENTIFIERS)) {\n+            this.headerNVs.put(h, returnIncludeIdentifiersValues(v));\n+          }\n+        });\n+  }\n+\n+  /**\n+   * instantiate an empty RH, used by tests\n+   *\n+   * @param requestDetails\n+   */\n+  private RequestHeaders() {}\n+\n+  /**\n+   * currently used by internal code to create a RH instance with ad hoc header/value pairs for\n+   * testing code\n+   *\n+   * @param hdrValues the header/value pairs\n+   */\n+  private RequestHeaders(String... hdrValues) {\n+    // convert h1 v1, h2 v2, ... into nv pairs\n+    if (hdrValues == null || hdrValues.length % 2 != 0) {\n+      throw new IllegalArgumentException(\n+          \"Header Value string not valid - must be in pairs like h1, v1, h2, v2, ...: \"\n+              + hdrValues);\n+    }\n+    Map<String, String> nvPairs = new HashMap<String, String>();\n+    String curKey = null;\n+    for (String s : hdrValues) {\n+      if (s.startsWith(\"[\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODg3MjI2NA=="}, "originalCommit": {"oid": "aa2f49b1f2d1e1f95050b5225d23d89c62f655f4"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODg5MDgyNQ==", "bodyText": "and this part of code is only called by tests.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r568890825", "createdAt": "2021-02-02T19:59:23Z", "author": {"login": "JFU-GIT"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/commons/RequestHeaders.java", "diffHunk": "@@ -0,0 +1,207 @@\n+package gov.cms.bfd.server.war.commons;\n+\n+import ca.uhn.fhir.rest.api.server.RequestDetails;\n+import ca.uhn.fhir.rest.server.exceptions.InvalidRequestException;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A per request instance holds all resource (FHIR) request headers, such as: \"includeIdentifiers\"\n+ * {@link PatientResourceProvider#HEADER_NAME_INCLUDE_IDENTIFIERS} \"includeAddressFields\" {@link\n+ * PatientResourceProvider#HEADER_NAME_INCLUDE_ADDRESS_FIELDS} which serve as part of BFD API\n+ */\n+public class RequestHeaders {\n+  RequestDetails requestDetails;\n+  Map<String, Object> headerNVs = new HashMap<String, Object>();\n+\n+  private RequestHeaders(RequestDetails requestDetails) {\n+    this.requestDetails = requestDetails;\n+    // parse headers\n+    CommonHeaders.FHIR_REQUEST_HEADERS.forEach(\n+        (h) -> {\n+          String v = this.requestDetails.getHeader(h);\n+          if (h.equals(CommonHeaders.HEADER_NAME_INCLUDE_ADDRESS_FIELDS)) {\n+            this.headerNVs.put(h, returnIncludeAddressFieldsValue(v));\n+          }\n+          if (h.equals(CommonHeaders.HEADER_NAME_INCLUDE_IDENTIFIERS)) {\n+            this.headerNVs.put(h, returnIncludeIdentifiersValues(v));\n+          }\n+        });\n+  }\n+\n+  /**\n+   * instantiate an empty RH, used by tests\n+   *\n+   * @param requestDetails\n+   */\n+  private RequestHeaders() {}\n+\n+  /**\n+   * currently used by internal code to create a RH instance with ad hoc header/value pairs for\n+   * testing code\n+   *\n+   * @param hdrValues the header/value pairs\n+   */\n+  private RequestHeaders(String... hdrValues) {\n+    // convert h1 v1, h2 v2, ... into nv pairs\n+    if (hdrValues == null || hdrValues.length % 2 != 0) {\n+      throw new IllegalArgumentException(\n+          \"Header Value string not valid - must be in pairs like h1, v1, h2, v2, ...: \"\n+              + hdrValues);\n+    }\n+    Map<String, String> nvPairs = new HashMap<String, String>();\n+    String curKey = null;\n+    for (String s : hdrValues) {\n+      if (s.startsWith(\"[\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODg3MjI2NA=="}, "originalCommit": {"oid": "aa2f49b1f2d1e1f95050b5225d23d89c62f655f4"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU4NTYzMDk5OnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/stu3/providers/BeneficiaryTransformerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wM1QwMTo0NDozNlrOIesXWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wM1QwMTo0NDozNlrOIesXWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTA1NTA2NA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/390#discussion_r569055064", "createdAt": "2021-02-03T01:44:36Z", "author": {"login": "jzulim"}, "path": "apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/stu3/providers/BeneficiaryTransformerTest.java", "diffHunk": "@@ -367,5 +417,70 @@ else if (beneficiary.getSex() == Sex.FEMALE.getCode())\n           CcwCodebookVariable.RFRNC_YR, beneficiary.getBeneEnrollmentReferenceYear(), patient);\n \n     TransformerTestUtils.assertLastUpdatedEquals(beneficiary.getLastUpdated(), patient);\n+\n+    Boolean inclAddrFlds =\n+        (Boolean)\n+            requestHeader.getValue(PatientResourceProvider.HEADER_NAME_INCLUDE_ADDRESS_FIELDS);\n+\n+    if (inclAddrFlds != null && inclAddrFlds) {\n+      Assert.assertEquals(1, patient.getAddress().size());\n+      // assert address fields etc.\n+      Assert.assertEquals(beneficiary.getStateCode(), patient.getAddress().get(0).getState());\n+      // assert CountyCode is no longer mapped\n+      Assert.assertNull(patient.getAddress().get(0).getDistrict());\n+      Assert.assertEquals(beneficiary.getPostalCode(), patient.getAddress().get(0).getPostalCode());\n+      Assert.assertEquals(\n+          beneficiary.getDerivedCityName().orElse(null), patient.getAddress().get(0).getCity());\n+\n+      Assert.assertEquals(\n+          beneficiary.getDerivedMailingAddress1().orElse(\"\"),\n+          patient.getAddress().get(0).getLine().get(0).getValueNotNull());\n+      Assert.assertEquals(\n+          beneficiary.getDerivedMailingAddress2().orElse(\"\"),\n+          patient.getAddress().get(0).getLine().get(1).getValueNotNull());\n+      Assert.assertEquals(\n+          beneficiary.getDerivedMailingAddress3().orElse(\"\"),\n+          patient.getAddress().get(0).getLine().get(2).getValueNotNull());\n+      Assert.assertEquals(\n+          beneficiary.getDerivedMailingAddress4().orElse(\"\"),\n+          patient.getAddress().get(0).getLine().get(3).getValueNotNull());\n+      Assert.assertEquals(\n+          beneficiary.getDerivedMailingAddress5().orElse(\"\"),\n+          patient.getAddress().get(0).getLine().get(4).getValueNotNull());\n+      Assert.assertEquals(\n+          beneficiary.getDerivedMailingAddress6().orElse(\"\"),\n+          patient.getAddress().get(0).getLine().get(5).getValueNotNull());\n+    } else {\n+      Assert.assertEquals(1, patient.getAddress().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1e8c4475f9766cdebf3d7547844e284c1f69101"}, "originalPosition": 254}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 184, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}