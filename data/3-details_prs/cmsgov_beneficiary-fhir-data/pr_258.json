{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NDMxNDg5", "number": 258, "title": "BLUEBUTTON-2002 Return synthetic resources with negative IDs", "bodyText": "Change Details\nNOTE: This is a continuation of a previous PR with the target branch moved local.  Please reference  that PR for previous review comments at:  #175\nSummary:\nA regex for parsing the format of EoB and Coverage resource read requests did not successfully parse synthetic Resource read requests due to their negative IDs. The result was that no synthetic EoB or Coverage resources were found on Read requests.\nThis updates those regex to allow for the IDs of these Resources to be negative.\nThe following was performed:\n\nMoved the target branch to local and created a new PR so that this works with our deployment process.\nFor the Coverage and EOB read() ID parameter, changed the exception from ResourceNotFoundException to IllegalArgumentException when an IdText does not match the expected Regex pattern. I believe this failed match should be invalid rather than indicating an ID was not found.\nUpdated the IT tests for Coverage and EOB read() methods to test that the ID parameters work as expected for negative IDs and IDs that do not pass the regex pattern for a valid format.\nUpdated comments per Karl's review suggestions.\n\nAcceptance Validation\n\nThat Coverage and EOB read() requests are able to handle negative IDs.\nThat Coverage and EOB read() requests with an invalid format ID throw an  IllegalArgumentException exception.\nThat IT tests are updated to test negative IDs and invalid format.\n\nExternal References\n\nBLUEBUTTON-2002\nBFD-155\n\nSecurity Implications\n\n\n new software dependencies\n\n\n\n altered security controls\n\n\n\n new data stored or transmitted\n\n\n\n security checklist is completed for this change\n\n\n\n requires more information or team discussion to evaluate security implications", "createdAt": "2020-04-22T17:27:43Z", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258", "merged": true, "mergeCommit": {"oid": "2af91c4ff6f4efc09ec0836df464f8d1dca6eb22"}, "closed": true, "closedAt": "2020-05-07T14:50:36Z", "author": {"login": "dtisza1"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccE7QFAFqTQwMTkwNTIwOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABce-TyKAFqTQwNzU0MDA5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxOTA1MjA4", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#pullrequestreview-401905208", "createdAt": "2020-04-28T14:40:17Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDo0MDoxN1rOGNXdiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDo0MDoxN1rOGNXdiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY2OTA2NA==", "bodyText": "Does this change make sense to do? Does it have a potential to cause any incompatibility issues?\nI believe that the exception here should indicate that the ID parameter pattern is invalid rather than not found. This also enables the ability to more easily test this via the IT tests.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#discussion_r416669064", "createdAt": "2020-04-28T14:40:17Z", "author": {"login": "dtisza1"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/CoverageResourceProvider.java", "diffHunk": "@@ -85,7 +86,9 @@ public Coverage read(@IdParam IdType coverageId) {\n       throw new IllegalArgumentException();\n \n     Matcher coverageIdMatcher = COVERAGE_ID_PATTERN.matcher(coverageIdText);\n-    if (!coverageIdMatcher.matches()) throw new ResourceNotFoundException(coverageId);\n+    if (!coverageIdMatcher.matches())\n+      throw new IllegalArgumentException(\"Unsupported ID pattern: \" + coverageIdText);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxOTA1NjIz", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#pullrequestreview-401905623", "createdAt": "2020-04-28T14:40:40Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDo0MDo0MFrOGNXepw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDo0MDo0MFrOGNXepw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY2OTM1MQ==", "bodyText": "Does this change make sense to do? Does it have a potential to cause any incompatibility issues?\nI believe that the exception here should indicate that the ID parameter pattern is invalid rather than not found. This also enables the ability to more easily test this via the IT tests.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#discussion_r416669351", "createdAt": "2020-04-28T14:40:40Z", "author": {"login": "dtisza1"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/ExplanationOfBenefitResourceProvider.java", "diffHunk": "@@ -102,7 +102,9 @@ public ExplanationOfBenefit read(@IdParam IdType eobId) {\n     if (eobIdText == null || eobIdText.trim().isEmpty()) throw new IllegalArgumentException();\n \n     Matcher eobIdMatcher = EOB_ID_PATTERN.matcher(eobIdText);\n-    if (!eobIdMatcher.matches()) throw new ResourceNotFoundException(eobId);\n+    if (!eobIdMatcher.matches())\n+      throw new IllegalArgumentException(\"Unsupported ID pattern: \" + eobIdText);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MDA0MTc5", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#pullrequestreview-405004179", "createdAt": "2020-05-04T13:48:57Z", "commit": null, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMzo0ODo1OFrOGQBMXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMzo0ODo1OFrOGQBMXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ0OTk0OA==", "bodyText": "I agree that this change makes sense and is helpful. We shouldn't try to preserve bad exceptions for assumed compatibility.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#discussion_r419449948", "createdAt": "2020-05-04T13:48:58Z", "author": {"login": "RickHawesUSDS"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/CoverageResourceProvider.java", "diffHunk": "@@ -85,7 +86,9 @@ public Coverage read(@IdParam IdType coverageId) {\n       throw new IllegalArgumentException();\n \n     Matcher coverageIdMatcher = COVERAGE_ID_PATTERN.matcher(coverageIdText);\n-    if (!coverageIdMatcher.matches()) throw new ResourceNotFoundException(coverageId);\n+    if (!coverageIdMatcher.matches())\n+      throw new IllegalArgumentException(\"Unsupported ID pattern: \" + coverageIdText);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY2OTA2NA=="}, "originalCommit": null, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MDA4NDgz", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#pullrequestreview-405008483", "createdAt": "2020-05-04T13:53:51Z", "commit": null, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1ODc2MDY3", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#pullrequestreview-405876067", "createdAt": "2020-05-05T15:00:25Z", "commit": null, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "98056186907ddeef1aa21ee6723a3c5b306d7f99", "author": {"user": {"login": "whytheplatypus", "name": "David Gage"}}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/98056186907ddeef1aa21ee6723a3c5b306d7f99", "committedDate": "2020-05-06T17:08:16Z", "message": "Return synthetic resources with negative IDs\n\nA regex for parsing the format of EoB and Coverage resource\nread requests did not successfully parse synthetic\nResource read requests due to their negative IDs.\nThe result was that no synthetic EoB or Coverage resources\nwere found on Read requests.\n\nThis updates those regex to allow for the IDs of these\nResources to be negative."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8f67ba7e435a1e282f99dcd40b9dfbca228c28f", "author": {"user": {"login": "dtisza1", "name": "David Tisza"}}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/b8f67ba7e435a1e282f99dcd40b9dfbca228c28f", "committedDate": "2020-05-06T17:08:16Z", "message": "Throw IllegalArgumentException on invalid eobId\n\nThis changes the exception from ResourceNotFoundException\nto IllegalArgumentException when the eobIdText does not\nmatch the expected Regex pattern. This parameter is\ninvalid rather than indicating an eobId was not found."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f10c8ccee2a606e502714c2b1c9808b237224f0", "author": {"user": {"login": "dtisza1", "name": "David Tisza"}}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/0f10c8ccee2a606e502714c2b1c9808b237224f0", "committedDate": "2020-05-06T17:08:16Z", "message": "Throw IllegalArgumentException for invalid ID\n\nThis changes the exception from ResourceNotFoundException\nto IllegalArgumentException when the coverageIdText does not\nmatch the expected Regex pattern. This parameter is\ninvalid rather than indicating an covargeId was not found."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a928400763635b087bbfa1e35c0d83e2d889799", "author": {"user": {"login": "dtisza1", "name": "David Tisza"}}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/6a928400763635b087bbfa1e35c0d83e2d889799", "committedDate": "2020-05-06T17:08:16Z", "message": "Update IT tests for negative and invalid IDs\n\nThis updates the IT tests for Coverage and EOB read()\nmethods to test that the ID parameters work as expected\nfor negative IDs and IDs that do not pass the regex\npattern for a valid format."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cdfbfcf004c101505c0a48311fd60df4acb12ac", "author": {"user": {"login": "dtisza1", "name": "David Tisza"}}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/0cdfbfcf004c101505c0a48311fd60df4acb12ac", "committedDate": "2020-05-06T17:08:16Z", "message": "Update comments per Karl's suggestion"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "0cdfbfcf004c101505c0a48311fd60df4acb12ac", "author": {"user": {"login": "dtisza1", "name": "David Tisza"}}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/0cdfbfcf004c101505c0a48311fd60df4acb12ac", "committedDate": "2020-05-06T17:08:16Z", "message": "Update comments per Karl's suggestion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2OTkyNjAz", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#pullrequestreview-406992603", "createdAt": "2020-05-06T21:15:19Z", "commit": {"oid": "0cdfbfcf004c101505c0a48311fd60df4acb12ac"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NTQwMDk3", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#pullrequestreview-407540097", "createdAt": "2020-05-07T14:39:32Z", "commit": {"oid": "0cdfbfcf004c101505c0a48311fd60df4acb12ac"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 732, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}