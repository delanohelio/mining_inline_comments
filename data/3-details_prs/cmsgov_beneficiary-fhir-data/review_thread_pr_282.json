{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NjY3Mzkz", "number": 282, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNTowNDo0M1rOD-Q0OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNTowNDo0M1rOD-Q0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjEzODE2OnYy", "diffSide": "RIGHT", "path": "insights/scripts/bb2/apps.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNTowNDo0M1rOGYQW_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxOTo1ODozMVrOGYbs2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA4NzAzOQ==", "bodyText": "I'm a little confused by this part, we only want to login 1 out of 20 times?", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/282#discussion_r428087039", "createdAt": "2020-05-20T15:04:43Z", "author": {"login": "adaykin"}, "path": "insights/scripts/bb2/apps.py", "diffHunk": "@@ -0,0 +1,79 @@\n+import random\n+import events\n+from datetime import datetime, timedelta\n+\n+class App:  \n+  def generate_session(self, start_time: datetime, bene):\n+    return []\n+\n+  def random_hash(self):\n+    hex_letters = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f']\n+    return ''.join(random.choice(hex_letters) for _ in range(32))\n+\n+class Humana(App):\n+  def app_id(self):\n+    return 13\n+  \n+  def app_name(self):\n+    return \"Humana\"\n+  \n+  def dev_id(self):\n+    return 180\n+  \n+  def dev_name(self):\n+    return \"mscrimshire+humana@gmail.com\"\n+\n+  def generate_session(self, start_time: datetime, bene):\n+    token_hash = self.random_hash()\n+    current_time = start_time\n+    call_period = timedelta(seconds=0.4)\n+\n+    if random.randint(0,30) == 0: \n+      yield events.my_medicare_login(bene, self, current_time)\n+      current_time += call_period\n+\n+    yield events.token_response(bene, self, current_time, token_hash)\n+    current_time += call_period\n+\n+    for _ in range(random.randint(1, 9)):\n+      yield events.eob_response(bene, self, current_time, token_hash)\n+      current_time += call_period\n+\n+    yield events.patient_response(bene, self, current_time, token_hash)\n+\n+\n+class Evidation(App):\n+  def app_id(self):\n+    return 32\n+  \n+  def app_name(self):\n+    return \"Evidation on behalf of Heartline\"\n+  \n+  def dev_id(self):\n+    return  11770\n+  \n+  def dev_name(self):\n+    return \"mscrimshire+evidationheartline@gmail.com\"\n+\n+  def generate_session(self, start_time: datetime, bene):\n+    token_hash = self.random_hash()\n+    current_time = start_time\n+    call_period = timedelta(seconds=0.3)\n+\n+    if random.randint(0,20) == 0: ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0129cca24836fb2b6361e28a98e3381fda3449d"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI3Mjg1OA==", "bodyText": "Once a user logs into a BB2 app, they usually do not need to log in again. So, only a small percentage of BB2 sessions include the login step. Anyway, that behavior is being simulated here.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/282#discussion_r428272858", "createdAt": "2020-05-20T19:58:31Z", "author": {"login": "RickHawesUSDS"}, "path": "insights/scripts/bb2/apps.py", "diffHunk": "@@ -0,0 +1,79 @@\n+import random\n+import events\n+from datetime import datetime, timedelta\n+\n+class App:  \n+  def generate_session(self, start_time: datetime, bene):\n+    return []\n+\n+  def random_hash(self):\n+    hex_letters = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f']\n+    return ''.join(random.choice(hex_letters) for _ in range(32))\n+\n+class Humana(App):\n+  def app_id(self):\n+    return 13\n+  \n+  def app_name(self):\n+    return \"Humana\"\n+  \n+  def dev_id(self):\n+    return 180\n+  \n+  def dev_name(self):\n+    return \"mscrimshire+humana@gmail.com\"\n+\n+  def generate_session(self, start_time: datetime, bene):\n+    token_hash = self.random_hash()\n+    current_time = start_time\n+    call_period = timedelta(seconds=0.4)\n+\n+    if random.randint(0,30) == 0: \n+      yield events.my_medicare_login(bene, self, current_time)\n+      current_time += call_period\n+\n+    yield events.token_response(bene, self, current_time, token_hash)\n+    current_time += call_period\n+\n+    for _ in range(random.randint(1, 9)):\n+      yield events.eob_response(bene, self, current_time, token_hash)\n+      current_time += call_period\n+\n+    yield events.patient_response(bene, self, current_time, token_hash)\n+\n+\n+class Evidation(App):\n+  def app_id(self):\n+    return 32\n+  \n+  def app_name(self):\n+    return \"Evidation on behalf of Heartline\"\n+  \n+  def dev_id(self):\n+    return  11770\n+  \n+  def dev_name(self):\n+    return \"mscrimshire+evidationheartline@gmail.com\"\n+\n+  def generate_session(self, start_time: datetime, bene):\n+    token_hash = self.random_hash()\n+    current_time = start_time\n+    call_period = timedelta(seconds=0.3)\n+\n+    if random.randint(0,20) == 0: ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA4NzAzOQ=="}, "originalCommit": {"oid": "d0129cca24836fb2b6361e28a98e3381fda3449d"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 365, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}