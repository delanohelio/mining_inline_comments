{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NDMxNDg5", "number": 258, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDo0MDoxN1rOD3OmqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDo0MDo0MFrOD3OnZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjM3NTQ0OnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/CoverageResourceProvider.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDo0MDoxN1rOGNXdiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMzo0ODo1OFrOGQBMXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY2OTA2NA==", "bodyText": "Does this change make sense to do? Does it have a potential to cause any incompatibility issues?\nI believe that the exception here should indicate that the ID parameter pattern is invalid rather than not found. This also enables the ability to more easily test this via the IT tests.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#discussion_r416669064", "createdAt": "2020-04-28T14:40:17Z", "author": {"login": "dtisza1"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/CoverageResourceProvider.java", "diffHunk": "@@ -85,7 +86,9 @@ public Coverage read(@IdParam IdType coverageId) {\n       throw new IllegalArgumentException();\n \n     Matcher coverageIdMatcher = COVERAGE_ID_PATTERN.matcher(coverageIdText);\n-    if (!coverageIdMatcher.matches()) throw new ResourceNotFoundException(coverageId);\n+    if (!coverageIdMatcher.matches())\n+      throw new IllegalArgumentException(\"Unsupported ID pattern: \" + coverageIdText);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc2Nzk5OA==", "bodyText": "NOTE:  The java.lang.IllegalArgumentException results in a ca.uhn.fhir.rest.server.exceptions.InvalidRequestException exception here as seen in the IT tests. Was following other related code examples, but should these all be changed to InvalidRequestException?", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#discussion_r416767998", "createdAt": "2020-04-28T16:48:59Z", "author": {"login": "dtisza1"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/CoverageResourceProvider.java", "diffHunk": "@@ -85,7 +86,9 @@ public Coverage read(@IdParam IdType coverageId) {\n       throw new IllegalArgumentException();\n \n     Matcher coverageIdMatcher = COVERAGE_ID_PATTERN.matcher(coverageIdText);\n-    if (!coverageIdMatcher.matches()) throw new ResourceNotFoundException(coverageId);\n+    if (!coverageIdMatcher.matches())\n+      throw new IllegalArgumentException(\"Unsupported ID pattern: \" + coverageIdText);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY2OTA2NA=="}, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ4MTU1NA==", "bodyText": "How do we differentiate between a valid pattern that doesn't have an ID in the database, and an invalid pattern?", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#discussion_r417481554", "createdAt": "2020-04-29T17:19:09Z", "author": {"login": "njdister"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/CoverageResourceProvider.java", "diffHunk": "@@ -85,7 +86,9 @@ public Coverage read(@IdParam IdType coverageId) {\n       throw new IllegalArgumentException();\n \n     Matcher coverageIdMatcher = COVERAGE_ID_PATTERN.matcher(coverageIdText);\n-    if (!coverageIdMatcher.matches()) throw new ResourceNotFoundException(coverageId);\n+    if (!coverageIdMatcher.matches())\n+      throw new IllegalArgumentException(\"Unsupported ID pattern: \" + coverageIdText);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY2OTA2NA=="}, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQzNjkzMg==", "bodyText": "How do we differentiate between a valid pattern that doesn't have an ID in the database, and an invalid pattern?\n@njdister Further down in the code, a ResourceNotFoundException is thrown when the ID is not found. I think your question supports the change for the pattern not matching to throw an IllegalArgumentException here instead. Otherwise, would not be able to tell the difference and be able to easily test for this difference.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#discussion_r419436932", "createdAt": "2020-05-04T13:30:45Z", "author": {"login": "dtisza1"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/CoverageResourceProvider.java", "diffHunk": "@@ -85,7 +86,9 @@ public Coverage read(@IdParam IdType coverageId) {\n       throw new IllegalArgumentException();\n \n     Matcher coverageIdMatcher = COVERAGE_ID_PATTERN.matcher(coverageIdText);\n-    if (!coverageIdMatcher.matches()) throw new ResourceNotFoundException(coverageId);\n+    if (!coverageIdMatcher.matches())\n+      throw new IllegalArgumentException(\"Unsupported ID pattern: \" + coverageIdText);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY2OTA2NA=="}, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ0OTk0OA==", "bodyText": "I agree that this change makes sense and is helpful. We shouldn't try to preserve bad exceptions for assumed compatibility.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#discussion_r419449948", "createdAt": "2020-05-04T13:48:58Z", "author": {"login": "RickHawesUSDS"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/CoverageResourceProvider.java", "diffHunk": "@@ -85,7 +86,9 @@ public Coverage read(@IdParam IdType coverageId) {\n       throw new IllegalArgumentException();\n \n     Matcher coverageIdMatcher = COVERAGE_ID_PATTERN.matcher(coverageIdText);\n-    if (!coverageIdMatcher.matches()) throw new ResourceNotFoundException(coverageId);\n+    if (!coverageIdMatcher.matches())\n+      throw new IllegalArgumentException(\"Unsupported ID pattern: \" + coverageIdText);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY2OTA2NA=="}, "originalCommit": null, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjM3NzM1OnYy", "diffSide": "RIGHT", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/ExplanationOfBenefitResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDo0MDo0MFrOGNXepw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDo0MDo0MFrOGNXepw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY2OTM1MQ==", "bodyText": "Does this change make sense to do? Does it have a potential to cause any incompatibility issues?\nI believe that the exception here should indicate that the ID parameter pattern is invalid rather than not found. This also enables the ability to more easily test this via the IT tests.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#discussion_r416669351", "createdAt": "2020-04-28T14:40:40Z", "author": {"login": "dtisza1"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/ExplanationOfBenefitResourceProvider.java", "diffHunk": "@@ -102,7 +102,9 @@ public ExplanationOfBenefit read(@IdParam IdType eobId) {\n     if (eobIdText == null || eobIdText.trim().isEmpty()) throw new IllegalArgumentException();\n \n     Matcher eobIdMatcher = EOB_ID_PATTERN.matcher(eobIdText);\n-    if (!eobIdMatcher.matches()) throw new ResourceNotFoundException(eobId);\n+    if (!eobIdMatcher.matches())\n+      throw new IllegalArgumentException(\"Unsupported ID pattern: \" + eobIdText);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 348, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}