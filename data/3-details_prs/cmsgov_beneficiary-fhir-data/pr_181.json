{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NTQ5MjQ0", "number": 181, "title": "BLUEBUTTON-1573: Configure tracing and transaction names in New Relic", "bodyText": "See the commit messages for details, but this basically makes New Relic's APM Transactions data useful. Previously, completely different transactions were all grouped together and traces did not have enough data to be very useful.\nSee our test environment in New Relic for an example of the new config.\nhttps://jira.cms.gov/browse/BLUEBUTTON-1573", "createdAt": "2020-01-02T04:21:15Z", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/181", "merged": true, "mergeCommit": {"oid": "d032baf1b06cb048b9d409cc7a6fc7d97951d431"}, "closed": true, "closedAt": "2020-02-13T21:01:57Z", "author": {"login": "karlmdavis"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb2R2_AgH2gAyMzU4NTQ5MjQ0OmU4N2MyOGE1YjEyY2I1NGI1NWJkZThhZTRkOGM5NDg2ZTcwMDBmZDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcEArO2AFqTM1ODUxNjUzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e87c28a5b12cb54b55bde8ae4d8c9486e7000fd4", "author": {"user": {"login": "karlmdavis", "name": "Karl M. Davis"}}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/e87c28a5b12cb54b55bde8ae4d8c9486e7000fd4", "committedDate": "2020-01-02T04:15:17Z", "message": "Set operation canonical name in logs and New Relic.\n\nParticularly for New Relic, this should allow us to make meaningful\nmeasurements and comparisons of the performance of various operations.\n\nBLUEBUTTON-1573"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "168bbecbb6b55653ac13a83f60b312ff72bf7b54", "author": {"user": {"login": "karlmdavis", "name": "Karl M. Davis"}}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/168bbecbb6b55653ac13a83f60b312ff72bf7b54", "committedDate": "2020-01-02T04:15:17Z", "message": "Configure detailed New Relic tracing.\n\nThis tells New Relic to break out transaction traces in more detail,\nallowing us a better picture of what time is actually being spent on.\n\nBLUEBUTTON-1573"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1OTI3MjAz", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/181#pullrequestreview-345927203", "createdAt": "2020-01-21T14:40:48Z", "commit": {"oid": "168bbecbb6b55653ac13a83f60b312ff72bf7b54"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDo0MDo0OFrOFf8Xnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDo0MDo0OFrOFf8Xnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAzOTI2Mw==", "bodyText": "I like this class. I suggest that it may be improved by defining common options like \"id\". To avoid inconsistency for in calls to setOption(\"id\", ...) or setOption(\"Id\", ...) etc. This thinking is similar to the reason for an Endpoint enumeration.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/181#discussion_r369039263", "createdAt": "2020-01-21T14:40:48Z", "author": {"login": "RickHawesUSDS"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/Operation.java", "diffHunk": "@@ -0,0 +1,137 @@\n+package gov.cms.bfd.server.war;\n+\n+import com.codahale.metrics.servlets.HealthCheckServlet;\n+import com.codahale.metrics.servlets.MetricsServlet;\n+import com.codahale.metrics.servlets.PingServlet;\n+import com.codahale.metrics.servlets.ThreadDumpServlet;\n+import com.newrelic.api.agent.NewRelic;\n+import gov.cms.bfd.server.war.stu3.providers.CoverageResourceProvider;\n+import gov.cms.bfd.server.war.stu3.providers.ExplanationOfBenefitResourceProvider;\n+import gov.cms.bfd.server.war.stu3.providers.PatientResourceProvider;\n+import java.util.SortedMap;\n+import java.util.TreeMap;\n+import javax.servlet.http.HttpServletRequest;\n+import org.hl7.fhir.dstu3.hapi.rest.server.ServerCapabilityStatementProvider;\n+import org.slf4j.MDC;\n+\n+/**\n+ * Models the canonical \"operations\" supported by this application, such that each meaningfully\n+ * distinct operation can be assigned a unique canonical name, for use in monitoring systems.\n+ *\n+ * <p>Also handles the publishing of those canonical names to the places they need to be published,\n+ * via the {@link #publishOperationName()} method.\n+ */\n+public final class Operation {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "168bbecbb6b55653ac13a83f60b312ff72bf7b54"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "264f0afd19c515c991466a7557664e8e8c67149d", "author": {"user": {"login": "karlmdavis", "name": "Karl M. Davis"}}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/264f0afd19c515c991466a7557664e8e8c67149d", "committedDate": "2020-02-09T01:05:36Z", "message": "Merge branch 'master' into BLUEBUTTON-1573-new-relic-config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MDM3MTMx", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/181#pullrequestreview-356037131", "createdAt": "2020-02-10T15:38:39Z", "commit": {"oid": "264f0afd19c515c991466a7557664e8e8c67149d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNTozODozOVrOFnqw3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNTozODozOVrOFnqw3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzEzOTQyMg==", "bodyText": "Can't request in request.header. be omitted from the computeMdcRequestKey function call?", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/181#discussion_r377139422", "createdAt": "2020-02-10T15:38:39Z", "author": {"login": "njdister"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/RequestResponseLoggingFilter.java", "diffHunk": "@@ -60,29 +60,37 @@ private static void handleRequest(ServletRequest request) {\n     // Record the request type.\n     MDC.put(computeMdcKey(\"request_type\"), request.getClass().getName());\n \n+    // Set the default Operation (will hopefully be customized further in specific handler methods).\n+    Operation operation = new Operation(Operation.Endpoint.OTHER);\n+\n     if (request instanceof HttpServletRequest) {\n       HttpServletRequest servletRequest = (HttpServletRequest) request;\n \n       // Record the basic request components.\n-      MDC.put(computeMdcKey(\"request.http_method\"), servletRequest.getMethod());\n-      MDC.put(computeMdcKey(\"request.url\"), servletRequest.getRequestURL().toString());\n-      MDC.put(computeMdcKey(\"request.uri\"), servletRequest.getRequestURI());\n-      MDC.put(computeMdcKey(\"request.query_string\"), servletRequest.getQueryString());\n+      operation = new Operation(Operation.Endpoint.matchByHttpUri(servletRequest));\n+      MDC.put(computeMdcRequestKey(\"http_method\"), servletRequest.getMethod());\n+      MDC.put(computeMdcRequestKey(\"url\"), servletRequest.getRequestURL().toString());\n+      MDC.put(computeMdcRequestKey(\"uri\"), servletRequest.getRequestURI());\n+      MDC.put(computeMdcRequestKey(\"query_string\"), servletRequest.getQueryString());\n       MDC.put(\n-          computeMdcKey(\"request.clientSSL.DN\"),\n+          computeMdcRequestKey(\"clientSSL.DN\"),\n           getClientSslPrincipalDistinguishedName(servletRequest));\n \n       // Record the request headers.\n       Enumeration<String> headerNames = servletRequest.getHeaderNames();\n       while (headerNames.hasMoreElements()) {\n         String headerName = headerNames.nextElement();\n         List<String> headerValues = Collections.list(servletRequest.getHeaders(headerName));\n-        if (headerValues.isEmpty()) MDC.put(computeMdcKey(\"request.header.\" + headerName), \"\");\n+        if (headerValues.isEmpty())\n+          MDC.put(computeMdcRequestKey(\"request.header.\" + headerName), \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "264f0afd19c515c991466a7557664e8e8c67149d"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MDkzNzcy", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/181#pullrequestreview-356093772", "createdAt": "2020-02-10T16:46:48Z", "commit": {"oid": "264f0afd19c515c991466a7557664e8e8c67149d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2ODAxMzk5", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/181#pullrequestreview-356801399", "createdAt": "2020-02-11T16:25:46Z", "commit": {"oid": "264f0afd19c515c991466a7557664e8e8c67149d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjoyNTo0N1rOFoPz1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjoyNTo0N1rOFoPz1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc0NjM5MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      MDC.put(computeMdcRequestKey(\"request.header.\" + headerName), \"\");\n          \n          \n            \n                      MDC.put(computeMdcRequestKey(\"header.\" + headerName), \"\");", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/181#discussion_r377746391", "createdAt": "2020-02-11T16:25:47Z", "author": {"login": "karlmdavis"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/RequestResponseLoggingFilter.java", "diffHunk": "@@ -60,29 +60,37 @@ private static void handleRequest(ServletRequest request) {\n     // Record the request type.\n     MDC.put(computeMdcKey(\"request_type\"), request.getClass().getName());\n \n+    // Set the default Operation (will hopefully be customized further in specific handler methods).\n+    Operation operation = new Operation(Operation.Endpoint.OTHER);\n+\n     if (request instanceof HttpServletRequest) {\n       HttpServletRequest servletRequest = (HttpServletRequest) request;\n \n       // Record the basic request components.\n-      MDC.put(computeMdcKey(\"request.http_method\"), servletRequest.getMethod());\n-      MDC.put(computeMdcKey(\"request.url\"), servletRequest.getRequestURL().toString());\n-      MDC.put(computeMdcKey(\"request.uri\"), servletRequest.getRequestURI());\n-      MDC.put(computeMdcKey(\"request.query_string\"), servletRequest.getQueryString());\n+      operation = new Operation(Operation.Endpoint.matchByHttpUri(servletRequest));\n+      MDC.put(computeMdcRequestKey(\"http_method\"), servletRequest.getMethod());\n+      MDC.put(computeMdcRequestKey(\"url\"), servletRequest.getRequestURL().toString());\n+      MDC.put(computeMdcRequestKey(\"uri\"), servletRequest.getRequestURI());\n+      MDC.put(computeMdcRequestKey(\"query_string\"), servletRequest.getQueryString());\n       MDC.put(\n-          computeMdcKey(\"request.clientSSL.DN\"),\n+          computeMdcRequestKey(\"clientSSL.DN\"),\n           getClientSslPrincipalDistinguishedName(servletRequest));\n \n       // Record the request headers.\n       Enumeration<String> headerNames = servletRequest.getHeaderNames();\n       while (headerNames.hasMoreElements()) {\n         String headerName = headerNames.nextElement();\n         List<String> headerValues = Collections.list(servletRequest.getHeaders(headerName));\n-        if (headerValues.isEmpty()) MDC.put(computeMdcKey(\"request.header.\" + headerName), \"\");\n+        if (headerValues.isEmpty())\n+          MDC.put(computeMdcRequestKey(\"request.header.\" + headerName), \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "264f0afd19c515c991466a7557664e8e8c67149d"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3d60a13a05a5b603b18b0b81fda68abaefe52b3", "author": {"user": {"login": "karlmdavis", "name": "Karl M. Davis"}}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/c3d60a13a05a5b603b18b0b81fda68abaefe52b3", "committedDate": "2020-02-11T16:26:07Z", "message": "Update apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/RequestResponseLoggingFilter.java\r\n\r\nFixed, per @njdister's comment."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2ODE4MDYy", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/181#pullrequestreview-356818062", "createdAt": "2020-02-11T16:45:44Z", "commit": {"oid": "c3d60a13a05a5b603b18b0b81fda68abaefe52b3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2ODcwNjE0", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/181#pullrequestreview-356870614", "createdAt": "2020-02-11T17:57:06Z", "commit": {"oid": "c3d60a13a05a5b603b18b0b81fda68abaefe52b3"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MjQyNDM5", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/181#pullrequestreview-358242439", "createdAt": "2020-02-13T14:07:57Z", "commit": {"oid": "c3d60a13a05a5b603b18b0b81fda68abaefe52b3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDowNzo1N1rOFpVEdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDoxMDo1M1rOFpVLHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg4MTE0MA==", "bodyText": "To check my understanding this will log an operation of V1_COVERAGE twice. Once here and once in RequestResponseLoggingFilter", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/181#discussion_r378881140", "createdAt": "2020-02-13T14:07:57Z", "author": {"login": "whytheplatypus"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/CoverageResourceProvider.java", "diffHunk": "@@ -83,6 +86,10 @@ public Coverage read(@IdParam IdType coverageId) {\n     if (coverageIdText == null || coverageIdText.trim().isEmpty())\n       throw new IllegalArgumentException();\n \n+    Operation operation = new Operation(Operation.Endpoint.V1_COVERAGE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3d60a13a05a5b603b18b0b81fda68abaefe52b3"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg4Mjg0NA==", "bodyText": "These look like they're custom versions of the query params and headers sent to the system. It looks like these are also tracked in RequestResponseLoggingFilter.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/181#discussion_r378882844", "createdAt": "2020-02-13T14:10:53Z", "author": {"login": "whytheplatypus"}, "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/PatientResourceProvider.java", "diffHunk": "@@ -105,6 +108,11 @@ public Patient read(@IdParam IdType patientId, RequestDetails requestDetails) {\n \n     List<String> includeIdentifiersValues = returnIncludeIdentifiersValues(requestDetails);\n \n+    Operation operation = new Operation(Operation.Endpoint.V1_PATIENT);\n+    operation.setOption(\"by\", \"id\");\n+    operation.setOption(\"IncludeIdentifiers\", includeIdentifiersValues.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3d60a13a05a5b603b18b0b81fda68abaefe52b3"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MjYxOTY0", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/181#pullrequestreview-358261964", "createdAt": "2020-02-13T14:32:15Z", "commit": {"oid": "c3d60a13a05a5b603b18b0b81fda68abaefe52b3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MjgzMzMy", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/181#pullrequestreview-358283332", "createdAt": "2020-02-13T14:57:40Z", "commit": {"oid": "c3d60a13a05a5b603b18b0b81fda68abaefe52b3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71890e92c56bcfe5c6e54db91887c16fdaa725b1", "author": {"user": {"login": "karlmdavis", "name": "Karl M. Davis"}}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/71890e92c56bcfe5c6e54db91887c16fdaa725b1", "committedDate": "2020-02-13T16:04:11Z", "message": "Merge branch 'master' into BLUEBUTTON-1573-new-relic-config\n\nHad to fix it to cope with _since changes."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NDkzMzE2", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/181#pullrequestreview-358493316", "createdAt": "2020-02-13T19:32:18Z", "commit": {"oid": "71890e92c56bcfe5c6e54db91887c16fdaa725b1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NTE2NTM1", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/181#pullrequestreview-358516535", "createdAt": "2020-02-13T20:09:00Z", "commit": {"oid": "71890e92c56bcfe5c6e54db91887c16fdaa725b1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 753, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}