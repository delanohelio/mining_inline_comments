{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNTgyNTM3", "number": 295, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTo0MzowOVrOEEvdjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTo1Mzo1NlrOEEv1Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDA3Mzc0OnYy", "diffSide": "RIGHT", "path": "ops/ccs-ops-misc/DEPLOY-INFO.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTo0MzowOVrOGijZGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTo0MzowOVrOGijZGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NDYzMg==", "bodyText": "Good tip, thanks for that!", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/295#discussion_r438884632", "createdAt": "2020-06-11T15:43:09Z", "author": {"login": "jzulim"}, "path": "ops/ccs-ops-misc/DEPLOY-INFO.md", "diffHunk": "@@ -0,0 +1,36 @@\n+Deployment Info\n+---------------\n+\n+### General Info\n+\n+- Single, multibranch Jenkinsfile provides all stage orchestration.\n+  - App build logic located here: `apps/build.groovy`\n+  - Deploy logic located here: `ops/deploy-ccs.groovy`\n+- Platinum AMI is an optional stage controlled by `build_platinum` var.  Recommend building at least once a month.\n+- Only the master branch can deploy to production environments unless `deploy_prod_from_non_master` var is set to true.\n+- Deployment stages use locks to prevent multiple deployments from occuring at once to the same environment.\n+- There is a gate (manual approval stage) between TEST and PROD-SBX deployment, but not between PROD-SBX and PROD deployment.  Recommend locking the PROD environment in order to gate the PROD-SBX deployment for additional testing.\n+- Our merge strategy in Jenkins is to merge the current deploying branch with master, which creates a unique commit ID in Jenkins that is appended to deployed AMIs.  To look up the commit ID of an AMI, you'll need to look up the merge commit in Jenkins and then find the originating commit from the BFD repo.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "846ee9e8ef6ab3fb7892c56d631a0346eb495f62"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDA3NjU1OnYy", "diffSide": "RIGHT", "path": "ops/ccs-ops-misc/DEPLOY-INFO.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTo0Mzo0N1rOGija7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTo0Mzo0N1rOGija7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NTEwMw==", "bodyText": "Good advice.", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/295#discussion_r438885103", "createdAt": "2020-06-11T15:43:47Z", "author": {"login": "jzulim"}, "path": "ops/ccs-ops-misc/DEPLOY-INFO.md", "diffHunk": "@@ -0,0 +1,36 @@\n+Deployment Info\n+---------------\n+\n+### General Info\n+\n+- Single, multibranch Jenkinsfile provides all stage orchestration.\n+  - App build logic located here: `apps/build.groovy`\n+  - Deploy logic located here: `ops/deploy-ccs.groovy`\n+- Platinum AMI is an optional stage controlled by `build_platinum` var.  Recommend building at least once a month.\n+- Only the master branch can deploy to production environments unless `deploy_prod_from_non_master` var is set to true.\n+- Deployment stages use locks to prevent multiple deployments from occuring at once to the same environment.\n+- There is a gate (manual approval stage) between TEST and PROD-SBX deployment, but not between PROD-SBX and PROD deployment.  Recommend locking the PROD environment in order to gate the PROD-SBX deployment for additional testing.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "846ee9e8ef6ab3fb7892c56d631a0346eb495f62"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDEzNDE1OnYy", "diffSide": "RIGHT", "path": "ops/ccs-ops-misc/DEPLOY-INFO.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTo1Mzo1NlrOGij-3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTo1Mzo1NlrOGij-3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg5NDMwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            \n          \n          \n            \n            For insight into the cloud-init stage look at /var/log/cloud-init.log and /var/log/cloud-init-output.log\n          \n          \n            \n            For insight into the BFD FHIR application servers look in /usr/local/bfd-server/", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/295#discussion_r438894303", "createdAt": "2020-06-11T15:53:56Z", "author": {"login": "jzulim"}, "path": "ops/ccs-ops-misc/DEPLOY-INFO.md", "diffHunk": "@@ -0,0 +1,36 @@\n+Deployment Info\n+---------------\n+\n+### General Info\n+\n+- Single, multibranch Jenkinsfile provides all stage orchestration.\n+  - App build logic located here: `apps/build.groovy`\n+  - Deploy logic located here: `ops/deploy-ccs.groovy`\n+- Platinum AMI is an optional stage controlled by `build_platinum` var.  Recommend building at least once a month.\n+- Only the master branch can deploy to production environments unless `deploy_prod_from_non_master` var is set to true.\n+- Deployment stages use locks to prevent multiple deployments from occuring at once to the same environment.\n+- There is a gate (manual approval stage) between TEST and PROD-SBX deployment, but not between PROD-SBX and PROD deployment.  Recommend locking the PROD environment in order to gate the PROD-SBX deployment for additional testing.\n+- Our merge strategy in Jenkins is to merge the current deploying branch with master, which creates a unique commit ID in Jenkins that is appended to deployed AMIs.  To look up the commit ID of an AMI, you'll need to look up the merge commit in Jenkins and then find the originating commit from the BFD repo.\n+\n+### Failed Deployment Troubleshooting\n+\n+ELB health checks and smoke testing embedded in the BFD startup script prevent completely broken deployments.  Additionally we use a create-before-destroy apply method in terraform when creating a new deployment autoscaling group.  If a new deployment fails these checks, it will time out the terraform deployment, leaving the original autoscaling group in tact, thus preventing an outage.\n+\n+Non-outage deployment timeout is the #1 issue encountered when deploying BFD, and unfortunately can happen for many reasons:\n+- Startup routines in the gold image defined stage of cloud-init are failing or slow\n+- Startup routines in our user data defined stage of cloud-init are failing or slow\n+  - Can occur in our actual user data bash script\n+  - Can occur in ansible launch playbook\n+- BFD service itself fails or is slow to start\n+- AWS operations called by terraform are slow\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "846ee9e8ef6ab3fb7892c56d631a0346eb495f62"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 217, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}