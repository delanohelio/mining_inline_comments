{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5OTY1NjUz", "number": 341, "title": "Cbrune/Fix For IT Endpoint Diagnosis Type Order Failures", "bodyText": "Change Details\nAdded comparison so it can order by diagnosis types\n\n\nAdded a sortDiagnosisTypes to the endpointIT tests\nAcceptance Validation\n\n\nFeedback Requested\n\nExternal References\n\n\nBLUEBUTTON-xxx\n\nSecurity Implications\n\n\n new software dependencies\n\n\n\n altered security controls\n\n\n\n new data stored or transmitted\n\n\n\n security checklist is completed for this change\n\n\n\n requires more information or team discussion to evaluate security implications", "createdAt": "2020-08-19T07:04:53Z", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/341", "merged": true, "mergeCommit": {"oid": "0592626194bd087290b2f2044e3d2d5f88143352"}, "closed": true, "closedAt": "2020-08-20T16:03:08Z", "author": {"login": "cbrunefearless"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAM7XEAH2gAyNDY5OTY1NjUzOjRlN2JmNjA0ZGJkODA0YTk5ODRmODViOTBjMjRmNzE4M2ZjZDM3MTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdBL34QgFqTQ3MjgzMTgxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4e7bf604dbd804a9984f85b90c24f7183fcd3718", "author": {"user": {"login": "jzulim", "name": "John Zulim"}}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/4e7bf604dbd804a9984f85b90c24f7183fcd3718", "committedDate": "2020-08-18T20:20:56Z", "message": "Switch GH Actions runner to macos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54ef68c08a11972ef1db142781821f0588bd04fd", "author": {"user": {"login": "cbrunefearless", "name": "Chris Brune"}}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/54ef68c08a11972ef1db142781821f0588bd04fd", "committedDate": "2020-08-18T21:10:07Z", "message": "Added serialization feature for keys"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b5f8f49a8019b054dcef2aaca4b49d94580fa75", "author": {"user": {"login": "cbrunefearless", "name": "Chris Brune"}}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/3b5f8f49a8019b054dcef2aaca4b49d94580fa75", "committedDate": "2020-08-18T21:14:13Z", "message": "Added serialization feature for keys"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a96a31144178dcc38e5f9f59bbab3a9067620578", "author": {"user": {"login": "cbrunefearless", "name": "Chris Brune"}}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/a96a31144178dcc38e5f9f59bbab3a9067620578", "committedDate": "2020-08-19T07:03:12Z", "message": "Added compare to order diagnosis types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b66659e779b54dc56c8f087f6ab515b62cdd485", "author": {"user": {"login": "cbrunefearless", "name": "Chris Brune"}}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/9b66659e779b54dc56c8f087f6ab515b62cdd485", "committedDate": "2020-08-19T15:59:05Z", "message": "Changed and added comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eeddaa244047e659fe581c6c9dcafed3fdf8b270", "author": {"user": {"login": "cbrunefearless", "name": "Chris Brune"}}, "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/eeddaa244047e659fe581c6c9dcafed3fdf8b270", "committedDate": "2020-08-19T16:06:26Z", "message": "Added comments to the fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzE5NTk2", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/341#pullrequestreview-471719596", "createdAt": "2020-08-20T15:17:11Z", "commit": {"oid": "eeddaa244047e659fe581c6c9dcafed3fdf8b270"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzU3ODcw", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/341#pullrequestreview-471757870", "createdAt": "2020-08-20T15:54:13Z", "commit": {"oid": "eeddaa244047e659fe581c6c9dcafed3fdf8b270"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyODMxODEx", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/341#pullrequestreview-472831811", "createdAt": "2020-08-21T21:36:04Z", "commit": {"oid": "eeddaa244047e659fe581c6c9dcafed3fdf8b270"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMTozNjowNFrOHE-f9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMTozNjowNFrOHE-f9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk4MDM0MA==", "bodyText": "Just an FYI that using APIs from recent versions of Java, you can make this stuff cleaner: https://www.baeldung.com/java-8-comparator-comparing#1-key-selector-variant", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/341#discussion_r474980340", "createdAt": "2020-08-21T21:36:04Z", "author": {"login": "karlmdavis"}, "path": "apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/utils/EndpointJsonResponseComparatorIT.java", "diffHunk": "@@ -297,6 +297,77 @@ public int compare(JsonNode node1, JsonNode node2) {\n     return jsonResponse;\n   }\n \n+  /**\n+   * FIXME: Additional workaround due to HAPI not always returning array elements in the same order\n+   * for a specific searchParam {@link JsonArray} in the capability statement. This method is only\n+   * necessary until the following issue has been resolved with HAPI:\n+   * https://github.com/jamesagnew/hapi-fhir/issues/1183\n+   *\n+   * <p>Before: { \"type\" : [ {\"coding\" : [ {\"system\" :\n+   * \"https://bluebutton.cms.gov/resources/codesystem/diagnosis-type\", \"code\" : \"principal\",\n+   * \"display\" : \"The single medical diagnosis that is most relevant to the patient's chief\n+   * complaint or need for treatment.\" ] }, {\"coding\" : [ {\"system\" :\n+   * \"https://bluebutton.cms.gov/resources/codesystem/diagnosis-type\", \"code\" :\n+   * \"external-first\",\"display\" : \"The code used to identify the 1st external cause of injury,\n+   * poisoning, or other adverse effect.\"} } ]} ]}\n+   *\n+   * <p>After: { \"type\" : [ {\"coding\" : [ {\"system\" :\n+   * \"https://bluebutton.cms.gov/resources/codesystem/diagnosis-type\", \"code\" :\n+   * \"external-first\",\"display\" : \"The code used to identify the 1st external cause of injury,\n+   * poisoning, or other adverse effect.\"} ] }, {\"coding\" : [ {\"system\" :\n+   * \"https://bluebutton.cms.gov/resources/codesystem/diagnosis-type\",\"code\" : \"principal\",\n+   * \"display\" : \"The single medical diagnosis that is most relevant to the patient's chief\n+   * complaint or need for treatment.\"} ]} ]}\n+   *\n+   * @param unsortedResponse the JSON string with an unsorted diagnosisType array\n+   * @param parseStringAt the JSON string with the search string\n+   * @return the JSON string with the sorted diagnosis type array\n+   */\n+  private static String sortDiagnosisTypes(String unsortedResponse, String parseStringAt) {\n+    ObjectMapper mapper = new ObjectMapper();\n+    mapper.writerWithDefaultPrettyPrinter();\n+    JsonNode parsedJson = null;\n+    try {\n+      parsedJson = mapper.readTree(unsortedResponse);\n+    } catch (IOException e) {\n+      throw new UncheckedIOException(\n+          \"Unable to deserialize the following JSON content as tree: \" + unsortedResponse, e);\n+    }\n+\n+    // This returns the DiagnosisType array node for the resource\n+    JsonNode diagnosisTypeArray = parsedJson.at(parseStringAt);\n+\n+    Iterator<JsonNode> diagnosisTypeArrayIterator = diagnosisTypeArray.elements();\n+    List<JsonNode> diagnosisTypes = new ArrayList<JsonNode>();\n+    while (diagnosisTypeArrayIterator.hasNext()) {\n+      diagnosisTypes.add(diagnosisTypeArrayIterator.next());\n+    }\n+\n+    Collections.sort(\n+        diagnosisTypes,\n+        new Comparator<JsonNode>() {\n+          public int compare(JsonNode node1, JsonNode node2) {\n+            String name1 = node1.get(\"coding\").get(0).get(\"code\").toString();\n+            String name2 = node2.get(\"coding\").get(0).get(\"code\").toString();\n+            return name1.compareTo(name2);\n+          }\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eeddaa244047e659fe581c6c9dcafed3fdf8b270"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 603, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}