{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NDc0NDI3", "number": 1373, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjo1MDo1NlrODsqDeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjo1NTo0NlrODsqLGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTUyOTUzOnYy", "diffSide": "RIGHT", "path": "debezium-testing/debezium-testing-openshift/src/test/java/io/debezium/testing/openshift/ConnectorTestBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjo1MDo1NlrOF9oJGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjo1MDo1NlrOF9oJGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2NTE0NQ==", "bodyText": "Typo in name", "url": "https://github.com/debezium/debezium/pull/1373#discussion_r400165145", "createdAt": "2020-03-30T12:50:56Z", "author": {"login": "jpechane"}, "path": "debezium-testing/debezium-testing-openshift/src/test/java/io/debezium/testing/openshift/ConnectorTestBase.java", "diffHunk": "@@ -126,13 +126,24 @@ protected void assertRecordsCount(String topic, int count) {\n         }\n     }\n \n+    protected void assertMinimaltRecordsCount(String topic, int count) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTUzODYzOnYy", "diffSide": "RIGHT", "path": "debezium-testing/debezium-testing-openshift/src/main/java/io/debezium/testing/openshift/tools/kafka/KafkaConnectController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjo1MzoyMFrOF9oPBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMzoyODo1OFrOF9ptIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2NjY2MA==", "bodyText": "Are you really scaling down operator?", "url": "https://github.com/debezium/debezium/pull/1373#discussion_r400166660", "createdAt": "2020-03-30T12:53:20Z", "author": {"login": "jpechane"}, "path": "debezium-testing/debezium-testing-openshift/src/main/java/io/debezium/testing/openshift/tools/kafka/KafkaConnectController.java", "diffHunk": "@@ -73,6 +76,43 @@ public KafkaConnectController(KafkaConnect kafkaConnect, OpenShiftClient ocp, Ok\n         this.httpUtils = new HttpUtils(http);\n     }\n \n+    /**\n+     * Disables Strimzi cluster operator by scaling it to ZERO", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE5MDc1Mg==", "bodyText": "Copy pasted docs ;)", "url": "https://github.com/debezium/debezium/pull/1373#discussion_r400190752", "createdAt": "2020-03-30T13:28:58Z", "author": {"login": "jcechace"}, "path": "debezium-testing/debezium-testing-openshift/src/main/java/io/debezium/testing/openshift/tools/kafka/KafkaConnectController.java", "diffHunk": "@@ -73,6 +76,43 @@ public KafkaConnectController(KafkaConnect kafkaConnect, OpenShiftClient ocp, Ok\n         this.httpUtils = new HttpUtils(http);\n     }\n \n+    /**\n+     * Disables Strimzi cluster operator by scaling it to ZERO", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2NjY2MA=="}, "originalCommit": null, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTUzOTU0OnYy", "diffSide": "RIGHT", "path": "debezium-testing/debezium-testing-openshift/src/main/java/io/debezium/testing/openshift/tools/kafka/KafkaConnectController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjo1MzozM1rOF9oPiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjo1MzozM1rOF9oPiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2Njc5NQ==", "bodyText": "Is the comment valid?", "url": "https://github.com/debezium/debezium/pull/1373#discussion_r400166795", "createdAt": "2020-03-30T12:53:33Z", "author": {"login": "jpechane"}, "path": "debezium-testing/debezium-testing-openshift/src/main/java/io/debezium/testing/openshift/tools/kafka/KafkaConnectController.java", "diffHunk": "@@ -73,6 +76,43 @@ public KafkaConnectController(KafkaConnect kafkaConnect, OpenShiftClient ocp, Ok\n         this.httpUtils = new HttpUtils(http);\n     }\n \n+    /**\n+     * Disables Strimzi cluster operator by scaling it to ZERO\n+     *\n+     * NOTICE: cluster operator needs to be disabled first!\n+     */\n+    public void disable() {\n+        LOGGER.info(\"Disabling KafkaConnect deployment (scaling to ZERO).\");\n+        ocp.apps().deployments().inNamespace(project).withName(this.kafkaConnect.getMetadata().getName() + \"-connect\")\n+                .edit().editSpec().withReplicas(0).endSpec().done();\n+        await()\n+                .atMost(30, SECONDS)\n+                .pollDelay(5, SECONDS)\n+                .pollInterval(3, SECONDS)\n+                .until(() -> ocp.pods().inNamespace(project).withLabel(\"strimzi.io/kind\", \"KafkaConnect\").list().getItems().isEmpty());\n+    }\n+\n+    /**\n+     * Disables Strimzi cluster operator by scaling it to ZERO", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTU0OTA1OnYy", "diffSide": "RIGHT", "path": "debezium-testing/debezium-testing-openshift/src/test/java/io/debezium/testing/openshift/mysql/MySqlConnectorIT.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjo1NTo0NlrOF9oVUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNDoxOTozMVrOF9sC9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2ODI3Mw==", "bodyText": "Should not this class have an @AfterClass method that would enable operator to make sure it is running for the further tests?", "url": "https://github.com/debezium/debezium/pull/1373#discussion_r400168273", "createdAt": "2020-03-30T12:55:46Z", "author": {"login": "jpechane"}, "path": "debezium-testing/debezium-testing-openshift/src/test/java/io/debezium/testing/openshift/mysql/MySqlConnectorIT.java", "diffHunk": "@@ -138,4 +138,27 @@ public void shouldResumeStreamingAfterRedeployment() throws IOException, Interru\n                 .untilAsserted(() -> assertRecordsCount(connectorName + \".inventory.customers\", 6));\n         assertRecordsContain(connectorName + \".inventory.customers\", \"jerry@test.com\");\n     }\n+\n+    @Test\n+    @Order(7)\n+    public void shouldBeDownAfterCrash() throws SQLException {\n+        operatorController.disable();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIwOTY5NA==", "bodyText": "Probably yes. However, I'd rather include this into @BeforeAll in order to minimize potential connector restarts.", "url": "https://github.com/debezium/debezium/pull/1373#discussion_r400209694", "createdAt": "2020-03-30T13:54:00Z", "author": {"login": "jcechace"}, "path": "debezium-testing/debezium-testing-openshift/src/test/java/io/debezium/testing/openshift/mysql/MySqlConnectorIT.java", "diffHunk": "@@ -138,4 +138,27 @@ public void shouldResumeStreamingAfterRedeployment() throws IOException, Interru\n                 .untilAsserted(() -> assertRecordsCount(connectorName + \".inventory.customers\", 6));\n         assertRecordsContain(connectorName + \".inventory.customers\", \"jerry@test.com\");\n     }\n+\n+    @Test\n+    @Order(7)\n+    public void shouldBeDownAfterCrash() throws SQLException {\n+        operatorController.disable();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2ODI3Mw=="}, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIyOTExMA==", "bodyText": "It's doing it a bit backwards -- the parent kinda presumes the child could break something. But in this case, I think ensuring that Operator runs before each test class is fair enough.", "url": "https://github.com/debezium/debezium/pull/1373#discussion_r400229110", "createdAt": "2020-03-30T14:19:31Z", "author": {"login": "jcechace"}, "path": "debezium-testing/debezium-testing-openshift/src/test/java/io/debezium/testing/openshift/mysql/MySqlConnectorIT.java", "diffHunk": "@@ -138,4 +138,27 @@ public void shouldResumeStreamingAfterRedeployment() throws IOException, Interru\n                 .untilAsserted(() -> assertRecordsCount(connectorName + \".inventory.customers\", 6));\n         assertRecordsContain(connectorName + \".inventory.customers\", \"jerry@test.com\");\n     }\n+\n+    @Test\n+    @Order(7)\n+    public void shouldBeDownAfterCrash() throws SQLException {\n+        operatorController.disable();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2ODI3Mw=="}, "originalCommit": null, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4356, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}