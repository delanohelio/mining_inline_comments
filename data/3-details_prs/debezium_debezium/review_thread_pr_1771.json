{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2MzQwNTU2", "number": 1771, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNDoxNjoxN1rOEerniA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNTo0MDozOVrOEm4aPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNjA3MzY4OnYy", "diffSide": "RIGHT", "path": "debezium-core/src/main/java/io/debezium/transforms/outbox/EventRouter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNDoxNjoxN1rOHKfkQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwODoyMzo1N1rOHKrh1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDc2NDk5NA==", "bodyText": "@Naros I wonder if we should use nested conditions. Would not it be better to introduce new method on SMT manager like isDataChangeMessage? It might make sense in case of other heartbeat sensitive SMTs.", "url": "https://github.com/debezium/debezium/pull/1771#discussion_r480764994", "createdAt": "2020-09-01T04:16:17Z", "author": {"login": "jpechane"}, "path": "debezium-core/src/main/java/io/debezium/transforms/outbox/EventRouter.java", "diffHunk": "@@ -81,6 +81,9 @@ public R apply(R r) {\n         // Ignoring messages which do not adhere to the CDC Envelope, for instance:\n         // Heartbeat and Schema Change messages\n         if (!smtManager.isValidEnvelope(r)) {\n+            if (smtManager.isHeartbeat(r)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk2MDk4MQ==", "bodyText": "+1, I like that idea.", "url": "https://github.com/debezium/debezium/pull/1771#discussion_r480960981", "createdAt": "2020-09-01T08:23:57Z", "author": {"login": "gunnarmorling"}, "path": "debezium-core/src/main/java/io/debezium/transforms/outbox/EventRouter.java", "diffHunk": "@@ -81,6 +81,9 @@ public R apply(R r) {\n         // Ignoring messages which do not adhere to the CDC Envelope, for instance:\n         // Heartbeat and Schema Change messages\n         if (!smtManager.isValidEnvelope(r)) {\n+            if (smtManager.isHeartbeat(r)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDc2NDk5NA=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzI1MDI5OnYy", "diffSide": "RIGHT", "path": "debezium-core/src/main/java/io/debezium/transforms/outbox/EventRouter.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwODoyMDoyNFrOHKrZXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNzo1NjozMFrOHL60Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk1ODgxNA==", "bodyText": "Why is it that heartbeats are skipped? They should be passed on unmodified (i.e. as it was before), as otherwise people would e.g. run into WAL growth issues.", "url": "https://github.com/debezium/debezium/pull/1771#discussion_r480958814", "createdAt": "2020-09-01T08:20:24Z", "author": {"login": "gunnarmorling"}, "path": "debezium-core/src/main/java/io/debezium/transforms/outbox/EventRouter.java", "diffHunk": "@@ -81,6 +81,9 @@ public R apply(R r) {\n         // Ignoring messages which do not adhere to the CDC Envelope, for instance:\n         // Heartbeat and Schema Change messages\n         if (!smtManager.isValidEnvelope(r)) {\n+            if (smtManager.isHeartbeat(r)) {\n+                return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM1MTc2OQ==", "bodyText": "Perhaps I misunderstood the issue?  The reporter was using ByteBufferConverter and this was throwing an error when Kafka was applying the converter to the Heartbeat messages after the transformation by the Outbox.  By returning null from the SMT, this would have prevented the converter from being invoked and avoided the failure.  If that's not the right approach, what should I have done instead?  Should the ByteBufferConverter instead have detected the incoming message was a heartbeat and skipped the validation & returned null for the byte[]?", "url": "https://github.com/debezium/debezium/pull/1771#discussion_r481351769", "createdAt": "2020-09-01T18:38:10Z", "author": {"login": "Naros"}, "path": "debezium-core/src/main/java/io/debezium/transforms/outbox/EventRouter.java", "diffHunk": "@@ -81,6 +81,9 @@ public R apply(R r) {\n         // Ignoring messages which do not adhere to the CDC Envelope, for instance:\n         // Heartbeat and Schema Change messages\n         if (!smtManager.isValidEnvelope(r)) {\n+            if (smtManager.isHeartbeat(r)) {\n+                return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk1ODgxNA=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgwMTQ2NA==", "bodyText": "You're right, there's more to it than I first thought.\nWe cannot simply filter out any messages, though. While it might be ok-ish for heartbeats, it'd be unexpected e.g. for TX metadata events or schema change events. Instead, we'll likely have to follow a similar approach as we do for the CloudEvents converter: let it delegate to another converter (JSON, Avro). Specifically, if the ByteBufferConverter encounters something other than BYTES, it should delegate conversion of that record to the configured delegate converter. Then, heartbeats (and any other non-CDC events) can be passed on by the outbox routing SMT unmodified. Would that make sense?", "url": "https://github.com/debezium/debezium/pull/1771#discussion_r481801464", "createdAt": "2020-09-02T06:52:15Z", "author": {"login": "gunnarmorling"}, "path": "debezium-core/src/main/java/io/debezium/transforms/outbox/EventRouter.java", "diffHunk": "@@ -81,6 +81,9 @@ public R apply(R r) {\n         // Ignoring messages which do not adhere to the CDC Envelope, for instance:\n         // Heartbeat and Schema Change messages\n         if (!smtManager.isValidEnvelope(r)) {\n+            if (smtManager.isHeartbeat(r)) {\n+                return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk1ODgxNA=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI2MDAxMA==", "bodyText": "It does, thanks for the clarification.", "url": "https://github.com/debezium/debezium/pull/1771#discussion_r482260010", "createdAt": "2020-09-02T17:56:30Z", "author": {"login": "Naros"}, "path": "debezium-core/src/main/java/io/debezium/transforms/outbox/EventRouter.java", "diffHunk": "@@ -81,6 +81,9 @@ public R apply(R r) {\n         // Ignoring messages which do not adhere to the CDC Envelope, for instance:\n         // Heartbeat and Schema Change messages\n         if (!smtManager.isValidEnvelope(r)) {\n+            if (smtManager.isHeartbeat(r)) {\n+                return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk1ODgxNA=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzI2NjE2OnYy", "diffSide": "RIGHT", "path": "debezium-core/src/test/java/io/debezium/transforms/outbox/EventRouterTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwODoyNDoxNlrOHKrixw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwODoyNDoxNlrOHKrixw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk2MTIyMw==", "bodyText": "See above; I don't think this behavioral change should be done.", "url": "https://github.com/debezium/debezium/pull/1771#discussion_r480961223", "createdAt": "2020-09-01T08:24:16Z", "author": {"login": "gunnarmorling"}, "path": "debezium-core/src/test/java/io/debezium/transforms/outbox/EventRouterTest.java", "diffHunk": "@@ -172,7 +172,7 @@ public void canSkipMessagesWithoutDebeziumCdcEnvelopeDueToMissingSchemaNameSuffi\n \n         final SourceRecord eventRouted = router.apply(eventRecord);\n \n-        assertThat(eventRouted).isSameAs(eventRecord);\n+        assertThat(eventRouted).isNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTY5MzYyOnYy", "diffSide": "RIGHT", "path": "debezium-core/src/test/java/io/debezium/converters/ByteBufferConverterTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNToyNTowMVrOHW0FAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNToyNTowMVrOHW0FAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY4Mzk2OQ==", "bodyText": "Could you add a test for specifying an option, e.g. include.schema set to false for the JSON converter?", "url": "https://github.com/debezium/debezium/pull/1771#discussion_r493683969", "createdAt": "2020-09-23T15:25:01Z", "author": {"login": "gunnarmorling"}, "path": "debezium-core/src/test/java/io/debezium/converters/ByteBufferConverterTest.java", "diffHunk": "@@ -97,4 +101,35 @@ public void shouldConvertToConnectDataForNullValue() {\n         assertThat(schemaAndValue.schema()).isEqualTo(Schema.OPTIONAL_BYTES_SCHEMA);\n         assertThat(schemaAndValue.value()).isNull();\n     }\n+\n+    @Test\n+    public void shouldThrowWhenNoDelegateConverterConfigured() {\n+        try {\n+            converter.fromConnectData(TOPIC, Schema.OPTIONAL_STRING_SCHEMA, \"Hello World\");\n+            fail(\"now expected exception thrown\");\n+        }\n+        catch (Exception e) {\n+            assertThat(e).isExactlyInstanceOf(DataException.class);\n+        }\n+    }\n+\n+    @Test\n+    public void shouldConvertUsingDelegateConverter() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42729b0ec19dc067e015955556d294b066a55980"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTY5ODU2OnYy", "diffSide": "RIGHT", "path": "documentation/modules/ROOT/pages/configuration/outbox-event-router.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNToyNjowMFrOHW0H9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNToyNjowMFrOHW0H9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY4NDcyNw==", "bodyText": "It's not only about heartbeats, but also TX metadata and schema change history (for those connectors supporting it).\nDocs should also mention how the delegate converter is configured (see my comment on testing above).", "url": "https://github.com/debezium/debezium/pull/1771#discussion_r493684727", "createdAt": "2020-09-23T15:26:00Z", "author": {"login": "gunnarmorling"}, "path": "documentation/modules/ROOT/pages/configuration/outbox-event-router.adoc", "diffHunk": "@@ -205,6 +205,12 @@ transforms.outbox.type=io.debezium.transforms.outbox.EventRouter\n value.converter=io.debezium.converters.ByteBufferConverter\n ----\n \n+[WARNING]\n+====\n+If the connector is configured to emit heartbeat events, an additional configuration option `value.converter.delegate.converter.type` will be required.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42729b0ec19dc067e015955556d294b066a55980"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MjA1NDY3OnYy", "diffSide": "RIGHT", "path": "documentation/modules/ROOT/pages/configuration/outbox-event-router.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNTo0MDoxM1rOHXKc5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNTo0MDoxM1rOHXKc5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA1MDUzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The {prodname} connector may be configured to emit heartbeat, transaction metadata, or schena change events (support varies by connector).\n          \n          \n            \n            The {prodname} connectors may be configured to emit heartbeat, transaction metadata, or schema change events (support varies by connector).", "url": "https://github.com/debezium/debezium/pull/1771#discussion_r494050535", "createdAt": "2020-09-24T05:40:13Z", "author": {"login": "gunnarmorling"}, "path": "documentation/modules/ROOT/pages/configuration/outbox-event-router.adoc", "diffHunk": "@@ -208,6 +208,22 @@ value.converter=io.debezium.converters.ByteBufferConverter\n By default, the `payload` column value (the Avro data) is the only message value.\n Configuration of `ByteBufferConverter` as the value converter propagates the `payload` column value as-is into the Kafka message value.\n \n+The {prodname} connector may be configured to emit heartbeat, transaction metadata, or schena change events (support varies by connector).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dbbc348fe10a20f2f507aad192bcc47e4e4e98d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MjA1NTY2OnYy", "diffSide": "RIGHT", "path": "documentation/modules/ROOT/pages/configuration/outbox-event-router.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNTo0MDozOVrOHXKdeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNTo0MDozOVrOHXKdeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA1MDY4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If any extra configuration options are needed by the converter, they can also be specified, such as the disablement of schemas show above using `schemas.enable=false`.\n          \n          \n            \n            If any extra configuration options are needed by the converter, they can also be specified, such as the disablement of schemas shown above using `schemas.enable=false`.", "url": "https://github.com/debezium/debezium/pull/1771#discussion_r494050680", "createdAt": "2020-09-24T05:40:39Z", "author": {"login": "gunnarmorling"}, "path": "documentation/modules/ROOT/pages/configuration/outbox-event-router.adoc", "diffHunk": "@@ -208,6 +208,22 @@ value.converter=io.debezium.converters.ByteBufferConverter\n By default, the `payload` column value (the Avro data) is the only message value.\n Configuration of `ByteBufferConverter` as the value converter propagates the `payload` column value as-is into the Kafka message value.\n \n+The {prodname} connector may be configured to emit heartbeat, transaction metadata, or schena change events (support varies by connector).\n+These events cannot be serialized by the `ByteBufferConverter` so additional configuration must be provided so the converter knows how to serialize these events.\n+As an example, the following configuration illustrates using the Apache Kafka `JsonConverter` with no schemas:\n+\n+[source]\n+----\n+transforms=outbox,...\n+transforms.outbox.type=io.debezium.transforms.outbox.EventRouter\n+value.converter=io.debezium.converters.ByteBufferConverter\n+value.converter.delegate.converter.type=org.apache.kafka.connect.json.JsonConverter\n+value.converter.delegate.converter.type.schemas.enable=false\n+----\n+\n+The delegate `Converter` implementation is specified by the `delegate.converter.type` option.\n+If any extra configuration options are needed by the converter, they can also be specified, such as the disablement of schemas show above using `schemas.enable=false`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dbbc348fe10a20f2f507aad192bcc47e4e4e98d"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4178, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}