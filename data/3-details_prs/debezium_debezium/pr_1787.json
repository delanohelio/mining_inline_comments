{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwMDkyODc2", "number": 1787, "title": "DBZ 2466 Add a locking mode which doesn't conflict with DML and existing reads on Percona Server", "bodyText": "https://issues.redhat.com/browse/DBZ-2466", "createdAt": "2020-09-04T20:55:30Z", "url": "https://github.com/debezium/debezium/pull/1787", "merged": true, "mergeCommit": {"oid": "9468b1f0740a68d755226dfff5768041b5aaaae1"}, "closed": true, "closedAt": "2020-09-15T09:43:50Z", "author": {"login": "insom"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFrlj2AH2gAyNDgwMDkyODc2OjJiZWJhYjliYzA2NmUxMWE3MjRhZWZhNjc1NWRiZjU1NDYyYzcxMjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdI9MyEAH2gAyNDgwMDkyODc2Ojk3NWY4YWY4MzEyZDY5YjI0NDNjZjc5NjMxYjk2NmNkZDYxNTQ2ZGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2bebab9bc066e11a724aefa6755dbf55462c7123", "author": {"user": {"login": "insom", "name": "Aaron Brady"}}, "url": "https://github.com/debezium/debezium/commit/2bebab9bc066e11a724aefa6755dbf55462c7123", "committedDate": "2020-09-04T20:53:48Z", "message": "DBZ-2466 Add Percona Server profile to assembly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8eb1f4e28c6778d81a7c36864aa8d2055fc2498b", "author": {"user": {"login": "insom", "name": "Aaron Brady"}}, "url": "https://github.com/debezium/debezium/commit/8eb1f4e28c6778d81a7c36864aa8d2055fc2498b", "committedDate": "2020-09-04T20:53:53Z", "message": "DBZ-2466 Percona Backup Locks option for snapshots"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyOTM5MzAw", "url": "https://github.com/debezium/debezium/pull/1787#pullrequestreview-482939300", "createdAt": "2020-09-04T21:06:45Z", "commit": {"oid": "8eb1f4e28c6778d81a7c36864aa8d2055fc2498b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQyMTowNjo0NVrOHNbf9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQyMTowNjo0NVrOHNbf9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg0NDA4Nw==", "bodyText": "The initial stuff in the binlogs for the Percona image was causing some tests to fail, so I thought it would be good to issue a RESET MASTER and start the binlogs from scratch. This is compatible with both Oracle and Percona flavours with no side-effects that I can see.", "url": "https://github.com/debezium/debezium/pull/1787#discussion_r483844087", "createdAt": "2020-09-04T21:06:45Z", "author": {"login": "insom"}, "path": "debezium-connector-mysql/src/test/docker/init/setup.sql", "diffHunk": "@@ -18,3 +18,20 @@ GRANT ALL PRIVILEGES ON *.* TO 'mysqluser'@'%';\n -- DATABASE:  emptydb\n -- ----------------------------------------------------------------------------------------------------------------\n CREATE DATABASE emptydb;\n+RESET MASTER;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8eb1f4e28c6778d81a7c36864aa8d2055fc2498b"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzODY1MDU3", "url": "https://github.com/debezium/debezium/pull/1787#pullrequestreview-483865057", "createdAt": "2020-09-08T07:29:40Z", "commit": {"oid": "8eb1f4e28c6778d81a7c36864aa8d2055fc2498b"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzoyOTo0MVrOHOQQJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzozMTo0OFrOHOQUrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcwODM5MA==", "bodyText": "How about providing the statement from a method on the SnapshotLockingMode enum?", "url": "https://github.com/debezium/debezium/pull/1787#discussion_r484708390", "createdAt": "2020-09-08T07:29:41Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/SnapshotReader.java", "diffHunk": "@@ -310,7 +310,12 @@ protected void execute() {\n                 if (!snapshotLockingMode.equals(MySqlConnectorConfig.SnapshotLockingMode.NONE) && useGlobalLock) {\n                     try {\n                         logger.info(\"Step 1: flush and obtain global read lock to prevent writes to database\");\n-                        sql.set(\"FLUSH TABLES WITH READ LOCK\");\n+                        if (snapshotLockingMode.equals(MySqlConnectorConfig.SnapshotLockingMode.MINIMAL_PERCONA)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8eb1f4e28c6778d81a7c36864aa8d2055fc2498b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcwODcyOA==", "bodyText": "Could this be retrieved from a method on the enum, e.g. isMinimal(), or requiresMinimalLocking() or something similar?", "url": "https://github.com/debezium/debezium/pull/1787#discussion_r484708728", "createdAt": "2020-09-08T07:30:18Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/SnapshotReader.java", "diffHunk": "@@ -541,7 +546,8 @@ protected void execute() {\n                 // ------\n                 // STEP 7\n                 // ------\n-                if (snapshotLockingMode.equals(MySqlConnectorConfig.SnapshotLockingMode.MINIMAL) && isLocked) {\n+                if ((snapshotLockingMode.equals(MySqlConnectorConfig.SnapshotLockingMode.MINIMAL) ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8eb1f4e28c6778d81a7c36864aa8d2055fc2498b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcwODg4Nw==", "bodyText": "Sounds good.", "url": "https://github.com/debezium/debezium/pull/1787#discussion_r484708887", "createdAt": "2020-09-08T07:30:35Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-mysql/src/test/docker/init/setup.sql", "diffHunk": "@@ -18,3 +18,20 @@ GRANT ALL PRIVILEGES ON *.* TO 'mysqluser'@'%';\n -- DATABASE:  emptydb\n -- ----------------------------------------------------------------------------------------------------------------\n CREATE DATABASE emptydb;\n+RESET MASTER;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg0NDA4Nw=="}, "originalCommit": {"oid": "8eb1f4e28c6778d81a7c36864aa8d2055fc2498b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcwOTMxMw==", "bodyText": "Wow, TIL about SLEEP :)", "url": "https://github.com/debezium/debezium/pull/1787#discussion_r484709313", "createdAt": "2020-09-08T07:31:21Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/SnapshotReaderIT.java", "diffHunk": "@@ -224,6 +226,54 @@ private void snapshotOfSingleDatabase(boolean useGlobalLock, boolean storeOnlyMo\n         }\n     }\n \n+    @Test\n+    public void snapshotWithBackupLocksShouldNotWaitForReads() throws Exception {\n+        final Builder builder = simpleConfig();\n+        builder\n+                .with(MySqlConnectorConfig.USER, \"cloud\")\n+                .with(MySqlConnectorConfig.PASSWORD, \"cloudpass\")\n+                .with(MySqlConnectorConfig.SNAPSHOT_LOCKING_MODE, MySqlConnectorConfig.SnapshotLockingMode.MINIMAL_PERCONA);\n+\n+        config = builder.build();\n+        context = new MySqlTaskContext(config, new Filters.Builder(config).build());\n+        context.start();\n+\n+        reader = new SnapshotReader(\"snapshot\", context, true);\n+        reader.generateInsertEvents();\n+\n+        if (!MySQLConnection.isPerconaServer()) {\n+            return; // Skip these tests for non-Percona flavours of MySQL\n+        }\n+\n+        MySQLConnection db = MySQLConnection.forTestDatabase(DATABASE.getDatabaseName());\n+        Thread t = new Thread() {\n+            public void run() {\n+                try {\n+                    JdbcConnection connection = db.connect();\n+                    connection.executeWithoutCommitting(\"SELECT *, SLEEP(20) FROM products_on_hand\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8eb1f4e28c6778d81a7c36864aa8d2055fc2498b"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcwOTU0OA==", "bodyText": "Is there any description in the Percona docs where \"global backup lock\" could link to?", "url": "https://github.com/debezium/debezium/pull/1787#discussion_r484709548", "createdAt": "2020-09-08T07:31:48Z", "author": {"login": "gunnarmorling"}, "path": "documentation/modules/ROOT/partials/modules/mysql-connector/ref-mysql-connector-configuration-properties.adoc", "diffHunk": "@@ -282,6 +282,8 @@ _Note:_ This feature should be considered an incubating one. We need a feedback\n \n `minimal` The connector holds the global read lock for just the initial portion of the snapshot while the connector reads the database schemas and other metadata. The remaining work in a snapshot involves selecting all rows from each table, and this can be done in a consistent fashion using the REPEATABLE READ transaction even when the global read lock is no longer held and while other MySQL clients are updating the database. +\n \n+`minimal_percona` The connector holds the global backup lock for just the initial portion of the snapshot while the connector reads the database schemas and other metadata. The remaining work in a snapshot involves selecting all rows from each table, and this can be done in a consistent fashion using the REPEATABLE READ transaction even when the global read lock is no longer held and while other MySQL clients are updating the database. This mode does not flush tables to disk and is not blocked by long-running reads, and is only available in Percona Server +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8eb1f4e28c6778d81a7c36864aa8d2055fc2498b"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c8cacb31f4dcd39ec954f6880144fb8bcc90813", "author": {"user": {"login": "insom", "name": "Aaron Brady"}}, "url": "https://github.com/debezium/debezium/commit/0c8cacb31f4dcd39ec954f6880144fb8bcc90813", "committedDate": "2020-09-14T23:09:38Z", "message": "DBZ-2466 Address Backup Lock review feedback"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "0c8cacb31f4dcd39ec954f6880144fb8bcc90813", "author": {"user": {"login": "insom", "name": "Aaron Brady"}}, "url": "https://github.com/debezium/debezium/commit/0c8cacb31f4dcd39ec954f6880144fb8bcc90813", "committedDate": "2020-09-14T23:09:38Z", "message": "DBZ-2466 Address Backup Lock review feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "975f8af8312d69b2443cf79631b966cdd61546dc", "author": {"user": {"login": "insom", "name": "Aaron Brady"}}, "url": "https://github.com/debezium/debezium/commit/975f8af8312d69b2443cf79631b966cdd61546dc", "committedDate": "2020-09-15T01:06:48Z", "message": "DBZ-2466 Start connector when using Oracle MySQL, so afterEach can stop it"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2399, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}