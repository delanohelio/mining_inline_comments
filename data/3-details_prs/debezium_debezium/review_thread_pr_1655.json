{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5ODA4NDY0", "number": 1655, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwODo1NzozOFrOEIrFnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwODo1NzozOFrOEIrFnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTMwMDE1OnYy", "diffSide": "RIGHT", "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/BinlogReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwODo1NzozOFrOGoxr0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMDo1ODozMVrOGo1rVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQxMDI1Ng==", "bodyText": "You could keep it as a set, using newSetFromMap():\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final Map<String, Thread> binaryLogClientThreads = new ConcurrentHashMap<>(2);\n          \n          \n            \n                private final Map<String, Thread> binaryLogClientThreads = Collections.newSetFromMap(new ConcurrentHashMap<>(3));\n          \n      \n    \n    \n  \n\nAlso changed the initial size, as 2 wouldn't be enough to hold two elements actually without a resize when using the default load factor. Not that it makes any difference (I'd just call the parameterless constructor), but if we give a size explicitly, it should be large enough.", "url": "https://github.com/debezium/debezium/pull/1655#discussion_r445410256", "createdAt": "2020-06-25T08:57:38Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/BinlogReader.java", "diffHunk": "@@ -116,7 +115,7 @@\n     private Heartbeat heartbeat;\n     private MySqlJdbcContext connectionContext;\n     private final float heartbeatIntervalFactor = 0.8f;\n-    private final Set<Thread> binaryLogClientThreads = Collections.synchronizedSet(new HashSet<>(2));\n+    private final Map<String, Thread> binaryLogClientThreads = new ConcurrentHashMap<>(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ3NTY3MA==", "bodyText": "@gunnarmorling Initial size modified. Regadring the set, I know but I was contemplating usage of map from the start anyway so it was just nice fit", "url": "https://github.com/debezium/debezium/pull/1655#discussion_r445475670", "createdAt": "2020-06-25T10:58:31Z", "author": {"login": "jpechane"}, "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/BinlogReader.java", "diffHunk": "@@ -116,7 +115,7 @@\n     private Heartbeat heartbeat;\n     private MySqlJdbcContext connectionContext;\n     private final float heartbeatIntervalFactor = 0.8f;\n-    private final Set<Thread> binaryLogClientThreads = Collections.synchronizedSet(new HashSet<>(2));\n+    private final Map<String, Thread> binaryLogClientThreads = new ConcurrentHashMap<>(2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQxMDI1Ng=="}, "originalCommit": null, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4221, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}