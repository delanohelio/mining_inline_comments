{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NzU5Njkx", "number": 1377, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzozOTowMlrODtaXwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzozOTowMlrODtaXwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4OTQ0NTc3OnYy", "diffSide": "RIGHT", "path": "debezium-core/src/main/java/io/debezium/connector/common/BaseSourceTask.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzozOTowMlrOF-0WQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzo0ODoxOFrOF-0pvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxMzY5Ng==", "bodyText": "That way we're creating a new metronome each time. Maybe it'd be better to initialize lazily if it's null originally?", "url": "https://github.com/debezium/debezium/pull/1377#discussion_r401413696", "createdAt": "2020-04-01T07:39:02Z", "author": {"login": "gunnarmorling"}, "path": "debezium-core/src/main/java/io/debezium/connector/common/BaseSourceTask.java", "diffHunk": "@@ -126,7 +123,7 @@ public final void start(Map<String, String> props) {\n             // WorkerSourceTask calls us immediately after we return the empty list.\n             // This turns into a throttling so we need to make a pause before we return\n             // the control back.\n-            PAUSE_WHEN_NOT_STARTED.pause();\n+            Metronome.parker(Duration.of(2, ChronoUnit.SECONDS), Clock.SYSTEM).pause();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f983f7ed91d8fea0d0ff83728709b9ef9ab7b64c"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxNzAzNg==", "bodyText": "In that case we would need to clear it when the connector successfully starts otherwise the next restart loop would exhibit the same problem. As this is only expcetion handling and one per-two seconds object creation I opted for the simplest solution.", "url": "https://github.com/debezium/debezium/pull/1377#discussion_r401417036", "createdAt": "2020-04-01T07:45:02Z", "author": {"login": "jpechane"}, "path": "debezium-core/src/main/java/io/debezium/connector/common/BaseSourceTask.java", "diffHunk": "@@ -126,7 +123,7 @@ public final void start(Map<String, String> props) {\n             // WorkerSourceTask calls us immediately after we return the empty list.\n             // This turns into a throttling so we need to make a pause before we return\n             // the control back.\n-            PAUSE_WHEN_NOT_STARTED.pause();\n+            Metronome.parker(Duration.of(2, ChronoUnit.SECONDS), Clock.SYSTEM).pause();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxMzY5Ng=="}, "originalCommit": {"oid": "f983f7ed91d8fea0d0ff83728709b9ef9ab7b64c"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxODY4Nw==", "bodyText": "Ok, makes sense.", "url": "https://github.com/debezium/debezium/pull/1377#discussion_r401418687", "createdAt": "2020-04-01T07:48:18Z", "author": {"login": "gunnarmorling"}, "path": "debezium-core/src/main/java/io/debezium/connector/common/BaseSourceTask.java", "diffHunk": "@@ -126,7 +123,7 @@ public final void start(Map<String, String> props) {\n             // WorkerSourceTask calls us immediately after we return the empty list.\n             // This turns into a throttling so we need to make a pause before we return\n             // the control back.\n-            PAUSE_WHEN_NOT_STARTED.pause();\n+            Metronome.parker(Duration.of(2, ChronoUnit.SECONDS), Clock.SYSTEM).pause();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxMzY5Ng=="}, "originalCommit": {"oid": "f983f7ed91d8fea0d0ff83728709b9ef9ab7b64c"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4357, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}