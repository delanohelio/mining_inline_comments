{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxOTY5NzY2", "number": 1407, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODoxMTo1MVrODyY3kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODo1NjoyMFrODyZ9Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTYyODMyOnYy", "diffSide": "RIGHT", "path": "documentation/modules/ROOT/pages/connectors/postgresql.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODoxMTo1MVrOGGZobg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODoxMTo1MVrOGGZobg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2NDU5MA==", "bodyText": "Can you add a sentence \"May not be used with column.whitelist.", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r409364590", "createdAt": "2020-04-16T08:11:51Z", "author": {"login": "gunnarmorling"}, "path": "documentation/modules/ROOT/pages/connectors/postgresql.adoc", "diffHunk": "@@ -1755,6 +1755,11 @@ Only alphanumeric characters and underscores should be used.\n |\n |An optional comma-separated list of regular expressions that match fully-qualified table identifiers for tables to be excluded from monitoring; any table not included in the blacklist will be monitored. Each identifier is of the form _schemaName_._tableName_. May not be used with `table.whitelist`.\n \n+|`column.whitelist`\n+|\n+|An optional comma-separated list of regular expressions that match the fully-qualified names of columns that should be included in change event message values. Fully-qualified names for columns are of the form _schemaName_._tableName_._columnName_\n+\n+\n |`column.blacklist`\n |\n |An optional comma-separated list of regular expressions that match the fully-qualified names of columns that should be excluded from change event message values. Fully-qualified names for columns are of the form _schemaName_._tableName_._columnName_", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTY0NTYxOnYy", "diffSide": "RIGHT", "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODoxNjowNVrOGGZzAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNjoxNzowNVrOGHBNtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2NzI5Nw==", "bodyText": "Could you add the @FixFor annotation?", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r409367297", "createdAt": "2020-04-16T08:16:05Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java", "diffHunk": "@@ -768,6 +769,26 @@ public void shouldTakeBlacklistFiltersIntoAccount() throws Exception {\n         assertNoRecordsToConsume();\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2NzgxMg==", "bodyText": "Could you also add another test case which ensures that a whitelisted column can be subject to column masking or truncating?", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r409367812", "createdAt": "2020-04-16T08:16:55Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java", "diffHunk": "@@ -768,6 +769,26 @@ public void shouldTakeBlacklistFiltersIntoAccount() throws Exception {\n         assertNoRecordsToConsume();\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2NzI5Nw=="}, "originalCommit": {"oid": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAxMzEwOA==", "bodyText": "Done, extended the test", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r410013108", "createdAt": "2020-04-17T06:17:05Z", "author": {"login": "jhuiting"}, "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java", "diffHunk": "@@ -768,6 +769,26 @@ public void shouldTakeBlacklistFiltersIntoAccount() throws Exception {\n         assertNoRecordsToConsume();\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2NzI5Nw=="}, "originalCommit": {"oid": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTY1ODk5OnYy", "diffSide": "RIGHT", "path": "debezium-core/src/main/java/io/debezium/relational/RelationalDatabaseConnectorConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODoxOTozNVrOGGZ7oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNjoxNzoxN1rOGHBN6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2OTUwNA==", "bodyText": "This validation should go to COLUMN_BLACKLIST, right? Would be nice to add a test asserting that validation.", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r409369504", "createdAt": "2020-04-16T08:19:35Z", "author": {"login": "gunnarmorling"}, "path": "debezium-core/src/main/java/io/debezium/relational/RelationalDatabaseConnectorConfig.java", "diffHunk": "@@ -181,6 +181,20 @@ public static DecimalHandlingMode parse(String value, String defaultValue) {\n             .withImportance(Importance.MEDIUM)\n             .withDescription(\"\");\n \n+    /**\n+     * A comma-separated list of regular expressions that match fully-qualified names of columns to be excluded from monitoring\n+     * and change messages. The exact form of fully qualified names for columns might vary between connector types.\n+     * For instance, they could be of the form {@code <databaseName>.<tableName>.<columnName>} or\n+     * {@code <schemaName>.<tableName>.<columnName>} or {@code <databaseName>.<schemaName>.<tableName>.<columnName>}.\n+     */\n+    public static final Field COLUMN_WHITELIST = Field.create(\"column.whitelist\")\n+            .withDisplayName(\"Include Columns\")\n+            .withType(Type.STRING)\n+            .withWidth(Width.LONG)\n+            .withImportance(Importance.MEDIUM)\n+            .withValidation(RelationalDatabaseConnectorConfig::validateColumnBlacklist)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAxMzE2Mw==", "bodyText": "Done, and added a test", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r410013163", "createdAt": "2020-04-17T06:17:17Z", "author": {"login": "jhuiting"}, "path": "debezium-core/src/main/java/io/debezium/relational/RelationalDatabaseConnectorConfig.java", "diffHunk": "@@ -181,6 +181,20 @@ public static DecimalHandlingMode parse(String value, String defaultValue) {\n             .withImportance(Importance.MEDIUM)\n             .withDescription(\"\");\n \n+    /**\n+     * A comma-separated list of regular expressions that match fully-qualified names of columns to be excluded from monitoring\n+     * and change messages. The exact form of fully qualified names for columns might vary between connector types.\n+     * For instance, they could be of the form {@code <databaseName>.<tableName>.<columnName>} or\n+     * {@code <schemaName>.<tableName>.<columnName>} or {@code <databaseName>.<schemaName>.<tableName>.<columnName>}.\n+     */\n+    public static final Field COLUMN_WHITELIST = Field.create(\"column.whitelist\")\n+            .withDisplayName(\"Include Columns\")\n+            .withType(Type.STRING)\n+            .withWidth(Width.LONG)\n+            .withImportance(Importance.MEDIUM)\n+            .withValidation(RelationalDatabaseConnectorConfig::validateColumnBlacklist)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2OTUwNA=="}, "originalCommit": {"oid": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTc5OTY1OnYy", "diffSide": "RIGHT", "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODo1NDo0NVrOGGbUXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNjoxNzoyM1rOGHBOEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM5MjIyMA==", "bodyText": "Seems like this table s1.b is not used later on?", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r409392220", "createdAt": "2020-04-16T08:54:45Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java", "diffHunk": "@@ -768,6 +769,26 @@ public void shouldTakeBlacklistFiltersIntoAccount() throws Exception {\n         assertNoRecordsToConsume();\n     }\n \n+    @Test\n+    public void shouldTakeColumnWhitelistFilterIntoAccount() throws Exception {\n+        String setupStmt = SETUP_TABLES_STMT +\n+                \"CREATE TABLE s1.b (pk SERIAL, aa integer, bb integer, PRIMARY KEY(pk));\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAxMzIwMw==", "bodyText": "Removed", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r410013203", "createdAt": "2020-04-17T06:17:23Z", "author": {"login": "jhuiting"}, "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java", "diffHunk": "@@ -768,6 +769,26 @@ public void shouldTakeBlacklistFiltersIntoAccount() throws Exception {\n         assertNoRecordsToConsume();\n     }\n \n+    @Test\n+    public void shouldTakeColumnWhitelistFilterIntoAccount() throws Exception {\n+        String setupStmt = SETUP_TABLES_STMT +\n+                \"CREATE TABLE s1.b (pk SERIAL, aa integer, bb integer, PRIMARY KEY(pk));\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM5MjIyMA=="}, "originalCommit": {"oid": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTgwNjIyOnYy", "diffSide": "RIGHT", "path": "documentation/modules/ROOT/pages/connectors/postgresql.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODo1NjoyMVrOGGbYaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNjoxNzozMFrOGHBOMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM5MzI1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Although the `column.blacklist` and `column.whitelist` configuration properties allow you to remove columns from the event values, all columns in a primary or unique key are always included in the event's key.\n          \n          \n            \n            Although the `column.blacklist` and `column.whitelist` configuration properties allow you to capture only a subset of table columns, all columns in a primary or unique key are always included in the event's key.", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r409393257", "createdAt": "2020-04-16T08:56:21Z", "author": {"login": "gunnarmorling"}, "path": "documentation/modules/ROOT/pages/connectors/postgresql.adoc", "diffHunk": "@@ -593,7 +593,7 @@ Therefore, we interpret this key as describing the row in the `public.customers`\n \n [NOTE]\n ====\n-Although the `column.blacklist` configuration property allows you to remove columns from the event values, all columns in a primary or unique key are always included in the event's key.\n+Although the `column.blacklist` and `column.whitelist` configuration properties allow you to remove columns from the event values, all columns in a primary or unique key are always included in the event's key.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAxMzIzMw==", "bodyText": "Done", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r410013233", "createdAt": "2020-04-17T06:17:30Z", "author": {"login": "jhuiting"}, "path": "documentation/modules/ROOT/pages/connectors/postgresql.adoc", "diffHunk": "@@ -593,7 +593,7 @@ Therefore, we interpret this key as describing the row in the `public.customers`\n \n [NOTE]\n ====\n-Although the `column.blacklist` configuration property allows you to remove columns from the event values, all columns in a primary or unique key are always included in the event's key.\n+Although the `column.blacklist` and `column.whitelist` configuration properties allow you to remove columns from the event values, all columns in a primary or unique key are always included in the event's key.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM5MzI1Nw=="}, "originalCommit": {"oid": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4381, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}