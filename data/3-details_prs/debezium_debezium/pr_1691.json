{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NDg4NDMy", "number": 1691, "title": "DBZ-2329 Fix for: Change events lost when connnector is restarted while processing transaction with PK update", "bodyText": "https://issues.redhat.com/browse/DBZ-2329", "createdAt": "2020-07-10T14:58:35Z", "url": "https://github.com/debezium/debezium/pull/1691", "merged": true, "mergeCommit": {"oid": "1ada5c4b2313adb7d7ca9ff63696b9f55e031690"}, "closed": true, "closedAt": "2020-07-21T12:21:31Z", "author": {"login": "korzenek"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczk_DCABqjM1MzQyNjk1OTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3EBK-gBqjM1NzA2MzQyMzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMTc4MjA5", "url": "https://github.com/debezium/debezium/pull/1691#pullrequestreview-452178209", "createdAt": "2020-07-21T07:03:15Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNzowMzoxNVrOG0qx-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNzo0NDowNlrOG0sDMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDA1Ng==", "bodyText": "That's more for DEBUG level perhaps? Or is this a rare thing to happen?", "url": "https://github.com/debezium/debezium/pull/1691#discussion_r457880056", "createdAt": "2020-07-21T07:03:15Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerStreamingChangeEventSource.java", "diffHunk": "@@ -191,15 +193,28 @@ public void execute(ChangeEventSourceContext context) throws InterruptedExceptio\n                                 tableWithSmallestLsn.next();\n                                 continue;\n                             }\n+\n+                            if (tableWithSmallestLsn.isNewTransaction() && changesStoppedBeingMonotonic.get()) {\n+                                LOGGER.info(\"Resetting changesStoppedBeingMonotonic as transaction changes\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDEwMQ==", "bodyText": "Same here.", "url": "https://github.com/debezium/debezium/pull/1691#discussion_r457880101", "createdAt": "2020-07-21T07:03:21Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerStreamingChangeEventSource.java", "diffHunk": "@@ -191,15 +193,28 @@ public void execute(ChangeEventSourceContext context) throws InterruptedExceptio\n                                 tableWithSmallestLsn.next();\n                                 continue;\n                             }\n+\n+                            if (tableWithSmallestLsn.isNewTransaction() && changesStoppedBeingMonotonic.get()) {\n+                                LOGGER.info(\"Resetting changesStoppedBeingMonotonic as transaction changes\");\n+                                changesStoppedBeingMonotonic.set(false);\n+                            }\n+\n+                            // After restart for changes that are not monotonic to avoid data loss\n+                            if (tableWithSmallestLsn.isCurrentPositionSmallerThanPreviousPosition()) {\n+                                LOGGER.info(\"Disabling skipping changes due to not monotonic order of changes\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDQzMA==", "bodyText": "Could you add a JavaDoc comment describing the semantics; in particular, what's \"new\" in this context?", "url": "https://github.com/debezium/debezium/pull/1691#discussion_r457880430", "createdAt": "2020-07-21T07:04:03Z", "author": {"login": "gunnarmorling"}, "path": "debezium-core/src/main/java/io/debezium/pipeline/source/spi/ChangeTableResultSet.java", "diffHunk": "@@ -100,4 +110,6 @@ public String toString() {\n     protected abstract int getOperation(ResultSet resultSet) throws SQLException;\n \n     protected abstract T getNextChangePosition(ResultSet resultSet) throws SQLException;\n+\n+    protected abstract boolean isNewTransaction() throws SQLException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkwMDg0OQ==", "bodyText": "tableC -> tableB?", "url": "https://github.com/debezium/debezium/pull/1691#discussion_r457900849", "createdAt": "2020-07-21T07:44:06Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-sqlserver/src/test/java/io/debezium/connector/sqlserver/SqlServerConnectorIT.java", "diffHunk": "@@ -605,6 +605,56 @@ public void updatePrimaryKeyWithRestartInMiddle() throws Exception {\n         stopConnector();\n     }\n \n+    @Test\n+    @FixFor(\"DBZ-2329\")\n+    public void updatePrimaryKeyTwiceWithRestartInMiddleOfTx() throws Exception {\n+\n+        final Configuration config = TestHelper.defaultConfig()\n+                .with(SqlServerConnectorConfig.SNAPSHOT_MODE, SnapshotMode.INITIAL)\n+                .with(SqlServerConnectorConfig.MAX_QUEUE_SIZE, 2)\n+                .with(SqlServerConnectorConfig.MAX_BATCH_SIZE, 1)\n+                .with(SqlServerConnectorConfig.TOMBSTONES_ON_DELETE, false)\n+                .build();\n+\n+        // Testing.Print.enable();\n+        // Wait for snapshot completion\n+        start(SqlServerConnector.class, config, record -> {\n+            final Struct envelope = (Struct) record.value();\n+            boolean stop = envelope != null && \"d\".equals(envelope.get(\"op\")) && (envelope.getStruct(\"before\").getInt32(\"id\") == 305);\n+            return stop;\n+        });\n+        assertConnectorIsRunning();\n+\n+        consumeRecordsByTopic(1);\n+\n+        connection.setAutoCommit(false);\n+\n+        connection.execute(\"INSERT INTO tableb (id, colb) values (1,'1')\");\n+        connection.execute(\"INSERT INTO tableb (id, colb) values (2,'2')\");\n+        connection.execute(\"INSERT INTO tableb (id, colb) values (3,'3')\");\n+        connection.execute(\"INSERT INTO tableb (id, colb) values (4,'4')\");\n+        connection.execute(\"INSERT INTO tableb (id, colb) values (5,'5')\");\n+        consumeRecordsByTopic(5);\n+\n+        connection.execute(\"UPDATE tableb set id = colb + 300\");\n+        connection.execute(\"UPDATE tableb set id = colb + 300\");\n+\n+        final SourceRecords records1 = consumeRecordsByTopic(14);\n+\n+        stopConnector();\n+\n+        start(SqlServerConnector.class, config);\n+        assertConnectorIsRunning();\n+        final SourceRecords records2 = consumeRecordsByTopic(6);\n+\n+        final List<SourceRecord> tableC = records1.recordsForTopic(\"server1.dbo.tableb\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "8031f1f8860a1cf034747f5d8cf9a83c960fb045", "author": {"user": {"login": "korzenek", "name": "Lukasz Korzeniowski"}}, "url": "https://github.com/debezium/debezium/commit/8031f1f8860a1cf034747f5d8cf9a83c960fb045", "committedDate": "2020-07-21T10:52:25Z", "message": "DBZ-2329 Do not skip events after restart when stream is not monotonic"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "8031f1f8860a1cf034747f5d8cf9a83c960fb045", "author": {"user": {"login": "korzenek", "name": "Lukasz Korzeniowski"}}, "url": "https://github.com/debezium/debezium/commit/8031f1f8860a1cf034747f5d8cf9a83c960fb045", "committedDate": "2020-07-21T10:52:25Z", "message": "DBZ-2329 Do not skip events after restart when stream is not monotonic"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2492, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}