{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMjczNjgz", "number": 1920, "title": "DBZ-2699 implement skipped.operation in core", "bodyText": "https://issues.redhat.com/browse/DBZ-2699\nimplement skipped.operation in core and also implement it on Postgresql", "createdAt": "2020-10-29T13:25:48Z", "url": "https://github.com/debezium/debezium/pull/1920", "merged": true, "mergeCommit": {"oid": "5d6705c3fec2cd898af7848ade67d742e77641f9"}, "closed": true, "closedAt": "2021-04-08T09:59:08Z", "author": {"login": "blcksrx"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXSSvJgBqjM5MzYzNjU4ODc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABeI57XigBqjQ1NDI1NTAzMjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MDE3NTg2", "url": "https://github.com/debezium/debezium/pull/1920#pullrequestreview-548017586", "createdAt": "2020-12-09T09:59:52Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOTo1OTo1MlrOICMOWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOTo1OTo1MlrOICMOWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE2ODM0Ng==", "bodyText": "I added both dependencies as it looked like sometimes the package for debezium-assembly-descriptors was missing and the build terminated. And later it looked like a cached version of debezium-core (without the applied changes) was used and the changes were not active and tests were failing. I had no time to dig deeper into that but maybe @jpechane have a better idea. It might be maven cache / cache-key related.", "url": "https://github.com/debezium/debezium/pull/1920#discussion_r539168346", "createdAt": "2020-12-09T09:59:52Z", "author": {"login": "rk3rn3r"}, "path": ".github/workflows/testing-workflow.yml", "diffHunk": "@@ -41,4 +41,4 @@ jobs:\n           restore-keys: |\n             ${{ runner.os }}-maven-\n       - name: Check changes in Debezium Testing\n-        run: mvn clean install -B -pl debezium-testing -am -amd -Passembly -Dcheckstyle.skip=true -Dformat.skip=true -Drevapi.skip -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn\n+        run: mvn clean install -B -pl debezium-assembly-descriptors,debezium-core,debezium-testing -am -amd -Passembly -Dcheckstyle.skip=true -Dformat.skip=true -Drevapi.skip -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxMzUyMzgy", "url": "https://github.com/debezium/debezium/pull/1920#pullrequestreview-591352382", "createdAt": "2021-02-16T15:41:12Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQxNTo0MToxM1rOImMe6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQxNTo0MToxM1rOImMe6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjkyMTMyMQ==", "bodyText": "Is something missing in this test?", "url": "https://github.com/debezium/debezium/pull/1920#discussion_r576921321", "createdAt": "2021-02-16T15:41:13Z", "author": {"login": "rk3rn3r"}, "path": "debezium-connector-sqlserver/src/test/java/io/debezium/connector/sqlserver/SqlServerConnectorIT.java", "diffHunk": "@@ -2452,6 +2452,22 @@ public void testMaxLsnSelectStatementWithFalse() throws Exception {\n         stopConnector();\n     }\n \n+    @Test\n+    @FixFor(\"DBZ-2699\")\n+    public void shouldEmitNoEventsForSkippedUpdateAndDeleteOperations() throws Exception {\n+        final Configuration config = TestHelper.defaultConfig()\n+                .with(SqlServerConnectorConfig.SNAPSHOT_MODE, SnapshotMode.INITIAL)\n+                .with(SqlServerConnectorConfig.SKIPPED_OPERATIONS, \"u,d\")\n+                .build();\n+\n+        start(SqlServerConnector.class, config);\n+        assertConnectorIsRunning();\n+        // Wait for snapshot completion\n+        TestHelper.waitForSnapshotToBeCompleted();\n+        consumeRecordsByTopic(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA4NDk5ODEw", "url": "https://github.com/debezium/debezium/pull/1920#pullrequestreview-608499810", "createdAt": "2021-03-10T09:30:11Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMFQwOTozMDoxMVrOIz4Hpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMFQwOTozMDoxMVrOIz4Hpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MTI2Nzc1MQ==", "bodyText": "How is this test removal related?", "url": "https://github.com/debezium/debezium/pull/1920#discussion_r591267751", "createdAt": "2021-03-10T09:30:11Z", "author": {"login": "rk3rn3r"}, "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java", "diffHunk": "@@ -2467,26 +2467,6 @@ public void shouldProduceMessagesOnlyForConfiguredTables() throws Exception {\n     }\n \n     @Test\n-    @FixFor(\"DBZ-2885\")\n-    @SkipWhenDecoderPluginNameIsNot(value = SkipWhenDecoderPluginNameIsNot.DecoderPluginName.PGOUTPUT, reason = \"Publication configuration only valid for PGOUTPUT decoder\")\n-    public void shouldThrowWhenTableFiltersIsEmpty() throws Exception {\n-        final LogInterceptor logInterceptor = new LogInterceptor();\n-\n-        TestHelper.dropAllSchemas();\n-        TestHelper.dropPublication(\"cdc\");\n-        TestHelper.executeDDL(\"postgres_create_tables.ddl\");\n-        TestHelper.execute(SETUP_TABLES_STMT);\n-\n-        Configuration.Builder configBuilder = TestHelper.defaultConfig()\n-                .with(PostgresConnectorConfig.PUBLICATION_NAME, \"cdc\")\n-                .with(PostgresConnectorConfig.PUBLICATION_AUTOCREATE_MODE, PostgresConnectorConfig.AutoCreateMode.FILTERED.getValue())\n-                .with(PostgresConnectorConfig.TABLE_INCLUDE_LIST, \"nonexistent.table\");\n-\n-        start(PostgresConnector.class, configBuilder.build());\n-        assertConnectorNotRunning();\n-        assertTrue(logInterceptor.containsStacktraceElement(\"No table filters found for filtered publication cdc\"));\n-    }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA4NTAzOTUw", "url": "https://github.com/debezium/debezium/pull/1920#pullrequestreview-608503950", "createdAt": "2021-03-10T09:34:37Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMFQwOTozNDozN1rOIz4Ygw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMFQwOTozNDozN1rOIz4Ygw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MTI3MjA2Nw==", "bodyText": "Would it be possible to add a test (that then will be executed for all connectors \"auto-magically\") in debezium-core? No is a valid answer, but it would be nice if that would be somehow possible.\nI am not sure if it's possible to have a test case there or it always needs coupling to a connector implementation?", "url": "https://github.com/debezium/debezium/pull/1920#discussion_r591272067", "createdAt": "2021-03-10T09:34:37Z", "author": {"login": "rk3rn3r"}, "path": "debezium-connector-sqlserver/src/test/java/io/debezium/connector/sqlserver/SqlServerConnectorIT.java", "diffHunk": "@@ -2452,6 +2452,42 @@ public void testMaxLsnSelectStatementWithFalse() throws Exception {\n         stopConnector();\n     }\n \n+    @Test\n+    @FixFor(\"DBZ-2699\")\n+    public void shouldEmitNoEventsForSkippedUpdateAndDeleteOperations() throws Exception {\n+        final Configuration config = TestHelper.defaultConfig()\n+                .with(SqlServerConnectorConfig.SNAPSHOT_MODE, SnapshotMode.INITIAL)\n+                .with(SqlServerConnectorConfig.SKIPPED_OPERATIONS, \"u,d\")\n+                .build();\n+\n+        start(SqlServerConnector.class, config);\n+        assertConnectorIsRunning();\n+        // Wait for snapshot completion\n+        TestHelper.waitForSnapshotToBeCompleted();\n+        consumeRecordsByTopic(1);\n+\n+        connection.execute(\"INSERT INTO tablea VALUES(201, 'insert201')\");\n+        connection.execute(\"UPDATE tablea SET cola='insert201-update' WHERE id=201\");\n+        connection.execute(\"INSERT INTO tablea VALUES(202, 'insert202')\");\n+        connection.execute(\"DELETE FROM tablea WHERE id=202\");\n+        connection.execute(\"INSERT INTO tablea VALUES(203, 'insert203')\");\n+\n+        final SourceRecords records = consumeRecordsByTopic(3);\n+        final List<SourceRecord> tableA = records.recordsForTopic(\"server1.dbo.tablea\");\n+        Assertions.assertThat(tableA).hasSize(3);\n+        tableA.forEach((SourceRecord record) -> {\n+            Struct value = (Struct) record.value();\n+            assertThat(value.get(\"op\")).isEqualTo(Envelope.Operation.CREATE.code());\n+            assertThat(value.get(\"op\")).isNotEqualTo(Envelope.Operation.UPDATE.code());\n+            assertThat(value.get(\"op\")).isNotEqualTo(Envelope.Operation.DELETE.code());\n+        });\n+\n+        assertInsert(tableA.get(0), \"id\", 201);\n+        assertInsert(tableA.get(1), \"id\", 202);\n+        assertInsert(tableA.get(2), \"id\", 203);\n+\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA4NTE0Mzc4", "url": "https://github.com/debezium/debezium/pull/1920#pullrequestreview-608514378", "createdAt": "2021-03-10T09:45:40Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMFQwOTo0NTo0MFrOIz5GDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMFQwOTo0NTo0MFrOIz5GDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MTI4MzcyNQ==", "bodyText": "@blcksrx Am I right you said we can solve filtering more performant with db internal tools for some databases (like SQL Server for example)?\n@jpechane you suggested a design that for such cases we can use the more performant solution of the datastore instead. what was your idea about we make this possible inside debezium? (like: how to deactivate this global behavior here in core in favor of the more performant implementation in a connector implementation?", "url": "https://github.com/debezium/debezium/pull/1920#discussion_r591283725", "createdAt": "2021-03-10T09:45:40Z", "author": {"login": "rk3rn3r"}, "path": "debezium-core/src/main/java/io/debezium/pipeline/EventDispatcher.java", "diffHunk": "@@ -205,9 +208,11 @@ public void changeRecord(DataCollectionSchema schema,\n                                              OffsetContext offset,\n                                              ConnectHeaders headers)\n                             throws InterruptedException {\n-                        transactionMonitor.dataEvent(dataCollectionId, offset, key, value);\n-                        eventListener.onEvent(dataCollectionId, offset, key, value);\n-                        streamingReceiver.changeRecord(schema, operation, key, value, offset, headers);\n+                        if (!skippedOperations.contains(operation)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MTI3OTky", "url": "https://github.com/debezium/debezium/pull/1920#pullrequestreview-625127992", "createdAt": "2021-03-31T10:21:11Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "defde957ae8ff7da20e7b630936a013c05b72d0f", "author": {"user": {"login": "blcksrx", "name": "Hossein Torabi"}}, "url": "https://github.com/debezium/debezium/commit/defde957ae8ff7da20e7b630936a013c05b72d0f", "committedDate": "2021-04-01T17:29:03Z", "message": "DBZ-2699 implement skipped.operation in core"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "defde957ae8ff7da20e7b630936a013c05b72d0f", "author": {"user": {"login": "blcksrx", "name": "Hossein Torabi"}}, "url": "https://github.com/debezium/debezium/commit/defde957ae8ff7da20e7b630936a013c05b72d0f", "committedDate": "2021-04-01T17:29:03Z", "message": "DBZ-2699 implement skipped.operation in core"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2345, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}