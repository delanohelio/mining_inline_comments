{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NDMxOTI4", "number": 1485, "title": "DBZ-775 Update documentation for column mask/truncation and key columns", "bodyText": "https://issues.redhat.com/browse/DBZ-775\nThis PR introduces all documentation changes relevant to column masking/truncation in addition to clarifying the format used for message key columns configurations.\nThere is a parallel PR in the incubator repository that should be merged in tandem with this.", "createdAt": "2020-05-08T21:01:10Z", "url": "https://github.com/debezium/debezium/pull/1485", "merged": true, "mergeCommit": {"oid": "68c07c132ac21dc8311378590db97f74539257b3"}, "closed": true, "closedAt": "2020-05-18T15:21:27Z", "author": {"login": "Naros"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfYTQEgH2gAyNDE1NDMxOTI4OmExZmJmYWExMWU1MDZhYzJmNmI3YjBjMWU1MGQ2ZjMyMWU3NDkwYTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgOZutAFqTQwOTEwNDAxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a1fbfaa11e506ac2f6b7b0c1e50d6f321e7490a2", "author": {"user": {"login": "Naros", "name": "Chris Cranford"}}, "url": "https://github.com/debezium/debezium/commit/a1fbfaa11e506ac2f6b7b0c1e50d6f321e7490a2", "committedDate": "2020-05-08T20:56:29Z", "message": "DBZ-775 Update documentation for column mask/truncation and key columns"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MTA0MDE0", "url": "https://github.com/debezium/debezium/pull/1485#pullrequestreview-409104014", "createdAt": "2020-05-11T11:57:16Z", "commit": {"oid": "a1fbfaa11e506ac2f6b7b0c1e50d6f321e7490a2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMTo1NzoxNlrOGTZF7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMTo1ODoxNlrOGTZIAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk4NzI0Nw==", "bodyText": "So can I indeed capture changes from multiple databases with a single connector instance? // CC @jpechane", "url": "https://github.com/debezium/debezium/pull/1485#discussion_r422987247", "createdAt": "2020-05-11T11:57:16Z", "author": {"login": "gunnarmorling"}, "path": "documentation/modules/ROOT/pages/connectors/sqlserver.adoc", "diffHunk": "@@ -1430,11 +1430,11 @@ Note that primary key columns are always included in the event's key, also if bl\n Based on the used hash function referential integrity is kept while data is pseudonymized. Supported hash functions are described in the {link-java7-standard-names}[MessageDigest section] of the Java Cryptography Architecture Standard Algorithm Name Documentation.\n The hash is automatically shortened to the length of the column.\n \n-Multiple properties with different lengths can be used in a single configuration, although in each the length must be a positive integer or zero. Fully-qualified names for columns are of the form _databaseName_._tableName_._columnName_, or _databaseName_._schemaName_._tableName_._columnName_.\n+Multiple properties with different lengths can be used in a single configuration, although in each the length must be a positive integer or zero. Fully-qualified names for columns are of the form _databaseName_._schemaName_._tableName_._columnName_.\n \n Example:\n \n-    column.mask.hash.SHA-256.with.salt.CzQMA0cB5K = inventory.orders.customerName, inventory.shipment.customerName\n+    column.mask.hash.SHA-256.with.salt.CzQMA0cB5K = testDB.dbo.orders.customerName, testDB.dbo.shipment.customerName", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1fbfaa11e506ac2f6b7b0c1e50d6f321e7490a2"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk4Nzc3OQ==", "bodyText": "IIRC, the connector is already scoped for a single PDB, right? Does it then actually make sense to require the PDB name for these FQNs?", "url": "https://github.com/debezium/debezium/pull/1485#discussion_r422987779", "createdAt": "2020-05-11T11:58:16Z", "author": {"login": "gunnarmorling"}, "path": "documentation/modules/ROOT/pages/connectors/oracle.adoc", "diffHunk": "@@ -1210,15 +1210,15 @@ Emitting the tombstone event (the default behavior) allows Kafka to completely d\n |_empty string_\n | A semi-colon list of regular expressions that match fully-qualified tables and columns to map a primary key. +\n Each item (regular expression) must match the `<fully-qualified table>:<a comma-separated list of columns>` representing the custom key. +\n-Fully-qualified tables could be defined as `DB_NAME.TABLE_NAME` or `SCHEMA_NAME.TABLE_NAME`, depending on the specific connector.\n+Fully-qualified tables could be defined as _pdbName_._schemaName_._tableName_.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1fbfaa11e506ac2f6b7b0c1e50d6f321e7490a2"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2644, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}