{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MjYxMjQ3", "number": 1264, "title": "DBZ-234 Create API module with engine API", "bodyText": "https://issues.redhat.com/browse/DBZ-234\nThe module has no dependencies on Kafka (Connect)", "createdAt": "2020-02-14T08:04:47Z", "url": "https://github.com/debezium/debezium/pull/1264", "merged": true, "mergeCommit": {"oid": "6541f8d79f706c3ff37d7a9586dd1307c7e50303"}, "closed": true, "closedAt": "2020-02-25T14:31:12Z", "author": {"login": "jpechane"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcELEGmgBqjMwMzc4MjI1MjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHxzClgH2gAyMzc1MjYxMjQ3OmNjYTQ5MWM2Yzg0ODRkNTIyNTg2YjIyNTMwM2VlMjM4MDI3ZTY0NWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a560fa12c89530f34666fdd814b37ad8db82be5", "author": {"user": {"login": "jpechane", "name": "Jiri Pechanec"}}, "url": "https://github.com/debezium/debezium/commit/0a560fa12c89530f34666fdd814b37ad8db82be5", "committedDate": "2020-02-14T08:53:14Z", "message": "DBZ-234 Create API module with engine API"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "0a560fa12c89530f34666fdd814b37ad8db82be5", "author": {"user": {"login": "jpechane", "name": "Jiri Pechanec"}}, "url": "https://github.com/debezium/debezium/commit/0a560fa12c89530f34666fdd814b37ad8db82be5", "committedDate": "2020-02-14T08:53:14Z", "message": "DBZ-234 Create API module with engine API"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5ODcxNDk3", "url": "https://github.com/debezium/debezium/pull/1264#pullrequestreview-359871497", "createdAt": "2020-02-17T16:55:19Z", "commit": {"oid": "0a560fa12c89530f34666fdd814b37ad8db82be5"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNjo1NToxOVrOFqrATg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNzowMzoxNFrOFqrPMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI4OTEwMg==", "bodyText": "The existing annotation should be dropped in favour of the new one.", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r380289102", "createdAt": "2020-02-17T16:55:19Z", "author": {"login": "gunnarmorling"}, "path": "debezium-api/src/main/java/io/debezium/annotation/Incubating.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright Debezium Authors.\n+ *\n+ * Licensed under the Apache Software License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.debezium.annotation;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+\n+/**\n+ * Marks the annotated element as incubating. The contract of incubating elements (e.g. packages, types, methods,\n+ * constants etc.) is under active development and may be incompatibly altered - or removed - in subsequent releases.\n+ * <p>\n+ * Usage of incubating API/SPI members is encouraged (so the development team can get feedback on these new features)\n+ * but you should be prepared for updating code which is using them as needed.\n+ *\n+ */\n+@Documented\n+@Retention(RetentionPolicy.CLASS)\n+public @interface Incubating {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a560fa12c89530f34666fdd814b37ad8db82be5"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI5MTUwOA==", "bodyText": "I don't like the idea of such \"technical\" packages (it's ok for the annotations IMO, but I'd limit it otherwise). I'd suggest to move the engine exception to the engine package and the DebeziumException just to io.debezium.", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r380291508", "createdAt": "2020-02-17T17:00:31Z", "author": {"login": "gunnarmorling"}, "path": "debezium-api/src/main/java/io/debezium/errors/DebeziumException.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright Debezium Authors.\n+ *\n+ * Licensed under the Apache Software License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.debezium.errors;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a560fa12c89530f34666fdd814b37ad8db82be5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI5MjA4NA==", "bodyText": "Why do we need this internal interface?", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r380292084", "createdAt": "2020-02-17T17:01:49Z", "author": {"login": "gunnarmorling"}, "path": "debezium-embedded/src/main/java/io/debezium/embedded/spi/OffsetCommitPolicy.java", "diffHunk": "@@ -18,7 +18,7 @@\n  * @author Randall Hauch\n  */\n @FunctionalInterface\n-public interface OffsetCommitPolicy {\n+public interface OffsetCommitPolicy extends io.debezium.engine.spi.OffsetCommitPolicy {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a560fa12c89530f34666fdd814b37ad8db82be5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI5MjkxMg==", "bodyText": "I'd have expected existing tests to be adjusted to be coded against the new public interface?", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r380292912", "createdAt": "2020-02-17T17:03:14Z", "author": {"login": "gunnarmorling"}, "path": "debezium-embedded/src/test/java/io/debezium/embedded/EmbeddedEngineTest.java", "diffHunk": "@@ -149,6 +151,63 @@ public void shouldWorkToUseCustomChangeConsumer() throws Exception {\n         stopConnector();\n     }\n \n+    @Test\n+    public void shouldRunDebeziumEngine() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a560fa12c89530f34666fdd814b37ad8db82be5"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a81f90d3546aa71fd29c9ad0549192111ebb052", "author": {"user": {"login": "jpechane", "name": "Jiri Pechanec"}}, "url": "https://github.com/debezium/debezium/commit/7a81f90d3546aa71fd29c9ad0549192111ebb052", "committedDate": "2020-02-18T04:56:41Z", "message": "DBZ-234 Move exceptions out of separate package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83dcfe2e41e3843259bd5cad07b80c1354626598", "author": {"user": {"login": "jpechane", "name": "Jiri Pechanec"}}, "url": "https://github.com/debezium/debezium/commit/83dcfe2e41e3843259bd5cad07b80c1354626598", "committedDate": "2020-02-18T04:57:19Z", "message": "DBZ-234 Incubating annotation moved to API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ed60aff455f0ab7ded3cb1ab8b75139ccdeba85", "author": {"user": {"login": "jpechane", "name": "Jiri Pechanec"}}, "url": "https://github.com/debezium/debezium/commit/5ed60aff455f0ab7ded3cb1ab8b75139ccdeba85", "committedDate": "2020-02-18T11:35:26Z", "message": "DBZ-234 Mark deprecated code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3aaaa848ecefb3354a23993ade74ecff5eeb8981", "author": {"user": {"login": "jpechane", "name": "Jiri Pechanec"}}, "url": "https://github.com/debezium/debezium/commit/3aaaa848ecefb3354a23993ade74ecff5eeb8981", "committedDate": "2020-02-18T15:46:15Z", "message": "DBZ-234 Place Incubating into a unique package"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNjY1NzI1", "url": "https://github.com/debezium/debezium/pull/1264#pullrequestreview-363665725", "createdAt": "2020-02-24T20:05:53Z", "commit": {"oid": "3aaaa848ecefb3354a23993ade74ecff5eeb8981"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMDowNTo1M1rOFtuJQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMDoxNDo0NVrOFtuYsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ4NjI3NA==", "bodyText": "API shouldn't be provided but compile (i.e. default).", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r383486274", "createdAt": "2020-02-24T20:05:53Z", "author": {"login": "gunnarmorling"}, "path": "debezium-api/pom.xml", "diffHunk": "@@ -0,0 +1,76 @@\n+<?xml version=\"1.0\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <groupId>io.debezium</groupId>\n+        <artifactId>debezium-parent</artifactId>\n+        <version>1.1.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>debezium-api</artifactId>\n+    <name>Debezium API</name>\n+    <packaging>jar</packaging>\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>slf4j-api</artifactId>\n+            <scope>provided</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3aaaa848ecefb3354a23993ade74ecff5eeb8981"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ4NzU3OQ==", "bodyText": "Do we need to do anything to add the new module to assemblies?", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r383487579", "createdAt": "2020-02-24T20:08:46Z", "author": {"login": "gunnarmorling"}, "path": "pom.xml", "diffHunk": "@@ -406,6 +407,11 @@\n             </dependency>\n \n             <!-- Debezium artifacts -->\n+            <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3aaaa848ecefb3354a23993ade74ecff5eeb8981"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ5MDIyNQ==", "bodyText": "So here's the one tiny concern I have: what will happen if we want to add support for other formats down the road (essentially by invoking converters under the hood)? E.g. what should be passed for obtaining JSON Strings? Back in the Reactive PoC we had an indirection for that purpose, something like:\ninterface SerializationFormat<T> {}\n\ninterface Json extends SerializationFormat<String> {}\n\ninterface Connect extends SerializationFormat<SourceRecord> {}\n\nThen the usage could be like so:\n// <T extends SerializationFormat<V>, V> DebeziumEngine<V> create(T format)\nDebeziumEngine<SourceRecord> engine = DebeziumEngine.create(Connect.class)...\n\nMight wanna do this now to be prepared for the evolution down the road.", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r383490225", "createdAt": "2020-02-24T20:14:45Z", "author": {"login": "gunnarmorling"}, "path": "debezium-embedded/src/test/java/io/debezium/embedded/EmbeddedEngineTest.java", "diffHunk": "@@ -149,6 +151,63 @@ public void shouldWorkToUseCustomChangeConsumer() throws Exception {\n         stopConnector();\n     }\n \n+    @Test\n+    public void shouldRunDebeziumEngine() throws Exception {\n+        // Add initial content to the file ...\n+        appendLinesToSource(NUMBER_OF_LINES);\n+\n+        final Properties props = new Properties();\n+        props.setProperty(\"name\", \"debezium-engine\");\n+        props.setProperty(\"connector.class\", \"org.apache.kafka.connect.file.FileStreamSourceConnector\");\n+        props.setProperty(StandaloneConfig.OFFSET_STORAGE_FILE_FILENAME_CONFIG, OFFSET_STORE_PATH.toAbsolutePath().toString());\n+        props.setProperty(\"offset.flush.interval.ms\", \"0\");\n+        props.setProperty(\"file\", TEST_FILE_PATH.toAbsolutePath().toString());\n+        props.setProperty(\"topic\", \"topicX\");\n+\n+        CountDownLatch firstLatch = new CountDownLatch(1);\n+        CountDownLatch allLatch = new CountDownLatch(6);\n+\n+        // create an engine with our custom class\n+        final DebeziumEngine<SourceRecord> engine = DebeziumEngine.create(SourceRecord.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3aaaa848ecefb3354a23993ade74ecff5eeb8981"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aba87197c907db86a59eb204d42e987897c1511f", "author": {"user": {"login": "jpechane", "name": "Jiri Pechanec"}}, "url": "https://github.com/debezium/debezium/commit/aba87197c907db86a59eb204d42e987897c1511f", "committedDate": "2020-02-25T12:54:15Z", "message": "DBZ-234 Provide return type indirectly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cca491c6c8484d522586b225303ee238027e645d", "author": {"user": {"login": "jpechane", "name": "Jiri Pechanec"}}, "url": "https://github.com/debezium/debezium/commit/cca491c6c8484d522586b225303ee238027e645d", "committedDate": "2020-02-25T13:04:39Z", "message": "DBZ-234 Fix API scope"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2061, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}