{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwODczNTI0", "number": 1791, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODoyMjo0MFrOEjepww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo1Njo1OVrOEjfgLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjM3ODI3OnYy", "diffSide": "RIGHT", "path": "debezium-core/src/main/java/io/debezium/config/CommonConnectorConfig.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODoyMjo0MFrOHR2awg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMToxODo1MlrOHXVjow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3OTQyNg==", "bodyText": "This could need some streamlining with existing option names and structures. How about \"table.snapshot.include.list\" as a name? And making it a list of regexps, as is done for the other similar options?", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488479426", "createdAt": "2020-09-15T08:22:40Z", "author": {"login": "gunnarmorling"}, "path": "debezium-core/src/main/java/io/debezium/config/CommonConnectorConfig.java", "diffHunk": "@@ -308,6 +310,14 @@ public static BinaryHandlingMode parse(String value, String defaultValue) {\n             .withDescription(\"The maximum number of records that should be loaded into memory while performing a snapshot\")\n             .withValidation(Field::isNonNegativeInteger);\n \n+    public static final Field SNAPSHOT_MODE_TABLES = Field.create(\"snapshot.table\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc5MzE0Mg==", "bodyText": "Hi @gunnarmorling, apologies, if I have missed something, in order to make a Field a list of regexps, would the following suffice?\npublic static final Field SNAPSHOT_MODE_TABLES = Field.create(\"snapshot.include.collection.list\")\n            .withDisplayName(\"Snapshot Mode include Data Collection\")\n            .withType(Type.LIST)\n            .withWidth(Width.LONG)\n            .withImportance(Importance.MEDIUM)\n            .withValidation(Field::isListOfRegex)\n            .withDescription(\n                    \"this setting must be set to specify a list of tables/collections \nwhose snapshot must be taken on creating or restarting the connector.\");", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488793142", "createdAt": "2020-09-15T16:15:09Z", "author": {"login": "KaushikIyer16"}, "path": "debezium-core/src/main/java/io/debezium/config/CommonConnectorConfig.java", "diffHunk": "@@ -308,6 +310,14 @@ public static BinaryHandlingMode parse(String value, String defaultValue) {\n             .withDescription(\"The maximum number of records that should be loaded into memory while performing a snapshot\")\n             .withValidation(Field::isNonNegativeInteger);\n \n+    public static final Field SNAPSHOT_MODE_TABLES = Field.create(\"snapshot.table\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3OTQyNg=="}, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIzMjQ4Mw==", "bodyText": "Yes, that's good for the definition. See other options (e.g. \"table.include.list\") for how this is handled then (splitting, evaluating this as regexp, etc.).", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r494232483", "createdAt": "2020-09-24T11:18:52Z", "author": {"login": "gunnarmorling"}, "path": "debezium-core/src/main/java/io/debezium/config/CommonConnectorConfig.java", "diffHunk": "@@ -308,6 +310,14 @@ public static BinaryHandlingMode parse(String value, String defaultValue) {\n             .withDescription(\"The maximum number of records that should be loaded into memory while performing a snapshot\")\n             .withValidation(Field::isNonNegativeInteger);\n \n+    public static final Field SNAPSHOT_MODE_TABLES = Field.create(\"snapshot.table\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3OTQyNg=="}, "originalCommit": null, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjM3ODU3OnYy", "diffSide": "RIGHT", "path": "debezium-core/src/main/java/io/debezium/config/CommonConnectorConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODoyMjo0NlrOHR2a9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODoyMjo0NlrOHR2a9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3OTQ3OQ==", "bodyText": "Needs updating", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488479479", "createdAt": "2020-09-15T08:22:46Z", "author": {"login": "gunnarmorling"}, "path": "debezium-core/src/main/java/io/debezium/config/CommonConnectorConfig.java", "diffHunk": "@@ -308,6 +310,14 @@ public static BinaryHandlingMode parse(String value, String defaultValue) {\n             .withDescription(\"The maximum number of records that should be loaded into memory while performing a snapshot\")\n             .withValidation(Field::isNonNegativeInteger);\n \n+    public static final Field SNAPSHOT_MODE_TABLES = Field.create(\"snapshot.table\")\n+            .withDisplayName(\"Snapshot Mode Custom Tables\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjM4NDIwOnYy", "diffSide": "RIGHT", "path": "debezium-core/src/main/java/io/debezium/config/CommonConnectorConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODoyNDoxMVrOHR2eiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODoyNDoxMVrOHR2eiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4MDM5Mg==", "bodyText": "How about getTablesToBeSnapshotted()?", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488480392", "createdAt": "2020-09-15T08:24:11Z", "author": {"login": "gunnarmorling"}, "path": "debezium-core/src/main/java/io/debezium/config/CommonConnectorConfig.java", "diffHunk": "@@ -524,6 +535,12 @@ public boolean getSanitizeFieldNames() {\n         }\n     }\n \n+    public Set<String> getSnapshotAllowedTables() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjM4NzQ2OnYy", "diffSide": "RIGHT", "path": "debezium-core/src/main/java/io/debezium/pipeline/source/AbstractSnapshotChangeEventSource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODoyNTowMFrOHR2gew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODoyNTowMFrOHR2gew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4MDg5MQ==", "bodyText": "determineDataCollectionsToBeSnapshotted().", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488480891", "createdAt": "2020-09-15T08:25:00Z", "author": {"login": "gunnarmorling"}, "path": "debezium-core/src/main/java/io/debezium/pipeline/source/AbstractSnapshotChangeEventSource.java", "diffHunk": "@@ -81,6 +84,18 @@ public SnapshotResult execute(ChangeEventSourceContext context) throws Interrupt\n         }\n     }\n \n+    protected <T extends DataCollectionId> Set<T> determineAllowedDataCollectionsForSnapshot(final Set<T> allDataCollections) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjM5MzQ1OnYy", "diffSide": "RIGHT", "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODoyNjoxOFrOHR2kFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNjoxODowMVrOHSJr6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4MTgxNA==", "bodyText": "Could you add the @FixFor annotation (here and elsewhere)?", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488481814", "createdAt": "2020-09-15T08:26:18Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java", "diffHunk": "@@ -1157,6 +1157,57 @@ public void shouldAllowForCustomSnapshot() throws InterruptedException {\n         VerifyRecord.isValidRead(s2recs.get(1), PK_FIELD, 2);\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc5NTExNQ==", "bodyText": "Sure, Will add them across all tests.", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488795115", "createdAt": "2020-09-15T16:18:01Z", "author": {"login": "KaushikIyer16"}, "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java", "diffHunk": "@@ -1157,6 +1157,57 @@ public void shouldAllowForCustomSnapshot() throws InterruptedException {\n         VerifyRecord.isValidRead(s2recs.get(1), PK_FIELD, 2);\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4MTgxNA=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjQwMDU5OnYy", "diffSide": "RIGHT", "path": "debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresSnapshotChangeEventSource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODoyNzo1N1rOHR2oaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODoyNzo1N1rOHR2oaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4MjkyMA==", "bodyText": "Wow, that's quite something. @jpechane, I think that's good, a bit hard to believe we locked indeed all tables before? Thinking of it, wasn't there even a report related to this?", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488482920", "createdAt": "2020-09-15T08:27:57Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresSnapshotChangeEventSource.java", "diffHunk": "@@ -94,7 +94,7 @@ protected void connectionCreated(RelationalSnapshotContext snapshotContext) thro\n     protected void lockTablesForSchemaSnapshot(ChangeEventSourceContext sourceContext, RelationalSnapshotContext snapshotContext)\n             throws SQLException, InterruptedException {\n         final Duration lockTimeout = connectorConfig.snapshotLockTimeout();\n-        final Optional<String> lockStatement = snapshotter.snapshotTableLockingStatement(lockTimeout, schema.tableIds());\n+        final Optional<String> lockStatement = snapshotter.snapshotTableLockingStatement(lockTimeout, snapshotContext.capturedTables);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjQwNTYxOnYy", "diffSide": "RIGHT", "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/SnapshotReader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODoyOToxM1rOHR2rng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODoyOToxM1rOHR2rng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4Mzc0Mg==", "bodyText": "Interesting style. Is there a reason for making this a predicate instead of simply a private method which takes the table id?", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488483742", "createdAt": "2020-09-15T08:29:13Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/SnapshotReader.java", "diffHunk": "@@ -254,6 +255,9 @@ protected void execute() {\n         final List<TableId> tablesToSnapshotSchemaAfterUnlock = new ArrayList<>();\n         Set<TableId> lockedTables = Collections.emptySet();\n \n+        final Set<String> snapshotAllowedTables = context.getConnectorConfig().getSnapshotAllowedTables();\n+        final Predicate<TableId> isAllowedForSnapshot = tableId -> snapshotAllowedTables.size() == 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjQ5MjYwOnYy", "diffSide": "RIGHT", "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/SnapshotReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo1MDo1MVrOHR3hsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNjoxNzoyM1rOHSJqVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5NzU4Ng==", "bodyText": "Please remove the empty comment", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488497586", "createdAt": "2020-09-15T08:50:51Z", "author": {"login": "jpechane"}, "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/SnapshotReader.java", "diffHunk": "@@ -404,7 +408,8 @@ protected void execute() {\n                                 else {\n                                     logger.info(\"\\t '{}' is not added among known tables\", id);\n                                 }\n-                                if (filters.tableFilter().test(id)) {\n+                                //", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc5NDcwOA==", "bodyText": "Sure, will re-check elsewhere for the same", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488794708", "createdAt": "2020-09-15T16:17:23Z", "author": {"login": "KaushikIyer16"}, "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/SnapshotReader.java", "diffHunk": "@@ -404,7 +408,8 @@ protected void execute() {\n                                 else {\n                                     logger.info(\"\\t '{}' is not added among known tables\", id);\n                                 }\n-                                if (filters.tableFilter().test(id)) {\n+                                //", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5NzU4Ng=="}, "originalCommit": null, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjUwMTE0OnYy", "diffSide": "RIGHT", "path": "debezium-core/src/main/java/io/debezium/config/CommonConnectorConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo1MzowMlrOHR3nDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTozMzoxMFrOHSog1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5ODk1OQ==", "bodyText": "Can't we use different name like snapshot.data.collection to encompass both tables and MongoDB collections?", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488498959", "createdAt": "2020-09-15T08:53:02Z", "author": {"login": "jpechane"}, "path": "debezium-core/src/main/java/io/debezium/config/CommonConnectorConfig.java", "diffHunk": "@@ -308,6 +310,14 @@ public static BinaryHandlingMode parse(String value, String defaultValue) {\n             .withDescription(\"The maximum number of records that should be loaded into memory while performing a snapshot\")\n             .withValidation(Field::isNonNegativeInteger);\n \n+    public static final Field SNAPSHOT_MODE_TABLES = Field.create(\"snapshot.table\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMwMDE4Mw==", "bodyText": "Ah yes, very good point!", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r489300183", "createdAt": "2020-09-16T09:33:10Z", "author": {"login": "gunnarmorling"}, "path": "debezium-core/src/main/java/io/debezium/config/CommonConnectorConfig.java", "diffHunk": "@@ -308,6 +310,14 @@ public static BinaryHandlingMode parse(String value, String defaultValue) {\n             .withDescription(\"The maximum number of records that should be loaded into memory while performing a snapshot\")\n             .withValidation(Field::isNonNegativeInteger);\n \n+    public static final Field SNAPSHOT_MODE_TABLES = Field.create(\"snapshot.table\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5ODk1OQ=="}, "originalCommit": null, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjUwODgwOnYy", "diffSide": "RIGHT", "path": "debezium-core/src/main/java/io/debezium/pipeline/source/AbstractSnapshotChangeEventSource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo1NDo1MVrOHR3r6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo1NDo1MVrOHR3r6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUwMDIwMg==", "bodyText": "Again, should use generic names like snapshotAllowedDataCollections", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488500202", "createdAt": "2020-09-15T08:54:51Z", "author": {"login": "jpechane"}, "path": "debezium-core/src/main/java/io/debezium/pipeline/source/AbstractSnapshotChangeEventSource.java", "diffHunk": "@@ -81,6 +84,18 @@ public SnapshotResult execute(ChangeEventSourceContext context) throws Interrupt\n         }\n     }\n \n+    protected <T extends DataCollectionId> Set<T> determineAllowedDataCollectionsForSnapshot(final Set<T> allDataCollections) {\n+        final Set<String> snapshotAllowedTables = connectorConfig.getSnapshotAllowedTables();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjUxNzU5OnYy", "diffSide": "RIGHT", "path": "debezium-connector-mongodb/src/main/java/io/debezium/connector/mongodb/MongoDbSnapshotChangeEventSource.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo1Njo1OVrOHR3xYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMTozNDo1M1rOHXWHVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUwMTYwMw==", "bodyText": "There is a planned Jira for snapshotting collections based on the include list order. Could we keep this as a List?", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488501603", "createdAt": "2020-09-15T08:56:59Z", "author": {"login": "jpechane"}, "path": "debezium-connector-mongodb/src/main/java/io/debezium/connector/mongodb/MongoDbSnapshotChangeEventSource.java", "diffHunk": "@@ -342,7 +343,7 @@ private void createDataEventsForReplicaSet(ChangeEventSourceContext sourceContex\n \n         LOGGER.info(\"Beginning snapshot of '{}' at {}\", rsName, rsOffsetContext.getOffset());\n \n-        final List<CollectionId> collections = primaryClient.collections();\n+        final Set<CollectionId> collections = determineAllowedDataCollectionsForSnapshot(primaryClient.collections());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc4OTgwNQ==", "bodyText": "In methods like io.debezium.relational.RelationalSnapshotChangeEventSource#determineCapturedTables a Set is required. so i could one of two things:\n\n\nmake determineAllowedDataCollectionsForSnapshot to take a Collection and return a List<T> and in the above method i can wrap it again in a set by doing new HashSet<>(determineDataCollectionsToBeSnapshotted(getAllTableIds(ctx)))\n\n\nwhat do you feel if we used a LInkedHashSet as it would maintain insertion order.", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488789805", "createdAt": "2020-09-15T16:10:25Z", "author": {"login": "KaushikIyer16"}, "path": "debezium-connector-mongodb/src/main/java/io/debezium/connector/mongodb/MongoDbSnapshotChangeEventSource.java", "diffHunk": "@@ -342,7 +343,7 @@ private void createDataEventsForReplicaSet(ChangeEventSourceContext sourceContex\n \n         LOGGER.info(\"Beginning snapshot of '{}' at {}\", rsName, rsOffsetContext.getOffset());\n \n-        final List<CollectionId> collections = primaryClient.collections();\n+        final Set<CollectionId> collections = determineAllowedDataCollectionsForSnapshot(primaryClient.collections());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUwMTYwMw=="}, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg5NzAyMg==", "bodyText": "@KaushikIyer16, sorry, I'm not quite following: how is this change for MongoDB related to RelationalSnapshotChangeEventSource (which only is used by the relational Debezium connectors)?", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r491897022", "createdAt": "2020-09-21T09:17:08Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-mongodb/src/main/java/io/debezium/connector/mongodb/MongoDbSnapshotChangeEventSource.java", "diffHunk": "@@ -342,7 +343,7 @@ private void createDataEventsForReplicaSet(ChangeEventSourceContext sourceContex\n \n         LOGGER.info(\"Beginning snapshot of '{}' at {}\", rsName, rsOffsetContext.getOffset());\n \n-        final List<CollectionId> collections = primaryClient.collections();\n+        final Set<CollectionId> collections = determineAllowedDataCollectionsForSnapshot(primaryClient.collections());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUwMTYwMw=="}, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0MTYyMg==", "bodyText": "the same method is being used to filter out the collection names in both relational and non-relational cases. in one case it deals with sets and the other with lists. hence, I settled down to Set. I can return a Stream which can be collected on the caller end", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r494241622", "createdAt": "2020-09-24T11:34:53Z", "author": {"login": "KaushikIyer16"}, "path": "debezium-connector-mongodb/src/main/java/io/debezium/connector/mongodb/MongoDbSnapshotChangeEventSource.java", "diffHunk": "@@ -342,7 +343,7 @@ private void createDataEventsForReplicaSet(ChangeEventSourceContext sourceContex\n \n         LOGGER.info(\"Beginning snapshot of '{}' at {}\", rsName, rsOffsetContext.getOffset());\n \n-        final List<CollectionId> collections = primaryClient.collections();\n+        final Set<CollectionId> collections = determineAllowedDataCollectionsForSnapshot(primaryClient.collections());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUwMTYwMw=="}, "originalCommit": null, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4190, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}