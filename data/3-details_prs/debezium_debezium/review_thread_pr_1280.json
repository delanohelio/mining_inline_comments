{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NjE1MTA1", "number": 1280, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMToyOTo0OFrODiS0vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTozMDo0MVrODiS1iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mjg2NTkxOnYy", "diffSide": "RIGHT", "path": "debezium-testing/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMToyOTo0OFrOFtdfJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMzo1NDo0NVrOFthXWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIxMzM1MQ==", "bodyText": "I don't recall, are we going to backport testcontainers too?", "url": "https://github.com/debezium/debezium/pull/1280#discussion_r383213351", "createdAt": "2020-02-24T11:29:48Z", "author": {"login": "jpechane"}, "path": "debezium-testing/pom.xml", "diffHunk": "@@ -0,0 +1,17 @@\n+<?xml version=\"1.0\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <groupId>io.debezium</groupId>\n+    <artifactId>debezium-parent</artifactId>\n+    <version>1.1.0-SNAPSHOT</version>\n+    <relativePath>../pom.xml</relativePath>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+  <artifactId>debezium-testing</artifactId>\n+  <name>Debezium Testing</name>\n+  <packaging>pom</packaging>\n+  <modules>\n+    <module>debezium-testing-testcontainers</module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e0623cfcf74ada0b8e93dd6bed34dc1f684a1c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3Njg5MA==", "bodyText": "That was my understanding after talking to @gunnarmorling", "url": "https://github.com/debezium/debezium/pull/1280#discussion_r383276890", "createdAt": "2020-02-24T13:54:45Z", "author": {"login": "jcechace"}, "path": "debezium-testing/pom.xml", "diffHunk": "@@ -0,0 +1,17 @@\n+<?xml version=\"1.0\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <groupId>io.debezium</groupId>\n+    <artifactId>debezium-parent</artifactId>\n+    <version>1.1.0-SNAPSHOT</version>\n+    <relativePath>../pom.xml</relativePath>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+  <artifactId>debezium-testing</artifactId>\n+  <name>Debezium Testing</name>\n+  <packaging>pom</packaging>\n+  <modules>\n+    <module>debezium-testing-testcontainers</module>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIxMzM1MQ=="}, "originalCommit": {"oid": "12e0623cfcf74ada0b8e93dd6bed34dc1f684a1c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mjg2NjYyOnYy", "diffSide": "RIGHT", "path": "debezium-testing/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTozMDowOVrOFtdflw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTozMDowOVrOFtdflw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIxMzQ2Mw==", "bodyText": "Should be 1.0?", "url": "https://github.com/debezium/debezium/pull/1280#discussion_r383213463", "createdAt": "2020-02-24T11:30:09Z", "author": {"login": "jpechane"}, "path": "debezium-testing/pom.xml", "diffHunk": "@@ -0,0 +1,17 @@\n+<?xml version=\"1.0\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <groupId>io.debezium</groupId>\n+    <artifactId>debezium-parent</artifactId>\n+    <version>1.1.0-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e0623cfcf74ada0b8e93dd6bed34dc1f684a1c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mjg2NzQzOnYy", "diffSide": "RIGHT", "path": "debezium-testing/debezium-testing-openshift/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTozMDozMVrOFtdgHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTozMDozMVrOFtdgHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIxMzU5Ng==", "bodyText": "Should be 1.0?", "url": "https://github.com/debezium/debezium/pull/1280#discussion_r383213596", "createdAt": "2020-02-24T11:30:31Z", "author": {"login": "jpechane"}, "path": "debezium-testing/debezium-testing-openshift/pom.xml", "diffHunk": "@@ -0,0 +1,311 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <parent>\n+    <groupId>io.debezium</groupId>\n+    <artifactId>debezium-testing</artifactId>\n+    <version>1.1.0-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e0623cfcf74ada0b8e93dd6bed34dc1f684a1c"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mjg2NzkyOnYy", "diffSide": "RIGHT", "path": "debezium-testing/debezium-testing-testcontainers/src/test/java/io/debezium/testing/testcontainers/DebeziumContainerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTozMDo0MVrOFtdgZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNDowNTowM1rOFthspw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIxMzY3MQ==", "bodyText": "Should be 1.0?", "url": "https://github.com/debezium/debezium/pull/1280#discussion_r383213671", "createdAt": "2020-02-24T11:30:41Z", "author": {"login": "jpechane"}, "path": "debezium-testing/debezium-testing-testcontainers/src/test/java/io/debezium/testing/testcontainers/DebeziumContainerTest.java", "diffHunk": "@@ -0,0 +1,164 @@\n+/*\n+ * Copyright Debezium Authors.\n+ *\n+ * Licensed under the Apache Software License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.debezium.testing.testcontainers;\n+\n+import static org.fest.assertions.Assertions.assertThat;\n+\n+import java.io.IOException;\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import java.time.Duration;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.UUID;\n+import java.util.concurrent.TimeUnit;\n+import java.util.stream.Stream;\n+\n+import org.apache.kafka.clients.consumer.ConsumerConfig;\n+import org.apache.kafka.clients.consumer.ConsumerRecord;\n+import org.apache.kafka.clients.consumer.KafkaConsumer;\n+import org.apache.kafka.common.serialization.StringDeserializer;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.rnorth.ducttape.unreliables.Unreliables;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.containers.KafkaContainer;\n+import org.testcontainers.containers.Network;\n+import org.testcontainers.containers.PostgreSQLContainer;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.lifecycle.Startables;\n+import org.testcontainers.shaded.com.google.common.collect.ImmutableMap;\n+\n+import com.jayway.jsonpath.JsonPath;\n+\n+import okhttp3.OkHttpClient;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+\n+public class DebeziumContainerTest {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DebeziumContainerTest.class);\n+\n+    private static Network network = Network.newNetwork();\n+\n+    private static KafkaContainer kafkaContainer = new KafkaContainer()\n+            .withNetwork(network);\n+\n+    public static PostgreSQLContainer<?> postgresContainer = new PostgreSQLContainer<>(\"debezium/postgres:11\")\n+            .withNetwork(network)\n+            .withNetworkAliases(\"postgres\");\n+\n+    public static DebeziumContainer debeziumContainer = new DebeziumContainer(\"1.1.0.Beta1\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e0623cfcf74ada0b8e93dd6bed34dc1f684a1c"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI4MjM0Mw==", "bodyText": "I actually wanted to ask which version exactly to use. But looking at dockerhub it's clearly 1.0.", "url": "https://github.com/debezium/debezium/pull/1280#discussion_r383282343", "createdAt": "2020-02-24T14:05:03Z", "author": {"login": "jcechace"}, "path": "debezium-testing/debezium-testing-testcontainers/src/test/java/io/debezium/testing/testcontainers/DebeziumContainerTest.java", "diffHunk": "@@ -0,0 +1,164 @@\n+/*\n+ * Copyright Debezium Authors.\n+ *\n+ * Licensed under the Apache Software License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.debezium.testing.testcontainers;\n+\n+import static org.fest.assertions.Assertions.assertThat;\n+\n+import java.io.IOException;\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import java.time.Duration;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.UUID;\n+import java.util.concurrent.TimeUnit;\n+import java.util.stream.Stream;\n+\n+import org.apache.kafka.clients.consumer.ConsumerConfig;\n+import org.apache.kafka.clients.consumer.ConsumerRecord;\n+import org.apache.kafka.clients.consumer.KafkaConsumer;\n+import org.apache.kafka.common.serialization.StringDeserializer;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.rnorth.ducttape.unreliables.Unreliables;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.containers.KafkaContainer;\n+import org.testcontainers.containers.Network;\n+import org.testcontainers.containers.PostgreSQLContainer;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.lifecycle.Startables;\n+import org.testcontainers.shaded.com.google.common.collect.ImmutableMap;\n+\n+import com.jayway.jsonpath.JsonPath;\n+\n+import okhttp3.OkHttpClient;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+\n+public class DebeziumContainerTest {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DebeziumContainerTest.class);\n+\n+    private static Network network = Network.newNetwork();\n+\n+    private static KafkaContainer kafkaContainer = new KafkaContainer()\n+            .withNetwork(network);\n+\n+    public static PostgreSQLContainer<?> postgresContainer = new PostgreSQLContainer<>(\"debezium/postgres:11\")\n+            .withNetwork(network)\n+            .withNetworkAliases(\"postgres\");\n+\n+    public static DebeziumContainer debeziumContainer = new DebeziumContainer(\"1.1.0.Beta1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIxMzY3MQ=="}, "originalCommit": {"oid": "12e0623cfcf74ada0b8e93dd6bed34dc1f684a1c"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4418, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}