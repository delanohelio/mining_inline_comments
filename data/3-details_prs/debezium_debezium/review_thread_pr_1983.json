{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4NjQ4MjUx", "number": 1983, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDozODoxNVrOE-l6YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDo0MTo1MFrOE-mAAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDY4MzIxOnYy", "diffSide": "RIGHT", "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerDefaultValueConverter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDozODoxNVrOH71Hjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDozODoxNVrOH71Hjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ5ODMxOA==", "bodyText": "Using an inline regexp isn't ideal for this one. At the very least, this should be pre-compiled into a Pattern, but actually, there's a better way:\nLong.parseLong(value.charAt(lastIndex) == '.' ? value.substring(0, lastIndex) : value)\n\nIt's an order of magnitude faster as per a quick JMH benchmark:\nBenchmark                                  Mode  Cnt          Score          Error  Units\nTrimBenchmark.testCompiledRegexp          thrpt    3   46507099,171 \u00b1  3115790,518  ops/s\nTrimBenchmark.testRegexp                  thrpt    3   24495251,001 \u00b1 18640458,291  ops/s\nTrimBenchmark.testSubstringEndsWith       thrpt    3  286420819,975 \u00b1 38003048,105  ops/s\nTrimBenchmark.testSubstringCharAt         thrpt    3  301351671,658 \u00b1 86578981,123  ops/s", "url": "https://github.com/debezium/debezium/pull/1983#discussion_r532498318", "createdAt": "2020-11-30T10:38:15Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerDefaultValueConverter.java", "diffHunk": "@@ -118,19 +118,19 @@ private Object convertDefaultValue(Object defaultValue, Column column) {\n         final Map<String, DefaultValueMapper> result = new HashMap<>();\n \n         // Exact numbers\n-        result.put(\"bigint\", v -> Long.parseLong(v.substring(2, v.length() - 3))); // Sample value: ((3147483648.))\n-        result.put(\"int\", v -> Integer.parseInt(v.substring(2, v.length() - 2))); // Sample value: ((2147483647))\n-        result.put(\"smallint\", v -> Short.parseShort(v.substring(2, v.length() - 2))); // Sample value: ((32767))\n-        result.put(\"tinyint\", v -> Short.parseShort(v.substring(2, v.length() - 2))); // Sample value: ((255))\n+        result.put(\"bigint\", v -> nullableDefaultValueMapper(v, value -> Long.parseLong(value.replaceAll(\"(\\\\.)$\", \"\")))); // Sample value: ((3147483648.))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDY5MTc0OnYy", "diffSide": "RIGHT", "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerDefaultValueConverter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDo0MDoyM1rOH71MvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDo0MDoyM1rOH71MvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ5OTY0NA==", "bodyText": "See above; let's rather use subString().", "url": "https://github.com/debezium/debezium/pull/1983#discussion_r532499644", "createdAt": "2020-11-30T10:40:23Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerDefaultValueConverter.java", "diffHunk": "@@ -178,4 +178,14 @@ private Object convertDefaultValue(Object defaultValue, Column column) {\n         // Other data types, such as cursor, xml or uniqueidentifier, have been omitted.\n         return result;\n     }\n+\n+    public static Object nullableDefaultValueMapper(String v, DefaultValueMapper mapper) throws Exception {\n+        final String value = v.replaceAll(\"^[\\\\(]+|[\\\\)]+$\", \"\"); // trim leading and trailing parenthesis", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDY5NzYyOnYy", "diffSide": "RIGHT", "path": "debezium-connector-sqlserver/src/test/java/io/debezium/connector/sqlserver/SqlServerConnectionIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDo0MTo1MFrOH71QKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDo0MTo1MFrOH71QKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUwMDUyMQ==", "bodyText": "Let's rather use Awaitility with a defined condition (see other tests for examples).", "url": "https://github.com/debezium/debezium/pull/1983#discussion_r532500521", "createdAt": "2020-11-30T10:41:50Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-sqlserver/src/test/java/io/debezium/connector/sqlserver/SqlServerConnectionIT.java", "diffHunk": "@@ -250,6 +250,131 @@ public void shouldProperlyGetDefaultColumnValues() throws Exception {\n         }\n     }\n \n+    @Test\n+    @FixFor(\"DBZ-2698\")\n+    public void shouldProperlyGetDefaultColumnNullValues() throws Exception {\n+        try (SqlServerConnection connection = TestHelper.adminConnection()) {\n+            connection.connect();\n+            connection.execute(\"CREATE DATABASE testDB\");\n+            connection.execute(\"USE testDB\");\n+        }\n+\n+        try (SqlServerConnection connection = TestHelper.testConnection()) {\n+            connection.connect();\n+            // NOTE: you cannot enable CDC on master\n+            TestHelper.enableDbCdc(connection, \"testDB\");\n+\n+            // create table if exists\n+            String sql = \"IF EXISTS (select 1 from sys.objects where name = 'table_with_defaults' and type = 'u')\\n\"\n+                    + \"DROP TABLE testTable\\n\"\n+                    + \"CREATE TABLE testDB.dbo.table_with_defaults (\"\n+                    + \"    int_no_default_not_null int not null,\"\n+                    + \"    int_no_default int,\"\n+                    + \"    int_default_null int default null,\"\n+                    + \"    int_column int default (2147483647),\"\n+\n+                    + \"    bigint_no_default_not_null bigint not null,\"\n+                    + \"    bigint_no_default bigint,\"\n+                    + \"    bigint_default_null bigint default null,\"\n+                    + \"    bigint_column bigint default (3147483648),\"\n+\n+                    + \"    smallint_no_default_not_null smallint not null,\"\n+                    + \"    smallint_no_default smallint,\"\n+                    + \"    smallint_default_null smallint default null,\"\n+                    + \"    smallint_column smallint default (32767),\"\n+\n+                    + \"    tinyint_no_default_not_null tinyint not null,\"\n+                    + \"    tinyint_no_default tinyint,\"\n+                    + \"    tinyint_default_null tinyint default null,\"\n+                    + \"    tinyint_column tinyint default (255),\"\n+\n+                    + \"    float_no_default_not_null float not null,\"\n+                    + \"    float_no_default float,\"\n+                    + \"    float_default_null float default null,\"\n+                    + \"    float_column float default (1.2345e2),\"\n+\n+                    + \"    real_no_default_not_null real not null,\"\n+                    + \"    real_no_default real,\"\n+                    + \"    real_default_null real default null,\"\n+                    + \"    real_column real default (1.2345e3),\"\n+                    + \");\";\n+\n+            connection.execute(sql);\n+\n+            // then enable CDC and wrapper functions\n+            TestHelper.enableTableCdc(connection, \"table_with_defaults\");\n+            // insert some data\n+\n+            // and issue a test call to a CDC wrapper function\n+            Thread.sleep(5_000); // Need to wait to make sure the min_lsn is available", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4092, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}