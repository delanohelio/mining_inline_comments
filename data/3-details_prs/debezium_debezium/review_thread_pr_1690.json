{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MDkzMDYz", "number": 1690, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNDowMzowMVrOENIcug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNDowMzowMVrOENIcug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjA1MzcwOnYy", "diffSide": "RIGHT", "path": "debezium-connector-sqlserver/src/test/java/io/debezium/connector/sqlserver/SqlServerConnectorIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNDowMzowMVrOGvpKFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMzo1MjoxMFrOGv4NbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYxMDU4Mg==", "bodyText": "Please replace System.out calls", "url": "https://github.com/debezium/debezium/pull/1690#discussion_r452610582", "createdAt": "2020-07-10T04:03:01Z", "author": {"login": "jpechane"}, "path": "debezium-connector-sqlserver/src/test/java/io/debezium/connector/sqlserver/SqlServerConnectorIT.java", "diffHunk": "@@ -228,16 +231,23 @@ public void readOnlyApplicationIntent() throws Exception {\n         // Verify that multiple subsequent transactions are used in streaming phase with read-only intent\n         try (final SqlServerConnection admin = TestHelper.adminConnection()) {\n             final Set<Long> txIds = new HashSet<>();\n-            Awaitility.await().atMost(TestHelper.waitTimeForRecords() * 5, TimeUnit.SECONDS).pollInterval(100, TimeUnit.MILLISECONDS).until(() -> {\n-                admin.query(\n-                        \"SELECT (SELECT transaction_id FROM sys.dm_tran_session_transactions AS t WHERE s.session_id=t.session_id) FROM sys.dm_exec_sessions AS s WHERE program_name='\"\n-                                + appId + \"'\",\n-                        rs -> {\n-                            rs.next();\n-                            txIds.add(rs.getLong(1));\n-                        });\n-                return txIds.size() > 2;\n-            });\n+            try {\n+                Awaitility.await().atMost(TestHelper.waitTimeForRecords() * 5, TimeUnit.SECONDS).pollInterval(100, TimeUnit.MILLISECONDS).until(() -> {\n+                    admin.query(\n+                            \"SELECT (SELECT transaction_id FROM sys.dm_tran_session_transactions AS t WHERE s.session_id=t.session_id) FROM sys.dm_exec_sessions AS s WHERE program_name='\"\n+                                    + appId + \"'\",\n+                            rs -> {\n+                                rs.next();\n+                                txIds.add(rs.getLong(1));\n+                            });\n+                    return txIds.size() > 2;\n+                });\n+            }\n+            catch (ConditionTimeoutException e) {\n+                System.out.println(\"Transaction Ids: \" + txIds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg1NzE5Nw==", "bodyText": "My apologies, was too quick to push.  Fixed & only the applicable changes are now in the test case.", "url": "https://github.com/debezium/debezium/pull/1690#discussion_r452857197", "createdAt": "2020-07-10T13:52:10Z", "author": {"login": "Naros"}, "path": "debezium-connector-sqlserver/src/test/java/io/debezium/connector/sqlserver/SqlServerConnectorIT.java", "diffHunk": "@@ -228,16 +231,23 @@ public void readOnlyApplicationIntent() throws Exception {\n         // Verify that multiple subsequent transactions are used in streaming phase with read-only intent\n         try (final SqlServerConnection admin = TestHelper.adminConnection()) {\n             final Set<Long> txIds = new HashSet<>();\n-            Awaitility.await().atMost(TestHelper.waitTimeForRecords() * 5, TimeUnit.SECONDS).pollInterval(100, TimeUnit.MILLISECONDS).until(() -> {\n-                admin.query(\n-                        \"SELECT (SELECT transaction_id FROM sys.dm_tran_session_transactions AS t WHERE s.session_id=t.session_id) FROM sys.dm_exec_sessions AS s WHERE program_name='\"\n-                                + appId + \"'\",\n-                        rs -> {\n-                            rs.next();\n-                            txIds.add(rs.getLong(1));\n-                        });\n-                return txIds.size() > 2;\n-            });\n+            try {\n+                Awaitility.await().atMost(TestHelper.waitTimeForRecords() * 5, TimeUnit.SECONDS).pollInterval(100, TimeUnit.MILLISECONDS).until(() -> {\n+                    admin.query(\n+                            \"SELECT (SELECT transaction_id FROM sys.dm_tran_session_transactions AS t WHERE s.session_id=t.session_id) FROM sys.dm_exec_sessions AS s WHERE program_name='\"\n+                                    + appId + \"'\",\n+                            rs -> {\n+                                rs.next();\n+                                txIds.add(rs.getLong(1));\n+                            });\n+                    return txIds.size() > 2;\n+                });\n+            }\n+            catch (ConditionTimeoutException e) {\n+                System.out.println(\"Transaction Ids: \" + txIds);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYxMDU4Mg=="}, "originalCommit": null, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4232, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}