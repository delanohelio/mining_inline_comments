{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMTk5MzE2", "number": 1295, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwODoxMzoyMFrODkLKlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwODo0NzowMVrODkLtNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MjU4MjYyOnYy", "diffSide": "RIGHT", "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/antlr/MySqlAntlrDdlParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwODoxMzoyMFrOFwWhOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwODoxNzo0NlrOFwWnpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI0NDkyMw==", "bodyText": "Couldn't we encounter something like inventory.`My.Table` ?", "url": "https://github.com/debezium/debezium/pull/1295#discussion_r386244923", "createdAt": "2020-03-02T08:13:20Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/antlr/MySqlAntlrDdlParser.java", "diffHunk": "@@ -215,7 +215,8 @@ public String parseName(MySqlParser.UidContext uidContext) {\n     public TableId parseQualifiedTableId(MySqlParser.FullIdContext fullIdContext) {\n         String fullTableName = fullIdContext.getText();\n         int dotIndex;\n-        if ((dotIndex = fullTableName.indexOf(\".\")) > 0) {\n+        // The quoted table name that contains dot means that it is just a part of the name of the table\n+        if (!isQuoted(fullTableName) && ((dotIndex = fullTableName.indexOf(\".\")) > 0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5989be4edfecd8e659a7fbb8240c6ad327b9399"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI0NjU2Ng==", "bodyText": "@gunnarmorling Just fixed", "url": "https://github.com/debezium/debezium/pull/1295#discussion_r386246566", "createdAt": "2020-03-02T08:17:46Z", "author": {"login": "jpechane"}, "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/antlr/MySqlAntlrDdlParser.java", "diffHunk": "@@ -215,7 +215,8 @@ public String parseName(MySqlParser.UidContext uidContext) {\n     public TableId parseQualifiedTableId(MySqlParser.FullIdContext fullIdContext) {\n         String fullTableName = fullIdContext.getText();\n         int dotIndex;\n-        if ((dotIndex = fullTableName.indexOf(\".\")) > 0) {\n+        // The quoted table name that contains dot means that it is just a part of the name of the table\n+        if (!isQuoted(fullTableName) && ((dotIndex = fullTableName.indexOf(\".\")) > 0)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI0NDkyMw=="}, "originalCommit": {"oid": "a5989be4edfecd8e659a7fbb8240c6ad327b9399"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MjY3MTI3OnYy", "diffSide": "RIGHT", "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/antlr/MySqlAntlrDdlParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwODo0NzowMVrOFwXWJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwOToxNTozNVrOFwYKOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI1ODQ2OA==", "bodyText": "Do we have any test for this case actually? How would escaping of the quote look like?", "url": "https://github.com/debezium/debezium/pull/1295#discussion_r386258468", "createdAt": "2020-03-02T08:47:01Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/antlr/MySqlAntlrDdlParser.java", "diffHunk": "@@ -213,15 +213,39 @@ public String parseName(MySqlParser.UidContext uidContext) {\n      * @return qualified {@link TableId}.\n      */\n     public TableId parseQualifiedTableId(MySqlParser.FullIdContext fullIdContext) {\n-        String fullTableName = fullIdContext.getText();\n-        int dotIndex;\n-        if ((dotIndex = fullTableName.indexOf(\".\")) > 0) {\n-            return resolveTableId(withoutQuotes(fullTableName.substring(0, dotIndex)),\n-                    withoutQuotes(fullTableName.substring(dotIndex + 1, fullTableName.length())));\n-        }\n-        else {\n-            return resolveTableId(currentSchema(), withoutQuotes(fullTableName));\n+        final char[] fullTableName = fullIdContext.getText().toCharArray();\n+        StringBuilder component = new StringBuilder();\n+        String dbName = null;\n+        String tableName = null;\n+        final char EMPTY = '\\0';\n+        char lastQuote = EMPTY;\n+        for (char c : fullTableName) {\n+            if (isQuote(c)) {\n+                // Opening quote\n+                if (lastQuote == EMPTY) {\n+                    lastQuote = c;\n+                }\n+                // Closing quote\n+                else if (lastQuote == c) {\n+                    lastQuote = EMPTY;\n+                }\n+                // Quote that is part of name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb316be4123dec2472e4c2ca4303c8e50c65dec3"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI3MTgwMg==", "bodyText": "@gunnarmorling Added more comprehensive test and escaping support", "url": "https://github.com/debezium/debezium/pull/1295#discussion_r386271802", "createdAt": "2020-03-02T09:15:35Z", "author": {"login": "jpechane"}, "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/antlr/MySqlAntlrDdlParser.java", "diffHunk": "@@ -213,15 +213,39 @@ public String parseName(MySqlParser.UidContext uidContext) {\n      * @return qualified {@link TableId}.\n      */\n     public TableId parseQualifiedTableId(MySqlParser.FullIdContext fullIdContext) {\n-        String fullTableName = fullIdContext.getText();\n-        int dotIndex;\n-        if ((dotIndex = fullTableName.indexOf(\".\")) > 0) {\n-            return resolveTableId(withoutQuotes(fullTableName.substring(0, dotIndex)),\n-                    withoutQuotes(fullTableName.substring(dotIndex + 1, fullTableName.length())));\n-        }\n-        else {\n-            return resolveTableId(currentSchema(), withoutQuotes(fullTableName));\n+        final char[] fullTableName = fullIdContext.getText().toCharArray();\n+        StringBuilder component = new StringBuilder();\n+        String dbName = null;\n+        String tableName = null;\n+        final char EMPTY = '\\0';\n+        char lastQuote = EMPTY;\n+        for (char c : fullTableName) {\n+            if (isQuote(c)) {\n+                // Opening quote\n+                if (lastQuote == EMPTY) {\n+                    lastQuote = c;\n+                }\n+                // Closing quote\n+                else if (lastQuote == c) {\n+                    lastQuote = EMPTY;\n+                }\n+                // Quote that is part of name", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI1ODQ2OA=="}, "originalCommit": {"oid": "cb316be4123dec2472e4c2ca4303c8e50c65dec3"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4423, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}