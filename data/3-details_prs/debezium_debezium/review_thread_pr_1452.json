{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5NTc4ODgx", "number": 1452, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDo1MTo1NlrOD3O9nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDo1MTo1NlrOD3O9nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjQzNDIzOnYy", "diffSide": "LEFT", "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/RecordsSnapshotProducerIT.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDo1MTo1NlrOGNYDAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo1Mzo0MVrOGNzmvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY3ODY1OQ==", "bodyText": "@jpechane, WDYT about this one? I think it's ok to include this change in a minor; I'd argue it makes more sense that way actually. But it also settles that we shouldn't add this in 1.1.x IMO.", "url": "https://github.com/debezium/debezium/pull/1452#discussion_r416678659", "createdAt": "2020-04-28T14:51:56Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/RecordsSnapshotProducerIT.java", "diffHunk": "@@ -434,7 +435,7 @@ public void shouldGenerateSnapshotsForPartitionedTables() throws Exception {\n \n         // verify each topic contains exactly the number of input records\n         assertEquals(1, topicCounts.get(\"test_server.public.first_table\").intValue());\n-        assertEquals(30, topicCounts.get(\"test_server.public.partitioned\").intValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA5NDcxNQ==", "bodyText": "@gunnarmorling That's definiteyl breaking compatibility change so no way adding it to 1.1.x. IIUC this now aligns Postres with MySQL and we must warn the user to use ByLogicalTableRouter to get the functionality back.", "url": "https://github.com/debezium/debezium/pull/1452#discussion_r417094715", "createdAt": "2020-04-29T06:36:08Z", "author": {"login": "jpechane"}, "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/RecordsSnapshotProducerIT.java", "diffHunk": "@@ -434,7 +435,7 @@ public void shouldGenerateSnapshotsForPartitionedTables() throws Exception {\n \n         // verify each topic contains exactly the number of input records\n         assertEquals(1, topicCounts.get(\"test_server.public.first_table\").intValue());\n-        assertEquals(30, topicCounts.get(\"test_server.public.partitioned\").intValue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY3ODY1OQ=="}, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEwMjI4Nw==", "bodyText": "Hum, hum. So is MySQL indeed creating one topic per partition? Wondering whether it'd not make more sense to write all partitions to a single topic actually; is the information on partitioning relevant for downstream consumers?", "url": "https://github.com/debezium/debezium/pull/1452#discussion_r417102287", "createdAt": "2020-04-29T06:55:36Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/RecordsSnapshotProducerIT.java", "diffHunk": "@@ -434,7 +435,7 @@ public void shouldGenerateSnapshotsForPartitionedTables() throws Exception {\n \n         // verify each topic contains exactly the number of input records\n         assertEquals(1, topicCounts.get(\"test_server.public.first_table\").intValue());\n-        assertEquals(30, topicCounts.get(\"test_server.public.partitioned\").intValue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY3ODY1OQ=="}, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzExMzgwOQ==", "bodyText": "@gunnarmorling I stand corrected. MySQL partitioning is about spreading the table into different physical files. POstgresSQL partitioning is about spreading to different tables. MySQL equivalent is sharding.", "url": "https://github.com/debezium/debezium/pull/1452#discussion_r417113809", "createdAt": "2020-04-29T07:21:09Z", "author": {"login": "jpechane"}, "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/RecordsSnapshotProducerIT.java", "diffHunk": "@@ -434,7 +435,7 @@ public void shouldGenerateSnapshotsForPartitionedTables() throws Exception {\n \n         // verify each topic contains exactly the number of input records\n         assertEquals(1, topicCounts.get(\"test_server.public.first_table\").intValue());\n-        assertEquals(30, topicCounts.get(\"test_server.public.partitioned\").intValue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY3ODY1OQ=="}, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyMDE1MA==", "bodyText": "Ok, so what number of topics do we get for a partitioned table in MySQL? Is it the same as for Postgres with the driver update?", "url": "https://github.com/debezium/debezium/pull/1452#discussion_r417120150", "createdAt": "2020-04-29T07:34:11Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/RecordsSnapshotProducerIT.java", "diffHunk": "@@ -434,7 +435,7 @@ public void shouldGenerateSnapshotsForPartitionedTables() throws Exception {\n \n         // verify each topic contains exactly the number of input records\n         assertEquals(1, topicCounts.get(\"test_server.public.first_table\").intValue());\n-        assertEquals(30, topicCounts.get(\"test_server.public.partitioned\").intValue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY3ODY1OQ=="}, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzMDE3Mg==", "bodyText": "@gunnarmorling If I understand this change then for n paritions and one aggregate table we get\n\nn tables for PostgreSQL partitioned table\n1 table for MySQL partitioned table\nn table for MySQL sharded table\n\nAs PostgreSQL partitioning seems to be equivalent to MySQL sharding", "url": "https://github.com/debezium/debezium/pull/1452#discussion_r417130172", "createdAt": "2020-04-29T07:53:41Z", "author": {"login": "jpechane"}, "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/RecordsSnapshotProducerIT.java", "diffHunk": "@@ -434,7 +435,7 @@ public void shouldGenerateSnapshotsForPartitionedTables() throws Exception {\n \n         // verify each topic contains exactly the number of input records\n         assertEquals(1, topicCounts.get(\"test_server.public.first_table\").intValue());\n-        assertEquals(30, topicCounts.get(\"test_server.public.partitioned\").intValue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY3ODY1OQ=="}, "originalCommit": null, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4400, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}