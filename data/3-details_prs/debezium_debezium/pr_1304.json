{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMDUwMzMy", "number": 1304, "title": "DBZ-1723 Retrying upon connection loss for Postgres", "bodyText": "https://issues.redhat.com/browse/DBZ-1723", "createdAt": "2020-03-03T16:28:04Z", "url": "https://github.com/debezium/debezium/pull/1304", "merged": true, "mergeCommit": {"oid": "da1f7efb21e39bef78c146c42bb55478dc91cdae"}, "closed": true, "closedAt": "2020-03-11T12:57:24Z", "author": {"login": "gunnarmorling"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKFBbygBqjMwOTI5NDE3NTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMlOPegH2gAyMzgzMDUwMzMyOjIyMzU1OTc2ZjhkN2IwODM4N2YzZTgzOGIzZmRmZGUyY2FhNDAzZTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NTYzMTkw", "url": "https://github.com/debezium/debezium/pull/1304#pullrequestreview-368563190", "createdAt": "2020-03-04T07:53:23Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNzo1MzoyNFrOFxi9FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNzo1MzoyNFrOFxi9FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ5NzIzNg==", "bodyText": "Wouldn't it be better to match against the Throwables that the JDBC driver exposes? I'm assuming that connection failures can happen with different root causes?", "url": "https://github.com/debezium/debezium/pull/1304#discussion_r387497236", "createdAt": "2020-03-04T07:53:24Z", "author": {"login": "hashhar"}, "path": "debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresErrorHandler.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright Debezium Authors.\n+ *\n+ * Licensed under the Apache Software License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.debezium.connector.postgresql;\n+\n+import java.net.SocketException;\n+\n+import io.debezium.connector.base.ChangeEventQueue;\n+import io.debezium.pipeline.ErrorHandler;\n+import io.debezium.util.Throwables;\n+\n+/**\n+ * Error handler for Postgres.\n+ *\n+ * @author Gunnar Morling\n+ */\n+public class PostgresErrorHandler extends ErrorHandler {\n+\n+    public PostgresErrorHandler(String logicalName, ChangeEventQueue<?> queue, Runnable onThrowable) {\n+        super(PostgresConnector.class, logicalName, queue, onThrowable);\n+    }\n+\n+    @Override\n+    protected boolean isRetriable(Throwable throwable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NjIwNjI3", "url": "https://github.com/debezium/debezium/pull/1304#pullrequestreview-368620627", "createdAt": "2020-03-04T09:29:58Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwOToyOTo1OFrOFxlwWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwOToyOTo1OFrOFxlwWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU0MzEyOQ==", "bodyText": "commit and commitRecord are called asynchrnously by Connect worker. Should not we introduce a barrier that would skip those two methods in case of stop()/start() sequence being in progress?", "url": "https://github.com/debezium/debezium/pull/1304#discussion_r387543129", "createdAt": "2020-03-04T09:29:58Z", "author": {"login": "jpechane"}, "path": "debezium-core/src/main/java/io/debezium/connector/common/BaseSourceTask.java", "diffHunk": "@@ -86,6 +90,23 @@ public final void start(Map<String, String> props) {\n      */\n     protected abstract ChangeEventSourceCoordinator start(Configuration config);\n \n+    @Override\n+    public final List<SourceRecord> poll() throws InterruptedException {\n+        try {\n+            return doPoll();\n+        }\n+        catch (RetriableException e) {\n+            stop();\n+            start(config);\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Returns the next batch of source records, if any are available.\n+     */\n+    public abstract List<SourceRecord> doPoll() throws InterruptedException;\n+\n     @Override\n     public void commitRecord(SourceRecord record) throws InterruptedException {\n         Map<String, ?> currentOffset = record.sourceOffset();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NjMxODky", "url": "https://github.com/debezium/debezium/pull/1304#pullrequestreview-368631892", "createdAt": "2020-03-04T09:45:34Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwOTo0NTozNVrOFxmTHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwOTo0NTozNVrOFxmTHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU1MjAyOA==", "bodyText": "Is this a robust solution? Let's suppose a temorary spike in postgres dropping the connectio. In this case the reconnect may fail (and I'd expect it to fail) and then we are back in the square one.", "url": "https://github.com/debezium/debezium/pull/1304#discussion_r387552028", "createdAt": "2020-03-04T09:45:35Z", "author": {"login": "jpechane"}, "path": "debezium-core/src/main/java/io/debezium/connector/common/BaseSourceTask.java", "diffHunk": "@@ -86,6 +90,23 @@ public final void start(Map<String, String> props) {\n      */\n     protected abstract ChangeEventSourceCoordinator start(Configuration config);\n \n+    @Override\n+    public final List<SourceRecord> poll() throws InterruptedException {\n+        try {\n+            return doPoll();\n+        }\n+        catch (RetriableException e) {\n+            stop();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NjcyNjIz", "url": "https://github.com/debezium/debezium/pull/1304#pullrequestreview-368672623", "createdAt": "2020-03-04T10:42:33Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMDo0MjozM1rOFxoRCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMDo0MjozM1rOFxoRCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4NDI2NA==", "bodyText": "I think there are more exceptions that can be retriable.\nE.g. the exception mentioned in the comments on https://issues.redhat.com/browse/DBZ-1325 does not contain \"Broken pipe\" as cause.", "url": "https://github.com/debezium/debezium/pull/1304#discussion_r387584264", "createdAt": "2020-03-04T10:42:33Z", "author": {"login": "WouterBancken"}, "path": "debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresErrorHandler.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright Debezium Authors.\n+ *\n+ * Licensed under the Apache Software License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.debezium.connector.postgresql;\n+\n+import java.net.SocketException;\n+\n+import io.debezium.connector.base.ChangeEventQueue;\n+import io.debezium.pipeline.ErrorHandler;\n+import io.debezium.util.Throwables;\n+\n+/**\n+ * Error handler for Postgres.\n+ *\n+ * @author Gunnar Morling\n+ */\n+public class PostgresErrorHandler extends ErrorHandler {\n+\n+    public PostgresErrorHandler(String logicalName, ChangeEventQueue<?> queue, Runnable onThrowable) {\n+        super(PostgresConnector.class, logicalName, queue, onThrowable);\n+    }\n+\n+    @Override\n+    protected boolean isRetriable(Throwable throwable) {\n+        Throwable rootCause = Throwables.getRootCause(throwable);\n+\n+        if (rootCause instanceof SocketException && rootCause.getMessage().contains(\"Broken pipe\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwODUzNDIx", "url": "https://github.com/debezium/debezium/pull/1304#pullrequestreview-370853421", "createdAt": "2020-03-08T19:49:50Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQxOTo0OTo1MFrOFzXD1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQxOTo0OTo1MFrOFzXD1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5OTUxMA==", "bodyText": "Boolean param usually is a code smell. In my PR I kept handling logic in error handler - in here it looks like it leaked out if it in here.", "url": "https://github.com/debezium/debezium/pull/1304#discussion_r389399510", "createdAt": "2020-03-08T19:49:50Z", "author": {"login": "tomek0021"}, "path": "debezium-core/src/main/java/io/debezium/connector/base/ChangeEventQueue.java", "diffHunk": "@@ -162,13 +163,18 @@ public void enqueue(T record) throws InterruptedException {\n         }\n     }\n \n-    public void producerFailure(final Throwable producerFailure) {\n-        this.producerFailure = producerFailure;\n+    public void producerFailure(final Throwable producerFailure, boolean retriable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMTQ3OTQ5", "url": "https://github.com/debezium/debezium/pull/1304#pullrequestreview-371147949", "createdAt": "2020-03-09T12:58:17Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMjo1ODoxOFrOFzl7RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMjo1ODoxOFrOFzl7RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY0MzA3Ng==", "bodyText": "Should not e start using DebeziumException?", "url": "https://github.com/debezium/debezium/pull/1304#discussion_r389643076", "createdAt": "2020-03-09T12:58:18Z", "author": {"login": "jpechane"}, "path": "debezium-core/src/main/java/io/debezium/connector/base/ChangeEventQueue.java", "diffHunk": "@@ -62,7 +63,7 @@\n     private final Metronome metronome;\n     private final Supplier<PreviousContext> loggingContextSupplier;\n \n-    private volatile Throwable producerFailure;\n+    private volatile ConnectException producerFailure;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMjU1MzUx", "url": "https://github.com/debezium/debezium/pull/1304#pullrequestreview-371255351", "createdAt": "2020-03-09T14:56:52Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMjU4NTYw", "url": "https://github.com/debezium/debezium/pull/1304#pullrequestreview-371258560", "createdAt": "2020-03-09T15:00:17Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTowMDoxN1rOFzsSew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTowMzozOVrOFzsbig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc0NzMyMw==", "bodyText": "Does this mean that during stopping a Connect Worker without stopping the connector first will mean that all queued records will not get flushed and will be retried when the connector restarts?", "url": "https://github.com/debezium/debezium/pull/1304#discussion_r389747323", "createdAt": "2020-03-09T15:00:17Z", "author": {"login": "hashhar"}, "path": "debezium-core/src/main/java/io/debezium/connector/common/BaseSourceTask.java", "diffHunk": "@@ -107,8 +139,20 @@ public void commitRecord(SourceRecord record) throws InterruptedException {\n \n     @Override\n     public void commit() throws InterruptedException {\n-        if (coordinator != null && lastOffset != null) {\n-            coordinator.commitOffset(lastOffset);\n+        boolean locked = stateLock.tryLock();\n+\n+        if (locked) {\n+            try {\n+                if (coordinator != null && lastOffset != null) {\n+                    coordinator.commitOffset(lastOffset);\n+                }\n+            }\n+            finally {\n+                stateLock.unlock();\n+            }\n+        }\n+        else {\n+            LOGGER.warn(\"Couldn't commit processed log positions with the source database due to a concurrent connector shutdown or restart\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc0OTY0Mg==", "bodyText": "Am I missing something here since the doPoll() method below throws InterruptedException but not RetriableException?", "url": "https://github.com/debezium/debezium/pull/1304#discussion_r389749642", "createdAt": "2020-03-09T15:03:39Z", "author": {"login": "hashhar"}, "path": "debezium-core/src/main/java/io/debezium/connector/common/BaseSourceTask.java", "diffHunk": "@@ -102,16 +113,58 @@ public final void start(Map<String, String> props) {\n \n     @Override\n     public final List<SourceRecord> poll() throws InterruptedException {\n-        return doPoll();\n+        boolean started = startIfNeededAndPossible();\n+\n+        // in backoff period after a retriable exception\n+        if (!started) {\n+            return Collections.emptyList();\n+        }\n+\n+        try {\n+            return doPoll();\n+        }\n+        catch (RetriableException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0641ebaa3ec9e2f2e1478b92cad769d7472bca4", "author": {"user": {"login": "gunnarmorling", "name": "Gunnar Morling"}}, "url": "https://github.com/debezium/debezium/commit/b0641ebaa3ec9e2f2e1478b92cad769d7472bca4", "committedDate": "2020-03-11T09:29:20Z", "message": "DBZ-1723 Encapsulating common poll() and stop() logic in BaseSourceTask"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a2cf524f9caad81724f176891e6bf1463226f68", "author": {"user": {"login": "gunnarmorling", "name": "Gunnar Morling"}}, "url": "https://github.com/debezium/debezium/commit/8a2cf524f9caad81724f176891e6bf1463226f68", "committedDate": "2020-03-11T09:31:53Z", "message": "DBZ-1723 Centralizing stopping() logic in BaseSourceTask"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07e79e45fa6c7495e9e35d0c11f88b24b7f36765", "author": {"user": {"login": "gunnarmorling", "name": "Gunnar Morling"}}, "url": "https://github.com/debezium/debezium/commit/07e79e45fa6c7495e9e35d0c11f88b24b7f36765", "committedDate": "2020-03-11T09:36:00Z", "message": "DBZ-1723 Simplifying shutdown handling;\n\ndoStop() is already called from stop(), no need to do it again via the error handler."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db8fd29dd0394c1f54dbf7b03a68221fc33b36b3", "author": {"user": {"login": "gunnarmorling", "name": "Gunnar Morling"}}, "url": "https://github.com/debezium/debezium/commit/db8fd29dd0394c1f54dbf7b03a68221fc33b36b3", "committedDate": "2020-03-11T09:36:00Z", "message": "DBZ-1723 Infrastructure for enabling restarts after retriable errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4daa4300d6eb116d4ddc70858797f2e82aea25aa", "author": {"user": {"login": "gunnarmorling", "name": "Gunnar Morling"}}, "url": "https://github.com/debezium/debezium/commit/4daa4300d6eb116d4ddc70858797f2e82aea25aa", "committedDate": "2020-03-11T09:36:00Z", "message": "DBZ-1723 Restarting after connection losses in Postgres"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7b772580793decdcc2c315bb81c0a34c1798685", "author": {"user": {"login": "gunnarmorling", "name": "Gunnar Morling"}}, "url": "https://github.com/debezium/debezium/commit/b7b772580793decdcc2c315bb81c0a34c1798685", "committedDate": "2020-03-11T09:36:00Z", "message": "DBZ-1723 Encapsulating retriable determination in error handler"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "b7b772580793decdcc2c315bb81c0a34c1798685", "author": {"user": {"login": "gunnarmorling", "name": "Gunnar Morling"}}, "url": "https://github.com/debezium/debezium/commit/b7b772580793decdcc2c315bb81c0a34c1798685", "committedDate": "2020-03-11T09:36:00Z", "message": "DBZ-1723 Encapsulating retriable determination in error handler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22355976f8d7b08387f3e838b3fdfde2caa403e7", "author": {"user": {"login": "gunnarmorling", "name": "Gunnar Morling"}}, "url": "https://github.com/debezium/debezium/commit/22355976f8d7b08387f3e838b3fdfde2caa403e7", "committedDate": "2020-03-11T11:15:13Z", "message": "DBZ-1723 Formatting"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2102, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}