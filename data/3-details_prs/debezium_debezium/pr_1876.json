{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMTM5MjYz", "number": 1876, "title": "DBZ-2632: Force closing the JDBC connection if failed to close it gracefully.", "bodyText": "Upon investigation I found out that long running connections to an Aurora RDS MySQL database do not close properly and time out instead -- if the connection is still in the process of streaming data on another thread.\nIt seems that AWS at least partially acknowledged this issue as a networking layer issue: https://forums.aws.amazon.com/thread.jspa?messageID=440379.\nBut since it isn't feasible for us (and I imagine many others) to alter our security groups to circumvent this issue it would be better if we can solve it in the application layer. I tried using socketTimeout and connectTimeout  as a JDBC url parameter but to not avail as these parameters are ignored when you try to close a connection.\nThe solution I came up with was to attempt a graceful close of the connection, but if that fails resort to the abort() method on the Connection object which is more abrupt but will get the job done if all else fails.", "createdAt": "2020-10-08T19:29:58Z", "url": "https://github.com/debezium/debezium/pull/1876", "merged": true, "mergeCommit": {"oid": "2cded66d30c401425f366e1c2a33c954d7e31a17"}, "closed": true, "closedAt": "2020-10-20T14:28:25Z", "author": {"login": "okayrunner"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQm2L0ABqjM4NTcwNjE2MjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUYY9JAH2gAyNTAwMTM5MjYzOjRkMDNiOTE1Y2M3YjVkZTAxZWMyMmNkMjk0OTQyZTBmY2M0NWViMGU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4OTIwMTgw", "url": "https://github.com/debezium/debezium/pull/1876#pullrequestreview-508920180", "createdAt": "2020-10-15T03:58:13Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMzo1ODoxM1rOHhv6YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNDoxODozOVrOHhwLdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE1MDA0OA==", "bodyText": "This is potentially unsafe operation. If a RuntimeException or Error is thrown then this will emit CCE which would be difficult to diagnostic.", "url": "https://github.com/debezium/debezium/pull/1876#discussion_r505150048", "createdAt": "2020-10-15T03:58:13Z", "author": {"login": "jpechane"}, "path": "debezium-core/src/main/java/io/debezium/jdbc/JdbcConnection.java", "diffHunk": "@@ -910,14 +916,36 @@ public synchronized void close() throws SQLException {\n                 statementCache.values().forEach(this::cleanupPreparedStatement);\n                 statementCache.clear();\n                 LOGGER.trace(\"Closing database connection\");\n-                conn.close();\n+                doClose();\n             }\n             finally {\n                 conn = null;\n             }\n         }\n     }\n \n+    private void doClose() throws SQLException {\n+        ExecutorService executor = Executors.newSingleThreadExecutor();\n+        // attempting to close the connection gracefully\n+        Future<Object> futureClose = executor.submit(() -> {\n+            conn.close();\n+            return null;\n+        });\n+        try {\n+            futureClose.get(10, TimeUnit.SECONDS);\n+        }\n+        catch (ExecutionException e) {\n+            throw (SQLException) e.getCause();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE1MDUzMQ==", "bodyText": "This should be more then INFO level, please make it WARN", "url": "https://github.com/debezium/debezium/pull/1876#discussion_r505150531", "createdAt": "2020-10-15T04:00:25Z", "author": {"login": "jpechane"}, "path": "debezium-core/src/main/java/io/debezium/jdbc/JdbcConnection.java", "diffHunk": "@@ -910,14 +916,36 @@ public synchronized void close() throws SQLException {\n                 statementCache.values().forEach(this::cleanupPreparedStatement);\n                 statementCache.clear();\n                 LOGGER.trace(\"Closing database connection\");\n-                conn.close();\n+                doClose();\n             }\n             finally {\n                 conn = null;\n             }\n         }\n     }\n \n+    private void doClose() throws SQLException {\n+        ExecutorService executor = Executors.newSingleThreadExecutor();\n+        // attempting to close the connection gracefully\n+        Future<Object> futureClose = executor.submit(() -> {\n+            conn.close();\n+            return null;\n+        });\n+        try {\n+            futureClose.get(10, TimeUnit.SECONDS);\n+        }\n+        catch (ExecutionException e) {\n+            throw (SQLException) e.getCause();\n+        }\n+        catch (TimeoutException | InterruptedException e) {\n+            LOGGER.info(\"Failed to close database connection by calling close(), attempting abort()\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE1NDQyMA==", "bodyText": "Would it be better to use shutdownNow()?", "url": "https://github.com/debezium/debezium/pull/1876#discussion_r505154420", "createdAt": "2020-10-15T04:18:39Z", "author": {"login": "jpechane"}, "path": "debezium-core/src/main/java/io/debezium/jdbc/JdbcConnection.java", "diffHunk": "@@ -910,14 +916,36 @@ public synchronized void close() throws SQLException {\n                 statementCache.values().forEach(this::cleanupPreparedStatement);\n                 statementCache.clear();\n                 LOGGER.trace(\"Closing database connection\");\n-                conn.close();\n+                doClose();\n             }\n             finally {\n                 conn = null;\n             }\n         }\n     }\n \n+    private void doClose() throws SQLException {\n+        ExecutorService executor = Executors.newSingleThreadExecutor();\n+        // attempting to close the connection gracefully\n+        Future<Object> futureClose = executor.submit(() -> {\n+            conn.close();\n+            return null;\n+        });\n+        try {\n+            futureClose.get(10, TimeUnit.SECONDS);\n+        }\n+        catch (ExecutionException e) {\n+            throw (SQLException) e.getCause();\n+        }\n+        catch (TimeoutException | InterruptedException e) {\n+            LOGGER.info(\"Failed to close database connection by calling close(), attempting abort()\");\n+            conn.abort(Runnable::run);\n+        }\n+        finally {\n+            executor.shutdown();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 44}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d2311be4ff6778ae7e0701fdaa0961a752ce0d9", "author": {"user": null}, "url": "https://github.com/debezium/debezium/commit/5d2311be4ff6778ae7e0701fdaa0961a752ce0d9", "committedDate": "2020-10-19T22:09:11Z", "message": "DBZ-2632: Forcibly abort the JDBC connection if failed to close it gracefully."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "5d2311be4ff6778ae7e0701fdaa0961a752ce0d9", "author": {"user": null}, "url": "https://github.com/debezium/debezium/commit/5d2311be4ff6778ae7e0701fdaa0961a752ce0d9", "committedDate": "2020-10-19T22:09:11Z", "message": "DBZ-2632: Forcibly abort the JDBC connection if failed to close it gracefully."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d03b915cc7b5de01ec22cd294942e0fcc45eb0e", "author": {"user": {"login": "jpechane", "name": "Jiri Pechanec"}}, "url": "https://github.com/debezium/debezium/commit/4d03b915cc7b5de01ec22cd294942e0fcc45eb0e", "committedDate": "2020-10-20T13:00:42Z", "message": "DBZ-2632 Minor improvements"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2302, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}