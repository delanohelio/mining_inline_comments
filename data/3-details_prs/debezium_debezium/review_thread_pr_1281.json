{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NTIxNDA4", "number": 1281, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMToxOTo1OVrODjCeEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMDo1MzoyMVrODk_2HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MDY3MjE4OnYy", "diffSide": "RIGHT", "path": "debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/connection/PostgresReplicationConnection.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMToxOTo1OVrOFunxgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMToxOTo1OVrOFunxgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQzMDQ2NQ==", "bodyText": "That sounds a bit concerning. Are you planning to follow up on this? Anything we should put into the docs?", "url": "https://github.com/debezium/debezium/pull/1281#discussion_r384430465", "createdAt": "2020-02-26T11:19:59Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/connection/PostgresReplicationConnection.java", "diffHunk": "@@ -402,6 +402,16 @@ public void read(ReplicationMessageProcessor processor) throws SQLException, Int\n             public boolean readPending(ReplicationMessageProcessor processor) throws SQLException, InterruptedException {\n                 ByteBuffer read = stream.readPending();\n                 final long lastReceiveLsn = stream.getLastReceiveLSN().asLong();\n+                // Conflict between DBZ-1824 and DBZ-800\n+                // PostgreSQL replication stream increases last received LSN even if no message arrives\n+                // Then if data message arrives it will have the same LSN as the updated one.\n+                // For wal2json it means that the transaction in progress will contain last_processed_lsn to the same value\n+                // as transaction LSN and upon restart the incomplete transaction will be skipped instead of being replayed\n+                // Also there is an open question whether this can lead to premature LSN flushing as if empty message and data", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTIxMzcyOnYy", "diffSide": "RIGHT", "path": "debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresStreamingChangeEventSource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMDo1MzoyMVrOFxonMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMDo1MzoyMVrOFxonMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4OTkzOQ==", "bodyText": "Can you add a comment why only on COMMIT it's skipped?", "url": "https://github.com/debezium/debezium/pull/1281#discussion_r387589939", "createdAt": "2020-03-04T10:53:21Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresStreamingChangeEventSource.java", "diffHunk": "@@ -129,7 +129,9 @@ public void execute(ChangeEventSourceContext context) throws InterruptedExceptio\n                     if (message.isTransactionalMessage() || message.getOperation() == Operation.NOOP) {\n                         if (!connectorConfig.shouldProvideTransactionMetadata()) {\n                             LOGGER.trace(\"Received transactional message {}\", message);\n-                            skipMessage(lsn);\n+                            if (message.getOperation() == Operation.COMMIT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4421, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}