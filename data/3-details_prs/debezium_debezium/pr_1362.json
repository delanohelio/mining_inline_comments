{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNDI1ODk2", "number": 1362, "title": "DBZ-1807 Converters in Debezium engine", "bodyText": "https://issues.redhat.com/browse/DBZ-1807\nDocumentation will be added when the code is approved\nOpen question - we need to provide offsets to the callback function Committer.markProcessed()\nCurrent implementation intoruces opaque Change.reference() theat is used for this purpose so the user should not make any assumptions on offsets. The other option is to expose it as method offset with type Map so the users can assess the offsets.\nTo complement Connect format the latter is prefered, to tighten isolation the former is preferred.", "createdAt": "2020-03-25T07:23:58Z", "url": "https://github.com/debezium/debezium/pull/1362", "merged": true, "mergeCommit": {"oid": "659d4a415b59778cdd364a711333150bd28fcd06"}, "closed": true, "closedAt": "2020-04-15T14:29:31Z", "author": {"login": "jpechane"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRINcPgFqTM4MTEzMDQwMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcX4-cpAFqTM5MzgwMzIwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMTMwNDAy", "url": "https://github.com/debezium/debezium/pull/1362#pullrequestreview-381130402", "createdAt": "2020-03-25T13:11:07Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMzoxMTowN1rOF7aPYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMzoxMTowN1rOF7aPYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg0MDIyNA==", "bodyText": "What's the need for the Change parameter? Couldn't it be DebeziumEngine<String>, while still exposing Change<String> to consumers?", "url": "https://github.com/debezium/debezium/pull/1362#discussion_r397840224", "createdAt": "2020-03-25T13:11:07Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/DebeziumEngineIT.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Copyright Debezium Authors.\n+ *\n+ * Licensed under the Apache Software License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+\n+package io.debezium.connector.postgresql;\n+\n+import static org.fest.assertions.Assertions.assertThat;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.sql.SQLException;\n+import java.util.Properties;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.kafka.connect.runtime.standalone.StandaloneConfig;\n+import org.fest.assertions.Assertions;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import io.debezium.document.Document;\n+import io.debezium.document.DocumentReader;\n+import io.debezium.engine.DebeziumEngine;\n+import io.debezium.engine.DebeziumEngine.CompletionCallback;\n+import io.debezium.engine.format.Avro;\n+import io.debezium.engine.format.Change;\n+import io.debezium.engine.format.Json;\n+import io.debezium.util.LoggingContext;\n+import io.debezium.util.Testing;\n+\n+/**\n+ * Integration tests for Debezium Engine API\n+ *\n+ * @author Jiri Pechanec\n+ */\n+public class DebeziumEngineIT {\n+\n+    protected static final Path OFFSET_STORE_PATH = Testing.Files.createTestingPath(\"connector-offsets.txt\").toAbsolutePath();\n+\n+    @Before\n+    public void before() throws SQLException {\n+        OFFSET_STORE_PATH.getParent().toFile().mkdirs();\n+        OFFSET_STORE_PATH.toFile().delete();\n+        TestHelper.dropAllSchemas();\n+        TestHelper.execute(\n+                \"CREATE SCHEMA engine;\",\n+                \"CREATE TABLE engine.test (id INT PRIMARY KEY, val VARCHAR(32));\",\n+                \"INSERT INTO engine.test VALUES(1, 'value1');\");\n+    }\n+\n+    @Test\n+    public void shouldSerializeToJson() throws Exception {\n+        final Properties props = new Properties();\n+        props.putAll(TestHelper.defaultConfig().build().asMap());\n+        props.setProperty(\"name\", \"debezium-engine\");\n+        props.setProperty(\"connector.class\", \"io.debezium.connector.postgresql.PostgresConnector\");\n+        props.setProperty(StandaloneConfig.OFFSET_STORAGE_FILE_FILENAME_CONFIG,\n+                OFFSET_STORE_PATH.toAbsolutePath().toString());\n+        props.setProperty(\"offset.flush.interval.ms\", \"0\");\n+        props.setProperty(\"converter.schemas.enable\", \"false\");\n+\n+        CountDownLatch allLatch = new CountDownLatch(1);\n+\n+        final ExecutorService executor = Executors.newFixedThreadPool(1);\n+        try (final DebeziumEngine<Change<String>> engine = DebeziumEngine.create(Json.class).using(props)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15331e9d66556b05dba51870142908abb0b66cc4", "author": {"user": {"login": "jpechane", "name": "Jiri Pechanec"}}, "url": "https://github.com/debezium/debezium/commit/15331e9d66556b05dba51870142908abb0b66cc4", "committedDate": "2020-04-08T12:41:45Z", "message": "DBZ-1807 Support for JSON Converter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4307575a8a59c3923060f2ebfcbc0da143e2c3bf", "author": {"user": {"login": "jpechane", "name": "Jiri Pechanec"}}, "url": "https://github.com/debezium/debezium/commit/4307575a8a59c3923060f2ebfcbc0da143e2c3bf", "committedDate": "2020-04-08T12:41:45Z", "message": "DBZ-1807 Support for Avro converters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfe3a5152f0f3d9b8edc2b29160205f0fcaa0a66", "author": {"user": {"login": "jpechane", "name": "Jiri Pechanec"}}, "url": "https://github.com/debezium/debezium/commit/bfe3a5152f0f3d9b8edc2b29160205f0fcaa0a66", "committedDate": "2020-04-08T12:41:45Z", "message": "DBZ-1807 Support for CloudEvents converter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "bfe3a5152f0f3d9b8edc2b29160205f0fcaa0a66", "author": {"user": {"login": "jpechane", "name": "Jiri Pechanec"}}, "url": "https://github.com/debezium/debezium/commit/bfe3a5152f0f3d9b8edc2b29160205f0fcaa0a66", "committedDate": "2020-04-08T12:41:45Z", "message": "DBZ-1807 Support for CloudEvents converter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26b0ee5936e87a9161ccab95aa2e02a993075895", "author": {"user": {"login": "gunnarmorling", "name": "Gunnar Morling"}}, "url": "https://github.com/debezium/debezium/commit/26b0ee5936e87a9161ccab95aa2e02a993075895", "committedDate": "2020-04-15T14:27:14Z", "message": "DBZ-1807 Misc. adjustments;\n\n* Adding @TestFor annotations\n* Change -> ChangeEvent"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzODAzMjA4", "url": "https://github.com/debezium/debezium/pull/1362#pullrequestreview-393803208", "createdAt": "2020-04-15T14:01:32Z", "commit": {"oid": "bfe3a5152f0f3d9b8edc2b29160205f0fcaa0a66"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDowMTozMlrOGF7L9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDoxOToyOFrOGF7_Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg2NTc4Mg==", "bodyText": "I'll push a commit to rename it to ChangeEvent; a bit more meaningful and in line with the term we use in blogs, presentations etc.\nSlightly more problematic: it assumes that key and value are of the same type, I don't think that generally holds. I think we need to have two type parameters here, for key and value. Note the bootstrap method for getting an engine could be overloaded, i.e. there would be the one with one parameter, so to use the same converter for both key and value, but there'd be another one, allowing for two separate converters.", "url": "https://github.com/debezium/debezium/pull/1362#discussion_r408865782", "createdAt": "2020-04-15T14:01:32Z", "author": {"login": "gunnarmorling"}, "path": "debezium-api/src/main/java/io/debezium/engine/format/Change.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright Debezium Authors.\n+ *\n+ * Licensed under the Apache Software License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.debezium.engine.format;\n+\n+public class Change<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfe3a5152f0f3d9b8edc2b29160205f0fcaa0a66"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg3ODkzOQ==", "bodyText": "What is this needed for? Can we get rid of it by splitting this up into a public interface and internal implementation?", "url": "https://github.com/debezium/debezium/pull/1362#discussion_r408878939", "createdAt": "2020-04-15T14:19:28Z", "author": {"login": "gunnarmorling"}, "path": "debezium-api/src/main/java/io/debezium/engine/format/Change.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright Debezium Authors.\n+ *\n+ * Licensed under the Apache Software License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.debezium.engine.format;\n+\n+public class Change<T> {\n+    public final T key;\n+    public final T value;\n+    private final Object backReference;\n+\n+    public Change(T key, T value, Object backReference) {\n+        this.key = key;\n+        this.value = value;\n+        this.backReference = backReference;\n+    }\n+\n+    public Object reference() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfe3a5152f0f3d9b8edc2b29160205f0fcaa0a66"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1952, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}