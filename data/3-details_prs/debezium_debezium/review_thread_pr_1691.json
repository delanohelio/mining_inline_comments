{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NDg4NDMy", "number": 1691, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNzowMzoxNVrOEQfa_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNzo0NDowNlrOEQgPwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NzI3NDg2OnYy", "diffSide": "RIGHT", "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerStreamingChangeEventSource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNzowMzoxNVrOG0qx-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwODowMDowNlrOG0smfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDA1Ng==", "bodyText": "That's more for DEBUG level perhaps? Or is this a rare thing to happen?", "url": "https://github.com/debezium/debezium/pull/1691#discussion_r457880056", "createdAt": "2020-07-21T07:03:15Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerStreamingChangeEventSource.java", "diffHunk": "@@ -191,15 +193,28 @@ public void execute(ChangeEventSourceContext context) throws InterruptedExceptio\n                                 tableWithSmallestLsn.next();\n                                 continue;\n                             }\n+\n+                            if (tableWithSmallestLsn.isNewTransaction() && changesStoppedBeingMonotonic.get()) {\n+                                LOGGER.info(\"Resetting changesStoppedBeingMonotonic as transaction changes\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkwNjMwOA==", "bodyText": "IIUC it should happen only once upon start then I'd keep it as info,", "url": "https://github.com/debezium/debezium/pull/1691#discussion_r457906308", "createdAt": "2020-07-21T07:53:57Z", "author": {"login": "jpechane"}, "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerStreamingChangeEventSource.java", "diffHunk": "@@ -191,15 +193,28 @@ public void execute(ChangeEventSourceContext context) throws InterruptedExceptio\n                                 tableWithSmallestLsn.next();\n                                 continue;\n                             }\n+\n+                            if (tableWithSmallestLsn.isNewTransaction() && changesStoppedBeingMonotonic.get()) {\n+                                LOGGER.info(\"Resetting changesStoppedBeingMonotonic as transaction changes\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDA1Ng=="}, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkwOTg4Nw==", "bodyText": "Ok, makes sense.", "url": "https://github.com/debezium/debezium/pull/1691#discussion_r457909887", "createdAt": "2020-07-21T08:00:06Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerStreamingChangeEventSource.java", "diffHunk": "@@ -191,15 +193,28 @@ public void execute(ChangeEventSourceContext context) throws InterruptedExceptio\n                                 tableWithSmallestLsn.next();\n                                 continue;\n                             }\n+\n+                            if (tableWithSmallestLsn.isNewTransaction() && changesStoppedBeingMonotonic.get()) {\n+                                LOGGER.info(\"Resetting changesStoppedBeingMonotonic as transaction changes\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDA1Ng=="}, "originalCommit": null, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NzI3NTE1OnYy", "diffSide": "RIGHT", "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerStreamingChangeEventSource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNzowMzoyMVrOG0qyJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNzo1NDowNVrOG0sYzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDEwMQ==", "bodyText": "Same here.", "url": "https://github.com/debezium/debezium/pull/1691#discussion_r457880101", "createdAt": "2020-07-21T07:03:21Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerStreamingChangeEventSource.java", "diffHunk": "@@ -191,15 +193,28 @@ public void execute(ChangeEventSourceContext context) throws InterruptedExceptio\n                                 tableWithSmallestLsn.next();\n                                 continue;\n                             }\n+\n+                            if (tableWithSmallestLsn.isNewTransaction() && changesStoppedBeingMonotonic.get()) {\n+                                LOGGER.info(\"Resetting changesStoppedBeingMonotonic as transaction changes\");\n+                                changesStoppedBeingMonotonic.set(false);\n+                            }\n+\n+                            // After restart for changes that are not monotonic to avoid data loss\n+                            if (tableWithSmallestLsn.isCurrentPositionSmallerThanPreviousPosition()) {\n+                                LOGGER.info(\"Disabling skipping changes due to not monotonic order of changes\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkwNjM4Mw==", "bodyText": "Same as above", "url": "https://github.com/debezium/debezium/pull/1691#discussion_r457906383", "createdAt": "2020-07-21T07:54:05Z", "author": {"login": "jpechane"}, "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerStreamingChangeEventSource.java", "diffHunk": "@@ -191,15 +193,28 @@ public void execute(ChangeEventSourceContext context) throws InterruptedExceptio\n                                 tableWithSmallestLsn.next();\n                                 continue;\n                             }\n+\n+                            if (tableWithSmallestLsn.isNewTransaction() && changesStoppedBeingMonotonic.get()) {\n+                                LOGGER.info(\"Resetting changesStoppedBeingMonotonic as transaction changes\");\n+                                changesStoppedBeingMonotonic.set(false);\n+                            }\n+\n+                            // After restart for changes that are not monotonic to avoid data loss\n+                            if (tableWithSmallestLsn.isCurrentPositionSmallerThanPreviousPosition()) {\n+                                LOGGER.info(\"Disabling skipping changes due to not monotonic order of changes\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDEwMQ=="}, "originalCommit": null, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NzI3NzI3OnYy", "diffSide": "RIGHT", "path": "debezium-core/src/main/java/io/debezium/pipeline/source/spi/ChangeTableResultSet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNzowNDowM1rOG0qzbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwOTowODo1OVrOG0vF5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDQzMA==", "bodyText": "Could you add a JavaDoc comment describing the semantics; in particular, what's \"new\" in this context?", "url": "https://github.com/debezium/debezium/pull/1691#discussion_r457880430", "createdAt": "2020-07-21T07:04:03Z", "author": {"login": "gunnarmorling"}, "path": "debezium-core/src/main/java/io/debezium/pipeline/source/spi/ChangeTableResultSet.java", "diffHunk": "@@ -100,4 +110,6 @@ public String toString() {\n     protected abstract int getOperation(ResultSet resultSet) throws SQLException;\n \n     protected abstract T getNextChangePosition(ResultSet resultSet) throws SQLException;\n+\n+    protected abstract boolean isNewTransaction() throws SQLException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzk1MDY5NA==", "bodyText": "Added.", "url": "https://github.com/debezium/debezium/pull/1691#discussion_r457950694", "createdAt": "2020-07-21T09:08:59Z", "author": {"login": "korzenek"}, "path": "debezium-core/src/main/java/io/debezium/pipeline/source/spi/ChangeTableResultSet.java", "diffHunk": "@@ -100,4 +110,6 @@ public String toString() {\n     protected abstract int getOperation(ResultSet resultSet) throws SQLException;\n \n     protected abstract T getNextChangePosition(ResultSet resultSet) throws SQLException;\n+\n+    protected abstract boolean isNewTransaction() throws SQLException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDQzMA=="}, "originalCommit": null, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NzQwOTkyOnYy", "diffSide": "RIGHT", "path": "debezium-connector-sqlserver/src/test/java/io/debezium/connector/sqlserver/SqlServerConnectorIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNzo0NDowNlrOG0sDMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNzo0NDowNlrOG0sDMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkwMDg0OQ==", "bodyText": "tableC -> tableB?", "url": "https://github.com/debezium/debezium/pull/1691#discussion_r457900849", "createdAt": "2020-07-21T07:44:06Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-sqlserver/src/test/java/io/debezium/connector/sqlserver/SqlServerConnectorIT.java", "diffHunk": "@@ -605,6 +605,56 @@ public void updatePrimaryKeyWithRestartInMiddle() throws Exception {\n         stopConnector();\n     }\n \n+    @Test\n+    @FixFor(\"DBZ-2329\")\n+    public void updatePrimaryKeyTwiceWithRestartInMiddleOfTx() throws Exception {\n+\n+        final Configuration config = TestHelper.defaultConfig()\n+                .with(SqlServerConnectorConfig.SNAPSHOT_MODE, SnapshotMode.INITIAL)\n+                .with(SqlServerConnectorConfig.MAX_QUEUE_SIZE, 2)\n+                .with(SqlServerConnectorConfig.MAX_BATCH_SIZE, 1)\n+                .with(SqlServerConnectorConfig.TOMBSTONES_ON_DELETE, false)\n+                .build();\n+\n+        // Testing.Print.enable();\n+        // Wait for snapshot completion\n+        start(SqlServerConnector.class, config, record -> {\n+            final Struct envelope = (Struct) record.value();\n+            boolean stop = envelope != null && \"d\".equals(envelope.get(\"op\")) && (envelope.getStruct(\"before\").getInt32(\"id\") == 305);\n+            return stop;\n+        });\n+        assertConnectorIsRunning();\n+\n+        consumeRecordsByTopic(1);\n+\n+        connection.setAutoCommit(false);\n+\n+        connection.execute(\"INSERT INTO tableb (id, colb) values (1,'1')\");\n+        connection.execute(\"INSERT INTO tableb (id, colb) values (2,'2')\");\n+        connection.execute(\"INSERT INTO tableb (id, colb) values (3,'3')\");\n+        connection.execute(\"INSERT INTO tableb (id, colb) values (4,'4')\");\n+        connection.execute(\"INSERT INTO tableb (id, colb) values (5,'5')\");\n+        consumeRecordsByTopic(5);\n+\n+        connection.execute(\"UPDATE tableb set id = colb + 300\");\n+        connection.execute(\"UPDATE tableb set id = colb + 300\");\n+\n+        final SourceRecords records1 = consumeRecordsByTopic(14);\n+\n+        stopConnector();\n+\n+        start(SqlServerConnector.class, config);\n+        assertConnectorIsRunning();\n+        final SourceRecords records2 = consumeRecordsByTopic(6);\n+\n+        final List<SourceRecord> tableC = records1.recordsForTopic(\"server1.dbo.tableb\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4233, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}