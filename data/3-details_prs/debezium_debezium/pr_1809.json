{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NzQzNjg2", "number": 1809, "title": "DBZ-2516 DBZ-2526 DBZ-2527 fix Debezium UI PoC issues", "bodyText": "fixes:\nhttps://issues.redhat.com/browse/DBZ-2516 : Create Configuration Fields for datatype.propagate.source.type and column.propagate.source.type\nhttps://issues.redhat.com/browse/DBZ-2526 : Connector Type properties has missing displayName property (UI)\nhttps://issues.redhat.com/browse/DBZ-2527 : Add missing ListOfRegex validator to all regex list fields and remove legacy whitelist/blacklist dependents", "createdAt": "2020-09-14T16:37:19Z", "url": "https://github.com/debezium/debezium/pull/1809", "merged": true, "mergeCommit": {"oid": "011c3be948c855fbd7abafac02a23a7c7b3fd402"}, "closed": true, "closedAt": "2020-09-15T08:05:05Z", "author": {"login": "rk3rn3r"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdI1v9dgH2gAyNDg2NzQzNjg2OmIxMzVjOWEwNzU3NDQ2NzM4NTNlNDUzNzkwYjVjNGNhYWFlZDU1OGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJDJ8mAFqTQ4ODQyNTg0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b135c9a075744673853e453790b5c4caaaed558a", "author": {"user": {"login": "rk3rn3r", "name": "Ren\u00e9 Kerner"}}, "url": "https://github.com/debezium/debezium/commit/b135c9a075744673853e453790b5c4caaaed558a", "committedDate": "2020-09-14T16:25:59Z", "message": "DBZ-2516 add config fields for `datatype.propagate.source.type` and `column.propagate.source.type` properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9127d060b3435523e1edc7d069c4c326c375cfc4", "author": {"user": {"login": "rk3rn3r", "name": "Ren\u00e9 Kerner"}}, "url": "https://github.com/debezium/debezium/commit/9127d060b3435523e1edc7d069c4c326c375cfc4", "committedDate": "2020-09-14T16:27:55Z", "message": "DBZ-2526 add DisplayName for MASK and TRUNCATE COLUMN fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2323ad4e8429e328daa1a842eaea8f59b8dc2b1", "author": {"user": {"login": "rk3rn3r", "name": "Ren\u00e9 Kerner"}}, "url": "https://github.com/debezium/debezium/commit/f2323ad4e8429e328daa1a842eaea8f59b8dc2b1", "committedDate": "2020-09-14T16:33:41Z", "message": "DBZ-2527 Add missing ListOfRegex validator to all regex list fields and fix dependent fields to not include @Deprecated whitelist/blacklist fields"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3OTU0NTE2", "url": "https://github.com/debezium/debezium/pull/1809#pullrequestreview-487954516", "createdAt": "2020-09-14T16:39:38Z", "commit": {"oid": "f2323ad4e8429e328daa1a842eaea8f59b8dc2b1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNjozOTozOVrOHRdjPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNjozOTozOVrOHRdjPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA3MTk5OA==", "bodyText": "This was housekeeping. Java enums are always static.", "url": "https://github.com/debezium/debezium/pull/1809#discussion_r488071998", "createdAt": "2020-09-14T16:39:39Z", "author": {"login": "rk3rn3r"}, "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlConnectorConfig.java", "diffHunk": "@@ -41,7 +41,7 @@\n     /**\n      * The set of predefined BigIntUnsignedHandlingMode options or aliases.\n      */\n-    public static enum BigIntUnsignedHandlingMode implements EnumeratedValue {\n+    public enum BigIntUnsignedHandlingMode implements EnumeratedValue {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2323ad4e8429e328daa1a842eaea8f59b8dc2b1"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MDQ3NjU2", "url": "https://github.com/debezium/debezium/pull/1809#pullrequestreview-488047656", "createdAt": "2020-09-14T18:45:15Z", "commit": {"oid": "f2323ad4e8429e328daa1a842eaea8f59b8dc2b1"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxODo0NToxNlrOHRiFzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxODo0NjowMFrOHRiHOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0NjM4MA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/debezium/debezium/pull/1809#discussion_r488146380", "createdAt": "2020-09-14T18:45:16Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlConnectorConfig.java", "diffHunk": "@@ -41,7 +41,7 @@\n     /**\n      * The set of predefined BigIntUnsignedHandlingMode options or aliases.\n      */\n-    public static enum BigIntUnsignedHandlingMode implements EnumeratedValue {\n+    public enum BigIntUnsignedHandlingMode implements EnumeratedValue {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA3MTk5OA=="}, "originalCommit": {"oid": "f2323ad4e8429e328daa1a842eaea8f59b8dc2b1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0Njc0NA==", "bodyText": "Did that cause issues?", "url": "https://github.com/debezium/debezium/pull/1809#discussion_r488146744", "createdAt": "2020-09-14T18:46:00Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlConnectorConfig.java", "diffHunk": "@@ -609,7 +609,7 @@ public static GtidNewChannelPosition parse(String value, String defaultValue) {\n                     \"Password to unlock the keystore file (store password) specified by 'ssl.trustore' configuration property or the 'javax.net.ssl.trustStore' system or JVM property.\");\n \n     public static final Field TABLES_IGNORE_BUILTIN = RelationalDatabaseConnectorConfig.TABLE_IGNORE_BUILTIN\n-            .withDependents(DATABASE_INCLUDE_LIST_NAME, DATABASE_WHITELIST_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2323ad4e8429e328daa1a842eaea8f59b8dc2b1"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NDI1ODQ1", "url": "https://github.com/debezium/debezium/pull/1809#pullrequestreview-488425845", "createdAt": "2020-09-15T08:03:07Z", "commit": {"oid": "f2323ad4e8429e328daa1a842eaea8f59b8dc2b1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODowMzowOFrOHR1qoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODowMzowOFrOHR1qoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ2NzEwNA==", "bodyText": "Wow, that was an oversight indeed. Thanks!", "url": "https://github.com/debezium/debezium/pull/1809#discussion_r488467104", "createdAt": "2020-09-15T08:03:08Z", "author": {"login": "gunnarmorling"}, "path": "debezium-core/src/main/java/io/debezium/relational/RelationalDatabaseConnectorConfig.java", "diffHunk": "@@ -379,22 +383,39 @@ public static DecimalHandlingMode parse(String value, String defaultValue) {\n             .withDefault(true);\n \n     public static final Field MASK_COLUMN_WITH_HASH = Field.create(\"column.mask.hash.([^.]+).with.salt.(.+)\")\n+            .withDisplayName(\"Mask Columns Using Hash and Salt\")\n             .withType(Type.STRING)\n             .withWidth(Width.LONG)\n             .withImportance(Importance.MEDIUM)\n             .withDescription(\"A comma-separated list of regular expressions matching fully-qualified names of columns that should \"\n                     + \"be masked by hashing the input. Using the specified hash algorithms and salt.\");\n \n     public static final Field MASK_COLUMN = Field.create(\"column.mask.with.(d+).chars\")\n+            .withDisplayName(\"Mask Columns With n Asterisks\")\n             .withValidation(Field::isInteger)\n             .withDescription(\"A comma-separated list of regular expressions matching fully-qualified names of columns that should \"\n                     + \"be masked with configured amount of asterisk ('*') characters.\");\n \n     public static final Field TRUNCATE_COLUMN = Field.create(\"column.truncate.to.(d+).chars\")\n+            .withDisplayName(\"Truncate Columns To n Characters\")\n             .withValidation(Field::isInteger)\n             .withDescription(\"A comma-separated list of regular expressions matching fully-qualified names of columns that should \"\n                     + \"be truncated to the configured amount of characters.\");\n \n+    public static final Field PROPAGATE_COLUMN_SOURCE_TYPE = Field.create(\"column.propagate.source.type\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2323ad4e8429e328daa1a842eaea8f59b8dc2b1"}, "originalPosition": 137}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2427, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}