{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxOTY5NzY2", "number": 1407, "title": "DBZ-1962 Introduce column.whitelist for the Postgres connector", "bodyText": "https://issues.redhat.com/browse/DBZ-1962\nRight now the Debezium Postgres connector just supports column.blacklist. Added column.whitelist as well which might be convenient in some cases.", "createdAt": "2020-04-10T16:08:26Z", "url": "https://github.com/debezium/debezium/pull/1407", "merged": true, "mergeCommit": {"oid": "bc762f298918e86f9f1792065ed6676feb0272be"}, "closed": true, "closedAt": "2020-04-17T13:24:43Z", "author": {"login": "jhuiting"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWThYAAH2gAyNDAxOTY5NzY2OjhjMzM0NmU0ZWIzYzM2ZjQxODAwZTBmNWM2OTI2Yjg0OTFlY2ZhNTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYhOzXAH2gAyNDAxOTY5NzY2OjcwYzUxYzZhY2I5MTNhNzVlZjRjMDhiMjRkMDhhNjJlY2ZmNmQ3ZTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56", "author": {"user": {"login": "jhuiting", "name": "Jos Huiting"}}, "url": "https://github.com/debezium/debezium/commit/8c3346e4eb3c36f41800e0f5c6926b8491ecfa56", "committedDate": "2020-04-10T16:17:04Z", "message": "DBZ-1962 Introduce column.whitelist for the Postgres connector"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "694cf8872022940cd5d8a3aa55ee5784a0f22d6b", "author": {"user": {"login": "jhuiting", "name": "Jos Huiting"}}, "url": "https://github.com/debezium/debezium/commit/694cf8872022940cd5d8a3aa55ee5784a0f22d6b", "committedDate": "2020-04-14T12:51:21Z", "message": "DBZ-1962 Remove TABLE_WHITELIST and TABLE_BLACKLIST in favor of definitions in RelationalDatabaseConnectorConfig"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0Mzk1NjQ4", "url": "https://github.com/debezium/debezium/pull/1407#pullrequestreview-394395648", "createdAt": "2020-04-16T08:11:51Z", "commit": {"oid": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODoxMTo1MVrOGGZobg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODo1NjoyMVrOGGbYaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2NDU5MA==", "bodyText": "Can you add a sentence \"May not be used with column.whitelist.", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r409364590", "createdAt": "2020-04-16T08:11:51Z", "author": {"login": "gunnarmorling"}, "path": "documentation/modules/ROOT/pages/connectors/postgresql.adoc", "diffHunk": "@@ -1755,6 +1755,11 @@ Only alphanumeric characters and underscores should be used.\n |\n |An optional comma-separated list of regular expressions that match fully-qualified table identifiers for tables to be excluded from monitoring; any table not included in the blacklist will be monitored. Each identifier is of the form _schemaName_._tableName_. May not be used with `table.whitelist`.\n \n+|`column.whitelist`\n+|\n+|An optional comma-separated list of regular expressions that match the fully-qualified names of columns that should be included in change event message values. Fully-qualified names for columns are of the form _schemaName_._tableName_._columnName_\n+\n+\n |`column.blacklist`\n |\n |An optional comma-separated list of regular expressions that match the fully-qualified names of columns that should be excluded from change event message values. Fully-qualified names for columns are of the form _schemaName_._tableName_._columnName_", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2NzI5Nw==", "bodyText": "Could you add the @FixFor annotation?", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r409367297", "createdAt": "2020-04-16T08:16:05Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java", "diffHunk": "@@ -768,6 +769,26 @@ public void shouldTakeBlacklistFiltersIntoAccount() throws Exception {\n         assertNoRecordsToConsume();\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2NzgxMg==", "bodyText": "Could you also add another test case which ensures that a whitelisted column can be subject to column masking or truncating?", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r409367812", "createdAt": "2020-04-16T08:16:55Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java", "diffHunk": "@@ -768,6 +769,26 @@ public void shouldTakeBlacklistFiltersIntoAccount() throws Exception {\n         assertNoRecordsToConsume();\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2NzI5Nw=="}, "originalCommit": {"oid": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2OTUwNA==", "bodyText": "This validation should go to COLUMN_BLACKLIST, right? Would be nice to add a test asserting that validation.", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r409369504", "createdAt": "2020-04-16T08:19:35Z", "author": {"login": "gunnarmorling"}, "path": "debezium-core/src/main/java/io/debezium/relational/RelationalDatabaseConnectorConfig.java", "diffHunk": "@@ -181,6 +181,20 @@ public static DecimalHandlingMode parse(String value, String defaultValue) {\n             .withImportance(Importance.MEDIUM)\n             .withDescription(\"\");\n \n+    /**\n+     * A comma-separated list of regular expressions that match fully-qualified names of columns to be excluded from monitoring\n+     * and change messages. The exact form of fully qualified names for columns might vary between connector types.\n+     * For instance, they could be of the form {@code <databaseName>.<tableName>.<columnName>} or\n+     * {@code <schemaName>.<tableName>.<columnName>} or {@code <databaseName>.<schemaName>.<tableName>.<columnName>}.\n+     */\n+    public static final Field COLUMN_WHITELIST = Field.create(\"column.whitelist\")\n+            .withDisplayName(\"Include Columns\")\n+            .withType(Type.STRING)\n+            .withWidth(Width.LONG)\n+            .withImportance(Importance.MEDIUM)\n+            .withValidation(RelationalDatabaseConnectorConfig::validateColumnBlacklist)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM5MjIyMA==", "bodyText": "Seems like this table s1.b is not used later on?", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r409392220", "createdAt": "2020-04-16T08:54:45Z", "author": {"login": "gunnarmorling"}, "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java", "diffHunk": "@@ -768,6 +769,26 @@ public void shouldTakeBlacklistFiltersIntoAccount() throws Exception {\n         assertNoRecordsToConsume();\n     }\n \n+    @Test\n+    public void shouldTakeColumnWhitelistFilterIntoAccount() throws Exception {\n+        String setupStmt = SETUP_TABLES_STMT +\n+                \"CREATE TABLE s1.b (pk SERIAL, aa integer, bb integer, PRIMARY KEY(pk));\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM5MzI1Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Although the `column.blacklist` and `column.whitelist` configuration properties allow you to remove columns from the event values, all columns in a primary or unique key are always included in the event's key.\n          \n          \n            \n            Although the `column.blacklist` and `column.whitelist` configuration properties allow you to capture only a subset of table columns, all columns in a primary or unique key are always included in the event's key.", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r409393257", "createdAt": "2020-04-16T08:56:21Z", "author": {"login": "gunnarmorling"}, "path": "documentation/modules/ROOT/pages/connectors/postgresql.adoc", "diffHunk": "@@ -593,7 +593,7 @@ Therefore, we interpret this key as describing the row in the `public.customers`\n \n [NOTE]\n ====\n-Although the `column.blacklist` configuration property allows you to remove columns from the event values, all columns in a primary or unique key are always included in the event's key.\n+Although the `column.blacklist` and `column.whitelist` configuration properties allow you to remove columns from the event values, all columns in a primary or unique key are always included in the event's key.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b637a29472b83e0d474af4fa6e718726a42fdcf", "author": {"user": {"login": "jhuiting", "name": "Jos Huiting"}}, "url": "https://github.com/debezium/debezium/commit/7b637a29472b83e0d474af4fa6e718726a42fdcf", "committedDate": "2020-04-17T07:19:33Z", "message": "DBZ-1962 Fix PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70c51c6acb913a75ef4c08b24d08a62ecff6d7e1", "author": {"user": {"login": "gunnarmorling", "name": "Gunnar Morling"}}, "url": "https://github.com/debezium/debezium/commit/70c51c6acb913a75ef4c08b24d08a62ecff6d7e1", "committedDate": "2020-04-17T13:23:18Z", "message": "DBZ-1962 Adding option descriptions"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2000, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}