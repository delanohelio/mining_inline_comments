{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NTc0Njc3", "number": 1226, "title": "DBZ-1711 Outbox Quarkus Extension follow-ups", "bodyText": "https://issues.redhat.com/browse/DBZ-1711", "createdAt": "2020-01-23T21:25:15Z", "url": "https://github.com/debezium/debezium/pull/1226", "merged": true, "mergeCommit": {"oid": "15b15d6b347f2c5f96eec896c5a342ee8415fa36"}, "closed": true, "closedAt": "2020-02-12T18:45:20Z", "author": {"login": "Naros"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-eXpigFqTM0ODc0MzkzNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDqSO7gH2gAyMzY2NTc0Njc3OmI0MWQ2OTc3ZmE0ZGRmNTA1NDQ5ODZjMzRlOWM1ZTYxOTA4NWQyZjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NzQzOTM2", "url": "https://github.com/debezium/debezium/pull/1226#pullrequestreview-348743936", "createdAt": "2020-01-27T15:21:07Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNToyMTowN1rOFiGfQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNToyMTowN1rOFiGfQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMwMjIxMQ==", "bodyText": "Would it perhaps make sense to simply have a single property (besides the attribute converter) that takes the plain column type which gets passed through:\nquarkus.debezium-outbox.payload.column.definition=NOT NULL VARCHAR(2000)\n\nWDYT?", "url": "https://github.com/debezium/debezium/pull/1226#discussion_r371302211", "createdAt": "2020-01-27T15:21:07Z", "author": {"login": "gunnarmorling"}, "path": "documentation/modules/ROOT/pages/integrations/outbox.adoc", "diffHunk": "@@ -133,35 +133,190 @@ The table name to be used when creating the outbox table.\n |OutboxEvent\n \n \n-|`quarkus.debezium-outbox.id-column-name`::\n+|`quarkus.debezium-outbox.id.name`::\n The column name for the event id column.\n |string\n |`id`\n \n-|`quarkus.debezium-outbox.aggregate-id-column.name`::\n+|`quarkus.debezium-outbox.id.column-definition`::\n+The database-specific column definition for the event id column.\n+|string\n+|\n+\n+|`quarkus.debezium-outbox.aggregate-id.name`::\n The column name for the event key column.\n |string\n |`aggregateid`\n \n-|`quarkus.debezium-outbox.type-column-name`::\n+|`quarkus.debezium-outbox.aggregate-id.column-definition`::\n+The database-specific column definition for the aggregate id.\n+|string\n+|\n+\n+|`quarkus.debezium-outbox.aggregate-id.length`::\n+The length of the event key column.\n+|integer\n+|\n+\n+|`quarkus.debezium-outbox.aggregate-id.scale`::\n+The scale of the event key column.\n+|integer\n+|\n+\n+|`quarkus.debezium-outbox.aggregate-id.precision`::\n+The precision of the event key column.\n+|integer\n+|\n+\n+|`quarkus.debezium-outbox.aggregate-id.converter`::\n+The JPA AttributeConverter for the event key column.\n+|string\n+|\n+\n+|`quarkus.debezium-outbox.aggregate-id.nullable`::\n+Whether the event key column is nullable.\n+|boolean\n+|false\n+\n+|`quarkus.debezium-outbox.aggregate-type-name`::\n+The column name for the event aggregate type column.\n+|string\n+|`aggregatetype`\n+\n+|`quarkus.debezium-outbox.aggregate-type.column-definition`::\n+The database-specific column definition for the aggregate type.\n+|string\n+|\n+\n+|`quarkus.debezium-outbox.aggregate-type.length`::\n+The length of the event aggregate type column.\n+|integer\n+|\n+\n+|`quarkus.debezium-outbox.aggregate-type.scale`::\n+The scale of the event aggregate type column.\n+|integer\n+|\n+\n+|`quarkus.debezium-outbox.aggregate-type.precision`::\n+The precision of the event aggregate type column.\n+|integer\n+|\n+\n+|`quarkus.debezium-outbox.aggregate-type.converter`::\n+The JPA AttributeConverter for the event aggregate type column.\n+|string\n+|\n+\n+|`quarkus.debezium-outbox.aggregate-type.nullable`::\n+Whether the event aggregate type column is nullable.\n+|boolean\n+|false\n+\n+|`quarkus.debezium-outbox.type.name`::\n The column name for the event type column.\n |string\n |`type`\n \n-|`quarkus.debezium-outbox.timestamp-column-name`::\n+|`quarkus.debezium-outbox.type.column-definition`::\n+The database-specific column definition for the event type.\n+|string\n+|\n+\n+|`quarkus.debezium-outbox.type.length`::\n+The length of the event type column.\n+|integer\n+|\n+\n+|`quarkus.debezium-outbox.type.scale`::\n+The scale of the event type column.\n+|integer\n+|\n+\n+|`quarkus.debezium-outbox.type.precision`::\n+The precision of the event type column.\n+|integer\n+|\n+\n+|`quarkus.debezium-outbox.type.converter`::\n+The JPA AttributeConverter for the event type column.\n+|string\n+|\n+\n+|`quarkus.debezium-outbox.type.nullable`::\n+Whether the event type column is nullable.\n+|boolean\n+|false\n+\n+|`quarkus.debezium-outbox.timestamp.name`::\n The column name for the event timestamp column.\n |string\n |`timestamp`\n \n-|`quarkus.debezium-outbox.payload-column-name`::\n+|`quarkus.debezium-outbox.timestamp.column-definition`::\n+The database-specific column definition for the event timestamp.\n+|string\n+|\n+\n+|`quarkus.debezium-outbox.timestamp.length`::\n+The length of the event timestamp column.\n+|integer\n+|\n+\n+|`quarkus.debezium-outbox.timestamp.scale`::\n+The scale of the event timestamp column.\n+|integer\n+|\n+\n+|`quarkus.debezium-outbox.timestamp.precision`::\n+The precision of the event timestamp column.\n+|integer\n+|\n+\n+|`quarkus.debezium-outbox.timestamp.converter`::\n+The JPA AttributeConverter for the event timestamp column.\n+|string\n+|\n+\n+|`quarkus.debezium-outbox.timestamp.nullable`::\n+Whether the event timestamp column is nullable.\n+|boolean\n+|false\n+\n+|`quarkus.debezium-outbox.payload.name`::\n The column name for the event payload column.\n |string\n |`payload`\n \n-|`quarkus.debezium-outbox.aggregate-type-column-name`::\n-The column name for the event aggregate type column.\n+|`quarkus.debezium-outbox.payload.column-definition`::\n+The database-specific column definition for the event payload.\n |string\n-|`aggregatetype`\n+|\n+\n+|`quarkus.debezium-outbox.payload.length`::", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 172}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMjcwMjg4", "url": "https://github.com/debezium/debezium/pull/1226#pullrequestreview-352270288", "createdAt": "2020-02-03T13:57:42Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMzo1Nzo0MlrOFkyMng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMzo1Nzo0MlrOFkyMng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDExNTQ4Ng==", "bodyText": "Probably good to add description of the purpose to provide some context.", "url": "https://github.com/debezium/debezium/pull/1226#discussion_r374115486", "createdAt": "2020-02-03T13:57:42Z", "author": {"login": "gunnarmorling"}, "path": "debezium-quarkus-outbox-integration-tests/src/test/java/io/debezium/outbox/quarkus/it/OutboxTest.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright Debezium Authors.\n+ *\n+ * Licensed under the Apache Software License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.debezium.outbox.quarkus.it;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+\n+import org.hibernate.engine.spi.SessionImplementor;\n+import org.hibernate.metamodel.spi.MetamodelImplementor;\n+import org.hibernate.persister.entity.EntityPersister;\n+import org.junit.jupiter.api.Test;\n+\n+import io.debezium.outbox.quarkus.internal.OutboxConstants;\n+import io.quarkus.test.common.QuarkusTestResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+\n+/**\n+ * @author Chris Cranford\n+ */\n+@QuarkusTest\n+@QuarkusTestResource(DatabaseTestResource.class)\n+public class OutboxTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMjcwODg4", "url": "https://github.com/debezium/debezium/pull/1226#pullrequestreview-352270888", "createdAt": "2020-02-03T13:58:29Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMzo1ODoyOVrOFkyOkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMzo1ODoyOVrOFkyOkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDExNTk4Nw==", "bodyText": "Not sure, perhaps one or two columns/properties should be asserted, too?", "url": "https://github.com/debezium/debezium/pull/1226#discussion_r374115987", "createdAt": "2020-02-03T13:58:29Z", "author": {"login": "gunnarmorling"}, "path": "debezium-quarkus-outbox-integration-tests/src/test/java/io/debezium/outbox/quarkus/it/OutboxTest.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright Debezium Authors.\n+ *\n+ * Licensed under the Apache Software License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.debezium.outbox.quarkus.it;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+\n+import org.hibernate.engine.spi.SessionImplementor;\n+import org.hibernate.metamodel.spi.MetamodelImplementor;\n+import org.hibernate.persister.entity.EntityPersister;\n+import org.junit.jupiter.api.Test;\n+\n+import io.debezium.outbox.quarkus.internal.OutboxConstants;\n+import io.quarkus.test.common.QuarkusTestResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+\n+/**\n+ * @author Chris Cranford\n+ */\n+@QuarkusTest\n+@QuarkusTestResource(DatabaseTestResource.class)\n+public class OutboxTest {\n+    @Inject\n+    EntityManager entityManager;\n+\n+    @Test\n+    public void testOutboxEntityMetamodelExists() throws Exception {\n+        final MetamodelImplementor metadata = entityManager.unwrap(SessionImplementor.class).getFactory().getMetamodel();\n+\n+        final EntityPersister persister = metadata.entityPersister(OutboxConstants.OUTBOX_ENTITY_FULLNAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMjUyNDkx", "url": "https://github.com/debezium/debezium/pull/1226#pullrequestreview-353252491", "createdAt": "2020-02-04T19:45:50Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxOTo0NTo1MFrOFlhJgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxOTo0NTo1MFrOFlhJgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg4NDczNw==", "bodyText": "Nice!", "url": "https://github.com/debezium/debezium/pull/1226#discussion_r374884737", "createdAt": "2020-02-04T19:45:50Z", "author": {"login": "gunnarmorling"}, "path": "debezium-quarkus-outbox/deployment/src/main/java/io/debezium/outbox/quarkus/deployment/OutboxProcessor.java", "diffHunk": "@@ -143,12 +141,6 @@ public void build(OutboxEventEntityBuildItem outboxBuildItem,\n                       BuildProducer<ReflectiveClassBuildItem> reflectiveClassProducer) {\n         additionalBeanProducer.produce(AdditionalBeanBuildItem.unremovableOf(EventDispatcher.class));\n         generateHbmMapping(outboxBuildItem, generatedResourcesProducer);\n-\n-        // These are needed by Hibernate ORM for native HBM support\n-        // See https://github.com/quarkusio/quarkus/pull/3894\n-        // Once these are added to the ORM extension, these can be removed\n-        reflectiveClassProducer.produce(new ReflectiveClassBuildItem(false, false, DynamicMapEntityTuplizer.class.getName()));\n-        reflectiveClassProducer.produce(new ReflectiveClassBuildItem(false, false, DynamicMapComponentTuplizer.class.getName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMjUzOTEy", "url": "https://github.com/debezium/debezium/pull/1226#pullrequestreview-353253912", "createdAt": "2020-02-04T19:47:56Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxOTo0Nzo1NlrOFlhNjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxOTo0Nzo1NlrOFlhNjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg4NTc3NA==", "bodyText": "Is column definition really \"string\"? Isn't that rather the property type, whereas column definition would be something like \"VARCHAR(2000)\" or \"JSONB\"? Is there an example somewhere that shows these values being set?", "url": "https://github.com/debezium/debezium/pull/1226#discussion_r374885774", "createdAt": "2020-02-04T19:47:56Z", "author": {"login": "gunnarmorling"}, "path": "documentation/modules/ROOT/pages/integrations/outbox.adoc", "diffHunk": "@@ -133,35 +133,90 @@ The table name to be used when creating the outbox table.\n |OutboxEvent\n \n \n-|`quarkus.debezium-outbox.id-column-name`::\n+|`quarkus.debezium-outbox.id.name`::\n The column name for the event id column.\n |string\n |`id`\n \n-|`quarkus.debezium-outbox.aggregate-id-column.name`::\n+|`quarkus.debezium-outbox.id.column-definition`::\n+The database-specific column definition for the event id column.\n+|string", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "1a591dec15ebb970ccc1c6f8eeea327c0ae28333", "author": {"user": {"login": "Naros", "name": "Chris Cranford"}}, "url": "https://github.com/debezium/debezium/commit/1a591dec15ebb970ccc1c6f8eeea327c0ae28333", "committedDate": "2020-02-05T12:02:35Z", "message": "DBZ-1711 Suggested improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afe8b505d7636353f749a99ff315a9dee23d8ba9", "author": {"user": {"login": "Naros", "name": "Chris Cranford"}}, "url": "https://github.com/debezium/debezium/commit/afe8b505d7636353f749a99ff315a9dee23d8ba9", "committedDate": "2020-02-12T17:24:57Z", "message": "DBZ-1711 Introduce more build-time column configuration options\n\nThe extension's columns for the outbox table can now be fully customized by using\nbuild-time configuration properties to influence a column's database definition,\nthe columns length/precision/scale/nullability as well as specifying a JPA\nAttributeConverter.  While not all theses options apply to every column, such as\nthe identifier, the goal is to allow flexibility."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5070541fffcf34dba0dfeb6c92691ae30a8553f3", "author": {"user": {"login": "Naros", "name": "Chris Cranford"}}, "url": "https://github.com/debezium/debezium/commit/5070541fffcf34dba0dfeb6c92691ae30a8553f3", "committedDate": "2020-02-12T17:26:12Z", "message": "DBZ-1711 Upgrade to Quarkus 1.2.0.Final for dynamic-map support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da6546b6ae6d9320eea12dea26907be236d79739", "author": {"user": {"login": "Naros", "name": "Chris Cranford"}}, "url": "https://github.com/debezium/debezium/commit/da6546b6ae6d9320eea12dea26907be236d79739", "committedDate": "2020-02-12T17:26:12Z", "message": "DBZ-1711 Removed column length/scale/precision/nullable options"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b710db20688e1512011ae70aadf87b47096182d", "author": {"user": {"login": "Naros", "name": "Chris Cranford"}}, "url": "https://github.com/debezium/debezium/commit/1b710db20688e1512011ae70aadf87b47096182d", "committedDate": "2020-02-12T17:28:19Z", "message": "DBZ-1711 Quarkus extension integration tests for quarkus-platform"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "346fd7c376c0071dbf900e11f3105e1fef105a98", "author": {"user": {"login": "Naros", "name": "Chris Cranford"}}, "url": "https://github.com/debezium/debezium/commit/346fd7c376c0071dbf900e11f3105e1fef105a98", "committedDate": "2020-02-12T17:28:19Z", "message": "DBZ-1711 Suggested improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cd96c04314a5241fbdc5cef9d3b850ff3439c82", "author": {"user": {"login": "Naros", "name": "Chris Cranford"}}, "url": "https://github.com/debezium/debezium/commit/8cd96c04314a5241fbdc5cef9d3b850ff3439c82", "committedDate": "2020-02-12T17:28:19Z", "message": "DBZ-1711 Fix build dependencies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfc86e725d63a4116fc60560ba18b890c61c4286", "author": {"user": {"login": "Naros", "name": "Chris Cranford"}}, "url": "https://github.com/debezium/debezium/commit/dfc86e725d63a4116fc60560ba18b890c61c4286", "committedDate": "2020-02-12T17:28:19Z", "message": "DBZ-1711 Fix build dependency scope"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee090dfba9f83e890ad9605bb6a8ba1bfa85bfdb", "author": {"user": {"login": "Naros", "name": "Chris Cranford"}}, "url": "https://github.com/debezium/debezium/commit/ee090dfba9f83e890ad9605bb6a8ba1bfa85bfdb", "committedDate": "2020-02-12T17:28:19Z", "message": "DBZ-1711 Add example values for build-time properties without defaults."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "ee090dfba9f83e890ad9605bb6a8ba1bfa85bfdb", "author": {"user": {"login": "Naros", "name": "Chris Cranford"}}, "url": "https://github.com/debezium/debezium/commit/ee090dfba9f83e890ad9605bb6a8ba1bfa85bfdb", "committedDate": "2020-02-12T17:28:19Z", "message": "DBZ-1711 Add example values for build-time properties without defaults."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NjU1NjEy", "url": "https://github.com/debezium/debezium/pull/1226#pullrequestreview-357655612", "createdAt": "2020-02-12T17:42:34Z", "commit": {"oid": "ee090dfba9f83e890ad9605bb6a8ba1bfa85bfdb"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNzo0MjozNFrOFo4R5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNzo0NToxNVrOFo4XYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQwOTQ0Ng==", "bodyText": "Should take the managed version we recently added in the course of TC support.", "url": "https://github.com/debezium/debezium/pull/1226#discussion_r378409446", "createdAt": "2020-02-12T17:42:34Z", "author": {"login": "gunnarmorling"}, "path": "debezium-quarkus-outbox-integration-tests/pom.xml", "diffHunk": "@@ -0,0 +1,150 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>io.debezium</groupId>\n+        <artifactId>debezium-parent</artifactId>\n+        <version>1.1.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <artifactId>debezium-quarkus-outbox-integration-tests</artifactId>\n+    <name>Debezium Quarkus :: Outbox :: Integration Tests</name>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-bom</artifactId>\n+            <version>${quarkus.version}</version>\n+            <type>pom</type>\n+            <scope>import</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>io.debezium</groupId>\n+            <artifactId>debezium-quarkus-outbox</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-hibernate-orm</artifactId>\n+            <version>${quarkus.version}</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-jdbc-postgresql</artifactId>\n+            <version>${quarkus.version}</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-vertx</artifactId>\n+            <version>${quarkus.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-resteasy</artifactId>\n+            <version>${quarkus.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-junit5</artifactId>\n+            <version>${quarkus.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.testcontainers</groupId>\n+            <artifactId>testcontainers</artifactId>\n+            <version>1.12.4</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee090dfba9f83e890ad9605bb6a8ba1bfa85bfdb"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQxMDg1MQ==", "bodyText": "Would it make sense to actually move is into debezium-quarkus-outbox, next to runtime and deployment?", "url": "https://github.com/debezium/debezium/pull/1226#discussion_r378410851", "createdAt": "2020-02-12T17:45:15Z", "author": {"login": "gunnarmorling"}, "path": "pom.xml", "diffHunk": "@@ -163,6 +163,7 @@\n         <module>debezium-connector-sqlserver</module>\n         <module>debezium-microbenchmark</module>\n         <module>debezium-quarkus-outbox</module>\n+        <module>debezium-quarkus-outbox-integration-tests</module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee090dfba9f83e890ad9605bb6a8ba1bfa85bfdb"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93389fc3ca89e5ea2c7dcb7ae0ba2662b8ce1312", "author": {"user": {"login": "Naros", "name": "Chris Cranford"}}, "url": "https://github.com/debezium/debezium/commit/93389fc3ca89e5ea2c7dcb7ae0ba2662b8ce1312", "committedDate": "2020-02-12T17:52:03Z", "message": "DBZ-1711 Use managed version of testcontainers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b41d6977fa4ddf50544986c34e9c5e619085d2f2", "author": {"user": {"login": "Naros", "name": "Chris Cranford"}}, "url": "https://github.com/debezium/debezium/commit/b41d6977fa4ddf50544986c34e9c5e619085d2f2", "committedDate": "2020-02-12T18:03:47Z", "message": "DBZ-1711 Moved integration tests under quarkus outbox hierarchy"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2210, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}