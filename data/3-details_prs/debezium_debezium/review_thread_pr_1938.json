{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NjE5NDYz", "number": 1938, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNjo1MjowOFrOE3UV5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNjo1MjowOFrOE3UV5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDQwNDIyOnYy", "diffSide": "RIGHT", "path": "debezium-core/src/main/java/io/debezium/relational/TableEditorImpl.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNjo1MjowOFrOHwl8ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMTozNjowOVrOHxJdKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcxNTM4Nw==", "bodyText": "I decided to just log an error here. But maybe we can throw the previous IllegalArgumentException here. This should not happen from a proper captured DB schema, the reason can either be a bug in callers or a bug in the DDL parser logic. WDYT?", "url": "https://github.com/debezium/debezium/pull/1938#discussion_r520715387", "createdAt": "2020-11-10T16:52:08Z", "author": {"login": "rk3rn3r"}, "path": "debezium-core/src/main/java/io/debezium/relational/TableEditorImpl.java", "diffHunk": "@@ -92,47 +96,30 @@ public TableEditor setColumns(Column... columns) {\n     public TableEditor setColumns(Iterable<Column> columns) {\n         sortedColumns.clear();\n         addColumns(columns);\n-        updatePrimaryKeys();\n         assert positionsAreValid();\n         return this;\n     }\n \n     protected void updatePrimaryKeys() {\n-        // table does not have any primary key, no need to update\n-        if (uniqueValues) {\n-            return;\n-        }\n-        Iterator<String> nameIter = this.pkColumnNames.iterator();\n-        while (nameIter.hasNext()) {\n-            String pkColumnName = nameIter.next();\n-            if (!hasColumnWithName(pkColumnName)) {\n-                nameIter.remove();\n-            }\n+        if (!uniqueValues) {\n+            // table does have any primary key --> we need to remove it\n+            this.pkColumnNames.removeIf(pkColumnName -> {\n+                boolean pkColumnDoesNotExists = !hasColumnWithName(pkColumnName);\n+                if (pkColumnDoesNotExists) {\n+                    LOGGER.warn(\"The column \\\"\" + pkColumnName + \"\\\" is referenced as PRIMARY KEY, but a matching column is not defined in table \\\"\" + tableId() + \"\\\"!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI0NTEzNQ==", "bodyText": "@rk3rn3r Could we reuse inconsistent.schema.handling.mode for this? If not then I'd vote for the exeception again as we should not mask the bugs.", "url": "https://github.com/debezium/debezium/pull/1938#discussion_r521245135", "createdAt": "2020-11-11T09:59:59Z", "author": {"login": "jpechane"}, "path": "debezium-core/src/main/java/io/debezium/relational/TableEditorImpl.java", "diffHunk": "@@ -92,47 +96,30 @@ public TableEditor setColumns(Column... columns) {\n     public TableEditor setColumns(Iterable<Column> columns) {\n         sortedColumns.clear();\n         addColumns(columns);\n-        updatePrimaryKeys();\n         assert positionsAreValid();\n         return this;\n     }\n \n     protected void updatePrimaryKeys() {\n-        // table does not have any primary key, no need to update\n-        if (uniqueValues) {\n-            return;\n-        }\n-        Iterator<String> nameIter = this.pkColumnNames.iterator();\n-        while (nameIter.hasNext()) {\n-            String pkColumnName = nameIter.next();\n-            if (!hasColumnWithName(pkColumnName)) {\n-                nameIter.remove();\n-            }\n+        if (!uniqueValues) {\n+            // table does have any primary key --> we need to remove it\n+            this.pkColumnNames.removeIf(pkColumnName -> {\n+                boolean pkColumnDoesNotExists = !hasColumnWithName(pkColumnName);\n+                if (pkColumnDoesNotExists) {\n+                    LOGGER.warn(\"The column \\\"\" + pkColumnName + \"\\\" is referenced as PRIMARY KEY, but a matching column is not defined in table \\\"\" + tableId() + \"\\\"!\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcxNTM4Nw=="}, "originalCommit": null, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI1ODc0MA==", "bodyText": "@jpechane I have some updated pov about it today. I'm still not sure if there's any case this can happen with a valid, captured db schema on any of our connectors (I can't imagine any weird case that's causing it, but this might be an edge case)? So imo this can only happen when the parsing logic is broken. The only question I have is, that even if parts of the logic is broken, can we successfully continue? My today's conclusion is that it's not safe to leave the connector running and an exception is the best way to handle it now. It will make DDL parsing errors more visible as well.\nIf you don't have any objections, I will switch to the exception.", "url": "https://github.com/debezium/debezium/pull/1938#discussion_r521258740", "createdAt": "2020-11-11T10:23:28Z", "author": {"login": "rk3rn3r"}, "path": "debezium-core/src/main/java/io/debezium/relational/TableEditorImpl.java", "diffHunk": "@@ -92,47 +96,30 @@ public TableEditor setColumns(Column... columns) {\n     public TableEditor setColumns(Iterable<Column> columns) {\n         sortedColumns.clear();\n         addColumns(columns);\n-        updatePrimaryKeys();\n         assert positionsAreValid();\n         return this;\n     }\n \n     protected void updatePrimaryKeys() {\n-        // table does not have any primary key, no need to update\n-        if (uniqueValues) {\n-            return;\n-        }\n-        Iterator<String> nameIter = this.pkColumnNames.iterator();\n-        while (nameIter.hasNext()) {\n-            String pkColumnName = nameIter.next();\n-            if (!hasColumnWithName(pkColumnName)) {\n-                nameIter.remove();\n-            }\n+        if (!uniqueValues) {\n+            // table does have any primary key --> we need to remove it\n+            this.pkColumnNames.removeIf(pkColumnName -> {\n+                boolean pkColumnDoesNotExists = !hasColumnWithName(pkColumnName);\n+                if (pkColumnDoesNotExists) {\n+                    LOGGER.warn(\"The column \\\"\" + pkColumnName + \"\\\" is referenced as PRIMARY KEY, but a matching column is not defined in table \\\"\" + tableId() + \"\\\"!\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcxNTM4Nw=="}, "originalCommit": null, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI5NzE5NQ==", "bodyText": "I agree, I beleive we are done, the PR can be merged when CI is finished.", "url": "https://github.com/debezium/debezium/pull/1938#discussion_r521297195", "createdAt": "2020-11-11T11:36:09Z", "author": {"login": "jpechane"}, "path": "debezium-core/src/main/java/io/debezium/relational/TableEditorImpl.java", "diffHunk": "@@ -92,47 +96,30 @@ public TableEditor setColumns(Column... columns) {\n     public TableEditor setColumns(Iterable<Column> columns) {\n         sortedColumns.clear();\n         addColumns(columns);\n-        updatePrimaryKeys();\n         assert positionsAreValid();\n         return this;\n     }\n \n     protected void updatePrimaryKeys() {\n-        // table does not have any primary key, no need to update\n-        if (uniqueValues) {\n-            return;\n-        }\n-        Iterator<String> nameIter = this.pkColumnNames.iterator();\n-        while (nameIter.hasNext()) {\n-            String pkColumnName = nameIter.next();\n-            if (!hasColumnWithName(pkColumnName)) {\n-                nameIter.remove();\n-            }\n+        if (!uniqueValues) {\n+            // table does have any primary key --> we need to remove it\n+            this.pkColumnNames.removeIf(pkColumnName -> {\n+                boolean pkColumnDoesNotExists = !hasColumnWithName(pkColumnName);\n+                if (pkColumnDoesNotExists) {\n+                    LOGGER.warn(\"The column \\\"\" + pkColumnName + \"\\\" is referenced as PRIMARY KEY, but a matching column is not defined in table \\\"\" + tableId() + \"\\\"!\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcxNTM4Nw=="}, "originalCommit": null, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4162, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}