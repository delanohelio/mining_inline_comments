{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NjU1NzQw", "number": 1868, "title": "DBZ-2606: Map new name for the fields and headers", "bodyText": "https://issues.redhat.com/browse/DBZ-2606\nAdded ability to map new name for the fields and headers.\nThe \"new name\" mapping is completely optional and we will not\nbe affecting the existing functionality.", "createdAt": "2020-10-05T07:34:54Z", "url": "https://github.com/debezium/debezium/pull/1868", "merged": true, "mergeCommit": {"oid": "4716194ff9d7f9445b90439c4b9d631add93f823"}, "closed": true, "closedAt": "2020-11-04T07:57:17Z", "author": {"login": "rgannu"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPzuC0gFqTUwMjY3NTc3Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZHuNYgBqjM5NTYwMDIyODY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNjc1Nzcy", "url": "https://github.com/debezium/debezium/pull/1868#pullrequestreview-502675772", "createdAt": "2020-10-06T07:57:54Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzo1Nzo1NFrOHc6UUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwODowMToyMlrOHc6cpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3NzY1MQ==", "bodyText": "So when giving the name explicitly, does it make sense to keep the underscores? It's done by default so to reduce odds of conflicts with other field names. But once you take control over names explicitly, it seems fair to leave it up to the user whether to have those prefixes (by explicitly specifying them as part of the mapped name) or not. WDYT?", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r500077651", "createdAt": "2020-10-06T07:57:54Z", "author": {"login": "gunnarmorling"}, "path": "debezium-core/src/test/java/io/debezium/transforms/ExtractNewRecordStateTest.java", "diffHunk": "@@ -336,6 +336,36 @@ public void testAddFields() {\n         }\n     }\n \n+    @Test\n+    @FixFor({ \"DBZ-2606\" })\n+    public void testNewFieldAndHeaderMapping() {\n+        try (final ExtractNewRecordState<SourceRecord> transform = new ExtractNewRecordState<>()) {\n+            final Map<String, String> props = new HashMap<>();\n+            props.put(ADD_FIELDS, \"op:OP, lsn:LSN, id:ID, source.lsn, transaction.total_order:TOTAL_ORDER\");\n+            props.put(ADD_HEADERS, \"op:OP,source.lsn:SOURCE_LSN,transaction.id:TXN_ID,transaction.total_order:TOTAL_ORDER\");\n+            props.put(ADD_HEADERS_PREFIX, \"prefix.\");\n+            transform.configure(props);\n+\n+            final SourceRecord updateRecord = createUpdateRecord();\n+            final SourceRecord unwrapped = transform.apply(updateRecord);\n+            assertThat(((Struct) unwrapped.value()).get(\"__OP\")).isEqualTo(Envelope.Operation.UPDATE.code());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3ODk5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Optionally one can map with the new field name like `version:VERSION, connector:CONNECTOR, source.ts_ms:EVENT_TIMESTAMP` +\n          \n          \n            \n            Optionally, you can override the field name via `<field name>:<new field name>`, e.g. like so: new field name like `version:VERSION, connector:CONNECTOR, source.ts_ms:EVENT_TIMESTAMP` +\n          \n      \n    \n    \n  \n\nAlso I think it's a bit misleading that all mapped names are upper case, this might create the suggestion that it must be that way.", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r500078992", "createdAt": "2020-10-06T08:00:03Z", "author": {"login": "gunnarmorling"}, "path": "documentation/modules/ROOT/pages/configuration/event-flattening.adoc", "diffHunk": "@@ -265,6 +265,8 @@ If you are configuring the event flattening SMT on a sink connector, setting thi\n |\n |Set this option to a comma-separated list, with no spaces, of metadata fields to add to the simplified Kafka record's value. When there are duplicate field names, to add metadata for one of those fields, specify the struct as well as the field, for example `source.ts_ms`. +\n  +\n+Optionally one can map with the new field name like `version:VERSION, connector:CONNECTOR, source.ts_ms:EVENT_TIMESTAMP` +", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3OTc4Mw==", "bodyText": "How about returning an object here which encapsulates the renaming logic. I think FieldReference already is that type pretty much, just push the logic from map() above to there.", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r500079783", "createdAt": "2020-10-06T08:01:22Z", "author": {"login": "gunnarmorling"}, "path": "debezium-core/src/main/java/io/debezium/transforms/ExtractNewRecordState.java", "diffHunk": "@@ -365,13 +378,19 @@ else if (simpleFieldName.equals(TransactionMonitor.DEBEZIUM_TRANSACTION_ID_KEY)\n             else {\n                 return Arrays.stream(addHeadersConfig.split(\",\"))\n                         .map(String::trim)\n-                        .map(field -> new FieldReference(fieldPrefix, field))\n+                        .map(field -> {\n+                            String[] split = field.split(\":\");\n+                            if (split.length > 1) {\n+                                return new FieldReference(fieldPrefix, split[0].trim(), split[1].trim());\n+                            }\n+                            return new FieldReference(fieldPrefix, field);\n+                        })\n                         .collect(Collectors.toList());\n             }\n         }\n \n-        String getNewFieldName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 85}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNjk5MDIx", "url": "https://github.com/debezium/debezium/pull/1868#pullrequestreview-502699021", "createdAt": "2020-10-06T08:26:29Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwODoyNjoyOVrOHc7ZUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwODoyNjoyOVrOHc7ZUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA5NTMxMg==", "bodyText": "Why is it here getnewField and not getFieldName? I think that method resolves the final (to be used) field name?", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r500095312", "createdAt": "2020-10-06T08:26:29Z", "author": {"login": "rk3rn3r"}, "path": "debezium-core/src/main/java/io/debezium/transforms/ExtractNewRecordState.java", "diffHunk": "@@ -267,11 +267,11 @@ private Schema makeUpdatedSchema(List<FieldReference> additionalFields, Schema s\n     }\n \n     private SchemaBuilder updateSchema(FieldReference fieldReference, SchemaBuilder builder, Schema originalRecordSchema) {\n-        return builder.field(fieldReference.getNewFieldName(), fieldReference.getSchema(originalRecordSchema));\n+        return builder.field(fieldReference.getNewField(), fieldReference.getSchema(originalRecordSchema));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 19}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwMzM2NDgz", "url": "https://github.com/debezium/debezium/pull/1868#pullrequestreview-510336483", "createdAt": "2020-10-16T10:13:09Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMDoxMzowOVrOHizc8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMDoxMzowOVrOHizc8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI1NjYyNg==", "bodyText": "@rgannu Hi, I think it is mostly correctly. I am certain doubts about this part of the code. While it works I'd prefer to do it more logically. IMHO first NEW_FIELD_SEPARATOR should be applied as it defines the main components to which the mapping splits. And only after that FIELD_SEPARATOR should be applied.\nThe reason is that the new field name applies to fully qualified field name in the first part not only to one of the compoenents.", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r506256626", "createdAt": "2020-10-16T10:13:09Z", "author": {"login": "jpechane"}, "path": "debezium-core/src/main/java/io/debezium/transforms/ExtractNewRecordState.java", "diffHunk": "@@ -312,29 +313,27 @@ public void close() {\n          * The prefix for the new field name.\n          */\n         private final String prefix;\n+\n         /**\n          * The name for the outgoing attribute/field, e.g. \"__op\" or \"__source_ts_ms\" when the prefix is \"__\"\n          */\n-        private final String newFieldName;\n+        private final String newField;\n \n         private FieldReference(String prefix, String field) {\n             this.prefix = prefix;\n             String[] parts = FIELD_SEPARATOR.split(field);\n \n             if (parts.length == 1) {\n-                this.struct = determineStruct(parts[0]);\n-                this.field = parts[0];\n-                this.newFieldName = prefix + field;\n+                String[] splits = NEW_FIELD_SEPARATOR.split(parts[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 55}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMDUzODQw", "url": "https://github.com/debezium/debezium/pull/1868#pullrequestreview-523053840", "createdAt": "2020-11-04T05:33:01Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwNTozMzowMlrOHtJpwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwNTozMzowMlrOHtJpwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzEwNjExNA==", "bodyText": "@rgannu Hi, I am going to merge this PR, just the last question. Is the new field name really case INsensitive? Same for the description in the field definition.", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r517106114", "createdAt": "2020-11-04T05:33:02Z", "author": {"login": "jpechane"}, "path": "documentation/modules/ROOT/pages/configuration/event-flattening.adoc", "diffHunk": "@@ -265,6 +265,8 @@ If you are configuring the event flattening SMT on a sink connector, setting thi\n |\n |Set this option to a comma-separated list, with no spaces, of metadata fields to add to the simplified Kafka record's value. When there are duplicate field names, to add metadata for one of those fields, specify the struct as well as the field, for example `source.ts_ms`. +\n  +\n+Optionally, you can override the field name via `<field name>:<new field name>`, e.g. like so: new field name like `version:VERSION, connector:CONNECTOR, source.ts_ms:EVENT_TIMESTAMP`. Please note that the `new field name` is case-insensitive. +", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMDY4NjY5", "url": "https://github.com/debezium/debezium/pull/1868#pullrequestreview-523068669", "createdAt": "2020-11-04T06:19:38Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwNjoxOTozOVrOHtKZwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwNjoxOTozOVrOHtKZwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzExODQwMQ==", "bodyText": "@rgannu As I pointed in the previous comment, here is the same problem", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r517118401", "createdAt": "2020-11-04T06:19:39Z", "author": {"login": "jpechane"}, "path": "debezium-core/src/main/java/io/debezium/transforms/ExtractNewRecordStateConfigDefinition.java", "diffHunk": "@@ -125,7 +127,9 @@ public static DeleteHandling parse(String value, String defaultValue) {\n             .withWidth(ConfigDef.Width.LONG)\n             .withImportance(ConfigDef.Importance.LOW)\n             .withDefault(\"\")\n-            .withDescription(\"Adds each field listed to the header,  __ (or __<struct>_ if the struct is specified) \"\n-                    + \"Example: 'version,connector,source.ts_ms' would add __version, __connector and __source_ts_ms fields\");\n+            .withDescription(\"Adds each field listed to the header,  __ (or __<struct>_ if the struct is specified). \"\n+                    + \"Example: 'version,connector,source.ts_ms' would add __version, __connector and __source_ts_ms fields. \"\n+                    + \"Optionally one can also map new field name like version:VERSION,connector:CONNECTOR,source.ts_ms:EVENT_TIMESTAMP.\"\n+                    + \"Please note that the new field name is case-insensitive.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d6de14e970bd540cb3b3217a4282dd36cb32ac0", "author": {"user": {"login": "rgannu", "name": "Ganesh"}}, "url": "https://github.com/debezium/debezium/commit/7d6de14e970bd540cb3b3217a4282dd36cb32ac0", "committedDate": "2020-11-04T06:24:56Z", "message": "DBZ-2606: Map new name for the fields and headers\n\nAdded ability to map new name for the fields and headers.\nThe \"new name\" mapping is completely optional and we will not\nbe affecting the existing functionality.\n\nThe optional \"new name\" is case-sensitive."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "7d6de14e970bd540cb3b3217a4282dd36cb32ac0", "author": {"user": {"login": "rgannu", "name": "Ganesh"}}, "url": "https://github.com/debezium/debezium/commit/7d6de14e970bd540cb3b3217a4282dd36cb32ac0", "committedDate": "2020-11-04T06:24:56Z", "message": "DBZ-2606: Map new name for the fields and headers\n\nAdded ability to map new name for the fields and headers.\nThe \"new name\" mapping is completely optional and we will not\nbe affecting the existing functionality.\n\nThe optional \"new name\" is case-sensitive."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2296, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}