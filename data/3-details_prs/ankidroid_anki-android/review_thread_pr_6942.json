{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxODIzNjA5", "number": 6942, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMDowOToyMVrOEbNE4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMzowODo1MlrOEbNyCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTYxMjQ5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/BackupManager.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMDowOToyMVrOHFER1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMDoyNjowOVrOHFEW7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NTAzMQ==", "bodyText": "? why?", "url": "https://github.com/ankidroid/Anki-Android/pull/6942#discussion_r475075031", "createdAt": "2020-08-22T10:09:21Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/BackupManager.java", "diffHunk": "@@ -111,7 +111,7 @@ private static boolean performBackupInBackground(final String colPath, int inter\n \n         SimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd-HH-mm\", Locale.US);\n         Calendar cal = new GregorianCalendar();\n-        cal.setTimeInMillis(System.currentTimeMillis());\n+        cal.setTimeInMillis(System.currentTimeMillis()); // Uses real time, no col accessible", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f11d5d833b0c8516e9f7093b3efa73060602e11"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NTUzNw==", "bodyText": "I decided to save time as a member of col.\nThe trouble is that some classes such as backupmanager do not have access to col. That's normal since they actually need to manipulate files directly and not the logic behind it. So I can not keep this logic while saving time in Col.\nI could save time as a static member somewhere, but it feels like a bad idea; it seems to me that accessing it through the collection shows that it's the collection time and not current time.\nI could also give the Timer to the methods who does not have access to col. But it did not seems worth it", "url": "https://github.com/ankidroid/Anki-Android/pull/6942#discussion_r475075537", "createdAt": "2020-08-22T10:15:17Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/BackupManager.java", "diffHunk": "@@ -111,7 +111,7 @@ private static boolean performBackupInBackground(final String colPath, int inter\n \n         SimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd-HH-mm\", Locale.US);\n         Calendar cal = new GregorianCalendar();\n-        cal.setTimeInMillis(System.currentTimeMillis());\n+        cal.setTimeInMillis(System.currentTimeMillis()); // Uses real time, no col accessible", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NTAzMQ=="}, "originalCommit": {"oid": "4f11d5d833b0c8516e9f7093b3efa73060602e11"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NjMzMw==", "bodyText": "At this point - it'd be best to have BackupManager methods accept a Time - let's go all the way.", "url": "https://github.com/ankidroid/Anki-Android/pull/6942#discussion_r475076333", "createdAt": "2020-08-22T10:26:09Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/BackupManager.java", "diffHunk": "@@ -111,7 +111,7 @@ private static boolean performBackupInBackground(final String colPath, int inter\n \n         SimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd-HH-mm\", Locale.US);\n         Calendar cal = new GregorianCalendar();\n-        cal.setTimeInMillis(System.currentTimeMillis());\n+        cal.setTimeInMillis(System.currentTimeMillis()); // Uses real time, no col accessible", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NTAzMQ=="}, "originalCommit": {"oid": "4f11d5d833b0c8516e9f7093b3efa73060602e11"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTYxNzE1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/utils/Time.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMDoxNTo1OVrOHFEUBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMDoyNDowM1rOHFEWUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NTU4OQ==", "bodyText": "Can we flag this for refactoring? It'll likely be slow", "url": "https://github.com/ankidroid/Anki-Android/pull/6942#discussion_r475075589", "createdAt": "2020-08-22T10:15:59Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/utils/Time.java", "diffHunk": "@@ -16,14 +16,52 @@\n \n package com.ichi2.libanki.utils;\n \n+import com.ichi2.libanki.DB;\n+\n+import java.util.Calendar;\n import java.util.Date;\n+import java.util.GregorianCalendar;\n \n /** Allows injection of time dependencies */\n-public interface Time {\n-    long time();\n-    Date getCurrentDate();\n+public abstract class Time {\n+    public abstract Date getCurrentDate();\n     /**The time in integer seconds. */\n-    long intTime();\n+    public abstract long intTime();\n     /**The time in integer seconds. */\n-    double now();\n+    public abstract double now();\n+\n+    public abstract long intTimeMS();\n+\n+    public Calendar calendar() {\n+        Calendar cal = Calendar.getInstance();\n+        cal.setTime(getCurrentDate());\n+        return cal;\n+    }\n+\n+    public GregorianCalendar gregorianCalendar() {\n+        GregorianCalendar cal = new GregorianCalendar();\n+        cal.setTime(getCurrentDate());\n+        return cal;\n+    }\n+\n+    /** Return a non-conflicting timestamp for table. */\n+    public long timestampID(DB db, String table) {\n+        // be careful not to create multiple objects without flushing them, or they\n+        // may share an ID.\n+        long t = intTimeMS();\n+        while (db.queryScalar(\"SELECT id FROM \" + table + \" WHERE id = ?\", t) != 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f11d5d833b0c8516e9f7093b3efa73060602e11"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NTgzNQ==", "bodyText": "I am against it for two reason.\nFirst, this is exactly how it is done above. I only changed the method from one class to another for logic purpose.\nSecondly, because this test whether current time in milisecond is already in the database. This should almost always return false except by a very strange coincidence. So in practice, there is no reason to expect it to be slow", "url": "https://github.com/ankidroid/Anki-Android/pull/6942#discussion_r475075835", "createdAt": "2020-08-22T10:19:35Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/utils/Time.java", "diffHunk": "@@ -16,14 +16,52 @@\n \n package com.ichi2.libanki.utils;\n \n+import com.ichi2.libanki.DB;\n+\n+import java.util.Calendar;\n import java.util.Date;\n+import java.util.GregorianCalendar;\n \n /** Allows injection of time dependencies */\n-public interface Time {\n-    long time();\n-    Date getCurrentDate();\n+public abstract class Time {\n+    public abstract Date getCurrentDate();\n     /**The time in integer seconds. */\n-    long intTime();\n+    public abstract long intTime();\n     /**The time in integer seconds. */\n-    double now();\n+    public abstract double now();\n+\n+    public abstract long intTimeMS();\n+\n+    public Calendar calendar() {\n+        Calendar cal = Calendar.getInstance();\n+        cal.setTime(getCurrentDate());\n+        return cal;\n+    }\n+\n+    public GregorianCalendar gregorianCalendar() {\n+        GregorianCalendar cal = new GregorianCalendar();\n+        cal.setTime(getCurrentDate());\n+        return cal;\n+    }\n+\n+    /** Return a non-conflicting timestamp for table. */\n+    public long timestampID(DB db, String table) {\n+        // be careful not to create multiple objects without flushing them, or they\n+        // may share an ID.\n+        long t = intTimeMS();\n+        while (db.queryScalar(\"SELECT id FROM \" + table + \" WHERE id = ?\", t) != 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NTU4OQ=="}, "originalCommit": {"oid": "4f11d5d833b0c8516e9f7093b3efa73060602e11"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NjE3Nw==", "bodyText": "That's fair - would have been useful to just add a note to confirm this code doesn't hit a slow path regularly.", "url": "https://github.com/ankidroid/Anki-Android/pull/6942#discussion_r475076177", "createdAt": "2020-08-22T10:24:03Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/utils/Time.java", "diffHunk": "@@ -16,14 +16,52 @@\n \n package com.ichi2.libanki.utils;\n \n+import com.ichi2.libanki.DB;\n+\n+import java.util.Calendar;\n import java.util.Date;\n+import java.util.GregorianCalendar;\n \n /** Allows injection of time dependencies */\n-public interface Time {\n-    long time();\n-    Date getCurrentDate();\n+public abstract class Time {\n+    public abstract Date getCurrentDate();\n     /**The time in integer seconds. */\n-    long intTime();\n+    public abstract long intTime();\n     /**The time in integer seconds. */\n-    double now();\n+    public abstract double now();\n+\n+    public abstract long intTimeMS();\n+\n+    public Calendar calendar() {\n+        Calendar cal = Calendar.getInstance();\n+        cal.setTime(getCurrentDate());\n+        return cal;\n+    }\n+\n+    public GregorianCalendar gregorianCalendar() {\n+        GregorianCalendar cal = new GregorianCalendar();\n+        cal.setTime(getCurrentDate());\n+        return cal;\n+    }\n+\n+    /** Return a non-conflicting timestamp for table. */\n+    public long timestampID(DB db, String table) {\n+        // be careful not to create multiple objects without flushing them, or they\n+        // may share an ID.\n+        long t = intTimeMS();\n+        while (db.queryScalar(\"SELECT id FROM \" + table + \" WHERE id = ?\", t) != 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NTU4OQ=="}, "originalCommit": {"oid": "4f11d5d833b0c8516e9f7093b3efa73060602e11"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTYxNzY1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/stats/AdvancedStatistics.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMDoxNjo0NFrOHFEUOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMDozMjo1NVrOHFEY1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NTY0Mw==", "bodyText": "just pass in a Time as the second argument", "url": "https://github.com/ankidroid/Anki-Android/pull/6942#discussion_r475075643", "createdAt": "2020-08-22T10:16:44Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/stats/AdvancedStatistics.java", "diffHunk": "@@ -659,14 +659,14 @@ public void close() {\n                 queryBaseYoungMature\n                         + \"where type=\" + Consts.CARD_TYPE_LRN + \" and lastIvl >= 21;\";\n \n-        public EaseClassifier(SupportSQLiteDatabase db) {\n+        public EaseClassifier(Collection col, SupportSQLiteDatabase db) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f11d5d833b0c8516e9f7093b3efa73060602e11"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NjgyMA==", "bodyText": "Makes sens", "url": "https://github.com/ankidroid/Anki-Android/pull/6942#discussion_r475076820", "createdAt": "2020-08-22T10:32:55Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/stats/AdvancedStatistics.java", "diffHunk": "@@ -659,14 +659,14 @@ public void close() {\n                 queryBaseYoungMature\n                         + \"where type=\" + Consts.CARD_TYPE_LRN + \" and lastIvl >= 21;\";\n \n-        public EaseClassifier(SupportSQLiteDatabase db) {\n+        public EaseClassifier(Collection col, SupportSQLiteDatabase db) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NTY0Mw=="}, "originalCommit": {"oid": "4f11d5d833b0c8516e9f7093b3efa73060602e11"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTYxODQzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Storage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMDoxODowNVrOHFEUmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMDoyMTo0NlrOHFEVtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NTczOQ==", "bodyText": "? Why", "url": "https://github.com/ankidroid/Anki-Android/pull/6942#discussion_r475075739", "createdAt": "2020-08-22T10:18:05Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Storage.java", "diffHunk": "@@ -318,7 +326,7 @@ private static void _setColVars(DB db) {\n         g.put(\"id\", 1);\n         g.put(\"name\", \"Default\");\n         g.put(\"conf\", 1);\n-        g.put(\"mod\", Utils.intTime());\n+        g.put(\"mod\", Utils.intTime()); // Uses real time, so can't be tested with mocked time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f11d5d833b0c8516e9f7093b3efa73060602e11"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NjAyMg==", "bodyText": "Same reason as above. I don't have easy access to the mock object here since I have chosen to put it into the collection. This choice can be discussed, but that did seems mostly okay.\nI can change that", "url": "https://github.com/ankidroid/Anki-Android/pull/6942#discussion_r475076022", "createdAt": "2020-08-22T10:21:46Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Storage.java", "diffHunk": "@@ -318,7 +326,7 @@ private static void _setColVars(DB db) {\n         g.put(\"id\", 1);\n         g.put(\"name\", \"Default\");\n         g.put(\"conf\", 1);\n-        g.put(\"mod\", Utils.intTime());\n+        g.put(\"mod\", Utils.intTime()); // Uses real time, so can't be tested with mocked time", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NTczOQ=="}, "originalCommit": {"oid": "4f11d5d833b0c8516e9f7093b3efa73060602e11"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTYxODYxOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Storage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMDoxODoyNlrOHFEUrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMDozMDoxNVrOHFEYEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NTc1OA==", "bodyText": "Again, why can't we pass in a Time?", "url": "https://github.com/ankidroid/Anki-Android/pull/6942#discussion_r475075758", "createdAt": "2020-08-22T10:18:26Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Storage.java", "diffHunk": "@@ -305,7 +313,7 @@ private static void _addSchema(DB db, boolean setColConf) {\n         db.execute(\"create table if not exists graves (\" + \"    usn             integer not null,\"\n                 + \"    oid             integer not null,\" + \"    type            integer not null\" + \")\");\n         db.execute(\"INSERT OR IGNORE INTO col VALUES(1,0,0,\" +\n-                Utils.intTime(1000) + \",\" + Consts.SCHEMA_VERSION +\n+                Utils.intTime(1000) + \",\" + Consts.SCHEMA_VERSION + // Use real time, because no access to col", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f11d5d833b0c8516e9f7093b3efa73060602e11"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NjYyNw==", "bodyText": "I guess that now that Collection's creator take a time object, I can give a time object here", "url": "https://github.com/ankidroid/Anki-Android/pull/6942#discussion_r475076627", "createdAt": "2020-08-22T10:30:15Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Storage.java", "diffHunk": "@@ -305,7 +313,7 @@ private static void _addSchema(DB db, boolean setColConf) {\n         db.execute(\"create table if not exists graves (\" + \"    usn             integer not null,\"\n                 + \"    oid             integer not null,\" + \"    type            integer not null\" + \")\");\n         db.execute(\"INSERT OR IGNORE INTO col VALUES(1,0,0,\" +\n-                Utils.intTime(1000) + \",\" + Consts.SCHEMA_VERSION +\n+                Utils.intTime(1000) + \",\" + Consts.SCHEMA_VERSION + // Use real time, because no access to col", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NTc1OA=="}, "originalCommit": {"oid": "4f11d5d833b0c8516e9f7093b3efa73060602e11"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTYxOTc4OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMDoyMDoxMVrOHFEVOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMDoyNjo0NFrOHFEXJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NTg5Ng==", "bodyText": "needs to check for a null time here", "url": "https://github.com/ankidroid/Anki-Android/pull/6942#discussion_r475075896", "createdAt": "2020-08-22T10:20:11Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -162,21 +170,27 @@\n     private static final int UNDO_SIZE_MAX = 20;\n \n     public Collection(Context context, DB db, String path, boolean server, boolean log) {\n+        this(context, db, path, server, log, new SystemTime());\n+    }\n+\n+    @VisibleForTesting\n+    public Collection(Context context, DB db, String path, boolean server, boolean log, Time time) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f11d5d833b0c8516e9f7093b3efa73060602e11"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NjMyNw==", "bodyText": "Oops.. I added the test in Storage.collection instead of real collection constructor. Nice catch. Sorry", "url": "https://github.com/ankidroid/Anki-Android/pull/6942#discussion_r475076327", "createdAt": "2020-08-22T10:26:03Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -162,21 +170,27 @@\n     private static final int UNDO_SIZE_MAX = 20;\n \n     public Collection(Context context, DB db, String path, boolean server, boolean log) {\n+        this(context, db, path, server, log, new SystemTime());\n+    }\n+\n+    @VisibleForTesting\n+    public Collection(Context context, DB db, String path, boolean server, boolean log, Time time) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NTg5Ng=="}, "originalCommit": {"oid": "4f11d5d833b0c8516e9f7093b3efa73060602e11"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NjM4OQ==", "bodyText": "Oops.. I added the test in Storage.collection instead of real collection constructor. Nice catch. Sorry", "url": "https://github.com/ankidroid/Anki-Android/pull/6942#discussion_r475076389", "createdAt": "2020-08-22T10:26:44Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -162,21 +170,27 @@\n     private static final int UNDO_SIZE_MAX = 20;\n \n     public Collection(Context context, DB db, String path, boolean server, boolean log) {\n+        this(context, db, path, server, log, new SystemTime());\n+    }\n+\n+    @VisibleForTesting\n+    public Collection(Context context, DB db, String path, boolean server, boolean log, Time time) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NTg5Ng=="}, "originalCommit": {"oid": "4f11d5d833b0c8516e9f7093b3efa73060602e11"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTcyNzU3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/BackupManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMzowNzo0NlrOHFFHTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMzo0MjoyOVrOHFFWOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA4ODcxOA==", "bodyText": "Why?", "url": "https://github.com/ankidroid/Anki-Android/pull/6942#discussion_r475088718", "createdAt": "2020-08-22T13:07:46Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/BackupManager.java", "diffHunk": "@@ -124,7 +126,7 @@ private static boolean performBackupInBackground(final String colPath, int inter\n                 lastBackupDate = null;\n             }\n         }\n-        if (lastBackupDate != null && lastBackupDate.getTime() + interval * 3600000L > Utils.intTime(1000) && !force) {\n+        if (lastBackupDate != null && lastBackupDate.getTime() + interval * 3600000L > Utils.intTime(1000) && !force) { // Uses real time, not collection ones", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "763bc206f36232588232492673de73293f19372e"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA5MjUzNw==", "bodyText": "I thought I corrected this one with your previous remark. Not sure why it's still here", "url": "https://github.com/ankidroid/Anki-Android/pull/6942#discussion_r475092537", "createdAt": "2020-08-22T13:42:29Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/BackupManager.java", "diffHunk": "@@ -124,7 +126,7 @@ private static boolean performBackupInBackground(final String colPath, int inter\n                 lastBackupDate = null;\n             }\n         }\n-        if (lastBackupDate != null && lastBackupDate.getTime() + interval * 3600000L > Utils.intTime(1000) && !force) {\n+        if (lastBackupDate != null && lastBackupDate.getTime() + interval * 3600000L > Utils.intTime(1000) && !force) { // Uses real time, not collection ones", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA4ODcxOA=="}, "originalCommit": {"oid": "763bc206f36232588232492673de73293f19372e"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTcyODExOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/dialogs/DialogHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMzowODo1MlrOHFFHkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMzo0MjowOFrOHFFWHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA4ODc4Nw==", "bodyText": "Why? Shouldn't we pin all operations off the time dependency", "url": "https://github.com/ankidroid/Anki-Android/pull/6942#discussion_r475088787", "createdAt": "2020-08-22T13:08:52Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/dialogs/DialogHandler.java", "diffHunk": "@@ -120,7 +120,7 @@ public void run() {\n             SharedPreferences preferences = AnkiDroidApp.getSharedPrefs(mActivity.get());\n             Resources res = mActivity.get().getResources();\n             String hkey = preferences.getString(\"hkey\", \"\");\n-            long millisecondsSinceLastSync = Utils.intTime(1000) - preferences.getLong(\"lastSyncTime\", 0);\n+            long millisecondsSinceLastSync = Utils.intTime(1000) - preferences.getLong(\"lastSyncTime\", 0); // Uses real time, not collection's one.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "763bc206f36232588232492673de73293f19372e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA5MjUwOA==", "bodyText": "I saw the col being accessed nowhere else. I suspected that, during sync, the col may actually nov even be loaded. That would at least be the case for full sync. So it did seem risky. I corrected it", "url": "https://github.com/ankidroid/Anki-Android/pull/6942#discussion_r475092508", "createdAt": "2020-08-22T13:42:08Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/dialogs/DialogHandler.java", "diffHunk": "@@ -120,7 +120,7 @@ public void run() {\n             SharedPreferences preferences = AnkiDroidApp.getSharedPrefs(mActivity.get());\n             Resources res = mActivity.get().getResources();\n             String hkey = preferences.getString(\"hkey\", \"\");\n-            long millisecondsSinceLastSync = Utils.intTime(1000) - preferences.getLong(\"lastSyncTime\", 0);\n+            long millisecondsSinceLastSync = Utils.intTime(1000) - preferences.getLong(\"lastSyncTime\", 0); // Uses real time, not collection's one.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA4ODc4Nw=="}, "originalCommit": {"oid": "763bc206f36232588232492673de73293f19372e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4880, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}