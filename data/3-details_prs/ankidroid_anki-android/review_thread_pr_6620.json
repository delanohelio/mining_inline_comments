{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MzQyNTMx", "number": 6620, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwMDo1Njo1NlrOELaxzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMDoxNDozMVrOELc03w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDA4NTI0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwMDo1Njo1NlrOGs-vew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwMjo1MzozMVrOGs_HGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxODQ5MQ==", "bodyText": "Nit: better as a static factory method rather than a constructor.\nTry to avoid work in a constructor if at all possible.", "url": "https://github.com/ankidroid/Anki-Android/pull/6620#discussion_r449818491", "createdAt": "2020-07-05T00:56:56Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -139,9 +139,65 @@\n     private Collection mCol;\n     private HashMap<Long, JSONObject> mDecks;\n     private HashMap<Long, JSONObject> mDconf;\n-    private HashMap<String, JSONObject> mNameMap;\n+    // Never access mNameMap directly. Uses byName\n+    private NameMap mNameMap;\n     private boolean mChanged;\n \n+    private class NameMap {\n+        private final HashMap<String, JSONObject> mNameMap;\n+\n+        public NameMap(java.util.Collection<JSONObject> decks) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107920014b450b75a27010b52378e39001de350d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxOTc1Nw==", "bodyText": "I know you have already talk about static factory, but I still don't get the point. Would you have a link", "url": "https://github.com/ankidroid/Anki-Android/pull/6620#discussion_r449819757", "createdAt": "2020-07-05T01:20:24Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -139,9 +139,65 @@\n     private Collection mCol;\n     private HashMap<Long, JSONObject> mDecks;\n     private HashMap<Long, JSONObject> mDconf;\n-    private HashMap<String, JSONObject> mNameMap;\n+    // Never access mNameMap directly. Uses byName\n+    private NameMap mNameMap;\n     private boolean mChanged;\n \n+    private class NameMap {\n+        private final HashMap<String, JSONObject> mNameMap;\n+\n+        public NameMap(java.util.Collection<JSONObject> decks) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxODQ5MQ=="}, "originalCommit": {"oid": "107920014b450b75a27010b52378e39001de350d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgyNDUzNw==", "bodyText": "https://blog.thecodewhisperer.com/permalink/your-constructors-are-completely-irrational\nhttp://misko.hevery.com/code-reviewers-guide/flaw-constructor-does-real-work/", "url": "https://github.com/ankidroid/Anki-Android/pull/6620#discussion_r449824537", "createdAt": "2020-07-05T02:53:31Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -139,9 +139,65 @@\n     private Collection mCol;\n     private HashMap<Long, JSONObject> mDecks;\n     private HashMap<Long, JSONObject> mDconf;\n-    private HashMap<String, JSONObject> mNameMap;\n+    // Never access mNameMap directly. Uses byName\n+    private NameMap mNameMap;\n     private boolean mChanged;\n \n+    private class NameMap {\n+        private final HashMap<String, JSONObject> mNameMap;\n+\n+        public NameMap(java.util.Collection<JSONObject> decks) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxODQ5MQ=="}, "originalCommit": {"oid": "107920014b450b75a27010b52378e39001de350d"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDQyMDI2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/test/java/com/ichi2/libanki/DecksTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMDoxMzoyOVrOGtBQlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMjozMDozOVrOGtCBmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1OTczMw==", "bodyText": "Nit: It'd be useful to either comment that the casing changes here (the deck in TEST_DECKS has the same casing as this string), or pick a deck name where it's immediately obvious that the casing is changed", "url": "https://github.com/ankidroid/Anki-Android/pull/6620#discussion_r449859733", "createdAt": "2020-07-05T10:13:29Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/test/java/com/ichi2/libanki/DecksTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.ichi2.libanki;\n+\n+import com.ichi2.anki.RobolectricTest;\n+import com.ichi2.libanki.sched.AbstractSched;\n+import com.ichi2.utils.Assert;\n+import com.ichi2.utils.JSONObject;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.List;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class DecksTest extends RobolectricTest {\n+    public static final String[] TEST_DECKS = {\n+            \"scxipjiyozczaaczoawo\",\n+            \"cmxieunwoogyxsctnJmv::abcdefgh::ZYXW\",\n+            \"cmxieunwoogyxsctNjmv::INSBGDS\",\n+    };\n+\n+    @Test\n+    public void ensureDeckList() {\n+        Decks decks = getCol().getDecks();\n+        //decks.load(\"{\\\"2\\\":{\\\"name\\\":\\\"A\\\", \\\"id\\\":2}, \\\"3\\\":{\\\"name\\\":\\\"a::B\\\", \\\"id\\\":2}}\", \"{}\");\n+        for (String deckName: TEST_DECKS) {\n+            addDeck(deckName);\n+        }\n+        JSONObject brokenDeck = decks.byName(\"cmxieunwoogyxsctNjmv::INSBGDS\");\n+        Asserts.notNull(brokenDeck,\"We should get deck with given name\");\n+        brokenDeck.put(\"name\", \"cmxieunwoogyxSctNjmv::INSBGDS\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "052a9ecb34cae7269aa77918ae5050aa2b49c792"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3MjI4Mg==", "bodyText": "ok", "url": "https://github.com/ankidroid/Anki-Android/pull/6620#discussion_r449872282", "createdAt": "2020-07-05T12:30:39Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/test/java/com/ichi2/libanki/DecksTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.ichi2.libanki;\n+\n+import com.ichi2.anki.RobolectricTest;\n+import com.ichi2.libanki.sched.AbstractSched;\n+import com.ichi2.utils.Assert;\n+import com.ichi2.utils.JSONObject;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.List;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class DecksTest extends RobolectricTest {\n+    public static final String[] TEST_DECKS = {\n+            \"scxipjiyozczaaczoawo\",\n+            \"cmxieunwoogyxsctnJmv::abcdefgh::ZYXW\",\n+            \"cmxieunwoogyxsctNjmv::INSBGDS\",\n+    };\n+\n+    @Test\n+    public void ensureDeckList() {\n+        Decks decks = getCol().getDecks();\n+        //decks.load(\"{\\\"2\\\":{\\\"name\\\":\\\"A\\\", \\\"id\\\":2}, \\\"3\\\":{\\\"name\\\":\\\"a::B\\\", \\\"id\\\":2}}\", \"{}\");\n+        for (String deckName: TEST_DECKS) {\n+            addDeck(deckName);\n+        }\n+        JSONObject brokenDeck = decks.byName(\"cmxieunwoogyxsctNjmv::INSBGDS\");\n+        Asserts.notNull(brokenDeck,\"We should get deck with given name\");\n+        brokenDeck.put(\"name\", \"cmxieunwoogyxSctNjmv::INSBGDS\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1OTczMw=="}, "originalCommit": {"oid": "052a9ecb34cae7269aa77918ae5050aa2b49c792"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDQyMDc5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/test/java/com/ichi2/libanki/DecksTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMDoxNDozMVrOGtBQ1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMjozMDo0M1rOGtCBpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1OTc5OQ==", "bodyText": "Could you comment that this is used by external consumers", "url": "https://github.com/ankidroid/Anki-Android/pull/6620#discussion_r449859799", "createdAt": "2020-07-05T10:14:31Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/test/java/com/ichi2/libanki/DecksTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.ichi2.libanki;\n+\n+import com.ichi2.anki.RobolectricTest;\n+import com.ichi2.libanki.sched.AbstractSched;\n+import com.ichi2.utils.Assert;\n+import com.ichi2.utils.JSONObject;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.List;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class DecksTest extends RobolectricTest {\n+    public static final String[] TEST_DECKS = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "052a9ecb34cae7269aa77918ae5050aa2b49c792"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3MDAzMA==", "bodyText": "What is external consumer ?", "url": "https://github.com/ankidroid/Anki-Android/pull/6620#discussion_r449870030", "createdAt": "2020-07-05T12:06:13Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/test/java/com/ichi2/libanki/DecksTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.ichi2.libanki;\n+\n+import com.ichi2.anki.RobolectricTest;\n+import com.ichi2.libanki.sched.AbstractSched;\n+import com.ichi2.utils.Assert;\n+import com.ichi2.utils.JSONObject;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.List;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class DecksTest extends RobolectricTest {\n+    public static final String[] TEST_DECKS = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1OTc5OQ=="}, "originalCommit": {"oid": "052a9ecb34cae7269aa77918ae5050aa2b49c792"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3MDY0MQ==", "bodyText": "Something outside the class", "url": "https://github.com/ankidroid/Anki-Android/pull/6620#discussion_r449870641", "createdAt": "2020-07-05T12:12:59Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/test/java/com/ichi2/libanki/DecksTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.ichi2.libanki;\n+\n+import com.ichi2.anki.RobolectricTest;\n+import com.ichi2.libanki.sched.AbstractSched;\n+import com.ichi2.utils.Assert;\n+import com.ichi2.utils.JSONObject;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.List;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class DecksTest extends RobolectricTest {\n+    public static final String[] TEST_DECKS = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1OTc5OQ=="}, "originalCommit": {"oid": "052a9ecb34cae7269aa77918ae5050aa2b49c792"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3MjI5Mg==", "bodyText": "ok", "url": "https://github.com/ankidroid/Anki-Android/pull/6620#discussion_r449872292", "createdAt": "2020-07-05T12:30:43Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/test/java/com/ichi2/libanki/DecksTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.ichi2.libanki;\n+\n+import com.ichi2.anki.RobolectricTest;\n+import com.ichi2.libanki.sched.AbstractSched;\n+import com.ichi2.utils.Assert;\n+import com.ichi2.utils.JSONObject;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.List;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class DecksTest extends RobolectricTest {\n+    public static final String[] TEST_DECKS = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1OTc5OQ=="}, "originalCommit": {"oid": "052a9ecb34cae7269aa77918ae5050aa2b49c792"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 93, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}