{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4NTA4MDM3", "number": 5821, "title": "Fix #5778 - Scheduling doesn't respect max intervals", "bodyText": "Purpose / Description\nThis PR brings in changes in the function at line 695 of the desktop Anki scheduler that aren't in Anki-Android: https://github.com/ankitects/anki/blob/master/pylib/anki/sched.py#L695\nIn other words, this is a minor code change to fix a scheduling bug where cards would be given a smaller interval than shown on the review buttons. This could occur because having a low maximum interval changes the new ivl level that is updated in the database (despite a different interval being shown to the user on the \"again/hard/okay/easy\" buttons during review, because the calculation logic is separate).\nFixes\nFixes #5778\nApproach\nI copied over changes from the desktop Anki repository that updates the card's new Ivl from just being an idealIvl calculation to also checking if the maxIvl sets a different level (else Anki changes the interval at some other point). This is the same URL linked above from the desktop repo.\nHow Has This Been Tested?\nFor a given deck that has mature cards that need to be reviewed, change the deck's maximum interval period to 22 days. Then, review a card (the review buttons should all say 22 days). After review, check the card's new interval to make sure it is 22 days, and not a lower number like 19.\nNote: This assumes your interval modifier is at 100%. If it is not, change it to that.\nTested on a Samsung Galaxy S10E, Android 10, latest master as of writing.\nLearning (optional, can help others)\nI originally noticed a bug in a previous deck (a writeup of the problem is in #5778). Upon further investigation, I noticed that it was only cards near my deck's maximum interval limit of 22 days that were randomly getting changed to lower intervals (despite all review buttons saying 22 days):\n\nFurther testing revealed that it wasn't rating dependent - any rating lower, equal, or higher than the previous intervals were still getting corrupted intervals. Because the intervals shown to me on the buttons were the correct intervals, and the desktop clients were all fine, I became suspicious that Anki Android (and also AnkiMobile iOS, incidentally which has the same bug) might have some different calculation logic occurring at interval update (suggesting the intervals are calculated twice).\nChecking the desktop logic here (line 695) and comparing it to the Anki-Android equivalent function (see the diff for this PR) indeed confirmed that the logic for calculating intervals at update time had not been updated; hence this explained why desktop and AnkiWeb clients weren't having issues, while the mobile app was.\nChecklist\nPlease, go through these checks before submitting the PR.\n\n You have not changed whitespace unnecessarily (it makes diffs hard to read)\n You have a descriptive commit message with a short title (first line, max 50 chars).\n Your code follows the style of the project (e.g. never omit braces in if statements)\n You have commented your code, particularly in hard-to-understand areas\n You have performed a self-review of your own code\n\nDescriptive commit message: Intend to squash commits and use this PR as title.", "createdAt": "2020-03-15T01:06:50Z", "url": "https://github.com/ankidroid/Anki-Android/pull/5821", "merged": true, "mergeCommit": {"oid": "54a56b8bc112af2d427b732b774fe83abba9faf3"}, "closed": true, "closedAt": "2020-03-15T14:34:22Z", "author": {"login": "Kyrielight"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcNuorrAH2gAyMzg4NTA4MDM3OmI4MWU0MDYxMGE4NTFiNmQyOGE4NTc2YWJmZTAzZGNlZjVjZmYyNTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcN6NokgFqTM3NDgwMjg4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b81e40610a851b6d28a8576abfe03dcef5cff259", "author": {"user": {"login": "Kyrielight", "name": "_j"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/b81e40610a851b6d28a8576abfe03dcef5cff259", "committedDate": "2020-03-15T00:47:10Z", "message": "Fix: Scheduler properly respects max interval"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "100efcc283cad3b2fd7cc0cadb921fbf20ed2a87", "author": {"user": {"login": "Kyrielight", "name": "_j"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/100efcc283cad3b2fd7cc0cadb921fbf20ed2a87", "committedDate": "2020-03-15T00:49:36Z", "message": "Minor code formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0Nzk5NDQ0", "url": "https://github.com/ankidroid/Anki-Android/pull/5821#pullrequestreview-374799444", "createdAt": "2020-03-15T13:30:38Z", "commit": {"oid": "100efcc283cad3b2fd7cc0cadb921fbf20ed2a87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxMzozMDozOVrOF2e7Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxMzozMDozOVrOF2e7Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY3NDExMQ==", "bodyText": "Here's my only question before merge - I understand going into JSON always has the possibility of throwing JSONException, but what is the real risk of _revConf throwing here? Is it every possible for that to happen?\nI've been fixing crash bugs a lot, and some are weird corner cases, so I want to make sure. A more defensive structure might be to get idealIvl and adjRevIvl first (outside of try/catch) so we have existing behavior at least as a fallback, then inside the try/catch you could try to fetch the _revConf and do the Math.min to adjust the value, logging if there is a problem but not crashing. What do you think?", "url": "https://github.com/ankidroid/Anki-Android/pull/5821#discussion_r392674111", "createdAt": "2020-03-15T13:30:39Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Sched.java", "diffHunk": "@@ -1500,8 +1500,16 @@ private long _daysLate(Card card) {\n \n \n     private void _updateRevIvl(Card card, int ease) {\n-        int idealIvl = _nextRevIvl(card, ease);\n-        card.setIvl(_adjRevIvl(card, idealIvl));\n+        try {\n+            int idealIvl = _nextRevIvl(card, ease);\n+            JSONObject conf = _revConf(card);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "100efcc283cad3b2fd7cc0cadb921fbf20ed2a87"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0ODAyODgw", "url": "https://github.com/ankidroid/Anki-Android/pull/5821#pullrequestreview-374802880", "createdAt": "2020-03-15T14:15:16Z", "commit": {"oid": "100efcc283cad3b2fd7cc0cadb921fbf20ed2a87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxNDoxNToxNlrOF2fJww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxNDoxNToxNlrOF2fJww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY3NzgyNw==", "bodyText": "_revConf is always the conf of the original deck, not the filtered one.\nOriginal conf are supposed to always have a value maxIvl. It's never deleted in anki code. Of course, bug could occur if an add-on did something bad, or a beta version. But that should not be the case.", "url": "https://github.com/ankidroid/Anki-Android/pull/5821#discussion_r392677827", "createdAt": "2020-03-15T14:15:16Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Sched.java", "diffHunk": "@@ -1500,8 +1500,16 @@ private long _daysLate(Card card) {\n \n \n     private void _updateRevIvl(Card card, int ease) {\n-        int idealIvl = _nextRevIvl(card, ease);\n-        card.setIvl(_adjRevIvl(card, idealIvl));\n+        try {\n+            int idealIvl = _nextRevIvl(card, ease);\n+            JSONObject conf = _revConf(card);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY3NDExMQ=="}, "originalCommit": {"oid": "100efcc283cad3b2fd7cc0cadb921fbf20ed2a87"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3709, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}