{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMTI1OTY4", "number": 6571, "title": "Reminder becomes quicker", "bodyText": "Hopefully partially solving #6524\nAnkiDroid planifies reminder for specific deck option and not for specific deck. When the reminder is executed, it loops over decks to check which one has the correct type and have cards to review.\nIt is still slightly silly that the reminders run while anki starts, however that's still an improvement because instead of doing the action once by deck, it is done one by deck option, and the number of deck option is necessarily smaller than the number of deck.\nI tested it by adding a reminder on my phone, seeing it working, and still being able to use ankidroid", "createdAt": "2020-06-28T22:42:48Z", "url": "https://github.com/ankidroid/Anki-Android/pull/6571", "merged": true, "mergeCommit": {"oid": "ace02affec801b5c179e27f625b9a15fe292b3ff"}, "closed": true, "closedAt": "2020-06-29T18:55:32Z", "author": {"login": "Arthur-Milchior"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcv0l0vAFqTQzODgxOTc3Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwE_eeAFqTQzOTM4MDA4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4ODE5Nzc2", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#pullrequestreview-438819776", "createdAt": "2020-06-28T22:47:13Z", "commit": {"oid": "e6915cca49db1e5573bfe5dee6417df1c744ad4d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQyMjo0NzoxM1rOGqA4wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQyMjo1NDo0MFrOGqA7cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwNzkwNQ==", "bodyText": "Can we exit early if this isn't true?", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446707905", "createdAt": "2020-06-28T22:47:13Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -31,67 +31,78 @@\n import com.ichi2.anki.IntentHandler;\n import com.ichi2.anki.NotificationChannels;\n import com.ichi2.anki.R;\n+import com.ichi2.libanki.Collection;\n+import com.ichi2.libanki.sched.AbstractSched;\n import com.ichi2.libanki.sched.Sched;\n+import com.ichi2.utils.JSONObject;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n \n public class ReminderService extends BroadcastReceiver {\n \n+    public static final String EXTRA_DECK_OPTION_ID = \"EXTRA_DECK_OPTION_ID\";\n     public static final String EXTRA_DECK_ID = \"EXTRA_DECK_ID\";\n \n     @Override\n     public void onReceive(Context context, Intent intent) {\n \n-        final long deckId = intent.getLongExtra(EXTRA_DECK_ID, 0);\n+        final long dConfId = intent.getLongExtra(EXTRA_DECK_OPTION_ID, 0);\n \n-        if (CollectionHelper.getInstance().getCol(context).getDecks().get(deckId, false) == null) {\n+        if (CollectionHelper.getInstance().getCol(context).getDecks().getConf(dConfId) == null) {\n             final AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n \n             final PendingIntent reminderIntent = PendingIntent.getBroadcast(\n                     context,\n-                    (int) deckId,\n-                    new Intent(context, ReminderService.class).putExtra(EXTRA_DECK_ID, deckId),\n+                    (int) dConfId,\n+                    new Intent(context, ReminderService.class).putExtra(EXTRA_DECK_OPTION_ID, dConfId),\n                     0\n             );\n \n             alarmManager.cancel(reminderIntent);\n         }\n \n-        Sched.DeckDueTreeNode deckDue = getDeckDue(context, deckId, true);\n+        List<Sched.DeckDueTreeNode> decksDue = getDeckOptionDue(context, dConfId, true);\n \n-        if (null == deckDue) {\n+        if (null == decksDue) {\n             return;\n         }\n \n-        final int total = deckDue.getRevCount() + deckDue.getLrnCount() + deckDue.getNewCount();\n+        for (Sched.DeckDueTreeNode deckDue: decksDue) {\n+            long deckId = deckDue.getDid();\n+            final int total = deckDue.getRevCount() + deckDue.getLrnCount() + deckDue.getNewCount();\n \n-        if (total <= 0) {\n-            return;\n-        }\n+            if (total <= 0) {\n+                continue;\n+            }\n \n-        final NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);\n-\n-        if (notificationManager.areNotificationsEnabled()) {\n-            final Notification notification =\n-                    new NotificationCompat.Builder(context,\n-                            NotificationChannels.getId(NotificationChannels.Channel.DECK_REMINDERS))\n-                    .setCategory(NotificationCompat.CATEGORY_REMINDER)\n-                    .setContentTitle(context.getString(R.string.reminder_title))\n-                    .setContentText(context.getResources().getQuantityString(\n-                            R.plurals.reminder_text,\n-                            total,\n-                            CollectionHelper.getInstance().getCol(context).getDecks().name(deckId),\n-                            total\n-                    ))\n-                    .setSmallIcon(R.drawable.ic_stat_notify)\n-                    .setColor(ContextCompat.getColor(context, R.color.material_light_blue_700))\n-                    .setContentIntent(PendingIntent.getActivity(\n-                            context,\n-                            (int) deckId,\n-                            getReviewDeckIntent(context, deckId),\n-                            PendingIntent.FLAG_UPDATE_CURRENT\n-                    ))\n-                    .setAutoCancel(true)\n-                    .build();\n-            notificationManager.notify((int) deckId, notification);\n+            final NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);\n+\n+            Timber.v(\"Notify: study deck %s\", deckDue.getFullDeckName());\n+            if (notificationManager.areNotificationsEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6915cca49db1e5573bfe5dee6417df1c744ad4d"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwODEwNQ==", "bodyText": "rare race condition here: col.getDecks().get(node.getDid()) could be deleted, in this case, we check the default deck multiple times.", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446708105", "createdAt": "2020-06-28T22:49:49Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -103,20 +114,23 @@ public static Intent getReviewDeckIntent(@NonNull Context context, long deckId)\n \n \n     // getDeckDue information, will recur one time to workaround collection close if recur is true\n-    private Sched.DeckDueTreeNode getDeckDue(Context context, long deckId, boolean recur) {\n+    private List<Sched.DeckDueTreeNode> getDeckOptionDue(Context context, long dConfId, boolean recur) {\n \n+        Collection col = CollectionHelper.getInstance().getCol(context);\n         // Avoid crashes if the deck is deleted while we are working\n-        if (CollectionHelper.getInstance().getCol(context).getDecks().get(deckId, false) == null) {\n-            Timber.d(\"Deck %s deleted while ReminderService was working. Ignoring\", deckId);\n+        if (col.getDecks().getConf(dConfId) == null) {\n+            Timber.d(\"Deck option %s deleted while ReminderService was working. Ignoring\", dConfId);\n             return null;\n         }\n \n+        List<Sched.DeckDueTreeNode> decks = new ArrayList<>();\n         try {\n             for (Sched.DeckDueTreeNode node : CollectionHelper.getInstance().getCol(context).getSched().deckDueTree()) {\n-                if (node.getDid() == deckId) {\n-                    return node;\n+                if (col.getDecks().get(node.getDid()).optLong(\"conf\") == dConfId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6915cca49db1e5573bfe5dee6417df1c744ad4d"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwODM4MQ==", "bodyText": "@Nullable. But, should we return an empty list here?", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446708381", "createdAt": "2020-06-28T22:52:23Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -103,20 +114,23 @@ public static Intent getReviewDeckIntent(@NonNull Context context, long deckId)\n \n \n     // getDeckDue information, will recur one time to workaround collection close if recur is true\n-    private Sched.DeckDueTreeNode getDeckDue(Context context, long deckId, boolean recur) {\n+    private List<Sched.DeckDueTreeNode> getDeckOptionDue(Context context, long dConfId, boolean recur) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6915cca49db1e5573bfe5dee6417df1c744ad4d"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwODU5NQ==", "bodyText": "Can we return early if we don't have the intended extra.", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446708595", "createdAt": "2020-06-28T22:54:40Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -31,67 +31,78 @@\n import com.ichi2.anki.IntentHandler;\n import com.ichi2.anki.NotificationChannels;\n import com.ichi2.anki.R;\n+import com.ichi2.libanki.Collection;\n+import com.ichi2.libanki.sched.AbstractSched;\n import com.ichi2.libanki.sched.Sched;\n+import com.ichi2.utils.JSONObject;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n \n public class ReminderService extends BroadcastReceiver {\n \n+    public static final String EXTRA_DECK_OPTION_ID = \"EXTRA_DECK_OPTION_ID\";\n     public static final String EXTRA_DECK_ID = \"EXTRA_DECK_ID\";\n \n     @Override\n     public void onReceive(Context context, Intent intent) {\n \n-        final long deckId = intent.getLongExtra(EXTRA_DECK_ID, 0);\n+        final long dConfId = intent.getLongExtra(EXTRA_DECK_OPTION_ID, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6915cca49db1e5573bfe5dee6417df1c744ad4d"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e6915cca49db1e5573bfe5dee6417df1c744ad4d", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/e6915cca49db1e5573bfe5dee6417df1c744ad4d", "committedDate": "2020-06-28T22:26:12Z", "message": "NF: one intent by deck option\n\nWe still use deck intent to let the user decide which deck to\nreview. However, the remainder receive a deck option instead of a\ndeck, so that it does all work simultaneously for each deck with the\nsame deck option\n\nTODO: do a single reminder if multiple elements have same hours"}, "afterCommit": {"oid": "fffaec6685c55b56100b766dbc0ee9d9921adfd5", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/fffaec6685c55b56100b766dbc0ee9d9921adfd5", "committedDate": "2020-06-29T00:05:34Z", "message": "early return if no extra EXTRA_DECK_OPTION_ID"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MTA5MTY3", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#pullrequestreview-439109167", "createdAt": "2020-06-29T12:50:41Z", "commit": {"oid": "fffaec6685c55b56100b766dbc0ee9d9921adfd5"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMjo1MDo0MlrOGqPZjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMjo1NTozNlrOGqPl2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0NTY3OA==", "bodyText": "Can be inverted to reduce nesting", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446945678", "createdAt": "2020-06-29T12:50:42Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -31,67 +32,103 @@\n import com.ichi2.anki.IntentHandler;\n import com.ichi2.anki.NotificationChannels;\n import com.ichi2.anki.R;\n+import com.ichi2.libanki.Collection;\n+import com.ichi2.libanki.sched.AbstractSched;\n import com.ichi2.libanki.sched.Sched;\n+import com.ichi2.utils.JSONObject;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n \n public class ReminderService extends BroadcastReceiver {\n \n+    public static final String EXTRA_DECK_OPTION_ID = \"EXTRA_DECK_OPTION_ID\";\n     public static final String EXTRA_DECK_ID = \"EXTRA_DECK_ID\";\n \n-    @Override\n-    public void onReceive(Context context, Intent intent) {\n \n+    /** Cancelling all deck reminder. We used to use them, now we have deck option reminders. */\n+    private void cancelDeckReminder(Context context, Intent intent) {\n+        // 0 Is not a valid deck id.\n         final long deckId = intent.getLongExtra(EXTRA_DECK_ID, 0);\n-\n-        if (CollectionHelper.getInstance().getCol(context).getDecks().get(deckId, false) == null) {\n+        if (deckId != 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fffaec6685c55b56100b766dbc0ee9d9921adfd5"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0Nzg4NA==", "bodyText": "Could you add a comment to note that this also explicitly excludes dynamic decks", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446947884", "createdAt": "2020-06-29T12:54:07Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -103,20 +140,25 @@ public static Intent getReviewDeckIntent(@NonNull Context context, long deckId)\n \n \n     // getDeckDue information, will recur one time to workaround collection close if recur is true\n-    private Sched.DeckDueTreeNode getDeckDue(Context context, long deckId, boolean recur) {\n+    @Nullable\n+    private List<Sched.DeckDueTreeNode> getDeckOptionDue(Context context, long dConfId, boolean recur) {\n \n+        Collection col = CollectionHelper.getInstance().getCol(context);\n         // Avoid crashes if the deck is deleted while we are working\n-        if (CollectionHelper.getInstance().getCol(context).getDecks().get(deckId, false) == null) {\n-            Timber.d(\"Deck %s deleted while ReminderService was working. Ignoring\", deckId);\n+        if (col.getDecks().getConf(dConfId) == null) {\n+            Timber.d(\"Deck option %s deleted while ReminderService was working. Ignoring\", dConfId);\n             return null;\n         }\n \n+        List<Sched.DeckDueTreeNode> decks = new ArrayList<>();\n         try {\n             for (Sched.DeckDueTreeNode node : CollectionHelper.getInstance().getCol(context).getSched().deckDueTree()) {\n-                if (node.getDid() == deckId) {\n-                    return node;\n+                JSONObject deck = col.getDecks().get(node.getDid(), false);\n+                if (deck != null && deck.optLong(\"conf\") == dConfId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fffaec6685c55b56100b766dbc0ee9d9921adfd5"}, "originalPosition": 167}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0ODE4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Avoid crashes if the deck is deleted while we are working\n          \n          \n            \n                    // Avoid crashes if the options group is deleted while we are working", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446948189", "createdAt": "2020-06-29T12:54:37Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -103,20 +140,25 @@ public static Intent getReviewDeckIntent(@NonNull Context context, long deckId)\n \n \n     // getDeckDue information, will recur one time to workaround collection close if recur is true\n-    private Sched.DeckDueTreeNode getDeckDue(Context context, long deckId, boolean recur) {\n+    @Nullable\n+    private List<Sched.DeckDueTreeNode> getDeckOptionDue(Context context, long dConfId, boolean recur) {\n \n+        Collection col = CollectionHelper.getInstance().getCol(context);\n         // Avoid crashes if the deck is deleted while we are working", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fffaec6685c55b56100b766dbc0ee9d9921adfd5"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0ODQzMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // getDeckDue information, will recur one time to workaround collection close if recur is true\n          \n          \n            \n                // getDeckOptionDue information, will recur one time to workaround collection close if recur is true", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446948432", "createdAt": "2020-06-29T12:55:00Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -103,20 +140,25 @@ public static Intent getReviewDeckIntent(@NonNull Context context, long deckId)\n \n \n     // getDeckDue information, will recur one time to workaround collection close if recur is true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fffaec6685c55b56100b766dbc0ee9d9921adfd5"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0ODgyNw==", "bodyText": "Looking at this again, I presume we'd want to cancel the alarm if it's invalid", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446948827", "createdAt": "2020-06-29T12:55:36Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -31,67 +31,78 @@\n import com.ichi2.anki.IntentHandler;\n import com.ichi2.anki.NotificationChannels;\n import com.ichi2.anki.R;\n+import com.ichi2.libanki.Collection;\n+import com.ichi2.libanki.sched.AbstractSched;\n import com.ichi2.libanki.sched.Sched;\n+import com.ichi2.utils.JSONObject;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n \n public class ReminderService extends BroadcastReceiver {\n \n+    public static final String EXTRA_DECK_OPTION_ID = \"EXTRA_DECK_OPTION_ID\";\n     public static final String EXTRA_DECK_ID = \"EXTRA_DECK_ID\";\n \n     @Override\n     public void onReceive(Context context, Intent intent) {\n \n-        final long deckId = intent.getLongExtra(EXTRA_DECK_ID, 0);\n+        final long dConfId = intent.getLongExtra(EXTRA_DECK_OPTION_ID, 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwODU5NQ=="}, "originalCommit": {"oid": "e6915cca49db1e5573bfe5dee6417df1c744ad4d"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bc68e6df17c96b2171abb3183365b951ec97e9b", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/6bc68e6df17c96b2171abb3183365b951ec97e9b", "committedDate": "2020-06-29T15:12:50Z", "message": "NF: one intent by deck option\n\nWe still use deck intent to let the user decide which deck to\nreview. However, the remainder receive a deck option instead of a\ndeck, so that it does all work simultaneously for each deck with the\nsame deck option\n\nTODO: do a single reminder if multiple elements have same hours"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc22ccff577b5527fec45001c3d855f53b19cdc8", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/fc22ccff577b5527fec45001c3d855f53b19cdc8", "committedDate": "2020-06-29T15:12:50Z", "message": "NF: exit early from reminder if notifications not enabled"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0dafa1ad2019a246512b30062db054bcc80c9c6", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/a0dafa1ad2019a246512b30062db054bcc80c9c6", "committedDate": "2020-06-29T15:12:50Z", "message": "Cancel deck reminder\n\nSince we don't want to deal with them anymore, let us clean the\nreminders and ensure they are removed from the system"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7485b9353628c8546f51e1be93f848fa634e95a0", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/7485b9353628c8546f51e1be93f848fa634e95a0", "committedDate": "2020-06-29T15:12:50Z", "message": "early return if no extra EXTRA_DECK_OPTION_ID"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fffaec6685c55b56100b766dbc0ee9d9921adfd5", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/fffaec6685c55b56100b766dbc0ee9d9921adfd5", "committedDate": "2020-06-29T00:05:34Z", "message": "early return if no extra EXTRA_DECK_OPTION_ID"}, "afterCommit": {"oid": "7485b9353628c8546f51e1be93f848fa634e95a0", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/7485b9353628c8546f51e1be93f848fa634e95a0", "committedDate": "2020-06-29T15:12:50Z", "message": "early return if no extra EXTRA_DECK_OPTION_ID"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MzQ2NjM1", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#pullrequestreview-439346635", "createdAt": "2020-06-29T17:16:35Z", "commit": {"oid": "7485b9353628c8546f51e1be93f848fa634e95a0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MzgwMDg2", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#pullrequestreview-439380086", "createdAt": "2020-06-29T18:03:24Z", "commit": {"oid": "7485b9353628c8546f51e1be93f848fa634e95a0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3026, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}