{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MjQ3Njk5", "number": 6893, "title": "NF: Add test for card generation", "bodyText": "I'm adding tests related to change in anki 2.1.28. This port succesfull test I created in ankitects/anki#733\nIt's only \"assume\" because I've not yet ported those change. I don't speak rust well enough to know how it is implemented and whether Damien found an easier way to code it than just checking manually whether a field value is used in the process.", "createdAt": "2020-08-15T02:23:32Z", "url": "https://github.com/ankidroid/Anki-Android/pull/6893", "merged": true, "mergeCommit": {"oid": "e90cc0371cb112561545befb2da7f925bad78871"}, "closed": true, "closedAt": "2020-08-15T22:36:56Z", "author": {"login": "Arthur-Milchior"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc_P7tFAFqTQ2ODAxNzk2Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_QKv-AFqTQ2ODAxODg4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDE3OTYz", "url": "https://github.com/ankidroid/Anki-Android/pull/6893#pullrequestreview-468017963", "createdAt": "2020-08-15T21:12:26Z", "commit": {"oid": "e68a451067f536302f57e0b66fab4e85d1f3da84"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQyMToxMjoyNlrOHBNqMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQyMToxMjoyNlrOHBNqMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTAzNDQxOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private void  assert_ord(Note note, Integer[] ords) {\n          \n          \n            \n                private void  assertNoteContainsCardOrdinals(Note note, Integer[] ords) {\n          \n      \n    \n    \n  \n\nChanges the really cryptic python-y name to something that means what it does so I don't have to read the method every time", "url": "https://github.com/ankidroid/Anki-Android/pull/6893#discussion_r471034418", "createdAt": "2020-08-15T21:12:26Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/test/java/com/ichi2/libanki/CardTest.java", "diffHunk": "@@ -114,4 +119,121 @@ public void test_gendeck() {\n         note.flush();\n         assertEquals(newId, note.cards().get(3).getDid());\n     }\n+\n+    @Test\n+    public void test_gen_or() throws ConfirmModSchemaException {\n+        Collection col = getCol();\n+        Models models = col.getModels();\n+        Model model = models.byName(\"Basic\");\n+        JSONArray flds = model.getJSONArray(\"flds\");\n+        models.renameField(model, flds.getJSONObject(0), \"A\");\n+        models.renameField(model, flds.getJSONObject(1), \"B\");\n+        JSONObject fld2 = models.newField(\"C\");\n+        fld2.put(\"ord\", null);\n+        models.addField(model, fld2);\n+\n+        JSONArray tmpls = model.getJSONArray(\"tmpls\");\n+        tmpls.getJSONObject(0).put(\"qfmt\", \"{{A}}{{B}}{{C}}\");\n+        // ensure first card is always generated,\n+        // because at last one card is generated\n+        JSONObject tmpl = models.newTemplate(\"AND_OR\");\n+        tmpl.put(\"qfmt\", \"        {{A}}    {{#B}}        {{#C}}            {{B}}        {{/C}}    {{/B}}\");\n+        models.addTemplate(model, tmpl);\n+\n+        models.save(model);\n+        models.setCurrent(model);\n+\n+        Note note = col.newNote();\n+        note.setItem(\"A\", \"foo\");\n+        col.addNote(note);\n+        assert_ord(note, new Integer[]{0, 1});\n+\n+        note = col.newNote();\n+        note.setItem(\"B\", \"foo\");\n+        note.setItem(\"C\", \"foo\");\n+        col.addNote(note);\n+        assert_ord(note, new Integer[]{0, 1});\n+\n+        note = col.newNote();\n+        note.setItem(\"B\", \"foo\");\n+        col.addNote(note);\n+        assert_ord(note, new Integer[]{0});\n+\n+        note = col.newNote();\n+        note.setItem(\"C\", \"foo\");\n+        col.addNote(note);\n+        assert_ord(note, new Integer[]{0});\n+\n+        note = col.newNote();\n+        note.setItem(\"A\", \"foo\");\n+        note.setItem(\"B\", \"foo\");\n+        note.setItem(\"C\", \"foo\");\n+        col.addNote(note);\n+        assert_ord(note, new Integer[]{0, 1});\n+\n+        note = col.newNote();\n+        col.addNote(note);\n+        assert_ord(note, new Integer[]{0});\n+        // First card is generated if no other card\n+    }\n+\n+    @Test\n+    public void test_gen_not() throws ConfirmModSchemaException {\n+        Collection col = getCol();\n+        Models models = col.getModels();\n+        Model model = models.byName(\"Basic\");\n+        JSONArray flds = model.getJSONArray(\"flds\");\n+        JSONArray tmpls = model.getJSONArray(\"tmpls\");\n+\n+        models.renameField(model, flds.getJSONObject(0), \"First\");\n+        models.renameField(model, flds.getJSONObject(1), \"Front\");\n+        JSONObject fld2 = models.newField(\"AddIfEmpty\");\n+        fld2.put(\"name\", \"AddIfEmpty\");\n+        models.addField(model, fld2);\n+    \n+        // ensure first card is always generated,\n+        // because at last one card is generated\n+        tmpls.getJSONObject(0).put(\"qfmt\", \"{{AddIfEmpty}}{{Front}}{{First}}\");\n+        JSONObject tmpl = models.newTemplate(\"NOT\");\n+        tmpl.put(\"qfmt\", \"    {{^AddIfEmpty}}        {{Front}}    {{/AddIfEmpty}}    \");\n+    \n+        models.addTemplate(model, tmpl);\n+    \n+        models.save(model);\n+        models.setCurrent(model);\n+    \n+        Note note = col.newNote();\n+        note.setItem(\"First\", \"foo\");\n+        note.setItem(\"AddIfEmpty\", \"foo\");\n+        note.setItem(\"Front\", \"foo\");\n+        col.addNote(note);\n+        assert_ord(note, new Integer[]{0});\n+    \n+        note = col.newNote();\n+        note.setItem(\"First\", \"foo\");\n+        note.setItem(\"AddIfEmpty\", \"foo\");\n+        col.addNote(note);\n+        assert_ord(note, new Integer[]{0});\n+    \n+        note = col.newNote();\n+        note.setItem(\"First\", \"foo\"); // ensure first note generated\n+        col.addNote(note);\n+        assert_ord(note, new Integer[]{0});\n+    \n+        note = col.newNote();\n+        note.setItem(\"First\", \"foo\");\n+        note.setItem(\"Front\", \"foo\");\n+        col.addNote(note);\n+        assert_ord(note, new Integer[]{0, 1});\n+    }\n+\n+    private void  assert_ord(Note note, Integer[] ords) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e68a451067f536302f57e0b66fab4e85d1f3da84"}, "originalPosition": 134}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b487553af9e00742e9f478af97b16fb7fecb992", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/6b487553af9e00742e9f478af97b16fb7fecb992", "committedDate": "2020-08-15T21:26:35Z", "message": "NF: Add test for card generation\n\nThose are ported from https://github.com/ankitects/anki/pull/733"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e68a451067f536302f57e0b66fab4e85d1f3da84", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/e68a451067f536302f57e0b66fab4e85d1f3da84", "committedDate": "2020-08-15T02:23:03Z", "message": "NF: Add test for card generation\n\nThose are ported from https://github.com/ankitects/anki/pull/733"}, "afterCommit": {"oid": "6b487553af9e00742e9f478af97b16fb7fecb992", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/6b487553af9e00742e9f478af97b16fb7fecb992", "committedDate": "2020-08-15T21:26:35Z", "message": "NF: Add test for card generation\n\nThose are ported from https://github.com/ankitects/anki/pull/733"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDE4ODg4", "url": "https://github.com/ankidroid/Anki-Android/pull/6893#pullrequestreview-468018888", "createdAt": "2020-08-15T21:33:32Z", "commit": {"oid": "6b487553af9e00742e9f478af97b16fb7fecb992"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2927, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}