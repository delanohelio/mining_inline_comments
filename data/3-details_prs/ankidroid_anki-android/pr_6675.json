{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MDU2ODM1", "number": 6675, "title": "Harden ReminderService response to Collection disappearing", "bodyText": "Pull Request template\nPurpose / Description\nThe ReminderService was a bit fragile with regard to collections disappearing from underneath it, but for users that are set to synchronize collection at startup, this would happen quite a bit as the end of the sync closes the collection but the ReminderService may still be working.\nSo this PR probes the ReminderService to expose the poor null handling, then hardens it against that case\nFixes\nFixes #6666\nApproach\nMost of this PR is test code actually. The actual functional change is pretty small.\n\nRe-factor our test suite in the area of null collection handling. Testing it was onerous before. It's easy now.\nAdd a test for ReminderService, and make sure a null collection is provided - this causes a crash\nFix up ReminderService, notifications are still present but now it no longer crashes\n\nHow Has This Been Tested?\nThis is a race condition in essence so it is hard to test but with the above procedure I was able to create test conditions that show the problem every time.\nLearning\nWhen you do Robolectric tests and you want to check the results of system activity (like \"hey system, how many notifications do I have?\" or \"did that Toast post correctly?\") You don't just new the Robolectric \"shadow\" objects that can answer your question.\nYou have to shadowOf(SystemStateManagerObject);  (e.g. \"NotificationManager)).\nThen you can say for instance ShadowNotificationManager.getAllNotifications() or whatever. If you just new the objects you are interrogating an empty object that is not really shadowing anything so you get the wrong answers.\nChecklist\nPlease, go through these checks before submitting the PR.\n\n You have not changed whitespace unnecessarily (it makes diffs hard to read)\n You have a descriptive commit message with a short title (first line, max 50 chars).\n Your code follows the style of the project (e.g. never omit braces in if statements)\n You have commented your code, particularly in hard-to-understand areas\n You have performed a self-review of your own code", "createdAt": "2020-07-14T18:59:05Z", "url": "https://github.com/ankidroid/Anki-Android/pull/6675", "merged": true, "mergeCommit": {"oid": "9f775ad568a60f1f191af98bbf6257480db1f034"}, "closed": true, "closedAt": "2020-07-14T21:03:59Z", "author": {"login": "mikehardy"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc06oT0AH2gAyNDQ5MDU2ODM1OjczMmRlYWMxNGNhNmRjZGNkNWVkNTI2ZWZjZDVmYTM5Y2RhOTcwMzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc07jxegFqTQ0ODQxNzY5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "732deac14ca6dcdcd5ed526efcd5fa39cda97031", "author": {"user": {"login": "mikehardy", "name": "Mike Hardy"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/732deac14ca6dcdcd5ed526efcd5fa39cda97031", "committedDate": "2020-07-14T18:48:40Z", "message": "NF: CollectionHelper override for easier null testing\n\nThis is a much-improved way than previous attempt at testing how\nobjects handle null collections"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d5253dc2019a8a309f4442cfc85572cd50cf697", "author": {"user": {"login": "mikehardy", "name": "Mike Hardy"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/8d5253dc2019a8a309f4442cfc85572cd50cf697", "committedDate": "2020-07-14T18:49:06Z", "message": "NF: CardBrowserTest use parent class for note addition\n\nNo need to reinvent the wheel in the sub-class test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a59297baffb3bd42b55a49b31f2724af313bb539", "author": {"user": {"login": "mikehardy", "name": "Mike Hardy"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/a59297baffb3bd42b55a49b31f2724af313bb539", "committedDate": "2020-07-14T18:50:04Z", "message": "NF: test that demonstrates issue #6666 with null collection\n\nAlso verifies a fair bit of reminder functionality, which is a nice add"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MzkyMDc5", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#pullrequestreview-448392079", "createdAt": "2020-07-14T19:15:09Z", "commit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxNToxMFrOGxhqTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxNToxMFrOGxhqTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4NDkxMQ==", "bodyText": "This is the actual crash fix", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454584911", "createdAt": "2020-07-14T19:15:10Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -70,10 +70,17 @@ public void onReceive(Context context, Intent intent) {\n         // 0 is not a valid dconf id.\n         final long dConfId = intent.getLongExtra(EXTRA_DECK_OPTION_ID, 0);\n         if (dConfId == 0) {\n+            Timber.w(\"onReceive - dConfId 0, returning\");\n+            return;\n+        }\n+\n+        Collection col = CollectionHelper.getInstance().getCol(context);\n+        if (null == col || !CollectionHelper.getInstance().colIsOpen()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MzkyNTMx", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#pullrequestreview-448392531", "createdAt": "2020-07-14T19:15:49Z", "commit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxNTo0OVrOGxhr1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxNTo0OVrOGxhr1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4NTMwMg==", "bodyText": "this method has pokemon handling, nothing will come out except maybe a null return", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454585302", "createdAt": "2020-07-14T19:15:49Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -88,11 +95,13 @@ public void onReceive(Context context, Intent intent) {\n \n         final NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);\n         if (!notificationManager.areNotificationsEnabled()) {\n+            Timber.v(\"onReceive - notifications disabled, returning\");\n             return;\n         }\n-        List<AbstractSched.DeckDueTreeNode> decksDue = getDeckOptionDue(context, dConfId, true);\n+        List<AbstractSched.DeckDueTreeNode> decksDue = getDeckOptionDue(col, dConfId, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MzkyODI0", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#pullrequestreview-448392824", "createdAt": "2020-07-14T19:16:15Z", "commit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxNjoxNVrOGxhs1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxNjoxNVrOGxhs1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4NTU1OA==", "bodyText": "turns out we can avoid accessing collection here entirely, the deck due node has the name", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454585558", "createdAt": "2020-07-14T19:16:15Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -114,7 +124,7 @@ public void onReceive(Context context, Intent intent) {\n                         .setContentText(context.getResources().getQuantityString(\n                                 R.plurals.reminder_text,\n                                 total,\n-                                CollectionHelper.getInstance().getCol(context).getDecks().name(deckId),\n+                                deckDue.getFullDeckName(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MzkzNTg5", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#pullrequestreview-448393589", "createdAt": "2020-07-14T19:17:26Z", "commit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxNzoyNlrOGxhveA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxNzoyNlrOGxhveA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4NjIzMg==", "bodyText": "I don't have the CollectionHelper here so I can't ask isClosed, however the db gets nulled on close, so this check should be equivalent and the col.getDecks should succeed", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454586232", "createdAt": "2020-07-14T19:17:26Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -140,20 +151,19 @@ public static Intent getReviewDeckIntent(@NonNull Context context, long deckId)\n \n     // getDeckOptionDue information, will recur one time to workaround collection close if recur is true\n     @Nullable\n-    private List<AbstractSched.DeckDueTreeNode> getDeckOptionDue(Context context, long dConfId, boolean recur) {\n+    private List<AbstractSched.DeckDueTreeNode> getDeckOptionDue(Collection col, long dConfId, boolean recur) {\n \n-        Collection col = CollectionHelper.getInstance().getCol(context);\n         // Avoid crashes if the deck option group is deleted while we\n         // are working\n-        if (col.getDecks().getConf(dConfId) == null) {\n-            Timber.d(\"Deck option %s deleted while ReminderService was working. Ignoring\", dConfId);\n+        if (col.getDb() != null && col.getDecks().getConf(dConfId) == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 86}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4Mzg3OTIx", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#pullrequestreview-448387921", "createdAt": "2020-07-14T19:09:04Z", "commit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTowOTowNFrOGxhdcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxNjo0MlrOGxhtyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4MTYxNw==", "bodyText": "I believe getCol can throw due to permissions exceptions", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454581617", "createdAt": "2020-07-14T19:09:04Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -70,10 +70,17 @@ public void onReceive(Context context, Intent intent) {\n         // 0 is not a valid dconf id.\n         final long dConfId = intent.getLongExtra(EXTRA_DECK_OPTION_ID, 0);\n         if (dConfId == 0) {\n+            Timber.w(\"onReceive - dConfId 0, returning\");\n+            return;\n+        }\n+\n+        Collection col = CollectionHelper.getInstance().getCol(context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4MjIzNQ==", "bodyText": "Nit: consolidate .getInstance to a variable", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454582235", "createdAt": "2020-07-14T19:10:10Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -70,10 +70,17 @@ public void onReceive(Context context, Intent intent) {\n         // 0 is not a valid dconf id.\n         final long dConfId = intent.getLongExtra(EXTRA_DECK_OPTION_ID, 0);\n         if (dConfId == 0) {\n+            Timber.w(\"onReceive - dConfId 0, returning\");\n+            return;\n+        }\n+\n+        Collection col = CollectionHelper.getInstance().getCol(context);\n+        if (null == col || !CollectionHelper.getInstance().colIsOpen()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4MzMyNg==", "bodyText": "Note: Don't think this matters as we only list the top level", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454583326", "createdAt": "2020-07-14T19:12:11Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -114,7 +124,7 @@ public void onReceive(Context context, Intent intent) {\n                         .setContentText(context.getResources().getQuantityString(\n                                 R.plurals.reminder_text,\n                                 total,\n-                                CollectionHelper.getInstance().getCol(context).getDecks().name(deckId),\n+                                deckDue.getFullDeckName(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4Mzk1Nw==", "bodyText": "If the database is null, then this case is not hit. Should this be an == null OR", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454583957", "createdAt": "2020-07-14T19:13:26Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -140,20 +151,19 @@ public static Intent getReviewDeckIntent(@NonNull Context context, long deckId)\n \n     // getDeckOptionDue information, will recur one time to workaround collection close if recur is true\n     @Nullable\n-    private List<AbstractSched.DeckDueTreeNode> getDeckOptionDue(Context context, long dConfId, boolean recur) {\n+    private List<AbstractSched.DeckDueTreeNode> getDeckOptionDue(Collection col, long dConfId, boolean recur) {\n \n-        Collection col = CollectionHelper.getInstance().getCol(context);\n         // Avoid crashes if the deck option group is deleted while we\n         // are working\n-        if (col.getDecks().getConf(dConfId) == null) {\n-            Timber.d(\"Deck option %s deleted while ReminderService was working. Ignoring\", dConfId);\n+        if (col.getDb() != null && col.getDecks().getConf(dConfId) == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4NTgwMg==", "bodyText": "Just for fun:\nI think this could be isCollectionWithSize or isEmptyCollection or is(empty())", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454585802", "createdAt": "2020-07-14T19:16:42Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/services/ReminderServiceTest.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.ichi2.anki.services;\n+\n+import android.app.NotificationManager;\n+import android.content.Context;\n+import android.content.Intent;\n+\n+import com.ichi2.anki.RobolectricTest;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.robolectric.shadows.ShadowNotificationManager;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import static com.ichi2.anki.services.ReminderService.EXTRA_DECK_ID;\n+import static com.ichi2.anki.services.ReminderService.EXTRA_DECK_OPTION_ID;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.robolectric.Shadows.shadowOf;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class ReminderServiceTest extends RobolectricTest {\n+\n+    @Test\n+    public void testReminderServiceNothingDue() {\n+        buildDefaultDeckReminders();\n+        assertThat(\"No notifications exist\", getNotificationManagerShadow().size() == 0);\n+    }\n+\n+\n+    @Test\n+    public void testReminderServiceReviewsDue() {\n+        addNoteUsingBasicModel(\"test front\", \"test back\");\n+        assertThat(\"No notifications exist\", getNotificationManagerShadow().size() == 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6141f19b7d22ec7c88976b58d85e7aa875af2c4", "author": {"user": {"login": "mikehardy", "name": "Mike Hardy"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/a6141f19b7d22ec7c88976b58d85e7aa875af2c4", "committedDate": "2020-07-14T19:36:54Z", "message": "Handle null collections in ReminderService\n\nin general much more careful access of the collection, and less fetching\nas well\n\nFixes #6666"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5", "author": {"user": {"login": "mikehardy", "name": "Mike Hardy"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/dd71cc28e0285c1452ae4472fd769a024c78f7a5", "committedDate": "2020-07-14T18:51:09Z", "message": "Handle null collections in ReminderService\n\nin general much more careful access of the collection, and less fetching\nas well\n\nFixes #6666"}, "afterCommit": {"oid": "a6141f19b7d22ec7c88976b58d85e7aa875af2c4", "author": {"user": {"login": "mikehardy", "name": "Mike Hardy"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/a6141f19b7d22ec7c88976b58d85e7aa875af2c4", "committedDate": "2020-07-14T19:36:54Z", "message": "Handle null collections in ReminderService\n\nin general much more careful access of the collection, and less fetching\nas well\n\nFixes #6666"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NDE3Njk2", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#pullrequestreview-448417696", "createdAt": "2020-07-14T19:53:37Z", "commit": {"oid": "a6141f19b7d22ec7c88976b58d85e7aa875af2c4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3114, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}