{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0MjA4OTI0", "number": 6462, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMjozMDozNFrOEGk9Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMjo0Mjo1NlrOEGlEtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzMyMzc1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Statistics.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMjozMDozNFrOGldfJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wN1QyMjo0NToxMFrOIxz1ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkzMzYwNg==", "bodyText": "Is there a better way to do this? A static, mutable reference to Android internals seems like it will get nasty.", "url": "https://github.com/ankidroid/Anki-Android/pull/6462#discussion_r441933606", "createdAt": "2020-06-18T02:30:34Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Statistics.java", "diffHunk": "@@ -256,85 +261,55 @@ public AnkiStatsTaskHandler getTaskHandler(){\n     }\n \n \n-    public ViewPager getViewPager(){\n+    public ViewPager2 getViewPager(){\n         return mViewPager;\n     }\n \n-\n-    public SectionsPagerAdapter getSectionsPagerAdapter() {\n-        return mSectionsPagerAdapter;\n+    public TabLayout getSlidingTabLayout() {\n+        return mSlidingTabLayout;\n     }\n \n     private long getDeckId() { return mDeckId; }\n \n-\n     /**\n-     * A {@link FragmentPagerAdapter} that returns a fragment corresponding to\n-     * one of the sections/tabs/pages.\n+     * A {@link androidx.viewpager2.adapter.FragmentStateAdapter} that returns a fragment corresponding to\n+     * one of the tabs.\n      */\n-    public class SectionsPagerAdapter extends FragmentPagerAdapter {\n+    public static class StatsPagerAdapter extends FragmentStateAdapter {\n \n-        public SectionsPagerAdapter(FragmentManager fm) {\n-            super(fm, BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT);\n+        private StatsPagerAdapter(@NonNull FragmentActivity fragmentActivity) {\n+            super(fragmentActivity);\n         }\n \n-        //this is called when mSectionsPagerAdapter.notifyDataSetChanged() is called, so checkAndUpdate() here\n-        //works best for updating all tabs\n+        @NonNull\n         @Override\n-        public int getItemPosition(Object object) {\n-            if (object instanceof StatisticFragment) {\n-                ((StatisticFragment) object).checkAndUpdate();\n-            }\n-            //don't return POSITION_NONE, avoid fragment recreation.\n-            return super.getItemPosition(object);\n-        }\n-\n-        @Override\n-        public Fragment getItem(int position) {\n-            Fragment item = StatisticFragment.newInstance(position);\n-            ((StatisticFragment) item).checkAndUpdate();\n+        public Fragment createFragment(int position) {\n+            StatisticFragment item = StatisticFragment.newInstance(position);\n+            item.checkAndUpdate();\n             return item;\n         }\n \n         @Override\n-        public int getCount() {\n+        public int getItemCount() {\n             return 9;\n         }\n-\n-        @Override\n-        public CharSequence getPageTitle(int position) {\n-            Locale l = Locale.getDefault();\n-\n-            switch (position) {\n-                case TODAYS_STATS_TAB_POSITION:\n-                    return getString(R.string.stats_overview).toUpperCase(l);\n-                case FORECAST_TAB_POSITION:\n-                    return getString(R.string.stats_forecast).toUpperCase(l);\n-                case REVIEW_COUNT_TAB_POSITION:\n-                    return getString(R.string.stats_review_count).toUpperCase(l);\n-                case REVIEW_TIME_TAB_POSITION:\n-                    return getString(R.string.stats_review_time).toUpperCase(l);\n-                case INTERVALS_TAB_POSITION:\n-                    return getString(R.string.stats_review_intervals).toUpperCase(l);\n-                case HOURLY_BREAKDOWN_TAB_POSITION:\n-                    return getString(R.string.stats_breakdown).toUpperCase(l);\n-                case WEEKLY_BREAKDOWN_TAB_POSITION:\n-                    return getString(R.string.stats_weekly_breakdown).toUpperCase(l);\n-                case ANSWER_BUTTONS_TAB_POSITION:\n-                    return getString(R.string.stats_answer_buttons).toUpperCase(l);\n-                case CARDS_TYPES_TAB_POSITION:\n-                    return getString(R.string.stats_cards_types).toUpperCase(l);\n-            }\n-            return null;\n-        }\n     }\n \n     public static abstract class StatisticFragment extends Fragment {\n \n         //track current settings for each individual fragment\n         protected long mDeckId;\n-        protected ViewPager mActivityPager;\n-        protected SectionsPagerAdapter mActivitySectionPagerAdapter;\n+        protected AsyncTask mStatisticsTask;\n+        private ViewPager2 mActivityPager;\n+        private TabLayout mSlidingTabLayout;\n+        private TabLayoutMediator mTabLayoutMediator;\n+        private static ArrayList<StatisticFragment> sFragments = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41dd22cba80c487150c4e6d78279e1e6ddf90dd4"}, "originalPosition": 227}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTA4OTE4OA==", "bodyText": "Tracing through this code and its purpose, there was a question at the actual part where it did something saying \"hey, do we need these now that we don't have bitmaps anymore?\", and when I wholesale deleted all the code related to this, then tested it by changing the deck and timeframe I was calculating stats on, it was just fine - dynamically updated charts exactly as you'd expect.\nSo I purged it all.", "url": "https://github.com/ankidroid/Anki-Android/pull/6462#discussion_r589089188", "createdAt": "2021-03-07T21:14:31Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Statistics.java", "diffHunk": "@@ -256,85 +261,55 @@ public AnkiStatsTaskHandler getTaskHandler(){\n     }\n \n \n-    public ViewPager getViewPager(){\n+    public ViewPager2 getViewPager(){\n         return mViewPager;\n     }\n \n-\n-    public SectionsPagerAdapter getSectionsPagerAdapter() {\n-        return mSectionsPagerAdapter;\n+    public TabLayout getSlidingTabLayout() {\n+        return mSlidingTabLayout;\n     }\n \n     private long getDeckId() { return mDeckId; }\n \n-\n     /**\n-     * A {@link FragmentPagerAdapter} that returns a fragment corresponding to\n-     * one of the sections/tabs/pages.\n+     * A {@link androidx.viewpager2.adapter.FragmentStateAdapter} that returns a fragment corresponding to\n+     * one of the tabs.\n      */\n-    public class SectionsPagerAdapter extends FragmentPagerAdapter {\n+    public static class StatsPagerAdapter extends FragmentStateAdapter {\n \n-        public SectionsPagerAdapter(FragmentManager fm) {\n-            super(fm, BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT);\n+        private StatsPagerAdapter(@NonNull FragmentActivity fragmentActivity) {\n+            super(fragmentActivity);\n         }\n \n-        //this is called when mSectionsPagerAdapter.notifyDataSetChanged() is called, so checkAndUpdate() here\n-        //works best for updating all tabs\n+        @NonNull\n         @Override\n-        public int getItemPosition(Object object) {\n-            if (object instanceof StatisticFragment) {\n-                ((StatisticFragment) object).checkAndUpdate();\n-            }\n-            //don't return POSITION_NONE, avoid fragment recreation.\n-            return super.getItemPosition(object);\n-        }\n-\n-        @Override\n-        public Fragment getItem(int position) {\n-            Fragment item = StatisticFragment.newInstance(position);\n-            ((StatisticFragment) item).checkAndUpdate();\n+        public Fragment createFragment(int position) {\n+            StatisticFragment item = StatisticFragment.newInstance(position);\n+            item.checkAndUpdate();\n             return item;\n         }\n \n         @Override\n-        public int getCount() {\n+        public int getItemCount() {\n             return 9;\n         }\n-\n-        @Override\n-        public CharSequence getPageTitle(int position) {\n-            Locale l = Locale.getDefault();\n-\n-            switch (position) {\n-                case TODAYS_STATS_TAB_POSITION:\n-                    return getString(R.string.stats_overview).toUpperCase(l);\n-                case FORECAST_TAB_POSITION:\n-                    return getString(R.string.stats_forecast).toUpperCase(l);\n-                case REVIEW_COUNT_TAB_POSITION:\n-                    return getString(R.string.stats_review_count).toUpperCase(l);\n-                case REVIEW_TIME_TAB_POSITION:\n-                    return getString(R.string.stats_review_time).toUpperCase(l);\n-                case INTERVALS_TAB_POSITION:\n-                    return getString(R.string.stats_review_intervals).toUpperCase(l);\n-                case HOURLY_BREAKDOWN_TAB_POSITION:\n-                    return getString(R.string.stats_breakdown).toUpperCase(l);\n-                case WEEKLY_BREAKDOWN_TAB_POSITION:\n-                    return getString(R.string.stats_weekly_breakdown).toUpperCase(l);\n-                case ANSWER_BUTTONS_TAB_POSITION:\n-                    return getString(R.string.stats_answer_buttons).toUpperCase(l);\n-                case CARDS_TYPES_TAB_POSITION:\n-                    return getString(R.string.stats_cards_types).toUpperCase(l);\n-            }\n-            return null;\n-        }\n     }\n \n     public static abstract class StatisticFragment extends Fragment {\n \n         //track current settings for each individual fragment\n         protected long mDeckId;\n-        protected ViewPager mActivityPager;\n-        protected SectionsPagerAdapter mActivitySectionPagerAdapter;\n+        protected AsyncTask mStatisticsTask;\n+        private ViewPager2 mActivityPager;\n+        private TabLayout mSlidingTabLayout;\n+        private TabLayoutMediator mTabLayoutMediator;\n+        private static ArrayList<StatisticFragment> sFragments = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkzMzYwNg=="}, "originalCommit": {"oid": "41dd22cba80c487150c4e6d78279e1e6ddf90dd4"}, "originalPosition": 227}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTEwMDM5NA==", "bodyText": "Wait, the full purge failed in testing, however Today I Learned how to correctly add a data observer to ViewPager2 Adapters and I used that knowledge to implement it the correct way", "url": "https://github.com/ankidroid/Anki-Android/pull/6462#discussion_r589100394", "createdAt": "2021-03-07T22:45:10Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Statistics.java", "diffHunk": "@@ -256,85 +261,55 @@ public AnkiStatsTaskHandler getTaskHandler(){\n     }\n \n \n-    public ViewPager getViewPager(){\n+    public ViewPager2 getViewPager(){\n         return mViewPager;\n     }\n \n-\n-    public SectionsPagerAdapter getSectionsPagerAdapter() {\n-        return mSectionsPagerAdapter;\n+    public TabLayout getSlidingTabLayout() {\n+        return mSlidingTabLayout;\n     }\n \n     private long getDeckId() { return mDeckId; }\n \n-\n     /**\n-     * A {@link FragmentPagerAdapter} that returns a fragment corresponding to\n-     * one of the sections/tabs/pages.\n+     * A {@link androidx.viewpager2.adapter.FragmentStateAdapter} that returns a fragment corresponding to\n+     * one of the tabs.\n      */\n-    public class SectionsPagerAdapter extends FragmentPagerAdapter {\n+    public static class StatsPagerAdapter extends FragmentStateAdapter {\n \n-        public SectionsPagerAdapter(FragmentManager fm) {\n-            super(fm, BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT);\n+        private StatsPagerAdapter(@NonNull FragmentActivity fragmentActivity) {\n+            super(fragmentActivity);\n         }\n \n-        //this is called when mSectionsPagerAdapter.notifyDataSetChanged() is called, so checkAndUpdate() here\n-        //works best for updating all tabs\n+        @NonNull\n         @Override\n-        public int getItemPosition(Object object) {\n-            if (object instanceof StatisticFragment) {\n-                ((StatisticFragment) object).checkAndUpdate();\n-            }\n-            //don't return POSITION_NONE, avoid fragment recreation.\n-            return super.getItemPosition(object);\n-        }\n-\n-        @Override\n-        public Fragment getItem(int position) {\n-            Fragment item = StatisticFragment.newInstance(position);\n-            ((StatisticFragment) item).checkAndUpdate();\n+        public Fragment createFragment(int position) {\n+            StatisticFragment item = StatisticFragment.newInstance(position);\n+            item.checkAndUpdate();\n             return item;\n         }\n \n         @Override\n-        public int getCount() {\n+        public int getItemCount() {\n             return 9;\n         }\n-\n-        @Override\n-        public CharSequence getPageTitle(int position) {\n-            Locale l = Locale.getDefault();\n-\n-            switch (position) {\n-                case TODAYS_STATS_TAB_POSITION:\n-                    return getString(R.string.stats_overview).toUpperCase(l);\n-                case FORECAST_TAB_POSITION:\n-                    return getString(R.string.stats_forecast).toUpperCase(l);\n-                case REVIEW_COUNT_TAB_POSITION:\n-                    return getString(R.string.stats_review_count).toUpperCase(l);\n-                case REVIEW_TIME_TAB_POSITION:\n-                    return getString(R.string.stats_review_time).toUpperCase(l);\n-                case INTERVALS_TAB_POSITION:\n-                    return getString(R.string.stats_review_intervals).toUpperCase(l);\n-                case HOURLY_BREAKDOWN_TAB_POSITION:\n-                    return getString(R.string.stats_breakdown).toUpperCase(l);\n-                case WEEKLY_BREAKDOWN_TAB_POSITION:\n-                    return getString(R.string.stats_weekly_breakdown).toUpperCase(l);\n-                case ANSWER_BUTTONS_TAB_POSITION:\n-                    return getString(R.string.stats_answer_buttons).toUpperCase(l);\n-                case CARDS_TYPES_TAB_POSITION:\n-                    return getString(R.string.stats_cards_types).toUpperCase(l);\n-            }\n-            return null;\n-        }\n     }\n \n     public static abstract class StatisticFragment extends Fragment {\n \n         //track current settings for each individual fragment\n         protected long mDeckId;\n-        protected ViewPager mActivityPager;\n-        protected SectionsPagerAdapter mActivitySectionPagerAdapter;\n+        protected AsyncTask mStatisticsTask;\n+        private ViewPager2 mActivityPager;\n+        private TabLayout mSlidingTabLayout;\n+        private TabLayoutMediator mTabLayoutMediator;\n+        private static ArrayList<StatisticFragment> sFragments = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkzMzYwNg=="}, "originalCommit": {"oid": "41dd22cba80c487150c4e6d78279e1e6ddf90dd4"}, "originalPosition": 227}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzMyNjM5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Statistics.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMjozMjoxMlrOGldg1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wN1QyMDo0MDoyOVrOIxy6Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkzNDAzNg==", "bodyText": "Just to note: requireActivity() now exists if you can guarantee that the call will occur when the activity is valid.", "url": "https://github.com/ankidroid/Anki-Android/pull/6462#discussion_r441934036", "createdAt": "2020-06-18T02:32:12Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Statistics.java", "diffHunk": "@@ -465,37 +490,42 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,\n         }\n \n         private void createChart() {\n+            Statistics statisticsActivity = (Statistics) getActivity();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41dd22cba80c487150c4e6d78279e1e6ddf90dd4"}, "originalPosition": 353}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTA4NTIwNg==", "bodyText": "That's superior I think. I'm altering all of them to requireActivity", "url": "https://github.com/ankidroid/Anki-Android/pull/6462#discussion_r589085206", "createdAt": "2021-03-07T20:40:29Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Statistics.java", "diffHunk": "@@ -465,37 +490,42 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,\n         }\n \n         private void createChart() {\n+            Statistics statisticsActivity = (Statistics) getActivity();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkzNDAzNg=="}, "originalCommit": {"oid": "41dd22cba80c487150c4e6d78279e1e6ddf90dd4"}, "originalPosition": 353}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzMzNjc1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Statistics.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMjozODo1MFrOGldnQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wN1QyMDo1Mzo0NlrOIxzAOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkzNTY4MQ==", "bodyText": "This previously did not properly cancel the task (or the task did not handle cancellation). #6192\nStats for a big collection, exit, then change collection path -> crash.\nConfirming that nothing has changed yet (and if you know the cause, would save me a bit of time debugging).", "url": "https://github.com/ankidroid/Anki-Android/pull/6462#discussion_r441935681", "createdAt": "2020-06-18T02:38:50Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Statistics.java", "diffHunk": "@@ -363,26 +339,78 @@ public static StatisticFragment newInstance(int sectionNumber) {\n                     args = new Bundle();\n                     args.putInt(ARG_SECTION_NUMBER, sectionNumber);\n                     fragment.setArguments(args);\n-                    return (ChartFragment) fragment;\n+                    sFragments.add(fragment);\n+                    return fragment;\n                 case TODAYS_STATS_TAB_POSITION:\n                     fragment = new OverviewStatisticsFragment();\n                     args = new Bundle();\n                     args.putInt(ARG_SECTION_NUMBER, sectionNumber);\n                     fragment.setArguments(args);\n-                    return (OverviewStatisticsFragment) fragment;\n+                    sFragments.add(fragment);\n+                    return fragment;\n                 default:\n-                    return null;\n+                    throw new IllegalArgumentException(\"Unknown section number: \" + sectionNumber);\n             }\n         }\n \n         @Override\n         public void onResume() {\n-            super.onResume();\n             checkAndUpdate();\n+            super.onResume();\n+        }\n \n+        @Override\n+        public void onDestroy() {\n+            sFragments.remove(this);\n+            if (mStatisticsTask != null && !mStatisticsTask.isCancelled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41dd22cba80c487150c4e6d78279e1e6ddf90dd4"}, "originalPosition": 279}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTA4Njc3Ng==", "bodyText": "Nothing has been done here - if you don't have it peeled off to a separate issue, you could do so if you have a stack or similar. Seems like changing collection path is pretty rare so investing time there right now and complicating this PR for a fix (I can see it could be a problem...) doesn't seem like a good use of time, so I'm going to leave it at the \"nothing has been done here\" state", "url": "https://github.com/ankidroid/Anki-Android/pull/6462#discussion_r589086776", "createdAt": "2021-03-07T20:53:46Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Statistics.java", "diffHunk": "@@ -363,26 +339,78 @@ public static StatisticFragment newInstance(int sectionNumber) {\n                     args = new Bundle();\n                     args.putInt(ARG_SECTION_NUMBER, sectionNumber);\n                     fragment.setArguments(args);\n-                    return (ChartFragment) fragment;\n+                    sFragments.add(fragment);\n+                    return fragment;\n                 case TODAYS_STATS_TAB_POSITION:\n                     fragment = new OverviewStatisticsFragment();\n                     args = new Bundle();\n                     args.putInt(ARG_SECTION_NUMBER, sectionNumber);\n                     fragment.setArguments(args);\n-                    return (OverviewStatisticsFragment) fragment;\n+                    sFragments.add(fragment);\n+                    return fragment;\n                 default:\n-                    return null;\n+                    throw new IllegalArgumentException(\"Unknown section number: \" + sectionNumber);\n             }\n         }\n \n         @Override\n         public void onResume() {\n-            super.onResume();\n             checkAndUpdate();\n+            super.onResume();\n+        }\n \n+        @Override\n+        public void onDestroy() {\n+            sFragments.remove(this);\n+            if (mStatisticsTask != null && !mStatisticsTask.isCancelled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkzNTY4MQ=="}, "originalCommit": {"oid": "41dd22cba80c487150c4e6d78279e1e6ddf90dd4"}, "originalPosition": 279}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzM0MDM4OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Statistics.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMjo0MTowNlrOGldppA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wN1QyMDo1NzowNVrOIxzBlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkzNjI5Mg==", "bodyText": "Optional: significant duplicated logic here", "url": "https://github.com/ankidroid/Anki-Android/pull/6462#discussion_r441936292", "createdAt": "2020-06-18T02:41:06Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Statistics.java", "diffHunk": "@@ -363,26 +339,78 @@ public static StatisticFragment newInstance(int sectionNumber) {\n                     args = new Bundle();\n                     args.putInt(ARG_SECTION_NUMBER, sectionNumber);\n                     fragment.setArguments(args);\n-                    return (ChartFragment) fragment;\n+                    sFragments.add(fragment);\n+                    return fragment;\n                 case TODAYS_STATS_TAB_POSITION:\n                     fragment = new OverviewStatisticsFragment();\n                     args = new Bundle();\n                     args.putInt(ARG_SECTION_NUMBER, sectionNumber);\n                     fragment.setArguments(args);\n-                    return (OverviewStatisticsFragment) fragment;\n+                    sFragments.add(fragment);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41dd22cba80c487150c4e6d78279e1e6ddf90dd4"}, "originalPosition": 261}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTA4NzEyNg==", "bodyText": "obvious now that you point it out, teased out just the single line that changes in the cases, rest is common now", "url": "https://github.com/ankidroid/Anki-Android/pull/6462#discussion_r589087126", "createdAt": "2021-03-07T20:57:05Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Statistics.java", "diffHunk": "@@ -363,26 +339,78 @@ public static StatisticFragment newInstance(int sectionNumber) {\n                     args = new Bundle();\n                     args.putInt(ARG_SECTION_NUMBER, sectionNumber);\n                     fragment.setArguments(args);\n-                    return (ChartFragment) fragment;\n+                    sFragments.add(fragment);\n+                    return fragment;\n                 case TODAYS_STATS_TAB_POSITION:\n                     fragment = new OverviewStatisticsFragment();\n                     args = new Bundle();\n                     args.putInt(ARG_SECTION_NUMBER, sectionNumber);\n                     fragment.setArguments(args);\n-                    return (OverviewStatisticsFragment) fragment;\n+                    sFragments.add(fragment);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkzNjI5Mg=="}, "originalCommit": {"oid": "41dd22cba80c487150c4e6d78279e1e6ddf90dd4"}, "originalPosition": 261}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzM0MTkyOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Statistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMjo0MjowOFrOGldqog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMjo0MjowOFrOGldqog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkzNjU0Ng==", "bodyText": "CheckResult as well", "url": "https://github.com/ankidroid/Anki-Android/pull/6462#discussion_r441936546", "createdAt": "2020-06-18T02:42:08Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Statistics.java", "diffHunk": "@@ -347,8 +322,9 @@ public CharSequence getPageTitle(int position) {\n          * Returns a new instance of this fragment for the given section\n          * number.\n          */\n+        @NonNull", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41dd22cba80c487150c4e6d78279e1e6ddf90dd4"}, "originalPosition": 241}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzM0MzI3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Statistics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMjo0Mjo1NlrOGldreg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMjo0Mjo1NlrOGldreg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkzNjc2Mg==", "bodyText": "Nit: I believe these can be imported (as it was before this change)", "url": "https://github.com/ankidroid/Anki-Android/pull/6462#discussion_r441936762", "createdAt": "2020-06-18T02:42:56Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Statistics.java", "diffHunk": "@@ -256,85 +261,55 @@ public AnkiStatsTaskHandler getTaskHandler(){\n     }\n \n \n-    public ViewPager getViewPager(){\n+    public ViewPager2 getViewPager(){\n         return mViewPager;\n     }\n \n-\n-    public SectionsPagerAdapter getSectionsPagerAdapter() {\n-        return mSectionsPagerAdapter;\n+    public TabLayout getSlidingTabLayout() {\n+        return mSlidingTabLayout;\n     }\n \n     private long getDeckId() { return mDeckId; }\n \n-\n     /**\n-     * A {@link FragmentPagerAdapter} that returns a fragment corresponding to\n-     * one of the sections/tabs/pages.\n+     * A {@link androidx.viewpager2.adapter.FragmentStateAdapter} that returns a fragment corresponding to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41dd22cba80c487150c4e6d78279e1e6ddf90dd4"}, "originalPosition": 149}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 191, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}