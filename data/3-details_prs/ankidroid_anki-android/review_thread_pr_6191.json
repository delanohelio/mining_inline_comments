{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4ODEyMjIx", "number": 6191, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxMTo1MVrOD9BFrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxODoxNTo1MVrOD9GxKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MzA3NTY3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxMTo1MVrOGWT-sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxMTo1MVrOGWT-sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA0OTIwMg==", "bodyText": "use try with resources", "url": "https://github.com/ankidroid/Anki-Android/pull/6191#discussion_r426049202", "createdAt": "2020-05-15T21:11:51Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "diffHunk": "@@ -428,21 +430,68 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n                     try (FileChannel sourceChannel = new FileInputStream(sourceFile).getChannel();\n                          FileChannel destChannel = new FileOutputStream(destFile).getChannel()) {\n                         destChannel.transferFrom(sourceChannel, 0, sourceChannel.size());\n-                        UIUtils.showThemedToast(this, getString(R.string.background_image_applied), false);\n+\n+                        File newImage = compressedImage(destFile);\n+\n+                        if (newImage != null) {\n+                            UIUtils.showThemedToast(this, getString(R.string.background_image_applied), false);\n+                        } else {\n+                            UIUtils.showThemedToast(this, getString(R.string.error_selecting_image), false);\n+                        }\n                     }\n                 } finally {\n                     if (cursor != null) {\n                         cursor.close();\n                     }\n                 }\n             } else {\n+                backgroundImage.setChecked(false);\n                 UIUtils.showThemedToast(this, getString(R.string.no_image_selected), false);\n             }\n         } catch (OutOfMemoryError | Exception e) {\n             UIUtils.showThemedToast(this, getString(R.string.error_selecting_image, e.getLocalizedMessage()), false);\n         }\n     }\n \n+    private File compressedImage(File file) {\n+        try {\n+            BitmapFactory.Options bitmap = new BitmapFactory.Options();\n+            bitmap.inJustDecodeBounds = true;\n+            bitmap.inSampleSize = 6;\n+\n+            FileInputStream inputStream = new FileInputStream(file);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81bc40bf310ca4da971f25b2b017f0d7b8564bf8"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MzA3Njc3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxMjoyM1rOGWT_bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxMjoyM1rOGWT_bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA0OTM5MQ==", "bodyText": "Could we get a comment explaining the variable (what units?) Surely not pixels", "url": "https://github.com/ankidroid/Anki-Android/pull/6191#discussion_r426049391", "createdAt": "2020-05-15T21:12:23Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "diffHunk": "@@ -428,21 +430,68 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n                     try (FileChannel sourceChannel = new FileInputStream(sourceFile).getChannel();\n                          FileChannel destChannel = new FileOutputStream(destFile).getChannel()) {\n                         destChannel.transferFrom(sourceChannel, 0, sourceChannel.size());\n-                        UIUtils.showThemedToast(this, getString(R.string.background_image_applied), false);\n+\n+                        File newImage = compressedImage(destFile);\n+\n+                        if (newImage != null) {\n+                            UIUtils.showThemedToast(this, getString(R.string.background_image_applied), false);\n+                        } else {\n+                            UIUtils.showThemedToast(this, getString(R.string.error_selecting_image), false);\n+                        }\n                     }\n                 } finally {\n                     if (cursor != null) {\n                         cursor.close();\n                     }\n                 }\n             } else {\n+                backgroundImage.setChecked(false);\n                 UIUtils.showThemedToast(this, getString(R.string.no_image_selected), false);\n             }\n         } catch (OutOfMemoryError | Exception e) {\n             UIUtils.showThemedToast(this, getString(R.string.error_selecting_image, e.getLocalizedMessage()), false);\n         }\n     }\n \n+    private File compressedImage(File file) {\n+        try {\n+            BitmapFactory.Options bitmap = new BitmapFactory.Options();\n+            bitmap.inJustDecodeBounds = true;\n+            bitmap.inSampleSize = 6;\n+\n+            FileInputStream inputStream = new FileInputStream(file);\n+            BitmapFactory.decodeStream(inputStream, null, bitmap);\n+            inputStream.close();\n+\n+            final int REQUIRED_SIZE=75;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81bc40bf310ca4da971f25b2b017f0d7b8564bf8"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MzA3NzUzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxMjo0M1rOGWT_7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxMjo0M1rOGWT_7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA0OTUxNg==", "bodyText": "This is a complex procedure, could you explain what it does, and why it does it in a comment (some at the call site, some inside the method)?", "url": "https://github.com/ankidroid/Anki-Android/pull/6191#discussion_r426049516", "createdAt": "2020-05-15T21:12:43Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "diffHunk": "@@ -428,21 +430,68 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n                     try (FileChannel sourceChannel = new FileInputStream(sourceFile).getChannel();\n                          FileChannel destChannel = new FileOutputStream(destFile).getChannel()) {\n                         destChannel.transferFrom(sourceChannel, 0, sourceChannel.size());\n-                        UIUtils.showThemedToast(this, getString(R.string.background_image_applied), false);\n+\n+                        File newImage = compressedImage(destFile);\n+\n+                        if (newImage != null) {\n+                            UIUtils.showThemedToast(this, getString(R.string.background_image_applied), false);\n+                        } else {\n+                            UIUtils.showThemedToast(this, getString(R.string.error_selecting_image), false);\n+                        }\n                     }\n                 } finally {\n                     if (cursor != null) {\n                         cursor.close();\n                     }\n                 }\n             } else {\n+                backgroundImage.setChecked(false);\n                 UIUtils.showThemedToast(this, getString(R.string.no_image_selected), false);\n             }\n         } catch (OutOfMemoryError | Exception e) {\n             UIUtils.showThemedToast(this, getString(R.string.error_selecting_image, e.getLocalizedMessage()), false);\n         }\n     }\n \n+    private File compressedImage(File file) {\n+        try {\n+            BitmapFactory.Options bitmap = new BitmapFactory.Options();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81bc40bf310ca4da971f25b2b017f0d7b8564bf8"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MzA4MTQyOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxNDozMVrOGWUCfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxNDozMVrOGWUCfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1MDE3NQ==", "bodyText": "A toast is showed twice, once here, and once when null is returned", "url": "https://github.com/ankidroid/Anki-Android/pull/6191#discussion_r426050175", "createdAt": "2020-05-15T21:14:31Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "diffHunk": "@@ -428,21 +430,68 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n                     try (FileChannel sourceChannel = new FileInputStream(sourceFile).getChannel();\n                          FileChannel destChannel = new FileOutputStream(destFile).getChannel()) {\n                         destChannel.transferFrom(sourceChannel, 0, sourceChannel.size());\n-                        UIUtils.showThemedToast(this, getString(R.string.background_image_applied), false);\n+\n+                        File newImage = compressedImage(destFile);\n+\n+                        if (newImage != null) {\n+                            UIUtils.showThemedToast(this, getString(R.string.background_image_applied), false);\n+                        } else {\n+                            UIUtils.showThemedToast(this, getString(R.string.error_selecting_image), false);\n+                        }\n                     }\n                 } finally {\n                     if (cursor != null) {\n                         cursor.close();\n                     }\n                 }\n             } else {\n+                backgroundImage.setChecked(false);\n                 UIUtils.showThemedToast(this, getString(R.string.no_image_selected), false);\n             }\n         } catch (OutOfMemoryError | Exception e) {\n             UIUtils.showThemedToast(this, getString(R.string.error_selecting_image, e.getLocalizedMessage()), false);\n         }\n     }\n \n+    private File compressedImage(File file) {\n+        try {\n+            BitmapFactory.Options bitmap = new BitmapFactory.Options();\n+            bitmap.inJustDecodeBounds = true;\n+            bitmap.inSampleSize = 6;\n+\n+            FileInputStream inputStream = new FileInputStream(file);\n+            BitmapFactory.decodeStream(inputStream, null, bitmap);\n+            inputStream.close();\n+\n+            final int REQUIRED_SIZE=75;\n+\n+            int scale = 1;\n+            while(bitmap.outWidth / scale / 2 >= REQUIRED_SIZE &&\n+                    bitmap.outHeight / scale / 2 >= REQUIRED_SIZE) {\n+                scale *= 2;\n+            }\n+\n+            BitmapFactory.Options bitmap2 = new BitmapFactory.Options();\n+            bitmap2.inSampleSize = scale;\n+            inputStream = new FileInputStream(file);\n+\n+            Bitmap selectedBitmap = BitmapFactory.decodeStream(inputStream, null, bitmap2);\n+            inputStream.close();\n+\n+            file.createNewFile();\n+\n+            FileOutputStream outputStream = new FileOutputStream(file);\n+\n+            selectedBitmap.compress(Bitmap.CompressFormat.JPEG, 100 , outputStream);\n+\n+            return file;\n+        } catch (Exception e) {\n+            UIUtils.showThemedToast(this, getString(R.string.error_selecting_image, e.getLocalizedMessage()), false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81bc40bf310ca4da971f25b2b017f0d7b8564bf8"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MzA4MjkyOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxNTowN1rOGWUDaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxNTowN1rOGWUDaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1MDQxMQ==", "bodyText": "try with resources here as well", "url": "https://github.com/ankidroid/Anki-Android/pull/6191#discussion_r426050411", "createdAt": "2020-05-15T21:15:07Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "diffHunk": "@@ -428,21 +430,68 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n                     try (FileChannel sourceChannel = new FileInputStream(sourceFile).getChannel();\n                          FileChannel destChannel = new FileOutputStream(destFile).getChannel()) {\n                         destChannel.transferFrom(sourceChannel, 0, sourceChannel.size());\n-                        UIUtils.showThemedToast(this, getString(R.string.background_image_applied), false);\n+\n+                        File newImage = compressedImage(destFile);\n+\n+                        if (newImage != null) {\n+                            UIUtils.showThemedToast(this, getString(R.string.background_image_applied), false);\n+                        } else {\n+                            UIUtils.showThemedToast(this, getString(R.string.error_selecting_image), false);\n+                        }\n                     }\n                 } finally {\n                     if (cursor != null) {\n                         cursor.close();\n                     }\n                 }\n             } else {\n+                backgroundImage.setChecked(false);\n                 UIUtils.showThemedToast(this, getString(R.string.no_image_selected), false);\n             }\n         } catch (OutOfMemoryError | Exception e) {\n             UIUtils.showThemedToast(this, getString(R.string.error_selecting_image, e.getLocalizedMessage()), false);\n         }\n     }\n \n+    private File compressedImage(File file) {\n+        try {\n+            BitmapFactory.Options bitmap = new BitmapFactory.Options();\n+            bitmap.inJustDecodeBounds = true;\n+            bitmap.inSampleSize = 6;\n+\n+            FileInputStream inputStream = new FileInputStream(file);\n+            BitmapFactory.decodeStream(inputStream, null, bitmap);\n+            inputStream.close();\n+\n+            final int REQUIRED_SIZE=75;\n+\n+            int scale = 1;\n+            while(bitmap.outWidth / scale / 2 >= REQUIRED_SIZE &&\n+                    bitmap.outHeight / scale / 2 >= REQUIRED_SIZE) {\n+                scale *= 2;\n+            }\n+\n+            BitmapFactory.Options bitmap2 = new BitmapFactory.Options();\n+            bitmap2.inSampleSize = scale;\n+            inputStream = new FileInputStream(file);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81bc40bf310ca4da971f25b2b017f0d7b8564bf8"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MzA4NDEwOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxNTozMVrOGWUEHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxNTozMVrOGWUEHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1MDU4OQ==", "bodyText": "Also catch OutOfMemoryError here", "url": "https://github.com/ankidroid/Anki-Android/pull/6191#discussion_r426050589", "createdAt": "2020-05-15T21:15:31Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "diffHunk": "@@ -428,21 +430,68 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n                     try (FileChannel sourceChannel = new FileInputStream(sourceFile).getChannel();\n                          FileChannel destChannel = new FileOutputStream(destFile).getChannel()) {\n                         destChannel.transferFrom(sourceChannel, 0, sourceChannel.size());\n-                        UIUtils.showThemedToast(this, getString(R.string.background_image_applied), false);\n+\n+                        File newImage = compressedImage(destFile);\n+\n+                        if (newImage != null) {\n+                            UIUtils.showThemedToast(this, getString(R.string.background_image_applied), false);\n+                        } else {\n+                            UIUtils.showThemedToast(this, getString(R.string.error_selecting_image), false);\n+                        }\n                     }\n                 } finally {\n                     if (cursor != null) {\n                         cursor.close();\n                     }\n                 }\n             } else {\n+                backgroundImage.setChecked(false);\n                 UIUtils.showThemedToast(this, getString(R.string.no_image_selected), false);\n             }\n         } catch (OutOfMemoryError | Exception e) {\n             UIUtils.showThemedToast(this, getString(R.string.error_selecting_image, e.getLocalizedMessage()), false);\n         }\n     }\n \n+    private File compressedImage(File file) {\n+        try {\n+            BitmapFactory.Options bitmap = new BitmapFactory.Options();\n+            bitmap.inJustDecodeBounds = true;\n+            bitmap.inSampleSize = 6;\n+\n+            FileInputStream inputStream = new FileInputStream(file);\n+            BitmapFactory.decodeStream(inputStream, null, bitmap);\n+            inputStream.close();\n+\n+            final int REQUIRED_SIZE=75;\n+\n+            int scale = 1;\n+            while(bitmap.outWidth / scale / 2 >= REQUIRED_SIZE &&\n+                    bitmap.outHeight / scale / 2 >= REQUIRED_SIZE) {\n+                scale *= 2;\n+            }\n+\n+            BitmapFactory.Options bitmap2 = new BitmapFactory.Options();\n+            bitmap2.inSampleSize = scale;\n+            inputStream = new FileInputStream(file);\n+\n+            Bitmap selectedBitmap = BitmapFactory.decodeStream(inputStream, null, bitmap2);\n+            inputStream.close();\n+\n+            file.createNewFile();\n+\n+            FileOutputStream outputStream = new FileOutputStream(file);\n+\n+            selectedBitmap.compress(Bitmap.CompressFormat.JPEG, 100 , outputStream);\n+\n+            return file;\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81bc40bf310ca4da971f25b2b017f0d7b8564bf8"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MzEwNzU2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToyNTowN1rOGWUSRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMTo0MTo0MFrOGWUoQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1NDIxNQ==", "bodyText": "Can you generalize this function and put it in BitmapUtils, like this one? https://github.com/ankidroid/Anki-Android/blob/master/AnkiDroid/src/main/java/com/ichi2/utils/BitmapUtil.java#L40\nEspecially important to pay attention to the error handling there, anything opened should be closed in a finally, for instance - also, is this potentially crunching the image too much? I actually have the blue marble as my desktop background and if I had selected that but then it got JPEG-blocked out with an overzealous crunch that I couldn't configure, I'd be less happy with it personally", "url": "https://github.com/ankidroid/Anki-Android/pull/6191#discussion_r426054215", "createdAt": "2020-05-15T21:25:07Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "diffHunk": "@@ -428,21 +430,68 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n                     try (FileChannel sourceChannel = new FileInputStream(sourceFile).getChannel();\n                          FileChannel destChannel = new FileOutputStream(destFile).getChannel()) {\n                         destChannel.transferFrom(sourceChannel, 0, sourceChannel.size());\n-                        UIUtils.showThemedToast(this, getString(R.string.background_image_applied), false);\n+\n+                        File newImage = compressedImage(destFile);\n+\n+                        if (newImage != null) {\n+                            UIUtils.showThemedToast(this, getString(R.string.background_image_applied), false);\n+                        } else {\n+                            UIUtils.showThemedToast(this, getString(R.string.error_selecting_image), false);\n+                        }\n                     }\n                 } finally {\n                     if (cursor != null) {\n                         cursor.close();\n                     }\n                 }\n             } else {\n+                backgroundImage.setChecked(false);\n                 UIUtils.showThemedToast(this, getString(R.string.no_image_selected), false);\n             }\n         } catch (OutOfMemoryError | Exception e) {\n             UIUtils.showThemedToast(this, getString(R.string.error_selecting_image, e.getLocalizedMessage()), false);\n         }\n     }\n \n+    private File compressedImage(File file) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81bc40bf310ca4da971f25b2b017f0d7b8564bf8"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1ODUyMg==", "bodyText": "Can we put limit on file size? ( For ex: only image size less than 10 mb allowed)\nUsing this.\nFile file = new File(filepath);\nlong length = file.length();", "url": "https://github.com/ankidroid/Anki-Android/pull/6191#discussion_r426058522", "createdAt": "2020-05-15T21:37:37Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "diffHunk": "@@ -428,21 +430,68 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n                     try (FileChannel sourceChannel = new FileInputStream(sourceFile).getChannel();\n                          FileChannel destChannel = new FileOutputStream(destFile).getChannel()) {\n                         destChannel.transferFrom(sourceChannel, 0, sourceChannel.size());\n-                        UIUtils.showThemedToast(this, getString(R.string.background_image_applied), false);\n+\n+                        File newImage = compressedImage(destFile);\n+\n+                        if (newImage != null) {\n+                            UIUtils.showThemedToast(this, getString(R.string.background_image_applied), false);\n+                        } else {\n+                            UIUtils.showThemedToast(this, getString(R.string.error_selecting_image), false);\n+                        }\n                     }\n                 } finally {\n                     if (cursor != null) {\n                         cursor.close();\n                     }\n                 }\n             } else {\n+                backgroundImage.setChecked(false);\n                 UIUtils.showThemedToast(this, getString(R.string.no_image_selected), false);\n             }\n         } catch (OutOfMemoryError | Exception e) {\n             UIUtils.showThemedToast(this, getString(R.string.error_selecting_image, e.getLocalizedMessage()), false);\n         }\n     }\n \n+    private File compressedImage(File file) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1NDIxNQ=="}, "originalCommit": {"oid": "81bc40bf310ca4da971f25b2b017f0d7b8564bf8"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1OTg0MA==", "bodyText": "Is our issue the filesize, or the size of the bitmap in memory? This'll fix 99.9% of the crashes, but if we don't know the conditions that cause the issue then bugs may remain\nI'd be happy with ~10MB, that should be enough for anyone without hopefully causing too many crashes, until proven otherwise", "url": "https://github.com/ankidroid/Anki-Android/pull/6191#discussion_r426059840", "createdAt": "2020-05-15T21:41:40Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "diffHunk": "@@ -428,21 +430,68 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n                     try (FileChannel sourceChannel = new FileInputStream(sourceFile).getChannel();\n                          FileChannel destChannel = new FileOutputStream(destFile).getChannel()) {\n                         destChannel.transferFrom(sourceChannel, 0, sourceChannel.size());\n-                        UIUtils.showThemedToast(this, getString(R.string.background_image_applied), false);\n+\n+                        File newImage = compressedImage(destFile);\n+\n+                        if (newImage != null) {\n+                            UIUtils.showThemedToast(this, getString(R.string.background_image_applied), false);\n+                        } else {\n+                            UIUtils.showThemedToast(this, getString(R.string.error_selecting_image), false);\n+                        }\n                     }\n                 } finally {\n                     if (cursor != null) {\n                         cursor.close();\n                     }\n                 }\n             } else {\n+                backgroundImage.setChecked(false);\n                 UIUtils.showThemedToast(this, getString(R.string.no_image_selected), false);\n             }\n         } catch (OutOfMemoryError | Exception e) {\n             UIUtils.showThemedToast(this, getString(R.string.error_selecting_image, e.getLocalizedMessage()), false);\n         }\n     }\n \n+    private File compressedImage(File file) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1NDIxNQ=="}, "originalCommit": {"oid": "81bc40bf310ca4da971f25b2b017f0d7b8564bf8"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDAwNTA0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/res/values/03-dialogs.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxODoxNDozNFrOGWbz4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxODoxNDozNFrOGWbz4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3NzUwNQ==", "bodyText": "Supply a format string so the variable can change without updating translations", "url": "https://github.com/ankidroid/Anki-Android/pull/6191#discussion_r426177505", "createdAt": "2020-05-16T18:14:34Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/res/values/03-dialogs.xml", "diffHunk": "@@ -184,7 +184,8 @@\n     <string name=\"error_selecting_image\">Error selecting image. Please see manual. %s</string>\n     <string name=\"error_deleting_image\">Error deleting image</string>\n     <string name=\"failed_to_apply_background_image\">Failed to apply background image %s</string>\n-\n+    <string name=\"image_max_size_10_mb\">Maximum image size 10 MB allowed</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ec5c80b5b361260a3516de3cf82b61b3bea166f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDAwNjE3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxODoxNTo1MVrOGWb0cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxODoxNTo1MVrOGWb0cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3NzY0OA==", "bodyText": "consider moving this to a private static final String variable", "url": "https://github.com/ankidroid/Anki-Android/pull/6191#discussion_r426177648", "createdAt": "2020-05-16T18:15:51Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "diffHunk": "@@ -421,21 +421,30 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n                     String imgPathString = cursor.getString(columnIndex);\n                     File sourceFile = new File(imgPathString);\n \n+                    // file size in MB\n+                    long fileLength = sourceFile.length() / (1024 * 1024);\n+\n                     String currentAnkiDroidDirectory = CollectionHelper.getCurrentAnkiDroidDirectory(this);\n                     String imageName = \"DeckPickerBackground.png\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ec5c80b5b361260a3516de3cf82b61b3bea166f"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 240, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}