{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4ODk0NTg4", "number": 7358, "title": "Help screen: Redesign Proposal", "bodyText": "Purpose / Description\n\n\"Help\" links to: https://docs.ankidroid.org/manual.html\n\"Send Feedback\" links to: https://docs.ankidroid.org/help.html\n\nIMO, Both of these pages are information overload for new users, and we could do better to guide them to somewhere where they can get help.\nThis serves a secondary purpose of allowing users to know that we have both translation, and development opportunities, which should hopefully improve CrowdIn, and maybe get new users to our GitHub\nThis also allows a good menu for #6565 to add a \"Send Bug Report\", which directly hits ACRA\nReview Goals\n\nDo we want to keep \"Send Feedback\" in the main menu?\nAre the links going to the correct places\nNaming of all the items - including the navigation drawer item\nDiscussion on where we want to redirect users to.\nDo we want a \"Copy Debug Info\" on this screen? Anything else missing?\nDo we want a \"we're opening an external link\" for privacy if we don't own the site (discord/reddit etc..)\nFacebook/Twitter under community?\n\nApproach\nRecursive picture menu\nHow Has This Been Tested?\nUnit tested and on my device: https://www.youtube.com/watch?v=Djim166Dzc4\nAlso works in night mode\nLearning (optional, can help others)\nFragment testing using FragmentScenario doesn't seem fir for purpose if there's any coupling back from the fragment to the activity.\nChecklist\n\n You have not changed whitespace unnecessarily (it makes diffs hard to read)\n You have a descriptive commit message with a short title (first line, max 50 chars).\n Your code follows the style of the project (e.g. never omit braces in if statements)\n You have commented your code, particularly in hard-to-understand areas\n You have performed a self-review of your own code", "createdAt": "2020-10-06T23:45:57Z", "url": "https://github.com/ankidroid/Anki-Android/pull/7358", "merged": true, "mergeCommit": {"oid": "1982245aa232b4ece1b14b185f2f05a426d37c64"}, "closed": true, "closedAt": "2020-10-27T17:07:52Z", "author": {"login": "david-allison-1"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQBjb3ABqjM4NDgwMjQ1NTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWg2CIgBqjM5MjM4MDk0NzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a5dc73644d3eb0f8e2aaa33850f0a6be8ba947da", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/a5dc73644d3eb0f8e2aaa33850f0a6be8ba947da", "committedDate": "2020-10-06T23:04:50Z", "message": "Added picture-based help dialog\n\nDesigned to both encourage contributors to improve the app, and to\neasily display the Anki and AnkiDroid manuals to reduce support load"}, "afterCommit": {"oid": "99f55940d68cedf3fd4572c89c295b82ec79356c", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/99f55940d68cedf3fd4572c89c295b82ec79356c", "committedDate": "2020-10-07T00:07:55Z", "message": "Added picture-based help dialog\n\nDesigned to both encourage contributors to improve the app, and to\neasily display the Anki and AnkiDroid manuals to reduce support load"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "99f55940d68cedf3fd4572c89c295b82ec79356c", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/99f55940d68cedf3fd4572c89c295b82ec79356c", "committedDate": "2020-10-07T00:07:55Z", "message": "Added picture-based help dialog\n\nDesigned to both encourage contributors to improve the app, and to\neasily display the Anki and AnkiDroid manuals to reduce support load"}, "afterCommit": {"oid": "824f0fd310a8e36e2aaa9e7c7d3cd7e8d378f2fd", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/824f0fd310a8e36e2aaa9e7c7d3cd7e8d378f2fd", "committedDate": "2020-10-07T01:21:12Z", "message": "Added picture-based help dialog\n\nDesigned to both encourage contributors to improve the app, and to\neasily display the Anki and AnkiDroid manuals to reduce support load"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af6b9b4434c3e4a84b624ea35dfda6c556f30a81", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/af6b9b4434c3e4a84b624ea35dfda6c556f30a81", "committedDate": "2020-10-09T19:56:30Z", "message": "RecursivePictureMenu: Add Breadcrumb header"}, "afterCommit": {"oid": "b92816afb1dcb8c4d817e64c2856573d7cbcd81c", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/b92816afb1dcb8c4d817e64c2856573d7cbcd81c", "committedDate": "2020-10-09T20:30:39Z", "message": "RecursivePictureMenu: Add Breadcrumb header"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NDU2MzI1", "url": "https://github.com/ankidroid/Anki-Android/pull/7358#pullrequestreview-508456325", "createdAt": "2020-10-14T15:14:15Z", "commit": {"oid": "1fcfdc6213c3dcedd6eaca8fd76661c65e015228"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNToxNDoxNVrOHhYJOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNToyMToxMVrOHhYeGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2MDYzMw==", "bodyText": "Interesting - so the idea here is that this will actually be translated now? If that's the case then when these are translated there's no QA to know if someone didn't just put a dangling pointer in to some non-existing translation (thinking they needed to translate it but not realizing they need to translate the whole manual in ankidroiddocs as well). We need a fallback mechanism somehow if the manual is 404, or some way to handle this", "url": "https://github.com/ankidroid/Anki-Android/pull/7358#discussion_r504760633", "createdAt": "2020-10-14T15:14:15Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/res/values/constants.xml", "diffHunk": "@@ -139,12 +139,7 @@\n     <string name=\"link_contribution\">https://github.com/ankidroid/Anki-Android/wiki/Contributing</string>\n     <string name=\"link_help\">https://docs.ankidroid.org/help.html</string>\n     <string name=\"link_manual\">https://docs.ankidroid.org/manual.html</string>\n-    <string name=\"link_help_ja\">https://docs.ankidroid.org/help-ja.html</string>\n-    <string name=\"link_manual_ja\">https://docs.ankidroid.org/manual-ja.html</string>\n-    <string name=\"link_help_zh\">https://docs.ankidroid.org/help-zh.html</string>\n-    <string name=\"link_manual_zh\">https://docs.ankidroid.org/manual-zh.html</string>\n-    <string name=\"link_help_ar\">https://docs.ankidroid.org/help-ar.html</string>\n-    <string name=\"link_manual_ar\">https://docs.ankidroid.org/manual-ar.html</string>\n+    <string name=\"link_manual_importing\">https://docs.ankidroid.org/manual.html#importing</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fcfdc6213c3dcedd6eaca8fd76661c65e015228"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2MjY4MA==", "bodyText": "This might be the time to render the manuals in as well, so it is a file-based check. The release script chunk that does the render is trivial, might be easy to tick that one off? #6829", "url": "https://github.com/ankidroid/Anki-Android/pull/7358#discussion_r504762680", "createdAt": "2020-10-14T15:16:52Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/res/values/constants.xml", "diffHunk": "@@ -139,12 +139,7 @@\n     <string name=\"link_contribution\">https://github.com/ankidroid/Anki-Android/wiki/Contributing</string>\n     <string name=\"link_help\">https://docs.ankidroid.org/help.html</string>\n     <string name=\"link_manual\">https://docs.ankidroid.org/manual.html</string>\n-    <string name=\"link_help_ja\">https://docs.ankidroid.org/help-ja.html</string>\n-    <string name=\"link_manual_ja\">https://docs.ankidroid.org/manual-ja.html</string>\n-    <string name=\"link_help_zh\">https://docs.ankidroid.org/help-zh.html</string>\n-    <string name=\"link_manual_zh\">https://docs.ankidroid.org/manual-zh.html</string>\n-    <string name=\"link_help_ar\">https://docs.ankidroid.org/help-ar.html</string>\n-    <string name=\"link_manual_ar\">https://docs.ankidroid.org/manual-ar.html</string>\n+    <string name=\"link_manual_importing\">https://docs.ankidroid.org/manual.html#importing</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2MDYzMw=="}, "originalCommit": {"oid": "1fcfdc6213c3dcedd6eaca8fd76661c65e015228"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2MzY1OA==", "bodyText": "I blew you up with the switch -> if/else change here sorry", "url": "https://github.com/ankidroid/Anki-Android/pull/7358#discussion_r504763658", "createdAt": "2020-10-14T15:18:12Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/NavigationDrawerActivity.java", "diffHunk": "@@ -327,11 +327,11 @@ public boolean onNavigationItemSelected(final MenuItem item) {\n                     break;\n                 case R.id.nav_help:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dc803a3aa0fbcf5994064c64f1cab1e739af174"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2NDUxOQ==", "bodyText": "just out of curiosity, what is that 1 argument in the lambda?", "url": "https://github.com/ankidroid/Anki-Android/pull/7358#discussion_r504764519", "createdAt": "2020-10-14T15:19:22Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/dialogs/RecursivePictureMenu.java", "diffHunk": "@@ -0,0 +1,216 @@\n+/*\n+ *  Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+ *\n+ *  This program is free software; you can redistribute it and/or modify it under\n+ *  the terms of the GNU General Public License as published by the Free Software\n+ *  Foundation; either version 3 of the License, or (at your option) any later\n+ *  version.\n+ *\n+ *  This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ *  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ *  PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License along with\n+ *  this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.anki.dialogs;\n+\n+import android.app.Dialog;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.os.Parcel;\n+import android.os.Parcelable;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.TextView;\n+\n+import com.afollestad.materialdialogs.MaterialDialog;\n+import com.ichi2.anki.AnkiActivity;\n+import com.ichi2.anki.R;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import androidx.annotation.CheckResult;\n+import androidx.annotation.DrawableRes;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.annotation.StringRes;\n+import androidx.fragment.app.DialogFragment;\n+import androidx.recyclerview.widget.RecyclerView;\n+\n+/** A Dialog displaying The various options for \"Help\" in a nested structure */\n+public class RecursivePictureMenu extends DialogFragment {\n+\n+    public RecursivePictureMenu() {\n+        // required for a fragment - must be no args\n+    }\n+\n+    @CheckResult\n+    public static RecursivePictureMenu createInstance(ArrayList<Item> itemList) {\n+        RecursivePictureMenu helpDialog = new RecursivePictureMenu();\n+        Bundle args = new Bundle();\n+        args.putParcelableArrayList(\"bundle\", itemList);\n+        helpDialog.setArguments(args);\n+        return helpDialog;\n+    }\n+\n+\n+    public static void removeFrom(List<Item> allItems, Item toRemove) {\n+        // Note: currently doesn't remove the top-level elements.\n+        for (Item i : allItems) {\n+            i.remove(toRemove);\n+        }\n+    }\n+\n+\n+    @NonNull\n+    @Override\n+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n+\n+        @NonNull\n+        final List<Item> items = getArguments().getParcelableArrayList(\"bundle\");\n+\n+        RecyclerView.Adapter<?> adapter = new RecyclerView.Adapter<RecyclerView.ViewHolder>() {\n+\n+\n+            @NonNull\n+            @Override\n+            public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n+                View root = getLayoutInflater().inflate(R.layout.material_dialog_list_item, parent, false);\n+                return new RecyclerView.ViewHolder(root) { };\n+            }\n+\n+\n+            @Override\n+            public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {\n+                TextView textView = (TextView) holder.itemView;\n+                Item val = items.get(position);\n+                textView.setText(val.mText);\n+                textView.setOnClickListener((l) -> val.execute((AnkiActivity) requireActivity()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dc803a3aa0fbcf5994064c64f1cab1e739af174"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2NTk3OQ==", "bodyText": "anytime I see parcellable things and Bundles now I'm afraid of size limits \ud83d\ude05  - I don't think that's really a concern here, this is just a request to look carefully one more time and attest \"this is a fixed amount of data going in, and no way it will be more than 1MB\", correct?", "url": "https://github.com/ankidroid/Anki-Android/pull/7358#discussion_r504765979", "createdAt": "2020-10-14T15:21:11Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/dialogs/RecursivePictureMenu.java", "diffHunk": "@@ -0,0 +1,216 @@\n+/*\n+ *  Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+ *\n+ *  This program is free software; you can redistribute it and/or modify it under\n+ *  the terms of the GNU General Public License as published by the Free Software\n+ *  Foundation; either version 3 of the License, or (at your option) any later\n+ *  version.\n+ *\n+ *  This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ *  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ *  PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License along with\n+ *  this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.anki.dialogs;\n+\n+import android.app.Dialog;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.os.Parcel;\n+import android.os.Parcelable;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.TextView;\n+\n+import com.afollestad.materialdialogs.MaterialDialog;\n+import com.ichi2.anki.AnkiActivity;\n+import com.ichi2.anki.R;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import androidx.annotation.CheckResult;\n+import androidx.annotation.DrawableRes;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.annotation.StringRes;\n+import androidx.fragment.app.DialogFragment;\n+import androidx.recyclerview.widget.RecyclerView;\n+\n+/** A Dialog displaying The various options for \"Help\" in a nested structure */\n+public class RecursivePictureMenu extends DialogFragment {\n+\n+    public RecursivePictureMenu() {\n+        // required for a fragment - must be no args\n+    }\n+\n+    @CheckResult\n+    public static RecursivePictureMenu createInstance(ArrayList<Item> itemList) {\n+        RecursivePictureMenu helpDialog = new RecursivePictureMenu();\n+        Bundle args = new Bundle();\n+        args.putParcelableArrayList(\"bundle\", itemList);\n+        helpDialog.setArguments(args);\n+        return helpDialog;\n+    }\n+\n+\n+    public static void removeFrom(List<Item> allItems, Item toRemove) {\n+        // Note: currently doesn't remove the top-level elements.\n+        for (Item i : allItems) {\n+            i.remove(toRemove);\n+        }\n+    }\n+\n+\n+    @NonNull\n+    @Override\n+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n+\n+        @NonNull\n+        final List<Item> items = getArguments().getParcelableArrayList(\"bundle\");\n+\n+        RecyclerView.Adapter<?> adapter = new RecyclerView.Adapter<RecyclerView.ViewHolder>() {\n+\n+\n+            @NonNull\n+            @Override\n+            public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n+                View root = getLayoutInflater().inflate(R.layout.material_dialog_list_item, parent, false);\n+                return new RecyclerView.ViewHolder(root) { };\n+            }\n+\n+\n+            @Override\n+            public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {\n+                TextView textView = (TextView) holder.itemView;\n+                Item val = items.get(position);\n+                textView.setText(val.mText);\n+                textView.setOnClickListener((l) -> val.execute((AnkiActivity) requireActivity()));\n+                int mIcon = val.mIcon;\n+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {\n+                    textView.setCompoundDrawablesRelativeWithIntrinsicBounds(mIcon, 0, 0, 0);\n+                } else {\n+                    textView.setCompoundDrawablesWithIntrinsicBounds(mIcon, 0, 0, 0);\n+                }\n+            }\n+\n+\n+            @Override\n+            public int getItemCount() {\n+                return items.size();\n+            }\n+        };\n+\n+        return new MaterialDialog.Builder(requireContext())\n+                .adapter(adapter, null)\n+                .show();\n+    }\n+\n+    public abstract static class Item implements Parcelable {\n+\n+        private final @StringRes int mText;\n+        private final @DrawableRes int mIcon;\n+\n+        public Item(@StringRes int titleString, @DrawableRes int iconDrawable) {\n+            this.mText = titleString;\n+            this.mIcon = iconDrawable;\n+        }\n+\n+        public List<Item> getChildren() {\n+            return new ArrayList<>();\n+        }\n+\n+        protected Item(Parcel in) {\n+            mText = in.readInt();\n+            mIcon = in.readInt();\n+        }\n+\n+        @Override\n+        public int describeContents() {\n+            return 0;\n+        }\n+\n+        @Override\n+        public void writeToParcel(Parcel dest, int flags) {\n+            dest.writeInt(mText);\n+            dest.writeInt(mIcon);\n+        }\n+\n+        public abstract void execute(AnkiActivity activity);\n+\n+        public abstract void remove(Item toRemove);\n+    }\n+\n+    public static class ItemHeader extends Item implements Parcelable {\n+\n+        private final List<Item> mChildren;\n+\n+\n+        public ItemHeader(@StringRes int titleString, int i, Item... children) {\n+            super(titleString, i);\n+            mChildren = new ArrayList<>(Arrays.asList(children));\n+        }\n+\n+\n+        @Override\n+        public List<Item> getChildren() {\n+            return new ArrayList<>(mChildren);\n+        }\n+\n+\n+        @Override\n+        public void execute(AnkiActivity activity) {\n+            DialogFragment nextFragment = RecursivePictureMenu.createInstance(new ArrayList<>(this.getChildren()));\n+            activity.showDialogFragment(nextFragment);\n+        }\n+\n+\n+        @Override\n+        public void remove(Item toRemove) {\n+            mChildren.remove(toRemove);\n+            for (Item i : mChildren) {\n+                i.remove(toRemove);\n+            }\n+        }\n+\n+\n+        protected ItemHeader(Parcel in) {\n+            super(in);\n+            if (in.readByte() == 0x01) {\n+                mChildren = new ArrayList<>();\n+                in.readList(mChildren, Item.class.getClassLoader());\n+            } else {\n+                mChildren = new ArrayList<>();\n+            }\n+        }\n+\n+        @Override\n+        public void writeToParcel(Parcel dest, int flags) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dc803a3aa0fbcf5994064c64f1cab1e739af174"}, "originalPosition": 192}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dd56da3901a3675124d8926a1e57ea7365e1a09", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/6dd56da3901a3675124d8926a1e57ea7365e1a09", "committedDate": "2020-10-26T14:11:30Z", "message": "Converted Images to vector\n\nUseful for new help screen"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b92816afb1dcb8c4d817e64c2856573d7cbcd81c", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/b92816afb1dcb8c4d817e64c2856573d7cbcd81c", "committedDate": "2020-10-09T20:30:39Z", "message": "RecursivePictureMenu: Add Breadcrumb header"}, "afterCommit": {"oid": "1337d7905695de42868eface285e1a43b1dbdbe4", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/1337d7905695de42868eface285e1a43b1dbdbe4", "committedDate": "2020-10-26T17:30:25Z", "message": "RecursivePictureMenu: Add Breadcrumb header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c8edbf595e76521551ceffdc6c0108f05535e85", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/0c8edbf595e76521551ceffdc6c0108f05535e85", "committedDate": "2020-10-26T17:34:29Z", "message": "Added picture-based help dialog\n\nDesigned to both encourage contributors to improve the app, and to\neasily display the Anki and AnkiDroid manuals to reduce support load\n\nRemove \"Send Feedback\" as it's now included in the menu"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0414fa4147aa308d62f1ea10a1a03cd22d328f7", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/c0414fa4147aa308d62f1ea10a1a03cd22d328f7", "committedDate": "2020-10-26T17:34:38Z", "message": "RecursivePictureMenu: Add Breadcrumb header"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1337d7905695de42868eface285e1a43b1dbdbe4", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/1337d7905695de42868eface285e1a43b1dbdbe4", "committedDate": "2020-10-26T17:30:25Z", "message": "RecursivePictureMenu: Add Breadcrumb header"}, "afterCommit": {"oid": "c0414fa4147aa308d62f1ea10a1a03cd22d328f7", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/c0414fa4147aa308d62f1ea10a1a03cd22d328f7", "committedDate": "2020-10-26T17:34:38Z", "message": "RecursivePictureMenu: Add Breadcrumb header"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MDQ4MDEy", "url": "https://github.com/ankidroid/Anki-Android/pull/7358#pullrequestreview-517048012", "createdAt": "2020-10-26T18:07:42Z", "commit": {"oid": "c0414fa4147aa308d62f1ea10a1a03cd22d328f7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODowNzo0M1rOHocM5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODowNzo0M1rOHocM5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2NzE0Mw==", "bodyText": "Sorry to seemingly waffle on this, I think we should attempt a 'Donate' to https://opencollective.com/ankidroid - silly to have it and not promote at all. Could use a link to the same actually on the contributions/help documents in FAQ / manual, and as a preliminary look it appears finding an SVG should not be hard https://duckduckgo.com/?q=black+24dp+usd+icon+svg&t=ffab&atb=v201-1&iar=images&iax=images&ia=images", "url": "https://github.com/ankidroid/Anki-Android/pull/7358#discussion_r512167143", "createdAt": "2020-10-26T18:07:43Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/dialogs/HelpDialog.java", "diffHunk": "@@ -0,0 +1,219 @@\n+/*\n+ *  Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+ *\n+ *  This program is free software; you can redistribute it and/or modify it under\n+ *  the terms of the GNU General Public License as published by the Free Software\n+ *  Foundation; either version 3 of the License, or (at your option) any later\n+ *  version.\n+ *\n+ *  This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ *  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ *  PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License along with\n+ *  this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.anki.dialogs;\n+\n+import android.content.Context;\n+import android.net.Uri;\n+import android.os.Parcel;\n+import android.os.Parcelable;\n+\n+import com.ichi2.anki.AnkiActivity;\n+import com.ichi2.anki.AnkiDroidApp;\n+import com.ichi2.anki.R;\n+import com.ichi2.anki.dialogs.RecursivePictureMenu.Item;\n+import com.ichi2.anki.dialogs.RecursivePictureMenu.ItemHeader;\n+import com.ichi2.utils.IntentUtil;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n+import androidx.annotation.DrawableRes;\n+import androidx.annotation.StringRes;\n+import androidx.fragment.app.DialogFragment;\n+\n+public class HelpDialog {\n+\n+    private static void openManual(AnkiActivity ankiActivity) {\n+        ankiActivity.openUrl(Uri.parse(AnkiDroidApp.getManualUrl()));\n+    }\n+\n+    private static void openFeedback(AnkiActivity ankiActivity) {\n+        ankiActivity.openUrl(Uri.parse(AnkiDroidApp.getFeedbackUrl()));\n+    }\n+\n+    public static DialogFragment createInstance(Context context) {\n+\n+        RateAppItem rateAppItem = new RateAppItem(R.string.help_item_support_rate_ankidroid, R.drawable.ic_star_black_24);\n+        Item[] allItems = {\n+                new ItemHeader(R.string.help_title_using_ankidroid, R.drawable.ic_manual_black_24dp,\n+                        new FunctionItem(R.string.help_item_ankidroid_manual, R.drawable.ic_manual_black_24dp, HelpDialog::openManual),\n+                        new LinkItem(R.string.help_item_anki_manual, R.drawable.ic_manual_black_24dp, R.string.link_anki_manual),\n+                        new LinkItem(R.string.help_item_ankidroid_faq, R.drawable.ic_help_black_24dp, R.string.link_ankidroid_faq)\n+                ),\n+                new ItemHeader(R.string.help_title_get_help, R.drawable.ic_help_black_24dp,\n+                        new LinkItem(R.string.help_item_mailing_list, R.drawable.ic_email_black_24dp, R.string.link_forum),\n+                        new FunctionItem(R.string.help_item_report_bug, R.drawable.ic_bug_report_black_24dp, HelpDialog::openFeedback)\n+                ),\n+                new ItemHeader(R.string.help_title_support_ankidroid, R.drawable.ic_heart_black_24dp,\n+                        new LinkItem(R.string.help_item_support_translate_ankidroid, R.drawable.ic_language_black_24dp, R.string.link_translation),\n+                        new LinkItem(R.string.help_item_support_develop_ankidroid, R.drawable.ic_build_black_24, R.string.link_ankidroid_development_guide),\n+                        rateAppItem,\n+                        new LinkItem(R.string.help_item_support_other_ankidroid, R.drawable.ic_help_black_24dp, R.string.link_contribution),\n+                        new FunctionItem(R.string.send_feedback, R.drawable.ic_email_black_24dp, HelpDialog::openFeedback)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0414fa4147aa308d62f1ea10a1a03cd22d328f7"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MDg4MDU4", "url": "https://github.com/ankidroid/Anki-Android/pull/7358#pullrequestreview-517088058", "createdAt": "2020-10-26T19:00:37Z", "commit": {"oid": "bbe16481625b9d2e581610151b31f7d1c26f7ef0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efac62307d1c955bd2f3b33eaf9a1634d669a368", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/efac62307d1c955bd2f3b33eaf9a1634d669a368", "committedDate": "2020-10-27T03:58:54Z", "message": "Help Dialog: Add OpenCollective Donate Link\n\nSeparate commit to allow easy revert"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bbe16481625b9d2e581610151b31f7d1c26f7ef0", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/bbe16481625b9d2e581610151b31f7d1c26f7ef0", "committedDate": "2020-10-26T18:16:16Z", "message": "Help Dialog: Add OpenCollective Donate Link"}, "afterCommit": {"oid": "efac62307d1c955bd2f3b33eaf9a1634d669a368", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/efac62307d1c955bd2f3b33eaf9a1634d669a368", "committedDate": "2020-10-27T03:58:54Z", "message": "Help Dialog: Add OpenCollective Donate Link\n\nSeparate commit to allow easy revert"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3955, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}