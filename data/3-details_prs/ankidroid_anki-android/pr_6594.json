{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMjc1ODQ2", "number": 6594, "title": "Counts reset if required", "bodyText": "Pull Request template\nPurpose / Description\nThis should solve\nFixes #6587 while still\ndoing resets only when they are required.\nApproach\nThe main problem is that \"counts\" mean \"number of cards to see today, ignoring current card if any\".\nThe trouble here is that \"current card\" was not something the scheduler new about. So instead we have ad-hoc code to ignore the current card. Essentially, when \"getCard\" is called, it is assumed it is giving the current card. When \"undo\" is called, it reset the scheduler twice and manually change the count of the current card.\nThe good news is that #6585 is already dealing with saving current card. So this can be easily used to correct the counting. When counting is reset, we take current card into account to know what to change.\nOf course, we may just consider #6585 first and then consider the resetting of counts later, to make this PR simpler.\nHow Has This Been Tested?\nI'm testing it on my phone, trying to reproduce the bug\nLearning (optional, can help others)\nHow to use bisect to find where a bug is introduced. And that tests which deal only with scheduler does not simulate the reviewer very corrrectly", "createdAt": "2020-06-30T20:30:12Z", "url": "https://github.com/ankidroid/Anki-Android/pull/6594", "merged": true, "mergeCommit": {"oid": "d694006cb27bdecd13888f782e1248565c45e2bb"}, "closed": true, "closedAt": "2020-07-01T15:27:34Z", "author": {"login": "Arthur-Milchior"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwbvvpAFqTQ0MDM2NDkzOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwr9Y0gFqTQ0MDk3NjA3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMzY0OTM4", "url": "https://github.com/ankidroid/Anki-Android/pull/6594#pullrequestreview-440364938", "createdAt": "2020-06-30T20:34:02Z", "commit": {"oid": "ea104f6b653b2bafbfa0741719d569331d02ccad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMzgyNTc0", "url": "https://github.com/ankidroid/Anki-Android/pull/6594#pullrequestreview-440382574", "createdAt": "2020-06-30T21:01:24Z", "commit": {"oid": "ea104f6b653b2bafbfa0741719d569331d02ccad"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea104f6b653b2bafbfa0741719d569331d02ccad", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/ea104f6b653b2bafbfa0741719d569331d02ccad", "committedDate": "2020-06-30T20:26:53Z", "message": "Counts reset if required\n\nThis should solve\nhttps://github.com/ankidroid/Anki-Android/issues/6587 while still\ndoing resets only when they are required.\n\nThanks to David for finding the cause of the bug so quickly."}, "afterCommit": {"oid": "ff50cde4fe74a4b9e9db6d9ccd8a24a1f85f3530", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/ff50cde4fe74a4b9e9db6d9ccd8a24a1f85f3530", "committedDate": "2020-06-30T23:46:25Z", "message": "Regression for #6587\n\nTest by David, I only add it to my PR for some reason"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ff50cde4fe74a4b9e9db6d9ccd8a24a1f85f3530", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/ff50cde4fe74a4b9e9db6d9ccd8a24a1f85f3530", "committedDate": "2020-06-30T23:46:25Z", "message": "Regression for #6587\n\nTest by David, I only add it to my PR for some reason"}, "afterCommit": {"oid": "90020b19391875826460d63eeecc1be01b361e49", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/90020b19391875826460d63eeecc1be01b361e49", "committedDate": "2020-06-30T23:52:30Z", "message": "Unit test for 6587"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNDY3NTIy", "url": "https://github.com/ankidroid/Anki-Android/pull/6594#pullrequestreview-440467522", "createdAt": "2020-07-01T00:14:49Z", "commit": {"oid": "90020b19391875826460d63eeecc1be01b361e49"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMDoxNDo0OVrOGrSpPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMDoxNDo0OVrOGrSpPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA0NzQyMA==", "bodyText": "Love the multi-scheduler running @david-allison-1 !", "url": "https://github.com/ankidroid/Anki-Android/pull/6594#discussion_r448047420", "createdAt": "2020-07-01T00:14:49Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/test/java/com/ichi2/libanki/sched/AbstractSchedTest.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+\n+ This program is free software; you can redistribute it and/or modify it under\n+ the terms of the GNU General Public License as published by the Free Software\n+ Foundation; either version 3 of the License, or (at your option) any later\n+ version.\n+\n+ This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License along with\n+ this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.libanki.sched;\n+\n+import com.ichi2.anki.RobolectricTest;\n+import com.ichi2.anki.exception.ConfirmModSchemaException;\n+import com.ichi2.async.CollectionTask;\n+import com.ichi2.libanki.Card;\n+import com.ichi2.libanki.Consts;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.robolectric.ParameterizedRobolectricTestRunner;\n+import org.robolectric.ParameterizedRobolectricTestRunner.Parameter;\n+import org.robolectric.ParameterizedRobolectricTestRunner.Parameters;\n+\n+import java.util.Arrays;\n+\n+import static com.ichi2.anki.AbstractFlashcardViewer.EASE_3;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.not;\n+\n+// Note: These tests can't be run individually but can from the class-level\n+// gradlew AnkiDroid:testDebug --tests \"com.ichi2.libanki.sched.AbstractSchedTest.*\"\n+@RunWith(ParameterizedRobolectricTestRunner.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90020b19391875826460d63eeecc1be01b361e49"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNDcxNTk0", "url": "https://github.com/ankidroid/Anki-Android/pull/6594#pullrequestreview-440471594", "createdAt": "2020-07-01T00:28:50Z", "commit": {"oid": "90020b19391875826460d63eeecc1be01b361e49"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "90020b19391875826460d63eeecc1be01b361e49", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/90020b19391875826460d63eeecc1be01b361e49", "committedDate": "2020-06-30T23:52:30Z", "message": "Unit test for 6587"}, "afterCommit": {"oid": "9f42a70f6e7a42d1a3fe56b36750fef593f93f0d", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/9f42a70f6e7a42d1a3fe56b36750fef593f93f0d", "committedDate": "2020-07-01T00:46:36Z", "message": "Counts reset if required\n\nThis should solve\nhttps://github.com/ankidroid/Anki-Android/issues/6587 while still\ndoing resets only when they are required.\n\nThanks to David for finding the cause of the bug so quickly."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNDc5MzA0", "url": "https://github.com/ankidroid/Anki-Android/pull/6594#pullrequestreview-440479304", "createdAt": "2020-07-01T00:55:30Z", "commit": {"oid": "9f42a70f6e7a42d1a3fe56b36750fef593f93f0d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMDo1NTozMFrOGrTSJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMDo1Njo0M1rOGrTTYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA1Nzg5NA==", "bodyText": "Does this block wait until the task is completed?", "url": "https://github.com/ankidroid/Anki-Android/pull/6594#discussion_r448057894", "createdAt": "2020-07-01T00:55:30Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/test/java/com/ichi2/libanki/sched/AbstractSchedTest.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+\n+ This program is free software; you can redistribute it and/or modify it under\n+ the terms of the GNU General Public License as published by the Free Software\n+ Foundation; either version 3 of the License, or (at your option) any later\n+ version.\n+\n+ This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License along with\n+ this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.libanki.sched;\n+\n+import com.ichi2.anki.RobolectricTest;\n+import com.ichi2.anki.exception.ConfirmModSchemaException;\n+import com.ichi2.async.CollectionTask;\n+import com.ichi2.libanki.Card;\n+import com.ichi2.libanki.Consts;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.robolectric.ParameterizedRobolectricTestRunner;\n+import org.robolectric.ParameterizedRobolectricTestRunner.Parameter;\n+import org.robolectric.ParameterizedRobolectricTestRunner.Parameters;\n+\n+import java.util.Arrays;\n+\n+import static com.ichi2.anki.AbstractFlashcardViewer.EASE_3;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.not;\n+\n+// Note: These tests can't be run individually but can from the class-level\n+// gradlew AnkiDroid:testDebug --tests \"com.ichi2.libanki.sched.AbstractSchedTest.*\"\n+@RunWith(ParameterizedRobolectricTestRunner.class)\n+public class AbstractSchedTest extends RobolectricTest {\n+\n+    @Parameter\n+    public int schedVersion;\n+\n+    @Parameters(name = \"SchedV{0}\")\n+    public static java.util.Collection<Object[]> initParameters() {\n+        // This does one run with schedVersion injected as 1, and one run as 2\n+        return Arrays.asList(new Object[][] { { 1 }, { 2 } });\n+    }\n+\n+    @Before\n+    @Override\n+    public void setUp() {\n+        super.setUp();\n+        try {\n+            getCol().changeSchedulerVer(schedVersion);\n+        } catch (ConfirmModSchemaException e) {\n+            throw new RuntimeException(\"Could not change schedVer\", e);\n+        }\n+    }\n+\n+    @Test\n+    public void testUndoResetsCardCountsToCorrectValue() throws InterruptedException {\n+        // #6587\n+        addNoteUsingBasicModel(\"Hello\", \"World\");\n+\n+        AbstractSched sched = getCol().getSched();\n+        sched.reset();\n+\n+        Card cardBeforeUndo = sched.getCard();\n+        sched.setCurrentCard(cardBeforeUndo);\n+        int[] countsBeforeUndo = sched.counts();\n+        // Not shown in the UI, but there is a state where the card has been removed from the queue, but not answered\n+        // where the counts are decremented.\n+        assertThat(countsBeforeUndo, is(new int[] { 0, 0, 0 }));\n+\n+        sched.answerCard(cardBeforeUndo, EASE_3);\n+\n+        CollectionTask.launchCollectionTask(CollectionTask.TASK_TYPE_UNDO,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f42a70f6e7a42d1a3fe56b36750fef593f93f0d"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA1ODIxMA==", "bodyText": "Why is this not done in the background in the task?", "url": "https://github.com/ankidroid/Anki-Android/pull/6594#discussion_r448058210", "createdAt": "2020-07-01T00:56:43Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/test/java/com/ichi2/libanki/sched/AbstractSchedTest.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+\n+ This program is free software; you can redistribute it and/or modify it under\n+ the terms of the GNU General Public License as published by the Free Software\n+ Foundation; either version 3 of the License, or (at your option) any later\n+ version.\n+\n+ This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License along with\n+ this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.libanki.sched;\n+\n+import com.ichi2.anki.RobolectricTest;\n+import com.ichi2.anki.exception.ConfirmModSchemaException;\n+import com.ichi2.async.CollectionTask;\n+import com.ichi2.libanki.Card;\n+import com.ichi2.libanki.Consts;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.robolectric.ParameterizedRobolectricTestRunner;\n+import org.robolectric.ParameterizedRobolectricTestRunner.Parameter;\n+import org.robolectric.ParameterizedRobolectricTestRunner.Parameters;\n+\n+import java.util.Arrays;\n+\n+import static com.ichi2.anki.AbstractFlashcardViewer.EASE_3;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.not;\n+\n+// Note: These tests can't be run individually but can from the class-level\n+// gradlew AnkiDroid:testDebug --tests \"com.ichi2.libanki.sched.AbstractSchedTest.*\"\n+@RunWith(ParameterizedRobolectricTestRunner.class)\n+public class AbstractSchedTest extends RobolectricTest {\n+\n+    @Parameter\n+    public int schedVersion;\n+\n+    @Parameters(name = \"SchedV{0}\")\n+    public static java.util.Collection<Object[]> initParameters() {\n+        // This does one run with schedVersion injected as 1, and one run as 2\n+        return Arrays.asList(new Object[][] { { 1 }, { 2 } });\n+    }\n+\n+    @Before\n+    @Override\n+    public void setUp() {\n+        super.setUp();\n+        try {\n+            getCol().changeSchedulerVer(schedVersion);\n+        } catch (ConfirmModSchemaException e) {\n+            throw new RuntimeException(\"Could not change schedVer\", e);\n+        }\n+    }\n+\n+    @Test\n+    public void testUndoResetsCardCountsToCorrectValue() throws InterruptedException {\n+        // #6587\n+        addNoteUsingBasicModel(\"Hello\", \"World\");\n+\n+        AbstractSched sched = getCol().getSched();\n+        sched.reset();\n+\n+        Card cardBeforeUndo = sched.getCard();\n+        sched.setCurrentCard(cardBeforeUndo);\n+        int[] countsBeforeUndo = sched.counts();\n+        // Not shown in the UI, but there is a state where the card has been removed from the queue, but not answered\n+        // where the counts are decremented.\n+        assertThat(countsBeforeUndo, is(new int[] { 0, 0, 0 }));\n+\n+        sched.answerCard(cardBeforeUndo, EASE_3);\n+\n+        CollectionTask.launchCollectionTask(CollectionTask.TASK_TYPE_UNDO,\n+                new CollectionTask.Listener() {\n+                    @Override\n+                    public void onPreExecute(CollectionTask task) {\n+\n+                    }\n+\n+\n+                    @Override\n+                    public void onPostExecute(CollectionTask task, CollectionTask.TaskData result) {\n+                        int[] countsAfterUndo = sched.counts();\n+                        assertThat(\"Counts after an undo should be the same as before an undo\", countsAfterUndo, is(countsBeforeUndo));\n+\n+                    }\n+\n+\n+                    @Override\n+                    public void onProgressUpdate(CollectionTask task, CollectionTask.TaskData... values) {\n+                        Card undoneCard = (Card)values[0].getCard();\n+                        sched.setCurrentCard(undoneCard);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f42a70f6e7a42d1a3fe56b36750fef593f93f0d"}, "originalPosition": 100}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNDg1NDE1", "url": "https://github.com/ankidroid/Anki-Android/pull/6594#pullrequestreview-440485415", "createdAt": "2020-07-01T01:15:57Z", "commit": {"oid": "9f42a70f6e7a42d1a3fe56b36750fef593f93f0d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f42a70f6e7a42d1a3fe56b36750fef593f93f0d", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/9f42a70f6e7a42d1a3fe56b36750fef593f93f0d", "committedDate": "2020-07-01T00:46:36Z", "message": "Counts reset if required\n\nThis should solve\nhttps://github.com/ankidroid/Anki-Android/issues/6587 while still\ndoing resets only when they are required.\n\nThanks to David for finding the cause of the bug so quickly."}, "afterCommit": {"oid": "f336ece83b299012ddf484a5074c90cc1158d05b", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/f336ece83b299012ddf484a5074c90cc1158d05b", "committedDate": "2020-07-01T01:57:17Z", "message": "Counts reset if required\n\nThis should solve\nhttps://github.com/ankidroid/Anki-Android/issues/6587 while still\ndoing resets only when they are required.\n\nThanks to David for finding the cause of the bug so quickly."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9faed4b3a7df8be414e01ce2a20488195a9bfd3b", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/9faed4b3a7df8be414e01ce2a20488195a9bfd3b", "committedDate": "2020-07-01T03:15:39Z", "message": "Undo: decrement count AFTER reset"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86fa6789a504486588bdf7feb8ff0515b5a7785b", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/86fa6789a504486588bdf7feb8ff0515b5a7785b", "committedDate": "2020-07-01T03:15:51Z", "message": "Unit test for 6587"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8d9a14243014f9d71a3c5fcf736926ae2cc0a5c", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/a8d9a14243014f9d71a3c5fcf736926ae2cc0a5c", "committedDate": "2020-07-01T03:22:32Z", "message": "Counts reset if required\n\nThis should solve\nhttps://github.com/ankidroid/Anki-Android/issues/6587 while still\ndoing resets only when they are required.\n\nThanks to David for finding the cause of the bug so quickly."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f336ece83b299012ddf484a5074c90cc1158d05b", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/f336ece83b299012ddf484a5074c90cc1158d05b", "committedDate": "2020-07-01T01:57:17Z", "message": "Counts reset if required\n\nThis should solve\nhttps://github.com/ankidroid/Anki-Android/issues/6587 while still\ndoing resets only when they are required.\n\nThanks to David for finding the cause of the bug so quickly."}, "afterCommit": {"oid": "a8d9a14243014f9d71a3c5fcf736926ae2cc0a5c", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/a8d9a14243014f9d71a3c5fcf736926ae2cc0a5c", "committedDate": "2020-07-01T03:22:32Z", "message": "Counts reset if required\n\nThis should solve\nhttps://github.com/ankidroid/Anki-Android/issues/6587 while still\ndoing resets only when they are required.\n\nThanks to David for finding the cause of the bug so quickly."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzM0NDE4", "url": "https://github.com/ankidroid/Anki-Android/pull/6594#pullrequestreview-440734418", "createdAt": "2020-07-01T10:12:03Z", "commit": {"oid": "a8d9a14243014f9d71a3c5fcf736926ae2cc0a5c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwOTc2MDcy", "url": "https://github.com/ankidroid/Anki-Android/pull/6594#pullrequestreview-440976072", "createdAt": "2020-07-01T15:27:25Z", "commit": {"oid": "a8d9a14243014f9d71a3c5fcf736926ae2cc0a5c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3046, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}