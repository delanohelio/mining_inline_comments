{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxOTYxMTky", "number": 6694, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQxNToyNDoxNFrOEPxJ0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQxNjowODowMFrOEPxVng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0OTY5NDI2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/utils/StringUtil.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQxNToyNDoxNFrOGzo2_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQxNjowNjozM1rOGzpFKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc5OTk5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    while (newLength > 0 && Character.isWhitespace(s.charAt(newLength - 1))) {\n          \n          \n            \n                    while (newLength >= 0 && Character.isWhitespace(s.charAt(newLength - 1))) {\n          \n      \n    \n    \n  \n\n'>=' ? Just thinking, an rTrim of a fully whitespace string should return the empty string, so it should be valid to go all the way to zero? It appears substring only throws if endIndex is less than beginIndex so equal index values should work and empty string should be valid\nhttps://docs.oracle.com/javase/7/docs/api/java/lang/String.html#substring(int,%20int)", "url": "https://github.com/ankidroid/Anki-Android/pull/6694#discussion_r456799996", "createdAt": "2020-07-18T15:24:14Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/utils/StringUtil.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+\n+ This program is free software; you can redistribute it and/or modify it under\n+ the terms of the GNU General Public License as published by the Free Software\n+ Foundation; either version 3 of the License, or (at your option) any later\n+ version.\n+\n+ This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License along with\n+ this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+ */\n+\n+package com.ichi2.utils;\n+\n+import org.jetbrains.annotations.Contract;\n+\n+import androidx.annotation.Nullable;\n+\n+public class StringUtil {\n+\n+    /** Trims from the right hand side of a string */\n+    @Nullable\n+    @Contract(\"null -> null; !null -> !null\")\n+    public static String trimRight(@Nullable String s) {\n+        if (s == null) {\n+            return null;\n+        }\n+\n+        int newLength = s.length();\n+        while (newLength > 0 && Character.isWhitespace(s.charAt(newLength - 1))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8b222a044d209500934a6b923be0b73b440d4f5"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgwMjg0Mw==", "bodyText": "No, if the newLength is 0, then .charAt(newLength - 1) will crash, and the decrement operation will take the length to -1.\nBut, I'll add tests to prove it.", "url": "https://github.com/ankidroid/Anki-Android/pull/6694#discussion_r456802843", "createdAt": "2020-07-18T15:57:33Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/utils/StringUtil.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+\n+ This program is free software; you can redistribute it and/or modify it under\n+ the terms of the GNU General Public License as published by the Free Software\n+ Foundation; either version 3 of the License, or (at your option) any later\n+ version.\n+\n+ This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License along with\n+ this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+ */\n+\n+package com.ichi2.utils;\n+\n+import org.jetbrains.annotations.Contract;\n+\n+import androidx.annotation.Nullable;\n+\n+public class StringUtil {\n+\n+    /** Trims from the right hand side of a string */\n+    @Nullable\n+    @Contract(\"null -> null; !null -> !null\")\n+    public static String trimRight(@Nullable String s) {\n+        if (s == null) {\n+            return null;\n+        }\n+\n+        int newLength = s.length();\n+        while (newLength > 0 && Character.isWhitespace(s.charAt(newLength - 1))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc5OTk5Ng=="}, "originalCommit": {"oid": "e8b222a044d209500934a6b923be0b73b440d4f5"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgwMzYwNA==", "bodyText": "Done and re-pushed, No code changes in StringUtil", "url": "https://github.com/ankidroid/Anki-Android/pull/6694#discussion_r456803604", "createdAt": "2020-07-18T16:06:21Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/utils/StringUtil.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+\n+ This program is free software; you can redistribute it and/or modify it under\n+ the terms of the GNU General Public License as published by the Free Software\n+ Foundation; either version 3 of the License, or (at your option) any later\n+ version.\n+\n+ This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License along with\n+ this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+ */\n+\n+package com.ichi2.utils;\n+\n+import org.jetbrains.annotations.Contract;\n+\n+import androidx.annotation.Nullable;\n+\n+public class StringUtil {\n+\n+    /** Trims from the right hand side of a string */\n+    @Nullable\n+    @Contract(\"null -> null; !null -> !null\")\n+    public static String trimRight(@Nullable String s) {\n+        if (s == null) {\n+            return null;\n+        }\n+\n+        int newLength = s.length();\n+        while (newLength > 0 && Character.isWhitespace(s.charAt(newLength - 1))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc5OTk5Ng=="}, "originalCommit": {"oid": "e8b222a044d209500934a6b923be0b73b440d4f5"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgwMzYyNQ==", "bodyText": "oh of course - I was mentally trying to do the index (zero-based) vs length shifts but reasoned through it incorrectly. If newLength goes through at 1 and it's whitespace it will go to 0 in the loop, break the loop then substring 0 0 - I can see it", "url": "https://github.com/ankidroid/Anki-Android/pull/6694#discussion_r456803625", "createdAt": "2020-07-18T16:06:33Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/utils/StringUtil.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+\n+ This program is free software; you can redistribute it and/or modify it under\n+ the terms of the GNU General Public License as published by the Free Software\n+ Foundation; either version 3 of the License, or (at your option) any later\n+ version.\n+\n+ This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License along with\n+ this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+ */\n+\n+package com.ichi2.utils;\n+\n+import org.jetbrains.annotations.Contract;\n+\n+import androidx.annotation.Nullable;\n+\n+public class StringUtil {\n+\n+    /** Trims from the right hand side of a string */\n+    @Nullable\n+    @Contract(\"null -> null; !null -> !null\")\n+    public static String trimRight(@Nullable String s) {\n+        if (s == null) {\n+            return null;\n+        }\n+\n+        int newLength = s.length();\n+        while (newLength > 0 && Character.isWhitespace(s.charAt(newLength - 1))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc5OTk5Ng=="}, "originalCommit": {"oid": "e8b222a044d209500934a6b923be0b73b440d4f5"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0OTcyNDQ2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/test/java/com/ichi2/utils/StringUtilTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQxNjowODowMFrOGzpFmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQxNjowODowMFrOGzpFmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgwMzczNg==", "bodyText": "This is a questionable test as it tests implementation - but I think it's reasonable to assert to ensure there's no performance regressions", "url": "https://github.com/ankidroid/Anki-Android/pull/6694#discussion_r456803736", "createdAt": "2020-07-18T16:08:00Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/test/java/com/ichi2/utils/StringUtilTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+\n+ This program is free software; you can redistribute it and/or modify it under\n+ the terms of the GNU General Public License as published by the Free Software\n+ Foundation; either version 3 of the License, or (at your option) any later\n+ version.\n+\n+ This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License along with\n+ this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.utils;\n+\n+import org.junit.Test;\n+\n+import static com.ichi2.utils.StringUtil.trimRight;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.nullValue;\n+import static org.hamcrest.Matchers.sameInstance;\n+\n+public class StringUtilTest {\n+\n+    @Test\n+    public void trimRightNullIsSetToNull() {\n+        assertThat(trimRight(null), is(nullValue()));\n+    }\n+\n+    @Test\n+    public void trimRightWhiteSpaceIsBlankString() {\n+        assertThat(trimRight(\" \"), is(\"\"));\n+    }\n+\n+    @Test\n+    public void trimRightOnlyTrimsRight() {\n+        assertThat(trimRight(\" a \"), is(\" a\"));\n+    }\n+\n+    @Test\n+    public void trimRightDoesNothingOnTrimmedString() {\n+        String input = \" foo\";\n+        assertThat(trimRight(input), sameInstance(input));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c30e041b61d6f2ebdb4f842d542b3e14f53fa3a4"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4906, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}