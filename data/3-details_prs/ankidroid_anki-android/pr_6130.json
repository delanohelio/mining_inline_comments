{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MzY2MjAy", "number": 6130, "title": "Allow conditional field inside itself", "bodyText": "This corrects #6123. See the bug report discussion for more context.\nAnki up to 2.1.17 does not deal correctly with a conditional field\ncontaining the same conditional field. AnkiDroid didn't\neither. However, it still worked as long as all conditions evaluates\nto true, and broke only when a condition evaluates to False. If a\ncondition evaluated to False, an error message would be raised.\nI am copying back this rules. All evaluations to True still products\nthe same result as before. A conditional evaluated to False produce an\nerror message.\nI personally am not convinced at all that this is relevant. Saying\n\"you can used a conditional nested in the same conditional only when\nall conditionals evaluate to true\" is more confusing than saying that\nthis feature is not supported. However, as I'm not the maintainer and I\nbroke this feature, I correct it.\nHow Has This Been Tested?\nNot yet. Because the test of #6123 (comment) does not seem to be in code base yet, and it's not clear to me how to add a test.\nLearning (optional, can help others)\nIt was bad of me to assume that, because nested conditional does not work when a conditional fail, we don't allow them at all.\nChecklist\nPlease, go through these checks before submitting the PR.\n\n You have not changed whitespace unnecessarily (it makes diffs hard to read)\n You have a descriptive commit message with a short title (first line, max 50 chars).\n Your code follows the style of the project (e.g. never omit braces in if statements)\n You have commented your code, particularly in hard-to-understand areas\n You have performed a self-review of your own code", "createdAt": "2020-05-08T18:24:28Z", "url": "https://github.com/ankidroid/Anki-Android/pull/6130", "merged": true, "mergeCommit": {"oid": "354b6521324c2e8ada75fd81f8fa9687e249f8ac"}, "closed": true, "closedAt": "2020-05-10T02:49:00Z", "author": {"login": "Arthur-Milchior"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfWRUpAFqTQwODQzOTA5Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfu1nmAFqTQwODY5MTAxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NDM5MDkz", "url": "https://github.com/ankidroid/Anki-Android/pull/6130#pullrequestreview-408439093", "createdAt": "2020-05-08T18:34:34Z", "commit": {"oid": "3593822a82d195600e76e72ffcd7dce8c9344a7b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NDQwOTg0", "url": "https://github.com/ankidroid/Anki-Android/pull/6130#pullrequestreview-408440984", "createdAt": "2020-05-08T18:37:51Z", "commit": {"oid": "3593822a82d195600e76e72ffcd7dce8c9344a7b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6190a84d908054ba6982e57cda596c74c7b28a0e", "author": {"user": {"login": "mikehardy", "name": "Mike Hardy"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/6190a84d908054ba6982e57cda596c74c7b28a0e", "committedDate": "2020-05-08T18:52:23Z", "message": "Add unit test for template parsing"}, "afterCommit": {"oid": "c9ce008a58d21fb77e73073e03a7c887f8dddd30", "author": {"user": {"login": "mikehardy", "name": "Mike Hardy"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/c9ce008a58d21fb77e73073e03a7c887f8dddd30", "committedDate": "2020-05-08T19:09:56Z", "message": "Add template parsing unit test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9ce008a58d21fb77e73073e03a7c887f8dddd30", "author": {"user": {"login": "mikehardy", "name": "Mike Hardy"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/c9ce008a58d21fb77e73073e03a7c887f8dddd30", "committedDate": "2020-05-08T19:09:56Z", "message": "Add template parsing unit test"}, "afterCommit": {"oid": "63b6383d9a6a8832ef89ad3ad2bf341ae3a3402d", "author": {"user": {"login": "mikehardy", "name": "Mike Hardy"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/63b6383d9a6a8832ef89ad3ad2bf341ae3a3402d", "committedDate": "2020-05-08T19:32:27Z", "message": "Add template parsing unit test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63b6383d9a6a8832ef89ad3ad2bf341ae3a3402d", "author": {"user": {"login": "mikehardy", "name": "Mike Hardy"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/63b6383d9a6a8832ef89ad3ad2bf341ae3a3402d", "committedDate": "2020-05-08T19:32:27Z", "message": "Add template parsing unit test"}, "afterCommit": {"oid": "9c0c501aa5b29dacb1748655444c3b66cf166059", "author": {"user": {"login": "mikehardy", "name": "Mike Hardy"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/9c0c501aa5b29dacb1748655444c3b66cf166059", "committedDate": "2020-05-08T19:33:26Z", "message": "Add template parsing unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NDkzNTYy", "url": "https://github.com/ankidroid/Anki-Android/pull/6130#pullrequestreview-408493562", "createdAt": "2020-05-08T20:06:41Z", "commit": {"oid": "9c0c501aa5b29dacb1748655444c3b66cf166059"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMDowNjo0MVrOGSyDog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMDozODozM1rOGSy7ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0NzY4Mg==", "bodyText": "PERF: can this be modified so we're not calling StringBuffer.toString on each iteration?", "url": "https://github.com/ankidroid/Anki-Android/pull/6130#discussion_r422347682", "createdAt": "2020-05-08T20:06:41Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/template/Template.java", "diffHunk": "@@ -119,32 +119,60 @@ private void compile_regexps() {\n      * Expands sections.\n      */\n     private String render_sections(String template, Map<String, String> context) {\n-        StringBuffer sb = new StringBuffer();\n-        Matcher match = sSection_re.matcher(template);\n-        while (match.find()) {\n-            String section = match.group(0);\n-            String section_name = match.group(1);\n-            String inner = match.group(2);\n-            section_name = section_name.trim();\n-            String it = get_or_attr(context, section_name, null);\n-            String replacer = \"\";\n-            boolean field_is_empty = TextUtils.isEmpty(it);\n-\n-            if (!field_is_empty) {\n-                it = Utils.stripHTMLMedia(it).trim();\n-            }\n-            field_is_empty = TextUtils.isEmpty(it);\n-            if (!field_is_empty) {\n-                if (section.charAt(2) != '^') {\n+        /* Normally, after the inner loop, all conditionals have been\n+           evaluated.  There is a single exception, if a conditional\n+           starts in another conditional and is closed outside of\n+           it.\n+\n+           This can be the case in particular when\n+           \"{{#field}}A{{#field}}B{{/field}}C{{/field}}\", because the\n+           regexp find that the closing of the first opening is the\n+           first closing.  So the template gets transformed into\n+           either \"A{{#field}}BC{{/field}}\" or \"C{{/field}}\" depending\n+           on whether \"field\" has content or not.\n+\n+           We thus have the external loop which ensures that, in the\n+           first, the conditional is evaluated again and transformed\n+           into \"ABC\".\n+\n+           Note that having a conditional inside itself is not\n+           generally supported. It bugs when the conditional evaluates\n+           to False. Similarly having conditionals not properly nested\n+           is generally not supported either. So this outer loop will\n+           get the behaviour more confusing to user, as they may fail\n+           to understand why the code breaks only sometime. */\n+        boolean some_change;\n+        do {\n+            StringBuffer sb = new StringBuffer();\n+            some_change = false;\n+            Matcher match = sSection_re.matcher(template);\n+            while (match.find()) {\n+                some_change = true;\n+                String section = match.group(0);\n+                String section_name = match.group(1);\n+                String inner = match.group(2);\n+                section_name = section_name.trim();\n+                String it = get_or_attr(context, section_name, null);\n+                String replacer = \"\";\n+                boolean field_is_empty = TextUtils.isEmpty(it);\n+\n+                if (!field_is_empty) {\n+                    it = Utils.stripHTMLMedia(it).trim();\n+                }\n+                field_is_empty = TextUtils.isEmpty(it);\n+                if (!field_is_empty) {\n+                    if (section.charAt(2) != '^') {\n+                        replacer = render_sections(inner, context);\n+                    }\n+                } else if (field_is_empty && section.charAt(2) == '^') {\n                     replacer = render_sections(inner, context);\n                 }\n-            } else if (field_is_empty && section.charAt(2) == '^') {\n-                replacer = render_sections(inner, context);\n+                match.appendReplacement(sb, Matcher.quoteReplacement(replacer));\n             }\n-            match.appendReplacement(sb, Matcher.quoteReplacement(replacer));\n-        }\n-        match.appendTail(sb);\n-        return sb.toString();\n+            match.appendTail(sb);\n+            template = sb.toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c0c501aa5b29dacb1748655444c3b66cf166059"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM2MTk1Nw==", "bodyText": "Nit: Move up one line for clarity", "url": "https://github.com/ankidroid/Anki-Android/pull/6130#discussion_r422361957", "createdAt": "2020-05-08T20:38:33Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/template/Template.java", "diffHunk": "@@ -119,32 +119,60 @@ private void compile_regexps() {\n      * Expands sections.\n      */\n     private String render_sections(String template, Map<String, String> context) {\n-        StringBuffer sb = new StringBuffer();\n-        Matcher match = sSection_re.matcher(template);\n-        while (match.find()) {\n-            String section = match.group(0);\n-            String section_name = match.group(1);\n-            String inner = match.group(2);\n-            section_name = section_name.trim();\n-            String it = get_or_attr(context, section_name, null);\n-            String replacer = \"\";\n-            boolean field_is_empty = TextUtils.isEmpty(it);\n-\n-            if (!field_is_empty) {\n-                it = Utils.stripHTMLMedia(it).trim();\n-            }\n-            field_is_empty = TextUtils.isEmpty(it);\n-            if (!field_is_empty) {\n-                if (section.charAt(2) != '^') {\n+        /* Normally, after the inner loop, all conditionals have been\n+           evaluated.  There is a single exception, if a conditional\n+           starts in another conditional and is closed outside of\n+           it.\n+\n+           This can be the case in particular when\n+           \"{{#field}}A{{#field}}B{{/field}}C{{/field}}\", because the\n+           regexp find that the closing of the first opening is the\n+           first closing.  So the template gets transformed into\n+           either \"A{{#field}}BC{{/field}}\" or \"C{{/field}}\" depending\n+           on whether \"field\" has content or not.\n+\n+           We thus have the external loop which ensures that, in the\n+           first, the conditional is evaluated again and transformed\n+           into \"ABC\".\n+\n+           Note that having a conditional inside itself is not\n+           generally supported. It bugs when the conditional evaluates\n+           to False. Similarly having conditionals not properly nested\n+           is generally not supported either. So this outer loop will\n+           get the behaviour more confusing to user, as they may fail\n+           to understand why the code breaks only sometime. */\n+        boolean some_change;\n+        do {\n+            StringBuffer sb = new StringBuffer();\n+            some_change = false;\n+            Matcher match = sSection_re.matcher(template);\n+            while (match.find()) {\n+                some_change = true;\n+                String section = match.group(0);\n+                String section_name = match.group(1);\n+                String inner = match.group(2);\n+                section_name = section_name.trim();\n+                String it = get_or_attr(context, section_name, null);\n+                String replacer = \"\";\n+                boolean field_is_empty = TextUtils.isEmpty(it);\n+\n+                if (!field_is_empty) {\n+                    it = Utils.stripHTMLMedia(it).trim();\n+                }\n+                field_is_empty = TextUtils.isEmpty(it);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f9dd8480f017bf7476b722fdacca45f0df1f76"}, "originalPosition": 61}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9c0c501aa5b29dacb1748655444c3b66cf166059", "author": {"user": {"login": "mikehardy", "name": "Mike Hardy"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/9c0c501aa5b29dacb1748655444c3b66cf166059", "committedDate": "2020-05-08T19:33:26Z", "message": "Add template parsing unit test"}, "afterCommit": {"oid": "793136a6ead8961b338f2a390b61b8d181a6fa5f", "author": {"user": {"login": "mikehardy", "name": "Mike Hardy"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/793136a6ead8961b338f2a390b61b8d181a6fa5f", "committedDate": "2020-05-08T22:12:36Z", "message": "Add template parsing unit test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "793136a6ead8961b338f2a390b61b8d181a6fa5f", "author": {"user": {"login": "mikehardy", "name": "Mike Hardy"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/793136a6ead8961b338f2a390b61b8d181a6fa5f", "committedDate": "2020-05-08T22:12:36Z", "message": "Add template parsing unit test"}, "afterCommit": {"oid": "e1420a51e619e334797394a313fe4fb465ec1bac", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/e1420a51e619e334797394a313fe4fb465ec1bac", "committedDate": "2020-05-08T22:36:35Z", "message": "Apply render_sections until a fixpoint is reached.\n\nUsually, this should not be useful. Normally all conditionals are\nreplaced simultaneously, unless the template is so bad that computing\nsome conditional create some new conditional.\n\nAnyway, each call to render_some_section reduce the size of the string\nreturned, so it ends eventually. Note that the old code of Ankidroid\nalready also does a loop which waits for a fixpoint to occur. So it's\nsimilar to previous code; except that we try to do multiple change in\nthe same buffer to win time.\n\nThis corrects #6123.\n\nAnki up to 2.1.17 does not deal correctly with a conditional field\ncontaining the same conditional field. AnkiDroid didn't\neither. However, it still worked as long as all conditions evaluates\nto true, and broke only when a condition evaluates to False. If a\ncondition evaluated to False, an error message would be raised.\n\nI am copying back this rules. All evaluations to True still products\nthe same result as before. A conditional evaluated to False produce an\nerror message.\n\nI personally am not convinced at all that this is relevant. Saying\n\"you can used a conditional nested in the same conditional only when\nall conditionals evaluate to true\" is more confusing than saying that\nthis feature is not supported. However, as I'm not the maintener and I\nbroke this feature, I correct it."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e1420a51e619e334797394a313fe4fb465ec1bac", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/e1420a51e619e334797394a313fe4fb465ec1bac", "committedDate": "2020-05-08T22:36:35Z", "message": "Apply render_sections until a fixpoint is reached.\n\nUsually, this should not be useful. Normally all conditionals are\nreplaced simultaneously, unless the template is so bad that computing\nsome conditional create some new conditional.\n\nAnyway, each call to render_some_section reduce the size of the string\nreturned, so it ends eventually. Note that the old code of Ankidroid\nalready also does a loop which waits for a fixpoint to occur. So it's\nsimilar to previous code; except that we try to do multiple change in\nthe same buffer to win time.\n\nThis corrects #6123.\n\nAnki up to 2.1.17 does not deal correctly with a conditional field\ncontaining the same conditional field. AnkiDroid didn't\neither. However, it still worked as long as all conditions evaluates\nto true, and broke only when a condition evaluates to False. If a\ncondition evaluated to False, an error message would be raised.\n\nI am copying back this rules. All evaluations to True still products\nthe same result as before. A conditional evaluated to False produce an\nerror message.\n\nI personally am not convinced at all that this is relevant. Saying\n\"you can used a conditional nested in the same conditional only when\nall conditionals evaluate to true\" is more confusing than saying that\nthis feature is not supported. However, as I'm not the maintener and I\nbroke this feature, I correct it."}, "afterCommit": {"oid": "b0073e2d7ae5ab8ad22ad196e94195674642ab1a", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/b0073e2d7ae5ab8ad22ad196e94195674642ab1a", "committedDate": "2020-05-09T08:58:24Z", "message": "Apply render_sections until a fixpoint is reached.\n\nUsually, this should not be useful. Normally all conditionals are\nreplaced simultaneously, unless the template is so bad that computing\nsome conditional create some new conditional.\n\nAnyway, each call to render_some_section reduce the size of the string\nreturned, so it ends eventually. Note that the old code of Ankidroid\nalready also does a loop which waits for a fixpoint to occur. So it's\nsimilar to previous code; except that we try to do multiple change in\nthe same buffer to win time.\n\nThis corrects #6123.\n\nAnki up to 2.1.17 does not deal correctly with a conditional field\ncontaining the same conditional field. AnkiDroid didn't\neither. However, it still worked as long as all conditions evaluates\nto true, and broke only when a condition evaluates to False. If a\ncondition evaluated to False, an error message would be raised.\n\nI am copying back this rules. All evaluations to True still products\nthe same result as before. A conditional evaluated to False produce an\nerror message.\n\nI personally am not convinced at all that this is relevant. Saying\n\"you can used a conditional nested in the same conditional only when\nall conditionals evaluate to true\" is more confusing than saying that\nthis feature is not supported. However, as I'm not the maintener and I\nbroke this feature, I correct it."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b0073e2d7ae5ab8ad22ad196e94195674642ab1a", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/b0073e2d7ae5ab8ad22ad196e94195674642ab1a", "committedDate": "2020-05-09T08:58:24Z", "message": "Apply render_sections until a fixpoint is reached.\n\nUsually, this should not be useful. Normally all conditionals are\nreplaced simultaneously, unless the template is so bad that computing\nsome conditional create some new conditional.\n\nAnyway, each call to render_some_section reduce the size of the string\nreturned, so it ends eventually. Note that the old code of Ankidroid\nalready also does a loop which waits for a fixpoint to occur. So it's\nsimilar to previous code; except that we try to do multiple change in\nthe same buffer to win time.\n\nThis corrects #6123.\n\nAnki up to 2.1.17 does not deal correctly with a conditional field\ncontaining the same conditional field. AnkiDroid didn't\neither. However, it still worked as long as all conditions evaluates\nto true, and broke only when a condition evaluates to False. If a\ncondition evaluated to False, an error message would be raised.\n\nI am copying back this rules. All evaluations to True still products\nthe same result as before. A conditional evaluated to False produce an\nerror message.\n\nI personally am not convinced at all that this is relevant. Saying\n\"you can used a conditional nested in the same conditional only when\nall conditionals evaluate to true\" is more confusing than saying that\nthis feature is not supported. However, as I'm not the maintener and I\nbroke this feature, I correct it."}, "afterCommit": {"oid": "4380284fa634cedf6eccf0de80b0572a64192927", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/4380284fa634cedf6eccf0de80b0572a64192927", "committedDate": "2020-05-09T09:05:44Z", "message": "Apply render_sections until a fixpoint is reached.\n\nUsually, this should not be useful. Normally all conditionals are\nreplaced simultaneously, unless the template is so bad that computing\nsome conditional create some new conditional.\n\nAnyway, each call to render_some_section reduce the size of the string\nreturned, so it ends eventually. Note that the old code of Ankidroid\nalready also does a loop which waits for a fixpoint to occur. So it's\nsimilar to previous code; except that we try to do multiple change in\nthe same buffer to win time.\n\nThis corrects #6123.\n\nAnki up to 2.1.17 does not deal correctly with a conditional field\ncontaining the same conditional field. AnkiDroid didn't\neither. However, it still worked as long as all conditions evaluates\nto true, and broke only when a condition evaluates to False. If a\ncondition evaluated to False, an error message would be raised.\n\nI am copying back this rules. All evaluations to True still products\nthe same result as before. A conditional evaluated to False produce an\nerror message.\n\nI personally am not convinced at all that this is relevant. Saying\n\"you can used a conditional nested in the same conditional only when\nall conditionals evaluate to true\" is more confusing than saying that\nthis feature is not supported. However, as I'm not the maintener and I\nbroke this feature, I correct it."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4380284fa634cedf6eccf0de80b0572a64192927", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/4380284fa634cedf6eccf0de80b0572a64192927", "committedDate": "2020-05-09T09:05:44Z", "message": "Apply render_sections until a fixpoint is reached.\n\nUsually, this should not be useful. Normally all conditionals are\nreplaced simultaneously, unless the template is so bad that computing\nsome conditional create some new conditional.\n\nAnyway, each call to render_some_section reduce the size of the string\nreturned, so it ends eventually. Note that the old code of Ankidroid\nalready also does a loop which waits for a fixpoint to occur. So it's\nsimilar to previous code; except that we try to do multiple change in\nthe same buffer to win time.\n\nThis corrects #6123.\n\nAnki up to 2.1.17 does not deal correctly with a conditional field\ncontaining the same conditional field. AnkiDroid didn't\neither. However, it still worked as long as all conditions evaluates\nto true, and broke only when a condition evaluates to False. If a\ncondition evaluated to False, an error message would be raised.\n\nI am copying back this rules. All evaluations to True still products\nthe same result as before. A conditional evaluated to False produce an\nerror message.\n\nI personally am not convinced at all that this is relevant. Saying\n\"you can used a conditional nested in the same conditional only when\nall conditionals evaluate to true\" is more confusing than saying that\nthis feature is not supported. However, as I'm not the maintener and I\nbroke this feature, I correct it."}, "afterCommit": {"oid": "be2040601022c2a98eb710feaed82ca01bfd3b38", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/be2040601022c2a98eb710feaed82ca01bfd3b38", "committedDate": "2020-05-09T10:31:47Z", "message": "template: directly trim section name"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "be2040601022c2a98eb710feaed82ca01bfd3b38", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/be2040601022c2a98eb710feaed82ca01bfd3b38", "committedDate": "2020-05-09T10:31:47Z", "message": "template: directly trim section name"}, "afterCommit": {"oid": "310910d26751935b93a09837453f14e9f9125227", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/310910d26751935b93a09837453f14e9f9125227", "committedDate": "2020-05-09T10:44:31Z", "message": "template: directly trim section name"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "310910d26751935b93a09837453f14e9f9125227", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/310910d26751935b93a09837453f14e9f9125227", "committedDate": "2020-05-09T10:44:31Z", "message": "template: directly trim section name"}, "afterCommit": {"oid": "ca5049af50d415e26150ea4478064e2edca285a8", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/ca5049af50d415e26150ea4478064e2edca285a8", "committedDate": "2020-05-09T10:48:26Z", "message": "template: directly trim section name"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ca5049af50d415e26150ea4478064e2edca285a8", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/ca5049af50d415e26150ea4478064e2edca285a8", "committedDate": "2020-05-09T10:48:26Z", "message": "template: directly trim section name"}, "afterCommit": {"oid": "0d982b38731342fb640f55945123d7ca5db68b0b", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/0d982b38731342fb640f55945123d7ca5db68b0b", "committedDate": "2020-05-09T11:00:50Z", "message": "Do no do recursive call to render_sections\n\nThere were useful when the rendering was done in only a single read of\nthe template.\n\nNow that the template is read an arbitrary number of time, we know\nthat the inner templates will be discovered later. Reading a string to\nsearch a pattern in it is slow, this will ensure that the inner string\nis read only twice instead of thrice when it contains no conditional."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c749c930ec253b8c2d0df085dc91e16afd08fae8", "author": {"user": {"login": "mikehardy", "name": "Mike Hardy"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/c749c930ec253b8c2d0df085dc91e16afd08fae8", "committedDate": "2020-05-09T13:30:40Z", "message": "Add template parsing unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ef3d4442a35a5c065985a21c7cde272c2eb6d91", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/7ef3d4442a35a5c065985a21c7cde272c2eb6d91", "committedDate": "2020-05-09T13:30:40Z", "message": "Apply render_sections until a fixpoint is reached.\n\nUsually, this should not be useful. Normally all conditionals are\nreplaced simultaneously, unless the template is so bad that computing\nsome conditional create some new conditional.\n\nAnyway, each call to render_some_section reduce the size of the string\nreturned, so it ends eventually. Note that the old code of Ankidroid\nalready also does a loop which waits for a fixpoint to occur. So it's\nsimilar to previous code; except that we try to do multiple change in\nthe same buffer to win time.\n\nThis corrects #6123.\n\nAnki up to 2.1.17 does not deal correctly with a conditional field\ncontaining the same conditional field. AnkiDroid didn't\neither. However, it still worked as long as all conditions evaluates\nto true, and broke only when a condition evaluates to False. If a\ncondition evaluated to False, an error message would be raised.\n\nI am copying back this rules. All evaluations to True still products\nthe same result as before. A conditional evaluated to False produce an\nerror message.\n\nI personally am not convinced at all that this is relevant. Saying\n\"you can used a conditional nested in the same conditional only when\nall conditionals evaluate to true\" is more confusing than saying that\nthis feature is not supported. However, as I'm not the maintener and I\nbroke this feature, I correct it."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "284fd6a765f8625195c980beb5d0dc2b671562db", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/284fd6a765f8625195c980beb5d0dc2b671562db", "committedDate": "2020-05-09T13:30:40Z", "message": "Do no do recursive call to render_sections\n\nThere were useful when the rendering was done in only a single read of\nthe template.\n\nNow that the template is read an arbitrary number of time, we know\nthat the inner templates will be discovered later. Reading a string to\nsearch a pattern in it is slow, this will ensure that the inner string\nis read only twice instead of thrice when it contains no conditional."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0d982b38731342fb640f55945123d7ca5db68b0b", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/0d982b38731342fb640f55945123d7ca5db68b0b", "committedDate": "2020-05-09T11:00:50Z", "message": "Do no do recursive call to render_sections\n\nThere were useful when the rendering was done in only a single read of\nthe template.\n\nNow that the template is read an arbitrary number of time, we know\nthat the inner templates will be discovered later. Reading a string to\nsearch a pattern in it is slow, this will ensure that the inner string\nis read only twice instead of thrice when it contains no conditional."}, "afterCommit": {"oid": "284fd6a765f8625195c980beb5d0dc2b671562db", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/284fd6a765f8625195c980beb5d0dc2b671562db", "committedDate": "2020-05-09T13:30:40Z", "message": "Do no do recursive call to render_sections\n\nThere were useful when the rendering was done in only a single read of\nthe template.\n\nNow that the template is read an arbitrary number of time, we know\nthat the inner templates will be discovered later. Reading a string to\nsearch a pattern in it is slow, this will ensure that the inner string\nis read only twice instead of thrice when it contains no conditional."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjkwNjY5", "url": "https://github.com/ankidroid/Anki-Android/pull/6130#pullrequestreview-408690669", "createdAt": "2020-05-09T23:05:03Z", "commit": {"oid": "284fd6a765f8625195c980beb5d0dc2b671562db"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjkxMDE5", "url": "https://github.com/ankidroid/Anki-Android/pull/6130#pullrequestreview-408691019", "createdAt": "2020-05-09T23:11:56Z", "commit": {"oid": "284fd6a765f8625195c980beb5d0dc2b671562db"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3492, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}