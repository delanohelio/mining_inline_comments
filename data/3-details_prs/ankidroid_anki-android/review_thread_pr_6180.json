{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MjA0NTkz", "number": 6180, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOTo0MzoxN1rOD8n7cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMDoxNjowMlrOD8okug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODk1MzQ0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/template/Template.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOTo0MzoxN1rOGVrj_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOTo0MzoxN1rOGVrj_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4NzAwNw==", "bodyText": "Can you make this @Nullable", "url": "https://github.com/ankidroid/Anki-Android/pull/6180#discussion_r425387007", "createdAt": "2020-05-14T19:43:17Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/template/Template.java", "diffHunk": "@@ -161,17 +154,34 @@ private String render_some_sections(@NonNull String template, @NonNull Map<Strin\n         return sb.toString();\n     }\n \n+    /**\n+     * Expands all tags, iteratively until all tags (even tags that are replaced by tags) are resolved.\n+     */\n+    private String render_tags(@NonNull String template, @NonNull Map<String, String> context) {\n+        /* Apply render_some_tags to the tags, until\n+           render_some_tags states that it does not find tags to replace anymore\n+           anymore. Return the last template state */\n+        String previous_template = null;\n+        while (template != null) {\n+            previous_template = template;\n+            template = render_some_tags(template, context);\n+        }\n+        return previous_template;\n+    }\n \n     /**\n-     * Renders all the tags in a template for a context.\n+     * Replaces all the tags in a template in a single pass for the values in the given context map.\n      */\n-    private String render_tags(String template, Map<String, String> context) {\n-        if (template.indexOf(ALT_HANDLEBAR_DIRECTIVE) != -1) {\n+    private String render_some_tags(String template, Map<String, String> context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d944e2182b73625dea2dc79d28c7b5794046b1ee"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODk2NDU0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/template/Template.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOTo0NjozNFrOGVrq5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOTo0NjozNFrOGVrq5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4ODc3Mw==", "bodyText": "again, @Nullable", "url": "https://github.com/ankidroid/Anki-Android/pull/6180#discussion_r425388773", "createdAt": "2020-05-14T19:46:34Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/template/Template.java", "diffHunk": "@@ -59,38 +57,33 @@\n     private static final String sCtag = Pattern.quote(\"}}\");\n \n     // The regular expression used to find a #section\n-    private static final Pattern sSection_re = Pattern.compile(sOtag + \"[\\\\#|^]([^\\\\}]*)\" + sCtag + \"(.+?)\" + sOtag + \"/\\\\1\" + sCtag, Pattern.MULTILINE | Pattern.DOTALL);\n+    private static final Pattern sSection_re = Pattern.compile(sOtag + \"[#|^]([^}]*)\" + sCtag + \"(.+?)\" + sOtag + \"/\\\\1\" + sCtag, Pattern.MULTILINE | Pattern.DOTALL);\n \n     // The regular expression used to find a tag.\n-    private static final Pattern sTag_re = Pattern.compile(sOtag + \"(#|=|&|!|>|\\\\{)?(.+?)\\\\1?\" + sCtag + \"+\");\n+    private static final Pattern sTag_re = Pattern.compile(sOtag + \"([#=&!>{])?(.+?)\\\\1?\" + sCtag + \"+\");\n \n     // MathJax opening delimiters\n-    private static String sMathJaxOpenings[] = {\"\\\\(\", \"\\\\[\"};\n+    private static String[] sMathJaxOpenings = {\"\\\\(\", \"\\\\[\"};\n \n     // MathJax closing delimiters\n-    private static String sMathJaxClosings[] = {\"\\\\)\", \"\\\\]\"};\n+    private static String[] sMathJaxClosings = {\"\\\\)\", \"\\\\]\"};\n \n     private String mTemplate;\n     private Map<String, String> mContext;\n \n-    private static String ALT_HANDLEBAR_DIRECTIVE = \"{{=<% %>=}}\";\n \n     private static String get_or_attr(Map<String, String> obj, String name) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d944e2182b73625dea2dc79d28c7b5794046b1ee"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0OTA1OTE0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/template/Template.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMDoxNjowMlrOGVsndA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMTowMzoxNlrOGVuH1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQwNDI3Ng==", "bodyText": "I think that marking everything you can as final is a good practice.", "url": "https://github.com/ankidroid/Anki-Android/pull/6180#discussion_r425404276", "createdAt": "2020-05-14T20:16:02Z", "author": {"login": "mrozigor"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/template/Template.java", "diffHunk": "@@ -161,17 +154,34 @@ private String render_some_sections(@NonNull String template, @NonNull Map<Strin\n         return sb.toString();\n     }\n \n+    /**\n+     * Expands all tags, iteratively until all tags (even tags that are replaced by tags) are resolved.\n+     */\n+    private String render_tags(@NonNull String template, @NonNull Map<String, String> context) {\n+        /* Apply render_some_tags to the tags, until\n+           render_some_tags states that it does not find tags to replace anymore\n+           anymore. Return the last template state */\n+        String previous_template = null;\n+        while (template != null) {\n+            previous_template = template;\n+            template = render_some_tags(template, context);\n+        }\n+        return previous_template;\n+    }\n \n     /**\n-     * Renders all the tags in a template for a context.\n+     * Replaces all the tags in a template in a single pass for the values in the given context map.\n      */\n-    private String render_tags(String template, Map<String, String> context) {\n-        if (template.indexOf(ALT_HANDLEBAR_DIRECTIVE) != -1) {\n+    private String render_some_tags(String template, Map<String, String> context) {\n+        String ALT_HANDLEBAR_DIRECTIVE = \"{{=<% %>=}}\";\n+        if (template.contains(ALT_HANDLEBAR_DIRECTIVE)) {\n             template = template.replace(ALT_HANDLEBAR_DIRECTIVE, \"\").replace(\"<%\", \"{{\").replace(\"%>\", \"}}\");\n         }\n         StringBuffer sb = new StringBuffer();\n         Matcher match = sTag_re.matcher(template);\n+        boolean found = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d944e2182b73625dea2dc79d28c7b5794046b1ee"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQwODIxMQ==", "bodyText": "Not if you're going to modify it. As we do with this one, it's not a constant.", "url": "https://github.com/ankidroid/Anki-Android/pull/6180#discussion_r425408211", "createdAt": "2020-05-14T20:23:22Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/template/Template.java", "diffHunk": "@@ -161,17 +154,34 @@ private String render_some_sections(@NonNull String template, @NonNull Map<Strin\n         return sb.toString();\n     }\n \n+    /**\n+     * Expands all tags, iteratively until all tags (even tags that are replaced by tags) are resolved.\n+     */\n+    private String render_tags(@NonNull String template, @NonNull Map<String, String> context) {\n+        /* Apply render_some_tags to the tags, until\n+           render_some_tags states that it does not find tags to replace anymore\n+           anymore. Return the last template state */\n+        String previous_template = null;\n+        while (template != null) {\n+            previous_template = template;\n+            template = render_some_tags(template, context);\n+        }\n+        return previous_template;\n+    }\n \n     /**\n-     * Renders all the tags in a template for a context.\n+     * Replaces all the tags in a template in a single pass for the values in the given context map.\n      */\n-    private String render_tags(String template, Map<String, String> context) {\n-        if (template.indexOf(ALT_HANDLEBAR_DIRECTIVE) != -1) {\n+    private String render_some_tags(String template, Map<String, String> context) {\n+        String ALT_HANDLEBAR_DIRECTIVE = \"{{=<% %>=}}\";\n+        if (template.contains(ALT_HANDLEBAR_DIRECTIVE)) {\n             template = template.replace(ALT_HANDLEBAR_DIRECTIVE, \"\").replace(\"<%\", \"{{\").replace(\"%>\", \"}}\");\n         }\n         StringBuffer sb = new StringBuffer();\n         Matcher match = sTag_re.matcher(template);\n+        boolean found = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQwNDI3Ng=="}, "originalCommit": {"oid": "d944e2182b73625dea2dc79d28c7b5794046b1ee"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQyODk0OA==", "bodyText": "Sorry, didn't wrote that it was general idea - as I can see a lot of code could be altered with final ;) But that's just some minor tweaks.", "url": "https://github.com/ankidroid/Anki-Android/pull/6180#discussion_r425428948", "createdAt": "2020-05-14T21:03:16Z", "author": {"login": "mrozigor"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/template/Template.java", "diffHunk": "@@ -161,17 +154,34 @@ private String render_some_sections(@NonNull String template, @NonNull Map<Strin\n         return sb.toString();\n     }\n \n+    /**\n+     * Expands all tags, iteratively until all tags (even tags that are replaced by tags) are resolved.\n+     */\n+    private String render_tags(@NonNull String template, @NonNull Map<String, String> context) {\n+        /* Apply render_some_tags to the tags, until\n+           render_some_tags states that it does not find tags to replace anymore\n+           anymore. Return the last template state */\n+        String previous_template = null;\n+        while (template != null) {\n+            previous_template = template;\n+            template = render_some_tags(template, context);\n+        }\n+        return previous_template;\n+    }\n \n     /**\n-     * Renders all the tags in a template for a context.\n+     * Replaces all the tags in a template in a single pass for the values in the given context map.\n      */\n-    private String render_tags(String template, Map<String, String> context) {\n-        if (template.indexOf(ALT_HANDLEBAR_DIRECTIVE) != -1) {\n+    private String render_some_tags(String template, Map<String, String> context) {\n+        String ALT_HANDLEBAR_DIRECTIVE = \"{{=<% %>=}}\";\n+        if (template.contains(ALT_HANDLEBAR_DIRECTIVE)) {\n             template = template.replace(ALT_HANDLEBAR_DIRECTIVE, \"\").replace(\"<%\", \"{{\").replace(\"%>\", \"}}\");\n         }\n         StringBuffer sb = new StringBuffer();\n         Matcher match = sTag_re.matcher(template);\n+        boolean found = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQwNDI3Ng=="}, "originalCommit": {"oid": "d944e2182b73625dea2dc79d28c7b5794046b1ee"}, "originalPosition": 117}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 237, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}