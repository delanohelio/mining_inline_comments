{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4Mzg2Njgy", "number": 5820, "title": "Gracefully handle WebView Crashes", "bodyText": "Purpose / Description\nOut of Memory issues in the WebView Renderer (e.g. large fonts) were causing the application to crash and restart, going to the deck browser. This was listed as a soft crash in the bug report, but was actually killing the PID.\nIf a card fails once, we reset the WebView and try to render the card again.\nIf a card has not been rendered, or if the same card fails twice, we fail gracefully and return to the deck browser. We show a Toast to the user explaining that an OOM occurred.\nFixes\nFixes #5780\nApproach\nWe catch the OOM using onRenderProcessGone() (API >= 26) and recreate the WebView to allow the application to continue with minor disruption.\nHow Has This Been Tested?\nLocally on my Android device (Android 9). Placing crashWebViewRenderer() inside displayCardAnswer()\n\nA single failure recreates the WebView\nA second failure on the same card takes the user to the Deck Browser.\nA failure on a different card recreates the WebView.\n\nLearning (optional, can help others)\nStackOverflow example: https://stackoverflow.com/questions/46737984/onrenderprocessgonewebview-view-renderprocessgonedetail-detail-example\nAPI: https://developer.android.com/reference/android/webkit/WebViewClient#onRenderProcessGone(android.webkit.WebView,%20android.webkit.RenderProcessGoneDetail)\nhttps://developer.android.com/guide/webapps/managing-webview#termination-handle\nhttps://chromium.googlesource.com/chromium/src/+/master/android_webview/browser/aw_browser_terminator.cc#93\nChecklist\n\n[ x ] You have not changed whitespace unnecessarily (it makes diffs hard to read)\n[ x ] You have a descriptive commit message with a short title (first line, max 50 chars).\n[ x ] Your code follows the style of the project (e.g. never omit braces in if statements)\n[ x ] You have commented your code, particularly in hard-to-understand areas\n[ x ] You have performed a self-review of your own code\n\nReview Goals\n\nI'm unfamiliar with internationalisation. May have screwed up\nDo we need to do anything more to handle lower API levels?\ninflateNewView - doesn't feel like good code.\nWe currently use Toasts because they're easy, but they don't stay on the screen for long or have much room.\nlastCrashingCardId - may not be a perfect test.\nWe only report the failing card ID to the user. We could do better (not sure if out of scope).", "createdAt": "2020-03-14T18:06:35Z", "url": "https://github.com/ankidroid/Anki-Android/pull/5820", "merged": true, "mergeCommit": {"oid": "9c12b9aac281680e793b23cf32d1069dc7772a2d"}, "closed": true, "closedAt": "2020-03-16T20:48:11Z", "author": {"login": "david-allison-1"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcNpF5ngH2gAyMzg4Mzg2NjgyOjljYzAyNDRhNzIzYmZhYTI5Y2ExNjQ1ZGE4MTExNjBiMTQ3OWE3MTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOTO5CgFqTM3NTUyMDcxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9cc0244a723bfaa29ca1645da811160b1479a714", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/9cc0244a723bfaa29ca1645da811160b1479a714", "committedDate": "2020-03-14T18:19:39Z", "message": "Fix #5780 - WebView OOM Crashes Application\n\nOut of Memory issues in the WebView Renderer (e.g. large fonts)\nwere causing the application to crash and restart, going to the deck\nbrowser.\n\nWe catch the OOM using `onRenderProcessGone()` (API >= 26) and recreate\nthe WebView to allow the application to continue with minor disruption.\n\nIf a card has not been rendered, or if the same card fails twice, we\nfail gracefully and return to the deck browser."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "454b1f7446a18cfc06ab121ccbd8d610f158b8eb", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/454b1f7446a18cfc06ab121ccbd8d610f158b8eb", "committedDate": "2020-03-14T18:01:49Z", "message": "Fix #5780 - WebView OOM Crashes Application\n\nOut of Memory issues in the WebView Renderer (e.g. large fonts)\nwere causing the application to crash and restart, going to the deck\nbrowser.\n\nWe catch the OOM using `onRenderProcessGone()` (API >= 26) and recreate\nthe WebView to allow the application to continue with minor disruption.\n\nIf a card has not been rendered, or if the same card fails twice, we\nfail gracefully and return to the deck browser."}, "afterCommit": {"oid": "9cc0244a723bfaa29ca1645da811160b1479a714", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/9cc0244a723bfaa29ca1645da811160b1479a714", "committedDate": "2020-03-14T18:19:39Z", "message": "Fix #5780 - WebView OOM Crashes Application\n\nOut of Memory issues in the WebView Renderer (e.g. large fonts)\nwere causing the application to crash and restart, going to the deck\nbrowser.\n\nWe catch the OOM using `onRenderProcessGone()` (API >= 26) and recreate\nthe WebView to allow the application to continue with minor disruption.\n\nIf a card has not been rendered, or if the same card fails twice, we\nfail gracefully and return to the deck browser."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NzQ4MTg1", "url": "https://github.com/ankidroid/Anki-Android/pull/5820#pullrequestreview-374748185", "createdAt": "2020-03-14T19:21:48Z", "commit": {"oid": "9cc0244a723bfaa29ca1645da811160b1479a714"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxOToyMTo0OFrOF2bKwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxOToyMTo0OFrOF2bKwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYxMjU0NQ==", "bodyText": "\"The application's implementation of this callback should only attempt to clean up the specific WebView given as a parameter, and should not assume that other WebView instances are affected\" doesn't that mean that we can return true? And the right log level would be information?", "url": "https://github.com/ankidroid/Anki-Android/pull/5820#discussion_r392612545", "createdAt": "2020-03-14T19:21:48Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -1541,12 +1554,107 @@ public void onPageFinished(WebView view, String url) {\n                 drawMark();\n                 view.loadUrl(\"javascript:onPageFinished();\");\n             }\n+\n+            /** Fix: #5780 - WebView Renderer OOM crashes reviewer */\n+            @Override\n+            @TargetApi(Build.VERSION_CODES.O)\n+            public boolean onRenderProcessGone(WebView view, RenderProcessGoneDetail detail) {\n+\n+                if (mCard == null || !mCard.equals(view)) {\n+                    //A view crashed that wasn't ours. Unexpected.\n+                    Timber.wtf(\"Unexpected WebView Renderer terminated. Crashed: %b\",  detail.didCrash());\n+                    return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cc0244a723bfaa29ca1645da811160b1479a714"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2253e1e76f7fe681422ba9d91627630efb208af8", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/2253e1e76f7fe681422ba9d91627630efb208af8", "committedDate": "2020-03-14T21:22:14Z", "message": "Review: Don't crash on unrelated render failure\n\nDocumentation states we should not try to clean up unrelated instances\nof WebViews.\n\nReturning false will cause a crash. Therefore return true to state\nthat we don't need to crash."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e0d75c35a4f1a64acadd7ae74a15910dc1626f7", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/9e0d75c35a4f1a64acadd7ae74a15910dc1626f7", "committedDate": "2020-03-16T17:14:13Z", "message": "Converted WebView crash error dialog to toast\n\nIt was an error which showed the card details (id). It's best to allow\nthe user to explicitly dismiss it, as they may want to screenshot the\ndetails."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a27ebde6b94c94ca8b38dcf1e4a45317a691f245", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/a27ebde6b94c94ca8b38dcf1e4a45317a691f245", "committedDate": "2020-03-16T17:17:29Z", "message": "WebView Render crash: Additional fix\n\nSometimes, even after writing a handler, the application crashed.\n\nI believe that the C++ counts Java references when determining what to\ncheck when a WebView process dies. We perform a GC to ensure these are\ncleaned up by the time te C++ executes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2f090db7d59eaf5f81f1734867df00e51aca107", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/e2f090db7d59eaf5f81f1734867df00e51aca107", "committedDate": "2020-03-16T17:20:15Z", "message": "NF: Fix Typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NDcxMzk2", "url": "https://github.com/ankidroid/Anki-Android/pull/5820#pullrequestreview-375471396", "createdAt": "2020-03-16T18:14:20Z", "commit": {"oid": "e2f090db7d59eaf5f81f1734867df00e51aca107"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODoxNDoyMFrOF3AZ5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODoxNzoxNFrOF3Aghw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIyMjYyOA==", "bodyText": "Since you return in the other branch of the if, the else seems unnecessary - I have a preference to not use an else in these cases. What I'd prefer is to have the logic that is in the else currently moved out (deleting the else) and a comment that positively asserts the state allowing us to continue executing, e.g. \"If we got here, it's a recoverable crash and the first time on this card, attempt to re-display\", followed by the logic", "url": "https://github.com/ankidroid/Anki-Android/pull/5820#discussion_r393222628", "createdAt": "2020-03-16T18:14:20Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -1541,12 +1554,124 @@ public void onPageFinished(WebView view, String url) {\n                 drawMark();\n                 view.loadUrl(\"javascript:onPageFinished();\");\n             }\n+\n+            /** Fix: #5780 - WebView Renderer OOM crashes reviewer */\n+            @Override\n+            @TargetApi(Build.VERSION_CODES.O)\n+            public boolean onRenderProcessGone(WebView view, RenderProcessGoneDetail detail) {\n+\n+                if (mCard == null || !mCard.equals(view)) {\n+                    //A view crashed that wasn't ours.\n+                    //We have nothing to handle. Returning false is a desire to crash, so return true.\n+                    Timber.i(\"Unrelated WebView Renderer terminated. Crashed: %b\",  detail.didCrash());\n+                    return true;\n+                }\n+\n+                Timber.e(\"WebView Renderer process terminated. Crashed: %b\",  detail.didCrash());\n+\n+                //Destroy the current WebView (to ensure WebView is GCed).\n+                //Otherwise, we get the following error:\n+                //\"crash wasn't handled by all associated webviews, triggering application crash\"\n+                destroyWebView(mCard);\n+                ViewGroup parent = (ViewGroup) mCardFrame.getParent();\n+                parent.removeView(mCardFrame);\n+                mCard = null;\n+                mCardFrame = null;\n+                //Even with the above, I occasionally saw the above error. Manually trigger the GC.\n+                //I'll keep this line unless I see another crash, which would point to another underlying issue.\n+                System.gc();\n+\n+                //We only want to show one message per branch.\n+\n+                //It's not necessarily an OOM crash, false implies a general code which is for \"system terminated\".\n+                int errorCauseId = detail.didCrash() ? R.string.webview_crash_unknown : R.string.webview_crash_oom;\n+                String errorCauseString = getResources().getString(errorCauseId);\n+\n+                if (!canRecoverFromWebViewRendererCrash()) {\n+                    Timber.e(\"Unrecoverable WebView Render crash\");\n+                    String errorMessage = getResources().getString(R.string.webview_crash_fatal, errorCauseString);\n+                    UIUtils.showThemedToast(AbstractFlashcardViewer.this, errorMessage, false);\n+                    finishWithoutAnimation();\n+                    return true;\n+                }\n+\n+                if (webViewRendererLastCrashedOnCard(mCurrentCard.getId())) {\n+                    Timber.e(\"Web Renderer crash loop on card: %d\", mCurrentCard.getId());\n+                    displayRenderLoopDialog(mCurrentCard, detail);\n+                    return true;\n+                } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f090db7d59eaf5f81f1734867df00e51aca107"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIyMzQ3NQ==", "bodyText": "Logs will only tell if you include a log, seems like a Timber.w might apply here as we think we can recover but it is unexpected / unwanted state?", "url": "https://github.com/ankidroid/Anki-Android/pull/5820#discussion_r393223475", "createdAt": "2020-03-16T18:15:40Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -1541,12 +1554,124 @@ public void onPageFinished(WebView view, String url) {\n                 drawMark();\n                 view.loadUrl(\"javascript:onPageFinished();\");\n             }\n+\n+            /** Fix: #5780 - WebView Renderer OOM crashes reviewer */\n+            @Override\n+            @TargetApi(Build.VERSION_CODES.O)\n+            public boolean onRenderProcessGone(WebView view, RenderProcessGoneDetail detail) {\n+\n+                if (mCard == null || !mCard.equals(view)) {\n+                    //A view crashed that wasn't ours.\n+                    //We have nothing to handle. Returning false is a desire to crash, so return true.\n+                    Timber.i(\"Unrelated WebView Renderer terminated. Crashed: %b\",  detail.didCrash());\n+                    return true;\n+                }\n+\n+                Timber.e(\"WebView Renderer process terminated. Crashed: %b\",  detail.didCrash());\n+\n+                //Destroy the current WebView (to ensure WebView is GCed).\n+                //Otherwise, we get the following error:\n+                //\"crash wasn't handled by all associated webviews, triggering application crash\"\n+                destroyWebView(mCard);\n+                ViewGroup parent = (ViewGroup) mCardFrame.getParent();\n+                parent.removeView(mCardFrame);\n+                mCard = null;\n+                mCardFrame = null;\n+                //Even with the above, I occasionally saw the above error. Manually trigger the GC.\n+                //I'll keep this line unless I see another crash, which would point to another underlying issue.\n+                System.gc();\n+\n+                //We only want to show one message per branch.\n+\n+                //It's not necessarily an OOM crash, false implies a general code which is for \"system terminated\".\n+                int errorCauseId = detail.didCrash() ? R.string.webview_crash_unknown : R.string.webview_crash_oom;\n+                String errorCauseString = getResources().getString(errorCauseId);\n+\n+                if (!canRecoverFromWebViewRendererCrash()) {\n+                    Timber.e(\"Unrecoverable WebView Render crash\");\n+                    String errorMessage = getResources().getString(R.string.webview_crash_fatal, errorCauseString);\n+                    UIUtils.showThemedToast(AbstractFlashcardViewer.this, errorMessage, false);\n+                    finishWithoutAnimation();\n+                    return true;\n+                }\n+\n+                if (webViewRendererLastCrashedOnCard(mCurrentCard.getId())) {\n+                    Timber.e(\"Web Renderer crash loop on card: %d\", mCurrentCard.getId());\n+                    displayRenderLoopDialog(mCurrentCard, detail);\n+                    return true;\n+                } else {\n+                    // This logic may need to be better defined. The card could have changed by the time we get here.\n+                    lastCrashingCardId = mCurrentCard.getId();\n+                }\n+\n+                String nonFatalError = getResources().getString(R.string.webview_crash_nonfatal, errorCauseString);\n+                UIUtils.showThemedToast(AbstractFlashcardViewer.this, nonFatalError, false);\n+\n+                //inflate a new instance of mCardFrame\n+                mCardFrame = inflateNewView(R.id.flashcard);\n+                parent.addView(mCardFrame);\n+\n+                recreateWebView();\n+                displayCardQuestion();\n+\n+                //We handled the crash and can continue.\n+                return true;\n+            }\n+\n+\n+            @TargetApi(Build.VERSION_CODES.O)\n+            private void displayRenderLoopDialog(Card mCurrentCard, RenderProcessGoneDetail detail) {\n+                String cardInformation = Long.toString(mCurrentCard.getId());\n+                Resources res = getResources();\n+\n+                String errorDetails = detail.didCrash()\n+                        ? res.getString(R.string.webview_crash_unknwon_detailed)\n+                        : res.getString(R.string.webview_crash_oom_details);\n+                new MaterialDialog.Builder(AbstractFlashcardViewer.this)\n+                        .title(res.getString(R.string.webview_crash_loop_dialog_title))\n+                        .content(res.getString(R.string.webview_crash_loop_dialog_content, cardInformation, errorDetails))\n+                        .positiveText(R.string.dialog_ok)\n+                        .onPositive((materialDialog, dialogAction) -> finishWithoutAnimation())\n+                        .show();\n+            }\n         });\n         // Set transparent color to prevent flashing white when night mode enabled\n         webView.setBackgroundColor(Color.argb(1, 0, 0, 0));\n         return webView;\n     }\n \n+    private boolean webViewRendererLastCrashedOnCard(long cardId) {\n+        return lastCrashingCardId != null && lastCrashingCardId == cardId;\n+    }\n+\n+\n+    private boolean canRecoverFromWebViewRendererCrash() {\n+        // DEFECT\n+        // If we don't have a card to render, we're in a bad state. The class doesn't currently track state\n+        // well enough to be able to know exactly where we are in the initialisation pipeline.\n+        // so it's best to mark the crash as non-recoverable.\n+        // We should fix this, but it's very unlikely that we'll ever get here. Logs will tell", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f090db7d59eaf5f81f1734867df00e51aca107"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIyNDMyNw==", "bodyText": "I'm not sure you intend for this line to remain here? seems like it would crash any time we showed answer, and is likely just for local testing?", "url": "https://github.com/ankidroid/Anki-Android/pull/5820#discussion_r393224327", "createdAt": "2020-03-16T18:17:14Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -2026,6 +2155,7 @@ protected String cleanTypedAnswer(String answer) {\n \n     protected void displayCardAnswer() {\n         Timber.d(\"displayCardAnswer()\");\n+        crashWebViewRenderer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f090db7d59eaf5f81f1734867df00e51aca107"}, "originalPosition": 181}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c8f145a9cc0e2d30d6e3de456e714db71475e73", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/2c8f145a9cc0e2d30d6e3de456e714db71475e73", "committedDate": "2020-03-16T18:31:34Z", "message": "Fix accidental testing code insertion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e748b1895b6372c85033c75dee0036436006084", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/8e748b1895b6372c85033c75dee0036436006084", "committedDate": "2020-03-16T18:33:47Z", "message": "Review Change: Coding style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NTIwNzEy", "url": "https://github.com/ankidroid/Anki-Android/pull/5820#pullrequestreview-375520712", "createdAt": "2020-03-16T19:25:29Z", "commit": {"oid": "8e748b1895b6372c85033c75dee0036436006084"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3706, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}