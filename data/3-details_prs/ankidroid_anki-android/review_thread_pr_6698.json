{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyMzMwNTU1", "number": 6698, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMTozNzozNlrOEP2KTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMTo0NjozOFrOEP2NcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDUxNDY4OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/androidTest/java/com/ichi2/anki/tests/ContentProviderTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMTozNzozNlrOGzu0Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMzo1NjoyNFrOGzvsYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5NzYyMg==", "bodyText": "cardCount or numberOfCards would be better here: nb is ambiguous", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456897622", "createdAt": "2020-07-19T11:37:36Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/androidTest/java/com/ichi2/anki/tests/ContentProviderTest.java", "diffHunk": "@@ -246,7 +246,7 @@ public void testInsertAndRemoveNote() {\n         JSONObject model = col.getModels().get(mModelId);\n         assertNotNull(\"Check model\", model);\n         int expectedNumCards = model.getJSONArray(\"tmpls\").length();\n-        assertEquals(\"Check that correct number of cards generated\", expectedNumCards, addedNote.cards().size());\n+        assertEquals(\"Check that correct number of cards generated\", expectedNumCards, addedNote.nbCards());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b30fab79133957b1c005e699bc46530f8729b871"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMTk2OQ==", "bodyText": "Done", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456911969", "createdAt": "2020-07-19T13:56:24Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/androidTest/java/com/ichi2/anki/tests/ContentProviderTest.java", "diffHunk": "@@ -246,7 +246,7 @@ public void testInsertAndRemoveNote() {\n         JSONObject model = col.getModels().get(mModelId);\n         assertNotNull(\"Check model\", model);\n         int expectedNumCards = model.getJSONArray(\"tmpls\").length();\n-        assertEquals(\"Check that correct number of cards generated\", expectedNumCards, addedNote.cards().size());\n+        assertEquals(\"Check that correct number of cards generated\", expectedNumCards, addedNote.nbCards());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5NzYyMg=="}, "originalCommit": {"oid": "b30fab79133957b1c005e699bc46530f8729b871"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDUxNTQ1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMTozODo0N1rOGzu0vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMzo1MzowNlrOGzvqzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5NzcyNQ==", "bodyText": "You don't need an order by here.", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456897725", "createdAt": "2020-07-19T11:38:47Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -151,17 +151,32 @@ public String joinedFields() {\n     }\n \n \n+    public int nbCards() {\n+        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ? ORDER BY ord\", new Object[]{mId});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b30fab79133957b1c005e699bc46530f8729b871"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMTU2NQ==", "bodyText": "Nice catch. I copied/pasted", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456911565", "createdAt": "2020-07-19T13:53:06Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -151,17 +151,32 @@ public String joinedFields() {\n     }\n \n \n+    public int nbCards() {\n+        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ? ORDER BY ord\", new Object[]{mId});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5NzcyNQ=="}, "originalCommit": {"oid": "b30fab79133957b1c005e699bc46530f8729b871"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDUxNzMzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMTo0MDo1MFrOGzu1og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxNDoxMDowMlrOGzvyVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5Nzk1NA==", "bodyText": "Comment this as being inefficient", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456897954", "createdAt": "2020-07-19T11:40:50Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -151,17 +151,32 @@ public String joinedFields() {\n     }\n \n \n+    public int nbCards() {\n+        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ? ORDER BY ord\", new Object[]{mId});\n+    }\n+\n+    public ArrayList<Long> cids() {\n+        return mCol.getDb().queryColumn(Long.class, \"SELECT id FROM cards WHERE nid = ? ORDER BY ord\", 0,\n+                new Object[]{mId});\n+    }\n+\n     public ArrayList<Card> cards() {\n         ArrayList<Card> cards = new ArrayList<>();\n-        try (Cursor cur = mCol.getDb().getDatabase()\n-                .query(\"SELECT id FROM cards WHERE nid = \" + mId + \" ORDER BY ord\", null)) {\n-            while (cur.moveToNext()) {\n-                cards.add(mCol.getCard(cur.getLong(0)));\n+        try {\n+            for (long cid : cids()) {\n+                cards.add(mCol.getCard(cid));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b30fab79133957b1c005e699bc46530f8729b871"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMTY5OQ==", "bodyText": "why inneficient ?\u00a0It seems to be essentially the same thing than the previous code. It loops over a list, I don't see what can be done to do it more efficiently without creating a function loadAListOfCard", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456911699", "createdAt": "2020-07-19T13:54:31Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -151,17 +151,32 @@ public String joinedFields() {\n     }\n \n \n+    public int nbCards() {\n+        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ? ORDER BY ord\", new Object[]{mId});\n+    }\n+\n+    public ArrayList<Long> cids() {\n+        return mCol.getDb().queryColumn(Long.class, \"SELECT id FROM cards WHERE nid = ? ORDER BY ord\", 0,\n+                new Object[]{mId});\n+    }\n+\n     public ArrayList<Card> cards() {\n         ArrayList<Card> cards = new ArrayList<>();\n-        try (Cursor cur = mCol.getDb().getDatabase()\n-                .query(\"SELECT id FROM cards WHERE nid = \" + mId + \" ORDER BY ord\", null)) {\n-            while (cur.moveToNext()) {\n-                cards.add(mCol.getCard(cur.getLong(0)));\n+        try {\n+            for (long cid : cids()) {\n+                cards.add(mCol.getCard(cid));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5Nzk1NA=="}, "originalCommit": {"oid": "b30fab79133957b1c005e699bc46530f8729b871"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMjE1Mg==", "bodyText": "Previous code was also inefficient - database access in a loop", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456912152", "createdAt": "2020-07-19T13:58:00Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -151,17 +151,32 @@ public String joinedFields() {\n     }\n \n \n+    public int nbCards() {\n+        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ? ORDER BY ord\", new Object[]{mId});\n+    }\n+\n+    public ArrayList<Long> cids() {\n+        return mCol.getDb().queryColumn(Long.class, \"SELECT id FROM cards WHERE nid = ? ORDER BY ord\", 0,\n+                new Object[]{mId});\n+    }\n+\n     public ArrayList<Card> cards() {\n         ArrayList<Card> cards = new ArrayList<>();\n-        try (Cursor cur = mCol.getDb().getDatabase()\n-                .query(\"SELECT id FROM cards WHERE nid = \" + mId + \" ORDER BY ord\", null)) {\n-            while (cur.moveToNext()) {\n-                cards.add(mCol.getCard(cur.getLong(0)));\n+        try {\n+            for (long cid : cids()) {\n+                cards.add(mCol.getCard(cid));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5Nzk1NA=="}, "originalCommit": {"oid": "b30fab79133957b1c005e699bc46530f8729b871"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMzQ5Mg==", "bodyText": "Commented. If it is not up to your taste,\u00a0I'll let you rewrite a message about ineficiency", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456913492", "createdAt": "2020-07-19T14:10:02Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -151,17 +151,32 @@ public String joinedFields() {\n     }\n \n \n+    public int nbCards() {\n+        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ? ORDER BY ord\", new Object[]{mId});\n+    }\n+\n+    public ArrayList<Long> cids() {\n+        return mCol.getDb().queryColumn(Long.class, \"SELECT id FROM cards WHERE nid = ? ORDER BY ord\", 0,\n+                new Object[]{mId});\n+    }\n+\n     public ArrayList<Card> cards() {\n         ArrayList<Card> cards = new ArrayList<>();\n-        try (Cursor cur = mCol.getDb().getDatabase()\n-                .query(\"SELECT id FROM cards WHERE nid = \" + mId + \" ORDER BY ord\", null)) {\n-            while (cur.moveToNext()) {\n-                cards.add(mCol.getCard(cur.getLong(0)));\n+        try {\n+            for (long cid : cids()) {\n+                cards.add(mCol.getCard(cid));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5Nzk1NA=="}, "originalCommit": {"oid": "b30fab79133957b1c005e699bc46530f8729b871"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDUxOTE4OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMTo0MzoxN1rOGzu2lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMzo1NToyMlrOGzvr6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5ODE5Nw==", "bodyText": "The try with resources previously expanded to a try...finally:\npseudojava:\nCursor cur = null;\ntry {\n    cur = mCol.getDb().getDatabase().query(\"SELECT id FROM cards WHERE nid = \" + mId + \" ORDER BY ord\", null);\n} finally {\n   if (cur != null) {\n      cur.destroy();\n   }\n}\nThere's no catch in the block, and one shouldn't be added here as it swallows the exception.", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456898197", "createdAt": "2020-07-19T11:43:17Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -151,17 +151,32 @@ public String joinedFields() {\n     }\n \n \n+    public int nbCards() {\n+        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ? ORDER BY ord\", new Object[]{mId});\n+    }\n+\n+    public ArrayList<Long> cids() {\n+        return mCol.getDb().queryColumn(Long.class, \"SELECT id FROM cards WHERE nid = ? ORDER BY ord\", 0,\n+                new Object[]{mId});\n+    }\n+\n     public ArrayList<Card> cards() {\n         ArrayList<Card> cards = new ArrayList<>();\n-        try (Cursor cur = mCol.getDb().getDatabase()\n-                .query(\"SELECT id FROM cards WHERE nid = \" + mId + \" ORDER BY ord\", null)) {\n-            while (cur.moveToNext()) {\n-                cards.add(mCol.getCard(cur.getLong(0)));\n+        try {\n+            for (long cid : cids()) {\n+                cards.add(mCol.getCard(cid));\n             }\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b30fab79133957b1c005e699bc46530f8729b871"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMDg4MA==", "bodyText": "Oh, thanks, I thought it was meant to catch an exception. I'll correct", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456910880", "createdAt": "2020-07-19T13:46:26Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -151,17 +151,32 @@ public String joinedFields() {\n     }\n \n \n+    public int nbCards() {\n+        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ? ORDER BY ord\", new Object[]{mId});\n+    }\n+\n+    public ArrayList<Long> cids() {\n+        return mCol.getDb().queryColumn(Long.class, \"SELECT id FROM cards WHERE nid = ? ORDER BY ord\", 0,\n+                new Object[]{mId});\n+    }\n+\n     public ArrayList<Card> cards() {\n         ArrayList<Card> cards = new ArrayList<>();\n-        try (Cursor cur = mCol.getDb().getDatabase()\n-                .query(\"SELECT id FROM cards WHERE nid = \" + mId + \" ORDER BY ord\", null)) {\n-            while (cur.moveToNext()) {\n-                cards.add(mCol.getCard(cur.getLong(0)));\n+        try {\n+            for (long cid : cids()) {\n+                cards.add(mCol.getCard(cid));\n             }\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5ODE5Nw=="}, "originalCommit": {"oid": "b30fab79133957b1c005e699bc46530f8729b871"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMTg1MA==", "bodyText": "Done", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456911850", "createdAt": "2020-07-19T13:55:22Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -151,17 +151,32 @@ public String joinedFields() {\n     }\n \n \n+    public int nbCards() {\n+        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ? ORDER BY ord\", new Object[]{mId});\n+    }\n+\n+    public ArrayList<Long> cids() {\n+        return mCol.getDb().queryColumn(Long.class, \"SELECT id FROM cards WHERE nid = ? ORDER BY ord\", 0,\n+                new Object[]{mId});\n+    }\n+\n     public ArrayList<Card> cards() {\n         ArrayList<Card> cards = new ArrayList<>();\n-        try (Cursor cur = mCol.getDb().getDatabase()\n-                .query(\"SELECT id FROM cards WHERE nid = \" + mId + \" ORDER BY ord\", null)) {\n-            while (cur.moveToNext()) {\n-                cards.add(mCol.getCard(cur.getLong(0)));\n+        try {\n+            for (long cid : cids()) {\n+                cards.add(mCol.getCard(cid));\n             }\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5ODE5Nw=="}, "originalCommit": {"oid": "b30fab79133957b1c005e699bc46530f8729b871"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDUyMDgxOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/test/java/com/ichi2/anki/CardBrowserTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMTo0NDo1OVrOGzu3Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMzo0Njo0NVrOGzvoRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5ODM5NA==", "bodyText": "Likely not worth it, but firstCid() could be optimised", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456898394", "createdAt": "2020-07-19T11:44:59Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/CardBrowserTest.java", "diffHunk": "@@ -246,7 +246,7 @@ public void flagValueIsShownOnCard() {\n         Note n = addNoteUsingBasicModel(\"1\", \"back\");\n         flagCardForNote(n, 1);\n \n-        long cardId = n.cards().get(0).getId();\n+        long cardId = n.cids().get(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b30fab79133957b1c005e699bc46530f8729b871"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMDkxNw==", "bodyText": "I did check and it's used only once, so I\u00a0don't believe it's worth it.", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456910917", "createdAt": "2020-07-19T13:46:45Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/CardBrowserTest.java", "diffHunk": "@@ -246,7 +246,7 @@ public void flagValueIsShownOnCard() {\n         Note n = addNoteUsingBasicModel(\"1\", \"back\");\n         flagCardForNote(n, 1);\n \n-        long cardId = n.cards().get(0).getId();\n+        long cardId = n.cids().get(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5ODM5NA=="}, "originalCommit": {"oid": "b30fab79133957b1c005e699bc46530f8729b871"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDUyMjcyOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMTo0NjozOFrOGzu4Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMzo1NTozM1rOGzvsBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5ODYzMA==", "bodyText": "Optional: we might want to stay consistent with cards()\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public ArrayList<Long> cids() {\n          \n          \n            \n                public List<Long> cids() {", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456898630", "createdAt": "2020-07-19T11:46:38Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -151,17 +151,32 @@ public String joinedFields() {\n     }\n \n \n+    public int nbCards() {\n+        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ? ORDER BY ord\", new Object[]{mId});\n+    }\n+\n+    public ArrayList<Long> cids() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b30fab79133957b1c005e699bc46530f8729b871"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMTg3Nw==", "bodyText": "Done", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456911877", "createdAt": "2020-07-19T13:55:33Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -151,17 +151,32 @@ public String joinedFields() {\n     }\n \n \n+    public int nbCards() {\n+        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ? ORDER BY ord\", new Object[]{mId});\n+    }\n+\n+    public ArrayList<Long> cids() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5ODYzMA=="}, "originalCommit": {"oid": "b30fab79133957b1c005e699bc46530f8729b871"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4925, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}