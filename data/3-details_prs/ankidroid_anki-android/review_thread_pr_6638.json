{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NDkzOTk1", "number": 6638, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwMTozOTozMVrOELg_3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwMTozOTozMVrOELg_3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNTEwNDI4OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwMTozOTozMVrOGtGj9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwMTozOTozMVrOGtGj9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0NjYxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                deckName = deckName + \"+\";\n          \n          \n            \n                                deckName += \"+\";", "url": "https://github.com/ankidroid/Anki-Android/pull/6638#discussion_r449946615", "createdAt": "2020-07-06T01:39:31Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -885,44 +885,48 @@ private void _checkDeckTree() {\n         boolean correction = false;\n \n         for (JSONObject deck: decks) {\n+            String deckName = deck.getString(\"name\");\n             // ensure no sections are blank\n-            if (\"\".equals(deck.getString(\"name\"))) {\n+            if (\"\".equals(deckName)) {\n                 Timber.i(\"Fix deck with empty name\");\n+                deckName = \"blank\";\n                 deck.put(\"name\", \"blank\");\n                 save(deck);\n                 correction = true;\n             }\n \n-            if (deck.getString(\"name\").indexOf(\"::::\") != -1) {\n+            if (deckName.indexOf(\"::::\") != -1) {\n                 Timber.i(\"fix deck with missing sections %s\", deck.getString(\"name\"));\n                 do {\n-                    deck.put(\"name\", deck.getString(\"name\").replace(\"::::\", \"::blank::\"));\n+                    deckName = deck.getString(\"name\").replace(\"::::\", \"::blank::\");\n                     // We may need to iterate, in order to replace \"::::::\" and adding to \"blank\" in it.\n-                } while (deck.getString(\"name\").indexOf(\"::::\") != -1);\n+                } while (deckName.indexOf(\"::::\") != -1);\n+                deck.put(\"name\", deckName);\n                 save(deck);\n                 correction = true;\n             }\n \n             // two decks with the same name?\n-            if (names.containsKey(normalizeName(deck.getString(\"name\")))) {\n-                Timber.i(\"fix duplicate deck name %s\", deck.getString(\"name\"));\n+            if (names.containsKey(normalizeName(deckName))) {\n+                Timber.i(\"fix duplicate deck name %s\", deckName);\n                 do {\n-                    deck.put(\"name\", deck.getString(\"name\") + \"+\");\n-                } while (names.containsKey(normalizeName(deck.getString(\"name\"))));\n+                    deckName = deckName + \"+\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf53a8be62fe51de85492dacbb539bc5ca1b938d"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 101, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}