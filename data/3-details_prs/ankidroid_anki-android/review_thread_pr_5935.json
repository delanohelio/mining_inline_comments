{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5MTc4Mjk3", "number": 5935, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzowMTo1N1rOEIDnmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzowNToxNFrOEIDsBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODgzMzUyOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzowMTo1N1rOGnycSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzowMTo1N1rOGnycSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM3NDA4OA==", "bodyText": "Should follow convention for member variables\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private HashMap<String, JSONObject> nameMap;\n          \n          \n            \n                private HashMap<String, JSONObject> mNameMap;", "url": "https://github.com/ankidroid/Anki-Android/pull/5935#discussion_r444374088", "createdAt": "2020-06-23T17:01:57Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -138,6 +139,7 @@\n     private Collection mCol;\n     private HashMap<Long, JSONObject> mDecks;\n     private HashMap<Long, JSONObject> mDconf;\n+    private HashMap<String, JSONObject> nameMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "940df5aa513638a61667b3b77e7b43a096bba8af"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODg0NDg3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzowNToxNFrOGnyj1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzozNjoyM1rOGnzqMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM3NjAyMg==", "bodyText": "I really don't like asserts unless absolutely necessary as they are basically saying \"crash right here\"\nIs there any way to recover from this error? If not - if the data is too corrupt at this point and there is no way to reason about app state, okay\nBut if there is a return value we could send here I'd rather do that.\nI fear this might be a \"crash here\" case, but every single time I see an Assert I will force this inspection, as putting \"crash right here\" code in the app should never be done with out checking a few times.", "url": "https://github.com/ankidroid/Anki-Android/pull/5935#discussion_r444376022", "createdAt": "2020-06-23T17:05:14Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -430,26 +434,69 @@ public JSONObject get(long did, boolean _default) {\n      * Get deck with NAME, ignoring case.\n      */\n     @CheckResult\n-    public @Nullable JSONObject byName(String name) {\n-        for (JSONObject m : mDecks.values()) {\n-            if (equalName(m.getString(\"name\"),name)) {\n-                return m;\n-            }\n+    public JSONObject byName(String name) {\n+        String normalized = normalizeName(name);\n+        JSONObject deck = nameMap.get(normalized);\n+        if (deck == null) {\n+            return null;\n         }\n-        return null;\n+        String deckName = deck.getString(\"name\");\n+        Assert.that(equalName(name, deckName),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "940df5aa513638a61667b3b77e7b43a096bba8af"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM4NDc4OA==", "bodyText": "I'm okay with removing the assert. It was nice having it while I tested this PR, because if anything did not go as expected it would crash (and actually, it had been the case while I was testing this feature), but once I'm confident that everything works, there is no reason to test the assertion I believe", "url": "https://github.com/ankidroid/Anki-Android/pull/5935#discussion_r444384788", "createdAt": "2020-06-23T17:20:16Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -430,26 +434,69 @@ public JSONObject get(long did, boolean _default) {\n      * Get deck with NAME, ignoring case.\n      */\n     @CheckResult\n-    public @Nullable JSONObject byName(String name) {\n-        for (JSONObject m : mDecks.values()) {\n-            if (equalName(m.getString(\"name\"),name)) {\n-                return m;\n-            }\n+    public JSONObject byName(String name) {\n+        String normalized = normalizeName(name);\n+        JSONObject deck = nameMap.get(normalized);\n+        if (deck == null) {\n+            return null;\n         }\n-        return null;\n+        String deckName = deck.getString(\"name\");\n+        Assert.that(equalName(name, deckName),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM3NjAyMg=="}, "originalCommit": {"oid": "940df5aa513638a61667b3b77e7b43a096bba8af"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM4NjM5MA==", "bodyText": "If it is not mandatory then perhaps the same logic test, but with a sendExceptionReport and return null instead? You'll get your diagnostics but the app should recover?", "url": "https://github.com/ankidroid/Anki-Android/pull/5935#discussion_r444386390", "createdAt": "2020-06-23T17:22:53Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -430,26 +434,69 @@ public JSONObject get(long did, boolean _default) {\n      * Get deck with NAME, ignoring case.\n      */\n     @CheckResult\n-    public @Nullable JSONObject byName(String name) {\n-        for (JSONObject m : mDecks.values()) {\n-            if (equalName(m.getString(\"name\"),name)) {\n-                return m;\n-            }\n+    public JSONObject byName(String name) {\n+        String normalized = normalizeName(name);\n+        JSONObject deck = nameMap.get(normalized);\n+        if (deck == null) {\n+            return null;\n         }\n-        return null;\n+        String deckName = deck.getString(\"name\");\n+        Assert.that(equalName(name, deckName),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM3NjAyMg=="}, "originalCommit": {"oid": "940df5aa513638a61667b3b77e7b43a096bba8af"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM5NDAzNQ==", "bodyText": "Done", "url": "https://github.com/ankidroid/Anki-Android/pull/5935#discussion_r444394035", "createdAt": "2020-06-23T17:36:23Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -430,26 +434,69 @@ public JSONObject get(long did, boolean _default) {\n      * Get deck with NAME, ignoring case.\n      */\n     @CheckResult\n-    public @Nullable JSONObject byName(String name) {\n-        for (JSONObject m : mDecks.values()) {\n-            if (equalName(m.getString(\"name\"),name)) {\n-                return m;\n-            }\n+    public JSONObject byName(String name) {\n+        String normalized = normalizeName(name);\n+        JSONObject deck = nameMap.get(normalized);\n+        if (deck == null) {\n+            return null;\n         }\n-        return null;\n+        String deckName = deck.getString(\"name\");\n+        Assert.that(equalName(name, deckName),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM3NjAyMg=="}, "originalCommit": {"oid": "940df5aa513638a61667b3b77e7b43a096bba8af"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 508, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}