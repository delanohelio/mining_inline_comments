{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NjAwODY2", "number": 6526, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMTowNzowNFrOEHY3Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMjoyMjoxNlrOEHZG4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTgyODMxOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMTowNzowNFrOGmuQbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMToyNToyOVrOGmuVvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1Njk0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } else if (deckDueTreeNode.getChildren().size() == 0 && getCol().cardCount(new Long[]{did}) == 0) {\n          \n          \n            \n                    } else if (!deckDueTreeNode.hasChildren() && getCol().cardCount(new Long[]{did}) == 0) {", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443256940", "createdAt": "2020-06-21T21:07:04Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2076,7 +2076,7 @@ private void handleDeckSelection(long did, boolean dontSkipStudyOptions) {\n         } else if (getCol().getDecks().isDyn(did)) {\n             // Go to the study options screen if filtered deck with no cards to study\n             openStudyOptions(false);\n-        } else if (deckDueTreeNode.children.size() == 0 && getCol().cardCount(new Long[]{did}) == 0) {\n+        } else if (deckDueTreeNode.getChildren().size() == 0 && getCol().cardCount(new Long[]{did}) == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "065f1d1da9fd609d0edae2a113226f21f61ed039"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1ODMwMA==", "bodyText": "Done", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443258300", "createdAt": "2020-06-21T21:25:29Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2076,7 +2076,7 @@ private void handleDeckSelection(long did, boolean dontSkipStudyOptions) {\n         } else if (getCol().getDecks().isDyn(did)) {\n             // Go to the study options screen if filtered deck with no cards to study\n             openStudyOptions(false);\n-        } else if (deckDueTreeNode.children.size() == 0 && getCol().cardCount(new Long[]{did}) == 0) {\n+        } else if (deckDueTreeNode.getChildren().size() == 0 && getCol().cardCount(new Long[]{did}) == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1Njk0MA=="}, "originalCommit": {"oid": "065f1d1da9fd609d0edae2a113226f21f61ed039"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTgyODUzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/widgets/DeckAdapter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMTowNzozMFrOGmuQiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMTowNzozMFrOGmuQiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1Njk3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (node.getChildren().size() > 0) {\n          \n          \n            \n                    if (node.hasChildren()) {", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443256971", "createdAt": "2020-06-21T21:07:30Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/widgets/DeckAdapter.java", "diffHunk": "@@ -177,38 +177,38 @@ public void onBindViewHolder(ViewHolder holder, int position) {\n             deckLayout.setPadding(normalPadding, 0, rightPadding, 0);\n         }\n \n-        if (node.children.size() > 0) {\n-            holder.deckExpander.setTag(node.did);\n+        if (node.getChildren().size() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "065f1d1da9fd609d0edae2a113226f21f61ed039"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTgyODgzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/widgets/DeckAdapter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMTowODowMlrOGmuQsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMTozMDoxNlrOGmuW6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1NzAwOA==", "bodyText": "Optional: could factor this into hasNewCards()", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443257008", "createdAt": "2020-06-21T21:08:02Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/widgets/DeckAdapter.java", "diffHunk": "@@ -177,38 +177,38 @@ public void onBindViewHolder(ViewHolder holder, int position) {\n             deckLayout.setPadding(normalPadding, 0, rightPadding, 0);\n         }\n \n-        if (node.children.size() > 0) {\n-            holder.deckExpander.setTag(node.did);\n+        if (node.getChildren().size() > 0) {\n+            holder.deckExpander.setTag(node.getDid());\n             holder.deckExpander.setOnClickListener(mDeckExpanderClickListener);\n         } else {\n             holder.deckExpander.setOnClickListener(null);\n         }\n         holder.deckLayout.setBackgroundResource(mRowCurrentDrawable);\n         // Set background colour. The current deck has its own color\n-        if (node.did == mCol.getDecks().current().optLong(\"id\")) {\n+        if (node.getDid() == mCol.getDecks().current().optLong(\"id\")) {\n             holder.deckLayout.setBackgroundResource(mRowCurrentDrawable);\n         } else {\n             CompatHelper.getCompat().setSelectableBackground(holder.deckLayout);\n         }\n         // Set deck name and colour. Filtered decks have their own colour\n-        holder.deckName.setText(node.names[0]);\n-        if (mCol.getDecks().isDyn(node.did)) {\n+        holder.deckName.setText(node.getSubdeckName());\n+        if (mCol.getDecks().isDyn(node.getDid())) {\n             holder.deckName.setTextColor(mDeckNameDynColor);\n         } else {\n             holder.deckName.setTextColor(mDeckNameDefaultColor);\n         }\n \n         // Set the card counts and their colors\n-        holder.deckNew.setText(String.valueOf(node.newCount));\n-        holder.deckNew.setTextColor((node.newCount == 0) ? mZeroCountColor : mNewCountColor);\n-        holder.deckLearn.setText(String.valueOf(node.lrnCount));\n-        holder.deckLearn.setTextColor((node.lrnCount == 0) ? mZeroCountColor : mLearnCountColor);\n-        holder.deckRev.setText(String.valueOf(node.revCount));\n-        holder.deckRev.setTextColor((node.revCount == 0) ? mZeroCountColor : mReviewCountColor);\n+        holder.deckNew.setText(String.valueOf(node.getNewCount()));\n+        holder.deckNew.setTextColor((node.getNewCount() == 0) ? mZeroCountColor : mNewCountColor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "065f1d1da9fd609d0edae2a113226f21f61ed039"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1ODYwMQ==", "bodyText": "It seems that it would not be used anywhere else, so I don't see a reason to do it", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443258601", "createdAt": "2020-06-21T21:30:16Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/widgets/DeckAdapter.java", "diffHunk": "@@ -177,38 +177,38 @@ public void onBindViewHolder(ViewHolder holder, int position) {\n             deckLayout.setPadding(normalPadding, 0, rightPadding, 0);\n         }\n \n-        if (node.children.size() > 0) {\n-            holder.deckExpander.setTag(node.did);\n+        if (node.getChildren().size() > 0) {\n+            holder.deckExpander.setTag(node.getDid());\n             holder.deckExpander.setOnClickListener(mDeckExpanderClickListener);\n         } else {\n             holder.deckExpander.setOnClickListener(null);\n         }\n         holder.deckLayout.setBackgroundResource(mRowCurrentDrawable);\n         // Set background colour. The current deck has its own color\n-        if (node.did == mCol.getDecks().current().optLong(\"id\")) {\n+        if (node.getDid() == mCol.getDecks().current().optLong(\"id\")) {\n             holder.deckLayout.setBackgroundResource(mRowCurrentDrawable);\n         } else {\n             CompatHelper.getCompat().setSelectableBackground(holder.deckLayout);\n         }\n         // Set deck name and colour. Filtered decks have their own colour\n-        holder.deckName.setText(node.names[0]);\n-        if (mCol.getDecks().isDyn(node.did)) {\n+        holder.deckName.setText(node.getSubdeckName());\n+        if (mCol.getDecks().isDyn(node.getDid())) {\n             holder.deckName.setTextColor(mDeckNameDynColor);\n         } else {\n             holder.deckName.setTextColor(mDeckNameDefaultColor);\n         }\n \n         // Set the card counts and their colors\n-        holder.deckNew.setText(String.valueOf(node.newCount));\n-        holder.deckNew.setTextColor((node.newCount == 0) ? mZeroCountColor : mNewCountColor);\n-        holder.deckLearn.setText(String.valueOf(node.lrnCount));\n-        holder.deckLearn.setTextColor((node.lrnCount == 0) ? mZeroCountColor : mLearnCountColor);\n-        holder.deckRev.setText(String.valueOf(node.revCount));\n-        holder.deckRev.setTextColor((node.revCount == 0) ? mZeroCountColor : mReviewCountColor);\n+        holder.deckNew.setText(String.valueOf(node.getNewCount()));\n+        holder.deckNew.setTextColor((node.getNewCount() == 0) ? mZeroCountColor : mNewCountColor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1NzAwOA=="}, "originalCommit": {"oid": "065f1d1da9fd609d0edae2a113226f21f61ed039"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTgyODkzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/widgets/DeckAdapter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMTowODoyMlrOGmuQyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMTowODoyMlrOGmuQyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1NzAzMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } else if (node.getChildren().size() > 0) {\n          \n          \n            \n                    } else if (node.hasChildren()) {", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443257032", "createdAt": "2020-06-21T21:08:22Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/widgets/DeckAdapter.java", "diffHunk": "@@ -223,19 +223,19 @@ public int getItemCount() {\n \n \n     private void setDeckExpander(ImageButton expander, ImageButton indent, Sched.DeckDueTreeNode node){\n-        boolean collapsed = mCol.getDecks().get(node.did).optBoolean(\"collapsed\", false);\n+        boolean collapsed = mCol.getDecks().get(node.getDid()).optBoolean(\"collapsed\", false);\n         // Apply the correct expand/collapse drawable\n         if (collapsed) {\n             expander.setImageDrawable(mExpandImage);\n             expander.setContentDescription(expander.getContext().getString(R.string.expand));\n-        } else if (node.children.size() > 0) {\n+        } else if (node.getChildren().size() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "065f1d1da9fd609d0edae2a113226f21f61ed039"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTgyOTE0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/widgets/DeckAdapter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMTowOTowM1rOGmuQ5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMTozMjoxM1rOGmuXiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1NzA2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (node.getDid() == 1 && nodes.size() > 1 && node.getChildren().size() == 0) {\n          \n          \n            \n                        if (node.isDefaultDeck() && nodes.size() > 1 && !node.hasChildren()) {", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443257063", "createdAt": "2020-06-21T21:09:03Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/widgets/DeckAdapter.java", "diffHunk": "@@ -249,30 +249,30 @@ private void processNodes(List<Sched.DeckDueTreeNode> nodes, int depth) {\n         for (Sched.DeckDueTreeNode node : nodes) {\n             // If the default deck is empty, hide it by not adding it to the deck list.\n             // We don't hide it if it's the only deck or if it has sub-decks.\n-            if (node.did == 1 && nodes.size() > 1 && node.children.size() == 0) {\n+            if (node.getDid() == 1 && nodes.size() > 1 && node.getChildren().size() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "065f1d1da9fd609d0edae2a113226f21f61ed039"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1ODc2MQ==", "bodyText": "isDefaultDeck would be used only once. I don't see the point.\nLet's state it otherway, if I were to create a \"Deck\" class which simply represents a deck object, I would agree with you. As this idea was rejected, I am not going to try it again", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443258761", "createdAt": "2020-06-21T21:32:13Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/widgets/DeckAdapter.java", "diffHunk": "@@ -249,30 +249,30 @@ private void processNodes(List<Sched.DeckDueTreeNode> nodes, int depth) {\n         for (Sched.DeckDueTreeNode node : nodes) {\n             // If the default deck is empty, hide it by not adding it to the deck list.\n             // We don't hide it if it's the only deck or if it has sub-decks.\n-            if (node.did == 1 && nodes.size() > 1 && node.children.size() == 0) {\n+            if (node.getDid() == 1 && nodes.size() > 1 && node.getChildren().size() == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1NzA2Mw=="}, "originalCommit": {"oid": "065f1d1da9fd609d0edae2a113226f21f61ed039"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTgzMDI1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMToxMDo1MlrOGmuRdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMTo1Njo0N1rOGmueEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1NzIwNg==", "bodyText": "\u26a0\ufe0f  This has been changed from names[0] to names.length - 1 in some places. I don't feel this is correct, but I haven't read the context of the code.", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443257206", "createdAt": "2020-06-21T21:10:52Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java", "diffHunk": "@@ -231,7 +231,51 @@ public int compareTo(Object other) {\n         @Override\n         public String toString() {\n             return String.format(Locale.US, \"%s, %d, %d, %d, %d, %d, %s\",\n-                    Arrays.toString(names), did, depth, revCount, lrnCount, newCount, children);\n+                    Arrays.toString(mName), mDid, mDepth, mRevCount, mLrnCount, mNewCount, mChildren);\n+        }\n+\n+        public String[] getName() {\n+            return mName;\n+        }\n+\n+        public String getNamePart(int part) {\n+            return mName[part];\n+        }\n+\n+        public String getSubdeckName() {\n+            return mName[mName.length - 1];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "065f1d1da9fd609d0edae2a113226f21f61ed039"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1OTc0OA==", "bodyText": "I tried to explain the reason for this change in the commit were it was introduced. Currently, \"names\" has plenty of different meanings through the run. I find it extremely ugly. While it is relatively correct in upstream, because DeckDueTreeNode has a very specific usage, what is done in AnkiDroid, using it in CardContentProvider makes no sens.\nWhen the object is created, name is an array with a single element, the whole deck name. I.e. {\"A::B::C\"}.\nThen, the name is splitted during the computation, and it becomes an array of part of the deck name. I.e. {\"A\", \"B\", \"C\"}\nThen, each part of the name is removed from the array, starting by the top level deck part. I.e. {\"B\", \"C\"} (the node is then moved and declared to be a child of A), and then {\"C\"} (the node is then moved and declared to be a child of B, which is a child of A. At least assuming A::B exists)\nWhen \"getSubdeckName\" is called, the array always contain a single element, so mName[0] and mName[mName.length - 1] are both correct. However, the value of mName[0] is \"A::B::C\", \"A\", \"B\" and finally \"C\" at the end of the run, which means that mName[0] is an incorect definition most of the time.\nAll of those discussion does not really matter as long as you keep the code as it is.\nHowever, in order to have some code which make sens, my bigger PR state that:\n\nwe are going to save the full name and the array with the splitted name in two different final variables\ninstead of removing all elements of the array one by one (which is extremely inneficient by the way) we are just going to loop through the array's element (really, a single index, starting at 0 and increasing from 0 to the array size works just as well !)\nto get the sub deck part, (i.e. the name displayed in the deck picker) we'll just get the last part of the array", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443259748", "createdAt": "2020-06-21T21:46:21Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java", "diffHunk": "@@ -231,7 +231,51 @@ public int compareTo(Object other) {\n         @Override\n         public String toString() {\n             return String.format(Locale.US, \"%s, %d, %d, %d, %d, %d, %s\",\n-                    Arrays.toString(names), did, depth, revCount, lrnCount, newCount, children);\n+                    Arrays.toString(mName), mDid, mDepth, mRevCount, mLrnCount, mNewCount, mChildren);\n+        }\n+\n+        public String[] getName() {\n+            return mName;\n+        }\n+\n+        public String getNamePart(int part) {\n+            return mName[part];\n+        }\n+\n+        public String getSubdeckName() {\n+            return mName[mName.length - 1];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1NzIwNg=="}, "originalCommit": {"oid": "065f1d1da9fd609d0edae2a113226f21f61ed039"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2MDAxNA==", "bodyText": "Okay, I'll go back and look in more detail", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443260014", "createdAt": "2020-06-21T21:50:26Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java", "diffHunk": "@@ -231,7 +231,51 @@ public int compareTo(Object other) {\n         @Override\n         public String toString() {\n             return String.format(Locale.US, \"%s, %d, %d, %d, %d, %d, %s\",\n-                    Arrays.toString(names), did, depth, revCount, lrnCount, newCount, children);\n+                    Arrays.toString(mName), mDid, mDepth, mRevCount, mLrnCount, mNewCount, mChildren);\n+        }\n+\n+        public String[] getName() {\n+            return mName;\n+        }\n+\n+        public String getNamePart(int part) {\n+            return mName[part];\n+        }\n+\n+        public String getSubdeckName() {\n+            return mName[mName.length - 1];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1NzIwNg=="}, "originalCommit": {"oid": "065f1d1da9fd609d0edae2a113226f21f61ed039"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2MDQzMw==", "bodyText": "Thanks", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443260433", "createdAt": "2020-06-21T21:56:47Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java", "diffHunk": "@@ -231,7 +231,51 @@ public int compareTo(Object other) {\n         @Override\n         public String toString() {\n             return String.format(Locale.US, \"%s, %d, %d, %d, %d, %d, %s\",\n-                    Arrays.toString(names), did, depth, revCount, lrnCount, newCount, children);\n+                    Arrays.toString(mName), mDid, mDepth, mRevCount, mLrnCount, mNewCount, mChildren);\n+        }\n+\n+        public String[] getName() {\n+            return mName;\n+        }\n+\n+        public String getNamePart(int part) {\n+            return mName[part];\n+        }\n+\n+        public String getSubdeckName() {\n+            return mName[mName.length - 1];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1NzIwNg=="}, "originalCommit": {"oid": "065f1d1da9fd609d0edae2a113226f21f61ed039"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTgzMDU2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMToxMTozOVrOGmuRoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMTozMzo1OFrOGmuYCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1NzI0OQ==", "bodyText": "Needs updating", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443257249", "createdAt": "2020-06-21T21:11:39Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java", "diffHunk": "@@ -178,30 +178,30 @@\n      * this field and use names[0] for those cases.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "065f1d1da9fd609d0edae2a113226f21f61ed039"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1ODg5MQ==", "bodyText": "Done", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443258891", "createdAt": "2020-06-21T21:33:58Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java", "diffHunk": "@@ -178,30 +178,30 @@\n      * this field and use names[0] for those cases.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1NzI0OQ=="}, "originalCommit": {"oid": "065f1d1da9fd609d0edae2a113226f21f61ed039"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTgzMDkzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMToxMjoxNFrOGmuR1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMToyODoxMFrOGmuWZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1NzMwMA==", "bodyText": "Maybe factor this into a method", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443257300", "createdAt": "2020-06-21T21:12:14Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -433,7 +433,7 @@ protected int _walkingCount(LimitMethod limFn, CountMethod cntFn) {\n     private List<DeckDueTreeNode> _groupChildren(List<DeckDueTreeNode> grps) {\n         // first, split the group names into components\n         for (DeckDueTreeNode g : grps) {\n-            g.names = Decks.path(g.names[0]);\n+            g.setNames(Decks.path(g.getNamePart(0)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "065f1d1da9fd609d0edae2a113226f21f61ed039"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1ODE2OA==", "bodyText": "I could. However, \"getNamePart(0)\" disappear in the remaining of the big PR. So this would be counter productive", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443258168", "createdAt": "2020-06-21T21:23:51Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -433,7 +433,7 @@ protected int _walkingCount(LimitMethod limFn, CountMethod cntFn) {\n     private List<DeckDueTreeNode> _groupChildren(List<DeckDueTreeNode> grps) {\n         // first, split the group names into components\n         for (DeckDueTreeNode g : grps) {\n-            g.names = Decks.path(g.names[0]);\n+            g.setNames(Decks.path(g.getNamePart(0)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1NzMwMA=="}, "originalCommit": {"oid": "065f1d1da9fd609d0edae2a113226f21f61ed039"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1ODQ3MQ==", "bodyText": "Good with me!", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443258471", "createdAt": "2020-06-21T21:28:10Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -433,7 +433,7 @@ protected int _walkingCount(LimitMethod limFn, CountMethod cntFn) {\n     private List<DeckDueTreeNode> _groupChildren(List<DeckDueTreeNode> grps) {\n         // first, split the group names into components\n         for (DeckDueTreeNode g : grps) {\n-            g.names = Decks.path(g.names[0]);\n+            g.setNames(Decks.path(g.getNamePart(0)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1NzMwMA=="}, "originalCommit": {"oid": "065f1d1da9fd609d0edae2a113226f21f61ed039"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTg0MDg2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/provider/CardContentProvider.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMToyOTo1OFrOGmuWyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMzowODoxNlrOGmuxoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1ODU3MQ==", "bodyText": "Flagging change", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443258571", "createdAt": "2020-06-21T21:29:58Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/provider/CardContentProvider.java", "diffHunk": "@@ -373,8 +373,8 @@ public Cursor query(Uri uri, String[] projection, String selection, String[] sel\n                 String[] columns = ((projection != null) ? projection : FlashCardsContract.Deck.DEFAULT_PROJECTION);\n                 MatrixCursor rv = new MatrixCursor(columns, allDecks.size());\n                 for (Sched.DeckDueTreeNode deck : allDecks) {\n-                    long id = deck.did;\n-                    String name = deck.names[0];\n+                    long id = deck.getDid();\n+                    String name = deck.getSubdeckName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d81ebff9e4d120cc2599535279a2470e33bb4020"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2MTA2NQ==", "bodyText": "I believe this changes functionality.\nCould you point to, or provide a unit/integration test to ensure that this does not change.\nA unit test would be ideal if possible - instrumented tests risk functional changes to developer devices at the current moment until we sort out using a new collection.", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443261065", "createdAt": "2020-06-21T22:06:35Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/provider/CardContentProvider.java", "diffHunk": "@@ -373,8 +373,8 @@ public Cursor query(Uri uri, String[] projection, String selection, String[] sel\n                 String[] columns = ((projection != null) ? projection : FlashCardsContract.Deck.DEFAULT_PROJECTION);\n                 MatrixCursor rv = new MatrixCursor(columns, allDecks.size());\n                 for (Sched.DeckDueTreeNode deck : allDecks) {\n-                    long id = deck.did;\n-                    String name = deck.names[0];\n+                    long id = deck.getDid();\n+                    String name = deck.getSubdeckName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1ODU3MQ=="}, "originalCommit": {"oid": "d81ebff9e4d120cc2599535279a2470e33bb4020"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2MTc2NQ==", "bodyText": "I just removed getSubdeckName so that the remaining can be accepted easily.\nI won't create a method for \"names[0]\" because that has semantically no sens. I'll do it another way.\nConcerning unit test, what you want is something that ensure that, on the node representing the deck \"A::B::C\", getSubdeckName returns \"C\" before and after the commit, right ?", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443261765", "createdAt": "2020-06-21T22:15:49Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/provider/CardContentProvider.java", "diffHunk": "@@ -373,8 +373,8 @@ public Cursor query(Uri uri, String[] projection, String selection, String[] sel\n                 String[] columns = ((projection != null) ? projection : FlashCardsContract.Deck.DEFAULT_PROJECTION);\n                 MatrixCursor rv = new MatrixCursor(columns, allDecks.size());\n                 for (Sched.DeckDueTreeNode deck : allDecks) {\n-                    long id = deck.did;\n-                    String name = deck.names[0];\n+                    long id = deck.getDid();\n+                    String name = deck.getSubdeckName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1ODU3MQ=="}, "originalCommit": {"oid": "d81ebff9e4d120cc2599535279a2470e33bb4020"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2MTk1OQ==", "bodyText": "Ideally an end-to-end test to ensure that the following returns consistent results with nested decks:\n\n  \n    \n      Anki-Android/AnkiDroid/src/main/java/com/ichi2/anki/provider/CardContentProvider.java\n    \n    \n        Lines 371 to 380\n      in\n      e698b3c\n    \n    \n    \n    \n\n        \n          \n           case DECKS: { \n        \n\n        \n          \n               List<Sched.DeckDueTreeNode> allDecks = col.getSched().deckDueList(); \n        \n\n        \n          \n               String[] columns = ((projection != null) ? projection : FlashCardsContract.Deck.DEFAULT_PROJECTION); \n        \n\n        \n          \n               MatrixCursor rv = new MatrixCursor(columns, allDecks.size()); \n        \n\n        \n          \n               for (Sched.DeckDueTreeNode deck : allDecks) { \n        \n\n        \n          \n                   long id = deck.did; \n        \n\n        \n          \n                   String name = deck.names[0]; \n        \n\n        \n          \n                   addDeckToCursor(id, name, getDeckCountsFromDueTreeNode(deck), rv, col, columns); \n        \n\n        \n          \n               } \n        \n\n        \n          \n               return rv;", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443261959", "createdAt": "2020-06-21T22:18:48Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/provider/CardContentProvider.java", "diffHunk": "@@ -373,8 +373,8 @@ public Cursor query(Uri uri, String[] projection, String selection, String[] sel\n                 String[] columns = ((projection != null) ? projection : FlashCardsContract.Deck.DEFAULT_PROJECTION);\n                 MatrixCursor rv = new MatrixCursor(columns, allDecks.size());\n                 for (Sched.DeckDueTreeNode deck : allDecks) {\n-                    long id = deck.did;\n-                    String name = deck.names[0];\n+                    long id = deck.getDid();\n+                    String name = deck.getSubdeckName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1ODU3MQ=="}, "originalCommit": {"oid": "d81ebff9e4d120cc2599535279a2470e33bb4020"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2MjI4MQ==", "bodyText": "I have absolutely no idea what is the CardContentProvider and what kind of result it is supposed to return. I don't know what an end-to-end test is. So it will take time before I understand what you're asking here :s", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443262281", "createdAt": "2020-06-21T22:23:33Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/provider/CardContentProvider.java", "diffHunk": "@@ -373,8 +373,8 @@ public Cursor query(Uri uri, String[] projection, String selection, String[] sel\n                 String[] columns = ((projection != null) ? projection : FlashCardsContract.Deck.DEFAULT_PROJECTION);\n                 MatrixCursor rv = new MatrixCursor(columns, allDecks.size());\n                 for (Sched.DeckDueTreeNode deck : allDecks) {\n-                    long id = deck.did;\n-                    String name = deck.names[0];\n+                    long id = deck.getDid();\n+                    String name = deck.getSubdeckName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1ODU3MQ=="}, "originalCommit": {"oid": "d81ebff9e4d120cc2599535279a2470e33bb4020"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2MjkwNA==", "bodyText": "The CardContentProvider is used in the API. It's vital that we don't break this, as all of our API clients depend on this logic being consistent.\nRE: End-to-end:\nWire up all the components, add decks with children to the database, and verify result the against a \"known outcome\". Then you can make changes with the knowledge that the outputs from the CardContentProvider aren't changed.", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443262904", "createdAt": "2020-06-21T22:32:35Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/provider/CardContentProvider.java", "diffHunk": "@@ -373,8 +373,8 @@ public Cursor query(Uri uri, String[] projection, String selection, String[] sel\n                 String[] columns = ((projection != null) ? projection : FlashCardsContract.Deck.DEFAULT_PROJECTION);\n                 MatrixCursor rv = new MatrixCursor(columns, allDecks.size());\n                 for (Sched.DeckDueTreeNode deck : allDecks) {\n-                    long id = deck.did;\n-                    String name = deck.names[0];\n+                    long id = deck.getDid();\n+                    String name = deck.getSubdeckName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1ODU3MQ=="}, "originalCommit": {"oid": "d81ebff9e4d120cc2599535279a2470e33bb4020"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2MzIwMg==", "bodyText": "Can you please show me an example of similar test, so I've got something to start with. I know the folder of unit test, but don't know which ones are end-to-end.\u00a0Ideally one returning a matrix cursor so I see how I can check the names from it", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443263202", "createdAt": "2020-06-21T22:36:47Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/provider/CardContentProvider.java", "diffHunk": "@@ -373,8 +373,8 @@ public Cursor query(Uri uri, String[] projection, String selection, String[] sel\n                 String[] columns = ((projection != null) ? projection : FlashCardsContract.Deck.DEFAULT_PROJECTION);\n                 MatrixCursor rv = new MatrixCursor(columns, allDecks.size());\n                 for (Sched.DeckDueTreeNode deck : allDecks) {\n-                    long id = deck.did;\n-                    String name = deck.names[0];\n+                    long id = deck.getDid();\n+                    String name = deck.getSubdeckName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1ODU3MQ=="}, "originalCommit": {"oid": "d81ebff9e4d120cc2599535279a2470e33bb4020"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2NTQ0MA==", "bodyText": "Nothing using MatrixCursor aside from the implementation.\nhttps://github.com/ankidroid/Anki-Android/blob/master/AnkiDroid/src/androidTest/java/com/ichi2/anki/tests/ContentProviderTest.java", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443265440", "createdAt": "2020-06-21T23:08:16Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/provider/CardContentProvider.java", "diffHunk": "@@ -373,8 +373,8 @@ public Cursor query(Uri uri, String[] projection, String selection, String[] sel\n                 String[] columns = ((projection != null) ? projection : FlashCardsContract.Deck.DEFAULT_PROJECTION);\n                 MatrixCursor rv = new MatrixCursor(columns, allDecks.size());\n                 for (Sched.DeckDueTreeNode deck : allDecks) {\n-                    long id = deck.did;\n-                    String name = deck.names[0];\n+                    long id = deck.getDid();\n+                    String name = deck.getSubdeckName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1ODU3MQ=="}, "originalCommit": {"oid": "d81ebff9e4d120cc2599535279a2470e33bb4020"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTg0MTA3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/provider/CardContentProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMTozMDowNlrOGmuW4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMTozMDowNlrOGmuW4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1ODU5Mw==", "bodyText": "Flagging change", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443258593", "createdAt": "2020-06-21T21:30:06Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/provider/CardContentProvider.java", "diffHunk": "@@ -387,8 +387,8 @@ public Cursor query(Uri uri, String[] projection, String selection, String[] sel\n                 long deckId;\n                 deckId = Long.parseLong(uri.getPathSegments().get(1));\n                 for (Sched.DeckDueTreeNode deck : allDecks) {\n-                    if(deck.did == deckId){\n-                        addDeckToCursor(deckId, deck.names[0], getDeckCountsFromDueTreeNode(deck), rv, col, columns);\n+                    if(deck.getDid() == deckId){\n+                        addDeckToCursor(deckId, deck.getSubdeckName(), getDeckCountsFromDueTreeNode(deck), rv, col, columns);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d81ebff9e4d120cc2599535279a2470e33bb4020"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTg0MTE0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/widgets/DeckAdapter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMTozMDoxN1rOGmuW6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMjowNDoyOVrOGmugAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1ODYwMw==", "bodyText": "Flagging change", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443258603", "createdAt": "2020-06-21T21:30:17Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/widgets/DeckAdapter.java", "diffHunk": "@@ -177,38 +177,38 @@ public void onBindViewHolder(ViewHolder holder, int position) {\n             deckLayout.setPadding(normalPadding, 0, rightPadding, 0);\n         }\n \n-        if (node.children.size() > 0) {\n-            holder.deckExpander.setTag(node.did);\n+        if (node.hasChildren()) {\n+            holder.deckExpander.setTag(node.getDid());\n             holder.deckExpander.setOnClickListener(mDeckExpanderClickListener);\n         } else {\n             holder.deckExpander.setOnClickListener(null);\n         }\n         holder.deckLayout.setBackgroundResource(mRowCurrentDrawable);\n         // Set background colour. The current deck has its own color\n-        if (node.did == mCol.getDecks().current().optLong(\"id\")) {\n+        if (node.getDid() == mCol.getDecks().current().optLong(\"id\")) {\n             holder.deckLayout.setBackgroundResource(mRowCurrentDrawable);\n         } else {\n             CompatHelper.getCompat().setSelectableBackground(holder.deckLayout);\n         }\n         // Set deck name and colour. Filtered decks have their own colour\n-        holder.deckName.setText(node.names[0]);\n-        if (mCol.getDecks().isDyn(node.did)) {\n+        holder.deckName.setText(node.getSubdeckName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d81ebff9e4d120cc2599535279a2470e33bb4020"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2MDkyOA==", "bodyText": "I'm happy that this does not change functionality.", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443260928", "createdAt": "2020-06-21T22:04:29Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/widgets/DeckAdapter.java", "diffHunk": "@@ -177,38 +177,38 @@ public void onBindViewHolder(ViewHolder holder, int position) {\n             deckLayout.setPadding(normalPadding, 0, rightPadding, 0);\n         }\n \n-        if (node.children.size() > 0) {\n-            holder.deckExpander.setTag(node.did);\n+        if (node.hasChildren()) {\n+            holder.deckExpander.setTag(node.getDid());\n             holder.deckExpander.setOnClickListener(mDeckExpanderClickListener);\n         } else {\n             holder.deckExpander.setOnClickListener(null);\n         }\n         holder.deckLayout.setBackgroundResource(mRowCurrentDrawable);\n         // Set background colour. The current deck has its own color\n-        if (node.did == mCol.getDecks().current().optLong(\"id\")) {\n+        if (node.getDid() == mCol.getDecks().current().optLong(\"id\")) {\n             holder.deckLayout.setBackgroundResource(mRowCurrentDrawable);\n         } else {\n             CompatHelper.getCompat().setSelectableBackground(holder.deckLayout);\n         }\n         // Set deck name and colour. Filtered decks have their own colour\n-        holder.deckName.setText(node.names[0]);\n-        if (mCol.getDecks().isDyn(node.did)) {\n+        holder.deckName.setText(node.getSubdeckName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI1ODYwMw=="}, "originalCommit": {"oid": "d81ebff9e4d120cc2599535279a2470e33bb4020"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTg2ODQ4OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMjoyMjoxNlrOGmuk9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMjozMzo0MlrOGmuoAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2MjE5OA==", "bodyText": "Could this be abstracted. Maybe use getNames() instead of getName(). It implies the string length rather than the array length.", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443262198", "createdAt": "2020-06-21T22:22:16Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -472,25 +472,25 @@ protected int _walkingCount(LimitMethod limFn, CountMethod cntFn) {\n             int lrn = 0;\n             List<DeckDueTreeNode> children = new ArrayList<>();\n             for (DeckDueTreeNode c : tail) {\n-                if (c.names.length == 1) {\n+                if (c.getName().length == 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "425b64c7a96f8651a38679e1db44a9ad3650d51e"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2MjU0NA==", "bodyText": "I can call it \"getNames\" if you want. Both name are quite strange. Because at this point of the code, if we are considering the deck \"A::B::C\", getName return \"{A,B,C}\" on first call, then \"{B,C}\" and finally \"{C}\". So there is no real correct name for this method I believe.\nI'll rename it to getNames, no trouble here. But I fear that it won't please you either, because later in the life of this object, getName always return an array with a single element, the subdeck name. I.e. once the object leave the scheduler, it's value is constantly \"{C}\", and so the plural has little sens", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443262544", "createdAt": "2020-06-21T22:27:23Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -472,25 +472,25 @@ protected int _walkingCount(LimitMethod limFn, CountMethod cntFn) {\n             int lrn = 0;\n             List<DeckDueTreeNode> children = new ArrayList<>();\n             for (DeckDueTreeNode c : tail) {\n-                if (c.names.length == 1) {\n+                if (c.getName().length == 1) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2MjE5OA=="}, "originalCommit": {"oid": "425b64c7a96f8651a38679e1db44a9ad3650d51e"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2Mjk3OA==", "bodyText": "Let's fix it up later on down the road. getNames for now", "url": "https://github.com/ankidroid/Anki-Android/pull/6526#discussion_r443262978", "createdAt": "2020-06-21T22:33:42Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -472,25 +472,25 @@ protected int _walkingCount(LimitMethod limFn, CountMethod cntFn) {\n             int lrn = 0;\n             List<DeckDueTreeNode> children = new ArrayList<>();\n             for (DeckDueTreeNode c : tail) {\n-                if (c.names.length == 1) {\n+                if (c.getName().length == 1) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2MjE5OA=="}, "originalCommit": {"oid": "425b64c7a96f8651a38679e1db44a9ad3650d51e"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 231, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}