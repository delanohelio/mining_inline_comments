{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMDU1NzA0", "number": 6104, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzozNjoyN1rOD5F6Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOToyMzowNVrOD5IXAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTkyMjMwOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/NoteEditor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzozNjoyN1rOGQK0ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzo0NDo0MVrOGQLH0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYwNzY3NQ==", "bodyText": "I thought all of these were changed to com.ichi2.anki JSON classes to avoid the try/catch since we just throw RuntimException anyway? #5550", "url": "https://github.com/ankidroid/Anki-Android/pull/6104#discussion_r419607675", "createdAt": "2020-05-04T17:36:27Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/NoteEditor.java", "diffHunk": "@@ -1710,6 +1703,18 @@ public void onDestroyActionMode(ActionMode mode) {\n         }\n     }\n \n+\n+    private boolean isClozeType() {\n+        int noteModelType;\n+        try {\n+            noteModelType = getCurrentlySelectedModel().getInt(\"type\");\n+        } catch (JSONException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75ec36f24f9d4f92646c8789ca543b8df92812d7"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxMjYyNg==", "bodyText": "Extracted, unchanged code, will fix. Good catch!", "url": "https://github.com/ankidroid/Anki-Android/pull/6104#discussion_r419612626", "createdAt": "2020-05-04T17:44:41Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/NoteEditor.java", "diffHunk": "@@ -1710,6 +1703,18 @@ public void onDestroyActionMode(ActionMode mode) {\n         }\n     }\n \n+\n+    private boolean isClozeType() {\n+        int noteModelType;\n+        try {\n+            noteModelType = getCurrentlySelectedModel().getInt(\"type\");\n+        } catch (JSONException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYwNzY3NQ=="}, "originalCommit": {"oid": "75ec36f24f9d4f92646c8789ca543b8df92812d7"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTkzNzM5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/res/values/02-strings.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzo0MDoyOVrOGQK9sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzo1NjoyMVrOGQLj_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxMDAzMg==", "bodyText": "If it's no longer used it should be deleted so that crowdin removes it, otherwise people will continue trying to translate it", "url": "https://github.com/ankidroid/Anki-Android/pull/6104#discussion_r419610032", "createdAt": "2020-05-04T17:40:29Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/res/values/02-strings.xml", "diffHunk": "@@ -95,7 +95,10 @@\n     <string name=\"cardeditor_title_add_note\">Add note</string>\n     <string name=\"cardeditor_title_edit_card\">Edit note</string>\n     <string name=\"discard_unsaved_changes\">Close and lose current input?</string>\n-    <string name=\"factadder_saving_error\">Error saving note</string>\n+    <string name=\"factadder_saving_error\">Error saving note</string>     <!--no longer used -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70e6c17e34295af65c0950f1eaa654d1a586cc35"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxNjE4Mw==", "bodyText": "@mikehardy Haven't had to do this before. Just for the default file, or remove the line from each xml?", "url": "https://github.com/ankidroid/Anki-Android/pull/6104#discussion_r419616183", "createdAt": "2020-05-04T17:50:34Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/res/values/02-strings.xml", "diffHunk": "@@ -95,7 +95,10 @@\n     <string name=\"cardeditor_title_add_note\">Add note</string>\n     <string name=\"cardeditor_title_edit_card\">Edit note</string>\n     <string name=\"discard_unsaved_changes\">Close and lose current input?</string>\n-    <string name=\"factadder_saving_error\">Error saving note</string>\n+    <string name=\"factadder_saving_error\">Error saving note</string>     <!--no longer used -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxMDAzMg=="}, "originalCommit": {"oid": "70e6c17e34295af65c0950f1eaa654d1a586cc35"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxOTgzNg==", "bodyText": "Language edit rules are:\n\nonly change things in values/ (the English language version`\navoid if at all possible string renames if the use is the same (causes re-translation as it looks like a delete-old/add-new to translators)\nI upload things from values to crowdin via tools/manage_crowdin.py with a fancy maintainer key oo la la\ntranslators get to work (or not)\nI sync contents of values-NN/ down from crowdin via tools/update-localizations.py and commit that to git\n\nSpecial care must be taken if translations were deleted, as that would represent an incompatibility with previous native code and is thus considered a breaking change and means translations can't be backported/cherry-picked past the point a translation was deleted (including if the name was changed, as mentioned above)\nMore thorough than the answer strictly needed but I wanted to info dump on you if for no other reason than to increase bus factor in the area, I'm not sure anyone but Tim and I know how to drive it right now", "url": "https://github.com/ankidroid/Anki-Android/pull/6104#discussion_r419619836", "createdAt": "2020-05-04T17:56:21Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/res/values/02-strings.xml", "diffHunk": "@@ -95,7 +95,10 @@\n     <string name=\"cardeditor_title_add_note\">Add note</string>\n     <string name=\"cardeditor_title_edit_card\">Edit note</string>\n     <string name=\"discard_unsaved_changes\">Close and lose current input?</string>\n-    <string name=\"factadder_saving_error\">Error saving note</string>\n+    <string name=\"factadder_saving_error\">Error saving note</string>     <!--no longer used -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxMDAzMg=="}, "originalCommit": {"oid": "70e6c17e34295af65c0950f1eaa654d1a586cc35"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTk1MDkzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/test/java/com/ichi2/anki/NoteEditorTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzo0NDoxMVrOGQLGXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzo1Njo0NVrOGQLk_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxMjI1NA==", "bodyText": "could reference these I suppose https://github.com/ankidroid/Anki-Android/blob/master/AnkiDroid/src/main/java/com/ichi2/libanki/Consts.java#L73 but your backtofront one is not represented", "url": "https://github.com/ankidroid/Anki-Android/pull/6104#discussion_r419612254", "createdAt": "2020-05-04T17:44:11Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/NoteEditorTest.java", "diffHunk": "@@ -45,22 +108,78 @@ private void enterTextIntoField(NoteEditor n, int i, String newText) {\n         n.setFieldValueFromUi(i, newText);\n     }\n \n+    private <T extends NoteEditor> T getNoteEditorAddingNote(FromScreen from, Class<T> clazz) {\n+        Intent i = new Intent();\n+        if (from == FromScreen.REVIEWER) {\n+            i.putExtra(NoteEditor.EXTRA_CALLER, NoteEditor.CALLER_REVIEWER_ADD);\n+        } else {\n+            throw new IllegalStateException(\" unhandled\");\n+        }\n \n-    private NoteEditor getNoteEditorEditingExistingBasicNote(String front, String back, FromScreen reviewer) {\n+        return super.startActivityNormallyOpenCollectionWithIntent(clazz, i);\n+    }\n+\n+    private NoteEditor getNoteEditorEditingExistingBasicNote(String front, String back, FromScreen from) {\n         Note n = super.addNoteUsingBasicModel(front, back);\n+        return getNoteEditorEditingExistingBasicNote(n, from, NoteEditor.class);\n+    }\n+\n+    private <T extends NoteEditor> T getNoteEditorEditingExistingBasicNote(Note n, FromScreen from, Class<T> clazz) {\n \n         Intent i = new Intent();\n-        if (reviewer == FromScreen.REVIEWER) {\n+        if (from == FromScreen.REVIEWER) {\n             i.putExtra(NoteEditor.EXTRA_CALLER, NoteEditor.CALLER_REVIEWER);\n             AbstractFlashcardViewer.setEditorCard(n.cards().get(0));\n         } else {\n-            throw new IllegalStateException(reviewer.toString() + \" unhandled\");\n+            throw new IllegalStateException(from.toString() + \" unhandled\");\n         }\n \n-        return super.startActivityNormallyOpenCollectionWithIntent(NoteEditor.class, i);\n+        return super.startActivityNormallyOpenCollectionWithIntent(clazz, i);\n     }\n \n     private enum FromScreen {\n         REVIEWER\n     }\n+\n+    private enum NoteType {\n+        BASIC,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70e6c17e34295af65c0950f1eaa654d1a586cc35"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxNDc4NQ==", "bodyText": "I'd prefer not do so to allow future users to define their own note types (as mentioned). I'll add a comment here", "url": "https://github.com/ankidroid/Anki-Android/pull/6104#discussion_r419614785", "createdAt": "2020-05-04T17:48:24Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/NoteEditorTest.java", "diffHunk": "@@ -45,22 +108,78 @@ private void enterTextIntoField(NoteEditor n, int i, String newText) {\n         n.setFieldValueFromUi(i, newText);\n     }\n \n+    private <T extends NoteEditor> T getNoteEditorAddingNote(FromScreen from, Class<T> clazz) {\n+        Intent i = new Intent();\n+        if (from == FromScreen.REVIEWER) {\n+            i.putExtra(NoteEditor.EXTRA_CALLER, NoteEditor.CALLER_REVIEWER_ADD);\n+        } else {\n+            throw new IllegalStateException(\" unhandled\");\n+        }\n \n-    private NoteEditor getNoteEditorEditingExistingBasicNote(String front, String back, FromScreen reviewer) {\n+        return super.startActivityNormallyOpenCollectionWithIntent(clazz, i);\n+    }\n+\n+    private NoteEditor getNoteEditorEditingExistingBasicNote(String front, String back, FromScreen from) {\n         Note n = super.addNoteUsingBasicModel(front, back);\n+        return getNoteEditorEditingExistingBasicNote(n, from, NoteEditor.class);\n+    }\n+\n+    private <T extends NoteEditor> T getNoteEditorEditingExistingBasicNote(Note n, FromScreen from, Class<T> clazz) {\n \n         Intent i = new Intent();\n-        if (reviewer == FromScreen.REVIEWER) {\n+        if (from == FromScreen.REVIEWER) {\n             i.putExtra(NoteEditor.EXTRA_CALLER, NoteEditor.CALLER_REVIEWER);\n             AbstractFlashcardViewer.setEditorCard(n.cards().get(0));\n         } else {\n-            throw new IllegalStateException(reviewer.toString() + \" unhandled\");\n+            throw new IllegalStateException(from.toString() + \" unhandled\");\n         }\n \n-        return super.startActivityNormallyOpenCollectionWithIntent(NoteEditor.class, i);\n+        return super.startActivityNormallyOpenCollectionWithIntent(clazz, i);\n     }\n \n     private enum FromScreen {\n         REVIEWER\n     }\n+\n+    private enum NoteType {\n+        BASIC,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxMjI1NA=="}, "originalCommit": {"oid": "70e6c17e34295af65c0950f1eaa654d1a586cc35"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyMDA5NQ==", "bodyText": "yeah I figured :-), resolving", "url": "https://github.com/ankidroid/Anki-Android/pull/6104#discussion_r419620095", "createdAt": "2020-05-04T17:56:45Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/NoteEditorTest.java", "diffHunk": "@@ -45,22 +108,78 @@ private void enterTextIntoField(NoteEditor n, int i, String newText) {\n         n.setFieldValueFromUi(i, newText);\n     }\n \n+    private <T extends NoteEditor> T getNoteEditorAddingNote(FromScreen from, Class<T> clazz) {\n+        Intent i = new Intent();\n+        if (from == FromScreen.REVIEWER) {\n+            i.putExtra(NoteEditor.EXTRA_CALLER, NoteEditor.CALLER_REVIEWER_ADD);\n+        } else {\n+            throw new IllegalStateException(\" unhandled\");\n+        }\n \n-    private NoteEditor getNoteEditorEditingExistingBasicNote(String front, String back, FromScreen reviewer) {\n+        return super.startActivityNormallyOpenCollectionWithIntent(clazz, i);\n+    }\n+\n+    private NoteEditor getNoteEditorEditingExistingBasicNote(String front, String back, FromScreen from) {\n         Note n = super.addNoteUsingBasicModel(front, back);\n+        return getNoteEditorEditingExistingBasicNote(n, from, NoteEditor.class);\n+    }\n+\n+    private <T extends NoteEditor> T getNoteEditorEditingExistingBasicNote(Note n, FromScreen from, Class<T> clazz) {\n \n         Intent i = new Intent();\n-        if (reviewer == FromScreen.REVIEWER) {\n+        if (from == FromScreen.REVIEWER) {\n             i.putExtra(NoteEditor.EXTRA_CALLER, NoteEditor.CALLER_REVIEWER);\n             AbstractFlashcardViewer.setEditorCard(n.cards().get(0));\n         } else {\n-            throw new IllegalStateException(reviewer.toString() + \" unhandled\");\n+            throw new IllegalStateException(from.toString() + \" unhandled\");\n         }\n \n-        return super.startActivityNormallyOpenCollectionWithIntent(NoteEditor.class, i);\n+        return super.startActivityNormallyOpenCollectionWithIntent(clazz, i);\n     }\n \n     private enum FromScreen {\n         REVIEWER\n     }\n+\n+    private enum NoteType {\n+        BASIC,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxMjI1NA=="}, "originalCommit": {"oid": "70e6c17e34295af65c0950f1eaa654d1a586cc35"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTk1NzE2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/test/java/com/ichi2/anki/RobolectricTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzo0NTo1NFrOGQLKiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzo0ODo1MlrOGQLRSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxMzMyMQ==", "bodyText": "Just curious for you if this actually throws for you. With reference to one of the testing failures in CardTemplateEditor I don't think the schemaMod check will ever throw in testing unless the collection is actually synchronized, so I'm expecting this to not throw and coverage to indicate the catch is never hit, but I'm curious for your direct experience", "url": "https://github.com/ankidroid/Anki-Android/pull/6104#discussion_r419613321", "createdAt": "2020-05-04T17:45:54Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/RobolectricTest.java", "diffHunk": "@@ -103,15 +104,44 @@ protected JSONObject getCurrentDatabaseModelCopy(String modelName) throws JSONEx\n     }\n \n     protected Note addNoteUsingBasicModel(String front, String back) {\n-        JSONObject basicModel = getCol().getModels().byName(\"Basic\");\n+        return addNoteUsingModelName(\"Basic\", front, back);\n+    }\n+\n+    protected Note addNoteUsingModelName(String name, String... fields) {\n+        JSONObject model = getCol().getModels().byName(name);\n         //PERF: if we modify newNote(), we can return the card and return a Pair<Note, Card> here.\n         //Saves a database trip afterwards.\n-        Note n = getCol().newNote(basicModel);\n-        n.setField(0, front);\n-        n.setField(1, back);\n+        Note n = getCol().newNote(model);\n+        for(int i = 0; i < fields.length; i++) {\n+            n.setField(i, fields[i]);\n+        }\n         if (getCol().addNote(n) != 1) {\n-            throw new IllegalStateException(String.format(\"Could not add note: {'%s', '%s'}\", front, back));\n+            throw new IllegalStateException(String.format(\"Could not add note: {%s}\", String.join(\", \", fields)));\n         }\n         return n;\n     }\n+\n+\n+    protected String addNonClozeModel(String name, String[] fields, String qfmt, String afmt) {\n+        JSONObject model = getCol().getModels().newModel(name);\n+        for (int i = 0; i < fields.length; i++) {\n+            addField(model, fields[i]);\n+        }\n+        model.put(FlashCardsContract.CardTemplate.QUESTION_FORMAT, qfmt);\n+        model.put(FlashCardsContract.CardTemplate.ANSWER_FORMAT, afmt);\n+        getCol().getModels().add(model);\n+        getCol().getModels().flush();\n+        return name;\n+    }\n+\n+\n+    private void addField(JSONObject model, String name) {\n+        Models models = getCol().getModels();\n+\n+        try {\n+            models.addField(model, models.newField(name));\n+        } catch (ConfirmModSchemaException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70e6c17e34295af65c0950f1eaa654d1a586cc35"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxNTA1MA==", "bodyText": "Doesn't throw. But required as it's checked.", "url": "https://github.com/ankidroid/Anki-Android/pull/6104#discussion_r419615050", "createdAt": "2020-05-04T17:48:52Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/RobolectricTest.java", "diffHunk": "@@ -103,15 +104,44 @@ protected JSONObject getCurrentDatabaseModelCopy(String modelName) throws JSONEx\n     }\n \n     protected Note addNoteUsingBasicModel(String front, String back) {\n-        JSONObject basicModel = getCol().getModels().byName(\"Basic\");\n+        return addNoteUsingModelName(\"Basic\", front, back);\n+    }\n+\n+    protected Note addNoteUsingModelName(String name, String... fields) {\n+        JSONObject model = getCol().getModels().byName(name);\n         //PERF: if we modify newNote(), we can return the card and return a Pair<Note, Card> here.\n         //Saves a database trip afterwards.\n-        Note n = getCol().newNote(basicModel);\n-        n.setField(0, front);\n-        n.setField(1, back);\n+        Note n = getCol().newNote(model);\n+        for(int i = 0; i < fields.length; i++) {\n+            n.setField(i, fields[i]);\n+        }\n         if (getCol().addNote(n) != 1) {\n-            throw new IllegalStateException(String.format(\"Could not add note: {'%s', '%s'}\", front, back));\n+            throw new IllegalStateException(String.format(\"Could not add note: {%s}\", String.join(\", \", fields)));\n         }\n         return n;\n     }\n+\n+\n+    protected String addNonClozeModel(String name, String[] fields, String qfmt, String afmt) {\n+        JSONObject model = getCol().getModels().newModel(name);\n+        for (int i = 0; i < fields.length; i++) {\n+            addField(model, fields[i]);\n+        }\n+        model.put(FlashCardsContract.CardTemplate.QUESTION_FORMAT, qfmt);\n+        model.put(FlashCardsContract.CardTemplate.ANSWER_FORMAT, afmt);\n+        getCol().getModels().add(model);\n+        getCol().getModels().flush();\n+        return name;\n+    }\n+\n+\n+    private void addField(JSONObject model, String name) {\n+        Models models = getCol().getModels();\n+\n+        try {\n+            models.addField(model, models.newField(name));\n+        } catch (ConfirmModSchemaException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxMzMyMQ=="}, "originalCommit": {"oid": "70e6c17e34295af65c0950f1eaa654d1a586cc35"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjMyMzg1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/test/java/com/ichi2/anki/RobolectricTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOToyMzowNVrOGQOtjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOToyMzowNVrOGQOtjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3MTQzOQ==", "bodyText": "Issue found: Avoid throwing raw exception types.", "url": "https://github.com/ankidroid/Anki-Android/pull/6104#discussion_r419671439", "createdAt": "2020-05-04T19:23:05Z", "author": {"login": "timrae"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/RobolectricTest.java", "diffHunk": "@@ -103,15 +104,44 @@ protected JSONObject getCurrentDatabaseModelCopy(String modelName) throws JSONEx\n     }\n \n     protected Note addNoteUsingBasicModel(String front, String back) {\n-        JSONObject basicModel = getCol().getModels().byName(\"Basic\");\n+        return addNoteUsingModelName(\"Basic\", front, back);\n+    }\n+\n+    protected Note addNoteUsingModelName(String name, String... fields) {\n+        JSONObject model = getCol().getModels().byName(name);\n         //PERF: if we modify newNote(), we can return the card and return a Pair<Note, Card> here.\n         //Saves a database trip afterwards.\n-        Note n = getCol().newNote(basicModel);\n-        n.setField(0, front);\n-        n.setField(1, back);\n+        Note n = getCol().newNote(model);\n+        for(int i = 0; i < fields.length; i++) {\n+            n.setField(i, fields[i]);\n+        }\n         if (getCol().addNote(n) != 1) {\n-            throw new IllegalStateException(String.format(\"Could not add note: {'%s', '%s'}\", front, back));\n+            throw new IllegalStateException(String.format(\"Could not add note: {%s}\", String.join(\", \", fields)));\n         }\n         return n;\n     }\n+\n+\n+    protected String addNonClozeModel(String name, String[] fields, String qfmt, String afmt) {\n+        JSONObject model = getCol().getModels().newModel(name);\n+        for (int i = 0; i < fields.length; i++) {\n+            addField(model, fields[i]);\n+        }\n+        model.put(FlashCardsContract.CardTemplate.QUESTION_FORMAT, qfmt);\n+        model.put(FlashCardsContract.CardTemplate.ANSWER_FORMAT, afmt);\n+        getCol().getModels().add(model);\n+        getCol().getModels().flush();\n+        return name;\n+    }\n+\n+\n+    private void addField(JSONObject model, String name) {\n+        Models models = getCol().getModels();\n+\n+        try {\n+            models.addField(model, models.newField(name));\n+        } catch (ConfirmModSchemaException e) {\n+            throw new RuntimeException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bff7b0dbe0f925f9986ed194c784ce4af277333d"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 397, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}