{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwODg2Mjkz", "number": 5834, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNDowNTowMFrODphYUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNDowODoyM1rODpheRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0ODY1MTA3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/MetaDB.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNDowNTowMFrOF4v6fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNDowNTowMFrOF4v6fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA0OTU5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(columnCount <= 0) {\n          \n          \n            \n                    if (columnCount <= 0) {", "url": "https://github.com/ankidroid/Anki-Android/pull/5834#discussion_r395049596", "createdAt": "2020-03-19T14:05:00Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/MetaDB.java", "diffHunk": "@@ -81,38 +81,49 @@ private static SQLiteDatabase upgradeDB(SQLiteDatabase mMetaDb, int databaseVers\n         // Create tables if not exist\n         mMetaDb.execSQL(\"CREATE TABLE IF NOT EXISTS languages (\" + \" _id INTEGER PRIMARY KEY AUTOINCREMENT, \"\n                 + \"did INTEGER NOT NULL, ord INTEGER, \" + \"qa INTEGER, \" + \"language TEXT)\");\n-        mMetaDb.execSQL(\"CREATE TABLE IF NOT EXISTS whiteboardState (\" + \"_id INTEGER PRIMARY KEY AUTOINCREMENT, \"\n-                + \"did INTEGER NOT NULL, \" + \"state INTEGER)\");\n         mMetaDb.execSQL(\"CREATE TABLE IF NOT EXISTS customDictionary (\" + \"_id INTEGER PRIMARY KEY AUTOINCREMENT, \"\n                 + \"did INTEGER NOT NULL, \" + \"dictionary INTEGER)\");\n         mMetaDb.execSQL(\"CREATE TABLE IF NOT EXISTS smallWidgetStatus (\" + \"id INTEGER PRIMARY KEY AUTOINCREMENT, \"\n                 + \"due INTEGER NOT NULL, eta INTEGER NOT NULL)\");\n-        // Use pragma to get info about widgetStatus.\n-        Cursor c = null;\n-        try {\n-             c = mMetaDb.rawQuery(\"PRAGMA table_info(widgetStatus)\", null);\n-            int columnNumber = c.getCount();\n-            if (columnNumber > 0) {\n-                if (columnNumber < 7) {\n-                    mMetaDb.execSQL(\"ALTER TABLE widgetStatus \" + \"ADD COLUMN eta INTEGER NOT NULL DEFAULT '0'\");\n-                    mMetaDb.execSQL(\"ALTER TABLE widgetStatus \" + \"ADD COLUMN time INTEGER NOT NULL DEFAULT '0'\");\n-                }\n-            } else {\n-                mMetaDb.execSQL(\"CREATE TABLE IF NOT EXISTS widgetStatus (\" + \"deckId INTEGER NOT NULL PRIMARY KEY, \"\n-                        + \"deckName TEXT NOT NULL, \" + \"newCards INTEGER NOT NULL, \" + \"lrnCards INTEGER NOT NULL, \"\n-                        + \"dueCards INTEGER NOT NULL, \" + \"progress INTEGER NOT NULL, \" + \"eta INTEGER NOT NULL)\");\n-            }\n-            mMetaDb.setVersion(databaseVersion);\n-            Timber.i(\"MetaDB:: Upgrading Internal Database finished. New version: %d\", databaseVersion);\n-            return mMetaDb;\n-        } finally {\n-            if (c != null) {\n-                c.close();\n-            }\n+        updateWidgetStatus(mMetaDb);\n+        updateWhiteboardState(mMetaDb);\n+        mMetaDb.setVersion(databaseVersion);\n+        Timber.i(\"MetaDB:: Upgrading Internal Database finished. New version: %d\", databaseVersion);\n+        return mMetaDb;\n+    }\n+\n+\n+    private static void updateWhiteboardState(SQLiteDatabase mMetaDb) {\n+        int columnCount  = DatabaseUtil.getTableColumnCount(mMetaDb, \"whiteboardState\");\n+\n+        if(columnCount <= 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "408cd9bc413aee931698109b98f0b2098dbaa91b"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0ODY2NjMxOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNDowODoyM1rOF4wEOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNDozNDoxOFrOF4xSeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA1MjA4OQ==", "bodyText": "I believe this onCollectionLoaded callback is async yes? (I should know offhand but always have to re-trace this stuff and I'm reviewing quickly at the moment) I believe it is - if this is on the main/UI thread it could be a pain for folks, we try not to touch storage ever on the main/UI thread, thus all the AsyncTask infrastructure", "url": "https://github.com/ankidroid/Anki-Android/pull/5834#discussion_r395052089", "createdAt": "2020-03-19T14:08:23Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java", "diffHunk": "@@ -169,8 +169,10 @@ protected void onCollectionLoaded(Collection col) {\n \n         mPrefWhiteboard = MetaDB.getWhiteboardState(this, getParentDid());\n         if (mPrefWhiteboard) {\n+            //DEFECT: Slight inefficiency here, as we set the database using these methods", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "408cd9bc413aee931698109b98f0b2098dbaa91b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA3MjEyMQ==", "bodyText": "We already do it in both the unchanged lines above and below, this adds two more calls. onCollectionLoaded is a very rare event, so I'm not too worried about adding a few ms here.\nBut, I'll move this into a testable unit, and will get it fixed. Probably in the next day or two. Happy to block on this for now.", "url": "https://github.com/ankidroid/Anki-Android/pull/5834#discussion_r395072121", "createdAt": "2020-03-19T14:34:18Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java", "diffHunk": "@@ -169,8 +169,10 @@ protected void onCollectionLoaded(Collection col) {\n \n         mPrefWhiteboard = MetaDB.getWhiteboardState(this, getParentDid());\n         if (mPrefWhiteboard) {\n+            //DEFECT: Slight inefficiency here, as we set the database using these methods", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA1MjA4OQ=="}, "originalCommit": {"oid": "408cd9bc413aee931698109b98f0b2098dbaa91b"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 440, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}