{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MTkyMDQx", "number": 6858, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQyMDoyNDowMlrOEWm_Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQyMDoyNDowMlrOEWm_Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMTQyOTQ2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/utils/DiffEngine.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQyMDoyNDowMlrOG99kHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQyMDoyNTo1MVrOG99lCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYyNDk4OQ==", "bodyText": "How was a change previously represented, and is this a functional change?", "url": "https://github.com/ankidroid/Anki-Android/pull/6858#discussion_r467624989", "createdAt": "2020-08-09T20:24:02Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/utils/DiffEngine.java", "diffHunk": "@@ -39,17 +46,36 @@\n     public String[] diffedHtmlStrings(String typed, String correct) {\n         StringBuilder prettyTyped = new StringBuilder();\n         StringBuilder prettyCorrect = new StringBuilder();\n-        for (DiffMatchPatch.Diff aDiff : diffMatchPatch.diffMain(typed, correct)) {\n-            switch (aDiff.operation) {\n+\n+        DiffRowGenerator generator = DiffRowGenerator.create()\n+                .reportLinesUnchanged(true)\n+                .build();\n+\n+        List<DiffRow> diffRows = Collections.emptyList();\n+        try {\n+            diffRows = generator.generateDiffRows(\n+                    Arrays.asList(typed.split(\"\\\\s+\")),\n+                    Arrays.asList(correct.split(\"\\\\s+\")));\n+        } catch (DiffException e) {\n+            Timber.w(e, \"Unexpected diff exception\");\n+            // This will offer the users a chance to request specific help but should be impossible, no localization\n+            prettyTyped.append(wrapBad(\"Diff error, contact AnkiDroid support: \" + e.getLocalizedMessage()));\n+        }\n+        for (DiffRow aDiff : diffRows) {\n+            switch (aDiff.getTag()) {\n+                case CHANGE:\n+                    prettyTyped.append(wrapBad(aDiff.getOldLine()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35207ff71a81bb106b49c3ae7787b19ec0ac1999"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYyNTIyNw==", "bodyText": "was just the other types (insert/delete, change did not exist) and it's currently an unintended functional change but covered by unit tests so I can make sure it's NF", "url": "https://github.com/ankidroid/Anki-Android/pull/6858#discussion_r467625227", "createdAt": "2020-08-09T20:25:51Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/utils/DiffEngine.java", "diffHunk": "@@ -39,17 +46,36 @@\n     public String[] diffedHtmlStrings(String typed, String correct) {\n         StringBuilder prettyTyped = new StringBuilder();\n         StringBuilder prettyCorrect = new StringBuilder();\n-        for (DiffMatchPatch.Diff aDiff : diffMatchPatch.diffMain(typed, correct)) {\n-            switch (aDiff.operation) {\n+\n+        DiffRowGenerator generator = DiffRowGenerator.create()\n+                .reportLinesUnchanged(true)\n+                .build();\n+\n+        List<DiffRow> diffRows = Collections.emptyList();\n+        try {\n+            diffRows = generator.generateDiffRows(\n+                    Arrays.asList(typed.split(\"\\\\s+\")),\n+                    Arrays.asList(correct.split(\"\\\\s+\")));\n+        } catch (DiffException e) {\n+            Timber.w(e, \"Unexpected diff exception\");\n+            // This will offer the users a chance to request specific help but should be impossible, no localization\n+            prettyTyped.append(wrapBad(\"Diff error, contact AnkiDroid support: \" + e.getLocalizedMessage()));\n+        }\n+        for (DiffRow aDiff : diffRows) {\n+            switch (aDiff.getTag()) {\n+                case CHANGE:\n+                    prettyTyped.append(wrapBad(aDiff.getOldLine()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYyNDk4OQ=="}, "originalCommit": {"oid": "35207ff71a81bb106b49c3ae7787b19ec0ac1999"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4828, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}