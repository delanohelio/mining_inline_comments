{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NjI1MzMz", "number": 6138, "title": "Fix changing the GUI language from the system default", "bodyText": "Purpose / Description\nIf you currently change the language in AnkiDroid, the change won't really take effect in the GUI. Nearly all strings will still be in the Android system's default language.\nWith this PR I provide my partially working solution, as I seem to not get any further and want to provide the code so I can get some feedback and/or someone else can have a look at it.\nThis is also intended as an answer to Mike Hardy, who talked to me in the forums: https://groups.google.com/d/msg/anki-android/m3fhLy2RcZg/2Z-XDNx_BwAJ\nFixes\nPartially fixes #4729\nAPI levels 24 and lower will be fully localized. The language setting is applied to the whole application.\nAPI level 25 and above will be localized on the main screen (DeckPicker, Settings) but the chosen GUI language won't apply to other activities.\nApproach\nFor APIs <= 24 the application's configuration is updated to the correct language:\nfunction UpdateContextWithLanguage -> call updateConfiguration()\nFor APIs > 24 the previous solution is deprecated. Instead the configuration should be changed during attachBase(). But the current solution can't be applied to attachBase() of AnkiDroidApp. The saved configuration seems to not be available when AnkiDroidApp's attachBase() is called, but is required to know, what language the GUI should be using.\nBy applying the solution of API <=24 to API > 24, the whole GUI has the right language (but this is deprecated!) This might not not be the \"right way to do it\", but should work.\nOverwriting all attachBase() functions for all Anki activities might also work, but I haven't tried that.\nHow Has This Been Tested?\nAs this is only a have working draft, this has only been tested very superficially by using the Android emulators. (APIs: 15, 19, 25, 29)\nStarting the app, opening the settings, changing the language, closing & opening the App, opening some menus.\nOn some devices, a single card was created and learned.\nNo crashes or abnormal behavior were experienced during testing.\nChecklist\n\n You have not changed whitespace unnecessarily (it makes diffs hard to read)\n You have a descriptive commit message with a short title (first line, max 50 chars).\n Your code follows the style of the project (e.g. never omit braces in if statements)\n You have commented your code, particularly in hard-to-understand areas\n You have performed a self-review of your own code", "createdAt": "2020-05-09T20:19:06Z", "url": "https://github.com/ankidroid/Anki-Android/pull/6138", "merged": true, "mergeCommit": {"oid": "6b1eec5c1fa5f20029ab3c017223b885ece7e565"}, "closed": true, "closedAt": "2020-05-23T23:45:55Z", "author": {"login": "Arthus"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfsv5AABqjMzMTk3MzIxNDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABckPtdRgFqTQxNzMxNjI3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2568569142596926d43ec2c37d74e645eb043b5b", "author": {"user": {"login": "Arthus", "name": null}}, "url": "https://github.com/ankidroid/Anki-Android/commit/2568569142596926d43ec2c37d74e645eb043b5b", "committedDate": "2020-05-09T19:51:47Z", "message": "Refactor code for setting Locale in Application context\n\nCleanups and fix for crash on APIs < 17\n\nMore cleanups"}, "afterCommit": {"oid": "39f786826eafe021d6e4725ac64b14ee9f3c82fe", "author": {"user": {"login": "Arthus", "name": null}}, "url": "https://github.com/ankidroid/Anki-Android/commit/39f786826eafe021d6e4725ac64b14ee9f3c82fe", "committedDate": "2020-05-09T20:44:25Z", "message": "Refactor code for setting Locale in Application context\n\nResolve timrae warnings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjgxNTUz", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#pullrequestreview-408681553", "createdAt": "2020-05-09T20:21:50Z", "commit": {"oid": "2568569142596926d43ec2c37d74e645eb043b5b"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQyMDoyMTo1MFrOGS95Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQyMDo1ODozOFrOGS-H5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU0MTY1OA==", "bodyText": "Can we check if sInstance is null here to determine whether Application.onCreate has executed?", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r422541658", "createdAt": "2020-05-09T20:21:50Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -190,6 +191,14 @@ private void setAcraConfigBuilder(CoreConfigurationBuilder acraCoreConfigBuilder\n         ACRA.init(this, acraCoreConfigBuilder);\n     }\n \n+    @Override\n+    protected void attachBaseContext(Context base) {\n+        //Switch comments below to crash on App start (getSharedPrefs() fails with NullPointerException),\n+        //but theoretically this should set the GUI language for the whole application on startup\n+\n+        //super.attachBaseContext(UpdateContextWithLanguage(base));\n+        super.attachBaseContext(base);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2568569142596926d43ec2c37d74e645eb043b5b"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU0MTY4Nw==", "bodyText": "Nit: Java uses camelCase for method names", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r422541687", "createdAt": "2020-05-09T20:22:16Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -209,6 +218,8 @@ public void onCreate() {\n         // Get preferences\n         SharedPreferences preferences = getSharedPrefs(this);\n \n+        UpdateContextWithLanguage(getApplicationContext());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2568569142596926d43ec2c37d74e645eb043b5b"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU0MTcxNA==", "bodyText": "Might as well remove this", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r422541714", "createdAt": "2020-05-09T20:22:29Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -228,7 +239,7 @@ public void onCreate() {\n             UsageAnalytics.setDryRun(true);\n         }\n \n-        setLanguage(preferences.getString(Preferences.LANGUAGE, \"\"));\n+        //setLanguage(preferences.getString(Preferences.LANGUAGE, \"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2568569142596926d43ec2c37d74e645eb043b5b"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU0MTgzNg==", "bodyText": "Nit: these lines are a little too long, could you extract remoteContext.getResources() and remoteContext.getResources().getConfiguration() via Ctrl+Alt+V (extract variable) as it's used by both branches.", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r422541836", "createdAt": "2020-05-09T20:23:39Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -336,23 +347,60 @@ public static void deleteACRALimiterData(Context context) {\n         context.getFileStreamPath(\"ACRA-limiter.json\").delete();\n     }\n \n+    /**\n+     *  Returns a Context with the correct, saved language, to be attached using attachBase(). For old APIs directly sets language using deprecated functions\n+     *\n+     * @param remoteContext The base context offered by attachBase() to be passed to super.attachBase(). Can be modified here to set correct GUI language.\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    public static Context UpdateContextWithLanguage(Context remoteContext){\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N_MR1){\n+            return remoteContext.createConfigurationContext(getLanguageConfig(remoteContext.getResources().getConfiguration()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2568569142596926d43ec2c37d74e645eb043b5b"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU0MTk2Mw==", "bodyText": "nit: bracket placement is off", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r422541963", "createdAt": "2020-05-09T20:24:43Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -336,23 +347,60 @@ public static void deleteACRALimiterData(Context context) {\n         context.getFileStreamPath(\"ACRA-limiter.json\").delete();\n     }\n \n+    /**\n+     *  Returns a Context with the correct, saved language, to be attached using attachBase(). For old APIs directly sets language using deprecated functions\n+     *\n+     * @param remoteContext The base context offered by attachBase() to be passed to super.attachBase(). Can be modified here to set correct GUI language.\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    public static Context UpdateContextWithLanguage(Context remoteContext){\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N_MR1){\n+            return remoteContext.createConfigurationContext(getLanguageConfig(remoteContext.getResources().getConfiguration()));\n+        } else {\n+            remoteContext.getResources().updateConfiguration(getLanguageConfig(remoteContext.getResources().getConfiguration()),remoteContext.getResources().getDisplayMetrics());\n+            return remoteContext;\n+        }\n+    }\n \n     /**\n-     * Sets the user language.\n+     *  Creates and returns a new configuration with the chosen GUI language that is saved in the preferences\n      *\n-     * @param localeCode The locale code of the language to set, system language if empty\n+     * @param remoteConfig The configuration of the remote context to set the language for\n      */\n     @SuppressWarnings(\"deprecation\") // Tracked as #4729 in github\n-    public static void setLanguage(String localeCode) {\n-        Configuration config = getInstance().getResources().getConfiguration();\n-        Locale newLocale = LanguageUtil.getLocale(localeCode);\n-        config.locale = newLocale;\n-        getInstance().getResources().updateConfiguration(config, getInstance().getResources().getDisplayMetrics());\n+    public static Configuration getLanguageConfig(Configuration remoteConfig) {\n+        Configuration newConfig = new Configuration(remoteConfig);\n+        Locale newLocale = LanguageUtil.getLocale(getSharedPrefs(AnkiDroidApp.getInstance()).getString(Preferences.LANGUAGE, \"\"));\n+\n+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n+                String strLocallist;\n+                strLocallist = newLocale.toString()+\",\";\n+                // +Locale.getDefault().toString()+\",\"+\"\";\n+                //strLocallist = \"de,fr,en\";\n+                if (!strLocallist.contains(Locale.getDefault().toString()))\n+                    strLocallist = strLocallist+Locale.getDefault().toString()+\",\";\n+\n+                LocaleList newLocaleList = LocaleList.forLanguageTags(strLocallist);\n+                //first element of setLocales() is automatically setLocal()\n+                newConfig.setLocales(newLocaleList);\n+            } else {\n+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1){\n+                    //API level >=17 but <24\n+                    newConfig.setLocale(newLocale);\n+                } else {\n+                    //Legacy, API level < 17\n+                    newConfig.locale = newLocale;\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2568569142596926d43ec2c37d74e645eb043b5b"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU0NDg0Nw==", "bodyText": "Spelling: locale", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r422544847", "createdAt": "2020-05-09T20:53:31Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -336,23 +346,60 @@ public static void deleteACRALimiterData(Context context) {\n         context.getFileStreamPath(\"ACRA-limiter.json\").delete();\n     }\n \n+    /**\n+     *  Returns a Context with the correct, saved language, to be attached using attachBase(). For old APIs directly sets language using deprecated functions\n+     *\n+     * @param remoteContext The base context offered by attachBase() to be passed to super.attachBase(). Can be modified here to set correct GUI language.\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    public static Context updateContextWithLanguage(Context remoteContext){\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N_MR1){\n+            return remoteContext.createConfigurationContext(getLanguageConfig(remoteContext.getResources().getConfiguration()));\n+        } else {\n+            remoteContext.getResources().updateConfiguration(getLanguageConfig(remoteContext.getResources().getConfiguration()),remoteContext.getResources().getDisplayMetrics());\n+            return remoteContext;\n+        }\n+    }\n \n     /**\n-     * Sets the user language.\n+     *  Creates and returns a new configuration with the chosen GUI language that is saved in the preferences\n      *\n-     * @param localeCode The locale code of the language to set, system language if empty\n+     * @param remoteConfig The configuration of the remote context to set the language for\n      */\n     @SuppressWarnings(\"deprecation\") // Tracked as #4729 in github\n-    public static void setLanguage(String localeCode) {\n-        Configuration config = getInstance().getResources().getConfiguration();\n-        Locale newLocale = LanguageUtil.getLocale(localeCode);\n-        config.locale = newLocale;\n-        getInstance().getResources().updateConfiguration(config, getInstance().getResources().getDisplayMetrics());\n+    public static Configuration getLanguageConfig(Configuration remoteConfig) {\n+        Configuration newConfig = new Configuration(remoteConfig);\n+        Locale newLocale = LanguageUtil.getLocale(getSharedPrefs(AnkiDroidApp.getInstance()).getString(Preferences.LANGUAGE, \"\"));\n+\n+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n+                String strLocallist;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f786826eafe021d6e4725ac64b14ee9f3c82fe"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU0NTI0Mw==", "bodyText": "This logic is a little complicated to understand, could you either try to simplify the logic, or add a comment explaining why the trailing comma is required.", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r422545243", "createdAt": "2020-05-09T20:57:21Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -336,23 +346,60 @@ public static void deleteACRALimiterData(Context context) {\n         context.getFileStreamPath(\"ACRA-limiter.json\").delete();\n     }\n \n+    /**\n+     *  Returns a Context with the correct, saved language, to be attached using attachBase(). For old APIs directly sets language using deprecated functions\n+     *\n+     * @param remoteContext The base context offered by attachBase() to be passed to super.attachBase(). Can be modified here to set correct GUI language.\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    public static Context updateContextWithLanguage(Context remoteContext){\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N_MR1){\n+            return remoteContext.createConfigurationContext(getLanguageConfig(remoteContext.getResources().getConfiguration()));\n+        } else {\n+            remoteContext.getResources().updateConfiguration(getLanguageConfig(remoteContext.getResources().getConfiguration()),remoteContext.getResources().getDisplayMetrics());\n+            return remoteContext;\n+        }\n+    }\n \n     /**\n-     * Sets the user language.\n+     *  Creates and returns a new configuration with the chosen GUI language that is saved in the preferences\n      *\n-     * @param localeCode The locale code of the language to set, system language if empty\n+     * @param remoteConfig The configuration of the remote context to set the language for\n      */\n     @SuppressWarnings(\"deprecation\") // Tracked as #4729 in github\n-    public static void setLanguage(String localeCode) {\n-        Configuration config = getInstance().getResources().getConfiguration();\n-        Locale newLocale = LanguageUtil.getLocale(localeCode);\n-        config.locale = newLocale;\n-        getInstance().getResources().updateConfiguration(config, getInstance().getResources().getDisplayMetrics());\n+    public static Configuration getLanguageConfig(Configuration remoteConfig) {\n+        Configuration newConfig = new Configuration(remoteConfig);\n+        Locale newLocale = LanguageUtil.getLocale(getSharedPrefs(AnkiDroidApp.getInstance()).getString(Preferences.LANGUAGE, \"\"));\n+\n+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n+                String strLocallist;\n+                strLocallist = newLocale.toString()+\",\";\n+                // +Locale.getDefault().toString()+\",\"+\"\";\n+                //strLocallist = \"de,fr,en\";\n+                if (!strLocallist.contains(Locale.getDefault().toString()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f786826eafe021d6e4725ac64b14ee9f3c82fe"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU0NTM4MA==", "bodyText": "Could the commented code here be deleted?", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r422545380", "createdAt": "2020-05-09T20:58:38Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiActivity.java", "diffHunk": "@@ -54,12 +54,21 @@\n     protected void onCreate(Bundle savedInstanceState) {\n         // The hardware buttons should control the music volume\n         setVolumeControlStream(AudioManager.STREAM_MUSIC);\n+\n+        AnkiDroidApp.updateContextWithLanguage(this);\n+        //attachBaseContext(AnkiDroidApp.GetBaseContextWithLanguage(getBaseContext()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f786826eafe021d6e4725ac64b14ee9f3c82fe"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "011735cb1f4cb86e5d9afb85b4b77834c0af8e15", "author": {"user": {"login": "Arthus", "name": null}}, "url": "https://github.com/ankidroid/Anki-Android/commit/011735cb1f4cb86e5d9afb85b4b77834c0af8e15", "committedDate": "2020-05-10T13:00:06Z", "message": "removing unnecessary comments and some cleanups"}, "afterCommit": {"oid": "4d930f9f269ce3c2befda67fda899260cef11992", "author": {"user": {"login": "Arthus", "name": null}}, "url": "https://github.com/ankidroid/Anki-Android/commit/4d930f9f269ce3c2befda67fda899260cef11992", "committedDate": "2020-05-10T13:04:15Z", "message": "Refactor code for setting Locale in Application context\n\nResolve timrae warnings\n\nremoving unnecessary comments and some cleanups"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzc4ODAx", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#pullrequestreview-411378801", "createdAt": "2020-05-14T00:01:51Z", "commit": {"oid": "4d930f9f269ce3c2befda67fda899260cef11992"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d930f9f269ce3c2befda67fda899260cef11992", "author": {"user": {"login": "Arthus", "name": null}}, "url": "https://github.com/ankidroid/Anki-Android/commit/4d930f9f269ce3c2befda67fda899260cef11992", "committedDate": "2020-05-10T13:04:15Z", "message": "Refactor code for setting Locale in Application context\n\nResolve timrae warnings\n\nremoving unnecessary comments and some cleanups"}, "afterCommit": {"oid": "51748d7d9403b0df96afc7d4339e3d8dadc48978", "author": {"user": {"login": "Arthus", "name": null}}, "url": "https://github.com/ankidroid/Anki-Android/commit/51748d7d9403b0df96afc7d4339e3d8dadc48978", "committedDate": "2020-05-16T14:16:11Z", "message": "Refactor code for setting Locale in Application context\n\nResolve timrae warnings\n\nremoving unnecessary comments and some cleanups\n\nremove some code repetitions\n\ncleanup imports\n\ntranslate studied_cards_today\n\nCollection's resources shouldn't be used. Collection is created/opened in OnCreate of AnkiDroidApp\nAt that time the correct language from the settings can't be loaded.\n\nimprove language methods\n\ntranslate remaining popups (e.g. \"Log in to AnkiWeb\")\nThose use the application context's resources, that can't be changed permanently on attachBaseContext()\nSo we have to switch the correct language's resources on-the-fly\n\nremove unnecessary code\n\ntranslate preferences main title\n\ntranslate preferences title p2\n\nfix for test branch merge\n\ntranslate language dropdown in a correct way"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMTA1MDYw", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#pullrequestreview-413105060", "createdAt": "2020-05-16T20:09:19Z", "commit": {"oid": "51748d7d9403b0df96afc7d4339e3d8dadc48978"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQyMDowOToxOVrOGWcX0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQyMDozNDoxNlrOGWcf6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE4NjcwNQ==", "bodyText": "Could you revert these line changes? This is a complex PR that we'll likely need to look at in detail, and it's best to avoid line noise to focus on what matters.", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r426186705", "createdAt": "2020-05-16T20:09:19Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -26,26 +26,23 @@\n import android.content.SharedPreferences;\n import android.content.res.Configuration;\n import android.content.res.Resources;\n+import android.os.Build;\n import android.os.Environment;\n+import android.os.LocaleList;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51748d7d9403b0df96afc7d4339e3d8dadc48978"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE4NzA3MA==", "bodyText": "We can get this working, and probably should as there are references:\n\n  \n    \n      Anki-Android/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\n    \n    \n         Line 1066\n      in\n      3858c3f\n    \n    \n    \n    \n\n        \n          \n           Resources res = AnkiDroidApp.getInstance().getBaseContext().getResources(); \n        \n    \n  \n\n\n\nExtract getSharedPrefs(AnkiDroidApp.getInstance()) in getLanguageConfig() to a parameter (Ctrl+Alt+P)\nExtract getSharedPrefs(AnkiDroidApp.getInstance()) in updateContextWithLanguage to a local variable (Ctrl+Alt+V)\nExtract method: updateContextWithLanguage(Context, SharedPreferences) : Ctrl+Alt+M\nCall updateContextWithLanguage(base, getSharedPrefs(base)) here\n\nI think there's slight value in this. as the majority of users will not have updated their preferences.\nIf you decide to do this, do note here about the fact that a language change won't affect this, and that other techniques are used to handle this.", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r426187070", "createdAt": "2020-05-16T20:14:00Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -190,6 +190,14 @@ private void setAcraConfigBuilder(CoreConfigurationBuilder acraCoreConfigBuilder\n         ACRA.init(this, acraCoreConfigBuilder);\n     }\n \n+    @Override\n+    protected void attachBaseContext(Context base) {\n+        //Switch comments below to crash on App start (getSharedPrefs() fails with NullPointerException),\n+        //but theoretically this should set the GUI language for the whole application on startup", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51748d7d9403b0df96afc7d4339e3d8dadc48978"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE4NzA5Ng==", "bodyText": "If the above comment is implemented. this line no longer needs to exist", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r426187096", "createdAt": "2020-05-16T20:14:29Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -209,6 +217,8 @@ public void onCreate() {\n         // Get preferences\n         SharedPreferences preferences = getSharedPrefs(this);\n \n+        updateContextWithLanguage(getApplicationContext());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51748d7d9403b0df96afc7d4339e3d8dadc48978"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE4NzMxNg==", "bodyText": "Probably best to cache here, as it's heavily used and should be fast (profiling was discussed in the comments, but I'd err on the side of speed here.", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r426187316", "createdAt": "2020-05-16T20:16:23Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -300,7 +309,7 @@ public static String getCacheStorageDirectory() {\n     }\n \n     public static Resources getAppResources() {\n-        return sInstance.getResources();\n+        return updateContextWithLanguage(sInstance).getResources();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51748d7d9403b0df96afc7d4339e3d8dadc48978"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE4NzU4Nw==", "bodyText": "Can we wrap this in a try..catch, send an exception report on failure:             AnkiDroidApp.sendExceptionReport(e, [context string]);, and return remoteContext\nExample issue: a user previously had zh_TW in their config, I don't /think/ this would crash, but we should assume that user data is unexpectedly bad.", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r426187587", "createdAt": "2020-05-16T20:19:59Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -336,23 +345,59 @@ public static void deleteACRALimiterData(Context context) {\n         context.getFileStreamPath(\"ACRA-limiter.json\").delete();\n     }\n \n+    /**\n+     *  Returns a Context with the correct, saved language, to be attached using attachBase(). For old APIs directly sets language using deprecated functions\n+     *\n+     * @param remoteContext The base context offered by attachBase() to be passed to super.attachBase(). Can be modified here to set correct GUI language.\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    public static Context updateContextWithLanguage(Context remoteContext){\n+        Configuration langConfig = getLanguageConfig(remoteContext.getResources().getConfiguration());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51748d7d9403b0df96afc7d4339e3d8dadc48978"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE4NzcxNA==", "bodyText": "Line is too long, and duplicated at the bottom of the PR, could you combine these, extract to LanguageUtil and maybe extract some variables (Ctrl+Alt+V).", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r426187714", "createdAt": "2020-05-16T20:21:25Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -336,23 +345,59 @@ public static void deleteACRALimiterData(Context context) {\n         context.getFileStreamPath(\"ACRA-limiter.json\").delete();\n     }\n \n+    /**\n+     *  Returns a Context with the correct, saved language, to be attached using attachBase(). For old APIs directly sets language using deprecated functions\n+     *\n+     * @param remoteContext The base context offered by attachBase() to be passed to super.attachBase(). Can be modified here to set correct GUI language.\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    public static Context updateContextWithLanguage(Context remoteContext){\n+        Configuration langConfig = getLanguageConfig(remoteContext.getResources().getConfiguration());\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N_MR1){\n+            return remoteContext.createConfigurationContext(langConfig);\n+        } else {\n+            remoteContext.getResources().updateConfiguration(langConfig,remoteContext.getResources().getDisplayMetrics());\n+            return remoteContext;\n+        }\n+    }\n \n     /**\n-     * Sets the user language.\n+     *  Creates and returns a new configuration with the chosen GUI language that is saved in the preferences\n      *\n-     * @param localeCode The locale code of the language to set, system language if empty\n+     * @param remoteConfig The configuration of the remote context to set the language for\n      */\n     @SuppressWarnings(\"deprecation\") // Tracked as #4729 in github\n-    public static void setLanguage(String localeCode) {\n-        Configuration config = getInstance().getResources().getConfiguration();\n-        Locale newLocale = LanguageUtil.getLocale(localeCode);\n-        config.locale = newLocale;\n-        getInstance().getResources().updateConfiguration(config, getInstance().getResources().getDisplayMetrics());\n+    private static Configuration getLanguageConfig(Configuration remoteConfig) {\n+        Configuration newConfig = new Configuration(remoteConfig);\n+        Locale newLocale = LanguageUtil.getLocale(getSharedPrefs(AnkiDroidApp.getInstance()).getString(Preferences.LANGUAGE, \"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51748d7d9403b0df96afc7d4339e3d8dadc48978"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE4Nzc1NQ==", "bodyText": "nit; Could you add braces to be consistent with the codebase", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r426187755", "createdAt": "2020-05-16T20:21:53Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -336,23 +345,59 @@ public static void deleteACRALimiterData(Context context) {\n         context.getFileStreamPath(\"ACRA-limiter.json\").delete();\n     }\n \n+    /**\n+     *  Returns a Context with the correct, saved language, to be attached using attachBase(). For old APIs directly sets language using deprecated functions\n+     *\n+     * @param remoteContext The base context offered by attachBase() to be passed to super.attachBase(). Can be modified here to set correct GUI language.\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    public static Context updateContextWithLanguage(Context remoteContext){\n+        Configuration langConfig = getLanguageConfig(remoteContext.getResources().getConfiguration());\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N_MR1){\n+            return remoteContext.createConfigurationContext(langConfig);\n+        } else {\n+            remoteContext.getResources().updateConfiguration(langConfig,remoteContext.getResources().getDisplayMetrics());\n+            return remoteContext;\n+        }\n+    }\n \n     /**\n-     * Sets the user language.\n+     *  Creates and returns a new configuration with the chosen GUI language that is saved in the preferences\n      *\n-     * @param localeCode The locale code of the language to set, system language if empty\n+     * @param remoteConfig The configuration of the remote context to set the language for\n      */\n     @SuppressWarnings(\"deprecation\") // Tracked as #4729 in github\n-    public static void setLanguage(String localeCode) {\n-        Configuration config = getInstance().getResources().getConfiguration();\n-        Locale newLocale = LanguageUtil.getLocale(localeCode);\n-        config.locale = newLocale;\n-        getInstance().getResources().updateConfiguration(config, getInstance().getResources().getDisplayMetrics());\n+    private static Configuration getLanguageConfig(Configuration remoteConfig) {\n+        Configuration newConfig = new Configuration(remoteConfig);\n+        Locale newLocale = LanguageUtil.getLocale(getSharedPrefs(AnkiDroidApp.getInstance()).getString(Preferences.LANGUAGE, \"\"));\n+\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n+            //Build list of locale strings, separated by commas: newLocale as first element\n+            String strLocaleList = newLocale.toLanguageTag();\n+            //if Anki locale from settings is no equal to system default, add system default as second item\n+            //LocaleList must not contain language tags twice, will crash otherwise!\n+            if (!strLocaleList.contains(Locale.getDefault().toLanguageTag()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51748d7d9403b0df96afc7d4339e3d8dadc48978"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE4ODA5NA==", "bodyText": "nit: Likewise, could these changes be reverted", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r426188094", "createdAt": "2020-05-16T20:26:10Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Statistics.java", "diffHunk": "@@ -45,15 +39,18 @@\n import com.ichi2.libanki.Decks;\n import com.ichi2.libanki.Stats;\n import com.ichi2.ui.SlidingTabLayout;\n-\n import com.ichi2.utils.JSONException;\n import com.ichi2.utils.JSONObject;\n \n import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n import java.util.Locale;\n \n+import androidx.appcompat.app.ActionBar;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51748d7d9403b0df96afc7d4339e3d8dadc48978"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE4ODI0Mw==", "bodyText": "Are both of these lines required? I'd have expected we'd only need the attachBaseContext", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r426188243", "createdAt": "2020-05-16T20:27:52Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/ui/AppCompatPreferenceActivity.java", "diffHunk": "@@ -44,6 +47,12 @@ protected void onCreate(Bundle savedInstanceState) {\n         getDelegate().installViewFactory();\n         getDelegate().onCreate(savedInstanceState);\n         super.onCreate(savedInstanceState);\n+        AnkiDroidApp.updateContextWithLanguage(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51748d7d9403b0df96afc7d4339e3d8dadc48978"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE4ODM0MQ==", "bodyText": "(optional) - It would be useful to add a couple of unit tests here (if possible - cultures can be a pain) as the functionality has changed.\nMostly to document the new intent of the code", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r426188341", "createdAt": "2020-05-16T20:29:22Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/utils/LanguageUtil.java", "diffHunk": "@@ -58,9 +58,10 @@ public static Locale getLocale(String localeCode) {\n             // If no code provided use the app language.\n         }\n         if (TextUtils.isEmpty(localeCode)) {\n-            locale = Locale.getDefault();\n             // Fall back to (system) default only if that fails.\n-        } else if (localeCode.length() > 2) {\n+            localeCode = Locale.getDefault().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51748d7d9403b0df96afc7d4339e3d8dadc48978"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE4ODUxOA==", "bodyText": "nitpick: add a space after the comma: langConfig, remoteContext.", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r426188518", "createdAt": "2020-05-16T20:31:04Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -336,23 +345,59 @@ public static void deleteACRALimiterData(Context context) {\n         context.getFileStreamPath(\"ACRA-limiter.json\").delete();\n     }\n \n+    /**\n+     *  Returns a Context with the correct, saved language, to be attached using attachBase(). For old APIs directly sets language using deprecated functions\n+     *\n+     * @param remoteContext The base context offered by attachBase() to be passed to super.attachBase(). Can be modified here to set correct GUI language.\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    public static Context updateContextWithLanguage(Context remoteContext){\n+        Configuration langConfig = getLanguageConfig(remoteContext.getResources().getConfiguration());\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N_MR1){\n+            return remoteContext.createConfigurationContext(langConfig);\n+        } else {\n+            remoteContext.getResources().updateConfiguration(langConfig,remoteContext.getResources().getDisplayMetrics());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51748d7d9403b0df96afc7d4339e3d8dadc48978"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE4ODU4Mg==", "bodyText": "Likewise, could you revert the import changes", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r426188582", "createdAt": "2020-05-16T20:31:58Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiActivity.java", "diffHunk": "@@ -34,14 +25,21 @@\n import com.ichi2.anki.dialogs.DialogHandler;\n import com.ichi2.anki.dialogs.SimpleMessageDialog;\n import com.ichi2.async.CollectionLoader;\n-import com.ichi2.compat.CompatHelper;\n import com.ichi2.compat.customtabs.CustomTabActivityHelper;\n import com.ichi2.compat.customtabs.CustomTabsFallback;\n import com.ichi2.compat.customtabs.CustomTabsHelper;\n import com.ichi2.libanki.Collection;\n import com.ichi2.themes.Themes;\n import com.ichi2.utils.AdaptionUtil;\n \n+import androidx.appcompat.app.AppCompatActivity;\n+import androidx.browser.customtabs.CustomTabsIntent;\n+import androidx.core.app.NotificationCompat;\n+import androidx.core.content.ContextCompat;\n+import androidx.fragment.app.DialogFragment;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51748d7d9403b0df96afc7d4339e3d8dadc48978"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE4ODY2NQ==", "bodyText": "Could you explain in attachBaseContext or updateContextWithLanguage if this duplication is necessary, it seems superfluous", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r426188665", "createdAt": "2020-05-16T20:32:49Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiActivity.java", "diffHunk": "@@ -59,12 +57,19 @@\n     protected void onCreate(Bundle savedInstanceState) {\n         // The hardware buttons should control the music volume\n         setVolumeControlStream(AudioManager.STREAM_MUSIC);\n+        AnkiDroidApp.updateContextWithLanguage(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51748d7d9403b0df96afc7d4339e3d8dadc48978"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE4ODc3Ng==", "bodyText": "It would be useful to over-document this method, (reasons for usage, why we sometimes don't use the return value) as it's something that'll confuse people unfamiliar with this matter.", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r426188776", "createdAt": "2020-05-16T20:34:16Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -336,23 +345,59 @@ public static void deleteACRALimiterData(Context context) {\n         context.getFileStreamPath(\"ACRA-limiter.json\").delete();\n     }\n \n+    /**\n+     *  Returns a Context with the correct, saved language, to be attached using attachBase(). For old APIs directly sets language using deprecated functions\n+     *\n+     * @param remoteContext The base context offered by attachBase() to be passed to super.attachBase(). Can be modified here to set correct GUI language.\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    public static Context updateContextWithLanguage(Context remoteContext){\n+        Configuration langConfig = getLanguageConfig(remoteContext.getResources().getConfiguration());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51748d7d9403b0df96afc7d4339e3d8dadc48978"}, "originalPosition": 101}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "60703c47d0a5d5a899f9b5f4e212dcf020dce3f1", "author": {"user": {"login": "mikehardy", "name": "Mike Hardy"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/60703c47d0a5d5a899f9b5f4e212dcf020dce3f1", "committedDate": "2020-05-19T00:08:26Z", "message": "Bumped version to 2.11alpha5\n@branch-specific"}, "afterCommit": {"oid": "37c0ec9b9fa6308ed923e19a54f9e2170c222721", "author": {"user": {"login": "Arthus", "name": null}}, "url": "https://github.com/ankidroid/Anki-Android/commit/37c0ec9b9fa6308ed923e19a54f9e2170c222721", "committedDate": "2020-05-19T00:09:36Z", "message": "Refactor code for setting Locale in Application context\n\nResolve timrae warnings\n\nremoving unnecessary comments and some cleanups\n\nremove some code repetitions\n\ncleanup imports\n\ntranslate studied_cards_today\n\nCollection's resources shouldn't be used. Collection is created/opened in OnCreate of AnkiDroidApp\nAt that time the correct language from the settings can't be loaded.\n\nimprove language methods\n\ntranslate remaining popups (e.g. \"Log in to AnkiWeb\")\nThose use the application context's resources, that can't be changed permanently on attachBaseContext()\nSo we have to switch the correct language's resources on-the-fly\n\nremove unnecessary code\n\ntranslate preferences main title\n\ntranslate preferences title p2\n\nfix for test branch merge\n\ntranslate language dropdown in a correct way"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d98fd10c534042e4aec44e4c35da43394d33520b", "author": {"user": {"login": "Arthus", "name": null}}, "url": "https://github.com/ankidroid/Anki-Android/commit/d98fd10c534042e4aec44e4c35da43394d33520b", "committedDate": "2020-05-19T01:19:36Z", "message": "Merge branch '4729-gui-language-fix_DevBranch' into 4729-gui-language-fix"}, "afterCommit": {"oid": "c2e119b124ddd9c9df25233fed4f454623f423a2", "author": {"user": {"login": "Arthus", "name": null}}, "url": "https://github.com/ankidroid/Anki-Android/commit/c2e119b124ddd9c9df25233fed4f454623f423a2", "committedDate": "2020-05-19T01:21:38Z", "message": "fix unnecessarily added/removed lines"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MjY3Nzk5", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#pullrequestreview-414267799", "createdAt": "2020-05-19T09:30:36Z", "commit": {"oid": "c2e119b124ddd9c9df25233fed4f454623f423a2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwOTozMDozN1rOGXX7zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwOTozNToyN1rOGXYHgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE2MjU3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (getInstance()  != null) {\n          \n          \n            \n                    if (getInstance() != null) {", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r427162573", "createdAt": "2020-05-19T09:30:37Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -336,23 +335,74 @@ public static void deleteACRALimiterData(Context context) {\n         context.getFileStreamPath(\"ACRA-limiter.json\").delete();\n     }\n \n+    /**\n+     *  Returns a Context with the correct, saved language, to be attached using attachBase().\n+     *  For old APIs directly sets language using deprecated functions\n+     *\n+     * @param remoteContext The base context offered by attachBase() to be passed to super.attachBase().\n+     *                      Can be modified here to set correct GUI language.\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    public static Context updateContextWithLanguage(Context remoteContext){\n+        SharedPreferences preferences;\n+        //sInstance (returned by getInstance() ) set during application OnCreate()\n+        //if getInstance() is null, the method is called during applications attachBaseContext()\n+        // and preferences need mBase directly (is provided by remoteContext during attachBaseContext())\n+        if (getInstance()  != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2e119b124ddd9c9df25233fed4f454623f423a2"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE2MjcyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1){\n          \n          \n            \n                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r427162728", "createdAt": "2020-05-19T09:30:53Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -336,23 +335,74 @@ public static void deleteACRALimiterData(Context context) {\n         context.getFileStreamPath(\"ACRA-limiter.json\").delete();\n     }\n \n+    /**\n+     *  Returns a Context with the correct, saved language, to be attached using attachBase().\n+     *  For old APIs directly sets language using deprecated functions\n+     *\n+     * @param remoteContext The base context offered by attachBase() to be passed to super.attachBase().\n+     *                      Can be modified here to set correct GUI language.\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    public static Context updateContextWithLanguage(Context remoteContext){\n+        SharedPreferences preferences;\n+        //sInstance (returned by getInstance() ) set during application OnCreate()\n+        //if getInstance() is null, the method is called during applications attachBaseContext()\n+        // and preferences need mBase directly (is provided by remoteContext during attachBaseContext())\n+        if (getInstance()  != null) {\n+            preferences = getSharedPrefs(getInstance().getBaseContext());\n+        } else {\n+            preferences = getSharedPrefs(remoteContext);\n+        }\n+        Configuration langConfig = getLanguageConfig(remoteContext.getResources().getConfiguration(), preferences);\n+        //API level >= 25: supported since API 17\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2e119b124ddd9c9df25233fed4f454623f423a2"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE2Mjk5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Locale newLocale = LanguageUtil.getLocale(prefs.getString(Preferences.LANGUAGE, \"\"),prefs);\n          \n          \n            \n                    Locale newLocale = LanguageUtil.getLocale(prefs.getString(Preferences.LANGUAGE, \"\"), prefs);", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r427162997", "createdAt": "2020-05-19T09:31:18Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -336,23 +335,74 @@ public static void deleteACRALimiterData(Context context) {\n         context.getFileStreamPath(\"ACRA-limiter.json\").delete();\n     }\n \n+    /**\n+     *  Returns a Context with the correct, saved language, to be attached using attachBase().\n+     *  For old APIs directly sets language using deprecated functions\n+     *\n+     * @param remoteContext The base context offered by attachBase() to be passed to super.attachBase().\n+     *                      Can be modified here to set correct GUI language.\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    public static Context updateContextWithLanguage(Context remoteContext){\n+        SharedPreferences preferences;\n+        //sInstance (returned by getInstance() ) set during application OnCreate()\n+        //if getInstance() is null, the method is called during applications attachBaseContext()\n+        // and preferences need mBase directly (is provided by remoteContext during attachBaseContext())\n+        if (getInstance()  != null) {\n+            preferences = getSharedPrefs(getInstance().getBaseContext());\n+        } else {\n+            preferences = getSharedPrefs(remoteContext);\n+        }\n+        Configuration langConfig = getLanguageConfig(remoteContext.getResources().getConfiguration(), preferences);\n+        //API level >= 25: supported since API 17\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1){\n+            return remoteContext.createConfigurationContext(langConfig);\n+        } else {\n+            //API level < 25:\n+            remoteContext.getResources().updateConfiguration(langConfig, remoteContext.getResources().getDisplayMetrics());\n+            return remoteContext;\n+        }\n+    }\n \n     /**\n-     * Sets the user language.\n+     *  Creates and returns a new configuration with the chosen GUI language that is saved in the preferences\n      *\n-     * @param localeCode The locale code of the language to set, system language if empty\n+     * @param remoteConfig The configuration of the remote context to set the language for\n+     * @param prefs\n      */\n     @SuppressWarnings(\"deprecation\") // Tracked as #4729 in github\n-    public static void setLanguage(String localeCode) {\n-        Configuration config = getInstance().getResources().getConfiguration();\n-        Locale newLocale = LanguageUtil.getLocale(localeCode);\n-        config.locale = newLocale;\n-        getInstance().getResources().updateConfiguration(config, getInstance().getResources().getDisplayMetrics());\n+    private static Configuration getLanguageConfig(Configuration remoteConfig, SharedPreferences prefs) {\n+        Configuration newConfig = new Configuration(remoteConfig);\n+        Locale newLocale = LanguageUtil.getLocale(prefs.getString(Preferences.LANGUAGE, \"\"),prefs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2e119b124ddd9c9df25233fed4f454623f423a2"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE2MzE3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            strLocaleList = strLocaleList+\",\"+Locale.getDefault().toLanguageTag();\n          \n          \n            \n                            strLocaleList = strLocaleList + \",\" + Locale.getDefault().toLanguageTag();", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r427163172", "createdAt": "2020-05-19T09:31:35Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -336,23 +335,74 @@ public static void deleteACRALimiterData(Context context) {\n         context.getFileStreamPath(\"ACRA-limiter.json\").delete();\n     }\n \n+    /**\n+     *  Returns a Context with the correct, saved language, to be attached using attachBase().\n+     *  For old APIs directly sets language using deprecated functions\n+     *\n+     * @param remoteContext The base context offered by attachBase() to be passed to super.attachBase().\n+     *                      Can be modified here to set correct GUI language.\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    public static Context updateContextWithLanguage(Context remoteContext){\n+        SharedPreferences preferences;\n+        //sInstance (returned by getInstance() ) set during application OnCreate()\n+        //if getInstance() is null, the method is called during applications attachBaseContext()\n+        // and preferences need mBase directly (is provided by remoteContext during attachBaseContext())\n+        if (getInstance()  != null) {\n+            preferences = getSharedPrefs(getInstance().getBaseContext());\n+        } else {\n+            preferences = getSharedPrefs(remoteContext);\n+        }\n+        Configuration langConfig = getLanguageConfig(remoteContext.getResources().getConfiguration(), preferences);\n+        //API level >= 25: supported since API 17\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1){\n+            return remoteContext.createConfigurationContext(langConfig);\n+        } else {\n+            //API level < 25:\n+            remoteContext.getResources().updateConfiguration(langConfig, remoteContext.getResources().getDisplayMetrics());\n+            return remoteContext;\n+        }\n+    }\n \n     /**\n-     * Sets the user language.\n+     *  Creates and returns a new configuration with the chosen GUI language that is saved in the preferences\n      *\n-     * @param localeCode The locale code of the language to set, system language if empty\n+     * @param remoteConfig The configuration of the remote context to set the language for\n+     * @param prefs\n      */\n     @SuppressWarnings(\"deprecation\") // Tracked as #4729 in github\n-    public static void setLanguage(String localeCode) {\n-        Configuration config = getInstance().getResources().getConfiguration();\n-        Locale newLocale = LanguageUtil.getLocale(localeCode);\n-        config.locale = newLocale;\n-        getInstance().getResources().updateConfiguration(config, getInstance().getResources().getDisplayMetrics());\n+    private static Configuration getLanguageConfig(Configuration remoteConfig, SharedPreferences prefs) {\n+        Configuration newConfig = new Configuration(remoteConfig);\n+        Locale newLocale = LanguageUtil.getLocale(prefs.getString(Preferences.LANGUAGE, \"\"),prefs);\n+        //API level >= 25\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n+            //Build list of locale strings, separated by commas: newLocale as first element\n+            String strLocaleList = newLocale.toLanguageTag();\n+            //if Anki locale from settings is no equal to system default, add system default as second item\n+            //LocaleList must not contain language tags twice, will crash otherwise!\n+            if (!strLocaleList.contains(Locale.getDefault().toLanguageTag())) {\n+                strLocaleList = strLocaleList+\",\"+Locale.getDefault().toLanguageTag();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2e119b124ddd9c9df25233fed4f454623f423a2"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE2MzMwNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1){\n          \n          \n            \n                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r427163304", "createdAt": "2020-05-19T09:31:50Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -336,23 +335,74 @@ public static void deleteACRALimiterData(Context context) {\n         context.getFileStreamPath(\"ACRA-limiter.json\").delete();\n     }\n \n+    /**\n+     *  Returns a Context with the correct, saved language, to be attached using attachBase().\n+     *  For old APIs directly sets language using deprecated functions\n+     *\n+     * @param remoteContext The base context offered by attachBase() to be passed to super.attachBase().\n+     *                      Can be modified here to set correct GUI language.\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    public static Context updateContextWithLanguage(Context remoteContext){\n+        SharedPreferences preferences;\n+        //sInstance (returned by getInstance() ) set during application OnCreate()\n+        //if getInstance() is null, the method is called during applications attachBaseContext()\n+        // and preferences need mBase directly (is provided by remoteContext during attachBaseContext())\n+        if (getInstance()  != null) {\n+            preferences = getSharedPrefs(getInstance().getBaseContext());\n+        } else {\n+            preferences = getSharedPrefs(remoteContext);\n+        }\n+        Configuration langConfig = getLanguageConfig(remoteContext.getResources().getConfiguration(), preferences);\n+        //API level >= 25: supported since API 17\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1){\n+            return remoteContext.createConfigurationContext(langConfig);\n+        } else {\n+            //API level < 25:\n+            remoteContext.getResources().updateConfiguration(langConfig, remoteContext.getResources().getDisplayMetrics());\n+            return remoteContext;\n+        }\n+    }\n \n     /**\n-     * Sets the user language.\n+     *  Creates and returns a new configuration with the chosen GUI language that is saved in the preferences\n      *\n-     * @param localeCode The locale code of the language to set, system language if empty\n+     * @param remoteConfig The configuration of the remote context to set the language for\n+     * @param prefs\n      */\n     @SuppressWarnings(\"deprecation\") // Tracked as #4729 in github\n-    public static void setLanguage(String localeCode) {\n-        Configuration config = getInstance().getResources().getConfiguration();\n-        Locale newLocale = LanguageUtil.getLocale(localeCode);\n-        config.locale = newLocale;\n-        getInstance().getResources().updateConfiguration(config, getInstance().getResources().getDisplayMetrics());\n+    private static Configuration getLanguageConfig(Configuration remoteConfig, SharedPreferences prefs) {\n+        Configuration newConfig = new Configuration(remoteConfig);\n+        Locale newLocale = LanguageUtil.getLocale(prefs.getString(Preferences.LANGUAGE, \"\"),prefs);\n+        //API level >= 25\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n+            //Build list of locale strings, separated by commas: newLocale as first element\n+            String strLocaleList = newLocale.toLanguageTag();\n+            //if Anki locale from settings is no equal to system default, add system default as second item\n+            //LocaleList must not contain language tags twice, will crash otherwise!\n+            if (!strLocaleList.contains(Locale.getDefault().toLanguageTag())) {\n+                strLocaleList = strLocaleList+\",\"+Locale.getDefault().toLanguageTag();\n+            }\n+\n+            LocaleList newLocaleList = LocaleList.forLanguageTags(strLocaleList);\n+            //first element of setLocales() is automatically setLocal()\n+            newConfig.setLocales(newLocaleList);\n+        } else {\n+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2e119b124ddd9c9df25233fed4f454623f423a2"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE2NDQxMA==", "bodyText": "(unsure) Is using the AnkiDroidApp resources here better?", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r427164410", "createdAt": "2020-05-19T09:33:38Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/stats/AnkiStatsTaskHandler.java", "diffHunk": "@@ -226,7 +226,7 @@ protected String doInBackground(Object... params) {\n                         cur.close();\n                     }\n                 }\n-                Resources res = collection.getContext().getResources();\n+                Resources res = mTextView.getResources();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2e119b124ddd9c9df25233fed4f454623f423a2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE2NDYyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return getLocale(localeCode,prefs);\n          \n          \n            \n                    return getLocale(localeCode, prefs);", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r427164621", "createdAt": "2020-05-19T09:34:00Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/utils/LanguageUtil.java", "diffHunk": "@@ -35,32 +36,42 @@\n \n \n     /**\n-     * Returns the {@link Locale} for the given code or the default locale, if no code is given.\n+     * Returns the {@link Locale} for the given code or the default locale, if no code or preferences are given.\n      *\n      * @return The {@link Locale} for the given code\n      */\n     public static Locale getLocale() {\n         return getLocale(\"\");\n     }\n \n+    /**\n+     * Returns the {@link Locale} for the given code or the default locale, if no preferences are given.\n+     *\n+     * @return The {@link Locale} for the given code\n+     */\n+    public static Locale getLocale(String localeCode) {\n+        SharedPreferences prefs = AnkiDroidApp.getSharedPrefs(AnkiDroidApp.getInstance().getBaseContext());\n+        return getLocale(localeCode,prefs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2e119b124ddd9c9df25233fed4f454623f423a2"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE2NTU2OA==", "bodyText": "My main concern is error handling here, could this method be wrapped in a try..catch..send error report and return the original context if this fails.", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r427165568", "createdAt": "2020-05-19T09:35:27Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -336,23 +335,74 @@ public static void deleteACRALimiterData(Context context) {\n         context.getFileStreamPath(\"ACRA-limiter.json\").delete();\n     }\n \n+    /**\n+     *  Returns a Context with the correct, saved language, to be attached using attachBase().\n+     *  For old APIs directly sets language using deprecated functions\n+     *\n+     * @param remoteContext The base context offered by attachBase() to be passed to super.attachBase().\n+     *                      Can be modified here to set correct GUI language.\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    public static Context updateContextWithLanguage(Context remoteContext){\n+        SharedPreferences preferences;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2e119b124ddd9c9df25233fed4f454623f423a2"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51bc1f601199f0f5748eb5f059b2217b526817e9", "author": {"user": {"login": "Arthus", "name": null}}, "url": "https://github.com/ankidroid/Anki-Android/commit/51bc1f601199f0f5748eb5f059b2217b526817e9", "committedDate": "2020-05-23T21:38:08Z", "message": "Refactor code for setting Locale in Application context"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c2e119b124ddd9c9df25233fed4f454623f423a2", "author": {"user": {"login": "Arthus", "name": null}}, "url": "https://github.com/ankidroid/Anki-Android/commit/c2e119b124ddd9c9df25233fed4f454623f423a2", "committedDate": "2020-05-19T01:21:38Z", "message": "fix unnecessarily added/removed lines"}, "afterCommit": {"oid": "51bc1f601199f0f5748eb5f059b2217b526817e9", "author": {"user": {"login": "Arthus", "name": null}}, "url": "https://github.com/ankidroid/Anki-Android/commit/51bc1f601199f0f5748eb5f059b2217b526817e9", "committedDate": "2020-05-23T21:38:08Z", "message": "Refactor code for setting Locale in Application context"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzEwODcw", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#pullrequestreview-417310870", "createdAt": "2020-05-23T21:41:10Z", "commit": {"oid": "51bc1f601199f0f5748eb5f059b2217b526817e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMTo0MToxMFrOGZrgYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMTo0MToxMFrOGZrgYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4MDM4NQ==", "bodyText": "Issue found: Avoid reassigning parameters such as 'localeCode'", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r429580385", "createdAt": "2020-05-23T21:41:10Z", "author": {"login": "timrae"}, "path": "AnkiDroid/src/main/java/com/ichi2/utils/LanguageUtil.java", "diffHunk": "@@ -51,25 +52,36 @@ public static Locale getLocale() {\n         return getLocale(\"\");\n     }\n \n+    /**\n+     * Returns the {@link Locale} for the given code or the default locale, if no preferences are given.\n+     *\n+     * @return The {@link Locale} for the given code\n+     */\n+    @NonNull\n+    public static Locale getLocale(@Nullable String localeCode) {\n+        SharedPreferences prefs = AnkiDroidApp.getSharedPrefs(AnkiDroidApp.getInstance().getBaseContext());\n+        return getLocale(localeCode, prefs);\n+    }\n+\n     /**\n      * Returns the {@link Locale} for the given code or the default locale, if no code is given.\n      *\n      * @param localeCode The locale code of the language\n      * @return The {@link Locale} for the given code\n      */\n     @NonNull\n-    public static Locale getLocale(@Nullable String localeCode) {\n+    public static Locale getLocale(@Nullable String localeCode, @NonNull SharedPreferences prefs) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51bc1f601199f0f5748eb5f059b2217b526817e9"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzExMDY5", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#pullrequestreview-417311069", "createdAt": "2020-05-23T21:45:35Z", "commit": {"oid": "51bc1f601199f0f5748eb5f059b2217b526817e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMTo0NTozNlrOGZrhVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMTo0NTozNlrOGZrhVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4MDYzMA==", "bodyText": "This has currently no effect if the exception is thrown during AnkiDroidApp's attachBaseContext() as ACRA is not initialized/configured until AnkiDroidApp.OnCreate()", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r429580630", "createdAt": "2020-05-23T21:45:36Z", "author": {"login": "Arthus"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -337,23 +336,82 @@ public static void deleteACRALimiterData(Context context) {\n         context.getFileStreamPath(\"ACRA-limiter.json\").delete();\n     }\n \n+    /**\n+     *  Returns a Context with the correct, saved language, to be attached using attachBase().\n+     *  For old APIs directly sets language using deprecated functions\n+     *\n+     * @param remoteContext The base context offered by attachBase() to be passed to super.attachBase().\n+     *                      Can be modified here to set correct GUI language.\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    @NonNull\n+    public static Context updateContextWithLanguage(@NonNull Context remoteContext) {\n+        try {\n+            SharedPreferences preferences;\n+            //sInstance (returned by getInstance() ) set during application OnCreate()\n+            //if getInstance() is null, the method is called during applications attachBaseContext()\n+            // and preferences need mBase directly (is provided by remoteContext during attachBaseContext())\n+            if (getInstance() != null) {\n+                preferences = getSharedPrefs(getInstance().getBaseContext());\n+            } else {\n+                preferences = getSharedPrefs(remoteContext);\n+            }\n+            Configuration langConfig = getLanguageConfig(remoteContext.getResources().getConfiguration(), preferences);\n+            //API level >= 25: supported since API 17\n+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {\n+                return remoteContext.createConfigurationContext(langConfig);\n+            } else {\n+                //API level < 25:\n+                remoteContext.getResources().updateConfiguration(langConfig, remoteContext.getResources().getDisplayMetrics());\n+                return remoteContext;\n+            }\n+        } catch (Exception e) {\n+            Timber.e(e, \"failed to update context with new language\");\n+            sendExceptionReport(e,\"AnkiDroidApp.updateContextWithLanguage\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51bc1f601199f0f5748eb5f059b2217b526817e9"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzExNzk4", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#pullrequestreview-417311798", "createdAt": "2020-05-23T22:00:09Z", "commit": {"oid": "51bc1f601199f0f5748eb5f059b2217b526817e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMjowMDowOVrOGZrkuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMjowMDowOVrOGZrkuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4MTQ5OQ==", "bodyText": "@david-allison-1 separately there is #6252 - seems like we should just put it in here. I understand we're working on sorting that one, I wonder (since the whole area was broken anyway) if we couldn't at least get this functionality in so language switching works at all and then worry about sorting it after? Having this not be in the locale's language means users may become trapped in an accidental but not-decipherable language though, so I'd vote to put loc in here personally\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            items.put(loc.getDisplayName(currentAppLocale), loc.toString());\n          \n          \n            \n                            items.put(loc.getDisplayName(loc), loc.toString());", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r429581499", "createdAt": "2020-05-23T22:00:09Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "diffHunk": "@@ -842,11 +843,13 @@ private String replaceStringIfNumeric(String str, String value) {\n \n     private void initializeLanguageDialog(PreferenceScreen screen) {\n         ListPreference languageSelection = (ListPreference) screen.findPreference(LANGUAGE);\n+        Locale currentAppLocale = LanguageUtil.getLocale(AnkiDroidApp.getSharedPrefs(AnkiDroidApp.getInstance())\n+                .getString(Preferences.LANGUAGE, \"\"));\n         if (languageSelection != null) {\n             Map<String, String> items = new TreeMap<>();\n             for (String localeCode : LanguageUtil.APP_LANGUAGES) {\n                 Locale loc = LanguageUtil.getLocale(localeCode);\n-                items.put(loc.getDisplayName(), loc.toString());\n+                items.put(loc.getDisplayName(currentAppLocale), loc.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51bc1f601199f0f5748eb5f059b2217b526817e9"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzExOTA0", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#pullrequestreview-417311904", "createdAt": "2020-05-23T22:02:17Z", "commit": {"oid": "51bc1f601199f0f5748eb5f059b2217b526817e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMjowMjoxOFrOGZrlQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMjowMjoxOFrOGZrlQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4MTYzMw==", "bodyText": "Oh this is interesting - the 'fil' language code is three letters, and there may be others. Man, locale stuff has really moved along since this area of the code saw some attention.\nTo be clear, this is not a regression here. It should not be addressed here. But I'll note it in an issue I have going separately #6256", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r429581633", "createdAt": "2020-05-23T22:02:18Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/utils/LanguageUtil.java", "diffHunk": "@@ -51,25 +52,36 @@ public static Locale getLocale() {\n         return getLocale(\"\");\n     }\n \n+    /**\n+     * Returns the {@link Locale} for the given code or the default locale, if no preferences are given.\n+     *\n+     * @return The {@link Locale} for the given code\n+     */\n+    @NonNull\n+    public static Locale getLocale(@Nullable String localeCode) {\n+        SharedPreferences prefs = AnkiDroidApp.getSharedPrefs(AnkiDroidApp.getInstance().getBaseContext());\n+        return getLocale(localeCode, prefs);\n+    }\n+\n     /**\n      * Returns the {@link Locale} for the given code or the default locale, if no code is given.\n      *\n      * @param localeCode The locale code of the language\n      * @return The {@link Locale} for the given code\n      */\n     @NonNull\n-    public static Locale getLocale(@Nullable String localeCode) {\n+    public static Locale getLocale(@Nullable String localeCode, @NonNull SharedPreferences prefs) {\n         Locale locale;\n         if (localeCode == null || TextUtils.isEmpty(localeCode)) {\n \n-            localeCode = AnkiDroidApp.getSharedPrefs(AnkiDroidApp.getInstance().getBaseContext()).getString(\n-                    Preferences.LANGUAGE, \"\");\n+            localeCode = prefs.getString(Preferences.LANGUAGE, \"\");\n             // If no code provided use the app language.\n         }\n         if (TextUtils.isEmpty(localeCode)) {\n-            locale = Locale.getDefault();\n             // Fall back to (system) default only if that fails.\n-        } else if (localeCode.length() > 2) {\n+            localeCode = Locale.getDefault().toString();\n+        }\n+        if (localeCode.length() > 2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51bc1f601199f0f5748eb5f059b2217b526817e9"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzEyMDM4", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#pullrequestreview-417312038", "createdAt": "2020-05-23T22:04:48Z", "commit": {"oid": "51bc1f601199f0f5748eb5f059b2217b526817e9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzExNTMz", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#pullrequestreview-417311533", "createdAt": "2020-05-23T21:55:04Z", "commit": {"oid": "51bc1f601199f0f5748eb5f059b2217b526817e9"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMTo1NTowNFrOGZrjiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMTo1NzoyOVrOGZrkGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4MTE5Mg==", "bodyText": "Mentioned this previously:\n\nThis will do nothing before ACRA is set up, but we'll get an exception report on the second call\n\nI'm happy with this. Implementer's choice if you want to comment it", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r429581192", "createdAt": "2020-05-23T21:55:04Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -337,23 +336,82 @@ public static void deleteACRALimiterData(Context context) {\n         context.getFileStreamPath(\"ACRA-limiter.json\").delete();\n     }\n \n+    /**\n+     *  Returns a Context with the correct, saved language, to be attached using attachBase().\n+     *  For old APIs directly sets language using deprecated functions\n+     *\n+     * @param remoteContext The base context offered by attachBase() to be passed to super.attachBase().\n+     *                      Can be modified here to set correct GUI language.\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    @NonNull\n+    public static Context updateContextWithLanguage(@NonNull Context remoteContext) {\n+        try {\n+            SharedPreferences preferences;\n+            //sInstance (returned by getInstance() ) set during application OnCreate()\n+            //if getInstance() is null, the method is called during applications attachBaseContext()\n+            // and preferences need mBase directly (is provided by remoteContext during attachBaseContext())\n+            if (getInstance() != null) {\n+                preferences = getSharedPrefs(getInstance().getBaseContext());\n+            } else {\n+                preferences = getSharedPrefs(remoteContext);\n+            }\n+            Configuration langConfig = getLanguageConfig(remoteContext.getResources().getConfiguration(), preferences);\n+            //API level >= 25: supported since API 17\n+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {\n+                return remoteContext.createConfigurationContext(langConfig);\n+            } else {\n+                //API level < 25:\n+                remoteContext.getResources().updateConfiguration(langConfig, remoteContext.getResources().getDisplayMetrics());\n+                return remoteContext;\n+            }\n+        } catch (Exception e) {\n+            Timber.e(e, \"failed to update context with new language\");\n+            sendExceptionReport(e,\"AnkiDroidApp.updateContextWithLanguage\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4MDYzMA=="}, "originalCommit": {"oid": "51bc1f601199f0f5748eb5f059b2217b526817e9"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4MTMzNw==", "bodyText": "Just a note: you might want to take a look over #6252, as this will change the functionality here. No action required.", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#discussion_r429581337", "createdAt": "2020-05-23T21:57:29Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "diffHunk": "@@ -842,11 +843,13 @@ private String replaceStringIfNumeric(String str, String value) {\n \n     private void initializeLanguageDialog(PreferenceScreen screen) {\n         ListPreference languageSelection = (ListPreference) screen.findPreference(LANGUAGE);\n+        Locale currentAppLocale = LanguageUtil.getLocale(AnkiDroidApp.getSharedPrefs(AnkiDroidApp.getInstance())\n+                .getString(Preferences.LANGUAGE, \"\"));\n         if (languageSelection != null) {\n             Map<String, String> items = new TreeMap<>();\n             for (String localeCode : LanguageUtil.APP_LANGUAGES) {\n                 Locale loc = LanguageUtil.getLocale(localeCode);\n-                items.put(loc.getDisplayName(), loc.toString());\n+                items.put(loc.getDisplayName(currentAppLocale), loc.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51bc1f601199f0f5748eb5f059b2217b526817e9"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzE2Mjcx", "url": "https://github.com/ankidroid/Anki-Android/pull/6138#pullrequestreview-417316271", "createdAt": "2020-05-23T23:45:35Z", "commit": {"oid": "51bc1f601199f0f5748eb5f059b2217b526817e9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3503, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}