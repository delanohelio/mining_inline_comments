{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMTI4NjUw", "number": 6956, "title": "Add Lint checks for the new time API", "bodyText": "Purpose / Description\nThis is an attempt to implement the Lint rules requested in #6951 .\nTo implement the rules a good(and recent) source of information was this excelent video (from the AndroidDevSummit) and the accompanying repository for actual code examples.\nNote: To add new Lint rules to the project you'll have to use the available com.ichi2.anki.lint.IssueRegistry class. After creating the new rules, register them with the IssueRegistry by adding them to the returned list of issues in the getIssues() method!\n\nFixes #6951\nHow Has This Been Tested?\nAll Lint rules have a passing test.\nChecklist\nPlease, go through these checks before submitting the PR.\n\n You have not changed whitespace unnecessarily (it makes diffs hard to read)\n You have a descriptive commit message with a short title (first line, max 50 chars).\n Your code follows the style of the project (e.g. never omit braces in if statements)\n You have commented your code, particularly in hard-to-understand areas\n You have performed a self-review of your own code", "createdAt": "2020-08-23T14:04:35Z", "url": "https://github.com/ankidroid/Anki-Android/pull/6956", "merged": true, "mergeCommit": {"oid": "de3f38ee3724ec244470f8aed753a12c01cc77ef"}, "closed": true, "closedAt": "2020-08-25T08:04:28Z", "author": {"login": "lukstbit"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdBwvXGAFqTQ3MzAyNDk4NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCQWpVABqjM2ODgyNjA1Njg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMDI0OTg0", "url": "https://github.com/ankidroid/Anki-Android/pull/6956#pullrequestreview-473024984", "createdAt": "2020-08-23T16:31:16Z", "commit": {"oid": "4ea7f3c66edf0a5c8b8a93321fa0c4147a7218d0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxNjozMToxNlrOHFORrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxNjozNDozNlrOHFOSvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIzODgyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String EXPLANATION = \"Manually creating Calendar instances it is not allowed, they must be \" +\n          \n          \n            \n                        \"obtained through the SystemTime class\";\n          \n          \n            \n                private static final String EXPLANATION = \"Manually creating Calendar instances means time cannot be controlled during testing. \" +\n          \n          \n            \n                        \"Calendar instances must obtained through the SystemTime class\";", "url": "https://github.com/ankidroid/Anki-Android/pull/6956#discussion_r475238829", "createdAt": "2020-08-23T16:31:16Z", "author": {"login": "mikehardy"}, "path": "lint-rules/src/main/java/com/ichi2/anki/lint/rules/CalendarInstanceUsage.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package com.ichi2.anki.lint.rules;\n+\n+import com.android.tools.lint.client.api.JavaEvaluator;\n+import com.android.tools.lint.detector.api.Detector;\n+import com.android.tools.lint.detector.api.Implementation;\n+import com.android.tools.lint.detector.api.Issue;\n+import com.android.tools.lint.detector.api.JavaContext;\n+import com.android.tools.lint.detector.api.Scope;\n+import com.android.tools.lint.detector.api.Severity;\n+import com.android.tools.lint.detector.api.SourceCodeScanner;\n+import com.google.common.annotations.VisibleForTesting;\n+import com.ichi2.anki.lint.utils.Constants;\n+import com.ichi2.anki.lint.utils.LintUtils;\n+import com.intellij.psi.PsiMethod;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+import org.jetbrains.uast.UCallExpression;\n+import org.jetbrains.uast.UClass;\n+\n+import java.util.ArrayList;\n+import java.util.Calendar;\n+import java.util.List;\n+\n+/**\n+ * This custom Lint rules will raise an error if a developer uses the {@link Calendar#getInstance()} method instead\n+ * of using the Calendar provided by the new SystemTime class.\n+ */\n+public class CalendarInstanceUsage extends Detector implements SourceCodeScanner {\n+\n+    @VisibleForTesting\n+    static final String ID = \"CalendarInstanceUsage\";\n+    @VisibleForTesting\n+    static final String DESCRIPTION = \"Use SystemTime instead of directly creating Calendar instances\";\n+    private static final String EXPLANATION = \"Manually creating Calendar instances it is not allowed, they must be \" +\n+            \"obtained through the SystemTime class\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ea7f3c66edf0a5c8b8a93321fa0c4147a7218d0"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIzODk2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String EXPLANATION = \"Values for System.currentTimeMillis() must be obtained through the SystemTime class\";\n          \n          \n            \n                private static final String EXPLANATION = \"Using time directly means time values cannot be controlled during testing. \" +\n          \n          \n            \n                    \" Time values like System.currentTimeMillis() must be obtained through the SystemTime class\";", "url": "https://github.com/ankidroid/Anki-Android/pull/6956#discussion_r475238964", "createdAt": "2020-08-23T16:33:01Z", "author": {"login": "mikehardy"}, "path": "lint-rules/src/main/java/com/ichi2/anki/lint/rules/DirectSystemTimeUsage.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package com.ichi2.anki.lint.rules;\n+\n+import com.android.tools.lint.client.api.JavaEvaluator;\n+import com.android.tools.lint.detector.api.Detector;\n+import com.android.tools.lint.detector.api.Implementation;\n+import com.android.tools.lint.detector.api.Issue;\n+import com.android.tools.lint.detector.api.JavaContext;\n+import com.android.tools.lint.detector.api.Scope;\n+import com.android.tools.lint.detector.api.Severity;\n+import com.android.tools.lint.detector.api.SourceCodeScanner;\n+import com.google.common.annotations.VisibleForTesting;\n+import com.ichi2.anki.lint.utils.Constants;\n+import com.ichi2.anki.lint.utils.LintUtils;\n+import com.intellij.psi.PsiMethod;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+import org.jetbrains.uast.UCallExpression;\n+import org.jetbrains.uast.UClass;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * This custom Lint rules will raise an error if a developer uses the {@link System#currentTimeMillis()} method instead\n+ * of using the time provided by the new SystemTime class.\n+ */\n+public class DirectSystemTimeUsage extends Detector implements SourceCodeScanner {\n+\n+    @VisibleForTesting\n+    static final String ID = \"DirectSystemTimeUsage\";\n+    @VisibleForTesting\n+    static final String DESCRIPTION = \"Use SystemTime instead of System.currentTimeMillis()\";\n+    private static final String EXPLANATION = \"Values for System.currentTimeMillis() must be obtained through the SystemTime class\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ea7f3c66edf0a5c8b8a93321fa0c4147a7218d0"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIzOTAyNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String EXPLANATION = \"Creating Date instances directly is not allowed, use the new SystemTime class instead\";\n          \n          \n            \n                private static final String EXPLANATION = \"Creating Date instances directly means dates cannot be controlled during testing, \" +\n          \n          \n            \n                    \" so it is not allowed. Use the SystemTime class instead\";", "url": "https://github.com/ankidroid/Anki-Android/pull/6956#discussion_r475239027", "createdAt": "2020-08-23T16:33:57Z", "author": {"login": "mikehardy"}, "path": "lint-rules/src/main/java/com/ichi2/anki/lint/rules/NewDateInstantiation.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package com.ichi2.anki.lint.rules;\n+\n+import com.android.tools.lint.detector.api.Detector;\n+import com.android.tools.lint.detector.api.Implementation;\n+import com.android.tools.lint.detector.api.Issue;\n+import com.android.tools.lint.detector.api.JavaContext;\n+import com.android.tools.lint.detector.api.Scope;\n+import com.android.tools.lint.detector.api.Severity;\n+import com.android.tools.lint.detector.api.SourceCodeScanner;\n+import com.google.common.annotations.VisibleForTesting;\n+import com.ichi2.anki.lint.utils.Constants;\n+import com.ichi2.anki.lint.utils.LintUtils;\n+import com.intellij.psi.PsiMethod;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+import org.jetbrains.uast.UCallExpression;\n+import org.jetbrains.uast.UClass;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * This custom Lint rules will raise an error if a developer instantiates the {@link java.util.Date} class directly\n+ * instead of using a {@link java.util.Date} provided through the new SystemTime class.\n+ */\n+public class NewDateInstantiation extends Detector implements SourceCodeScanner {\n+\n+    @VisibleForTesting\n+    static final String ID = \"NewDateInstantiation\";\n+    @VisibleForTesting\n+    static final String DESCRIPTION = \"Use SystemTime instead of directly instantiating Date\";\n+    private static final String EXPLANATION = \"Creating Date instances directly is not allowed, use the new SystemTime class instead\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ea7f3c66edf0a5c8b8a93321fa0c4147a7218d0"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIzOTEwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String EXPLANATION = \"Creating GregorianCalendar instances with from() is not allowed, use \" +\n          \n          \n            \n                        \"the new SystemTime class instead\";\n          \n          \n            \n                private static final String EXPLANATION = \"Creating GregorianCalendar instances with from() is not allowed, as \" +\n          \n          \n            \n                        \" it prevents control of time during testing. Use the SystemTime class instead\";", "url": "https://github.com/ankidroid/Anki-Android/pull/6956#discussion_r475239103", "createdAt": "2020-08-23T16:34:36Z", "author": {"login": "mikehardy"}, "path": "lint-rules/src/main/java/com/ichi2/anki/lint/rules/NewGregorianInstantiation.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package com.ichi2.anki.lint.rules;\n+\n+import com.android.tools.lint.client.api.JavaEvaluator;\n+import com.android.tools.lint.detector.api.Detector;\n+import com.android.tools.lint.detector.api.Implementation;\n+import com.android.tools.lint.detector.api.Issue;\n+import com.android.tools.lint.detector.api.JavaContext;\n+import com.android.tools.lint.detector.api.Scope;\n+import com.android.tools.lint.detector.api.Severity;\n+import com.android.tools.lint.detector.api.SourceCodeScanner;\n+import com.google.common.annotations.VisibleForTesting;\n+import com.ichi2.anki.lint.utils.Constants;\n+import com.ichi2.anki.lint.utils.LintUtils;\n+import com.intellij.psi.PsiMethod;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+import org.jetbrains.uast.UCallExpression;\n+import org.jetbrains.uast.UClass;\n+\n+import java.time.ZonedDateTime;\n+import java.util.ArrayList;\n+import java.util.GregorianCalendar;\n+import java.util.List;\n+\n+/**\n+ * This custom Lint rules will raise an error if a developer uses the {@link GregorianCalendar#from(ZonedDateTime)}\n+ * method to obtain an instance instead of using the new SystemTime class.\n+ */\n+public class NewGregorianInstantiation extends Detector implements SourceCodeScanner {\n+\n+    @VisibleForTesting\n+    static final String ID = \"NewGregorianInstantiation\";\n+    @VisibleForTesting\n+    static final String DESCRIPTION = \"Use SystemTime instead of GregorianCalendar.from()\";\n+    private static final String EXPLANATION = \"Creating GregorianCalendar instances with from() is not allowed, use \" +\n+            \"the new SystemTime class instead\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ea7f3c66edf0a5c8b8a93321fa0c4147a7218d0"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMDU5MDg5", "url": "https://github.com/ankidroid/Anki-Android/pull/6956#pullrequestreview-473059089", "createdAt": "2020-08-24T00:06:54Z", "commit": {"oid": "4ea7f3c66edf0a5c8b8a93321fa0c4147a7218d0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4ea7f3c66edf0a5c8b8a93321fa0c4147a7218d0", "author": {"user": {"login": "lukstbit", "name": null}}, "url": "https://github.com/ankidroid/Anki-Android/commit/4ea7f3c66edf0a5c8b8a93321fa0c4147a7218d0", "committedDate": "2020-08-23T13:52:54Z", "message": "Add lint checks for new time api"}, "afterCommit": {"oid": "55ba25423a728fe53dfe3fec079603559640f68a", "author": {"user": {"login": "lukstbit", "name": null}}, "url": "https://github.com/ankidroid/Anki-Android/commit/55ba25423a728fe53dfe3fec079603559640f68a", "committedDate": "2020-08-24T11:44:01Z", "message": "Add lint checks for new time api"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "55ba25423a728fe53dfe3fec079603559640f68a", "author": {"user": {"login": "lukstbit", "name": null}}, "url": "https://github.com/ankidroid/Anki-Android/commit/55ba25423a728fe53dfe3fec079603559640f68a", "committedDate": "2020-08-24T11:44:01Z", "message": "Add lint checks for new time api"}, "afterCommit": {"oid": "b964005157be74a1660c3210999811178895b598", "author": {"user": {"login": "lukstbit", "name": null}}, "url": "https://github.com/ankidroid/Anki-Android/commit/b964005157be74a1660c3210999811178895b598", "committedDate": "2020-08-24T13:09:18Z", "message": "Add lint checks for new time api"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNDc4NDg1", "url": "https://github.com/ankidroid/Anki-Android/pull/6956#pullrequestreview-473478485", "createdAt": "2020-08-24T13:35:25Z", "commit": {"oid": "b964005157be74a1660c3210999811178895b598"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMzozNToyNVrOHFkivQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMzozNjo1MFrOHFknUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTYwMzY0NQ==", "bodyText": "Does it mean you area allowing the call of time methods in the class Time ? It does not seems right. The abstract class Time should not get any access to real time", "url": "https://github.com/ankidroid/Anki-Android/pull/6956#discussion_r475603645", "createdAt": "2020-08-24T13:35:25Z", "author": {"login": "Arthur-Milchior"}, "path": "lint-rules/src/main/java/com/ichi2/anki/lint/utils/LintUtils.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package com.ichi2.anki.lint.utils;\n+\n+import org.jetbrains.uast.UClass;\n+\n+import java.util.List;\n+\n+public class LintUtils {\n+\n+    private LintUtils() {\n+        // no instantiation\n+    }\n+\n+\n+    /**\n+     * A helper method to check for special classes(Time and SystemTime) where the rules related to time apis shouldn't\n+     * be applied.\n+     *\n+     * @param classes the list of classes to look through\n+     * @return true if this is a class where the checks should not be applied, false otherwise\n+     */\n+    public static boolean isAnAllowedClass(List<UClass> classes) {\n+        boolean isInAllowedClass = false;\n+        for (int i = 0; i < classes.size(); i++) {\n+            final String className = classes.get(i).getName();\n+            if (className.equals(\"Time\") || className.equals(\"SystemTime\")) {\n+                isInAllowedClass = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b964005157be74a1660c3210999811178895b598"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTYwNDgxOA==", "bodyText": "The name is slightly confusing here, since \"SystemTime\" is a class of AnkiDroid and this is not related to the class SystemTime", "url": "https://github.com/ankidroid/Anki-Android/pull/6956#discussion_r475604818", "createdAt": "2020-08-24T13:36:50Z", "author": {"login": "Arthur-Milchior"}, "path": "lint-rules/src/main/java/com/ichi2/anki/lint/rules/DirectSystemTimeUsage.java", "diffHunk": "@@ -0,0 +1,75 @@\n+package com.ichi2.anki.lint.rules;\n+\n+import com.android.tools.lint.client.api.JavaEvaluator;\n+import com.android.tools.lint.detector.api.Detector;\n+import com.android.tools.lint.detector.api.Implementation;\n+import com.android.tools.lint.detector.api.Issue;\n+import com.android.tools.lint.detector.api.JavaContext;\n+import com.android.tools.lint.detector.api.Scope;\n+import com.android.tools.lint.detector.api.Severity;\n+import com.android.tools.lint.detector.api.SourceCodeScanner;\n+import com.google.common.annotations.VisibleForTesting;\n+import com.ichi2.anki.lint.utils.Constants;\n+import com.ichi2.anki.lint.utils.LintUtils;\n+import com.intellij.psi.PsiMethod;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+import org.jetbrains.uast.UCallExpression;\n+import org.jetbrains.uast.UClass;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * This custom Lint rules will raise an error if a developer uses the {@link System#currentTimeMillis()} method instead\n+ * of using the time provided by the new SystemTime class.\n+ */\n+public class DirectSystemTimeUsage extends Detector implements SourceCodeScanner {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b964005157be74a1660c3210999811178895b598"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNDkwNTk5", "url": "https://github.com/ankidroid/Anki-Android/pull/6956#pullrequestreview-473490599", "createdAt": "2020-08-24T13:39:47Z", "commit": {"oid": "8edbc1216f46fe1b07e52ffcab6d238c25f531a7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43f22f5103229ba54311a733aca9cc1ce4381ac5", "author": {"user": {"login": "lukstbit", "name": null}}, "url": "https://github.com/ankidroid/Anki-Android/commit/43f22f5103229ba54311a733aca9cc1ce4381ac5", "committedDate": "2020-08-25T05:21:06Z", "message": "Add lint checks for new time api"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8edbc1216f46fe1b07e52ffcab6d238c25f531a7", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/8edbc1216f46fe1b07e52ffcab6d238c25f531a7", "committedDate": "2020-08-24T13:37:54Z", "message": "Indicating how to access the time object\n\nI believe it will be more clear. This way they now where to find the object and not to create their own"}, "afterCommit": {"oid": "43f22f5103229ba54311a733aca9cc1ce4381ac5", "author": {"user": {"login": "lukstbit", "name": null}}, "url": "https://github.com/ankidroid/Anki-Android/commit/43f22f5103229ba54311a733aca9cc1ce4381ac5", "committedDate": "2020-08-25T05:21:06Z", "message": "Add lint checks for new time api"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2976, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}