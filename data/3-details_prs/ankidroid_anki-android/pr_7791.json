{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MDMyODAy", "number": 7791, "title": "Add onUpdateHook and onShownHook in card.js", "bodyText": "Purpose / Description\nImplement the onUpdateHook and onShownHook in AnkiDroid. These two hooks have existed in the Anki codebase for some time now.\nI recently updated them to be able to return promises. This allows users to have async functions synchronize with the rendering of MathJax.\nFixes\nNo issue.\nApproach\nonUpdateHook and onShownHook are two arrays, which exist to the user, while the card is being rendered.\nThe user can utilize them in note fields, or the card template, and can push actions to them.\nThis will cause those actions to be synchronized with the rendering of MathJax.\n\nonUpdateHook is run before MathJax\nonShownHook is run after MathJax finished completely\n\nThese functions can optionally return promises, which lets users take advantage of asynchronous JS as well.\nHow Has This Been Tested?\nHere's how an example, how they can be used:\n\\( 1 + 5 = <span id=\"fooBar\"></span> \\)\n\n<script>\n  onUpdateHook.push(() => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const foo = document.getElementById('fooBar')\n\n        if (foo) {\n          const six = document.createTextNode('6')\n          foo.parentElement.replaceChild(six, foo)\n        }\n\n        resolve()\n      }, 5000)\n    })\n  })\n</script>\nThe user uses MathJax with a \"target\", identified by an id. In JavaScript, the user can now replace this span with fitting text. it would now render 1 + 5 = 6 to the user. This would have already been possible before, technically, but with some important restrictions:\n\nIf the user needs to perform an async operation inside the JS, the function would immediately resolve, and not wait for the async action to take place. The user would have no way to make sure the function executes \"in time\".\nI'm not sure whether this is the case in AnkiDroid, but on other Anki platforms script tags inside the template, or note fields are always executed async, because they are inserted dynamically into the template. Having both hooks on AnkiDroid unifies these interfaces, and makes all platforms behave the same (well AnkiMobile does not have them yet, either, but I'm working on it ;) )\n\nCaveats\nThere is one difference though: Other Anki platforms hide the card content before MathJax executes, just like AnkiDroid. However, on other platforms, MathJax is executed regardless of whether the card contains MathJax elements. This means, that onUpdateHook would execute while the card is still invisible to the user. This allows developers to schedule text replacements on this hook, without the user noticing it. On AnkiDroid, this would only be hidden, if the user also happened to use MathJax at the same time.\nHowever I also understand the reasoning behind not doing this, and opting for avoiding the \"blink\" (the delay when rendering the screen) that happens if AnkiDroid decided to hide by default.\nI could think of one way to solve it: Similar to how mathjax-needs-to-render, we could add another ankidroid-before-shown class.\nAfter the function handling the MathJax, we could another promise:\n.then(() => {\n    card.classList.remove(\"ankidroid-before-shown\");\n    card.classList.add(\"ankidroid-shown\");\n});\nThis would let the template creator decide themselves, whether to hide the card content before the onShownHook runs, by adding to the template styling section:\n.ankidroid-before-shown {\n    visibility: hidden;\n}\nAlso: This PR really exposes this bug: #7790.\nChecklist\n\n You have not changed whitespace unnecessarily (it makes diffs hard to read)\n You have a descriptive commit message with a short title (first line, max 50 chars).\n Your code follows the style of the project (e.g. never omit braces in if statements)\n You have commented your code, particularly in hard-to-understand areas\n You have performed a self-review of your own code\n UI changes: include screenshots of all affected screens (in particular showing any new or changed strings)", "createdAt": "2020-11-29T01:18:57Z", "url": "https://github.com/ankidroid/Anki-Android/pull/7791", "merged": true, "mergeCommit": {"oid": "5e5baa8178e369f84ccf1fa4cb50b9f0774eed6d"}, "closed": true, "closedAt": "2020-12-01T13:33:22Z", "author": {"login": "hgiesel"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhEmXsAH2gAyNTI5MDMyODAyOjBlZTllY2Q4OGZhOGFiMTM5N2MwZmJkODA4ZjZlYWRjMmM4ZDE4MjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkJwSkAFqTU0NzIxMDM0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0ee9ecd88fa8ab1397c0fbd808f6eadc2c8d1821", "author": {"user": {"login": "hgiesel", "name": "Henrik Giesel"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/0ee9ecd88fa8ab1397c0fbd808f6eadc2c8d1821", "committedDate": "2020-11-28T23:18:16Z", "message": "Add onUpdateHook and onShownHook in card.js"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMDA1OTY5", "url": "https://github.com/ankidroid/Anki-Android/pull/7791#pullrequestreview-541005969", "createdAt": "2020-11-30T15:16:28Z", "commit": {"oid": "0ee9ecd88fa8ab1397c0fbd808f6eadc2c8d1821"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8da853c30434537437cfabcbb0fa5acb3bd30848", "author": {"user": {"login": "hgiesel", "name": "Henrik Giesel"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/8da853c30434537437cfabcbb0fa5acb3bd30848", "committedDate": "2020-12-01T13:18:16Z", "message": "Add anki-before-shown and anki-after-shown classes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxODk2Mzg4", "url": "https://github.com/ankidroid/Anki-Android/pull/7791#pullrequestreview-541896388", "createdAt": "2020-12-01T13:33:15Z", "commit": {"oid": "8da853c30434537437cfabcbb0fa5acb3bd30848"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3MjEwMzQx", "url": "https://github.com/ankidroid/Anki-Android/pull/7791#pullrequestreview-547210341", "createdAt": "2020-12-08T13:00:24Z", "commit": {"oid": "8da853c30434537437cfabcbb0fa5acb3bd30848"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzowMDoyNFrOIBZrbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzowMDoyNFrOIBZrbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM0MDIwNw==", "bodyText": "Sorry about the late review, just came up as a \"changed file\" and I was curious.\nHas this been tested on an API 16 emulator? I don't believe that older versions of Android will support promises.", "url": "https://github.com/ankidroid/Anki-Android/pull/7791#discussion_r538340207", "createdAt": "2020-12-08T13:00:24Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/assets/scripts/card.js", "diffHunk": "@@ -181,33 +181,58 @@ window.onload = function() {\n     window.location.href = \"#answer\";\n };\n \n+function _runHook(arr) {\n+    var promises = [];\n+\n+    for (var i = 0; i < arr.length; i++) {\n+        promises.push(arr[i]());\n+    }\n+\n+    return Promise.all(promises);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8da853c30434537437cfabcbb0fa5acb3bd30848"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3769, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}