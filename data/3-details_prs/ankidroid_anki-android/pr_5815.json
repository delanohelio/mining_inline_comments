{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4MTA5MDYz", "number": 5815, "title": "Fix #5811 - Clicking hint field blocks key input", "bodyText": "Review Goals\n\n\nConfirm whether selecting the Text Input Field, rather than \"Show Answer\" on a note type with both {{hint:}} and {{type:}} is correct.\n\n\nNormally, a {{type:}} field does not have this focus initially.\n\nBut, even with focus on the text input field, ENTER displays the new card.\n\n\n\n_relinquishFocus() is appropriate in cards.js, named correctly (and marked well as unstable).\n\n\nWhether the extraction of some parsing logic is a good first step in taming the complexity of filterUrl(String url), or if there's a better design.\n\n\nPurpose / Description\nAfter clicking on a {{hint:}} field with the mouse, the WebView took focus and KeyEvents were not sent to the Activity.\nThe mouse cursor was stuck as a text entry bar when hovering over the WebView\nFixes\nFixes #5811\nApproach\n\nWe define a JavaScript function: _relinquishFocus. This navigates to a URL which we capture from the Activity.\nWe call the above function onClick of the Hint field.\nWe handle the signal in AbstractFlashcardViewer and remove focus from the WebVew\nWe abstract out the concern of parsing the URL\n\nSlightly reduces mental load when looking at the function. Readers now see the \"What\", not the \"How\".\nTestability, and allows us to store known good values to call URL parsing.\n\n\n\nHow Has This Been Tested?\nUnit Tested\n\nTested via Keyboard & Mouse with Template:\n\n{{Front}}\n{{hint:Front}}\n\nInput: Click the hint. Press \"Enter\"\nOutput: Show Answer is pressed.\n\nTested via Keyboard & Mouse with Template:\n\"Type answer into the card\" is disabled\n\n{{type:Front}}\n\n{{hint:Back}}\n\nInput: Click the hint. Press \"A\"\nOutcome: \"A\" appears in the Android TextView.\nLearning\nThe WebView only appears to allows focus from touch events when \"Type answer into the card\" (via HTML input) is checked.\nEven though this is the case, the WebView can be focused from other inputs, and this will need to be more closely looked at in future.\nChecklist\n\n[ X ] You have not changed whitespace unnecessarily (it makes diffs hard to read)\n[ X ] You have a descriptive commit message with a short title (first line, max 50 chars).\n[ X ] Your code follows the style of the project (e.g. never omit braces in if statements)\n[ X ] You have commented your code, particularly in hard-to-understand areas\n[ X ] You have performed a self-review of your own code", "createdAt": "2020-03-14T02:01:26Z", "url": "https://github.com/ankidroid/Anki-Android/pull/5815", "merged": true, "mergeCommit": {"oid": "533592b44a2cfc0c7453e8f45eaefade71a1d3ce"}, "closed": true, "closedAt": "2020-03-18T20:57:26Z", "author": {"login": "david-allison-1"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcNbO0LgBqjMxMjg4NDAzMjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcO8d9bgFqTM3NzE3MTI4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "35b0c5fb7da46f0a03b562b3f10b6ef291322022", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/35b0c5fb7da46f0a03b562b3f10b6ef291322022", "committedDate": "2020-03-14T01:48:30Z", "message": "Fix #5811 - Clicking hint field blocks key input\n\nUsing a bluetooth mouse and keyboard, clicking a `{{hint:}}` field\nfocused the WebView, disabling navigation via the keyboard and leaving\na permanent text bar input cursor when hovering over the WebView.\n\nWe fix this via implementing and calling new JavaScript function,\nwhich passes control back to the Android UI"}, "afterCommit": {"oid": "40747cdd0102a0821a4f03703984cd24c54d2cbd", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/40747cdd0102a0821a4f03703984cd24c54d2cbd", "committedDate": "2020-03-14T02:09:39Z", "message": "Fix #5811 - Clicking hint field blocks key input\n\nUsing a bluetooth mouse and keyboard, clicking a `{{hint:}}` field\nfocused the WebView, disabling navigation via the keyboard and leaving\na permanent text bar input cursor when hovering over the WebView.\n\nWe fix this via implementing and calling new JavaScript function,\nwhich passes control back to the Android UI"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NzIzNzcz", "url": "https://github.com/ankidroid/Anki-Android/pull/5815#pullrequestreview-374723773", "createdAt": "2020-03-14T12:20:54Z", "commit": {"oid": "40747cdd0102a0821a4f03703984cd24c54d2cbd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxMjoyMDo1NFrOF2ZUXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxMjoyNjoyMlrOF2ZVSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU4MjIzNg==", "bodyText": "you have a SIGNAL_NONE which is defensive, but there's no case for it, or Timber.w for the default case. Maybe a quick Timber.w in default that says 'received unexpected signal ...' ?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                default:\n          \n          \n            \n                                default:\n          \n          \n            \n                                    Timber.w(\"Received unexpected signal '%s' from WebView. Ignoring.\", url);\n          \n      \n    \n    \n  \n\nor something like that", "url": "https://github.com/ankidroid/Anki-Android/pull/5815#discussion_r392582236", "createdAt": "2020-03-14T12:20:54Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -1469,11 +1471,18 @@ private boolean filterUrl(String url) {\n                     mFlipCardLayout.performClick();\n                     return true;\n                 }\n-                if (\"signal:typefocus\".equals(url)) {\n-                    // Hide the \u201cSHOW ANSWER\u201d button when the input has focus. The soft keyboard takes up enough space\n-                    // by itself.\n-                    mFlipCardLayout.setVisibility(View.GONE);\n-                    return true;\n+                switch (WebViewSignalParserUtils.getSignalFromUrl(url)) {\n+                    case WebViewSignalParserUtils.TYPE_FOCUS:\n+                        // Hide the \u201cSHOW ANSWER\u201d button when the input has focus. The soft keyboard takes up enough\n+                        // space by itself.\n+                        mFlipCardLayout.setVisibility(View.GONE);\n+                        return true;\n+                    case WebViewSignalParserUtils.RELINQUISH_FOCUS:\n+                        //#5811 - The WebView could be focused via mouse. Allow components to return focus to Android.\n+                        focusAnswerCompletionField();\n+                        return true;\n+                    default:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40747cdd0102a0821a4f03703984cd24c54d2cbd"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU4MjMzOA==", "bodyText": "My suggestion for defensive programming logging above could alternatively be here, just some notice somewhere would be nice\nIn addition, if you're doing short-circuit returns, you can go from else if statements to just if statements which I think require just a tiny bit less cognitive work to reason about. That's a nit thought", "url": "https://github.com/ankidroid/Anki-Android/pull/5815#discussion_r392582338", "createdAt": "2020-03-14T12:23:22Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -2925,4 +2944,24 @@ protected void dismiss(Collection.DismissType type) {\n         DeckTask.launchDeckTask(DeckTask.TASK_TYPE_DISMISS, mDismissCardHandler,\n                 new DeckTask.TaskData(new Object[]{mCurrentCard, type}));\n     }\n+\n+    /** Signals from a WebView represent actions with no parameters */\n+    @VisibleForTesting\n+    static class WebViewSignalParserUtils {\n+        public static final int SIGNAL_NONE = 0;\n+        public static final int TYPE_FOCUS = 1;\n+        /** Tell the app that we no longer want to focus the WebView and should instead return keyboard focus to a\n+         * native answer input method. */\n+        public static final int RELINQUISH_FOCUS = 2;\n+\n+        public static int getSignalFromUrl(String url) {\n+            if (\"signal:typefocus\".equals(url)) {\n+                return TYPE_FOCUS;\n+            } else if (\"signal:relinquishFocus\".equals(url)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40747cdd0102a0821a4f03703984cd24c54d2cbd"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU4MjQ3NA==", "bodyText": "@timrae I think this is the only potential change to existing behavior - do you have an opinion? The specific review note is:\n\nConfirm whether selecting the Text Input Field, rather than \"Show Answer\" on a note type with both {{hint:}} and {{type:}} is correct.\nNormally, a {{type:}} field does not have this focus initially.\nBut, even with focus on the text input field, ENTER displays the new card.", "url": "https://github.com/ankidroid/Anki-Android/pull/5815#discussion_r392582474", "createdAt": "2020-03-14T12:26:22Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -1651,6 +1660,16 @@ protected void hideEaseButtons() {\n         mEase3Layout.setVisibility(View.GONE);\n         mEase4Layout.setVisibility(View.GONE);\n         mFlipCardLayout.setVisibility(View.VISIBLE);\n+        focusAnswerCompletionField();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40747cdd0102a0821a4f03703984cd24c54d2cbd"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0ODQ3MTE3", "url": "https://github.com/ankidroid/Anki-Android/pull/5815#pullrequestreview-374847117", "createdAt": "2020-03-15T23:36:44Z", "commit": {"oid": "2dad24742f6b60a6c6c7ef322f725db2fc70a420"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2dad24742f6b60a6c6c7ef322f725db2fc70a420", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/2dad24742f6b60a6c6c7ef322f725db2fc70a420", "committedDate": "2020-03-15T23:11:50Z", "message": "Review: Log unexpected signal processing\n\nCo-Authored-By: Mike Hardy <github@mikehardy.net>"}, "afterCommit": {"oid": "40747cdd0102a0821a4f03703984cd24c54d2cbd", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/40747cdd0102a0821a4f03703984cd24c54d2cbd", "committedDate": "2020-03-14T02:09:39Z", "message": "Fix #5811 - Clicking hint field blocks key input\n\nUsing a bluetooth mouse and keyboard, clicking a `{{hint:}}` field\nfocused the WebView, disabling navigation via the keyboard and leaving\na permanent text bar input cursor when hovering over the WebView.\n\nWe fix this via implementing and calling new JavaScript function,\nwhich passes control back to the Android UI"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "40747cdd0102a0821a4f03703984cd24c54d2cbd", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/40747cdd0102a0821a4f03703984cd24c54d2cbd", "committedDate": "2020-03-14T02:09:39Z", "message": "Fix #5811 - Clicking hint field blocks key input\n\nUsing a bluetooth mouse and keyboard, clicking a `{{hint:}}` field\nfocused the WebView, disabling navigation via the keyboard and leaving\na permanent text bar input cursor when hovering over the WebView.\n\nWe fix this via implementing and calling new JavaScript function,\nwhich passes control back to the Android UI"}, "afterCommit": {"oid": "d81a9b8ec42a09b420bc7abc4e61c124f3811c51", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/d81a9b8ec42a09b420bc7abc4e61c124f3811c51", "committedDate": "2020-03-18T15:26:15Z", "message": "Fix #5811 - Clicking hint field blocks key input\n\nUsing a bluetooth mouse and keyboard, clicking a `{{hint:}}` field\nfocused the WebView, disabling navigation via the keyboard and leaving\na permanent text bar input cursor when hovering over the WebView.\n\nWe fix this via implementing and calling new JavaScript function,\nwhich passes control back to the Android UI"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTIyNjMw", "url": "https://github.com/ankidroid/Anki-Android/pull/5815#pullrequestreview-377122630", "createdAt": "2020-03-18T18:17:27Z", "commit": {"oid": "d81a9b8ec42a09b420bc7abc4e61c124f3811c51"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxODoxNzoyOFrOF4RaRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxODoxNzoyOFrOF4RaRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU0OTgzMA==", "bodyText": "I don't understand how a signal that starts with answer_ease is handled, when the 4 we expect are above (and are handled in a switch when they are seen by the caller) but handled is actually not handled? who is handling it? Might be naming semantics - might be better as unhandled with a little more logging about an answer_ease value that we're not expecting?", "url": "https://github.com/ankidroid/Anki-Android/pull/5815#discussion_r394549830", "createdAt": "2020-03-18T18:17:28Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3092,4 +3113,43 @@ protected void dismiss(Collection.DismissType type) {\n         DeckTask.launchDeckTask(DeckTask.TASK_TYPE_DISMISS, mDismissCardHandler,\n                 new DeckTask.TaskData(new Object[]{mCurrentCard, type}));\n     }\n+\n+    /** Signals from a WebView represent actions with no parameters */\n+    @VisibleForTesting\n+    static class WebViewSignalParserUtils {\n+        /** A signal which we did not know how to handle */\n+        public static final int SIGNAL_UNHANDLED = 0;\n+        /** A known signal which should perform a noop */\n+        public static final int SIGNAL_HANDLED = 1;\n+\n+        public static final int TYPE_FOCUS = 2;\n+        /** Tell the app that we no longer want to focus the WebView and should instead return keyboard focus to a\n+         * native answer input method. */\n+        public static final int RELINQUISH_FOCUS = 3;\n+\n+        public static final int SHOW_ANSWER = 4;\n+        public static final int ANSWER_ORDINAL_1 = 5;\n+        public static final int ANSWER_ORDINAL_2 = 6;\n+        public static final int ANSWER_ORDINAL_3 = 7;\n+        public static final int ANSWER_ORDINAL_4 = 8;\n+\n+        public static int getSignalFromUrl(String url) {\n+            switch (url) {\n+                case \"signal:typefocus\": return TYPE_FOCUS;\n+                case \"signal:relinquishFocus\": return RELINQUISH_FOCUS;\n+                case \"signal:show_answer\": return SHOW_ANSWER;\n+                case \"signal:answer_ease1\": return ANSWER_ORDINAL_1;\n+                case \"signal:answer_ease2\": return ANSWER_ORDINAL_2;\n+                case \"signal:answer_ease3\": return ANSWER_ORDINAL_3;\n+                case \"signal:answer_ease4\": return ANSWER_ORDINAL_4;\n+                default: break;\n+            }\n+\n+            if (url.startsWith(\"signal:answer_ease\")) {\n+                return SIGNAL_HANDLED;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d81a9b8ec42a09b420bc7abc4e61c124f3811c51"}, "originalPosition": 156}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8aae1768128d56df6ebfd2c1c4b3a36fae3b5eef", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/8aae1768128d56df6ebfd2c1c4b3a36fae3b5eef", "committedDate": "2020-03-18T19:21:09Z", "message": "Fix #5811 - Clicking hint field blocks key input\n\nUsing a bluetooth mouse and keyboard, clicking a `{{hint:}}` field\nfocused the WebView, disabling navigation via the keyboard and leaving\na permanent text bar input cursor when hovering over the WebView."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d81a9b8ec42a09b420bc7abc4e61c124f3811c51", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/d81a9b8ec42a09b420bc7abc4e61c124f3811c51", "committedDate": "2020-03-18T15:26:15Z", "message": "Fix #5811 - Clicking hint field blocks key input\n\nUsing a bluetooth mouse and keyboard, clicking a `{{hint:}}` field\nfocused the WebView, disabling navigation via the keyboard and leaving\na permanent text bar input cursor when hovering over the WebView.\n\nWe fix this via implementing and calling new JavaScript function,\nwhich passes control back to the Android UI"}, "afterCommit": {"oid": "8aae1768128d56df6ebfd2c1c4b3a36fae3b5eef", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/8aae1768128d56df6ebfd2c1c4b3a36fae3b5eef", "committedDate": "2020-03-18T19:21:09Z", "message": "Fix #5811 - Clicking hint field blocks key input\n\nUsing a bluetooth mouse and keyboard, clicking a `{{hint:}}` field\nfocused the WebView, disabling navigation via the keyboard and leaving\na permanent text bar input cursor when hovering over the WebView."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTY4OTU0", "url": "https://github.com/ankidroid/Anki-Android/pull/5815#pullrequestreview-377168954", "createdAt": "2020-03-18T19:24:27Z", "commit": {"oid": "8aae1768128d56df6ebfd2c1c4b3a36fae3b5eef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOToyNDoyN1rOF4TrPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOToyNDoyN1rOF4TrPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4Njk0MQ==", "bodyText": "Issue found: Avoid unused imports such as 'com.ichi2.anki.AbstractFlashcardViewer.WebViewSignalParserUtils'", "url": "https://github.com/ankidroid/Anki-Android/pull/5815#discussion_r394586941", "createdAt": "2020-03-18T19:24:27Z", "author": {"login": "timrae"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/AbstractFlashcardViewerTest.java", "diffHunk": "@@ -8,6 +8,7 @@\n \n import androidx.test.ext.junit.runners.AndroidJUnit4;\n \n+import static com.ichi2.anki.AbstractFlashcardViewer.WebViewSignalParserUtils.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8aae1768128d56df6ebfd2c1c4b3a36fae3b5eef"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTcxMjgw", "url": "https://github.com/ankidroid/Anki-Android/pull/5815#pullrequestreview-377171280", "createdAt": "2020-03-18T19:28:03Z", "commit": {"oid": "8aae1768128d56df6ebfd2c1c4b3a36fae3b5eef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3698, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}