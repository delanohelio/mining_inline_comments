{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4MzQxNzE1", "number": 7019, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNDoyMTozM1rOEf0M-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNjo1MzozM1rOEgE9EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNzk2NjAxOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/UIUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNDoyMTozM1rOHMVVYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNDoyMTozM1rOHMVVYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjY5NDQ5Ng==", "bodyText": "!!", "url": "https://github.com/ankidroid/Anki-Android/pull/7019#discussion_r482694496", "createdAt": "2020-09-03T04:21:33Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/UIUtils.java", "diffHunk": "@@ -18,9 +20,10 @@\n import static com.ichi2.async.CollectionTask.TASK_TYPE.*;\n import com.ichi2.async.TaskData;\n import com.ichi2.async.TaskListener;\n-import com.ichi2.libanki.Collection;\n import com.ichi2.libanki.utils.Time;\n \n+import org.jetbrains.annotations.NotNull;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc4ff0a5bd78e855734a911bb38e99550ba4fa16"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDcwMDQ0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/test/java/com/ichi2/anki/cardviewer/MissingImageHandlerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNjo1MDo0MFrOHMvV-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNjo1MDo0MFrOHMvV-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyMDYzNA==", "bodyText": "Just to say that static mocking with Mockito is possible now and not too hard, there examples in our codebase if you grep mockStatic I believe. Not concerned about the actual comment you left, this is just knowledge-sharing / FYI", "url": "https://github.com/ankidroid/Anki-Android/pull/7019#discussion_r483120634", "createdAt": "2020-09-03T16:50:40Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/cardviewer/MissingImageHandlerTest.java", "diffHunk": "@@ -0,0 +1,161 @@\n+/*\n+ *  Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+ *\n+ *  This program is free software; you can redistribute it and/or modify it under\n+ *  the terms of the GNU General Public License as published by the Free Software\n+ *  Foundation; either version 3 of the License, or (at your option) any later\n+ *  version.\n+ *\n+ *  This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ *  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ *  PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License along with\n+ *  this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.anki.cardviewer;\n+\n+import android.net.Uri;\n+import android.os.Build;\n+import android.webkit.WebResourceRequest;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.contains;\n+import static org.hamcrest.Matchers.greaterThanOrEqualTo;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.Assume.assumeThat;\n+\n+// PERF:\n+// Theoretically should be able to get away with not using this, but it requires WebResourceRequest (easy to mock)\n+// and URLUtil.guessFileName (static - likely harder)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66824b8c05ad36b94b108fb988e2996c55e30cca"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDcxMDU3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/test/java/com/ichi2/anki/cardviewer/MissingImageHandlerTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNjo1MzozM1rOHMvcoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODozOTozNlrOHMzEQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyMjMzNg==", "bodyText": "specifying SDK configs in robolectric should produce multiple runs ?, It is like using parameterized tests, you get one run in the default SDK I think and then one in the one you specify? The LanguageUtil test should show it. I guess that is surprising as you'd expect a single config API annotation to get you only one run with only that API, but you get the default API as well?", "url": "https://github.com/ankidroid/Anki-Android/pull/7019#discussion_r483122336", "createdAt": "2020-09-03T16:53:33Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/cardviewer/MissingImageHandlerTest.java", "diffHunk": "@@ -0,0 +1,161 @@\n+/*\n+ *  Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+ *\n+ *  This program is free software; you can redistribute it and/or modify it under\n+ *  the terms of the GNU General Public License as published by the Free Software\n+ *  Foundation; either version 3 of the License, or (at your option) any later\n+ *  version.\n+ *\n+ *  This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ *  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ *  PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License along with\n+ *  this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.anki.cardviewer;\n+\n+import android.net.Uri;\n+import android.os.Build;\n+import android.webkit.WebResourceRequest;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.contains;\n+import static org.hamcrest.Matchers.greaterThanOrEqualTo;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.Assume.assumeThat;\n+\n+// PERF:\n+// Theoretically should be able to get away with not using this, but it requires WebResourceRequest (easy to mock)\n+// and URLUtil.guessFileName (static - likely harder)\n+@RunWith(AndroidJUnit4.class)\n+public class MissingImageHandlerTest {\n+\n+    private MissingImageHandler mSut;\n+    private int mTimesCalled = 0;\n+    private List<String> mFileNames;\n+\n+    @Before\n+    public void before() {\n+        // couldn't get Config(minSDK) to work, as that produced multiple test calls.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66824b8c05ad36b94b108fb988e2996c55e30cca"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE0MzY3Mw==", "bodyText": "I was expecting minApi to be a predicate on the current version, causing an ignore if current < minApi rather than including using all versions from minApi to maxApi", "url": "https://github.com/ankidroid/Anki-Android/pull/7019#discussion_r483143673", "createdAt": "2020-09-03T17:31:13Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/cardviewer/MissingImageHandlerTest.java", "diffHunk": "@@ -0,0 +1,161 @@\n+/*\n+ *  Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+ *\n+ *  This program is free software; you can redistribute it and/or modify it under\n+ *  the terms of the GNU General Public License as published by the Free Software\n+ *  Foundation; either version 3 of the License, or (at your option) any later\n+ *  version.\n+ *\n+ *  This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ *  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ *  PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License along with\n+ *  this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.anki.cardviewer;\n+\n+import android.net.Uri;\n+import android.os.Build;\n+import android.webkit.WebResourceRequest;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.contains;\n+import static org.hamcrest.Matchers.greaterThanOrEqualTo;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.Assume.assumeThat;\n+\n+// PERF:\n+// Theoretically should be able to get away with not using this, but it requires WebResourceRequest (easy to mock)\n+// and URLUtil.guessFileName (static - likely harder)\n+@RunWith(AndroidJUnit4.class)\n+public class MissingImageHandlerTest {\n+\n+    private MissingImageHandler mSut;\n+    private int mTimesCalled = 0;\n+    private List<String> mFileNames;\n+\n+    @Before\n+    public void before() {\n+        // couldn't get Config(minSDK) to work, as that produced multiple test calls.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyMjMzNg=="}, "originalCommit": {"oid": "66824b8c05ad36b94b108fb988e2996c55e30cca"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE4MTYzMw==", "bodyText": "Hmm - this does what I expect, FWIW, runs on these-and-only-these APIs (or at least it did when I wrote it \ud83d\ude05 )\n\n  \n    \n      Anki-Android/AnkiDroid/src/test/java/com/ichi2/compat/CompatCopyFileTest.java\n    \n    \n         Line 39\n      in\n      f547930\n    \n    \n    \n    \n\n        \n          \n           @Config(sdk = { 16, 26 })", "url": "https://github.com/ankidroid/Anki-Android/pull/7019#discussion_r483181633", "createdAt": "2020-09-03T18:39:36Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/cardviewer/MissingImageHandlerTest.java", "diffHunk": "@@ -0,0 +1,161 @@\n+/*\n+ *  Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+ *\n+ *  This program is free software; you can redistribute it and/or modify it under\n+ *  the terms of the GNU General Public License as published by the Free Software\n+ *  Foundation; either version 3 of the License, or (at your option) any later\n+ *  version.\n+ *\n+ *  This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ *  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ *  PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License along with\n+ *  this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.anki.cardviewer;\n+\n+import android.net.Uri;\n+import android.os.Build;\n+import android.webkit.WebResourceRequest;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.contains;\n+import static org.hamcrest.Matchers.greaterThanOrEqualTo;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.Assume.assumeThat;\n+\n+// PERF:\n+// Theoretically should be able to get away with not using this, but it requires WebResourceRequest (easy to mock)\n+// and URLUtil.guessFileName (static - likely harder)\n+@RunWith(AndroidJUnit4.class)\n+public class MissingImageHandlerTest {\n+\n+    private MissingImageHandler mSut;\n+    private int mTimesCalled = 0;\n+    private List<String> mFileNames;\n+\n+    @Before\n+    public void before() {\n+        // couldn't get Config(minSDK) to work, as that produced multiple test calls.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyMjMzNg=="}, "originalCommit": {"oid": "66824b8c05ad36b94b108fb988e2996c55e30cca"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 898, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}