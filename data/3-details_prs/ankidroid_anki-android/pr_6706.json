{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0MTAwNjg5", "number": 6706, "title": "Undo class", "bodyText": "Porting upstream undo test is complex, because they are not really the same thing. E.g. \"save()\" does not deal with undo in AnkiDroid.  In order to try to simplify it, I wanted to simplify the undoing code. I hope you'll find it more clear.\nI'll put it in my merge branch and test it", "createdAt": "2020-07-21T04:10:22Z", "url": "https://github.com/ankidroid/Anki-Android/pull/6706", "merged": true, "mergeCommit": {"oid": "087dafa806a212b54826e9596ab39d8cc5c7ab8c"}, "closed": true, "closedAt": "2020-07-22T18:49:21Z", "author": {"login": "Arthur-Milchior"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3NUNAgFqTQ1Mjg0NjUyOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3fboIgFqTQ1MzU5MjQ5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyODQ2NTI4", "url": "https://github.com/ankidroid/Anki-Android/pull/6706#pullrequestreview-452846528", "createdAt": "2020-07-21T21:34:53Z", "commit": {"oid": "6f2f5d41b4f22ef5e3ad6003aa9193647bb410f9"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMTozNDo1M1rOG1Ko-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMTozOTo1OVrOG1KyZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwMjA0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public DismissType getDt() {\n          \n          \n            \n                public DismissType getDismissType() {", "url": "https://github.com/ankidroid/Anki-Android/pull/6706#discussion_r458402043", "createdAt": "2020-07-21T21:34:53Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Undo.java", "diffHunk": "@@ -0,0 +1,314 @@\n+package com.ichi2.libanki;\n+\n+import android.content.res.Resources;\n+import android.util.Pair;\n+\n+import com.ichi2.anki.CardUtils;\n+import com.ichi2.anki.R;\n+import com.ichi2.libanki.Collection.DismissType;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import timber.log.Timber;\n+\n+import static com.ichi2.libanki.Collection.DismissType.*;\n+\n+public abstract class Undo {\n+    private final DismissType mDt;\n+\n+    public Undo(DismissType dt) {\n+        mDt = dt;\n+    }\n+\n+    public String name(Resources res) {\n+        return res.getString(mDt.undoNameId);\n+    }\n+\n+    public DismissType getDt() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f2f5d41b4f22ef5e3ad6003aa9193647bb410f9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwMjc0Mg==", "bodyText": "It's a little unusual to have an undo without a \"do\", as having the \"undo\" close to the \"do\" means that there's additional mental context when changes to the \"do\" are made.\nI'm not requesting a change now, but would this direction be possible in the future?", "url": "https://github.com/ankidroid/Anki-Android/pull/6706#discussion_r458402742", "createdAt": "2020-07-21T21:36:17Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Undo.java", "diffHunk": "@@ -0,0 +1,314 @@\n+package com.ichi2.libanki;\n+\n+import android.content.res.Resources;\n+import android.util.Pair;\n+\n+import com.ichi2.anki.CardUtils;\n+import com.ichi2.anki.R;\n+import com.ichi2.libanki.Collection.DismissType;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import timber.log.Timber;\n+\n+import static com.ichi2.libanki.Collection.DismissType.*;\n+\n+public abstract class Undo {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f2f5d41b4f22ef5e3ad6003aa9193647bb410f9"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwMzU3Nw==", "bodyText": "Does this need to be copied? Ditto for the other instances", "url": "https://github.com/ankidroid/Anki-Android/pull/6706#discussion_r458403577", "createdAt": "2020-07-21T21:38:06Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Undo.java", "diffHunk": "@@ -0,0 +1,314 @@\n+package com.ichi2.libanki;\n+\n+import android.content.res.Resources;\n+import android.util.Pair;\n+\n+import com.ichi2.anki.CardUtils;\n+import com.ichi2.anki.R;\n+import com.ichi2.libanki.Collection.DismissType;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import timber.log.Timber;\n+\n+import static com.ichi2.libanki.Collection.DismissType.*;\n+\n+public abstract class Undo {\n+    private final DismissType mDt;\n+\n+    public Undo(DismissType dt) {\n+        mDt = dt;\n+    }\n+\n+    public String name(Resources res) {\n+        return res.getString(mDt.undoNameId);\n+    }\n+\n+    public DismissType getDt() {\n+        return mDt;\n+    }\n+\n+    public abstract long undo(Collection col);\n+\n+    public static class UndoReview extends Undo {\n+        private final Card mCard;\n+        private final boolean mWasLeech;\n+        public UndoReview(Card card, boolean wasLeach) {\n+            super(REVIEW);\n+            mCard = card.clone();\n+            mWasLeech = wasLeach;\n+        }\n+\n+        public long undo(Collection col) {\n+            // remove leech tag if it didn't have it before\n+            if (!mWasLeech && mCard.note().hasTag(\"leech\")) {\n+                mCard.note().delTag(\"leech\");\n+                mCard.note().flush();\n+            }\n+            Timber.i(\"Undo Review of card %d, leech: %b\", mCard.getId(), mWasLeech);\n+            // write old data\n+            mCard.flush(false);\n+            // and delete revlog entry\n+            long last = col.getDb().queryLongScalar(\"SELECT id FROM revlog WHERE cid = ? ORDER BY id DESC LIMIT 1\", new Object [] {mCard.getId()});\n+            col.getDb().execute(\"DELETE FROM revlog WHERE id = \" + last);\n+            // restore any siblings\n+            col.getDb().execute(\"update cards set queue=type,mod=?,usn=? where queue=\" + Consts.QUEUE_TYPE_SIBLING_BURIED + \" and nid=?\",\n+                        new Object[]{Utils.intTime(), col.usn(), mCard.getNid()});\n+            // and finally, update daily count\n+            @Consts.CARD_QUEUE int n = mCard.getQueue() == Consts.QUEUE_TYPE_DAY_LEARN_RELEARN ? Consts.QUEUE_TYPE_LRN : mCard.getQueue();\n+            String type = (new String[]{\"new\", \"lrn\", \"rev\"})[n];\n+            col.getSched()._updateStats(mCard, type, -1);\n+            col.getSched().setReps(col.getSched().getReps() - 1);\n+            return mCard.getId();\n+        }\n+    }\n+\n+    public static class UndoBuryCard extends Undo {\n+        private final List<Card> mCards;\n+        private final long mCid;\n+        public UndoBuryCard(List<Card> cards, long cid) {\n+            super(BURY_CARD);\n+            mCards = cards;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f2f5d41b4f22ef5e3ad6003aa9193647bb410f9"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwMzgyMQ==", "bodyText": "Maybe \"Undoable\"", "url": "https://github.com/ankidroid/Anki-Android/pull/6706#discussion_r458403821", "createdAt": "2020-07-21T21:38:40Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Undo.java", "diffHunk": "@@ -0,0 +1,314 @@\n+package com.ichi2.libanki;\n+\n+import android.content.res.Resources;\n+import android.util.Pair;\n+\n+import com.ichi2.anki.CardUtils;\n+import com.ichi2.anki.R;\n+import com.ichi2.libanki.Collection.DismissType;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import timber.log.Timber;\n+\n+import static com.ichi2.libanki.Collection.DismissType.*;\n+\n+public abstract class Undo {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f2f5d41b4f22ef5e3ad6003aa9193647bb410f9"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwNDQ1Mw==", "bodyText": "Could we change the -1 to a const/enum if we're doing a lot of work here", "url": "https://github.com/ankidroid/Anki-Android/pull/6706#discussion_r458404453", "createdAt": "2020-07-21T21:39:59Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Undo.java", "diffHunk": "@@ -0,0 +1,314 @@\n+package com.ichi2.libanki;\n+\n+import android.content.res.Resources;\n+import android.util.Pair;\n+\n+import com.ichi2.anki.CardUtils;\n+import com.ichi2.anki.R;\n+import com.ichi2.libanki.Collection.DismissType;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import timber.log.Timber;\n+\n+import static com.ichi2.libanki.Collection.DismissType.*;\n+\n+public abstract class Undo {\n+    private final DismissType mDt;\n+\n+    public Undo(DismissType dt) {\n+        mDt = dt;\n+    }\n+\n+    public String name(Resources res) {\n+        return res.getString(mDt.undoNameId);\n+    }\n+\n+    public DismissType getDt() {\n+        return mDt;\n+    }\n+\n+    public abstract long undo(Collection col);\n+\n+    public static class UndoReview extends Undo {\n+        private final Card mCard;\n+        private final boolean mWasLeech;\n+        public UndoReview(Card card, boolean wasLeach) {\n+            super(REVIEW);\n+            mCard = card.clone();\n+            mWasLeech = wasLeach;\n+        }\n+\n+        public long undo(Collection col) {\n+            // remove leech tag if it didn't have it before\n+            if (!mWasLeech && mCard.note().hasTag(\"leech\")) {\n+                mCard.note().delTag(\"leech\");\n+                mCard.note().flush();\n+            }\n+            Timber.i(\"Undo Review of card %d, leech: %b\", mCard.getId(), mWasLeech);\n+            // write old data\n+            mCard.flush(false);\n+            // and delete revlog entry\n+            long last = col.getDb().queryLongScalar(\"SELECT id FROM revlog WHERE cid = ? ORDER BY id DESC LIMIT 1\", new Object [] {mCard.getId()});\n+            col.getDb().execute(\"DELETE FROM revlog WHERE id = \" + last);\n+            // restore any siblings\n+            col.getDb().execute(\"update cards set queue=type,mod=?,usn=? where queue=\" + Consts.QUEUE_TYPE_SIBLING_BURIED + \" and nid=?\",\n+                        new Object[]{Utils.intTime(), col.usn(), mCard.getNid()});\n+            // and finally, update daily count\n+            @Consts.CARD_QUEUE int n = mCard.getQueue() == Consts.QUEUE_TYPE_DAY_LEARN_RELEARN ? Consts.QUEUE_TYPE_LRN : mCard.getQueue();\n+            String type = (new String[]{\"new\", \"lrn\", \"rev\"})[n];\n+            col.getSched()._updateStats(mCard, type, -1);\n+            col.getSched().setReps(col.getSched().getReps() - 1);\n+            return mCard.getId();\n+        }\n+    }\n+\n+    public static class UndoBuryCard extends Undo {\n+        private final List<Card> mCards;\n+        private final long mCid;\n+        public UndoBuryCard(List<Card> cards, long cid) {\n+            super(BURY_CARD);\n+            mCards = cards;\n+            mCid = cid;\n+        }\n+\n+        public long undo(Collection col) {\n+            Timber.i(\"Undo: Bury Card\");\n+            for (Card cc : mCards) {\n+                cc.flush(false);\n+            }\n+            return mCid;\n+        }\n+    }\n+\n+    public static class UndoBuryNote extends Undo {\n+        private final long mCid;\n+        private final List<Card> mCards;\n+        public UndoBuryNote(List<Card> cards,  long cid) {\n+            super(BURY_NOTE);\n+            mCid = cid;\n+            mCards = cards;\n+        }\n+\n+        public long undo(Collection col) {\n+            Timber.i(\"UNDO: Burying notes\");\n+            for (Card cc : mCards) {\n+                cc.flush(false);\n+            }\n+            return mCid;\n+        }\n+    }\n+\n+    public static class UndoSuspendCard extends Undo {\n+        private Card mSuspendedCard;\n+        public UndoSuspendCard(Card card) {\n+            super(SUSPEND_CARD);\n+            mSuspendedCard = card.clone();\n+        }\n+\n+        public long undo(Collection col) {\n+            Timber.i(\"UNDO: Suspend Card %d\", mSuspendedCard.getId());\n+            mSuspendedCard.flush(false);\n+            return mSuspendedCard.getId();\n+        }\n+    }\n+\n+    public static class UndoSuspendCardMulti extends Undo {\n+        private final Card[] mCards;\n+        private final boolean[] mOriginalSuspended;\n+        public UndoSuspendCardMulti(Card[] cards, boolean[] originalSuspended) {\n+            super(SUSPEND_CARD_MULTI);\n+            mCards = cards;\n+            mOriginalSuspended = originalSuspended;\n+        }\n+\n+        public long undo(Collection col) {\n+            Timber.i(\"Undo: Suspend multiple cards\");\n+            List<Long> toSuspendIds = new ArrayList<>();\n+            List<Long> toUnsuspendIds = new ArrayList<>();\n+            for (int i = 0; i < mCards.length; i++) {\n+                Card card = mCards[i];\n+                if (mOriginalSuspended[i]) {\n+                    toSuspendIds.add(card.getId());\n+                } else {\n+                    toUnsuspendIds.add(card.getId());\n+                }\n+            }\n+\n+            // unboxing\n+            long[] toSuspendIdsArray = new long[toSuspendIds.size()];\n+            long[] toUnsuspendIdsArray = new long[toUnsuspendIds.size()];\n+            for (int i = 0; i < toSuspendIds.size(); i++) {\n+                toSuspendIdsArray[i] = toSuspendIds.get(i);\n+            }\n+            for (int i = 0; i < toUnsuspendIds.size(); i++) {\n+                toUnsuspendIdsArray[i] = toUnsuspendIds.get(i);\n+            }\n+\n+            col.getSched().suspendCards(toSuspendIdsArray);\n+            col.getSched().unsuspendCards(toUnsuspendIdsArray);\n+\n+            return -1;  // don't fetch new card\n+\n+        }\n+    }\n+\n+    public static class UndoSuspendNote extends Undo {\n+        private final List<Card> mCards;\n+        private final long mCid;\n+        public UndoSuspendNote(List<Card> cards, long cid) {\n+            super(SUSPEND_NOTE);\n+            mCards = cards;\n+            mCid = cid;\n+        }\n+\n+        public long undo(Collection col) {\n+            Timber.i(\"Undo: Suspend note\");\n+            for (Card ccc : mCards) {\n+                ccc.flush(false);\n+            }\n+            return mCid;\n+        }\n+    }\n+\n+    public static class UndoDeleteNote extends Undo {\n+        private final Note mNote;\n+        private final List<Card> mCards;\n+        private final long mCid;\n+        public UndoDeleteNote(Note note, List<Card> cards, long cid) {\n+            super(DELETE_NOTE);\n+            mNote = note;\n+            mCards = cards;\n+            mCid = cid;\n+        }\n+\n+        public long undo(Collection col) {\n+            Timber.i(\"Undo: Delete note\");\n+            ArrayList<Long> ids = new ArrayList<>();\n+            mNote.flush(mNote.getMod(), false);\n+            ids.add(mNote.getId());\n+            for (Card c : mCards) {\n+                c.flush(false);\n+                ids.add(c.getId());\n+            }\n+            col.getDb().execute(\"DELETE FROM graves WHERE oid IN \" + Utils.ids2str(Utils.arrayList2array(ids)));\n+            return mCid;\n+        }\n+    }\n+\n+    public static class UndoDeleteNoteMulti extends Undo {\n+        private final List<Card> mAllCards;\n+        private final Note[] mNotes;\n+        public UndoDeleteNoteMulti(Note[] notes, List<Card> allCards) {\n+            super(DELETE_NOTE_MULTI);\n+            mNotes = notes;\n+            mAllCards = allCards;\n+        }\n+\n+        public long undo(Collection col) {\n+            Timber.i(\"Undo: Delete notes\");\n+            // undo all of these at once instead of one-by-one\n+            ArrayList<Long> ids = new ArrayList<>();\n+            for (Note n : mNotes) {\n+                n.flush(n.getMod(), false);\n+                ids.add(n.getId());\n+            }\n+            for (Card c : mAllCards) {\n+                c.flush(false);\n+                ids.add(c.getId());\n+            }\n+            col.getDb().execute(\"DELETE FROM graves WHERE oid IN \" + Utils.ids2str(Utils.arrayList2array(ids)));\n+            return -1;  // don't fetch new card\n+\n+        }\n+    }\n+\n+    public static class UndoChangeDeckMulti extends Undo {\n+        private final Card[] mCards;\n+        private final long[] mOriginalDid;\n+        public UndoChangeDeckMulti(Card[]cards, long[] originalDid) {\n+            super(CHANGE_DECK_MULTI);\n+            mCards = cards;\n+            mOriginalDid = originalDid;\n+        }\n+\n+        public long undo(Collection col) {\n+            Timber.i(\"Undo: Change Decks\");\n+            // move cards to original deck\n+            for (int i = 0; i < mCards.length; i++) {\n+                Card card = mCards[i];\n+                card.load();\n+                card.setDid(mOriginalDid[i]);\n+                Note note = card.note();\n+                note.flush();\n+                card.flush();\n+            }\n+            return -1;  // don't fetch new card", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f2f5d41b4f22ef5e3ad6003aa9193647bb410f9"}, "originalPosition": 247}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6f2f5d41b4f22ef5e3ad6003aa9193647bb410f9", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/6f2f5d41b4f22ef5e3ad6003aa9193647bb410f9", "committedDate": "2020-07-21T06:11:34Z", "message": "NF: method UndoType\n\nThis will be used for testing"}, "afterCommit": {"oid": "5c56beeaafc11f1ff629538fbf8c22447b095ba8", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/5c56beeaafc11f1ff629538fbf8c22447b095ba8", "committedDate": "2020-07-21T23:59:03Z", "message": "NF: method UndoType\n\nThis will be used for testing"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb7e422ed57b40b4ba6735adba38edeffa7b2604", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/eb7e422ed57b40b4ba6735adba38edeffa7b2604", "committedDate": "2020-07-22T00:04:29Z", "message": "NF: move clone in caller."}, "afterCommit": {"oid": "3404502622b4c7279bb7458f683623d545b6844c", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/3404502622b4c7279bb7458f683623d545b6844c", "committedDate": "2020-07-22T04:41:38Z", "message": "NF: Factorize Undo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00e28f070211be6c73c5fa2835485fcdf96d0afc", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/00e28f070211be6c73c5fa2835485fcdf96d0afc", "committedDate": "2020-07-22T04:59:36Z", "message": "NF: remove a useles object for BURY_CARD"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5374956bc5db2852b12eb00c430b05062be3b34e", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/5374956bc5db2852b12eb00c430b05062be3b34e", "committedDate": "2020-07-22T04:59:36Z", "message": "NF: Undo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4be7a75aceb39f8fa74a9cbd22fc1ef87807cb81", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/4be7a75aceb39f8fa74a9cbd22fc1ef87807cb81", "committedDate": "2020-07-22T04:59:36Z", "message": "NF: method UndoType\n\nThis will be used for testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33d0e9996b3f69d9cbd82d475acee31b41c41c22", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/33d0e9996b3f69d9cbd82d475acee31b41c41c22", "committedDate": "2020-07-22T04:59:36Z", "message": "NF: move clone in caller."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMjE3MjEx", "url": "https://github.com/ankidroid/Anki-Android/pull/6706#pullrequestreview-453217211", "createdAt": "2020-07-22T11:09:45Z", "commit": {"oid": "3404502622b4c7279bb7458f683623d545b6844c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMTowOTo0NVrOG1dt8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMTowOTo0NVrOG1dt8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcxNDYwOQ==", "bodyText": "Best to use an enum, const, or switch back to the long, instanceof is typically a code smell", "url": "https://github.com/ankidroid/Anki-Android/pull/6706#discussion_r458714609", "createdAt": "2020-07-22T11:09:45Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -920,24 +921,24 @@ private TaskData doInBackgroundUndo() {\n             col.getDb().getDatabase().beginTransaction();\n             Card newCard = null;\n             try {\n-                long cid = col.undo();\n-                if (cid == 0) {\n+                UndoType undoType = col.undo();\n+                if (undoType instanceof UndoType.NonReview) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3404502622b4c7279bb7458f683623d545b6844c"}, "originalPosition": 101}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e28167a6efa25ed130123fc0e252cb15fb1d8b6", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/5e28167a6efa25ed130123fc0e252cb15fb1d8b6", "committedDate": "2020-07-22T11:57:32Z", "message": "Factorize undo"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3404502622b4c7279bb7458f683623d545b6844c", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/3404502622b4c7279bb7458f683623d545b6844c", "committedDate": "2020-07-22T04:41:38Z", "message": "NF: Factorize Undo"}, "afterCommit": {"oid": "2ef73b505b212488efe34f3a80a48abcb39fcb14", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/2ef73b505b212488efe34f3a80a48abcb39fcb14", "committedDate": "2020-07-22T11:59:28Z", "message": "NF: Uses constant for undo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ce6225c352f7f311ef5d80f78240573fbfebb75", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/9ce6225c352f7f311ef5d80f78240573fbfebb75", "committedDate": "2020-07-22T12:38:09Z", "message": "NF: Uses constant for undo"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2ef73b505b212488efe34f3a80a48abcb39fcb14", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/2ef73b505b212488efe34f3a80a48abcb39fcb14", "committedDate": "2020-07-22T11:59:28Z", "message": "NF: Uses constant for undo"}, "afterCommit": {"oid": "9ce6225c352f7f311ef5d80f78240573fbfebb75", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/9ce6225c352f7f311ef5d80f78240573fbfebb75", "committedDate": "2020-07-22T12:38:09Z", "message": "NF: Uses constant for undo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNDA4Nzk1", "url": "https://github.com/ankidroid/Anki-Android/pull/6706#pullrequestreview-453408795", "createdAt": "2020-07-22T15:03:58Z", "commit": {"oid": "9ce6225c352f7f311ef5d80f78240573fbfebb75"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTkyNDk1", "url": "https://github.com/ankidroid/Anki-Android/pull/6706#pullrequestreview-453592495", "createdAt": "2020-07-22T18:49:09Z", "commit": {"oid": "9ce6225c352f7f311ef5d80f78240573fbfebb75"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3028, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}