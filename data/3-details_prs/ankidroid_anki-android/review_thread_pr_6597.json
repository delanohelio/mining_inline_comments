{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMzc4ODEw", "number": 6597, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNzo1MToyN1rOEKm1CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNToxNzo1NFrOELeOow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NTU3Mzg1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNzo1MToyN1rOGrvyDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxODoyODoyMVrOGrw6Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUyNDgxMw==", "bodyText": "can this be moved inside the scheduler?", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r448524813", "createdAt": "2020-07-01T17:51:27Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3057,6 +3063,7 @@ protected void onFlag(Card card, @FlagDef int flag) {\n \n     protected void dismiss(Collection.DismissType type) {\n         blockControls(false);\n+        mSched.discardCurrentCard();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8bc745448d60a91256d95038a768f97aa8658ad"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU0MzMwNw==", "bodyText": "On second thought, seems useless now that \"reset\" change the current card. After all, after each dismiss, sched.deferReset() is called in doInBackgroundDismissNote", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r448543307", "createdAt": "2020-07-01T18:28:21Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3057,6 +3063,7 @@ protected void onFlag(Card card, @FlagDef int flag) {\n \n     protected void dismiss(Collection.DismissType type) {\n         blockControls(false);\n+        mSched.discardCurrentCard();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUyNDgxMw=="}, "originalCommit": {"oid": "e8bc745448d60a91256d95038a768f97aa8658ad"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NTU3NDEwOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNzo1MTozMlrOGrvyNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxODoyOTozNFrOGrw8tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUyNDg1NQ==", "bodyText": "Isn't this in the scheduler already?", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r448524855", "createdAt": "2020-07-01T17:51:32Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -1344,6 +1349,7 @@ protected void answerCard(int ease) {\n         mSoundPlayer.stopSounds();\n         mCurrentEase = ease;\n \n+        mSched.discardCurrentCard();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8bc745448d60a91256d95038a768f97aa8658ad"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU0MzkyNw==", "bodyText": "right. I actually got confused because I was sure I did add discardCurrentCard in answerCard. I know understand I added it in AbstractFlashCardViewer by accident instead of Scheduler", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r448543927", "createdAt": "2020-07-01T18:29:34Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -1344,6 +1349,7 @@ protected void answerCard(int ease) {\n         mSoundPlayer.stopSounds();\n         mCurrentEase = ease;\n \n+        mSched.discardCurrentCard();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUyNDg1NQ=="}, "originalCommit": {"oid": "e8bc745448d60a91256d95038a768f97aa8658ad"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NTU3Njc5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNzo1MjoyN1rOGrvz9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNzo1MjoyN1rOGrvz9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUyNTMwMw==", "bodyText": "nit: spacing change", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r448525303", "createdAt": "2020-07-01T17:52:27Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java", "diffHunk": "@@ -367,7 +368,7 @@ protected boolean _fillLrn() {\n                     .getDatabase()\n                     .query(\n                             \"SELECT due, id FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_LRN + \" AND due < ? LIMIT ?\",\n-                                    new Object[]{mDayCutoff, mReportLimit});\n+                            new Object[]{mDayCutoff, mReportLimit});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8bc745448d60a91256d95038a768f97aa8658ad"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NTU4MDY2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNzo1Mzo0M1rOGrv2ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwMTo0MjozOVrOGs-4zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUyNTk2Mg==", "bodyText": "I think this conditional and setup would be best extracted to a method (accepting a QueueType and did) as it's used in 3 places\nSomething along the lines of\ncurrentCardIsInQueueWithDeck(Consts.QUEUE_TYPE_REV, did);\nBonus points for defining the Queue types in Consts via an IntDef", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r448525962", "createdAt": "2020-07-01T17:53:43Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java", "diffHunk": "@@ -660,7 +661,14 @@ protected int _deckRevLimitSingle(JSONObject d) {\n         }\n         long did = d.getLong(\"id\");\n         JSONObject c = mCol.getDecks().confForDid(did);\n-        return Math.max(0, c.getJSONObject(\"rev\").getInt(\"perDay\") - d.getJSONArray(\"revToday\").getInt(1));\n+        int lim = Math.max(0, c.getJSONObject(\"rev\").getInt(\"perDay\") - d.getJSONArray(\"revToday\").getInt(1));\n+        // mCurrentCard may be set to null when the reviewer gets closed. So we copy it to be sure to avoid NullPointerException\n+        Card currentCard = mCurrentCard;\n+        List<Long> currentCardParentsDid = mCurrentCardParentsDid;\n+        if (currentCard != null && currentCard.getQueue() == Consts.QUEUE_TYPE_REV && currentCardParentsDid != null && currentCardParentsDid.contains(did)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8bc745448d60a91256d95038a768f97aa8658ad"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU0OTk2NQ==", "bodyText": "I'll check for IndDef later. Remaining done", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r448549965", "createdAt": "2020-07-01T18:41:36Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java", "diffHunk": "@@ -660,7 +661,14 @@ protected int _deckRevLimitSingle(JSONObject d) {\n         }\n         long did = d.getLong(\"id\");\n         JSONObject c = mCol.getDecks().confForDid(did);\n-        return Math.max(0, c.getJSONObject(\"rev\").getInt(\"perDay\") - d.getJSONArray(\"revToday\").getInt(1));\n+        int lim = Math.max(0, c.getJSONObject(\"rev\").getInt(\"perDay\") - d.getJSONArray(\"revToday\").getInt(1));\n+        // mCurrentCard may be set to null when the reviewer gets closed. So we copy it to be sure to avoid NullPointerException\n+        Card currentCard = mCurrentCard;\n+        List<Long> currentCardParentsDid = mCurrentCardParentsDid;\n+        if (currentCard != null && currentCard.getQueue() == Consts.QUEUE_TYPE_REV && currentCardParentsDid != null && currentCardParentsDid.contains(did)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUyNTk2Mg=="}, "originalCommit": {"oid": "e8bc745448d60a91256d95038a768f97aa8658ad"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgyMDg3Ng==", "bodyText": "Done (in another\u00a0PR)", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r449820876", "createdAt": "2020-07-05T01:42:39Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java", "diffHunk": "@@ -660,7 +661,14 @@ protected int _deckRevLimitSingle(JSONObject d) {\n         }\n         long did = d.getLong(\"id\");\n         JSONObject c = mCol.getDecks().confForDid(did);\n-        return Math.max(0, c.getJSONObject(\"rev\").getInt(\"perDay\") - d.getJSONArray(\"revToday\").getInt(1));\n+        int lim = Math.max(0, c.getJSONObject(\"rev\").getInt(\"perDay\") - d.getJSONArray(\"revToday\").getInt(1));\n+        // mCurrentCard may be set to null when the reviewer gets closed. So we copy it to be sure to avoid NullPointerException\n+        Card currentCard = mCurrentCard;\n+        List<Long> currentCardParentsDid = mCurrentCardParentsDid;\n+        if (currentCard != null && currentCard.getQueue() == Consts.QUEUE_TYPE_REV && currentCardParentsDid != null && currentCardParentsDid.contains(did)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUyNTk2Mg=="}, "originalCommit": {"oid": "e8bc745448d60a91256d95038a768f97aa8658ad"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NjQ2MDQ4OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMzoxOTo0OFrOGr4TNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjowOTo1M1rOGsKCVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY2NDM3Mw==", "bodyText": "This isn't called yet.", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r448664373", "createdAt": "2020-07-01T23:19:48Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -760,6 +821,17 @@ private void _maybeResetLrn(boolean force) {\n         }\n     }\n \n+    /** Same as _resetRev, but assume discardCard is currently in the reviewer and so don't conunt it.*/\n+    protected void _resetLrn(@Nullable Card discardCard) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45eab54ed1a9644ab4124373af9ada907a8af909"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1NDk2NA==", "bodyText": "I guess I could remove it. When I wrote it I didn't realize that fillRev and fillNew both potentially reset their queue but fillLrn never reset it.\nI find it more consistent to add a new reset for the three queues, but on second thought there is no reason to do it", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r448954964", "createdAt": "2020-07-02T12:09:53Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -760,6 +821,17 @@ private void _maybeResetLrn(boolean force) {\n         }\n     }\n \n+    /** Same as _resetRev, but assume discardCard is currently in the reviewer and so don't conunt it.*/\n+    protected void _resetLrn(@Nullable Card discardCard) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY2NDM3Mw=="}, "originalCommit": {"oid": "45eab54ed1a9644ab4124373af9ada907a8af909"}, "originalPosition": 155}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NjQ2NDMwOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMzoyMTo0NVrOGr4Vag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjoxMTozMFrOGsKF5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY2NDkzOA==", "bodyText": "Nit: might want to rename card to something more descriptive", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r448664938", "createdAt": "2020-07-01T23:21:45Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -2667,8 +2759,12 @@ public int eta(int[] counts, boolean reload) {\n         return (int) Math.round((newTotal + relrnTotal + revTotal + futureRelrnTotal) / 60000);\n     }\n \n-\n-    public void decrementCounts(Card card) {\n+    /**\n+     * This is used when card is currently in the reviewer, to adapt the counts by removing this card from it.*/\n+    public void decrementCounts(@Nullable Card card) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45eab54ed1a9644ab4124373af9ada907a8af909"}, "originalPosition": 236}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1NTg3OA==", "bodyText": "Any idea ?\ncardInReviewer would make sens I guess, since decrementCounts is always called on the card which is sent to the reviewer or is already in it. I should use the same name in the methods resetNew/Rev(Card card)", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r448955878", "createdAt": "2020-07-02T12:11:30Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -2667,8 +2759,12 @@ public int eta(int[] counts, boolean reload) {\n         return (int) Math.round((newTotal + relrnTotal + revTotal + futureRelrnTotal) / 60000);\n     }\n \n-\n-    public void decrementCounts(Card card) {\n+    /**\n+     * This is used when card is currently in the reviewer, to adapt the counts by removing this card from it.*/\n+    public void decrementCounts(@Nullable Card card) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY2NDkzOA=="}, "originalCommit": {"oid": "45eab54ed1a9644ab4124373af9ada907a8af909"}, "originalPosition": 236}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NjQ4NjI0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMzozMjoyMFrOGr4h4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjoxNjozMVrOGsKQYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY2ODEyOA==", "bodyText": "Just flagging this line for second review - I feel it's OK, but a second pair of eyes would be useful.", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r448668128", "createdAt": "2020-07-01T23:32:20Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -161,7 +180,10 @@ public Card getCard() {\n             // decrement the counts here, when the card is returned to\n             // the reviewer.\n             decrementCounts(card);\n+            setCurrentCard(card);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45eab54ed1a9644ab4124373af9ada907a8af909"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1ODU2Mw==", "bodyText": "The main idea here is:\nI want the scheduler to know what the reviewer currently has.\nSince we don't want to actually send data from reviewer to scheduler (because we can't be sure another reviewer would send the same data), instead, I save the data in \"getCard\", which is the method called by the scheduler. That is, the scheduler remembers the current card. The current card is either:\n\nthe last card send with reset (there is a card if the reset is done because of undo, there is no card otherwise)\notherwise, the last card sent by getCard\notherwise, there is no card", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r448958563", "createdAt": "2020-07-02T12:16:31Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -161,7 +180,10 @@ public Card getCard() {\n             // decrement the counts here, when the card is returned to\n             // the reviewer.\n             decrementCounts(card);\n+            setCurrentCard(card);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY2ODEyOA=="}, "originalCommit": {"oid": "45eab54ed1a9644ab4124373af9ada907a8af909"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NjQ5OTQ2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMzozOTowOFrOGr4ppA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjoxODo1N1rOGsKVNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY3MDExNg==", "bodyText": "Don't we need to handle duplicates as well as maintaining the counts here?", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r448670116", "createdAt": "2020-07-01T23:39:08Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -760,6 +821,17 @@ private void _maybeResetLrn(boolean force) {\n         }\n     }\n \n+    /** Same as _resetRev, but assume discardCard is currently in the reviewer and so don't conunt it.*/\n+    protected void _resetLrn(@Nullable Card discardCard) {\n+        _resetLrn();\n+        if (discardCard != null && (\n+                discardCard.getQueue() == Consts.QUEUE_TYPE_LRN ||\n+                discardCard.getQueue() == Consts.QUEUE_TYPE_PREVIEW ||\n+                discardCard.getQueue() == Consts.QUEUE_TYPE_DAY_LEARN_RELEARN", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45eab54ed1a9644ab4124373af9ada907a8af909"}, "originalPosition": 160}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1OTc5Nw==", "bodyText": "What do you mean by \"duplicate\" ?\nDo you mean the fact that, in scheduler 1, we count the number of time each card in learning  will be seen before its graduation ?\nIn this case, it makes no difference, because if a card in learning is in reviewer, the user will see it only a single time, so we only need to decrement by one the value of mLrnCount.", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r448959797", "createdAt": "2020-07-02T12:18:57Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -760,6 +821,17 @@ private void _maybeResetLrn(boolean force) {\n         }\n     }\n \n+    /** Same as _resetRev, but assume discardCard is currently in the reviewer and so don't conunt it.*/\n+    protected void _resetLrn(@Nullable Card discardCard) {\n+        _resetLrn();\n+        if (discardCard != null && (\n+                discardCard.getQueue() == Consts.QUEUE_TYPE_LRN ||\n+                discardCard.getQueue() == Consts.QUEUE_TYPE_PREVIEW ||\n+                discardCard.getQueue() == Consts.QUEUE_TYPE_DAY_LEARN_RELEARN", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY3MDExNg=="}, "originalCommit": {"oid": "45eab54ed1a9644ab4124373af9ada907a8af909"}, "originalPosition": 160}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDYwNTI5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNDoyNTowNFrOGtCsWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNDoyNTowNFrOGtCsWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4MzIyNA==", "bodyText": "You have very strict line length limits set up I think. I think breaking these lines decreases readability and if the editor did that because of limits, you should bump the limits. 80 chars isn't a hard limit anywhere anymore I don't think, 100 or 120 when really needed is okay by me\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * This is used when card is currently in the reviewer, to adapt\n          \n          \n            \n                 * the counts by removing this card from it.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param discardCard A card sent to reviewer that should not be\n          \n          \n            \n                 * counted.\n          \n          \n            \n                 * Used when card is currently in the reviewer, adapts the counts by removing this card from it.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param discardCard A card sent to reviewer that should not be counted.\n          \n      \n    \n    \n  \n\nThat can be taken as a general comment, I've noticed it before in your patches, but this one was the most glaring because I'm not sure javadoc @param annotations even work when broken like that, so your editor limit I think actually broke javadoc", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r449883224", "createdAt": "2020-07-05T14:25:04Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java", "diffHunk": "@@ -1608,19 +1608,24 @@ public int eta(int[] counts, boolean reload) {\n \n \n     /**\n-     * This is used when card is currently in the reviewer, to adapt the counts by removing this card from it.*/\n+     * This is used when card is currently in the reviewer, to adapt\n+     * the counts by removing this card from it.\n+     *\n+     * @param discardCard A card sent to reviewer that should not be\n+     * counted.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5022b234879db9f9faf0dca1ee5d945c80a6ea21"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDYwNzAwOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNDoyNjo0OFrOGtCtIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNDoyNjo0OFrOGtCtIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4MzQyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Tells the scheduler there is no more current cards. 0 is\n          \n          \n            \n                    // not a valid id.\n          \n          \n            \n                    // Tells the scheduler there are no more current cards. 0 is not a valid id.", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r449883425", "createdAt": "2020-07-05T14:26:48Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -945,6 +945,11 @@ protected void onResume() {\n     @Override\n     protected void onDestroy() {\n         super.onDestroy();\n+        // Tells the scheduler there is no more current cards. 0 is\n+        // not a valid id.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ace81f3547f9c4b0955231cde57a9bb342482f54"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDYxMzI2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNDozMTo1OFrOGtCwCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNDozNzoyOVrOGtCyRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4NDE3MA==", "bodyText": "maybe a naive question, but should it be and id != ? for currentCardId() if the goal is \"we don't want to get the same card a second time\"? this seems like it would only get the same card, every time?", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r449884170", "createdAt": "2020-07-05T14:31:58Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java", "diffHunk": "@@ -366,9 +367,20 @@ protected boolean _fillLrn() {\n         mLrnQueue.clear();\n         SupportSQLiteDatabase db = mCol.getDb().getDatabase();\n         try {\n+            /* Difference with upstream:\n+             * Current card can't come in the queue.\n+             *\n+             * In standard usage, a card is not requested before the\n+             * previous card is marked as reviewed. However, if we\n+             * decide to query a second card sooner, we don't want to\n+             * get the same card a second time. This simulate\n+             * _getLrnCard which did remove the card from the\n+             * queue. _sortIntoLrn will add the card back to the queue\n+             * if required when the card is reviewed.\n+             */\n             cur = db.query(\n-                            \"SELECT due, id FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_LRN + \" AND due < ? LIMIT ?\",\n-                                    new Object[]{mDayCutoff, mReportLimit});\n+                           \"SELECT due, id FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_LRN + \" AND due < ? AND id = ? LIMIT ?\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ace81f3547f9c4b0955231cde57a9bb342482f54"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4NDUzOQ==", "bodyText": "Yeah, entirely right", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r449884539", "createdAt": "2020-07-05T14:35:34Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java", "diffHunk": "@@ -366,9 +367,20 @@ protected boolean _fillLrn() {\n         mLrnQueue.clear();\n         SupportSQLiteDatabase db = mCol.getDb().getDatabase();\n         try {\n+            /* Difference with upstream:\n+             * Current card can't come in the queue.\n+             *\n+             * In standard usage, a card is not requested before the\n+             * previous card is marked as reviewed. However, if we\n+             * decide to query a second card sooner, we don't want to\n+             * get the same card a second time. This simulate\n+             * _getLrnCard which did remove the card from the\n+             * queue. _sortIntoLrn will add the card back to the queue\n+             * if required when the card is reviewed.\n+             */\n             cur = db.query(\n-                            \"SELECT due, id FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_LRN + \" AND due < ? LIMIT ?\",\n-                                    new Object[]{mDayCutoff, mReportLimit});\n+                           \"SELECT due, id FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_LRN + \" AND due < ? AND id = ? LIMIT ?\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4NDE3MA=="}, "originalCommit": {"oid": "ace81f3547f9c4b0955231cde57a9bb342482f54"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4NDc0Mw==", "bodyText": "Corrected", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r449884743", "createdAt": "2020-07-05T14:37:29Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java", "diffHunk": "@@ -366,9 +367,20 @@ protected boolean _fillLrn() {\n         mLrnQueue.clear();\n         SupportSQLiteDatabase db = mCol.getDb().getDatabase();\n         try {\n+            /* Difference with upstream:\n+             * Current card can't come in the queue.\n+             *\n+             * In standard usage, a card is not requested before the\n+             * previous card is marked as reviewed. However, if we\n+             * decide to query a second card sooner, we don't want to\n+             * get the same card a second time. This simulate\n+             * _getLrnCard which did remove the card from the\n+             * queue. _sortIntoLrn will add the card back to the queue\n+             * if required when the card is reviewed.\n+             */\n             cur = db.query(\n-                            \"SELECT due, id FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_LRN + \" AND due < ? LIMIT ?\",\n-                                    new Object[]{mDayCutoff, mReportLimit});\n+                           \"SELECT due, id FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_LRN + \" AND due < ? AND id = ? LIMIT ?\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4NDE3MA=="}, "originalCommit": {"oid": "ace81f3547f9c4b0955231cde57a9bb342482f54"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDYxNTM0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNDozNDoyMFrOGtCw_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNDozNDoyMFrOGtCw_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4NDQxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Must not be returned during prefetching (as it is currently\n          \n          \n            \n                 * shown)\n          \n          \n            \n                 * Must not be returned during prefetching (as it is currently shown)", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r449884414", "createdAt": "2020-07-05T14:34:20Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -109,6 +109,24 @@\n     // Not in libanki\n     protected WeakReference<Activity> mContextReference;\n \n+    /**\n+     * The card currently being reviewed.\n+     *\n+     * Must not be returned during prefetching (as it is currently\n+     * shown)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ace81f3547f9c4b0955231cde57a9bb342482f54"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDYxNzU5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNDozNzowN1rOGtCyGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNDozNzowN1rOGtCyGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4NDY5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 */\n          \n          \n            \n                protected Card mCurrentCard;\n          \n          \n            \n                /** The list of parent decks of the current card.\n          \n          \n            \n                 * Cached for performance .\n          \n          \n            \n            \n          \n          \n            \n                    Null iff mNextCard is null.*/\n          \n          \n            \n                @Nullable\n          \n          \n            \n                protected List<Long> mCurrentCardParentsDid;\n          \n          \n            \n                /* The next card that will be sent to the reviewer. I.e. the\n          \n          \n            \n                 * result of a second call to getCard, which is not the current\n          \n          \n            \n                 * card nor a sibling.\n          \n          \n            \n                 */\n          \n          \n            \n                 */\n          \n          \n            \n                protected Card mCurrentCard;\n          \n          \n            \n                \n          \n          \n            \n                /**\n          \n          \n            \n                 * Cached list of parent decks of the current card for performance\n          \n          \n            \n                 *\n          \n          \n            \n                 *  Null iff mNextCard is null.\n          \n          \n            \n                 */\n          \n          \n            \n                @Nullable\n          \n          \n            \n                protected List<Long> mCurrentCardParentsDid;\n          \n          \n            \n                \n          \n          \n            \n                /**\n          \n          \n            \n                 * The next card that will be sent to the reviewer. \n          \n          \n            \n                 * I.e. the result of a second call to getCard, which is not the current card nor a sibling.\n          \n          \n            \n                 */", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r449884698", "createdAt": "2020-07-05T14:37:07Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -109,6 +109,24 @@\n     // Not in libanki\n     protected WeakReference<Activity> mContextReference;\n \n+    /**\n+     * The card currently being reviewed.\n+     *\n+     * Must not be returned during prefetching (as it is currently\n+     * shown)\n+     */\n+    protected Card mCurrentCard;\n+    /** The list of parent decks of the current card.\n+     * Cached for performance .\n+\n+        Null iff mNextCard is null.*/\n+    @Nullable\n+    protected List<Long> mCurrentCardParentsDid;\n+    /* The next card that will be sent to the reviewer. I.e. the\n+     * result of a second call to getCard, which is not the current\n+     * card nor a sibling.\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ace81f3547f9c4b0955231cde57a9bb342482f54"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDY1MDU5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNToxNzo1NFrOGtDB8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNToyNDo0MFrOGtDEFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4ODc1NQ==", "bodyText": "chastate?", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r449888755", "createdAt": "2020-07-05T15:17:54Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -2725,4 +2872,43 @@ public void setReportLimit(int reportLimit) {\n     }\n \n     /** End #5666 */\n+    public void discardCurrentCard() {\n+        mCurrentCard = null;\n+        mCurrentCardParentsDid = null;\n+    }\n+\n+    /**\n+     * This imitate the action of the method answerCard, except that\n+     * it does not chastate of any card.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2e28b884166d53783cd401b160be680300fc0cb"}, "originalPosition": 373}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4OTMwMQ==", "bodyText": "I was pretty sure it was already corrected. \"change the state\"", "url": "https://github.com/ankidroid/Anki-Android/pull/6597#discussion_r449889301", "createdAt": "2020-07-05T15:24:40Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -2725,4 +2872,43 @@ public void setReportLimit(int reportLimit) {\n     }\n \n     /** End #5666 */\n+    public void discardCurrentCard() {\n+        mCurrentCard = null;\n+        mCurrentCardParentsDid = null;\n+    }\n+\n+    /**\n+     * This imitate the action of the method answerCard, except that\n+     * it does not chastate of any card.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4ODc1NQ=="}, "originalCommit": {"oid": "a2e28b884166d53783cd401b160be680300fc0cb"}, "originalPosition": 373}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 70, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}