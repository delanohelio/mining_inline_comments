{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MDU2ODM1", "number": 6675, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTowOTowNFrOEOZMUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxNzoyNlrOEOZXsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTI4MjczOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTowOTowNFrOGxhdcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTo0MzozN1rOGxil-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4MTYxNw==", "bodyText": "I believe getCol can throw due to permissions exceptions", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454581617", "createdAt": "2020-07-14T19:09:04Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -70,10 +70,17 @@ public void onReceive(Context context, Intent intent) {\n         // 0 is not a valid dconf id.\n         final long dConfId = intent.getLongExtra(EXTRA_DECK_OPTION_ID, 0);\n         if (dConfId == 0) {\n+            Timber.w(\"onReceive - dConfId 0, returning\");\n+            return;\n+        }\n+\n+        Collection col = CollectionHelper.getInstance().getCol(context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5MzA5OA==", "bodyText": "I think might be right. Okay, I'll go \"full hardening\" then, not just the stuff I can easily demonstrate with the unit test I posted up", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454593098", "createdAt": "2020-07-14T19:29:48Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -70,10 +70,17 @@ public void onReceive(Context context, Intent intent) {\n         // 0 is not a valid dconf id.\n         final long dConfId = intent.getLongExtra(EXTRA_DECK_OPTION_ID, 0);\n         if (dConfId == 0) {\n+            Timber.w(\"onReceive - dConfId 0, returning\");\n+            return;\n+        }\n+\n+        Collection col = CollectionHelper.getInstance().getCol(context);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4MTYxNw=="}, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5NjE2OQ==", "bodyText": "We do have a getColSafe, but that sends an exception report. I worked around this previously in BootService", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454596169", "createdAt": "2020-07-14T19:35:49Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -70,10 +70,17 @@ public void onReceive(Context context, Intent intent) {\n         // 0 is not a valid dconf id.\n         final long dConfId = intent.getLongExtra(EXTRA_DECK_OPTION_ID, 0);\n         if (dConfId == 0) {\n+            Timber.w(\"onReceive - dConfId 0, returning\");\n+            return;\n+        }\n+\n+        Collection col = CollectionHelper.getInstance().getCol(context);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4MTYxNw=="}, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDYwMDE4Nw==", "bodyText": "For ReminderService - which I never ever ever ever want to block anything else from functioning - I like the idea of complete and total hardening so I just catch throwable here. ReminderService should just never crash, it's so ancillary", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454600187", "createdAt": "2020-07-14T19:43:37Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -70,10 +70,17 @@ public void onReceive(Context context, Intent intent) {\n         // 0 is not a valid dconf id.\n         final long dConfId = intent.getLongExtra(EXTRA_DECK_OPTION_ID, 0);\n         if (dConfId == 0) {\n+            Timber.w(\"onReceive - dConfId 0, returning\");\n+            return;\n+        }\n+\n+        Collection col = CollectionHelper.getInstance().getCol(context);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4MTYxNw=="}, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTI4NjYyOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxMDoxMFrOGxhf2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxMDoxMFrOGxhf2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4MjIzNQ==", "bodyText": "Nit: consolidate .getInstance to a variable", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454582235", "createdAt": "2020-07-14T19:10:10Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -70,10 +70,17 @@ public void onReceive(Context context, Intent intent) {\n         // 0 is not a valid dconf id.\n         final long dConfId = intent.getLongExtra(EXTRA_DECK_OPTION_ID, 0);\n         if (dConfId == 0) {\n+            Timber.w(\"onReceive - dConfId 0, returning\");\n+            return;\n+        }\n+\n+        Collection col = CollectionHelper.getInstance().getCol(context);\n+        if (null == col || !CollectionHelper.getInstance().colIsOpen()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTI5MzI3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxMjoxMVrOGxhkHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTozMzowOVrOGxiRDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4MzMyNg==", "bodyText": "Note: Don't think this matters as we only list the top level", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454583326", "createdAt": "2020-07-14T19:12:11Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -114,7 +124,7 @@ public void onReceive(Context context, Intent intent) {\n                         .setContentText(context.getResources().getQuantityString(\n                                 R.plurals.reminder_text,\n                                 total,\n-                                CollectionHelper.getInstance().getCol(context).getDecks().name(deckId),\n+                                deckDue.getFullDeckName(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5NDgzMA==", "bodyText": "While true, I wanted it to be NF just swapping in the member var access vs full-fetch-from-decks and this was I think the analogous name.", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454594830", "createdAt": "2020-07-14T19:33:09Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -114,7 +124,7 @@ public void onReceive(Context context, Intent intent) {\n                         .setContentText(context.getResources().getQuantityString(\n                                 R.plurals.reminder_text,\n                                 total,\n-                                CollectionHelper.getInstance().getCol(context).getDecks().name(deckId),\n+                                deckDue.getFullDeckName(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4MzMyNg=="}, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTI5NzI5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxMzoyNlrOGxhmlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTozMzo0N1rOGxiSQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4Mzk1Nw==", "bodyText": "If the database is null, then this case is not hit. Should this be an == null OR", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454583957", "createdAt": "2020-07-14T19:13:26Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -140,20 +151,19 @@ public static Intent getReviewDeckIntent(@NonNull Context context, long deckId)\n \n     // getDeckOptionDue information, will recur one time to workaround collection close if recur is true\n     @Nullable\n-    private List<AbstractSched.DeckDueTreeNode> getDeckOptionDue(Context context, long dConfId, boolean recur) {\n+    private List<AbstractSched.DeckDueTreeNode> getDeckOptionDue(Collection col, long dConfId, boolean recur) {\n \n-        Collection col = CollectionHelper.getInstance().getCol(context);\n         // Avoid crashes if the deck option group is deleted while we\n         // are working\n-        if (col.getDecks().getConf(dConfId) == null) {\n-            Timber.d(\"Deck option %s deleted while ReminderService was working. Ignoring\", dConfId);\n+        if (col.getDb() != null && col.getDecks().getConf(dConfId) == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5NTEzOQ==", "bodyText": "Absolutely right, crucial error. Fixing", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454595139", "createdAt": "2020-07-14T19:33:47Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -140,20 +151,19 @@ public static Intent getReviewDeckIntent(@NonNull Context context, long deckId)\n \n     // getDeckOptionDue information, will recur one time to workaround collection close if recur is true\n     @Nullable\n-    private List<AbstractSched.DeckDueTreeNode> getDeckOptionDue(Context context, long dConfId, boolean recur) {\n+    private List<AbstractSched.DeckDueTreeNode> getDeckOptionDue(Collection col, long dConfId, boolean recur) {\n \n-        Collection col = CollectionHelper.getInstance().getCol(context);\n         // Avoid crashes if the deck option group is deleted while we\n         // are working\n-        if (col.getDecks().getConf(dConfId) == null) {\n-            Timber.d(\"Deck option %s deleted while ReminderService was working. Ignoring\", dConfId);\n+        if (col.getDb() != null && col.getDecks().getConf(dConfId) == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4Mzk1Nw=="}, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTMwMzI5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxNToxMFrOGxhqTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxNToxMFrOGxhqTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4NDkxMQ==", "bodyText": "This is the actual crash fix", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454584911", "createdAt": "2020-07-14T19:15:10Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -70,10 +70,17 @@ public void onReceive(Context context, Intent intent) {\n         // 0 is not a valid dconf id.\n         final long dConfId = intent.getLongExtra(EXTRA_DECK_OPTION_ID, 0);\n         if (dConfId == 0) {\n+            Timber.w(\"onReceive - dConfId 0, returning\");\n+            return;\n+        }\n+\n+        Collection col = CollectionHelper.getInstance().getCol(context);\n+        if (null == col || !CollectionHelper.getInstance().colIsOpen()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTMwNTc3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxNTo0OVrOGxhr1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxNTo0OVrOGxhr1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4NTMwMg==", "bodyText": "this method has pokemon handling, nothing will come out except maybe a null return", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454585302", "createdAt": "2020-07-14T19:15:49Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -88,11 +95,13 @@ public void onReceive(Context context, Intent intent) {\n \n         final NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);\n         if (!notificationManager.areNotificationsEnabled()) {\n+            Timber.v(\"onReceive - notifications disabled, returning\");\n             return;\n         }\n-        List<AbstractSched.DeckDueTreeNode> decksDue = getDeckOptionDue(context, dConfId, true);\n+        List<AbstractSched.DeckDueTreeNode> decksDue = getDeckOptionDue(col, dConfId, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTMwNzM4OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxNjoxNVrOGxhs1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxNjoxNVrOGxhs1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4NTU1OA==", "bodyText": "turns out we can avoid accessing collection here entirely, the deck due node has the name", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454585558", "createdAt": "2020-07-14T19:16:15Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -114,7 +124,7 @@ public void onReceive(Context context, Intent intent) {\n                         .setContentText(context.getResources().getQuantityString(\n                                 R.plurals.reminder_text,\n                                 total,\n-                                CollectionHelper.getInstance().getCol(context).getDecks().name(deckId),\n+                                deckDue.getFullDeckName(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTMwODk1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/test/java/com/ichi2/anki/services/ReminderServiceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxNjo0MlrOGxhtyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTozNDo1MFrOGxiUMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4NTgwMg==", "bodyText": "Just for fun:\nI think this could be isCollectionWithSize or isEmptyCollection or is(empty())", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454585802", "createdAt": "2020-07-14T19:16:42Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/services/ReminderServiceTest.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.ichi2.anki.services;\n+\n+import android.app.NotificationManager;\n+import android.content.Context;\n+import android.content.Intent;\n+\n+import com.ichi2.anki.RobolectricTest;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.robolectric.shadows.ShadowNotificationManager;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import static com.ichi2.anki.services.ReminderService.EXTRA_DECK_ID;\n+import static com.ichi2.anki.services.ReminderService.EXTRA_DECK_OPTION_ID;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.robolectric.Shadows.shadowOf;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class ReminderServiceTest extends RobolectricTest {\n+\n+    @Test\n+    public void testReminderServiceNothingDue() {\n+        buildDefaultDeckReminders();\n+        assertThat(\"No notifications exist\", getNotificationManagerShadow().size() == 0);\n+    }\n+\n+\n+    @Test\n+    public void testReminderServiceReviewsDue() {\n+        addNoteUsingBasicModel(\"test front\", \"test back\");\n+        assertThat(\"No notifications exist\", getNotificationManagerShadow().size() == 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5NTYzNA==", "bodyText": "true, but don't those expected notification counts line up so beautifully on the right? \ud83e\udd29  - I'm going to leave it", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454595634", "createdAt": "2020-07-14T19:34:50Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/services/ReminderServiceTest.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.ichi2.anki.services;\n+\n+import android.app.NotificationManager;\n+import android.content.Context;\n+import android.content.Intent;\n+\n+import com.ichi2.anki.RobolectricTest;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.robolectric.shadows.ShadowNotificationManager;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import static com.ichi2.anki.services.ReminderService.EXTRA_DECK_ID;\n+import static com.ichi2.anki.services.ReminderService.EXTRA_DECK_OPTION_ID;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.robolectric.Shadows.shadowOf;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class ReminderServiceTest extends RobolectricTest {\n+\n+    @Test\n+    public void testReminderServiceNothingDue() {\n+        buildDefaultDeckReminders();\n+        assertThat(\"No notifications exist\", getNotificationManagerShadow().size() == 0);\n+    }\n+\n+\n+    @Test\n+    public void testReminderServiceReviewsDue() {\n+        addNoteUsingBasicModel(\"test front\", \"test back\");\n+        assertThat(\"No notifications exist\", getNotificationManagerShadow().size() == 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4NTgwMg=="}, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTMxMTg2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxNzoyNlrOGxhveA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxNzoyNlrOGxhveA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4NjIzMg==", "bodyText": "I don't have the CollectionHelper here so I can't ask isClosed, however the db gets nulled on close, so this check should be equivalent and the col.getDecks should succeed", "url": "https://github.com/ankidroid/Anki-Android/pull/6675#discussion_r454586232", "createdAt": "2020-07-14T19:17:26Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -140,20 +151,19 @@ public static Intent getReviewDeckIntent(@NonNull Context context, long deckId)\n \n     // getDeckOptionDue information, will recur one time to workaround collection close if recur is true\n     @Nullable\n-    private List<AbstractSched.DeckDueTreeNode> getDeckOptionDue(Context context, long dConfId, boolean recur) {\n+    private List<AbstractSched.DeckDueTreeNode> getDeckOptionDue(Collection col, long dConfId, boolean recur) {\n \n-        Collection col = CollectionHelper.getInstance().getCol(context);\n         // Avoid crashes if the deck option group is deleted while we\n         // are working\n-        if (col.getDecks().getConf(dConfId) == null) {\n-            Timber.d(\"Deck option %s deleted while ReminderService was working. Ignoring\", dConfId);\n+        if (col.getDb() != null && col.getDecks().getConf(dConfId) == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd71cc28e0285c1452ae4472fd769a024c78f7a5"}, "originalPosition": 86}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 122, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}