{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxMTg0MTY4", "number": 6689, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNTo0OTowOFrOEQr7Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzoxODozNFrOEQuKxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTMyMzQ2OnYy", "diffSide": "LEFT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNTo0OTowOFrOG0-eMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOToxNTowMlrOG1GNog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwMjY3NA==", "bodyText": "Note: comment removed", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458202674", "createdAt": "2020-07-21T15:49:08Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java", "diffHunk": "@@ -137,10 +137,7 @@\n     public abstract void sortCards(long[] cids, int start, int step, boolean shuffle, boolean shift);\n     public abstract void randomizeCards(long did);\n     public abstract void orderCards(long did);\n-    public abstract void resortConf(JSONObject conf);\n-    /**\n-     * for post-import\n-     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8eebe544524d91bd3fbf88be894b4846638ce526"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIxODE0MA==", "bodyText": "Thanks. Added back", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458218140", "createdAt": "2020-07-21T16:10:47Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java", "diffHunk": "@@ -137,10 +137,7 @@\n     public abstract void sortCards(long[] cids, int start, int step, boolean shuffle, boolean shift);\n     public abstract void randomizeCards(long did);\n     public abstract void orderCards(long did);\n-    public abstract void resortConf(JSONObject conf);\n-    /**\n-     * for post-import\n-     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwMjY3NA=="}, "originalCommit": {"oid": "8eebe544524d91bd3fbf88be894b4846638ce526"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2MjkyNg==", "bodyText": "It got moved to the wrong method I feel?", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458262926", "createdAt": "2020-07-21T17:20:50Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java", "diffHunk": "@@ -137,10 +137,7 @@\n     public abstract void sortCards(long[] cids, int start, int step, boolean shuffle, boolean shift);\n     public abstract void randomizeCards(long did);\n     public abstract void orderCards(long did);\n-    public abstract void resortConf(JSONObject conf);\n-    /**\n-     * for post-import\n-     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwMjY3NA=="}, "originalCommit": {"oid": "8eebe544524d91bd3fbf88be894b4846638ce526"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMTUxMA==", "bodyText": "@Arthur-Milchior - just confirming the follow-up comment was seen", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458321510", "createdAt": "2020-07-21T19:00:15Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java", "diffHunk": "@@ -137,10 +137,7 @@\n     public abstract void sortCards(long[] cids, int start, int step, boolean shuffle, boolean shift);\n     public abstract void randomizeCards(long did);\n     public abstract void orderCards(long did);\n-    public abstract void resortConf(JSONObject conf);\n-    /**\n-     * for post-import\n-     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwMjY3NA=="}, "originalCommit": {"oid": "8eebe544524d91bd3fbf88be894b4846638ce526"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyOTUwNg==", "bodyText": "Corrected.", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458329506", "createdAt": "2020-07-21T19:15:02Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java", "diffHunk": "@@ -137,10 +137,7 @@\n     public abstract void sortCards(long[] cids, int start, int step, boolean shuffle, boolean shift);\n     public abstract void randomizeCards(long did);\n     public abstract void orderCards(long did);\n-    public abstract void resortConf(JSONObject conf);\n-    /**\n-     * for post-import\n-     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwMjY3NA=="}, "originalCommit": {"oid": "8eebe544524d91bd3fbf88be894b4846638ce526"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTMzMTA0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/utils/JSONObject.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNTo1MDo0OVrOG0-jJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjowMTo1MlrOG0_CKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwMzk0Mg==", "bodyText": "Wasn't this in another PR?", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458203942", "createdAt": "2020-07-21T15:50:49Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/utils/JSONObject.java", "diffHunk": "@@ -136,7 +136,7 @@ public JSONObject(String source) {\n \n     public JSONObject(JSONObject copyFrom) {\n         this();\n-        for (String key: this) {\n+        for (String key: copyFrom) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8eebe544524d91bd3fbf88be894b4846638ce526"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIxMTg4MQ==", "bodyText": "Yes. The current PR was based upon the last PR. I forgot to rebase onto master when the other PR was accepted, my bad", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458211881", "createdAt": "2020-07-21T16:01:52Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/utils/JSONObject.java", "diffHunk": "@@ -136,7 +136,7 @@ public JSONObject(String source) {\n \n     public JSONObject(JSONObject copyFrom) {\n         this();\n-        for (String key: this) {\n+        for (String key: copyFrom) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwMzk0Mg=="}, "originalCommit": {"oid": "8eebe544524d91bd3fbf88be894b4846638ce526"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTMzNjYzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/utils/JSONObject.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNTo1MjowM1rOG0-mpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1MzoxMlrOG1BHCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwNDgzOQ==", "bodyText": "Needs a better explanation that this clones into the provided object, and not the other way around. Maybe with the method name as well", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458204839", "createdAt": "2020-07-21T15:52:03Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/utils/JSONObject.java", "diffHunk": "@@ -328,6 +328,12 @@ public JSONObject optJSONObject(String name) {\n \n     public JSONObject deepClone() {\n         JSONObject clone = new JSONObject();\n+        deepClone(clone);\n+        return clone;\n+    }\n+\n+    /** deep clone in clone. This allow to have a copy in a subtype of JSONObject. */\n+    protected void deepClone(JSONObject clone) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8eebe544524d91bd3fbf88be894b4846638ce526"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIxNjk1NQ==", "bodyText": "Done.\ndeepCloneInto  allows to do j.deepCloneInto(t) to state that j gets cloned into t.\nIdeally,\u00a0I would just want to pass a class T as parameter, and create a new T() inside deepClone but it seems to be impossible :(", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458216955", "createdAt": "2020-07-21T16:09:07Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/utils/JSONObject.java", "diffHunk": "@@ -328,6 +328,12 @@ public JSONObject optJSONObject(String name) {\n \n     public JSONObject deepClone() {\n         JSONObject clone = new JSONObject();\n+        deepClone(clone);\n+        return clone;\n+    }\n+\n+    /** deep clone in clone. This allow to have a copy in a subtype of JSONObject. */\n+    protected void deepClone(JSONObject clone) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwNDgzOQ=="}, "originalCommit": {"oid": "8eebe544524d91bd3fbf88be894b4846638ce526"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0MTU1Mg==", "bodyText": "It's such a shame that it's not possible - generic erasure strikes again. Could be done if you accept a Class<T>, but it doesn't seem worth it", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458241552", "createdAt": "2020-07-21T16:46:24Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/utils/JSONObject.java", "diffHunk": "@@ -328,6 +328,12 @@ public JSONObject optJSONObject(String name) {\n \n     public JSONObject deepClone() {\n         JSONObject clone = new JSONObject();\n+        deepClone(clone);\n+        return clone;\n+    }\n+\n+    /** deep clone in clone. This allow to have a copy in a subtype of JSONObject. */\n+    protected void deepClone(JSONObject clone) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwNDgzOQ=="}, "originalCommit": {"oid": "8eebe544524d91bd3fbf88be894b4846638ce526"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NTg5Nw==", "bodyText": "I don't know how to do it. But anyway, I believe that the most important part is having better typing across the code. This can always be improved later since this method is not used appart in the class inheriting directly from JSONObject", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458245897", "createdAt": "2020-07-21T16:53:12Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/utils/JSONObject.java", "diffHunk": "@@ -328,6 +328,12 @@ public JSONObject optJSONObject(String name) {\n \n     public JSONObject deepClone() {\n         JSONObject clone = new JSONObject();\n+        deepClone(clone);\n+        return clone;\n+    }\n+\n+    /** deep clone in clone. This allow to have a copy in a subtype of JSONObject. */\n+    protected void deepClone(JSONObject clone) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwNDgzOQ=="}, "originalCommit": {"oid": "8eebe544524d91bd3fbf88be894b4846638ce526"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTYyNDE2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzowMTowNlrOG1BatA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODoyNjowOFrOG1EjbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1MDkzMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    JSONObject deck = (Deck) data[0];\n          \n          \n            \n                    Deck deck = (Deck) data[0];", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458250932", "createdAt": "2020-07-21T17:01:06Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -1398,12 +1401,12 @@ private TaskData doInBackgroundConfSetSubdecks(TaskData... params) {\n         Timber.d(\"doInBackgroundConfSetSubdecks\");\n         Collection col = CollectionHelper.getInstance().getCol(mContext);\n         Object[] data = params[0].getObjArray();\n-        JSONObject deck = (JSONObject) data[0];\n-        JSONObject conf = (JSONObject) data[1];\n+        JSONObject deck = (Deck) data[0];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "079e6a0d5a96de1d3d7af34b9673e7089f28b15e"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwMjMxNw==", "bodyText": "Thanks", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458302317", "createdAt": "2020-07-21T18:26:08Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -1398,12 +1401,12 @@ private TaskData doInBackgroundConfSetSubdecks(TaskData... params) {\n         Timber.d(\"doInBackgroundConfSetSubdecks\");\n         Collection col = CollectionHelper.getInstance().getCol(mContext);\n         Object[] data = params[0].getObjArray();\n-        JSONObject deck = (JSONObject) data[0];\n-        JSONObject conf = (JSONObject) data[1];\n+        JSONObject deck = (Deck) data[0];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1MDkzMg=="}, "originalCommit": {"oid": "079e6a0d5a96de1d3d7af34b9673e7089f28b15e"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTYzODAyOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzowNDo1MFrOG1BjWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzowNDo1MFrOG1BjWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1MzE0Ng==", "bodyText": "Not a change in this PR - but this line looks suspect (possibly an attempted fix for the corrupt dynamic decks)?", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458253146", "createdAt": "2020-07-21T17:04:50Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -679,30 +677,30 @@ public String _ensureParents(String name) {\n     /**\n      * A list of all deck config.\n      */\n-    public ArrayList<JSONObject> allConf() {\n+    public ArrayList<DeckConfig> allConf() {\n         return new ArrayList<>(mDconf.values());\n     }\n \n \n-    public JSONObject confForDid(long did) {\n-        JSONObject deck = get(did, false);\n+    public DeckConfig confForDid(long did) {\n+        Deck deck = get(did, false);\n         assert deck != null;\n         if (deck.has(\"conf\")) {\n-            JSONObject conf = getConf(deck.getLong(\"conf\"));\n+            DeckConfig conf = getConf(deck.getLong(\"conf\"));\n             conf.put(\"dyn\", 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "079e6a0d5a96de1d3d7af34b9673e7089f28b15e"}, "originalPosition": 246}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTY2ODA5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Models.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzoxMjoxNVrOG1B1mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODoyMjoxNFrOG1EatA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1NzgxOA==", "bodyText": "This looks good - flagging for second review that new JSONObject and new Model both perform a copy, and don't refer to the same object", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458257818", "createdAt": "2020-07-21T17:12:15Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Models.java", "diffHunk": "@@ -300,10 +300,10 @@ public JSONObject byName(String name) {\n     /** Create a new model, save it in the registry, and return it. */\n \t// Called `new` in Anki's code. New is a reserved word in java,\n \t// not in python. Thus the method has to be renamed.\n-    public JSONObject newModel(String name) {\n+    public Model newModel(String name) {\n         // caller should call save() after modifying\n-        JSONObject m;\n-        m = new JSONObject(defaultModel);\n+        Model m;\n+        m = new Model(defaultModel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "079e6a0d5a96de1d3d7af34b9673e7089f28b15e"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwMDA4NA==", "bodyText": "Indeed, the both perform copy", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458300084", "createdAt": "2020-07-21T18:22:14Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Models.java", "diffHunk": "@@ -300,10 +300,10 @@ public JSONObject byName(String name) {\n     /** Create a new model, save it in the registry, and return it. */\n \t// Called `new` in Anki's code. New is a reserved word in java,\n \t// not in python. Thus the method has to be renamed.\n-    public JSONObject newModel(String name) {\n+    public Model newModel(String name) {\n         // caller should call save() after modifying\n-        JSONObject m;\n-        m = new JSONObject(defaultModel);\n+        Model m;\n+        m = new Model(defaultModel);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1NzgxOA=="}, "originalCommit": {"oid": "079e6a0d5a96de1d3d7af34b9673e7089f28b15e"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTY5MDkyOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Models.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzoxODozNFrOG1CELQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODoyNDoxN1rOG1EfIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2MTU0OQ==", "bodyText": "This is actually different functionality - wrap vs deepClone. This looks OK, but flagging as you wrote the deepClone code", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458261549", "createdAt": "2020-07-21T17:18:34Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Models.java", "diffHunk": "@@ -412,9 +412,8 @@ public int tmplUseCount(JSONObject m, int ord) {\n      */\n \n     /** Copy, save and return. */\n-    public JSONObject copy(JSONObject m) {\n-        JSONObject m2 = null;\n-        m2 = m.deepClone();\n+    public Model copy(Model m) {\n+        Model m2 = new Model(m);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "079e6a0d5a96de1d3d7af34b9673e7089f28b15e"}, "originalPosition": 203}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwMTIxNg==", "bodyText": "Thanks for catching it, it would have been a mistake", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458301216", "createdAt": "2020-07-21T18:24:17Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Models.java", "diffHunk": "@@ -412,9 +412,8 @@ public int tmplUseCount(JSONObject m, int ord) {\n      */\n \n     /** Copy, save and return. */\n-    public JSONObject copy(JSONObject m) {\n-        JSONObject m2 = null;\n-        m2 = m.deepClone();\n+    public Model copy(Model m) {\n+        Model m2 = new Model(m);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2MTU0OQ=="}, "originalCommit": {"oid": "079e6a0d5a96de1d3d7af34b9673e7089f28b15e"}, "originalPosition": 203}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 133, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}