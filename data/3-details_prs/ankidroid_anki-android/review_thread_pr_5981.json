{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMzE3OTU5", "number": 5981, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNToxNjoxMFrODxEBWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxODoyMTozNFrODxFGew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNzcyNjk4OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNToxNjoxMFrOGEWQWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNToxOTo1M1rOGEWStg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxMjEyMg==", "bodyText": "[Edited: this is correct on re-read, disregard this comment]\nI don't believe this is correct. By definition a child path will have more parts than a parent path, so their size will be unequal, so this will return false even if the parent is the valid parent of the child.\nPython seems more expressive in this sense - here is the upstream code - so the implementations are not directly comparable unfortunately\nhttps://github.com/ankitects/anki/blob/0c5f22f4ae7be0b1e5ffcb1d5a8dddd9f73930f0/pylib/anki/decks.py#L274-L277", "url": "https://github.com/ankidroid/Anki-Android/pull/5981#discussion_r407212122", "createdAt": "2020-04-12T15:16:10Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -521,9 +521,14 @@ private boolean _canDragAndDrop(String draggedDeckName, String ontoDeckName) {\n \n     private boolean _isParent(String parentDeckName, String childDeckName) {\n         List<String> parentDeckPath = path(parentDeckName);\n+        List<String> childDeckPath = path(childDeckName);\n         parentDeckPath.add(basename(childDeckName));\n-\n-        Iterator<String> cpIt = path(childDeckName).iterator();\n+        \n+        if (parentDeckPath.size() != childDeckPath.size()) {\n+            return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfcac93a3bd9b12612339c268a88e0959c868692"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxMjcyNg==", "bodyText": "Oh wait! I didn't see the +1, this is correct. Just needs a whitespace difference", "url": "https://github.com/ankidroid/Anki-Android/pull/5981#discussion_r407212726", "createdAt": "2020-04-12T15:19:53Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -521,9 +521,14 @@ private boolean _canDragAndDrop(String draggedDeckName, String ontoDeckName) {\n \n     private boolean _isParent(String parentDeckName, String childDeckName) {\n         List<String> parentDeckPath = path(parentDeckName);\n+        List<String> childDeckPath = path(childDeckName);\n         parentDeckPath.add(basename(childDeckName));\n-\n-        Iterator<String> cpIt = path(childDeckName).iterator();\n+        \n+        if (parentDeckPath.size() != childDeckPath.size()) {\n+            return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxMjEyMg=="}, "originalCommit": {"oid": "dfcac93a3bd9b12612339c268a88e0959c868692"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNzcyODg3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNToxNzozMlrOGEWRPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNToxNzozMlrOGEWRPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxMjM0OA==", "bodyText": "AnkiDroid coding standards - whitespace around operators so they stand out visually\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for(int i=0; i<path.size() - 1; i++) {\n          \n          \n            \n                    for(int i = 0; i < path.size() - 1; i++) {", "url": "https://github.com/ankidroid/Anki-Android/pull/5981#discussion_r407212348", "createdAt": "2020-04-12T15:17:32Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -574,7 +574,8 @@ public String _ensureParents(String name) {\n         if (path.size() < 2) {\n             return name;\n         }\n-        for(String p : path.subList(0, path.size() - 1)) {\n+        for(int i=0; i<path.size() - 1; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49a9824a8cb037e01009e35e3580a89d284ad5b6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNzczMjY0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNToyMDo0M1rOGEWTFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNToyMDo0M1rOGEWTFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxMjgyMA==", "bodyText": "whitespace around operators so they stand out\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (parentDeckPath.length +1 != childDeckPath.length) {\n          \n          \n            \n                    if (parentDeckPath.length + 1 != childDeckPath.length) {", "url": "https://github.com/ankidroid/Anki-Android/pull/5981#discussion_r407212820", "createdAt": "2020-04-12T15:20:43Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -520,17 +520,15 @@ private boolean _canDragAndDrop(String draggedDeckName, String ontoDeckName) {\n \n \n     private boolean _isParent(String parentDeckName, String childDeckName) {\n-        List<String> parentDeckPath = path(parentDeckName);\n-        List<String> childDeckPath = path(childDeckName);\n+        String[] parentDeckPath = path(parentDeckName);\n+        String[] childDeckPath = path(childDeckName);\n         \n-        if (parentDeckPath.size() +1 != childDeckName.size()) {\n+        if (parentDeckPath.length +1 != childDeckPath.length) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "def41eacd135d5e2f56304c3e19d323fca451109"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNzczMzA2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNToyMTowNlrOGEWTRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNToyMTowNlrOGEWTRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxMjg2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (int i=0; i < parentDeckPath.length; i++) {\n          \n          \n            \n                    for (int i = 0; i < parentDeckPath.length; i++) {", "url": "https://github.com/ankidroid/Anki-Android/pull/5981#discussion_r407212869", "createdAt": "2020-04-12T15:21:06Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -520,17 +520,15 @@ private boolean _canDragAndDrop(String draggedDeckName, String ontoDeckName) {\n \n \n     private boolean _isParent(String parentDeckName, String childDeckName) {\n-        List<String> parentDeckPath = path(parentDeckName);\n-        List<String> childDeckPath = path(childDeckName);\n+        String[] parentDeckPath = path(parentDeckName);\n+        String[] childDeckPath = path(childDeckName);\n         \n-        if (parentDeckPath.size() +1 != childDeckName.size()) {\n+        if (parentDeckPath.length +1 != childDeckPath.length) {\n             return false;\n         }\n-        \n-        Iterator<String> cpIt = childDeckPath.iterator();\n-        Iterator<String> ppIt = parentDeckPath.iterator();\n-        while (cpIt.hasNext() && ppIt.hasNext()) {\n-            if (!cpIt.next().equals(ppIt.next())) {\n+\n+        for (int i=0; i < parentDeckPath.length; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "def41eacd135d5e2f56304c3e19d323fca451109"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNzczMzk5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNToyMjowOFrOGEWTvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNTo1MTo0MVrOGEWiEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxMjk4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (int i=0; i<ancestorDeckPath.length; i++) {\n          \n          \n            \n                    for (int i = 0; i < ancestorDeckPath.length; i++) {\n          \n      \n    \n    \n  \n\nI'm leaving these whitespace comments as suggestions but if you actually commit them like this the commit history will be hash and I'll want to squash, better to rebase and fix the original commits so I can rebase+merge and preserve the otherwise-beautifully separated commits", "url": "https://github.com/ankidroid/Anki-Android/pull/5981#discussion_r407212988", "createdAt": "2020-04-12T15:22:08Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -539,29 +537,28 @@ private boolean _isParent(String parentDeckName, String childDeckName) {\n \n \n     private boolean _isAncestor(String ancestorDeckName, String descendantDeckName) {\n-        List<String> ancestorDeckPath = path(ancestorDeckName);\n-        List<String> descendantDeckPath = path(descendantDeckName);\n-        if (ancestorDeckPath.size() > descendantDeckName.size()) {\n+        String[] ancestorDeckPath = path(ancestorDeckName);\n+        String[] descendantDeckPath = path(descendantDeckName);\n+        if (ancestorDeckPath.length > descendantDeckPath.length) {\n             return false;\n         }\n-        Iterator<String> apIt = ancestorDeckPath.iterator();\n-        Iterator<String> dpIt = descendantDeckPath.iterator();\n-        while (apIt.hasNext() && dpIt.hasNext()) {\n-            if (!apIt.next().equals(dpIt.next())) {\n+\n+        for (int i=0; i<ancestorDeckPath.length; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "def41eacd135d5e2f56304c3e19d323fca451109"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxNjEyOA==", "bodyText": "I did force push a version directly with the correct spaces (hopefully)\nYou may have remarked that is what I usually do each time a PR has an error. To leave a beautiful commit history", "url": "https://github.com/ankidroid/Anki-Android/pull/5981#discussion_r407216128", "createdAt": "2020-04-12T15:46:52Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -539,29 +537,28 @@ private boolean _isParent(String parentDeckName, String childDeckName) {\n \n \n     private boolean _isAncestor(String ancestorDeckName, String descendantDeckName) {\n-        List<String> ancestorDeckPath = path(ancestorDeckName);\n-        List<String> descendantDeckPath = path(descendantDeckName);\n-        if (ancestorDeckPath.size() > descendantDeckName.size()) {\n+        String[] ancestorDeckPath = path(ancestorDeckName);\n+        String[] descendantDeckPath = path(descendantDeckName);\n+        if (ancestorDeckPath.length > descendantDeckPath.length) {\n             return false;\n         }\n-        Iterator<String> apIt = ancestorDeckPath.iterator();\n-        Iterator<String> dpIt = descendantDeckPath.iterator();\n-        while (apIt.hasNext() && dpIt.hasNext()) {\n-            if (!apIt.next().equals(dpIt.next())) {\n+\n+        for (int i=0; i<ancestorDeckPath.length; i++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxMjk4OA=="}, "originalCommit": {"oid": "def41eacd135d5e2f56304c3e19d323fca451109"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxNjY1OQ==", "bodyText": "Yes - your commit histories are usually very nice, to the extent they can be (sometimes things are messy because life is messy). Ironically though, this is all fixed now except this one line that has the comment pinned to it :-) - line 546 of libanki/Decks.java", "url": "https://github.com/ankidroid/Anki-Android/pull/5981#discussion_r407216659", "createdAt": "2020-04-12T15:51:41Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -539,29 +537,28 @@ private boolean _isParent(String parentDeckName, String childDeckName) {\n \n \n     private boolean _isAncestor(String ancestorDeckName, String descendantDeckName) {\n-        List<String> ancestorDeckPath = path(ancestorDeckName);\n-        List<String> descendantDeckPath = path(descendantDeckName);\n-        if (ancestorDeckPath.size() > descendantDeckName.size()) {\n+        String[] ancestorDeckPath = path(ancestorDeckName);\n+        String[] descendantDeckPath = path(descendantDeckName);\n+        if (ancestorDeckPath.length > descendantDeckPath.length) {\n             return false;\n         }\n-        Iterator<String> apIt = ancestorDeckPath.iterator();\n-        Iterator<String> dpIt = descendantDeckPath.iterator();\n-        while (apIt.hasNext() && dpIt.hasNext()) {\n-            if (!apIt.next().equals(dpIt.next())) {\n+\n+        for (int i=0; i<ancestorDeckPath.length; i++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxMjk4OA=="}, "originalCommit": {"oid": "def41eacd135d5e2f56304c3e19d323fca451109"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNzkwMzk1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxODoyMTozNFrOGEXocg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxODoyMTozNFrOGEXocg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzNDY3NA==", "bodyText": "Issue found: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.", "url": "https://github.com/ankidroid/Anki-Android/pull/5981#discussion_r407234674", "createdAt": "2020-04-12T18:21:34Z", "author": {"login": "timrae"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -533,23 +533,32 @@ private boolean _isParent(String parentDeckName, String childDeckName) {\n \n \n     private boolean _isAncestor(String ancestorDeckName, String descendantDeckName) {\n-        Iterator<String> apIt = _path(ancestorDeckName).iterator();\n-        Iterator<String> dpIt = _path(descendantDeckName).iterator();\n-        while (apIt.hasNext() && dpIt.hasNext()) {\n-            if (!apIt.next().equals(dpIt.next())) {\n+        String[] ancestorDeckPath = path(ancestorDeckName);\n+        String[] descendantDeckPath = path(descendantDeckName);\n+        if (ancestorDeckPath.length > descendantDeckPath.length) {\n+            return false;\n+        }\n+\n+        for (int i = 0; i < ancestorDeckPath.length; i++) {\n+            if (ancestorDeckPath[i] != descendantDeckPath[i]) {\n                 return false;\n             }\n         }\n         return true;\n     }\n \n \n-    private List<String> _path(String name) {\n-        return Arrays.asList(name.split(\"::\", -1));\n+    private static HashMap<String, String[]> pathCache = new HashMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "701fbb5b7be3e152d743a8184f8178f8fcb069a1"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 557, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}