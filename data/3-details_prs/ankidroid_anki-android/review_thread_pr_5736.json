{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwNDUyNzk3", "number": 5736, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMDowNzoyN1rODcwnCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMDowNzoyN1rODcwnCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDgzMTQ2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/async/Connection.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMDowNzoyN1rOFk-T-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMDoxNjo1OVrOFk-lqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMxMzk3OA==", "bodyText": "Probably with the new library we no longer need to rely on string comparisons of the message to figure out whether a network error occurred... This was just a nasty hack we threw together to work around that old Apache library. I'll merge for now as a quick fix, but you should definitely consider using they type information instead of string comparisons if possible.", "url": "https://github.com/ankidroid/Anki-Android/pull/5736#discussion_r374313978", "createdAt": "2020-02-03T20:07:27Z", "author": {"login": "timrae"}, "path": "AnkiDroid/src/main/java/com/ichi2/async/Connection.java", "diffHunk": "@@ -249,13 +251,16 @@ private Payload doInBackgroundLogin(Payload data) {\n     }\n \n \n-    private boolean timeoutOccured(Exception e) {\n+    private boolean timeoutOccurred(Exception e) {\n         String msg = e.getMessage();\n         return msg.contains(\"UnknownHostException\") ||\n                 msg.contains(\"HttpHostConnectException\") ||\n                 msg.contains(\"SSLException while building HttpClient\") ||\n                 msg.contains(\"SocketTimeoutException\") ||\n                 msg.contains(\"ClientProtocolException\") ||\n+                msg.contains(\"deadline reached\") ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "495da526a5619dd108e6218afafa8e09057b6192"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMxODUwNA==", "bodyText": "I actually did consider it -\nokhttp pops a 'java.io.InterruptedIOException' which is a java.io.IOException subclass, or a 'java.net.ConnectException' so it's possible ...but all the exceptions are actually swallowed and re-thrown as RuntimeException, which bubble up to a nested try where some types are caught, and then finally to an outer try that catches everything, where the message is then inspected in a few ways, and if it's known then the return is one of a bunch of hard-coded strings as an AsyncTask data object return value\nThe whole thing was so convoluted I dared not touch it right now, even though I was tempted - I'd rather get closure on the stack of existing PRs :-)", "url": "https://github.com/ankidroid/Anki-Android/pull/5736#discussion_r374318504", "createdAt": "2020-02-03T20:16:59Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/async/Connection.java", "diffHunk": "@@ -249,13 +251,16 @@ private Payload doInBackgroundLogin(Payload data) {\n     }\n \n \n-    private boolean timeoutOccured(Exception e) {\n+    private boolean timeoutOccurred(Exception e) {\n         String msg = e.getMessage();\n         return msg.contains(\"UnknownHostException\") ||\n                 msg.contains(\"HttpHostConnectException\") ||\n                 msg.contains(\"SSLException while building HttpClient\") ||\n                 msg.contains(\"SocketTimeoutException\") ||\n                 msg.contains(\"ClientProtocolException\") ||\n+                msg.contains(\"deadline reached\") ||", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMxMzk3OA=="}, "originalCommit": {"oid": "495da526a5619dd108e6218afafa8e09057b6192"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 577, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}