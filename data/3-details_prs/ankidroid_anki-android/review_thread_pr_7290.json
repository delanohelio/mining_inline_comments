{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNzI5Mzkz", "number": 7290, "reviewThreads": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNDozNzoxNlrOEn1_pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTo1MDowNFrOEtjOlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjE0NTY2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNDozNzoxNlrOHYnxiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNDo1NDowNVrOHYn3ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3OTUyOA==", "bodyText": "If this is an update frequency issue, then we could perhaps still overwhelm the display if the math was correct and each percent was roughly real time. Perhaps better to have this \"update frequency reducer\" be based on time vs percents, and update once a second? (or similar)", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495579528", "createdAt": "2020-09-27T14:37:16Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2738,6 +2742,18 @@ public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n                     deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n         }\n \n+        @Override\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            int lastCardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            cardSeen += progress.getInt();\n+            int cardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            if (lastCardSeenPercent != cardSeenPercent) {\n+                // Ensure we update at most 100 times. Updating in real time freeze the screen", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb342fd3dbff9ac6f1657d27a924c3609619a2a"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MDE5NA==", "bodyText": "Actually, it was not a real time issue. I discovered later that it was an issue that I kept displaying new box instead of updating the current one. Make sens, I'll do it", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495580194", "createdAt": "2020-09-27T14:44:40Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2738,6 +2742,18 @@ public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n                     deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n         }\n \n+        @Override\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            int lastCardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            cardSeen += progress.getInt();\n+            int cardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            if (lastCardSeenPercent != cardSeenPercent) {\n+                // Ensure we update at most 100 times. Updating in real time freeze the screen", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3OTUyOA=="}, "originalCommit": {"oid": "0eb342fd3dbff9ac6f1657d27a924c3609619a2a"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MDQ3OQ==", "bodyText": "would be better to just update then ? :-) - I think there are patterns to follow with the sync progress and the database check dialog", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495580479", "createdAt": "2020-09-27T14:47:11Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2738,6 +2742,18 @@ public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n                     deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n         }\n \n+        @Override\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            int lastCardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            cardSeen += progress.getInt();\n+            int cardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            if (lastCardSeenPercent != cardSeenPercent) {\n+                // Ensure we update at most 100 times. Updating in real time freeze the screen", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3OTUyOA=="}, "originalCommit": {"oid": "0eb342fd3dbff9ac6f1657d27a924c3609619a2a"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MDY3MQ==", "bodyText": "The second problem is going to be that if you want the numbers in the ressource, then we'll need to ask all translations to be done again. I'm not really fan of this idea.\nAt least, I'll wait until we have decided what numbers to show before creating a new string", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495580671", "createdAt": "2020-09-27T14:49:11Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2738,6 +2742,18 @@ public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n                     deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n         }\n \n+        @Override\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            int lastCardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            cardSeen += progress.getInt();\n+            int cardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            if (lastCardSeenPercent != cardSeenPercent) {\n+                // Ensure we update at most 100 times. Updating in real time freeze the screen", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3OTUyOA=="}, "originalCommit": {"oid": "0eb342fd3dbff9ac6f1657d27a924c3609619a2a"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTA5MQ==", "bodyText": "I removed this test. Now that I update the string, it works perfectly", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495581091", "createdAt": "2020-09-27T14:54:05Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2738,6 +2742,18 @@ public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n                     deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n         }\n \n+        @Override\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            int lastCardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            cardSeen += progress.getInt();\n+            int cardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            if (lastCardSeenPercent != cardSeenPercent) {\n+                // Ensure we update at most 100 times. Updating in real time freeze the screen", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3OTUyOA=="}, "originalCommit": {"oid": "0eb342fd3dbff9ac6f1657d27a924c3609619a2a"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjE0Njc1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNDozODo0NVrOHYnyEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNTo1OTo1N1rOHYoPYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3OTY2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    deckPicker.getResources().getString(R.string.emtpy_cards_finding) + cardSeen + \" / \" + numberCards);\n          \n          \n            \n                                    deckPicker.getResources().getString(R.string.empty_cards_finding) + cardSeen + \" / \" + numberCards);\n          \n      \n    \n    \n  \n\nBut more problematically this does not work with RTL languages, the numbers should be interpolated into the string with a string format I think?\nAnd a minor note, but if the math is \"fuzzy\" (you mention that things might go up or down) then I think you could put a ~ sign or something before the numbers to indicate \"not exact but close\"", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495579664", "createdAt": "2020-09-27T14:38:45Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2738,6 +2742,18 @@ public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n                     deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n         }\n \n+        @Override\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            int lastCardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            cardSeen += progress.getInt();\n+            int cardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            if (lastCardSeenPercent != cardSeenPercent) {\n+                // Ensure we update at most 100 times. Updating in real time freeze the screen\n+                deckPicker.mProgressDialog.setContent(\n+                        deckPicker.getResources().getString(R.string.emtpy_cards_finding) + cardSeen + \" / \" + numberCards);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb342fd3dbff9ac6f1657d27a924c3609619a2a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MDU4Ng==", "bodyText": "I copied what we do for \"check collection\". You may be right, but in this case it means this is also incorrect.\nThe number shown are exact. The trouble is that both numbers counts different things.\nI.e. \"39691 /233434\" means \"We have checked that 39691\u00a0cards should be generated from your notes according to your collection, and for information your collection has 233434 cards\".\nThis is a good indication, because assuming that there are only a small number of cards to create/delete, then the numerator will almost reach the denominator.\nSo \"~\" seems really strange here.\nIf instead I showed percent, that would makes sens. But I like the idea to showing to the user their actual number of cards", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495580586", "createdAt": "2020-09-27T14:48:32Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2738,6 +2742,18 @@ public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n                     deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n         }\n \n+        @Override\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            int lastCardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            cardSeen += progress.getInt();\n+            int cardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            if (lastCardSeenPercent != cardSeenPercent) {\n+                // Ensure we update at most 100 times. Updating in real time freeze the screen\n+                deckPicker.mProgressDialog.setContent(\n+                        deckPicker.getResources().getString(R.string.emtpy_cards_finding) + cardSeen + \" / \" + numberCards);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3OTY2NA=="}, "originalCommit": {"oid": "0eb342fd3dbff9ac6f1657d27a924c3609619a2a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MDk5Mg==", "bodyText": "Why not use a progress bar capped at 100%?\nIntuition from reading the code a while back implies that our Progress Dialog supports it, and this removes the ambiguity from a user's point of view - a progress bar stuck at 100% isn't great, but it happens a lot in applications, and a user would expect it.", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495580992", "createdAt": "2020-09-27T14:52:51Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2738,6 +2742,18 @@ public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n                     deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n         }\n \n+        @Override\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            int lastCardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            cardSeen += progress.getInt();\n+            int cardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            if (lastCardSeenPercent != cardSeenPercent) {\n+                // Ensure we update at most 100 times. Updating in real time freeze the screen\n+                deckPicker.mProgressDialog.setContent(\n+                        deckPicker.getResources().getString(R.string.emtpy_cards_finding) + cardSeen + \" / \" + numberCards);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3OTY2NA=="}, "originalCommit": {"oid": "0eb342fd3dbff9ac6f1657d27a924c3609619a2a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MjE4MQ==", "bodyText": "I tried to copy what I currently have. I like seeing the actual number of cards in the collection, I find it nice. But if you prefer any other UI, I'm fine with them too as long as it's not harder to code.", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495582181", "createdAt": "2020-09-27T15:06:28Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2738,6 +2742,18 @@ public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n                     deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n         }\n \n+        @Override\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            int lastCardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            cardSeen += progress.getInt();\n+            int cardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            if (lastCardSeenPercent != cardSeenPercent) {\n+                // Ensure we update at most 100 times. Updating in real time freeze the screen\n+                deckPicker.mProgressDialog.setContent(\n+                        deckPicker.getResources().getString(R.string.emtpy_cards_finding) + cardSeen + \" / \" + numberCards);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3OTY2NA=="}, "originalCommit": {"oid": "0eb342fd3dbff9ac6f1657d27a924c3609619a2a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MjIwOQ==", "bodyText": "Inexact progress bars drive me crazy personally (like, there is a numerator and a denominator but it is not really a fraction of work effort being represented...), and it seems that if we want to expose the actual counts we have all sorts of complexity with RTL and strings and stuff.\nLet's just do a percent 0 to 100 capped at 100, life will be easy :-)", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495582209", "createdAt": "2020-09-27T15:06:51Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2738,6 +2742,18 @@ public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n                     deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n         }\n \n+        @Override\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            int lastCardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            cardSeen += progress.getInt();\n+            int cardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            if (lastCardSeenPercent != cardSeenPercent) {\n+                // Ensure we update at most 100 times. Updating in real time freeze the screen\n+                deckPicker.mProgressDialog.setContent(\n+                        deckPicker.getResources().getString(R.string.emtpy_cards_finding) + cardSeen + \" / \" + numberCards);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3OTY2NA=="}, "originalCommit": {"oid": "0eb342fd3dbff9ac6f1657d27a924c3609619a2a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4NzE3MQ==", "bodyText": "I added a number with percent symbol, and a new string... not ideal because this new string contains a part of the old string. But let's go for it if that's what you prefer.\nI have little interest in UI I fear, and will do whatever I have to in order to get the feature I care about in the codebase. But I'll leave the beautiful UI to other if that's what they want to spend their time on.", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495587171", "createdAt": "2020-09-27T15:59:57Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2738,6 +2742,18 @@ public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n                     deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n         }\n \n+        @Override\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            int lastCardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            cardSeen += progress.getInt();\n+            int cardSeenPercent = (int) ((cardSeen * 100) / numberCards);\n+            if (lastCardSeenPercent != cardSeenPercent) {\n+                // Ensure we update at most 100 times. Updating in real time freeze the screen\n+                deckPicker.mProgressDialog.setContent(\n+                        deckPicker.getResources().getString(R.string.emtpy_cards_finding) + cardSeen + \" / \" + numberCards);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3OTY2NA=="}, "originalCommit": {"oid": "0eb342fd3dbff9ac6f1657d27a924c3609619a2a"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjE2MDc4OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNDo1NzowMFrOHYn4tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNTo1NzozNFrOHYoOaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTM2NQ==", "bodyText": "spacing changes", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495581365", "createdAt": "2020-09-27T14:57:00Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -1179,13 +1207,13 @@ public void updateFieldCache(long[] nids) {\n         return data;\n     }\n \n-\tpublic String _flagNameFromCardFlags(int flags){\n-\t\tint flag = flags & 0b111;\n-\t\tif (flag == 0) {\n-\t\t\treturn \"\";\n-\t\t}\n-\t\treturn \"flag\"+flag;\n-\t}\n+   public String _flagNameFromCardFlags(int flags){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b5fb7b1d87fdfc95a6c692fcf3a13ffd57cfd41"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4NjkyMA==", "bodyText": "Removed. This'll wait for linting to automatically occurs", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495586920", "createdAt": "2020-09-27T15:57:34Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -1179,13 +1207,13 @@ public void updateFieldCache(long[] nids) {\n         return data;\n     }\n \n-\tpublic String _flagNameFromCardFlags(int flags){\n-\t\tint flag = flags & 0b111;\n-\t\tif (flag == 0) {\n-\t\t\treturn \"\";\n-\t\t}\n-\t\treturn \"flag\"+flag;\n-\t}\n+   public String _flagNameFromCardFlags(int flags){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTM2NQ=="}, "originalCommit": {"oid": "6b5fb7b1d87fdfc95a6c692fcf3a13ffd57cfd41"}, "originalPosition": 163}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjE2MDgxOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNDo1NzowM1rOHYn4uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNTowODowMVrOHYn8aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTM2OQ==", "bodyText": "spacing changes", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495581369", "createdAt": "2020-09-27T14:57:03Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -2033,8 +2061,8 @@ public synchronized Models getModels() {\n     /** Check if this collection is valid. */\n     @SuppressWarnings(\"BooleanMethodIsAlwaysInverted\")\n     public boolean validCollection() {\n-    \t//TODO: more validation code\n-    \treturn getModels().validateModel();\n+       //TODO: more validation code", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b5fb7b1d87fdfc95a6c692fcf3a13ffd57cfd41"}, "originalPosition": 179}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MjMxMg==", "bodyText": "I had indeed a commit which correct the tabs to space before the commits making the actual change. It's easier to work on code well formatted.", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495582312", "createdAt": "2020-09-27T15:08:01Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -2033,8 +2061,8 @@ public synchronized Models getModels() {\n     /** Check if this collection is valid. */\n     @SuppressWarnings(\"BooleanMethodIsAlwaysInverted\")\n     public boolean validCollection() {\n-    \t//TODO: more validation code\n-    \treturn getModels().validateModel();\n+       //TODO: more validation code", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTM2OQ=="}, "originalCommit": {"oid": "6b5fb7b1d87fdfc95a6c692fcf3a13ffd57cfd41"}, "originalPosition": 179}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjE2MTUxOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNDo1ODoxM1rOHYn5Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNzo0MjowN1rOHYo0_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTQ1NQ==", "bodyText": "Use an interface here - adding a dependency from libAnki -> CollectionTask isn't a good idea", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495581455", "createdAt": "2020-09-27T14:58:13Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -716,19 +716,40 @@ public void _remNotes(java.util.Collection<Long> ids) {\n     /**\n      * Generate cards for non-empty templates, return ids to remove.\n      */\n-\tpublic ArrayList<Long> genCards(List<Long> nids) {\n-\t    return genCards(Utils.collection2Array(nids));\n-\t}\n+   public ArrayList<Long> genCards(List<Long> nids) {\n+       return genCards(Utils.collection2Array(nids));\n+   }\n+\n+    public ArrayList<Long> genCards(List<Long> nids, CollectionTask task) {\n+       return genCards(Utils.collection2Array(nids), task);\n+    }\n+\n     public ArrayList<Long> genCards(long[] nids) {\n+       return genCards(nids, null);\n+    }\n+\n+    /**\n+     * @param nids All ids of nodes of a note type\n+     * @param task Task to check for cancellation and update number of card processed\n+     * @return Cards that should be removed because they should not be generated\n+     */\n+    public ArrayList<Long> genCards(long[] nids, CollectionTask task) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b5fb7b1d87fdfc95a6c692fcf3a13ffd57cfd41"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MjQ3Mg==", "bodyText": "An interface which contains what ?\nI want to send update and check whether it's cancelled, it seems to be exactly the point of collection task.\nThat's exactly what is already done in libanki to cancel the deck due tree computation for example.", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495582472", "createdAt": "2020-09-27T15:09:39Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -716,19 +716,40 @@ public void _remNotes(java.util.Collection<Long> ids) {\n     /**\n      * Generate cards for non-empty templates, return ids to remove.\n      */\n-\tpublic ArrayList<Long> genCards(List<Long> nids) {\n-\t    return genCards(Utils.collection2Array(nids));\n-\t}\n+   public ArrayList<Long> genCards(List<Long> nids) {\n+       return genCards(Utils.collection2Array(nids));\n+   }\n+\n+    public ArrayList<Long> genCards(List<Long> nids, CollectionTask task) {\n+       return genCards(Utils.collection2Array(nids), task);\n+    }\n+\n     public ArrayList<Long> genCards(long[] nids) {\n+       return genCards(nids, null);\n+    }\n+\n+    /**\n+     * @param nids All ids of nodes of a note type\n+     * @param task Task to check for cancellation and update number of card processed\n+     * @return Cards that should be removed because they should not be generated\n+     */\n+    public ArrayList<Long> genCards(long[] nids, CollectionTask task) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTQ1NQ=="}, "originalCommit": {"oid": "6b5fb7b1d87fdfc95a6c692fcf3a13ffd57cfd41"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU5Njc5Nw==", "bodyText": "An interface with a named method for sending progress which doesn't couple us directly to either CollectionTask or TaskData (this is useful as we can send multiple categories of progress notifications for this operation and the ideal would be to be able to differentiate them).\nIt's ideal to avoid circular dependencies when feasible.\nEspecially so in the case of CollectionTask, where know it requires both a hard reference to the Android framework, and when the underlying mechanism (AsyncTask) has been deprecated in the latest version of Android.", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495596797", "createdAt": "2020-09-27T17:42:07Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -716,19 +716,40 @@ public void _remNotes(java.util.Collection<Long> ids) {\n     /**\n      * Generate cards for non-empty templates, return ids to remove.\n      */\n-\tpublic ArrayList<Long> genCards(List<Long> nids) {\n-\t    return genCards(Utils.collection2Array(nids));\n-\t}\n+   public ArrayList<Long> genCards(List<Long> nids) {\n+       return genCards(Utils.collection2Array(nids));\n+   }\n+\n+    public ArrayList<Long> genCards(List<Long> nids, CollectionTask task) {\n+       return genCards(Utils.collection2Array(nids), task);\n+    }\n+\n     public ArrayList<Long> genCards(long[] nids) {\n+       return genCards(nids, null);\n+    }\n+\n+    /**\n+     * @param nids All ids of nodes of a note type\n+     * @param task Task to check for cancellation and update number of card processed\n+     * @return Cards that should be removed because they should not be generated\n+     */\n+    public ArrayList<Long> genCards(long[] nids, CollectionTask task) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTQ1NQ=="}, "originalCommit": {"oid": "6b5fb7b1d87fdfc95a6c692fcf3a13ffd57cfd41"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjE2MjQ2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNDo1OTo1MVrOHYn5ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMzowOTozOFrOHZsUjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTU3OA==", "bodyText": "If we stick with this, don't string concat", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495581578", "createdAt": "2020-09-27T14:59:51Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2722,24 +2725,50 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        emptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int numberCards;\n+        private long cardSeen = 0;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            numberCards = deckPicker.getCol().cardCount();\n         }\n \n         @Override\n         public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n+            DialogInterface.OnCancelListener onCancel = (dialogInterface) -> {\n+                CollectionTask emptyCardTask = deckPicker.emptyCardTask;\n+                if (emptyCardTask != null) {\n+                    emptyCardTask.safeCancel();\n+                }};\n             deckPicker.mProgressDialog = StyledProgressDialog.show(deckPicker, \"\",\n-                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n+                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), true,\n+                    onCancel);\n         }\n \n         @Override\n-        public void actualOnPostExecute(@NonNull DeckPicker deckPicker, TaskData result) {\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            cardSeen += progress.getInt();\n+            // Ensure we update at most 100 times. Updating in real time freeze the screen\n+            deckPicker.mProgressDialog.setContent(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b5fb7b1d87fdfc95a6c692fcf3a13ffd57cfd41"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MjU1NQ==", "bodyText": "Can you please let me know what I should do instead ?", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495582555", "createdAt": "2020-09-27T15:10:10Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2722,24 +2725,50 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        emptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int numberCards;\n+        private long cardSeen = 0;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            numberCards = deckPicker.getCol().cardCount();\n         }\n \n         @Override\n         public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n+            DialogInterface.OnCancelListener onCancel = (dialogInterface) -> {\n+                CollectionTask emptyCardTask = deckPicker.emptyCardTask;\n+                if (emptyCardTask != null) {\n+                    emptyCardTask.safeCancel();\n+                }};\n             deckPicker.mProgressDialog = StyledProgressDialog.show(deckPicker, \"\",\n-                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n+                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), true,\n+                    onCancel);\n         }\n \n         @Override\n-        public void actualOnPostExecute(@NonNull DeckPicker deckPicker, TaskData result) {\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            cardSeen += progress.getInt();\n+            // Ensure we update at most 100 times. Updating in real time freeze the screen\n+            deckPicker.mProgressDialog.setContent(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTU3OA=="}, "originalCommit": {"oid": "6b5fb7b1d87fdfc95a6c692fcf3a13ffd57cfd41"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4ODA0OQ==", "bodyText": "Going with a progress bar and no text seems like the consensus.\nnew MaterialDialog.Builder(context)\n                .progress(false, maxNumberOfElements)", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495588049", "createdAt": "2020-09-27T16:09:32Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2722,24 +2725,50 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        emptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int numberCards;\n+        private long cardSeen = 0;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            numberCards = deckPicker.getCol().cardCount();\n         }\n \n         @Override\n         public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n+            DialogInterface.OnCancelListener onCancel = (dialogInterface) -> {\n+                CollectionTask emptyCardTask = deckPicker.emptyCardTask;\n+                if (emptyCardTask != null) {\n+                    emptyCardTask.safeCancel();\n+                }};\n             deckPicker.mProgressDialog = StyledProgressDialog.show(deckPicker, \"\",\n-                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n+                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), true,\n+                    onCancel);\n         }\n \n         @Override\n-        public void actualOnPostExecute(@NonNull DeckPicker deckPicker, TaskData result) {\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            cardSeen += progress.getInt();\n+            // Ensure we update at most 100 times. Updating in real time freeze the screen\n+            deckPicker.mProgressDialog.setContent(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTU3OA=="}, "originalCommit": {"oid": "6b5fb7b1d87fdfc95a6c692fcf3a13ffd57cfd41"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4ODI0Nw==", "bodyText": "I don't think we actually have a progress bar dialog? Just percents.\nThe Material UI standards have moved and we shouldn't be using Dialogs anyway, we should use Progress bars in notifications and not block the UI but that's even farther from what we have now\nIf this does a dialog with percents I think that is our best practice in our app at the moment?", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495588247", "createdAt": "2020-09-27T16:11:16Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2722,24 +2725,50 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        emptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int numberCards;\n+        private long cardSeen = 0;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            numberCards = deckPicker.getCol().cardCount();\n         }\n \n         @Override\n         public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n+            DialogInterface.OnCancelListener onCancel = (dialogInterface) -> {\n+                CollectionTask emptyCardTask = deckPicker.emptyCardTask;\n+                if (emptyCardTask != null) {\n+                    emptyCardTask.safeCancel();\n+                }};\n             deckPicker.mProgressDialog = StyledProgressDialog.show(deckPicker, \"\",\n-                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n+                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), true,\n+                    onCancel);\n         }\n \n         @Override\n-        public void actualOnPostExecute(@NonNull DeckPicker deckPicker, TaskData result) {\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            cardSeen += progress.getInt();\n+            // Ensure we update at most 100 times. Updating in real time freeze the screen\n+            deckPicker.mProgressDialog.setContent(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTU3OA=="}, "originalCommit": {"oid": "6b5fb7b1d87fdfc95a6c692fcf3a13ffd57cfd41"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQzODAwMw==", "bodyText": "@mikehardy is the current version of the code okay for you, or do you want to change something else ? It's not clear to me whether I did something you objected to, or whether you are okay with this.", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r496438003", "createdAt": "2020-09-29T06:06:34Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2722,24 +2725,50 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        emptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int numberCards;\n+        private long cardSeen = 0;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            numberCards = deckPicker.getCol().cardCount();\n         }\n \n         @Override\n         public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n+            DialogInterface.OnCancelListener onCancel = (dialogInterface) -> {\n+                CollectionTask emptyCardTask = deckPicker.emptyCardTask;\n+                if (emptyCardTask != null) {\n+                    emptyCardTask.safeCancel();\n+                }};\n             deckPicker.mProgressDialog = StyledProgressDialog.show(deckPicker, \"\",\n-                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n+                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), true,\n+                    onCancel);\n         }\n \n         @Override\n-        public void actualOnPostExecute(@NonNull DeckPicker deckPicker, TaskData result) {\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            cardSeen += progress.getInt();\n+            // Ensure we update at most 100 times. Updating in real time freeze the screen\n+            deckPicker.mProgressDialog.setContent(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTU3OA=="}, "originalCommit": {"oid": "6b5fb7b1d87fdfc95a6c692fcf3a13ffd57cfd41"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjcwMjYwNA==", "bodyText": "just hadn't had time to go review anything yesterday, I was in meetings most of the day. I liked the last screenshot you posted and just need to actually review now!", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r496702604", "createdAt": "2020-09-29T13:09:38Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2722,24 +2725,50 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        emptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int numberCards;\n+        private long cardSeen = 0;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            numberCards = deckPicker.getCol().cardCount();\n         }\n \n         @Override\n         public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n+            DialogInterface.OnCancelListener onCancel = (dialogInterface) -> {\n+                CollectionTask emptyCardTask = deckPicker.emptyCardTask;\n+                if (emptyCardTask != null) {\n+                    emptyCardTask.safeCancel();\n+                }};\n             deckPicker.mProgressDialog = StyledProgressDialog.show(deckPicker, \"\",\n-                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n+                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), true,\n+                    onCancel);\n         }\n \n         @Override\n-        public void actualOnPostExecute(@NonNull DeckPicker deckPicker, TaskData result) {\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            cardSeen += progress.getInt();\n+            // Ensure we update at most 100 times. Updating in real time freeze the screen\n+            deckPicker.mProgressDialog.setContent(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTU3OA=="}, "originalCommit": {"oid": "6b5fb7b1d87fdfc95a6c692fcf3a13ffd57cfd41"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjE2Mjg1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNTowMDoxOFrOHYn5sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNToyMTo0M1rOHYoBcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTYxOQ==", "bodyText": "Might want to move this code (safeCancel) into a utils class.", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495581619", "createdAt": "2020-09-27T15:00:18Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2722,24 +2725,50 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        emptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int numberCards;\n+        private long cardSeen = 0;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            numberCards = deckPicker.getCol().cardCount();\n         }\n \n         @Override\n         public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n+            DialogInterface.OnCancelListener onCancel = (dialogInterface) -> {\n+                CollectionTask emptyCardTask = deckPicker.emptyCardTask;\n+                if (emptyCardTask != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b5fb7b1d87fdfc95a6c692fcf3a13ffd57cfd41"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MzYwMA==", "bodyText": "I don't see how to generalize it. If I was sure that I had access to the collection task inside of the task listener, it would be easy to do. But I may imagine that onPreExecute gets executed while mEmptyCardTask is still null. This is not a problem with this code, because we access mEmptyCardTask only when the task is cancelled. This would be a problem if I tried to access it is onPreExecute to send it to the util class", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495583600", "createdAt": "2020-09-27T15:21:43Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2722,24 +2725,50 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        emptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int numberCards;\n+        private long cardSeen = 0;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            numberCards = deckPicker.getCol().cardCount();\n         }\n \n         @Override\n         public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n+            DialogInterface.OnCancelListener onCancel = (dialogInterface) -> {\n+                CollectionTask emptyCardTask = deckPicker.emptyCardTask;\n+                if (emptyCardTask != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTYxOQ=="}, "originalCommit": {"oid": "6b5fb7b1d87fdfc95a6c692fcf3a13ffd57cfd41"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjE2MzU4OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNTowMToxNFrOHYn6CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNToxNjoxNVrOHYn_aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTcwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    private final int numberCards;\n          \n          \n            \n                    private final int mNumberOfCards;", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495581705", "createdAt": "2020-09-27T15:01:14Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2722,24 +2725,50 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        emptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int numberCards;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b5fb7b1d87fdfc95a6c692fcf3a13ffd57cfd41"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MzA4MQ==", "bodyText": "Done", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495583081", "createdAt": "2020-09-27T15:16:15Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2722,24 +2725,50 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        emptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int numberCards;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTcwNQ=="}, "originalCommit": {"oid": "6b5fb7b1d87fdfc95a6c692fcf3a13ffd57cfd41"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjE2NDU1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNTowMjo0OFrOHYn6hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNToxMzo1N1rOHYn-bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTgzMA==", "bodyText": "We never reset this to null after execution - do we want to?", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495581830", "createdAt": "2020-09-27T15:02:48Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -214,6 +215,8 @@\n \n     private String mExportFileName;\n \n+    private CollectionTask emptyCardTask = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b5fb7b1d87fdfc95a6c692fcf3a13ffd57cfd41"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MjgzMQ==", "bodyText": "Corrected", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495582831", "createdAt": "2020-09-27T15:13:57Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -214,6 +215,8 @@\n \n     private String mExportFileName;\n \n+    private CollectionTask emptyCardTask = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTgzMA=="}, "originalCommit": {"oid": "6b5fb7b1d87fdfc95a6c692fcf3a13ffd57cfd41"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjIxMTg2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNjowNDo0M1rOHYoQ_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNjowNjo0NFrOHYoRuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4NzU4Mw==", "bodyText": "I am also usually trying to do the minimum UI too, I will admit, this one in particular I was thinking percent only with no other info, like so:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                              deckPicker.getResources().getString(R.string.empty_cards_finding_percent, percent) + cardSeen + \" / \" + mNumberOfCards);\n          \n          \n            \n                                                              deckPicker.getResources().getString(R.string.empty_cards_finding_percent, percent));\n          \n      \n    \n    \n  \n\nThat's how we avoid all the RTL language business - we can't do string concatenation in general because you never know where the language puts numbers naturally when doing translations. This way we have a percent and that's it", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495587583", "createdAt": "2020-09-27T16:04:43Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2722,24 +2725,66 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        mEmptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int mNumberOfCards;\n+        private long cardSeen = 0;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            mNumberOfCards = deckPicker.getCol().cardCount();\n+        }\n+\n+        private void confirmCancel(DeckPicker deckPicker, CollectionTask task) {\n+            new MaterialDialog.Builder(deckPicker)\n+                    .content(deckPicker.getResources().getString(R.string.confirm_cancel))\n+                    .positiveText(deckPicker.getResources().getString(R.string.yes))\n+                    .negativeText(deckPicker.getResources().getString(R.string.no))\n+                    .onNegative((x, y) -> actualOnPreExecute(deckPicker))\n+                    .onPositive((x, y) -> task.safeCancel()).show()\n+                    ;\n         }\n \n         @Override\n         public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n+            DialogInterface.OnCancelListener onCancel = (dialogInterface) -> {\n+                CollectionTask mEmptyCardTask = deckPicker.mEmptyCardTask;\n+                if (mEmptyCardTask != null) {\n+                    confirmCancel(deckPicker, mEmptyCardTask);\n+                }};\n             deckPicker.mProgressDialog = StyledProgressDialog.show(deckPicker, \"\",\n-                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n+                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), true,\n+                    onCancel);\n+            deckPicker.mProgressDialog.setCanceledOnTouchOutside(false);\n         }\n \n         @Override\n-        public void actualOnPostExecute(@NonNull DeckPicker deckPicker, TaskData result) {\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            cardSeen += progress.getInt();\n+            int percent = Math.min(((int) (cardSeen * 100) / mNumberOfCards), 100);\n+            deckPicker.mProgressDialog.setContent(\n+                                                  deckPicker.getResources().getString(R.string.empty_cards_finding_percent, percent) + cardSeen + \" / \" + mNumberOfCards);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "854dba507e3534e87d2f67b6334697e727b2838c"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4Nzc2OA==", "bodyText": "Done. That was only an accident the remaining remained. It was already removed while you wrote this", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495587768", "createdAt": "2020-09-27T16:06:44Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2722,24 +2725,66 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        mEmptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int mNumberOfCards;\n+        private long cardSeen = 0;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            mNumberOfCards = deckPicker.getCol().cardCount();\n+        }\n+\n+        private void confirmCancel(DeckPicker deckPicker, CollectionTask task) {\n+            new MaterialDialog.Builder(deckPicker)\n+                    .content(deckPicker.getResources().getString(R.string.confirm_cancel))\n+                    .positiveText(deckPicker.getResources().getString(R.string.yes))\n+                    .negativeText(deckPicker.getResources().getString(R.string.no))\n+                    .onNegative((x, y) -> actualOnPreExecute(deckPicker))\n+                    .onPositive((x, y) -> task.safeCancel()).show()\n+                    ;\n         }\n \n         @Override\n         public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n+            DialogInterface.OnCancelListener onCancel = (dialogInterface) -> {\n+                CollectionTask mEmptyCardTask = deckPicker.mEmptyCardTask;\n+                if (mEmptyCardTask != null) {\n+                    confirmCancel(deckPicker, mEmptyCardTask);\n+                }};\n             deckPicker.mProgressDialog = StyledProgressDialog.show(deckPicker, \"\",\n-                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n+                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), true,\n+                    onCancel);\n+            deckPicker.mProgressDialog.setCanceledOnTouchOutside(false);\n         }\n \n         @Override\n-        public void actualOnPostExecute(@NonNull DeckPicker deckPicker, TaskData result) {\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            cardSeen += progress.getInt();\n+            int percent = Math.min(((int) (cardSeen * 100) / mNumberOfCards), 100);\n+            deckPicker.mProgressDialog.setContent(\n+                                                  deckPicker.getResources().getString(R.string.empty_cards_finding_percent, percent) + cardSeen + \" / \" + mNumberOfCards);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4NzU4Mw=="}, "originalCommit": {"oid": "854dba507e3534e87d2f67b6334697e727b2838c"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjI4MTMzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/res/values/03-dialogs.xml", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNzozMjo1M1rOHYoxuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTozOTo0OVrOHdrDkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU5NTk2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <string name=\"confirm_cancel\">Do you want to cancel ?</string>\n          \n          \n            \n                <string name=\"confirm_cancel\">Do you want to cancel?</string>", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495595963", "createdAt": "2020-09-27T17:32:53Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/res/values/03-dialogs.xml", "diffHunk": "@@ -145,10 +145,12 @@\n \n     <!-- Empty cards -->\n     <string name=\"emtpy_cards_finding\">Finding empty cards\u2026</string>\n+    <string name=\"confirm_cancel\">Do you want to cancel ?</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "926ccc3f2010d5e9f186cf6b4bfc3a9460aa52b2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3MzEwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <string name=\"confirm_cancel\">Do you want to cancel ?</string>\n          \n          \n            \n                <string name=\"confirm_cancel\">Do you want to cancel?</string>", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r500673100", "createdAt": "2020-10-07T00:41:32Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/res/values/03-dialogs.xml", "diffHunk": "@@ -145,10 +145,12 @@\n \n     <!-- Empty cards -->\n     <string name=\"emtpy_cards_finding\">Finding empty cards\u2026</string>\n+    <string name=\"confirm_cancel\">Do you want to cancel ?</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU5NTk2Mw=="}, "originalCommit": {"oid": "926ccc3f2010d5e9f186cf6b4bfc3a9460aa52b2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3MzE1OQ==", "bodyText": "@mikehardy - yes/no is advised against in material guidelines, but I can't think of any better wording.\n\nDon\u2019t use action text that fails to indicate what the selection will do. \u201cCancel\u201d and \u201cDelete\u201d better indicate what will occur in this dialog.\n\nhttps://material.io/components/dialogs#alert-dialog\nCancel/Resume maybe?", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r500673159", "createdAt": "2020-10-07T00:41:43Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/res/values/03-dialogs.xml", "diffHunk": "@@ -145,10 +145,12 @@\n \n     <!-- Empty cards -->\n     <string name=\"emtpy_cards_finding\">Finding empty cards\u2026</string>\n+    <string name=\"confirm_cancel\">Do you want to cancel ?</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU5NTk2Mw=="}, "originalCommit": {"oid": "926ccc3f2010d5e9f186cf6b4bfc3a9460aa52b2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3NjE3OA==", "bodyText": "It would not be immediately clear whether \"cancel\" mean \"cancel the cancelling action\" or \"I confirm I want to cancel\", this is why I avoided it", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r500876178", "createdAt": "2020-10-07T09:39:49Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/res/values/03-dialogs.xml", "diffHunk": "@@ -145,10 +145,12 @@\n \n     <!-- Empty cards -->\n     <string name=\"emtpy_cards_finding\">Finding empty cards\u2026</string>\n+    <string name=\"confirm_cancel\">Do you want to cancel ?</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU5NTk2Mw=="}, "originalCommit": {"oid": "926ccc3f2010d5e9f186cf6b4bfc3a9460aa52b2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjI4NDE5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNzozNjo0MlrOHYozDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxOTowMTowM1rOHZ8maw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU5NjMwMw==", "bodyText": "As far as I know, this is an accessor for cancelable", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495596303", "createdAt": "2020-09-27T17:36:42Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2722,24 +2726,66 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        mEmptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int mNumberOfCards;\n+        private long cardSeen = 0;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            mNumberOfCards = deckPicker.getCol().cardCount();\n+        }\n+\n+        private void confirmCancel(DeckPicker deckPicker, CollectionTask task) {\n+            new MaterialDialog.Builder(deckPicker)\n+                    .content(deckPicker.getResources().getString(R.string.confirm_cancel))\n+                    .positiveText(deckPicker.getResources().getString(R.string.yes))\n+                    .negativeText(deckPicker.getResources().getString(R.string.no))\n+                    .onNegative((x, y) -> actualOnPreExecute(deckPicker))\n+                    .onPositive((x, y) -> task.safeCancel()).show()\n+                    ;\n         }\n \n         @Override\n         public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n-            deckPicker.mProgressDialog = StyledProgressDialog.show(deckPicker, \"\",\n-                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n+            DialogInterface.OnCancelListener onCancel = (dialogInterface) -> {\n+                CollectionTask mEmptyCardTask = deckPicker.mEmptyCardTask;\n+                if (mEmptyCardTask != null) {\n+                    confirmCancel(deckPicker, mEmptyCardTask);\n+                }};\n+            deckPicker.mProgressDialog = new MaterialDialog.Builder(deckPicker)\n+                    .progress(false, mNumberOfCards)\n+                    .title(R.string.emtpy_cards_finding)\n+                    .cancelable(true)\n+                    .show();\n+            deckPicker.mProgressDialog.setOnCancelListener(onCancel);\n+            deckPicker.mProgressDialog.setCanceledOnTouchOutside(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "926ccc3f2010d5e9f186cf6b4bfc3a9460aa52b2"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk1NTQ0OA==", "bodyText": "I am sorry, but I have no idea what this comment means.", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r496955448", "createdAt": "2020-09-29T18:36:30Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2722,24 +2726,66 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        mEmptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int mNumberOfCards;\n+        private long cardSeen = 0;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            mNumberOfCards = deckPicker.getCol().cardCount();\n+        }\n+\n+        private void confirmCancel(DeckPicker deckPicker, CollectionTask task) {\n+            new MaterialDialog.Builder(deckPicker)\n+                    .content(deckPicker.getResources().getString(R.string.confirm_cancel))\n+                    .positiveText(deckPicker.getResources().getString(R.string.yes))\n+                    .negativeText(deckPicker.getResources().getString(R.string.no))\n+                    .onNegative((x, y) -> actualOnPreExecute(deckPicker))\n+                    .onPositive((x, y) -> task.safeCancel()).show()\n+                    ;\n         }\n \n         @Override\n         public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n-            deckPicker.mProgressDialog = StyledProgressDialog.show(deckPicker, \"\",\n-                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n+            DialogInterface.OnCancelListener onCancel = (dialogInterface) -> {\n+                CollectionTask mEmptyCardTask = deckPicker.mEmptyCardTask;\n+                if (mEmptyCardTask != null) {\n+                    confirmCancel(deckPicker, mEmptyCardTask);\n+                }};\n+            deckPicker.mProgressDialog = new MaterialDialog.Builder(deckPicker)\n+                    .progress(false, mNumberOfCards)\n+                    .title(R.string.emtpy_cards_finding)\n+                    .cancelable(true)\n+                    .show();\n+            deckPicker.mProgressDialog.setOnCancelListener(onCancel);\n+            deckPicker.mProgressDialog.setCanceledOnTouchOutside(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU5NjMwMw=="}, "originalCommit": {"oid": "926ccc3f2010d5e9f186cf6b4bfc3a9460aa52b2"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk2NTI3NQ==", "bodyText": "From a quick skim of the code, this seems identical to cancelable(false), I'm possibly mistaken though.", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r496965275", "createdAt": "2020-09-29T18:53:54Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2722,24 +2726,66 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        mEmptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int mNumberOfCards;\n+        private long cardSeen = 0;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            mNumberOfCards = deckPicker.getCol().cardCount();\n+        }\n+\n+        private void confirmCancel(DeckPicker deckPicker, CollectionTask task) {\n+            new MaterialDialog.Builder(deckPicker)\n+                    .content(deckPicker.getResources().getString(R.string.confirm_cancel))\n+                    .positiveText(deckPicker.getResources().getString(R.string.yes))\n+                    .negativeText(deckPicker.getResources().getString(R.string.no))\n+                    .onNegative((x, y) -> actualOnPreExecute(deckPicker))\n+                    .onPositive((x, y) -> task.safeCancel()).show()\n+                    ;\n         }\n \n         @Override\n         public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n-            deckPicker.mProgressDialog = StyledProgressDialog.show(deckPicker, \"\",\n-                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n+            DialogInterface.OnCancelListener onCancel = (dialogInterface) -> {\n+                CollectionTask mEmptyCardTask = deckPicker.mEmptyCardTask;\n+                if (mEmptyCardTask != null) {\n+                    confirmCancel(deckPicker, mEmptyCardTask);\n+                }};\n+            deckPicker.mProgressDialog = new MaterialDialog.Builder(deckPicker)\n+                    .progress(false, mNumberOfCards)\n+                    .title(R.string.emtpy_cards_finding)\n+                    .cancelable(true)\n+                    .show();\n+            deckPicker.mProgressDialog.setOnCancelListener(onCancel);\n+            deckPicker.mProgressDialog.setCanceledOnTouchOutside(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU5NjMwMw=="}, "originalCommit": {"oid": "926ccc3f2010d5e9f186cf6b4bfc3a9460aa52b2"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk2OTMyMw==", "bodyText": "Are you referring to the lines setCanceledOnTouchOutside ?\nBecause if so, I believe you're wrong.\nsetCanceledOnTouchOutside ask whether touching anything that is not the dialog trigger cancelling.\ncancelable(bool) ask whether the dialog is cancelable.\nSo cancelable(true) followed by setCanceledOnTouchOutside(false) means that you can cancel, but that it is cancelling only by pressing a \"back\" button and not by pressing any part of your screen by accident", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r496969323", "createdAt": "2020-09-29T19:01:03Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2722,24 +2726,66 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        mEmptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int mNumberOfCards;\n+        private long cardSeen = 0;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            mNumberOfCards = deckPicker.getCol().cardCount();\n+        }\n+\n+        private void confirmCancel(DeckPicker deckPicker, CollectionTask task) {\n+            new MaterialDialog.Builder(deckPicker)\n+                    .content(deckPicker.getResources().getString(R.string.confirm_cancel))\n+                    .positiveText(deckPicker.getResources().getString(R.string.yes))\n+                    .negativeText(deckPicker.getResources().getString(R.string.no))\n+                    .onNegative((x, y) -> actualOnPreExecute(deckPicker))\n+                    .onPositive((x, y) -> task.safeCancel()).show()\n+                    ;\n         }\n \n         @Override\n         public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n-            deckPicker.mProgressDialog = StyledProgressDialog.show(deckPicker, \"\",\n-                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n+            DialogInterface.OnCancelListener onCancel = (dialogInterface) -> {\n+                CollectionTask mEmptyCardTask = deckPicker.mEmptyCardTask;\n+                if (mEmptyCardTask != null) {\n+                    confirmCancel(deckPicker, mEmptyCardTask);\n+                }};\n+            deckPicker.mProgressDialog = new MaterialDialog.Builder(deckPicker)\n+                    .progress(false, mNumberOfCards)\n+                    .title(R.string.emtpy_cards_finding)\n+                    .cancelable(true)\n+                    .show();\n+            deckPicker.mProgressDialog.setOnCancelListener(onCancel);\n+            deckPicker.mProgressDialog.setCanceledOnTouchOutside(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU5NjMwMw=="}, "originalCommit": {"oid": "926ccc3f2010d5e9f186cf6b4bfc3a9460aa52b2"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjI4NDY0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNzozNzoyMlrOHYozSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxODozNzozNFrOHZ7ydA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU5NjM2MA==", "bodyText": "An explicit click on cancel no longer necessitates a dialog", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r495596360", "createdAt": "2020-09-27T17:37:22Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2722,24 +2726,66 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        mEmptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int mNumberOfCards;\n+        private long cardSeen = 0;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            mNumberOfCards = deckPicker.getCol().cardCount();\n+        }\n+\n+        private void confirmCancel(DeckPicker deckPicker, CollectionTask task) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "926ccc3f2010d5e9f186cf6b4bfc3a9460aa52b2"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk1NjAyMA==", "bodyText": "There is no \"cancel\" button. Cancel occurs with pressing the return button of the phone.\nI believe that asking for confirmation is better, does not take a lot of time and ensure that time is not lost if you pressed by accident", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r496956020", "createdAt": "2020-09-29T18:37:34Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2722,24 +2726,66 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        mEmptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int mNumberOfCards;\n+        private long cardSeen = 0;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            mNumberOfCards = deckPicker.getCol().cardCount();\n+        }\n+\n+        private void confirmCancel(DeckPicker deckPicker, CollectionTask task) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU5NjM2MA=="}, "originalCommit": {"oid": "926ccc3f2010d5e9f186cf6b4bfc3a9460aa52b2"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMTAzNDMyOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxODoyODowM1rOHZ7eRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxMzoxNzo1OVrOHcHjCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk1MDg1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    private long cardSeen = 0;\n          \n          \n            \n                    private long mCardsSeen = 0;", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r496950855", "createdAt": "2020-09-29T18:28:03Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2742,24 +2746,66 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        mEmptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int mNumberOfCards;\n+        private long cardSeen = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a123aba592623f6c89b951bf5b8f745a13698006"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0NTgzNQ==", "bodyText": "Removed", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r499245835", "createdAt": "2020-10-04T13:17:59Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2742,24 +2746,66 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        mEmptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int mNumberOfCards;\n+        private long cardSeen = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk1MDg1NQ=="}, "originalCommit": {"oid": "a123aba592623f6c89b951bf5b8f745a13698006"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMTAzNzY2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxODoyOTowMlrOHZ7gUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxODozOTozMlrOHZ72jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk1MTM3Ng==", "bodyText": "Does this need a\nif (deckPicker.mProgressDialog != null && deckPicker.mProgressDialog.isShowing()) {\n deckPicker.mProgressDialog.dismiss();\n      }", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r496951376", "createdAt": "2020-09-29T18:29:02Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2742,24 +2746,66 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        mEmptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int mNumberOfCards;\n+        private long cardSeen = 0;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            mNumberOfCards = deckPicker.getCol().cardCount();\n+        }\n+\n+        private void confirmCancel(@NonNull DeckPicker deckPicker, @NonNull CollectionTask task) {\n+            new MaterialDialog.Builder(deckPicker)\n+                    .content(deckPicker.getResources().getString(R.string.confirm_cancel))\n+                    .positiveText(deckPicker.getResources().getString(R.string.yes))\n+                    .negativeText(deckPicker.getResources().getString(R.string.no))\n+                    .onNegative((x, y) -> actualOnPreExecute(deckPicker))\n+                    .onPositive((x, y) -> task.safeCancel()).show()\n+                    ;\n         }\n \n         @Override\n         public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n-            deckPicker.mProgressDialog = StyledProgressDialog.show(deckPicker, \"\",\n-                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n+            DialogInterface.OnCancelListener onCancel = (dialogInterface) -> {\n+                CollectionTask mEmptyCardTask = deckPicker.mEmptyCardTask;\n+                if (mEmptyCardTask != null) {\n+                    confirmCancel(deckPicker, mEmptyCardTask);\n+                }};\n+            deckPicker.mProgressDialog = new MaterialDialog.Builder(deckPicker)\n+                    .progress(false, mNumberOfCards)\n+                    .title(R.string.emtpy_cards_finding)\n+                    .cancelable(true)\n+                    .show();\n+            deckPicker.mProgressDialog.setOnCancelListener(onCancel);\n+            deckPicker.mProgressDialog.setCanceledOnTouchOutside(false);\n         }\n \n         @Override\n-        public void actualOnPostExecute(@NonNull DeckPicker deckPicker, TaskData result) {\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            deckPicker.mProgressDialog.incrementProgress(progress.getInt());\n+        }\n+\n+        @Override\n+        public void actualOnCancelled(@NonNull DeckPicker deckPicker) {\n+            deckPicker.mEmptyCardTask = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a123aba592623f6c89b951bf5b8f745a13698006"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk1NzA2OA==", "bodyText": "It seems that pressing the back button of the phone dismiss the dialog directly. I don't know whether it is the case on all device or whether it depends on device, version, api... if you tell me it depends, then I'll add it. But on my phone at least, it's useless", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r496957068", "createdAt": "2020-09-29T18:39:32Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2742,24 +2746,66 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        mEmptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int mNumberOfCards;\n+        private long cardSeen = 0;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            mNumberOfCards = deckPicker.getCol().cardCount();\n+        }\n+\n+        private void confirmCancel(@NonNull DeckPicker deckPicker, @NonNull CollectionTask task) {\n+            new MaterialDialog.Builder(deckPicker)\n+                    .content(deckPicker.getResources().getString(R.string.confirm_cancel))\n+                    .positiveText(deckPicker.getResources().getString(R.string.yes))\n+                    .negativeText(deckPicker.getResources().getString(R.string.no))\n+                    .onNegative((x, y) -> actualOnPreExecute(deckPicker))\n+                    .onPositive((x, y) -> task.safeCancel()).show()\n+                    ;\n         }\n \n         @Override\n         public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n-            deckPicker.mProgressDialog = StyledProgressDialog.show(deckPicker, \"\",\n-                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n+            DialogInterface.OnCancelListener onCancel = (dialogInterface) -> {\n+                CollectionTask mEmptyCardTask = deckPicker.mEmptyCardTask;\n+                if (mEmptyCardTask != null) {\n+                    confirmCancel(deckPicker, mEmptyCardTask);\n+                }};\n+            deckPicker.mProgressDialog = new MaterialDialog.Builder(deckPicker)\n+                    .progress(false, mNumberOfCards)\n+                    .title(R.string.emtpy_cards_finding)\n+                    .cancelable(true)\n+                    .show();\n+            deckPicker.mProgressDialog.setOnCancelListener(onCancel);\n+            deckPicker.mProgressDialog.setCanceledOnTouchOutside(false);\n         }\n \n         @Override\n-        public void actualOnPostExecute(@NonNull DeckPicker deckPicker, TaskData result) {\n+        public void actualOnProgressUpdate(@NonNull DeckPicker deckPicker, @NonNull TaskData progress) {\n+            deckPicker.mProgressDialog.incrementProgress(progress.getInt());\n+        }\n+\n+        @Override\n+        public void actualOnCancelled(@NonNull DeckPicker deckPicker) {\n+            deckPicker.mEmptyCardTask = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk1MTM3Ng=="}, "originalCommit": {"oid": "a123aba592623f6c89b951bf5b8f745a13698006"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDkxMjI3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwMDozNDo1OFrOHdejsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTo0MDo1MVrOHdrGSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3MTQxMA==", "bodyText": "Nullable", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r500671410", "createdAt": "2020-10-07T00:34:58Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -215,6 +217,8 @@\n \n     private String mExportFileName;\n \n+    private CollectionTask mEmptyCardTask = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3600eb6c369e0ee1732fe76b841ecff33f357029"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3Njg3NA==", "bodyText": "Done", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r500876874", "createdAt": "2020-10-07T09:40:51Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -215,6 +217,8 @@\n \n     private String mExportFileName;\n \n+    private CollectionTask mEmptyCardTask = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3MTQxMA=="}, "originalCommit": {"oid": "3600eb6c369e0ee1732fe76b841ecff33f357029"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDkxMzM5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwMDozNTozM1rOHdekVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTo0MTo0OVrOHdrImw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3MTU3Mg==", "bodyText": "You should be able to pass the IDs into this method directly", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r500671572", "createdAt": "2020-10-07T00:35:33Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2757,24 +2761,65 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        mEmptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int mNumberOfCards;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            mNumberOfCards = deckPicker.getCol().cardCount();\n+        }\n+\n+        private void confirmCancel(@NonNull DeckPicker deckPicker, @NonNull CollectionTask task) {\n+            new MaterialDialog.Builder(deckPicker)\n+                    .content(deckPicker.getResources().getString(R.string.confirm_cancel))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3600eb6c369e0ee1732fe76b841ecff33f357029"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3NzQ2Nw==", "bodyText": "Done", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r500877467", "createdAt": "2020-10-07T09:41:49Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2757,24 +2761,65 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        mEmptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int mNumberOfCards;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            mNumberOfCards = deckPicker.getCol().cardCount();\n+        }\n+\n+        private void confirmCancel(@NonNull DeckPicker deckPicker, @NonNull CollectionTask task) {\n+            new MaterialDialog.Builder(deckPicker)\n+                    .content(deckPicker.getResources().getString(R.string.confirm_cancel))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3MTU3Mg=="}, "originalCommit": {"oid": "3600eb6c369e0ee1732fe76b841ecff33f357029"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDkxNDM2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwMDozNjoxNFrOHdek8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTo0Mjo1NlrOHdrLMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3MTczMQ==", "bodyText": "(nit: add a blank line after  }}; for readability)", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r500671731", "createdAt": "2020-10-07T00:36:14Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2757,24 +2761,65 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        mEmptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int mNumberOfCards;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            mNumberOfCards = deckPicker.getCol().cardCount();\n+        }\n+\n+        private void confirmCancel(@NonNull DeckPicker deckPicker, @NonNull CollectionTask task) {\n+            new MaterialDialog.Builder(deckPicker)\n+                    .content(deckPicker.getResources().getString(R.string.confirm_cancel))\n+                    .positiveText(deckPicker.getResources().getString(R.string.yes))\n+                    .negativeText(deckPicker.getResources().getString(R.string.no))\n+                    .onNegative((x, y) -> actualOnPreExecute(deckPicker))\n+                    .onPositive((x, y) -> task.safeCancel()).show()\n+                    ;\n         }\n \n         @Override\n         public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n-            deckPicker.mProgressDialog = StyledProgressDialog.show(deckPicker, \"\",\n-                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n+            DialogInterface.OnCancelListener onCancel = (dialogInterface) -> {\n+                CollectionTask mEmptyCardTask = deckPicker.mEmptyCardTask;\n+                if (mEmptyCardTask != null) {\n+                    confirmCancel(deckPicker, mEmptyCardTask);\n+                }};\n+            deckPicker.mProgressDialog = new MaterialDialog.Builder(deckPicker)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3600eb6c369e0ee1732fe76b841ecff33f357029"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3ODEyOA==", "bodyText": "Done", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r500878128", "createdAt": "2020-10-07T09:42:56Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2757,24 +2761,65 @@ public void onExtendStudyLimits() {\n     }\n \n     public void handleEmptyCards() {\n-        CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n+        mEmptyCardTask = CollectionTask.launchCollectionTask(FIND_EMPTY_CARDS, handlerEmptyCardListener());\n     }\n     private HandleEmptyCardListener handlerEmptyCardListener() {\n         return new HandleEmptyCardListener(this);\n     }\n     private static class HandleEmptyCardListener extends TaskListenerWithContext<DeckPicker> {\n+        private final int mNumberOfCards;\n+\n         public HandleEmptyCardListener(DeckPicker deckPicker) {\n             super(deckPicker);\n+            mNumberOfCards = deckPicker.getCol().cardCount();\n+        }\n+\n+        private void confirmCancel(@NonNull DeckPicker deckPicker, @NonNull CollectionTask task) {\n+            new MaterialDialog.Builder(deckPicker)\n+                    .content(deckPicker.getResources().getString(R.string.confirm_cancel))\n+                    .positiveText(deckPicker.getResources().getString(R.string.yes))\n+                    .negativeText(deckPicker.getResources().getString(R.string.no))\n+                    .onNegative((x, y) -> actualOnPreExecute(deckPicker))\n+                    .onPositive((x, y) -> task.safeCancel()).show()\n+                    ;\n         }\n \n         @Override\n         public void actualOnPreExecute(@NonNull DeckPicker deckPicker) {\n-            deckPicker.mProgressDialog = StyledProgressDialog.show(deckPicker, \"\",\n-                    deckPicker.getResources().getString(R.string.emtpy_cards_finding), false);\n+            DialogInterface.OnCancelListener onCancel = (dialogInterface) -> {\n+                CollectionTask mEmptyCardTask = deckPicker.mEmptyCardTask;\n+                if (mEmptyCardTask != null) {\n+                    confirmCancel(deckPicker, mEmptyCardTask);\n+                }};\n+            deckPicker.mProgressDialog = new MaterialDialog.Builder(deckPicker)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3MTczMQ=="}, "originalCommit": {"oid": "3600eb6c369e0ee1732fe76b841ecff33f357029"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDkxNjg3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwMDozNzo1MFrOHdemfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMDowOToxOFrOHdsJ1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3MjEyNw==", "bodyText": "Please abstract out CollectionTask into a progress/cancellable listener as mentioned in the previous reviews. We shouldn't have a circular dependency from CollectionTask to Collection", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r500672127", "createdAt": "2020-10-07T00:37:50Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -720,16 +720,37 @@ public void _remNotes(java.util.Collection<Long> ids) {\n \tpublic ArrayList<Long> genCards(List<Long> nids) {\n \t    return genCards(Utils.collection2Array(nids));\n \t}\n+\n+    public ArrayList<Long> genCards(List<Long> nids, @Nullable CollectionTask task) {\n+       return genCards(Utils.collection2Array(nids), task);\n+    }\n+\n     public ArrayList<Long> genCards(long[] nids) {\n+       return genCards(nids, null);\n+    }\n+\n+    /**\n+     * @param nids All ids of nodes of a note type\n+     * @param task Task to check for cancellation and update number of card processed\n+     * @return Cards that should be removed because they should not be generated\n+     */\n+    public ArrayList<Long> genCards(long[] nids, @Nullable CollectionTask task) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3600eb6c369e0ee1732fe76b841ecff33f357029"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5NDE2NQ==", "bodyText": "I changed the uses of CancelTask in Scheduler at the same time", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r500894165", "createdAt": "2020-10-07T10:09:18Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -720,16 +720,37 @@ public void _remNotes(java.util.Collection<Long> ids) {\n \tpublic ArrayList<Long> genCards(List<Long> nids) {\n \t    return genCards(Utils.collection2Array(nids));\n \t}\n+\n+    public ArrayList<Long> genCards(List<Long> nids, @Nullable CollectionTask task) {\n+       return genCards(Utils.collection2Array(nids), task);\n+    }\n+\n     public ArrayList<Long> genCards(long[] nids) {\n+       return genCards(nids, null);\n+    }\n+\n+    /**\n+     * @param nids All ids of nodes of a note type\n+     * @param task Task to check for cancellation and update number of card processed\n+     * @return Cards that should be removed because they should not be generated\n+     */\n+    public ArrayList<Long> genCards(long[] nids, @Nullable CollectionTask task) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3MjEyNw=="}, "originalCommit": {"oid": "3600eb6c369e0ee1732fe76b841ecff33f357029"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjkwMTAzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/async/ProgressSender.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMjozNzo1NFrOHdxNIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDozMTo0OFrOHd2XRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk3NjkzMA==", "bodyText": "@FunctionalInterface", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r500976930", "createdAt": "2020-10-07T12:37:54Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/async/ProgressSender.java", "diffHunk": "@@ -0,0 +1,5 @@\n+package com.ichi2.async;\n+\n+public interface ProgressSender<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a4ef38cde61b09a01585eb86ff1b3477c61a2a0"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA2MTQ0NA==", "bodyText": "Done", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r501061444", "createdAt": "2020-10-07T14:31:48Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/async/ProgressSender.java", "diffHunk": "@@ -0,0 +1,5 @@\n+package com.ichi2.async;\n+\n+public interface ProgressSender<T> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk3NjkzMA=="}, "originalCommit": {"oid": "3a4ef38cde61b09a01585eb86ff1b3477c61a2a0"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjkwMjI4OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/async/CancelListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMjozODoxNFrOHdxN7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDozMTo0MlrOHd2W_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk3NzEzNA==", "bodyText": "@FunctionalInterface", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r500977134", "createdAt": "2020-10-07T12:38:14Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/async/CancelListener.java", "diffHunk": "@@ -0,0 +1,5 @@\n+package com.ichi2.async;\n+\n+public interface CancelListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a4ef38cde61b09a01585eb86ff1b3477c61a2a0"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA2MTM3Mg==", "bodyText": "Done", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r501061372", "createdAt": "2020-10-07T14:31:42Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/async/CancelListener.java", "diffHunk": "@@ -0,0 +1,5 @@\n+package com.ichi2.async;\n+\n+public interface CancelListener {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk3NzEzNA=="}, "originalCommit": {"oid": "3a4ef38cde61b09a01585eb86ff1b3477c61a2a0"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTk4MDE0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/async/CancelListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTo0ODo1NVrOHhZuFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODozNDoxNFrOHhgAsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc4NjQ1Mg==", "bodyText": "Needs a copyright header", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r504786452", "createdAt": "2020-10-14T15:48:55Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/async/CancelListener.java", "diffHunk": "@@ -0,0 +1,6 @@\n+package com.ichi2.async;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1916fc304bb293db3c8322d3a4d07f3ad043da7"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg4OTUyMA==", "bodyText": "Done", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r504889520", "createdAt": "2020-10-14T18:34:14Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/async/CancelListener.java", "diffHunk": "@@ -0,0 +1,6 @@\n+package com.ichi2.async;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc4NjQ1Mg=="}, "originalCommit": {"oid": "e1916fc304bb293db3c8322d3a4d07f3ad043da7"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTk4NTQ5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/async/ProgressSender.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTo1MDowNFrOHhZxgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODozNDoxOFrOHhgA2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc4NzMzMQ==", "bodyText": "copyright header here too", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r504787331", "createdAt": "2020-10-14T15:50:04Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/async/ProgressSender.java", "diffHunk": "@@ -0,0 +1,6 @@\n+package com.ichi2.async;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0d12096ae414f42613438d2d35b38755db278a7"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg4OTU2MA==", "bodyText": "Done", "url": "https://github.com/ankidroid/Anki-Android/pull/7290#discussion_r504889560", "createdAt": "2020-10-14T18:34:18Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/async/ProgressSender.java", "diffHunk": "@@ -0,0 +1,6 @@\n+package com.ichi2.async;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc4NzMzMQ=="}, "originalCommit": {"oid": "f0d12096ae414f42613438d2d35b38755db278a7"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 794, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}