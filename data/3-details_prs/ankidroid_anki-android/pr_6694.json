{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxOTYxMTky", "number": 6694, "title": "Fix Audio Whitespace Handling", "bodyText": "Purpose / Description\nIn Anki, whitespace before a filename matters, whereas whitespace after a file is ignored.\nThis is visible in the following decks:\nhttps://ankiweb.net/shared/info/1616679068\n\"GENKI I Grammar Deck with native speaker audio and images\"\nhttps://ankiweb.net/shared/info/1833515795\n\"GENKI II Grammar Deck with native speaker audio and images\"\nOne defines \"5.mp3\", and the other defines \" 5.mp3\".\nThis works in Anki Desktop.\nFixes\nFixes #6693\nApproach\nWe fix this by only performing a trim on the right hand side, and only if the string is not a URI\nHow Has This Been Tested?\nTested on my phone:\n\nWith the above decks\nAdded trailing whitespace, both passed.\n\nLearning\nSee #6693\nChecklist\n\n You have not changed whitespace unnecessarily (it makes diffs hard to read)\n You have a descriptive commit message with a short title (first line, max 50 chars).\n Your code follows the style of the project (e.g. never omit braces in if statements)\n You have commented your code, particularly in hard-to-understand areas\n You have performed a self-review of your own code", "createdAt": "2020-07-18T14:30:18Z", "url": "https://github.com/ankidroid/Anki-Android/pull/6694", "merged": true, "mergeCommit": {"oid": "51f7db2bf4a9755e83278b292393fd98d9718212"}, "closed": true, "closedAt": "2020-07-18T19:02:17Z", "author": {"login": "david-allison-1"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2KGmRgFqTQ1MTA2MzcyOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc2KupwAFqTQ1MTA2NjQzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMDYzNzI5", "url": "https://github.com/ankidroid/Anki-Android/pull/6694#pullrequestreview-451063729", "createdAt": "2020-07-18T15:24:14Z", "commit": {"oid": "e8b222a044d209500934a6b923be0b73b440d4f5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQxNToyNDoxNFrOGzo2_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQxNToyNDoxNFrOGzo2_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc5OTk5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    while (newLength > 0 && Character.isWhitespace(s.charAt(newLength - 1))) {\n          \n          \n            \n                    while (newLength >= 0 && Character.isWhitespace(s.charAt(newLength - 1))) {\n          \n      \n    \n    \n  \n\n'>=' ? Just thinking, an rTrim of a fully whitespace string should return the empty string, so it should be valid to go all the way to zero? It appears substring only throws if endIndex is less than beginIndex so equal index values should work and empty string should be valid\nhttps://docs.oracle.com/javase/7/docs/api/java/lang/String.html#substring(int,%20int)", "url": "https://github.com/ankidroid/Anki-Android/pull/6694#discussion_r456799996", "createdAt": "2020-07-18T15:24:14Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/utils/StringUtil.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+\n+ This program is free software; you can redistribute it and/or modify it under\n+ the terms of the GNU General Public License as published by the Free Software\n+ Foundation; either version 3 of the License, or (at your option) any later\n+ version.\n+\n+ This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License along with\n+ this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+ */\n+\n+package com.ichi2.utils;\n+\n+import org.jetbrains.annotations.Contract;\n+\n+import androidx.annotation.Nullable;\n+\n+public class StringUtil {\n+\n+    /** Trims from the right hand side of a string */\n+    @Nullable\n+    @Contract(\"null -> null; !null -> !null\")\n+    public static String trimRight(@Nullable String s) {\n+        if (s == null) {\n+            return null;\n+        }\n+\n+        int newLength = s.length();\n+        while (newLength > 0 && Character.isWhitespace(s.charAt(newLength - 1))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8b222a044d209500934a6b923be0b73b440d4f5"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMDYzODIx", "url": "https://github.com/ankidroid/Anki-Android/pull/6694#pullrequestreview-451063821", "createdAt": "2020-07-18T15:25:29Z", "commit": {"oid": "e8b222a044d209500934a6b923be0b73b440d4f5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c30e041b61d6f2ebdb4f842d542b3e14f53fa3a4", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/c30e041b61d6f2ebdb4f842d542b3e14f53fa3a4", "committedDate": "2020-07-18T16:05:44Z", "message": "Fix Audio Whitespace Handling\n\nIn Anki, whitespace before a filename matters, whereas whitespace after a file\nis ignored.\n\nThis is visible in the following decks:\n\nhttps://ankiweb.net/shared/info/1616679068\n\"GENKI I Grammar Deck with native speaker audio and images\"\n\nhttps://ankiweb.net/shared/info/1833515795\n\"GENKI II Grammar Deck with native speaker audio and images\"\n\nOne defines \"5.mp3\", and the other defines \" 5.mp3\".\n\nThis works in Anki Desktop.\n\nAnki Desktop behaviour relating to trailing spaces being ignored was confirmed.\n\nWe fix this by only performing a trim on the right hand side, and only if the\nstring is not a URI\n\nFixes 6693"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e8b222a044d209500934a6b923be0b73b440d4f5", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/e8b222a044d209500934a6b923be0b73b440d4f5", "committedDate": "2020-07-18T14:25:59Z", "message": "Fix Audio Whitespace Handling\n\nIn Anki, whitespace before a filename matters, whereas whitespace after a file\nis ignored.\n\nThis is visible in the following decks:\n\nhttps://ankiweb.net/shared/info/1616679068\n\"GENKI I Grammar Deck with native speaker audio and images\"\n\nhttps://ankiweb.net/shared/info/1833515795\n\"GENKI II Grammar Deck with native speaker audio and images\"\n\nOne defines \"5.mp3\", and the other defines \" 5.mp3\".\n\nThis works in Anki Desktop.\n\nAnki Desktop behaviour relating to trailing spaces being ignored was confirmed.\n\nWe fix this by only performing a trim on the right hand side, and only if the\nstring is not a URI\n\nFixes 6693"}, "afterCommit": {"oid": "c30e041b61d6f2ebdb4f842d542b3e14f53fa3a4", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/c30e041b61d6f2ebdb4f842d542b3e14f53fa3a4", "committedDate": "2020-07-18T16:05:44Z", "message": "Fix Audio Whitespace Handling\n\nIn Anki, whitespace before a filename matters, whereas whitespace after a file\nis ignored.\n\nThis is visible in the following decks:\n\nhttps://ankiweb.net/shared/info/1616679068\n\"GENKI I Grammar Deck with native speaker audio and images\"\n\nhttps://ankiweb.net/shared/info/1833515795\n\"GENKI II Grammar Deck with native speaker audio and images\"\n\nOne defines \"5.mp3\", and the other defines \" 5.mp3\".\n\nThis works in Anki Desktop.\n\nAnki Desktop behaviour relating to trailing spaces being ignored was confirmed.\n\nWe fix this by only performing a trim on the right hand side, and only if the\nstring is not a URI\n\nFixes 6693"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMDY2Mzg5", "url": "https://github.com/ankidroid/Anki-Android/pull/6694#pullrequestreview-451066389", "createdAt": "2020-07-18T16:07:22Z", "commit": {"oid": "c30e041b61d6f2ebdb4f842d542b3e14f53fa3a4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMDY2NDMw", "url": "https://github.com/ankidroid/Anki-Android/pull/6694#pullrequestreview-451066430", "createdAt": "2020-07-18T16:08:00Z", "commit": {"oid": "c30e041b61d6f2ebdb4f842d542b3e14f53fa3a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQxNjowODowMFrOGzpFmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQxNjowODowMFrOGzpFmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgwMzczNg==", "bodyText": "This is a questionable test as it tests implementation - but I think it's reasonable to assert to ensure there's no performance regressions", "url": "https://github.com/ankidroid/Anki-Android/pull/6694#discussion_r456803736", "createdAt": "2020-07-18T16:08:00Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/test/java/com/ichi2/utils/StringUtilTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+\n+ This program is free software; you can redistribute it and/or modify it under\n+ the terms of the GNU General Public License as published by the Free Software\n+ Foundation; either version 3 of the License, or (at your option) any later\n+ version.\n+\n+ This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License along with\n+ this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.utils;\n+\n+import org.junit.Test;\n+\n+import static com.ichi2.utils.StringUtil.trimRight;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.nullValue;\n+import static org.hamcrest.Matchers.sameInstance;\n+\n+public class StringUtilTest {\n+\n+    @Test\n+    public void trimRightNullIsSetToNull() {\n+        assertThat(trimRight(null), is(nullValue()));\n+    }\n+\n+    @Test\n+    public void trimRightWhiteSpaceIsBlankString() {\n+        assertThat(trimRight(\" \"), is(\"\"));\n+    }\n+\n+    @Test\n+    public void trimRightOnlyTrimsRight() {\n+        assertThat(trimRight(\" a \"), is(\" a\"));\n+    }\n+\n+    @Test\n+    public void trimRightDoesNothingOnTrimmedString() {\n+        String input = \" foo\";\n+        assertThat(trimRight(input), sameInstance(input));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c30e041b61d6f2ebdb4f842d542b3e14f53fa3a4"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3004, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}