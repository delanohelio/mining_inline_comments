{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NTAzNTk0", "number": 6521, "reviewThreads": {"totalCount": 38, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMzozNzo1NVrOEHZXYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzowNDowOVrOEWSf5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTkxMDc1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMzozNzo1NVrOGmu7ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNTowMTowM1rOGoC-0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2Nzk0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private HashMap<String, Boolean> jsApiListMap = new HashMap<String, Boolean>();\n          \n          \n            \n                private HashMap<String, Boolean> mJsApiListMap = new HashMap<String, Boolean>();", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r443267941", "createdAt": "2020-06-21T23:37:55Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -188,6 +191,13 @@\n \n     // ETA\n     private int eta;\n+    // JavaScript Versioning\n+    protected String mCardSuppliedApiVersion = \"\";\n+    protected String mCardSuppliedDeveloperContact  = \"\";\n+\n+    private static final String sCurrentJsApiVersion = \"1.0.0\";\n+    // JS api list enable/disable status\n+    private HashMap<String, Boolean> jsApiListMap = new HashMap<String, Boolean>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21733244312ba01f7c7eeb38c7ce0e343c601529"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2ODQ5Mg==", "bodyText": "Wouldn't a HashSet<String> be better here,", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r443268492", "createdAt": "2020-06-21T23:44:49Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -188,6 +191,13 @@\n \n     // ETA\n     private int eta;\n+    // JavaScript Versioning\n+    protected String mCardSuppliedApiVersion = \"\";\n+    protected String mCardSuppliedDeveloperContact  = \"\";\n+\n+    private static final String sCurrentJsApiVersion = \"1.0.0\";\n+    // JS api list enable/disable status\n+    private HashMap<String, Boolean> jsApiListMap = new HashMap<String, Boolean>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2Nzk0MQ=="}, "originalCommit": {"oid": "21733244312ba01f7c7eeb38c7ce0e343c601529"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0NTA3Mg==", "bodyText": "I don't know which one is better. But HashSet can also be implemented.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r444645072", "createdAt": "2020-06-24T05:01:03Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -188,6 +191,13 @@\n \n     // ETA\n     private int eta;\n+    // JavaScript Versioning\n+    protected String mCardSuppliedApiVersion = \"\";\n+    protected String mCardSuppliedDeveloperContact  = \"\";\n+\n+    private static final String sCurrentJsApiVersion = \"1.0.0\";\n+    // JS api list enable/disable status\n+    private HashMap<String, Boolean> jsApiListMap = new HashMap<String, Boolean>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2Nzk0MQ=="}, "originalCommit": {"oid": "21733244312ba01f7c7eeb38c7ce0e343c601529"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTkxMTY1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMzozOTozNVrOGmu76Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo1ODo1OFrOGoC8xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2ODA3Mw==", "bodyText": "nit: invert the if with showDeveloperContact() inside the block, and return early to reduce nesting.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r443268073", "createdAt": "2020-06-21T23:39:35Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3158,27 +3168,35 @@ private boolean filterUrl(String url) {\n             }\n             // mark card using javascript\n             if (url.startsWith(\"signal:mark_current_card\")) {\n-                executeCommand(COMMAND_MARK);\n+                if (jsApiListMap.get(\"markCard\")) {\n+                    executeCommand(COMMAND_MARK);\n+                } else {\n+                    showDeveloperContact();\n+                }\n                 return true;\n             }\n             // flag card (blue, green, orange, red) using javascript from AnkiDroid webview\n             if (url.startsWith(\"signal:flag_\")) {\n-                String mFlag = url.replaceFirst(\"signal:flag_\",\"\");\n-                switch (mFlag) {\n-                    case \"none\": executeCommand(COMMAND_UNSET_FLAG);\n-                        return true;\n-                    case \"red\": executeCommand(COMMAND_TOGGLE_FLAG_RED);\n-                        return true;\n-                    case \"orange\": executeCommand(COMMAND_TOGGLE_FLAG_ORANGE);\n-                        return true;\n-                    case \"green\": executeCommand(COMMAND_TOGGLE_FLAG_GREEN);\n-                        return true;\n-                    case \"blue\": executeCommand(COMMAND_TOGGLE_FLAG_BLUE);\n-                        return true;\n-                    default:\n-                        Timber.d(\"No such Flag found.\");\n-                        return true;\n+                if (jsApiListMap.get(\"toggleFlag\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21733244312ba01f7c7eeb38c7ce0e343c601529"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0NDU1MA==", "bodyText": "Updated", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r444644550", "createdAt": "2020-06-24T04:58:58Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3158,27 +3168,35 @@ private boolean filterUrl(String url) {\n             }\n             // mark card using javascript\n             if (url.startsWith(\"signal:mark_current_card\")) {\n-                executeCommand(COMMAND_MARK);\n+                if (jsApiListMap.get(\"markCard\")) {\n+                    executeCommand(COMMAND_MARK);\n+                } else {\n+                    showDeveloperContact();\n+                }\n                 return true;\n             }\n             // flag card (blue, green, orange, red) using javascript from AnkiDroid webview\n             if (url.startsWith(\"signal:flag_\")) {\n-                String mFlag = url.replaceFirst(\"signal:flag_\",\"\");\n-                switch (mFlag) {\n-                    case \"none\": executeCommand(COMMAND_UNSET_FLAG);\n-                        return true;\n-                    case \"red\": executeCommand(COMMAND_TOGGLE_FLAG_RED);\n-                        return true;\n-                    case \"orange\": executeCommand(COMMAND_TOGGLE_FLAG_ORANGE);\n-                        return true;\n-                    case \"green\": executeCommand(COMMAND_TOGGLE_FLAG_GREEN);\n-                        return true;\n-                    case \"blue\": executeCommand(COMMAND_TOGGLE_FLAG_BLUE);\n-                        return true;\n-                    default:\n-                        Timber.d(\"No such Flag found.\");\n-                        return true;\n+                if (jsApiListMap.get(\"toggleFlag\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2ODA3Mw=="}, "originalCommit": {"oid": "21733244312ba01f7c7eeb38c7ce0e343c601529"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTkxMjcwOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMzo0MToxMVrOGmu8cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo1ODo0OFrOGoC8ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2ODIwOA==", "bodyText": "invert the if and return early to reduce nesting", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r443268208", "createdAt": "2020-06-21T23:41:11Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3419,6 +3437,62 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    // show developer contact if js api used in card is deprecated\n+    private void showDeveloperContact() {\n+        View parentLayout = findViewById(android.R.id.content);\n+        String snackbarMsg;\n+        if (TextUtils.isEmpty(mCardSuppliedDeveloperContact)) {\n+            snackbarMsg = getString(R.string.api_version_no_developer_contact);\n+        } else {\n+            snackbarMsg = getString(R.string.api_version_developer_contact, mCardSuppliedDeveloperContact );\n+        }\n+\n+        Snackbar snackbar = Snackbar.make(parentLayout, snackbarMsg, Snackbar.LENGTH_LONG);\n+        View snackbarView = snackbar.getView();\n+        TextView snackTextView = snackbarView.findViewById(com.google.android.material.R.id.snackbar_text);\n+        snackTextView.setTextColor(Color.WHITE);\n+        snackTextView.setMaxLines(3);\n+\n+        snackbar.setActionTextColor(Color.MAGENTA)\n+                .setAction(getString(R.string.reviewer_invalid_api_version_visit_documentation), view -> {\n+                    openUrl(Uri.parse(\"https://github.com/ankidroid/Anki-Android/wiki\"));\n+                });\n+\n+        snackbar.show();\n+    }\n+\n+    // api version if 1.0.0\n+    private boolean requireApiVersion(String apiVer) {\n+        String[] versionSupplied = apiVer.split(\"\\\\.\");\n+        String[] currentApiVersion = sCurrentJsApiVersion.split(\"\\\\.\");\n+\n+        int majorCurrentApiVersion = Integer.parseInt(currentApiVersion[0]);\n+        int minorCurrentApiVersion = Integer.parseInt(currentApiVersion[1]);\n+        int patchCurrentApiVersion = Integer.parseInt(currentApiVersion[2]);\n+\n+        if (versionSupplied.length <= 2) {\n+            UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n+            return false;\n+        }\n+\n+        if (versionSupplied.length == 3) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21733244312ba01f7c7eeb38c7ce0e343c601529"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0NDUxNQ==", "bodyText": "I have changed it. May be better than previous one.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r444644515", "createdAt": "2020-06-24T04:58:48Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3419,6 +3437,62 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    // show developer contact if js api used in card is deprecated\n+    private void showDeveloperContact() {\n+        View parentLayout = findViewById(android.R.id.content);\n+        String snackbarMsg;\n+        if (TextUtils.isEmpty(mCardSuppliedDeveloperContact)) {\n+            snackbarMsg = getString(R.string.api_version_no_developer_contact);\n+        } else {\n+            snackbarMsg = getString(R.string.api_version_developer_contact, mCardSuppliedDeveloperContact );\n+        }\n+\n+        Snackbar snackbar = Snackbar.make(parentLayout, snackbarMsg, Snackbar.LENGTH_LONG);\n+        View snackbarView = snackbar.getView();\n+        TextView snackTextView = snackbarView.findViewById(com.google.android.material.R.id.snackbar_text);\n+        snackTextView.setTextColor(Color.WHITE);\n+        snackTextView.setMaxLines(3);\n+\n+        snackbar.setActionTextColor(Color.MAGENTA)\n+                .setAction(getString(R.string.reviewer_invalid_api_version_visit_documentation), view -> {\n+                    openUrl(Uri.parse(\"https://github.com/ankidroid/Anki-Android/wiki\"));\n+                });\n+\n+        snackbar.show();\n+    }\n+\n+    // api version if 1.0.0\n+    private boolean requireApiVersion(String apiVer) {\n+        String[] versionSupplied = apiVer.split(\"\\\\.\");\n+        String[] currentApiVersion = sCurrentJsApiVersion.split(\"\\\\.\");\n+\n+        int majorCurrentApiVersion = Integer.parseInt(currentApiVersion[0]);\n+        int minorCurrentApiVersion = Integer.parseInt(currentApiVersion[1]);\n+        int patchCurrentApiVersion = Integer.parseInt(currentApiVersion[2]);\n+\n+        if (versionSupplied.length <= 2) {\n+            UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n+            return false;\n+        }\n+\n+        if (versionSupplied.length == 3) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2ODIwOA=="}, "originalCommit": {"oid": "21733244312ba01f7c7eeb38c7ce0e343c601529"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTkxNDMxOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMzo0Mzo1OVrOGmu9Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo1ODoyMlrOGoC8PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2ODQyMw==", "bodyText": "Might be worth extracting this parsing/logic to a class. Implementer's choice.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r443268423", "createdAt": "2020-06-21T23:43:59Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3419,6 +3437,62 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    // show developer contact if js api used in card is deprecated\n+    private void showDeveloperContact() {\n+        View parentLayout = findViewById(android.R.id.content);\n+        String snackbarMsg;\n+        if (TextUtils.isEmpty(mCardSuppliedDeveloperContact)) {\n+            snackbarMsg = getString(R.string.api_version_no_developer_contact);\n+        } else {\n+            snackbarMsg = getString(R.string.api_version_developer_contact, mCardSuppliedDeveloperContact );\n+        }\n+\n+        Snackbar snackbar = Snackbar.make(parentLayout, snackbarMsg, Snackbar.LENGTH_LONG);\n+        View snackbarView = snackbar.getView();\n+        TextView snackTextView = snackbarView.findViewById(com.google.android.material.R.id.snackbar_text);\n+        snackTextView.setTextColor(Color.WHITE);\n+        snackTextView.setMaxLines(3);\n+\n+        snackbar.setActionTextColor(Color.MAGENTA)\n+                .setAction(getString(R.string.reviewer_invalid_api_version_visit_documentation), view -> {\n+                    openUrl(Uri.parse(\"https://github.com/ankidroid/Anki-Android/wiki\"));\n+                });\n+\n+        snackbar.show();\n+    }\n+\n+    // api version if 1.0.0\n+    private boolean requireApiVersion(String apiVer) {\n+        String[] versionSupplied = apiVer.split(\"\\\\.\");\n+        String[] currentApiVersion = sCurrentJsApiVersion.split(\"\\\\.\");\n+\n+        int majorCurrentApiVersion = Integer.parseInt(currentApiVersion[0]);\n+        int minorCurrentApiVersion = Integer.parseInt(currentApiVersion[1]);\n+        int patchCurrentApiVersion = Integer.parseInt(currentApiVersion[2]);\n+\n+        if (versionSupplied.length <= 2) {\n+            UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n+            return false;\n+        }\n+\n+        if (versionSupplied.length == 3) {\n+            int majorVersionSupplied = Integer.parseInt(versionSupplied[0]);\n+            int minorVersionSupplied = Integer.parseInt(versionSupplied[1]);\n+            int patchVersionSupplied = Integer.parseInt(versionSupplied[2]);\n+\n+            if (majorVersionSupplied == majorCurrentApiVersion && minorVersionSupplied == minorCurrentApiVersion && patchVersionSupplied == patchCurrentApiVersion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21733244312ba01f7c7eeb38c7ce0e343c601529"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0NDQxMw==", "bodyText": "Extracted to a class.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r444644413", "createdAt": "2020-06-24T04:58:22Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3419,6 +3437,62 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    // show developer contact if js api used in card is deprecated\n+    private void showDeveloperContact() {\n+        View parentLayout = findViewById(android.R.id.content);\n+        String snackbarMsg;\n+        if (TextUtils.isEmpty(mCardSuppliedDeveloperContact)) {\n+            snackbarMsg = getString(R.string.api_version_no_developer_contact);\n+        } else {\n+            snackbarMsg = getString(R.string.api_version_developer_contact, mCardSuppliedDeveloperContact );\n+        }\n+\n+        Snackbar snackbar = Snackbar.make(parentLayout, snackbarMsg, Snackbar.LENGTH_LONG);\n+        View snackbarView = snackbar.getView();\n+        TextView snackTextView = snackbarView.findViewById(com.google.android.material.R.id.snackbar_text);\n+        snackTextView.setTextColor(Color.WHITE);\n+        snackTextView.setMaxLines(3);\n+\n+        snackbar.setActionTextColor(Color.MAGENTA)\n+                .setAction(getString(R.string.reviewer_invalid_api_version_visit_documentation), view -> {\n+                    openUrl(Uri.parse(\"https://github.com/ankidroid/Anki-Android/wiki\"));\n+                });\n+\n+        snackbar.show();\n+    }\n+\n+    // api version if 1.0.0\n+    private boolean requireApiVersion(String apiVer) {\n+        String[] versionSupplied = apiVer.split(\"\\\\.\");\n+        String[] currentApiVersion = sCurrentJsApiVersion.split(\"\\\\.\");\n+\n+        int majorCurrentApiVersion = Integer.parseInt(currentApiVersion[0]);\n+        int minorCurrentApiVersion = Integer.parseInt(currentApiVersion[1]);\n+        int patchCurrentApiVersion = Integer.parseInt(currentApiVersion[2]);\n+\n+        if (versionSupplied.length <= 2) {\n+            UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n+            return false;\n+        }\n+\n+        if (versionSupplied.length == 3) {\n+            int majorVersionSupplied = Integer.parseInt(versionSupplied[0]);\n+            int minorVersionSupplied = Integer.parseInt(versionSupplied[1]);\n+            int patchVersionSupplied = Integer.parseInt(versionSupplied[2]);\n+\n+            if (majorVersionSupplied == majorCurrentApiVersion && minorVersionSupplied == minorCurrentApiVersion && patchVersionSupplied == patchCurrentApiVersion) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2ODQyMw=="}, "originalCommit": {"oid": "21733244312ba01f7c7eeb38c7ce0e343c601529"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MDA1MDU0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMzowODoxM1rOGpgODg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwNjo0MjoyNlrOGpzx_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE3MjY4Ng==", "bodyText": "You could extract a lot of the logic in requireApiVersion to here as well.\n\nStatic builder which takes a string, and converts it into a version\nComparable<> or similar, which takes two versions and returns which is larger.\n\nThis would significantly cut down on the logic in requireApiVersion", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r446172686", "createdAt": "2020-06-26T13:08:13Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3449,6 +3468,77 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    // show developer contact if js api used in card is deprecated\n+    private void showDeveloperContact() {\n+        View parentLayout = findViewById(android.R.id.content);\n+        String snackbarMsg;\n+        if (TextUtils.isEmpty(mCardSuppliedDeveloperContact)) {\n+            snackbarMsg = getString(R.string.api_version_no_developer_contact);\n+        } else {\n+            snackbarMsg = getString(R.string.api_version_developer_contact, mCardSuppliedDeveloperContact );\n+        }\n+\n+        Snackbar snackbar = Snackbar.make(parentLayout, snackbarMsg, Snackbar.LENGTH_LONG);\n+        View snackbarView = snackbar.getView();\n+        TextView snackTextView = snackbarView.findViewById(com.google.android.material.R.id.snackbar_text);\n+        snackTextView.setTextColor(Color.WHITE);\n+        snackTextView.setMaxLines(3);\n+\n+        snackbar.setActionTextColor(Color.MAGENTA)\n+                .setAction(getString(R.string.reviewer_invalid_api_version_visit_documentation), view -> {\n+                    openUrl(Uri.parse(\"https://github.com/ankidroid/Anki-Android/wiki\"));\n+                });\n+\n+        snackbar.show();\n+    }\n+\n+    /*\n+     *AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n+     * major version : 1\n+     * minor version : 2\n+     * patch version : 3\n+     */\n+    private class JsApiVersionClass {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "072c64837af0048cca3034944dc7c4eb38257a44"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5MzE4MQ==", "bodyText": "I implemented using this\nhttps://stackoverflow.com/questions/198431/how-do-you-compare-two-version-strings-in-java/27891752", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r446493181", "createdAt": "2020-06-27T06:42:26Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3449,6 +3468,77 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    // show developer contact if js api used in card is deprecated\n+    private void showDeveloperContact() {\n+        View parentLayout = findViewById(android.R.id.content);\n+        String snackbarMsg;\n+        if (TextUtils.isEmpty(mCardSuppliedDeveloperContact)) {\n+            snackbarMsg = getString(R.string.api_version_no_developer_contact);\n+        } else {\n+            snackbarMsg = getString(R.string.api_version_developer_contact, mCardSuppliedDeveloperContact );\n+        }\n+\n+        Snackbar snackbar = Snackbar.make(parentLayout, snackbarMsg, Snackbar.LENGTH_LONG);\n+        View snackbarView = snackbar.getView();\n+        TextView snackTextView = snackbarView.findViewById(com.google.android.material.R.id.snackbar_text);\n+        snackTextView.setTextColor(Color.WHITE);\n+        snackTextView.setMaxLines(3);\n+\n+        snackbar.setActionTextColor(Color.MAGENTA)\n+                .setAction(getString(R.string.reviewer_invalid_api_version_visit_documentation), view -> {\n+                    openUrl(Uri.parse(\"https://github.com/ankidroid/Anki-Android/wiki\"));\n+                });\n+\n+        snackbar.show();\n+    }\n+\n+    /*\n+     *AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n+     * major version : 1\n+     * minor version : 2\n+     * patch version : 3\n+     */\n+    private class JsApiVersionClass {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE3MjY4Ng=="}, "originalCommit": {"oid": "072c64837af0048cca3034944dc7c4eb38257a44"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjIzNDUwOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwOTo1OTo1MVrOGp0svg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwOTo1OTo1MVrOGp0svg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwODIyMg==", "bodyText": "If you override .equals, you need to override .getHashCode", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r446508222", "createdAt": "2020-06-27T09:59:51Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3493,49 +3493,89 @@ private void showDeveloperContact() {\n     }\n \n     /*\n-     *AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n-     * major version : 1\n-     * minor version : 2\n-     * patch version : 3\n+     * AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n+     *  major version : 1\n+     *  minor version : 2\n+     *  patch version : 3\n+     *\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     * https://stackoverflow.com/questions/198431/how-do-you-compare-two-version-strings-in-java/27891752\n      */\n-    private class JsApiVersionClass {\n-        int major;\n-        int minor;\n-        int patch;\n-    }\n+    public class Version implements Comparable<Version> {\n \n-    /*\n-     *Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n-     */\n-    private boolean requireApiVersion(String apiVer) {\n-        String[] versionSupplied = apiVer.split(\"\\\\.\");\n-        String[] currentApiVersion = sCurrentJsApiVersion.split(\"\\\\.\");\n+        private String version;\n \n-        JsApiVersionClass mJsCurrentVersion = new JsApiVersionClass();\n+        public final String get() {\n+            return this.version;\n+        }\n \n-        mJsCurrentVersion.major = Integer.parseInt(currentApiVersion[0]);\n-        mJsCurrentVersion.minor = Integer.parseInt(currentApiVersion[1]);\n-        mJsCurrentVersion.patch = Integer.parseInt(currentApiVersion[2]);\n+        public Version(String version) {\n+            if (version == null) {\n+                throw new IllegalArgumentException(\"Version can not be null\");\n+            }\n+            if (!version.matches(\"[0-9]+(\\\\.[0-9]+)*\")) {\n+                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n+                throw new IllegalArgumentException(\"Invalid version format\");\n+            }\n+            this.version = version;\n+        }\n \n-        if (versionSupplied.length < 3 || versionSupplied.length > 4) {\n-            UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n-            return false;\n-        } else {\n-            JsApiVersionClass mJsSuppliedVersion = new JsApiVersionClass();\n+        @Override\n+        public int compareTo(Version that) {\n+            if (that == null) {\n+                return 1;\n+            }\n \n-            mJsSuppliedVersion.major = Integer.parseInt(versionSupplied[0]);\n-            mJsSuppliedVersion.minor = Integer.parseInt(versionSupplied[1]);\n-            mJsSuppliedVersion.patch = Integer.parseInt(versionSupplied[2]);\n+            String[] thisParts = this.get().split(\"\\\\.\");\n+            String[] thatParts = that.get().split(\"\\\\.\");\n+            int length = Math.max(thisParts.length, thatParts.length);\n \n-            if (mJsCurrentVersion.major > mJsSuppliedVersion.major || mJsCurrentVersion.minor > mJsSuppliedVersion.minor || mJsCurrentVersion.patch > mJsSuppliedVersion.patch) {\n-                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.update_js_api_version, sCurrentJsApiVersion), false);\n-                return false;\n-            } else if (mJsCurrentVersion.major == mJsSuppliedVersion.major && mJsCurrentVersion.minor == mJsSuppliedVersion.minor && mJsCurrentVersion.patch == mJsSuppliedVersion.patch) {\n+            for (int i = 0; i < length; i++) {\n+                int thisPart = i < thisParts.length ? Integer.parseInt(thisParts[i]) : 0;\n+                int thatPart = i < thatParts.length ? Integer.parseInt(thatParts[i]) : 0;\n+\n+                if (thisPart < thatPart) {\n+                    return -1;\n+                }\n+\n+                if (thisPart > thatPart) {\n+                    return 1;\n+                }\n+            }\n+            return 0;\n+        }\n+\n+        @Override\n+        public boolean equals(Object that) {\n+            if (this == that) {\n                 return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "154910791241df838c69aa721cede43d664c2983"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjIzNTMzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDowMDoyMlrOGp0tFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDowMDoyMlrOGp0tFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwODMwOQ==", "bodyText": "much nicer - could convert sCurrentJsApiVersion to a Version", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r446508309", "createdAt": "2020-06-27T10:00:22Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3493,49 +3493,89 @@ private void showDeveloperContact() {\n     }\n \n     /*\n-     *AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n-     * major version : 1\n-     * minor version : 2\n-     * patch version : 3\n+     * AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n+     *  major version : 1\n+     *  minor version : 2\n+     *  patch version : 3\n+     *\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     * https://stackoverflow.com/questions/198431/how-do-you-compare-two-version-strings-in-java/27891752\n      */\n-    private class JsApiVersionClass {\n-        int major;\n-        int minor;\n-        int patch;\n-    }\n+    public class Version implements Comparable<Version> {\n \n-    /*\n-     *Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n-     */\n-    private boolean requireApiVersion(String apiVer) {\n-        String[] versionSupplied = apiVer.split(\"\\\\.\");\n-        String[] currentApiVersion = sCurrentJsApiVersion.split(\"\\\\.\");\n+        private String version;\n \n-        JsApiVersionClass mJsCurrentVersion = new JsApiVersionClass();\n+        public final String get() {\n+            return this.version;\n+        }\n \n-        mJsCurrentVersion.major = Integer.parseInt(currentApiVersion[0]);\n-        mJsCurrentVersion.minor = Integer.parseInt(currentApiVersion[1]);\n-        mJsCurrentVersion.patch = Integer.parseInt(currentApiVersion[2]);\n+        public Version(String version) {\n+            if (version == null) {\n+                throw new IllegalArgumentException(\"Version can not be null\");\n+            }\n+            if (!version.matches(\"[0-9]+(\\\\.[0-9]+)*\")) {\n+                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n+                throw new IllegalArgumentException(\"Invalid version format\");\n+            }\n+            this.version = version;\n+        }\n \n-        if (versionSupplied.length < 3 || versionSupplied.length > 4) {\n-            UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n-            return false;\n-        } else {\n-            JsApiVersionClass mJsSuppliedVersion = new JsApiVersionClass();\n+        @Override\n+        public int compareTo(Version that) {\n+            if (that == null) {\n+                return 1;\n+            }\n \n-            mJsSuppliedVersion.major = Integer.parseInt(versionSupplied[0]);\n-            mJsSuppliedVersion.minor = Integer.parseInt(versionSupplied[1]);\n-            mJsSuppliedVersion.patch = Integer.parseInt(versionSupplied[2]);\n+            String[] thisParts = this.get().split(\"\\\\.\");\n+            String[] thatParts = that.get().split(\"\\\\.\");\n+            int length = Math.max(thisParts.length, thatParts.length);\n \n-            if (mJsCurrentVersion.major > mJsSuppliedVersion.major || mJsCurrentVersion.minor > mJsSuppliedVersion.minor || mJsCurrentVersion.patch > mJsSuppliedVersion.patch) {\n-                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.update_js_api_version, sCurrentJsApiVersion), false);\n-                return false;\n-            } else if (mJsCurrentVersion.major == mJsSuppliedVersion.major && mJsCurrentVersion.minor == mJsSuppliedVersion.minor && mJsCurrentVersion.patch == mJsSuppliedVersion.patch) {\n+            for (int i = 0; i < length; i++) {\n+                int thisPart = i < thisParts.length ? Integer.parseInt(thisParts[i]) : 0;\n+                int thatPart = i < thatParts.length ? Integer.parseInt(thatParts[i]) : 0;\n+\n+                if (thisPart < thatPart) {\n+                    return -1;\n+                }\n+\n+                if (thisPart > thatPart) {\n+                    return 1;\n+                }\n+            }\n+            return 0;\n+        }\n+\n+        @Override\n+        public boolean equals(Object that) {\n+            if (this == that) {\n                 return true;\n-            } else {\n-                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n+            }\n+\n+            if (that == null) {\n                 return false;\n             }\n+\n+            if (this.getClass() != that.getClass()) {\n+                return false;\n+            }\n+\n+            return this.compareTo((Version) that) == 0;\n+        }\n+    }\n+\n+    private boolean requireApiVersion(String apiVer) {\n+\n+        Version mVersionCurrent = new Version(sCurrentJsApiVersion);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "154910791241df838c69aa721cede43d664c2983"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjIzNTc4OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDowMDo0NlrOGp0tRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDowNToyNlrOGp0ujg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwODM1Ng==", "bodyText": "What if this throws?", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r446508356", "createdAt": "2020-06-27T10:00:46Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3493,49 +3493,89 @@ private void showDeveloperContact() {\n     }\n \n     /*\n-     *AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n-     * major version : 1\n-     * minor version : 2\n-     * patch version : 3\n+     * AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n+     *  major version : 1\n+     *  minor version : 2\n+     *  patch version : 3\n+     *\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     * https://stackoverflow.com/questions/198431/how-do-you-compare-two-version-strings-in-java/27891752\n      */\n-    private class JsApiVersionClass {\n-        int major;\n-        int minor;\n-        int patch;\n-    }\n+    public class Version implements Comparable<Version> {\n \n-    /*\n-     *Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n-     */\n-    private boolean requireApiVersion(String apiVer) {\n-        String[] versionSupplied = apiVer.split(\"\\\\.\");\n-        String[] currentApiVersion = sCurrentJsApiVersion.split(\"\\\\.\");\n+        private String version;\n \n-        JsApiVersionClass mJsCurrentVersion = new JsApiVersionClass();\n+        public final String get() {\n+            return this.version;\n+        }\n \n-        mJsCurrentVersion.major = Integer.parseInt(currentApiVersion[0]);\n-        mJsCurrentVersion.minor = Integer.parseInt(currentApiVersion[1]);\n-        mJsCurrentVersion.patch = Integer.parseInt(currentApiVersion[2]);\n+        public Version(String version) {\n+            if (version == null) {\n+                throw new IllegalArgumentException(\"Version can not be null\");\n+            }\n+            if (!version.matches(\"[0-9]+(\\\\.[0-9]+)*\")) {\n+                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n+                throw new IllegalArgumentException(\"Invalid version format\");\n+            }\n+            this.version = version;\n+        }\n \n-        if (versionSupplied.length < 3 || versionSupplied.length > 4) {\n-            UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n-            return false;\n-        } else {\n-            JsApiVersionClass mJsSuppliedVersion = new JsApiVersionClass();\n+        @Override\n+        public int compareTo(Version that) {\n+            if (that == null) {\n+                return 1;\n+            }\n \n-            mJsSuppliedVersion.major = Integer.parseInt(versionSupplied[0]);\n-            mJsSuppliedVersion.minor = Integer.parseInt(versionSupplied[1]);\n-            mJsSuppliedVersion.patch = Integer.parseInt(versionSupplied[2]);\n+            String[] thisParts = this.get().split(\"\\\\.\");\n+            String[] thatParts = that.get().split(\"\\\\.\");\n+            int length = Math.max(thisParts.length, thatParts.length);\n \n-            if (mJsCurrentVersion.major > mJsSuppliedVersion.major || mJsCurrentVersion.minor > mJsSuppliedVersion.minor || mJsCurrentVersion.patch > mJsSuppliedVersion.patch) {\n-                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.update_js_api_version, sCurrentJsApiVersion), false);\n-                return false;\n-            } else if (mJsCurrentVersion.major == mJsSuppliedVersion.major && mJsCurrentVersion.minor == mJsSuppliedVersion.minor && mJsCurrentVersion.patch == mJsSuppliedVersion.patch) {\n+            for (int i = 0; i < length; i++) {\n+                int thisPart = i < thisParts.length ? Integer.parseInt(thisParts[i]) : 0;\n+                int thatPart = i < thatParts.length ? Integer.parseInt(thatParts[i]) : 0;\n+\n+                if (thisPart < thatPart) {\n+                    return -1;\n+                }\n+\n+                if (thisPart > thatPart) {\n+                    return 1;\n+                }\n+            }\n+            return 0;\n+        }\n+\n+        @Override\n+        public boolean equals(Object that) {\n+            if (this == that) {\n                 return true;\n-            } else {\n-                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n+            }\n+\n+            if (that == null) {\n                 return false;\n             }\n+\n+            if (this.getClass() != that.getClass()) {\n+                return false;\n+            }\n+\n+            return this.compareTo((Version) that) == 0;\n+        }\n+    }\n+\n+    private boolean requireApiVersion(String apiVer) {\n+\n+        Version mVersionCurrent = new Version(sCurrentJsApiVersion);\n+        Version mVersionSupplied = new Version(apiVer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "154910791241df838c69aa721cede43d664c2983"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwODY4Ng==", "bodyText": "Not a member variable - no need for the m prefix\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Version mVersionSupplied = new Version(apiVer);\n          \n          \n            \n                    Version versionSupplied = new Version(apiVer);", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r446508686", "createdAt": "2020-06-27T10:05:26Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3493,49 +3493,89 @@ private void showDeveloperContact() {\n     }\n \n     /*\n-     *AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n-     * major version : 1\n-     * minor version : 2\n-     * patch version : 3\n+     * AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n+     *  major version : 1\n+     *  minor version : 2\n+     *  patch version : 3\n+     *\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     * https://stackoverflow.com/questions/198431/how-do-you-compare-two-version-strings-in-java/27891752\n      */\n-    private class JsApiVersionClass {\n-        int major;\n-        int minor;\n-        int patch;\n-    }\n+    public class Version implements Comparable<Version> {\n \n-    /*\n-     *Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n-     */\n-    private boolean requireApiVersion(String apiVer) {\n-        String[] versionSupplied = apiVer.split(\"\\\\.\");\n-        String[] currentApiVersion = sCurrentJsApiVersion.split(\"\\\\.\");\n+        private String version;\n \n-        JsApiVersionClass mJsCurrentVersion = new JsApiVersionClass();\n+        public final String get() {\n+            return this.version;\n+        }\n \n-        mJsCurrentVersion.major = Integer.parseInt(currentApiVersion[0]);\n-        mJsCurrentVersion.minor = Integer.parseInt(currentApiVersion[1]);\n-        mJsCurrentVersion.patch = Integer.parseInt(currentApiVersion[2]);\n+        public Version(String version) {\n+            if (version == null) {\n+                throw new IllegalArgumentException(\"Version can not be null\");\n+            }\n+            if (!version.matches(\"[0-9]+(\\\\.[0-9]+)*\")) {\n+                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n+                throw new IllegalArgumentException(\"Invalid version format\");\n+            }\n+            this.version = version;\n+        }\n \n-        if (versionSupplied.length < 3 || versionSupplied.length > 4) {\n-            UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n-            return false;\n-        } else {\n-            JsApiVersionClass mJsSuppliedVersion = new JsApiVersionClass();\n+        @Override\n+        public int compareTo(Version that) {\n+            if (that == null) {\n+                return 1;\n+            }\n \n-            mJsSuppliedVersion.major = Integer.parseInt(versionSupplied[0]);\n-            mJsSuppliedVersion.minor = Integer.parseInt(versionSupplied[1]);\n-            mJsSuppliedVersion.patch = Integer.parseInt(versionSupplied[2]);\n+            String[] thisParts = this.get().split(\"\\\\.\");\n+            String[] thatParts = that.get().split(\"\\\\.\");\n+            int length = Math.max(thisParts.length, thatParts.length);\n \n-            if (mJsCurrentVersion.major > mJsSuppliedVersion.major || mJsCurrentVersion.minor > mJsSuppliedVersion.minor || mJsCurrentVersion.patch > mJsSuppliedVersion.patch) {\n-                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.update_js_api_version, sCurrentJsApiVersion), false);\n-                return false;\n-            } else if (mJsCurrentVersion.major == mJsSuppliedVersion.major && mJsCurrentVersion.minor == mJsSuppliedVersion.minor && mJsCurrentVersion.patch == mJsSuppliedVersion.patch) {\n+            for (int i = 0; i < length; i++) {\n+                int thisPart = i < thisParts.length ? Integer.parseInt(thisParts[i]) : 0;\n+                int thatPart = i < thatParts.length ? Integer.parseInt(thatParts[i]) : 0;\n+\n+                if (thisPart < thatPart) {\n+                    return -1;\n+                }\n+\n+                if (thisPart > thatPart) {\n+                    return 1;\n+                }\n+            }\n+            return 0;\n+        }\n+\n+        @Override\n+        public boolean equals(Object that) {\n+            if (this == that) {\n                 return true;\n-            } else {\n-                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n+            }\n+\n+            if (that == null) {\n                 return false;\n             }\n+\n+            if (this.getClass() != that.getClass()) {\n+                return false;\n+            }\n+\n+            return this.compareTo((Version) that) == 0;\n+        }\n+    }\n+\n+    private boolean requireApiVersion(String apiVer) {\n+\n+        Version mVersionCurrent = new Version(sCurrentJsApiVersion);\n+        Version mVersionSupplied = new Version(apiVer);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwODM1Ng=="}, "originalCommit": {"oid": "154910791241df838c69aa721cede43d664c2983"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjIzNjI0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDowMTozOFrOGp0tew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDowMTozOFrOGp0tew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwODQxMQ==", "bodyText": "extract the result of compareTo above the ifs, then you only need to call it once", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r446508411", "createdAt": "2020-06-27T10:01:38Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3493,49 +3493,89 @@ private void showDeveloperContact() {\n     }\n \n     /*\n-     *AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n-     * major version : 1\n-     * minor version : 2\n-     * patch version : 3\n+     * AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n+     *  major version : 1\n+     *  minor version : 2\n+     *  patch version : 3\n+     *\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     * https://stackoverflow.com/questions/198431/how-do-you-compare-two-version-strings-in-java/27891752\n      */\n-    private class JsApiVersionClass {\n-        int major;\n-        int minor;\n-        int patch;\n-    }\n+    public class Version implements Comparable<Version> {\n \n-    /*\n-     *Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n-     */\n-    private boolean requireApiVersion(String apiVer) {\n-        String[] versionSupplied = apiVer.split(\"\\\\.\");\n-        String[] currentApiVersion = sCurrentJsApiVersion.split(\"\\\\.\");\n+        private String version;\n \n-        JsApiVersionClass mJsCurrentVersion = new JsApiVersionClass();\n+        public final String get() {\n+            return this.version;\n+        }\n \n-        mJsCurrentVersion.major = Integer.parseInt(currentApiVersion[0]);\n-        mJsCurrentVersion.minor = Integer.parseInt(currentApiVersion[1]);\n-        mJsCurrentVersion.patch = Integer.parseInt(currentApiVersion[2]);\n+        public Version(String version) {\n+            if (version == null) {\n+                throw new IllegalArgumentException(\"Version can not be null\");\n+            }\n+            if (!version.matches(\"[0-9]+(\\\\.[0-9]+)*\")) {\n+                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n+                throw new IllegalArgumentException(\"Invalid version format\");\n+            }\n+            this.version = version;\n+        }\n \n-        if (versionSupplied.length < 3 || versionSupplied.length > 4) {\n-            UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n-            return false;\n-        } else {\n-            JsApiVersionClass mJsSuppliedVersion = new JsApiVersionClass();\n+        @Override\n+        public int compareTo(Version that) {\n+            if (that == null) {\n+                return 1;\n+            }\n \n-            mJsSuppliedVersion.major = Integer.parseInt(versionSupplied[0]);\n-            mJsSuppliedVersion.minor = Integer.parseInt(versionSupplied[1]);\n-            mJsSuppliedVersion.patch = Integer.parseInt(versionSupplied[2]);\n+            String[] thisParts = this.get().split(\"\\\\.\");\n+            String[] thatParts = that.get().split(\"\\\\.\");\n+            int length = Math.max(thisParts.length, thatParts.length);\n \n-            if (mJsCurrentVersion.major > mJsSuppliedVersion.major || mJsCurrentVersion.minor > mJsSuppliedVersion.minor || mJsCurrentVersion.patch > mJsSuppliedVersion.patch) {\n-                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.update_js_api_version, sCurrentJsApiVersion), false);\n-                return false;\n-            } else if (mJsCurrentVersion.major == mJsSuppliedVersion.major && mJsCurrentVersion.minor == mJsSuppliedVersion.minor && mJsCurrentVersion.patch == mJsSuppliedVersion.patch) {\n+            for (int i = 0; i < length; i++) {\n+                int thisPart = i < thisParts.length ? Integer.parseInt(thisParts[i]) : 0;\n+                int thatPart = i < thatParts.length ? Integer.parseInt(thatParts[i]) : 0;\n+\n+                if (thisPart < thatPart) {\n+                    return -1;\n+                }\n+\n+                if (thisPart > thatPart) {\n+                    return 1;\n+                }\n+            }\n+            return 0;\n+        }\n+\n+        @Override\n+        public boolean equals(Object that) {\n+            if (this == that) {\n                 return true;\n-            } else {\n-                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n+            }\n+\n+            if (that == null) {\n                 return false;\n             }\n+\n+            if (this.getClass() != that.getClass()) {\n+                return false;\n+            }\n+\n+            return this.compareTo((Version) that) == 0;\n+        }\n+    }\n+\n+    private boolean requireApiVersion(String apiVer) {\n+\n+        Version mVersionCurrent = new Version(sCurrentJsApiVersion);\n+        Version mVersionSupplied = new Version(apiVer);\n+\n+        if (mVersionCurrent.equals(mVersionSupplied)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "154910791241df838c69aa721cede43d664c2983"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjIzNjc0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDowMjozN1rOGp0ttw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDowMjozN1rOGp0ttw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwODQ3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    private String version;\n          \n          \n            \n                    private final String mVersion;", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r446508471", "createdAt": "2020-06-27T10:02:37Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3493,49 +3493,89 @@ private void showDeveloperContact() {\n     }\n \n     /*\n-     *AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n-     * major version : 1\n-     * minor version : 2\n-     * patch version : 3\n+     * AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n+     *  major version : 1\n+     *  minor version : 2\n+     *  patch version : 3\n+     *\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     * https://stackoverflow.com/questions/198431/how-do-you-compare-two-version-strings-in-java/27891752\n      */\n-    private class JsApiVersionClass {\n-        int major;\n-        int minor;\n-        int patch;\n-    }\n+    public class Version implements Comparable<Version> {\n \n-    /*\n-     *Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n-     */\n-    private boolean requireApiVersion(String apiVer) {\n-        String[] versionSupplied = apiVer.split(\"\\\\.\");\n-        String[] currentApiVersion = sCurrentJsApiVersion.split(\"\\\\.\");\n+        private String version;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "154910791241df838c69aa721cede43d664c2983"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjIzNzQ3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDowNDowNVrOGp0uDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDowNDowNVrOGp0uDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwODU1Ng==", "bodyText": "turn this into a static factory method createInstance which will return null on failure. This means you get a simple constructor that does no work and doesn't throw.\nMake sure you handle a null return, as the code currently doesn't handle exceptions", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r446508556", "createdAt": "2020-06-27T10:04:05Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3493,49 +3493,89 @@ private void showDeveloperContact() {\n     }\n \n     /*\n-     *AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n-     * major version : 1\n-     * minor version : 2\n-     * patch version : 3\n+     * AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n+     *  major version : 1\n+     *  minor version : 2\n+     *  patch version : 3\n+     *\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     * https://stackoverflow.com/questions/198431/how-do-you-compare-two-version-strings-in-java/27891752\n      */\n-    private class JsApiVersionClass {\n-        int major;\n-        int minor;\n-        int patch;\n-    }\n+    public class Version implements Comparable<Version> {\n \n-    /*\n-     *Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n-     */\n-    private boolean requireApiVersion(String apiVer) {\n-        String[] versionSupplied = apiVer.split(\"\\\\.\");\n-        String[] currentApiVersion = sCurrentJsApiVersion.split(\"\\\\.\");\n+        private String version;\n \n-        JsApiVersionClass mJsCurrentVersion = new JsApiVersionClass();\n+        public final String get() {\n+            return this.version;\n+        }\n \n-        mJsCurrentVersion.major = Integer.parseInt(currentApiVersion[0]);\n-        mJsCurrentVersion.minor = Integer.parseInt(currentApiVersion[1]);\n-        mJsCurrentVersion.patch = Integer.parseInt(currentApiVersion[2]);\n+        public Version(String version) {\n+            if (version == null) {\n+                throw new IllegalArgumentException(\"Version can not be null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "154910791241df838c69aa721cede43d664c2983"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjIzNzY2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDowNDozNFrOGp0uKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDowNDozNFrOGp0uKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwODU4NQ==", "bodyText": "Might as well move the conversion to an int array into the constructor for speed.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r446508585", "createdAt": "2020-06-27T10:04:34Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3493,49 +3493,89 @@ private void showDeveloperContact() {\n     }\n \n     /*\n-     *AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n-     * major version : 1\n-     * minor version : 2\n-     * patch version : 3\n+     * AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n+     *  major version : 1\n+     *  minor version : 2\n+     *  patch version : 3\n+     *\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     * https://stackoverflow.com/questions/198431/how-do-you-compare-two-version-strings-in-java/27891752\n      */\n-    private class JsApiVersionClass {\n-        int major;\n-        int minor;\n-        int patch;\n-    }\n+    public class Version implements Comparable<Version> {\n \n-    /*\n-     *Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n-     */\n-    private boolean requireApiVersion(String apiVer) {\n-        String[] versionSupplied = apiVer.split(\"\\\\.\");\n-        String[] currentApiVersion = sCurrentJsApiVersion.split(\"\\\\.\");\n+        private String version;\n \n-        JsApiVersionClass mJsCurrentVersion = new JsApiVersionClass();\n+        public final String get() {\n+            return this.version;\n+        }\n \n-        mJsCurrentVersion.major = Integer.parseInt(currentApiVersion[0]);\n-        mJsCurrentVersion.minor = Integer.parseInt(currentApiVersion[1]);\n-        mJsCurrentVersion.patch = Integer.parseInt(currentApiVersion[2]);\n+        public Version(String version) {\n+            if (version == null) {\n+                throw new IllegalArgumentException(\"Version can not be null\");\n+            }\n+            if (!version.matches(\"[0-9]+(\\\\.[0-9]+)*\")) {\n+                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n+                throw new IllegalArgumentException(\"Invalid version format\");\n+            }\n+            this.version = version;\n+        }\n \n-        if (versionSupplied.length < 3 || versionSupplied.length > 4) {\n-            UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n-            return false;\n-        } else {\n-            JsApiVersionClass mJsSuppliedVersion = new JsApiVersionClass();\n+        @Override\n+        public int compareTo(Version that) {\n+            if (that == null) {\n+                return 1;\n+            }\n \n-            mJsSuppliedVersion.major = Integer.parseInt(versionSupplied[0]);\n-            mJsSuppliedVersion.minor = Integer.parseInt(versionSupplied[1]);\n-            mJsSuppliedVersion.patch = Integer.parseInt(versionSupplied[2]);\n+            String[] thisParts = this.get().split(\"\\\\.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "154910791241df838c69aa721cede43d664c2983"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjIzNzc5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDowNDo0NlrOGp0uOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDowNDo0NlrOGp0uOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwODYwMA==", "bodyText": "This can fail due to overflow", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r446508600", "createdAt": "2020-06-27T10:04:46Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3493,49 +3493,89 @@ private void showDeveloperContact() {\n     }\n \n     /*\n-     *AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n-     * major version : 1\n-     * minor version : 2\n-     * patch version : 3\n+     * AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n+     *  major version : 1\n+     *  minor version : 2\n+     *  patch version : 3\n+     *\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     * https://stackoverflow.com/questions/198431/how-do-you-compare-two-version-strings-in-java/27891752\n      */\n-    private class JsApiVersionClass {\n-        int major;\n-        int minor;\n-        int patch;\n-    }\n+    public class Version implements Comparable<Version> {\n \n-    /*\n-     *Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n-     */\n-    private boolean requireApiVersion(String apiVer) {\n-        String[] versionSupplied = apiVer.split(\"\\\\.\");\n-        String[] currentApiVersion = sCurrentJsApiVersion.split(\"\\\\.\");\n+        private String version;\n \n-        JsApiVersionClass mJsCurrentVersion = new JsApiVersionClass();\n+        public final String get() {\n+            return this.version;\n+        }\n \n-        mJsCurrentVersion.major = Integer.parseInt(currentApiVersion[0]);\n-        mJsCurrentVersion.minor = Integer.parseInt(currentApiVersion[1]);\n-        mJsCurrentVersion.patch = Integer.parseInt(currentApiVersion[2]);\n+        public Version(String version) {\n+            if (version == null) {\n+                throw new IllegalArgumentException(\"Version can not be null\");\n+            }\n+            if (!version.matches(\"[0-9]+(\\\\.[0-9]+)*\")) {\n+                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n+                throw new IllegalArgumentException(\"Invalid version format\");\n+            }\n+            this.version = version;\n+        }\n \n-        if (versionSupplied.length < 3 || versionSupplied.length > 4) {\n-            UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n-            return false;\n-        } else {\n-            JsApiVersionClass mJsSuppliedVersion = new JsApiVersionClass();\n+        @Override\n+        public int compareTo(Version that) {\n+            if (that == null) {\n+                return 1;\n+            }\n \n-            mJsSuppliedVersion.major = Integer.parseInt(versionSupplied[0]);\n-            mJsSuppliedVersion.minor = Integer.parseInt(versionSupplied[1]);\n-            mJsSuppliedVersion.patch = Integer.parseInt(versionSupplied[2]);\n+            String[] thisParts = this.get().split(\"\\\\.\");\n+            String[] thatParts = that.get().split(\"\\\\.\");\n+            int length = Math.max(thisParts.length, thatParts.length);\n \n-            if (mJsCurrentVersion.major > mJsSuppliedVersion.major || mJsCurrentVersion.minor > mJsSuppliedVersion.minor || mJsCurrentVersion.patch > mJsSuppliedVersion.patch) {\n-                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.update_js_api_version, sCurrentJsApiVersion), false);\n-                return false;\n-            } else if (mJsCurrentVersion.major == mJsSuppliedVersion.major && mJsCurrentVersion.minor == mJsSuppliedVersion.minor && mJsCurrentVersion.patch == mJsSuppliedVersion.patch) {\n+            for (int i = 0; i < length; i++) {\n+                int thisPart = i < thisParts.length ? Integer.parseInt(thisParts[i]) : 0;\n+                int thatPart = i < thatParts.length ? Integer.parseInt(thatParts[i]) : 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "154910791241df838c69aa721cede43d664c2983"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjIzOTA2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDowNjoxMFrOGp0uwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDowNjoxMFrOGp0uwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwODczOA==", "bodyText": "Technically, this should be > 0, and the next should be < 0", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r446508738", "createdAt": "2020-06-27T10:06:10Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3493,49 +3493,89 @@ private void showDeveloperContact() {\n     }\n \n     /*\n-     *AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n-     * major version : 1\n-     * minor version : 2\n-     * patch version : 3\n+     * AnkiDroid JavaScript API Class for major, minor, patch version eg: 1.2.3\n+     *  major version : 1\n+     *  minor version : 2\n+     *  patch version : 3\n+     *\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     * https://stackoverflow.com/questions/198431/how-do-you-compare-two-version-strings-in-java/27891752\n      */\n-    private class JsApiVersionClass {\n-        int major;\n-        int minor;\n-        int patch;\n-    }\n+    public class Version implements Comparable<Version> {\n \n-    /*\n-     *Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n-     */\n-    private boolean requireApiVersion(String apiVer) {\n-        String[] versionSupplied = apiVer.split(\"\\\\.\");\n-        String[] currentApiVersion = sCurrentJsApiVersion.split(\"\\\\.\");\n+        private String version;\n \n-        JsApiVersionClass mJsCurrentVersion = new JsApiVersionClass();\n+        public final String get() {\n+            return this.version;\n+        }\n \n-        mJsCurrentVersion.major = Integer.parseInt(currentApiVersion[0]);\n-        mJsCurrentVersion.minor = Integer.parseInt(currentApiVersion[1]);\n-        mJsCurrentVersion.patch = Integer.parseInt(currentApiVersion[2]);\n+        public Version(String version) {\n+            if (version == null) {\n+                throw new IllegalArgumentException(\"Version can not be null\");\n+            }\n+            if (!version.matches(\"[0-9]+(\\\\.[0-9]+)*\")) {\n+                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n+                throw new IllegalArgumentException(\"Invalid version format\");\n+            }\n+            this.version = version;\n+        }\n \n-        if (versionSupplied.length < 3 || versionSupplied.length > 4) {\n-            UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n-            return false;\n-        } else {\n-            JsApiVersionClass mJsSuppliedVersion = new JsApiVersionClass();\n+        @Override\n+        public int compareTo(Version that) {\n+            if (that == null) {\n+                return 1;\n+            }\n \n-            mJsSuppliedVersion.major = Integer.parseInt(versionSupplied[0]);\n-            mJsSuppliedVersion.minor = Integer.parseInt(versionSupplied[1]);\n-            mJsSuppliedVersion.patch = Integer.parseInt(versionSupplied[2]);\n+            String[] thisParts = this.get().split(\"\\\\.\");\n+            String[] thatParts = that.get().split(\"\\\\.\");\n+            int length = Math.max(thisParts.length, thatParts.length);\n \n-            if (mJsCurrentVersion.major > mJsSuppliedVersion.major || mJsCurrentVersion.minor > mJsSuppliedVersion.minor || mJsCurrentVersion.patch > mJsSuppliedVersion.patch) {\n-                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.update_js_api_version, sCurrentJsApiVersion), false);\n-                return false;\n-            } else if (mJsCurrentVersion.major == mJsSuppliedVersion.major && mJsCurrentVersion.minor == mJsSuppliedVersion.minor && mJsCurrentVersion.patch == mJsSuppliedVersion.patch) {\n+            for (int i = 0; i < length; i++) {\n+                int thisPart = i < thisParts.length ? Integer.parseInt(thisParts[i]) : 0;\n+                int thatPart = i < thatParts.length ? Integer.parseInt(thatParts[i]) : 0;\n+\n+                if (thisPart < thatPart) {\n+                    return -1;\n+                }\n+\n+                if (thisPart > thatPart) {\n+                    return 1;\n+                }\n+            }\n+            return 0;\n+        }\n+\n+        @Override\n+        public boolean equals(Object that) {\n+            if (this == that) {\n                 return true;\n-            } else {\n-                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, sCurrentJsApiVersion), false);\n+            }\n+\n+            if (that == null) {\n                 return false;\n             }\n+\n+            if (this.getClass() != that.getClass()) {\n+                return false;\n+            }\n+\n+            return this.compareTo((Version) that) == 0;\n+        }\n+    }\n+\n+    private boolean requireApiVersion(String apiVer) {\n+\n+        Version mVersionCurrent = new Version(sCurrentJsApiVersion);\n+        Version mVersionSupplied = new Version(apiVer);\n+\n+        if (mVersionCurrent.equals(mVersionSupplied)) {\n+            return true;\n+        } else if (mVersionCurrent.compareTo(mVersionSupplied) == 1) {   // mCurrent > mSupplied", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "154910791241df838c69aa721cede43d664c2983"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDU4MTcyOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo0MToxN1rOGq_vxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDowMDo1OFrOGrMZQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNzc5Nw==", "bodyText": "Do you need validation here? What happens with an invalid version?", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r447737797", "createdAt": "2020-06-30T14:41:17Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3449,6 +3470,49 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    // show developer contact if js api used in card is deprecated\n+    private void showDeveloperContact() {\n+        View parentLayout = findViewById(android.R.id.content);\n+        String snackbarMsg;\n+        if (TextUtils.isEmpty(mCardSuppliedDeveloperContact)) {\n+            snackbarMsg = getString(R.string.api_version_no_developer_contact);\n+        } else {\n+            snackbarMsg = getString(R.string.api_version_developer_contact, mCardSuppliedDeveloperContact );\n+        }\n+\n+        Snackbar snackbar = Snackbar.make(parentLayout, snackbarMsg, Snackbar.LENGTH_LONG);\n+        View snackbarView = snackbar.getView();\n+        TextView snackTextView = snackbarView.findViewById(com.google.android.material.R.id.snackbar_text);\n+        snackTextView.setTextColor(Color.WHITE);\n+        snackTextView.setMaxLines(3);\n+\n+        snackbar.setActionTextColor(Color.MAGENTA)\n+                .setAction(getString(R.string.reviewer_invalid_api_version_visit_documentation), view -> {\n+                    openUrl(Uri.parse(\"https://github.com/ankidroid/Anki-Android/wiki\"));\n+                });\n+\n+        snackbar.show();\n+    }\n+\n+    /**\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     */\n+    private boolean requireApiVersion(String apiVer) {\n+\n+        Version mVersionCurrent = Version.valueOf(sCurrentJsApiVersion);\n+        Version mVersionSupplied = Version.valueOf(apiVer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cfd5e5ab6a0883080851c24be3d251a4f0af22d"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg3OTYxNQ==", "bodyText": "I think apiVer passed to valueof so may be Sem Ver library may have internal check for invalid input.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r447879615", "createdAt": "2020-06-30T18:03:37Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3449,6 +3470,49 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    // show developer contact if js api used in card is deprecated\n+    private void showDeveloperContact() {\n+        View parentLayout = findViewById(android.R.id.content);\n+        String snackbarMsg;\n+        if (TextUtils.isEmpty(mCardSuppliedDeveloperContact)) {\n+            snackbarMsg = getString(R.string.api_version_no_developer_contact);\n+        } else {\n+            snackbarMsg = getString(R.string.api_version_developer_contact, mCardSuppliedDeveloperContact );\n+        }\n+\n+        Snackbar snackbar = Snackbar.make(parentLayout, snackbarMsg, Snackbar.LENGTH_LONG);\n+        View snackbarView = snackbar.getView();\n+        TextView snackTextView = snackbarView.findViewById(com.google.android.material.R.id.snackbar_text);\n+        snackTextView.setTextColor(Color.WHITE);\n+        snackTextView.setMaxLines(3);\n+\n+        snackbar.setActionTextColor(Color.MAGENTA)\n+                .setAction(getString(R.string.reviewer_invalid_api_version_visit_documentation), view -> {\n+                    openUrl(Uri.parse(\"https://github.com/ankidroid/Anki-Android/wiki\"));\n+                });\n+\n+        snackbar.show();\n+    }\n+\n+    /**\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     */\n+    private boolean requireApiVersion(String apiVer) {\n+\n+        Version mVersionCurrent = Version.valueOf(sCurrentJsApiVersion);\n+        Version mVersionSupplied = Version.valueOf(apiVer);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNzc5Nw=="}, "originalCommit": {"oid": "3cfd5e5ab6a0883080851c24be3d251a4f0af22d"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MjA4NA==", "bodyText": "What happens? Does it throw an exception? If not, which code path would it take?", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r447882084", "createdAt": "2020-06-30T18:07:58Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3449,6 +3470,49 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    // show developer contact if js api used in card is deprecated\n+    private void showDeveloperContact() {\n+        View parentLayout = findViewById(android.R.id.content);\n+        String snackbarMsg;\n+        if (TextUtils.isEmpty(mCardSuppliedDeveloperContact)) {\n+            snackbarMsg = getString(R.string.api_version_no_developer_contact);\n+        } else {\n+            snackbarMsg = getString(R.string.api_version_developer_contact, mCardSuppliedDeveloperContact );\n+        }\n+\n+        Snackbar snackbar = Snackbar.make(parentLayout, snackbarMsg, Snackbar.LENGTH_LONG);\n+        View snackbarView = snackbar.getView();\n+        TextView snackTextView = snackbarView.findViewById(com.google.android.material.R.id.snackbar_text);\n+        snackTextView.setTextColor(Color.WHITE);\n+        snackTextView.setMaxLines(3);\n+\n+        snackbar.setActionTextColor(Color.MAGENTA)\n+                .setAction(getString(R.string.reviewer_invalid_api_version_visit_documentation), view -> {\n+                    openUrl(Uri.parse(\"https://github.com/ankidroid/Anki-Android/wiki\"));\n+                });\n+\n+        snackbar.show();\n+    }\n+\n+    /**\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     */\n+    private boolean requireApiVersion(String apiVer) {\n+\n+        Version mVersionCurrent = Version.valueOf(sCurrentJsApiVersion);\n+        Version mVersionSupplied = Version.valueOf(apiVer);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNzc5Nw=="}, "originalCommit": {"oid": "3cfd5e5ab6a0883080851c24be3d251a4f0af22d"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk0NTAyNg==", "bodyText": "Exception handling to be implemented.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r447945026", "createdAt": "2020-06-30T20:00:58Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3449,6 +3470,49 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    // show developer contact if js api used in card is deprecated\n+    private void showDeveloperContact() {\n+        View parentLayout = findViewById(android.R.id.content);\n+        String snackbarMsg;\n+        if (TextUtils.isEmpty(mCardSuppliedDeveloperContact)) {\n+            snackbarMsg = getString(R.string.api_version_no_developer_contact);\n+        } else {\n+            snackbarMsg = getString(R.string.api_version_developer_contact, mCardSuppliedDeveloperContact );\n+        }\n+\n+        Snackbar snackbar = Snackbar.make(parentLayout, snackbarMsg, Snackbar.LENGTH_LONG);\n+        View snackbarView = snackbar.getView();\n+        TextView snackTextView = snackbarView.findViewById(com.google.android.material.R.id.snackbar_text);\n+        snackTextView.setTextColor(Color.WHITE);\n+        snackTextView.setMaxLines(3);\n+\n+        snackbar.setActionTextColor(Color.MAGENTA)\n+                .setAction(getString(R.string.reviewer_invalid_api_version_visit_documentation), view -> {\n+                    openUrl(Uri.parse(\"https://github.com/ankidroid/Anki-Android/wiki\"));\n+                });\n+\n+        snackbar.show();\n+    }\n+\n+    /**\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     */\n+    private boolean requireApiVersion(String apiVer) {\n+\n+        Version mVersionCurrent = Version.valueOf(sCurrentJsApiVersion);\n+        Version mVersionSupplied = Version.valueOf(apiVer);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNzc5Nw=="}, "originalCommit": {"oid": "3cfd5e5ab6a0883080851c24be3d251a4f0af22d"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDU4NzQwOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/res/values/02-strings.xml", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo0MjozMVrOGq_zTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDowMDozMFrOGrMYRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczODcwMw==", "bodyText": "We'll need to go through these strings and make them user-friendly. Can't think about how to do this right now.\nPossibly with error codes that can be given to a developer.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r447738703", "createdAt": "2020-06-30T14:42:31Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/res/values/02-strings.xml", "diffHunk": "@@ -274,6 +274,14 @@\n     <!-- in options menu & Navigation Drawer -->\n     <string name=\"ankidroid_turn_on_fullscreen_nav_drawer\">Please turn on fullscreen to use Show Navigation Drawer using JavaScript.</string>\n     <string name=\"ankidroid_turn_on_fullscreen_options_menu\">Please turn on fullscreen to use Show Options Menu using JavaScript.</string>\n+\n+    <string name=\"api_version_developer_contact\">This card uses unsupported AnkiDroid features. Contact the deck creator at %s, or view the wiki to resolve this manually.</string>\n+    <string name=\"api_version_no_developer_contact\">This card uses unsupported AnkiDroid features. View the wiki to resolve this manually.</string>\n+    <string name=\"invalid_json_data\">Card provided invalid data. %s</string>\n+    <string name=\"valid_js_api_version\">Please provide a valid JavaScript API. Current API version is %s</string>\n+    <string name=\"update_js_api_version\">Please update JavaScript API version. Current API version is %s</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cfd5e5ab6a0883080851c24be3d251a4f0af22d"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MDI3Nw==", "bodyText": "So error code should also defined.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r447880277", "createdAt": "2020-06-30T18:04:50Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/res/values/02-strings.xml", "diffHunk": "@@ -274,6 +274,14 @@\n     <!-- in options menu & Navigation Drawer -->\n     <string name=\"ankidroid_turn_on_fullscreen_nav_drawer\">Please turn on fullscreen to use Show Navigation Drawer using JavaScript.</string>\n     <string name=\"ankidroid_turn_on_fullscreen_options_menu\">Please turn on fullscreen to use Show Options Menu using JavaScript.</string>\n+\n+    <string name=\"api_version_developer_contact\">This card uses unsupported AnkiDroid features. Contact the deck creator at %s, or view the wiki to resolve this manually.</string>\n+    <string name=\"api_version_no_developer_contact\">This card uses unsupported AnkiDroid features. View the wiki to resolve this manually.</string>\n+    <string name=\"invalid_json_data\">Card provided invalid data. %s</string>\n+    <string name=\"valid_js_api_version\">Please provide a valid JavaScript API. Current API version is %s</string>\n+    <string name=\"update_js_api_version\">Please update JavaScript API version. Current API version is %s</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczODcwMw=="}, "originalCommit": {"oid": "3cfd5e5ab6a0883080851c24be3d251a4f0af22d"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MjY5NQ==", "bodyText": "We need some way of telling a user \"something went wrong, it's not AnkiDroid's fault, please contact the deck author\", but with additional information for the deck author to handle.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r447882695", "createdAt": "2020-06-30T18:09:07Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/res/values/02-strings.xml", "diffHunk": "@@ -274,6 +274,14 @@\n     <!-- in options menu & Navigation Drawer -->\n     <string name=\"ankidroid_turn_on_fullscreen_nav_drawer\">Please turn on fullscreen to use Show Navigation Drawer using JavaScript.</string>\n     <string name=\"ankidroid_turn_on_fullscreen_options_menu\">Please turn on fullscreen to use Show Options Menu using JavaScript.</string>\n+\n+    <string name=\"api_version_developer_contact\">This card uses unsupported AnkiDroid features. Contact the deck creator at %s, or view the wiki to resolve this manually.</string>\n+    <string name=\"api_version_no_developer_contact\">This card uses unsupported AnkiDroid features. View the wiki to resolve this manually.</string>\n+    <string name=\"invalid_json_data\">Card provided invalid data. %s</string>\n+    <string name=\"valid_js_api_version\">Please provide a valid JavaScript API. Current API version is %s</string>\n+    <string name=\"update_js_api_version\">Please update JavaScript API version. Current API version is %s</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczODcwMw=="}, "originalCommit": {"oid": "3cfd5e5ab6a0883080851c24be3d251a4f0af22d"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk0NDc3Mw==", "bodyText": "Okay, I will update it", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r447944773", "createdAt": "2020-06-30T20:00:30Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/res/values/02-strings.xml", "diffHunk": "@@ -274,6 +274,14 @@\n     <!-- in options menu & Navigation Drawer -->\n     <string name=\"ankidroid_turn_on_fullscreen_nav_drawer\">Please turn on fullscreen to use Show Navigation Drawer using JavaScript.</string>\n     <string name=\"ankidroid_turn_on_fullscreen_options_menu\">Please turn on fullscreen to use Show Options Menu using JavaScript.</string>\n+\n+    <string name=\"api_version_developer_contact\">This card uses unsupported AnkiDroid features. Contact the deck creator at %s, or view the wiki to resolve this manually.</string>\n+    <string name=\"api_version_no_developer_contact\">This card uses unsupported AnkiDroid features. View the wiki to resolve this manually.</string>\n+    <string name=\"invalid_json_data\">Card provided invalid data. %s</string>\n+    <string name=\"valid_js_api_version\">Please provide a valid JavaScript API. Current API version is %s</string>\n+    <string name=\"update_js_api_version\">Please update JavaScript API version. Current API version is %s</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczODcwMw=="}, "originalCommit": {"oid": "3cfd5e5ab6a0883080851c24be3d251a4f0af22d"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTUxMDg2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxODoxMToxNFrOGrIqJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTo1OTo1NFrOGrMW5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MzgxMg==", "bodyText": "@mikehardy - I don't know enough about semVer to handle this one. What do we want here? We're going to get a lot of API version increases, and at what point do we want to say \"break all API clients\", and how do we provide a warning, or allow clients to update while keeping the legacy code going.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r447883812", "createdAt": "2020-06-30T18:11:14Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3449,6 +3470,49 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    // show developer contact if js api used in card is deprecated\n+    private void showDeveloperContact() {\n+        View parentLayout = findViewById(android.R.id.content);\n+        String snackbarMsg;\n+        if (TextUtils.isEmpty(mCardSuppliedDeveloperContact)) {\n+            snackbarMsg = getString(R.string.api_version_no_developer_contact);\n+        } else {\n+            snackbarMsg = getString(R.string.api_version_developer_contact, mCardSuppliedDeveloperContact );\n+        }\n+\n+        Snackbar snackbar = Snackbar.make(parentLayout, snackbarMsg, Snackbar.LENGTH_LONG);\n+        View snackbarView = snackbar.getView();\n+        TextView snackTextView = snackbarView.findViewById(com.google.android.material.R.id.snackbar_text);\n+        snackTextView.setTextColor(Color.WHITE);\n+        snackTextView.setMaxLines(3);\n+\n+        snackbar.setActionTextColor(Color.MAGENTA)\n+                .setAction(getString(R.string.reviewer_invalid_api_version_visit_documentation), view -> {\n+                    openUrl(Uri.parse(\"https://github.com/ankidroid/Anki-Android/wiki\"));\n+                });\n+\n+        snackbar.show();\n+    }\n+\n+    /**\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     */\n+    private boolean requireApiVersion(String apiVer) {\n+\n+        Version mVersionCurrent = Version.valueOf(sCurrentJsApiVersion);\n+        Version mVersionSupplied = Version.valueOf(apiVer);\n+\n+        if (mVersionCurrent.equals(mVersionSupplied)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cfd5e5ab6a0883080851c24be3d251a4f0af22d"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg5ODIxNQ==", "bodyText": "great question. So semVer allows for \"compatible version range specification\".\nYou always assume the requested version range will work\nRanges may be unbounded, saying just \"anything higher than X.Y.Z is good\". In practice most ranges are like that.\nYou just do a quick match and and if the requested API range is within our current API range, it's good to go. If it is not, then you say \"Current AnkiDroid Javascript API is incompatible with the range requested by your template. Contact the author XXX or click here for more info\" (or similar)\nThis link https://nodesource.com/blog/semver-a-primer/ has a good explanation of \"Semver Ranges\" with examples of how they are specified and what they mean.\nSemver by itself is actually not useful without the range specification and comparison.\nThank goodness the library I pointed to implements it already or it would be nasty :-) https://github.com/zafarkhaja/jsemver#semver-expressions-api-ranges", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r447898215", "createdAt": "2020-06-30T18:35:56Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3449,6 +3470,49 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    // show developer contact if js api used in card is deprecated\n+    private void showDeveloperContact() {\n+        View parentLayout = findViewById(android.R.id.content);\n+        String snackbarMsg;\n+        if (TextUtils.isEmpty(mCardSuppliedDeveloperContact)) {\n+            snackbarMsg = getString(R.string.api_version_no_developer_contact);\n+        } else {\n+            snackbarMsg = getString(R.string.api_version_developer_contact, mCardSuppliedDeveloperContact );\n+        }\n+\n+        Snackbar snackbar = Snackbar.make(parentLayout, snackbarMsg, Snackbar.LENGTH_LONG);\n+        View snackbarView = snackbar.getView();\n+        TextView snackTextView = snackbarView.findViewById(com.google.android.material.R.id.snackbar_text);\n+        snackTextView.setTextColor(Color.WHITE);\n+        snackTextView.setMaxLines(3);\n+\n+        snackbar.setActionTextColor(Color.MAGENTA)\n+                .setAction(getString(R.string.reviewer_invalid_api_version_visit_documentation), view -> {\n+                    openUrl(Uri.parse(\"https://github.com/ankidroid/Anki-Android/wiki\"));\n+                });\n+\n+        snackbar.show();\n+    }\n+\n+    /**\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     */\n+    private boolean requireApiVersion(String apiVer) {\n+\n+        Version mVersionCurrent = Version.valueOf(sCurrentJsApiVersion);\n+        Version mVersionSupplied = Version.valueOf(apiVer);\n+\n+        if (mVersionCurrent.equals(mVersionSupplied)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MzgxMg=="}, "originalCommit": {"oid": "3cfd5e5ab6a0883080851c24be3d251a4f0af22d"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk0NDQyMg==", "bodyText": "I will update in between ranges.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r447944422", "createdAt": "2020-06-30T19:59:54Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3449,6 +3470,49 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    // show developer contact if js api used in card is deprecated\n+    private void showDeveloperContact() {\n+        View parentLayout = findViewById(android.R.id.content);\n+        String snackbarMsg;\n+        if (TextUtils.isEmpty(mCardSuppliedDeveloperContact)) {\n+            snackbarMsg = getString(R.string.api_version_no_developer_contact);\n+        } else {\n+            snackbarMsg = getString(R.string.api_version_developer_contact, mCardSuppliedDeveloperContact );\n+        }\n+\n+        Snackbar snackbar = Snackbar.make(parentLayout, snackbarMsg, Snackbar.LENGTH_LONG);\n+        View snackbarView = snackbar.getView();\n+        TextView snackTextView = snackbarView.findViewById(com.google.android.material.R.id.snackbar_text);\n+        snackTextView.setTextColor(Color.WHITE);\n+        snackTextView.setMaxLines(3);\n+\n+        snackbar.setActionTextColor(Color.MAGENTA)\n+                .setAction(getString(R.string.reviewer_invalid_api_version_visit_documentation), view -> {\n+                    openUrl(Uri.parse(\"https://github.com/ankidroid/Anki-Android/wiki\"));\n+                });\n+\n+        snackbar.show();\n+    }\n+\n+    /**\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     */\n+    private boolean requireApiVersion(String apiVer) {\n+\n+        Version mVersionCurrent = Version.valueOf(sCurrentJsApiVersion);\n+        Version mVersionSupplied = Version.valueOf(apiVer);\n+\n+        if (mVersionCurrent.equals(mVersionSupplied)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MzgxMg=="}, "originalCommit": {"oid": "3cfd5e5ab6a0883080851c24be3d251a4f0af22d"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NjIxOTI5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMTozMjo1NFrOGr2D1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMTozMjo1NFrOGr2D1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYyNzY2OQ==", "bodyText": "Need improvements", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r448627669", "createdAt": "2020-07-01T21:32:54Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3449,6 +3474,99 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    /*\n+     * see 02-strings.xml\n+     * Show Error code when mark card or flag card unsupported\n+     * 1 - mark card\n+     * 2 - flag card\n+     *\n+     * show developer contact if js api used in card is deprecated\n+     */\n+    private void showDeveloperContact(int errorCode) {\n+        String errorMsg = \"\";\n+        switch (errorCode) {\n+            case 1:\n+                errorMsg = getString(R.string.anki_js_mark_card_not_supported);\n+                break;\n+            case 2:\n+                errorMsg = getString(R.string.anki_js_flag_card_not_supported);\n+                break;\n+            default:\n+                errorMsg = getString(R.string.anki_js_unknown_error);\n+                break;\n+        }\n+\n+        View parentLayout = findViewById(android.R.id.content);\n+        String snackbarMsg;\n+        snackbarMsg = getString(R.string.api_version_developer_contact, mCardSuppliedDeveloperContact, errorMsg);\n+\n+        Snackbar snackbar = Snackbar.make(parentLayout, snackbarMsg, Snackbar.LENGTH_LONG);\n+        View snackbarView = snackbar.getView();\n+        TextView snackTextView = snackbarView.findViewById(com.google.android.material.R.id.snackbar_text);\n+        snackTextView.setTextColor(Color.WHITE);\n+        snackTextView.setMaxLines(3);\n+\n+        snackbar.setActionTextColor(Color.MAGENTA)\n+                .setAction(getString(R.string.reviewer_invalid_api_version_visit_documentation), view -> {\n+                    openUrl(Uri.parse(\"https://github.com/ankidroid/Anki-Android/wiki\"));\n+                });\n+\n+        snackbar.show();\n+    }\n+\n+    /**\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     */\n+    private boolean requireApiVersion(String apiVer, String apiDevContact) {\n+        try {\n+\n+            if (TextUtils.isEmpty(apiDevContact)) {\n+                return false;\n+            }\n+\n+            Version mVersionCurrent = Version.valueOf(sCurrentJsApiVersion);\n+            Version mVersionSupplied = Version.valueOf(apiVer);\n+\n+            /*\n+            * if api major version equals to supplied major version then return true and also check for minor version and patch version\n+            * show toast for update and contact developer if need updates\n+            * otherwise return false\n+            */\n+            if (mVersionCurrent.equals(mVersionSupplied)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c51dc2b6fa4aa9215dddfda3b8aa23db2207ed50"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTQ5MDQzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzo1OTo1NVrOG2fdsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxMTozNjowMlrOG3EWzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5MTc5Mw==", "bodyText": "These are reset on init(), which may not be called by the next card, persisting an old value", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r459791793", "createdAt": "2020-07-23T23:59:55Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -189,6 +194,15 @@\n \n     // ETA\n     private int eta;\n+    // JavaScript Versioning\n+    protected String mCardSuppliedApiVersion = \"\";\n+    protected String mCardSuppliedDeveloperContact  = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80079d9b660589e4d86ffed39e5a958390522f47"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NTMwNg==", "bodyText": "It should be checked on each card because if card edited in middle of deck review and previous persistence data will help to complete the review. But after closing and opening the deck and it will show error.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r460395306", "createdAt": "2020-07-25T11:24:03Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -189,6 +194,15 @@\n \n     // ETA\n     private int eta;\n+    // JavaScript Versioning\n+    protected String mCardSuppliedApiVersion = \"\";\n+    protected String mCardSuppliedDeveloperContact  = \"\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5MTc5Mw=="}, "originalCommit": {"oid": "80079d9b660589e4d86ffed39e5a958390522f47"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjIzNw==", "bodyText": "Also it can be implemented as in javascript by deck developer to stop execution every time of init()\n<script>\nvar apiEnabled = false;\n\nif (!apiEnabled) {\nvar jsApi = {\"version\" : \"0.0.1\", \"developer\" : \"dev@mail.com\"};\n\nvar apiStatus = AnkiDroidJS.init(JSON.stringify(jsApi));\n\nvar api = JSON.parse(apiStatus);\n\nif (api['markCard'] && api['toggleFlag']) {\n       apiEnabled = true;\n}\n\nconsole.log(apiStatus);\n}\n</script>\nAnd storing apiEnabled in persistence data help in stopping again execution of init().", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r460396237", "createdAt": "2020-07-25T11:36:02Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -189,6 +194,15 @@\n \n     // ETA\n     private int eta;\n+    // JavaScript Versioning\n+    protected String mCardSuppliedApiVersion = \"\";\n+    protected String mCardSuppliedDeveloperContact  = \"\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5MTc5Mw=="}, "originalCommit": {"oid": "80079d9b660589e4d86ffed39e5a958390522f47"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTQ5MTcwOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMDowMDozM1rOG2febw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxOTo0ODo1N1rOG3G6gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5MTk4Mw==", "bodyText": "ErrorCode would be better behind either an enum or an IntDef", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r459791983", "createdAt": "2020-07-24T00:00:33Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3450,6 +3481,87 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    /*\n+     * see 02-strings.xml\n+     * Show Error code when mark card or flag card unsupported\n+     * 1 - mark card\n+     * 2 - flag card\n+     *\n+     * show developer contact if js api used in card is deprecated\n+     */\n+    private void showDeveloperContact(int errorCode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80079d9b660589e4d86ffed39e5a958390522f47"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjM0Ng==", "bodyText": "This part need help.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r460396346", "createdAt": "2020-07-25T11:37:11Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3450,6 +3481,87 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    /*\n+     * see 02-strings.xml\n+     * Show Error code when mark card or flag card unsupported\n+     * 1 - mark card\n+     * 2 - flag card\n+     *\n+     * show developer contact if js api used in card is deprecated\n+     */\n+    private void showDeveloperContact(int errorCode) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5MTk4Mw=="}, "originalCommit": {"oid": "80079d9b660589e4d86ffed39e5a958390522f47"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQzODE0NQ==", "bodyText": "I don't think we need it now we're no longer switching on errorCode", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r460438145", "createdAt": "2020-07-25T19:48:57Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3450,6 +3481,87 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    /*\n+     * see 02-strings.xml\n+     * Show Error code when mark card or flag card unsupported\n+     * 1 - mark card\n+     * 2 - flag card\n+     *\n+     * show developer contact if js api used in card is deprecated\n+     */\n+    private void showDeveloperContact(int errorCode) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5MTk4Mw=="}, "originalCommit": {"oid": "80079d9b660589e4d86ffed39e5a958390522f47"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTUxNzA4OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMDoxNDo1MFrOG2ftFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMDoxNDo1MFrOG2ftFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5NTczMg==", "bodyText": "Can we extract this pattern to a method - it'll cut down on repetition and focus on what we need", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r459795732", "createdAt": "2020-07-24T00:14:50Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3189,11 +3203,28 @@ private boolean filterUrl(String url) {\n             }\n             // mark card using javascript\n             if (url.startsWith(\"signal:mark_current_card\")) {\n-                executeCommand(COMMAND_MARK);\n+                if (mJsApiListMap.get(\"markCard\") == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80079d9b660589e4d86ffed39e5a958390522f47"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTUyMjk1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMDoxODoxNlrOG2fwlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxOTo1MToyMFrOG3G84w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5NjYzMQ==", "bodyText": "Might want to extract this to a method - can significantly cut down on code as you can return without a break", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r459796631", "createdAt": "2020-07-24T00:18:16Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3450,6 +3481,87 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    /*\n+     * see 02-strings.xml\n+     * Show Error code when mark card or flag card unsupported\n+     * 1 - mark card\n+     * 2 - flag card\n+     *\n+     * show developer contact if js api used in card is deprecated\n+     */\n+    private void showDeveloperContact(int errorCode) {\n+        String errorMsg = \"\";\n+        switch (errorCode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80079d9b660589e4d86ffed39e5a958390522f47"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQzODc1NQ==", "bodyText": "No need - was removed in a later PR", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r460438755", "createdAt": "2020-07-25T19:51:20Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3450,6 +3481,87 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    /*\n+     * see 02-strings.xml\n+     * Show Error code when mark card or flag card unsupported\n+     * 1 - mark card\n+     * 2 - flag card\n+     *\n+     * show developer contact if js api used in card is deprecated\n+     */\n+    private void showDeveloperContact(int errorCode) {\n+        String errorMsg = \"\";\n+        switch (errorCode) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5NjYzMQ=="}, "originalCommit": {"oid": "80079d9b660589e4d86ffed39e5a958390522f47"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTUyMzk0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMDoxODo1NVrOG2fxJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMjowOTo0MlrOG3L4WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5Njc3Mg==", "bodyText": "These throw:\n     * @throws IllegalArgumentException if the input string is {@code NULL} or empty\n     * @throws ParseException when invalid version string is provided\n     * @throws UnexpectedCharacterException is a special case of {@code ParseException}\n\nDo we want to handle any of these explicitly?", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r459796772", "createdAt": "2020-07-24T00:18:55Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3450,6 +3481,87 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    /*\n+     * see 02-strings.xml\n+     * Show Error code when mark card or flag card unsupported\n+     * 1 - mark card\n+     * 2 - flag card\n+     *\n+     * show developer contact if js api used in card is deprecated\n+     */\n+    private void showDeveloperContact(int errorCode) {\n+        String errorMsg = \"\";\n+        switch (errorCode) {\n+            case 1:\n+                errorMsg = getString(R.string.anki_js_not_implemented);\n+                break;\n+            case 2:\n+                errorMsg = getString(R.string.anki_js_mark_card_not_supported);\n+                break;\n+            case 3:\n+                errorMsg = getString(R.string.anki_js_flag_card_not_supported);\n+                break;\n+            default:\n+                errorMsg = getString(R.string.anki_js_unknown_error);\n+                break;\n+        }\n+\n+        View parentLayout = findViewById(android.R.id.content);\n+        String snackbarMsg;\n+        snackbarMsg = getString(R.string.api_version_developer_contact, mCardSuppliedDeveloperContact, errorMsg);\n+\n+        Snackbar snackbar = Snackbar.make(parentLayout, snackbarMsg, Snackbar.LENGTH_LONG);\n+        View snackbarView = snackbar.getView();\n+        TextView snackTextView = snackbarView.findViewById(com.google.android.material.R.id.snackbar_text);\n+        snackTextView.setTextColor(Color.WHITE);\n+        snackTextView.setMaxLines(3);\n+\n+        snackbar.setActionTextColor(Color.MAGENTA)\n+                .setAction(getString(R.string.reviewer_invalid_api_version_visit_documentation), view -> {\n+                    openUrl(Uri.parse(\"https://github.com/ankidroid/Anki-Android/wiki\"));\n+                });\n+\n+        snackbar.show();\n+    }\n+\n+    /**\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     */\n+    private boolean requireApiVersion(String apiVer, String apiDevContact) {\n+        try {\n+\n+            if (TextUtils.isEmpty(apiDevContact)) {\n+                return false;\n+            }\n+\n+            Version mVersionCurrent = Version.valueOf(sCurrentJsApiVersion);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80079d9b660589e4d86ffed39e5a958390522f47"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5Njc3OQ==", "bodyText": "Should it also be put in try catch block?\nBecause sCurrentJsApiVersion and apiVer is set to \"0.0.1\" and \"\".", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r460396779", "createdAt": "2020-07-25T11:43:05Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3450,6 +3481,87 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    /*\n+     * see 02-strings.xml\n+     * Show Error code when mark card or flag card unsupported\n+     * 1 - mark card\n+     * 2 - flag card\n+     *\n+     * show developer contact if js api used in card is deprecated\n+     */\n+    private void showDeveloperContact(int errorCode) {\n+        String errorMsg = \"\";\n+        switch (errorCode) {\n+            case 1:\n+                errorMsg = getString(R.string.anki_js_not_implemented);\n+                break;\n+            case 2:\n+                errorMsg = getString(R.string.anki_js_mark_card_not_supported);\n+                break;\n+            case 3:\n+                errorMsg = getString(R.string.anki_js_flag_card_not_supported);\n+                break;\n+            default:\n+                errorMsg = getString(R.string.anki_js_unknown_error);\n+                break;\n+        }\n+\n+        View parentLayout = findViewById(android.R.id.content);\n+        String snackbarMsg;\n+        snackbarMsg = getString(R.string.api_version_developer_contact, mCardSuppliedDeveloperContact, errorMsg);\n+\n+        Snackbar snackbar = Snackbar.make(parentLayout, snackbarMsg, Snackbar.LENGTH_LONG);\n+        View snackbarView = snackbar.getView();\n+        TextView snackTextView = snackbarView.findViewById(com.google.android.material.R.id.snackbar_text);\n+        snackTextView.setTextColor(Color.WHITE);\n+        snackTextView.setMaxLines(3);\n+\n+        snackbar.setActionTextColor(Color.MAGENTA)\n+                .setAction(getString(R.string.reviewer_invalid_api_version_visit_documentation), view -> {\n+                    openUrl(Uri.parse(\"https://github.com/ankidroid/Anki-Android/wiki\"));\n+                });\n+\n+        snackbar.show();\n+    }\n+\n+    /**\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     */\n+    private boolean requireApiVersion(String apiVer, String apiDevContact) {\n+        try {\n+\n+            if (TextUtils.isEmpty(apiDevContact)) {\n+                return false;\n+            }\n+\n+            Version mVersionCurrent = Version.valueOf(sCurrentJsApiVersion);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5Njc3Mg=="}, "originalCommit": {"oid": "80079d9b660589e4d86ffed39e5a958390522f47"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NzEyMg==", "bodyText": "This part need help.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r460397122", "createdAt": "2020-07-25T11:47:26Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3450,6 +3481,87 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    /*\n+     * see 02-strings.xml\n+     * Show Error code when mark card or flag card unsupported\n+     * 1 - mark card\n+     * 2 - flag card\n+     *\n+     * show developer contact if js api used in card is deprecated\n+     */\n+    private void showDeveloperContact(int errorCode) {\n+        String errorMsg = \"\";\n+        switch (errorCode) {\n+            case 1:\n+                errorMsg = getString(R.string.anki_js_not_implemented);\n+                break;\n+            case 2:\n+                errorMsg = getString(R.string.anki_js_mark_card_not_supported);\n+                break;\n+            case 3:\n+                errorMsg = getString(R.string.anki_js_flag_card_not_supported);\n+                break;\n+            default:\n+                errorMsg = getString(R.string.anki_js_unknown_error);\n+                break;\n+        }\n+\n+        View parentLayout = findViewById(android.R.id.content);\n+        String snackbarMsg;\n+        snackbarMsg = getString(R.string.api_version_developer_contact, mCardSuppliedDeveloperContact, errorMsg);\n+\n+        Snackbar snackbar = Snackbar.make(parentLayout, snackbarMsg, Snackbar.LENGTH_LONG);\n+        View snackbarView = snackbar.getView();\n+        TextView snackTextView = snackbarView.findViewById(com.google.android.material.R.id.snackbar_text);\n+        snackTextView.setTextColor(Color.WHITE);\n+        snackTextView.setMaxLines(3);\n+\n+        snackbar.setActionTextColor(Color.MAGENTA)\n+                .setAction(getString(R.string.reviewer_invalid_api_version_visit_documentation), view -> {\n+                    openUrl(Uri.parse(\"https://github.com/ankidroid/Anki-Android/wiki\"));\n+                });\n+\n+        snackbar.show();\n+    }\n+\n+    /**\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     */\n+    private boolean requireApiVersion(String apiVer, String apiDevContact) {\n+        try {\n+\n+            if (TextUtils.isEmpty(apiDevContact)) {\n+                return false;\n+            }\n+\n+            Version mVersionCurrent = Version.valueOf(sCurrentJsApiVersion);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5Njc3Mg=="}, "originalCommit": {"oid": "80079d9b660589e4d86ffed39e5a958390522f47"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQzODYwOQ==", "bodyText": "Where we set the value we can guarantee it's not going to crash. We need to ensure we know what we're doing if the user supplies us with invalid values", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r460438609", "createdAt": "2020-07-25T19:51:02Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3450,6 +3481,87 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    /*\n+     * see 02-strings.xml\n+     * Show Error code when mark card or flag card unsupported\n+     * 1 - mark card\n+     * 2 - flag card\n+     *\n+     * show developer contact if js api used in card is deprecated\n+     */\n+    private void showDeveloperContact(int errorCode) {\n+        String errorMsg = \"\";\n+        switch (errorCode) {\n+            case 1:\n+                errorMsg = getString(R.string.anki_js_not_implemented);\n+                break;\n+            case 2:\n+                errorMsg = getString(R.string.anki_js_mark_card_not_supported);\n+                break;\n+            case 3:\n+                errorMsg = getString(R.string.anki_js_flag_card_not_supported);\n+                break;\n+            default:\n+                errorMsg = getString(R.string.anki_js_unknown_error);\n+                break;\n+        }\n+\n+        View parentLayout = findViewById(android.R.id.content);\n+        String snackbarMsg;\n+        snackbarMsg = getString(R.string.api_version_developer_contact, mCardSuppliedDeveloperContact, errorMsg);\n+\n+        Snackbar snackbar = Snackbar.make(parentLayout, snackbarMsg, Snackbar.LENGTH_LONG);\n+        View snackbarView = snackbar.getView();\n+        TextView snackTextView = snackbarView.findViewById(com.google.android.material.R.id.snackbar_text);\n+        snackTextView.setTextColor(Color.WHITE);\n+        snackTextView.setMaxLines(3);\n+\n+        snackbar.setActionTextColor(Color.MAGENTA)\n+                .setAction(getString(R.string.reviewer_invalid_api_version_visit_documentation), view -> {\n+                    openUrl(Uri.parse(\"https://github.com/ankidroid/Anki-Android/wiki\"));\n+                });\n+\n+        snackbar.show();\n+    }\n+\n+    /**\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     */\n+    private boolean requireApiVersion(String apiVer, String apiDevContact) {\n+        try {\n+\n+            if (TextUtils.isEmpty(apiDevContact)) {\n+                return false;\n+            }\n+\n+            Version mVersionCurrent = Version.valueOf(sCurrentJsApiVersion);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5Njc3Mg=="}, "originalCommit": {"oid": "80079d9b660589e4d86ffed39e5a958390522f47"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUxOTUxMw==", "bodyText": "In this case the code is wrapped in try catch block twice. So there is still need to check for that?\nAbstractFlashcardViewer.java#L3632\nAbstractFlashcardViewer.java#L3527", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r460519513", "createdAt": "2020-07-26T12:09:42Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3450,6 +3481,87 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    /*\n+     * see 02-strings.xml\n+     * Show Error code when mark card or flag card unsupported\n+     * 1 - mark card\n+     * 2 - flag card\n+     *\n+     * show developer contact if js api used in card is deprecated\n+     */\n+    private void showDeveloperContact(int errorCode) {\n+        String errorMsg = \"\";\n+        switch (errorCode) {\n+            case 1:\n+                errorMsg = getString(R.string.anki_js_not_implemented);\n+                break;\n+            case 2:\n+                errorMsg = getString(R.string.anki_js_mark_card_not_supported);\n+                break;\n+            case 3:\n+                errorMsg = getString(R.string.anki_js_flag_card_not_supported);\n+                break;\n+            default:\n+                errorMsg = getString(R.string.anki_js_unknown_error);\n+                break;\n+        }\n+\n+        View parentLayout = findViewById(android.R.id.content);\n+        String snackbarMsg;\n+        snackbarMsg = getString(R.string.api_version_developer_contact, mCardSuppliedDeveloperContact, errorMsg);\n+\n+        Snackbar snackbar = Snackbar.make(parentLayout, snackbarMsg, Snackbar.LENGTH_LONG);\n+        View snackbarView = snackbar.getView();\n+        TextView snackTextView = snackbarView.findViewById(com.google.android.material.R.id.snackbar_text);\n+        snackTextView.setTextColor(Color.WHITE);\n+        snackTextView.setMaxLines(3);\n+\n+        snackbar.setActionTextColor(Color.MAGENTA)\n+                .setAction(getString(R.string.reviewer_invalid_api_version_visit_documentation), view -> {\n+                    openUrl(Uri.parse(\"https://github.com/ankidroid/Anki-Android/wiki\"));\n+                });\n+\n+        snackbar.show();\n+    }\n+\n+    /**\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     */\n+    private boolean requireApiVersion(String apiVer, String apiDevContact) {\n+        try {\n+\n+            if (TextUtils.isEmpty(apiDevContact)) {\n+                return false;\n+            }\n+\n+            Version mVersionCurrent = Version.valueOf(sCurrentJsApiVersion);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5Njc3Mg=="}, "originalCommit": {"oid": "80079d9b660589e4d86ffed39e5a958390522f47"}, "originalPosition": 129}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTUyNjMwOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMDoyMDoxMFrOG2fyYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMDoyMDoxMFrOG2fyYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5NzA5MQ==", "bodyText": "Might want to consider extracting the magic constants", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r459797091", "createdAt": "2020-07-24T00:20:10Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3189,11 +3203,28 @@ private boolean filterUrl(String url) {\n             }\n             // mark card using javascript\n             if (url.startsWith(\"signal:mark_current_card\")) {\n-                executeCommand(COMMAND_MARK);\n+                if (mJsApiListMap.get(\"markCard\") == null) {\n+                    showDeveloperContact(1);\n+                    return true;\n+                } else if (mJsApiListMap.get(\"markCard\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80079d9b660589e4d86ffed39e5a958390522f47"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTUyNzkyOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMDoyMTowMlrOG2fzNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMjoxNDoyM1rOG3L6Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5NzMwMw==", "bodyText": "This uses the previous values if an exception is thrown", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r459797303", "createdAt": "2020-07-24T00:21:02Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3498,6 +3610,52 @@ protected void showTagsDialog() {\n  */\n     public class JavaScriptFunction {\n \n+        private final Gson sGson = new Gson();\n+        // list of api that can be accessed\n+        private final String[] sApiList = {\"toggleFlag\", \"markCard\"};\n+\n+        // api disabled when valid api version not provided\n+        private void disableJsApi() {\n+            for (int i = 0; i < sApiList.length; i++) {\n+                mJsApiListMap.put(sApiList[i], false);\n+            }\n+        }\n+\n+        // if supplied api version match then enable api\n+        private void enableJsApi() {\n+            for (int i = 0; i < sApiList.length; i++) {\n+                mJsApiListMap.put(sApiList[i], true);\n+            }\n+        }\n+\n+        @JavascriptInterface\n+        public String init(String jsonData) {\n+            JSONObject data;\n+            try {\n+                data = new JSONObject(jsonData);\n+                if (!(data == JSONObject.NULL)) {\n+                    mCardSuppliedApiVersion = data.optString(\"version\", \"\");\n+                    mCardSuppliedDeveloperContact  = data.optString(\"developer\", \"\");\n+                }\n+\n+            } catch (JSONException j) {\n+                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.invalid_json_data, j.getLocalizedMessage()), false);\n+            }\n+\n+            String apiStatusJson = \"\";\n+\n+            if (requireApiVersion(mCardSuppliedApiVersion, mCardSuppliedDeveloperContact)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80079d9b660589e4d86ffed39e5a958390522f47"}, "originalPosition": 198}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUyMDAwNw==", "bodyText": "Yes, but also show error that invalid data provided.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r460520007", "createdAt": "2020-07-26T12:14:23Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3498,6 +3610,52 @@ protected void showTagsDialog() {\n  */\n     public class JavaScriptFunction {\n \n+        private final Gson sGson = new Gson();\n+        // list of api that can be accessed\n+        private final String[] sApiList = {\"toggleFlag\", \"markCard\"};\n+\n+        // api disabled when valid api version not provided\n+        private void disableJsApi() {\n+            for (int i = 0; i < sApiList.length; i++) {\n+                mJsApiListMap.put(sApiList[i], false);\n+            }\n+        }\n+\n+        // if supplied api version match then enable api\n+        private void enableJsApi() {\n+            for (int i = 0; i < sApiList.length; i++) {\n+                mJsApiListMap.put(sApiList[i], true);\n+            }\n+        }\n+\n+        @JavascriptInterface\n+        public String init(String jsonData) {\n+            JSONObject data;\n+            try {\n+                data = new JSONObject(jsonData);\n+                if (!(data == JSONObject.NULL)) {\n+                    mCardSuppliedApiVersion = data.optString(\"version\", \"\");\n+                    mCardSuppliedDeveloperContact  = data.optString(\"developer\", \"\");\n+                }\n+\n+            } catch (JSONException j) {\n+                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.invalid_json_data, j.getLocalizedMessage()), false);\n+            }\n+\n+            String apiStatusJson = \"\";\n+\n+            if (requireApiVersion(mCardSuppliedApiVersion, mCardSuppliedDeveloperContact)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5NzMwMw=="}, "originalCommit": {"oid": "80079d9b660589e4d86ffed39e5a958390522f47"}, "originalPosition": 198}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTUzMDc4OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMDoyMjo1N1rOG2f01g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMDoyMjo1N1rOG2f01g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5NzcxOA==", "bodyText": "Extract the following outside both branches of the if, they're identical on both sides\napiStatusJson = sGson.toJson(mJsApiListMap);\nreturn String.valueOf(apiStatusJson);", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r459797718", "createdAt": "2020-07-24T00:22:57Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3498,6 +3610,52 @@ protected void showTagsDialog() {\n  */\n     public class JavaScriptFunction {\n \n+        private final Gson sGson = new Gson();\n+        // list of api that can be accessed\n+        private final String[] sApiList = {\"toggleFlag\", \"markCard\"};\n+\n+        // api disabled when valid api version not provided\n+        private void disableJsApi() {\n+            for (int i = 0; i < sApiList.length; i++) {\n+                mJsApiListMap.put(sApiList[i], false);\n+            }\n+        }\n+\n+        // if supplied api version match then enable api\n+        private void enableJsApi() {\n+            for (int i = 0; i < sApiList.length; i++) {\n+                mJsApiListMap.put(sApiList[i], true);\n+            }\n+        }\n+\n+        @JavascriptInterface\n+        public String init(String jsonData) {\n+            JSONObject data;\n+            try {\n+                data = new JSONObject(jsonData);\n+                if (!(data == JSONObject.NULL)) {\n+                    mCardSuppliedApiVersion = data.optString(\"version\", \"\");\n+                    mCardSuppliedDeveloperContact  = data.optString(\"developer\", \"\");\n+                }\n+\n+            } catch (JSONException j) {\n+                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.invalid_json_data, j.getLocalizedMessage()), false);\n+            }\n+\n+            String apiStatusJson = \"\";\n+\n+            if (requireApiVersion(mCardSuppliedApiVersion, mCardSuppliedDeveloperContact)) {\n+                enableJsApi();\n+                apiStatusJson = sGson.toJson(mJsApiListMap);\n+            } else {\n+                disableJsApi();\n+                apiStatusJson = sGson.toJson(mJsApiListMap);\n+                return String.valueOf(apiStatusJson);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80079d9b660589e4d86ffed39e5a958390522f47"}, "originalPosition": 205}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTUzNTEzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/res/values/02-strings.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMDoyNTozMlrOG2f3TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMDoyNTozMlrOG2f3TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5ODM0OA==", "bodyText": "You can combine these into one string:\n(Error Code: %d)\nand provide optional strings as additional strings.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r459798348", "createdAt": "2020-07-24T00:25:32Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/res/values/02-strings.xml", "diffHunk": "@@ -279,4 +279,19 @@\n     <string name=\"white_board_image_saved\">Whiteboard image saved to %s</string>\n \n     <string name=\"title_whiteboard_pen_color\">Whiteboard pen color</string>\n+\n+    <string name=\"api_version_developer_contact\">This card uses unsupported AnkiDroid features. Contact developer %s, or view the wiki. %s</string>\n+    <string name=\"invalid_json_data\">Card provided invalid data. %s</string>\n+    <string name=\"valid_js_api_version\">Invalid AnkiDroid JS API version. Contact developer %s, or view wiki</string>\n+    <string name=\"update_js_api_version\">AnkiDroid JS API update available. Contact developer %s, or view wiki</string>\n+    <string name=\"reviewer_invalid_api_version_visit_documentation\">View</string>\n+    <string name=\"update_js_api_patch_version\">AnkiDroid JS API patch update available. Contact developer %s, or view wiki.</string>\n+    <string name=\"update_js_api_minor_version\">AnkiDroid JS API minor update available. Contact developer %s, or view wiki.</string>\n+    <string name=\"js_api_not_implemented\">JS API not implemented to current deck. View wiki.</string>\n+\n+    <!-- Error codes for AnkiDroid JS API-->\n+    <string name=\"anki_js_unknown_error\">(Error Code:0)</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80079d9b660589e4d86ffed39e5a958390522f47"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzkxMTMzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxOTo0NjoxOVrOG3G5pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxOTo0NjoxOVrOG3G5pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQzNzkyNw==", "bodyText": "return mJsApiListMap.get(api) == null;", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r460437927", "createdAt": "2020-07-25T19:46:19Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3481,6 +3489,14 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    // Check if value null\n+    private boolean isAnkiApiNull(String api) {\n+        if (mJsApiListMap.get(api) == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f068a48b749c660752f364e50b6748c3e36d33"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzkxMzY1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/res/values/02-strings.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxOTo0OToyOFrOG3G6ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxOTo0OToyOFrOG3G6ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQzODIwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <string name=\"anki_js_error_code\">(Error Code:%d)</string>\n          \n          \n            \n                <string name=\"anki_js_error_code\">(Error Code: %d)</string>", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r460438202", "createdAt": "2020-07-25T19:49:28Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/res/values/02-strings.xml", "diffHunk": "@@ -290,8 +290,5 @@\n     <string name=\"js_api_not_implemented\">JS API not implemented to current deck. View wiki.</string>\n \n     <!-- Error codes for AnkiDroid JS API-->\n-    <string name=\"anki_js_unknown_error\">(Error Code:0)</string>\n-    <string name=\"anki_js_not_implemented\">(Error Code:1)</string>\n-    <string name=\"anki_js_mark_card_not_supported\">(Error Code:2)</string>\n-    <string name=\"anki_js_flag_card_not_supported\">(Error Code:3)</string>\n+    <string name=\"anki_js_error_code\">(Error Code:%d)</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f068a48b749c660752f364e50b6748c3e36d33"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjI5NjA5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMDo1OToxNlrOG7xS_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMDo1OToxNlrOG7xS_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMyNjg0Ng==", "bodyText": "This isn't reset between cards.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r465326846", "createdAt": "2020-08-04T20:59:16Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -193,6 +198,20 @@\n \n     // ETA\n     private int eta;\n+    // JavaScript Versioning\n+    protected String mCardSuppliedApiVersion = \"\";\n+    protected String mCardSuppliedDeveloperContact  = \"\";\n+\n+    private static final String sCurrentJsApiVersion = \"0.0.1\";\n+    private static final String sMinimumJsApiVersion = \"0.0.1\";\n+\n+    // JS API ERROR CODE\n+    private static final int ankiJsErrorCodeDefault = 0;\n+    private static final int ankiJsErrorCodeMarkCard = 1;\n+    private static final int ankiJsErrorCodeFlagCard = 2;\n+\n+    // JS api list enable/disable status\n+    private HashMap<String, Boolean> mJsApiListMap = new HashMap<String, Boolean>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1399b90b264b8259224d0490851a6d60c6ccab0c"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjI5OTYwOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTowMDoxNFrOG7xVFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTowMDoxNFrOG7xVFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMyNzM4MQ==", "bodyText": "I think this can be a local variable", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r465327381", "createdAt": "2020-08-04T21:00:14Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -193,6 +198,20 @@\n \n     // ETA\n     private int eta;\n+    // JavaScript Versioning\n+    protected String mCardSuppliedApiVersion = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1399b90b264b8259224d0490851a6d60c6ccab0c"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjMwMDMwOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTowMDoyOFrOG7xVhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTowMDoyOFrOG7xVhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMyNzQ5NQ==", "bodyText": "This isn't reset when a new card is shown", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r465327495", "createdAt": "2020-08-04T21:00:28Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -193,6 +198,20 @@\n \n     // ETA\n     private int eta;\n+    // JavaScript Versioning\n+    protected String mCardSuppliedApiVersion = \"\";\n+    protected String mCardSuppliedDeveloperContact  = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1399b90b264b8259224d0490851a6d60c6ccab0c"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzM0NTY2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNTozOTo1N1rOG768Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOTo0NDo1NlrOG8YD6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4NDkwMg==", "bodyText": "The problem is that init isn't guaranteed to be called by the next card, could this also be called on displayCardQuestion (or a more appropriate hook)", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r465484902", "createdAt": "2020-08-05T05:39:57Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3665,6 +3670,9 @@ private void enableJsApi() {\n \n         @JavascriptInterface\n         public String init(String jsonData) {\n+            // initialize api\n+            initJsApi();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "793063e81af21e3d07c217e69962b0b206f8c9d6"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2NTkwNQ==", "bodyText": "Updated,\ninit() in displayCardQuestion will be called even it not needed.\nShould one option added to reviewer to toggle api init?", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r465565905", "createdAt": "2020-08-05T08:36:34Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3665,6 +3670,9 @@ private void enableJsApi() {\n \n         @JavascriptInterface\n         public String init(String jsonData) {\n+            // initialize api\n+            initJsApi();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4NDkwMg=="}, "originalCommit": {"oid": "793063e81af21e3d07c217e69962b0b206f8c9d6"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk2MTk2MA==", "bodyText": "I'm not sure that I understand, but what's currently there looks good from an implementation perspective.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r465961960", "createdAt": "2020-08-05T19:44:56Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3665,6 +3670,9 @@ private void enableJsApi() {\n \n         @JavascriptInterface\n         public String init(String jsonData) {\n+            // initialize api\n+            initJsApi();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4NDkwMg=="}, "originalCommit": {"oid": "793063e81af21e3d07c217e69962b0b206f8c9d6"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzE0OTM0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzowNjoxN1rOG8yoog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzowNjoxN1rOG8yoog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM5NzM0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      Timber.i(e, \"requireApiVersion::exception\");\n          \n          \n            \n                      Timber.w(e, \"requireApiVersion::exception\");", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r466397346", "createdAt": "2020-08-06T13:06:17Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3489,6 +3529,78 @@ void handleUrlFromJavascript(String url) {\n         }\n     }\n \n+    // Check if value null\n+    private boolean isAnkiApiNull(String api) {\n+        return mJsApiListMap.get(api) == null;\n+    }\n+\n+    /*\n+     * see 02-strings.xml\n+     * Show Error code when mark card or flag card unsupported\n+     * 1 - mark card\n+     * 2 - flag card\n+     *\n+     * show developer contact if js api used in card is deprecated\n+     */\n+    private void showDeveloperContact(int errorCode) {\n+        String errorMsg = getString(R.string.anki_js_error_code, errorCode);\n+\n+        View parentLayout = findViewById(android.R.id.content);\n+        String snackbarMsg;\n+        snackbarMsg = getString(R.string.api_version_developer_contact, mCardSuppliedDeveloperContact, errorMsg);\n+\n+        Snackbar snackbar = Snackbar.make(parentLayout, snackbarMsg, Snackbar.LENGTH_LONG);\n+        View snackbarView = snackbar.getView();\n+        TextView snackTextView = snackbarView.findViewById(com.google.android.material.R.id.snackbar_text);\n+        snackTextView.setTextColor(Color.WHITE);\n+        snackTextView.setMaxLines(3);\n+\n+        snackbar.setActionTextColor(Color.MAGENTA)\n+                .setAction(getString(R.string.reviewer_invalid_api_version_visit_documentation), view -> {\n+                    openUrl(Uri.parse(\"https://github.com/ankidroid/Anki-Android/wiki\"));\n+                });\n+\n+        snackbar.show();\n+    }\n+\n+    /**\n+     * Supplied api version must be equal to current api version to call mark card, toggle flag functions etc.\n+     */\n+    private boolean requireApiVersion(String apiVer, String apiDevContact) {\n+        try {\n+\n+            if (TextUtils.isEmpty(apiDevContact)) {\n+                return false;\n+            }\n+\n+            Version mVersionCurrent = Version.valueOf(sCurrentJsApiVersion);\n+            Version mVersionSupplied = Version.valueOf(apiVer);\n+\n+            /*\n+            * if api major version equals to supplied major version then return true and also check for minor version and patch version\n+            * show toast for update and contact developer if need updates\n+            * otherwise return false\n+            */\n+            if (mVersionSupplied.equals(mVersionCurrent)) {\n+                return true;\n+            } else if (mVersionSupplied.lessThan(mVersionCurrent)) {\n+                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.update_js_api_version, mCardSuppliedDeveloperContact), false);\n+\n+                if (mVersionSupplied.greaterThanOrEqualTo(Version.valueOf(sMinimumJsApiVersion))) {\n+                    return true;\n+                } else {\n+                    return false;\n+                }\n+            } else {\n+                UIUtils.showThemedToast(AbstractFlashcardViewer.this, getString(R.string.valid_js_api_version, mCardSuppliedDeveloperContact), false);\n+                return false;\n+            }\n+        } catch (Exception e) {\n+          Timber.i(e, \"requireApiVersion::exception\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c055f95d3facd46b778b423e08dd000cb7eb56bc"}, "originalPosition": 159}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzE1MTIxOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzowNjo0NVrOG8ypug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzowNjo0NVrOG8ypug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM5NzYyNg==", "bodyText": "Would be better at the top of the class", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r466397626", "createdAt": "2020-08-06T13:06:45Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3531,12 +3643,58 @@ protected void showTagsDialog() {\n         showDialogFragment(dialog);\n     }\n \n+    // list of api that can be accessed\n+    private final String[] sApiList = {\"toggleFlag\", \"markCard\"};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c055f95d3facd46b778b423e08dd000cb7eb56bc"}, "originalPosition": 172}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzY1OTkxOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNTowMzoyMVrOG9dXUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNTowMzoyMVrOG9dXUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA5NzQyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final String[] sApiList = {\"toggleFlag\", \"markCard\"};\n          \n          \n            \n                private final String[] mApiList = {\"toggleFlag\", \"markCard\"};\n          \n      \n    \n    \n  \n\nThis isn't static and though Hungarian Notation isn't great we are at consistent at the moment, should be member variable (and then all usage will need change to match)", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r467097427", "createdAt": "2020-08-07T15:03:21Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3531,12 +3643,58 @@ protected void showTagsDialog() {\n         showDialogFragment(dialog);\n     }\n \n+    // init or reset api list\n+    private void jsApiInit() {\n+        mCardSuppliedApiVersion = \"\";\n+        mCardSuppliedDeveloperContact = \"\";\n+\n+        for (int i = 0; i < sApiList.length; i++) {\n+            mJsApiListMap.put(sApiList[i], false);\n+        }\n+    }\n+\n  /*\n  Javascript Interface class for calling Java function from AnkiDroid WebView\n see card.js for available functions\n  */\n+    // list of api that can be accessed\n+    private final String[] sApiList = {\"toggleFlag\", \"markCard\"};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a2b548f28b32dc57337e8d997ac5db7fe7c3853"}, "originalPosition": 186}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzY2MTQ3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNTowMzo0OFrOG9dYVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNTowMzo0OFrOG9dYVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA5NzY4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    private final Gson sGson = new Gson();\n          \n          \n            \n                    private final Gson mGson = new Gson();\n          \n      \n    \n    \n  \n\nSame notation comment as above - should be marked as member variable and usage altered to match", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r467097684", "createdAt": "2020-08-07T15:03:48Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3531,12 +3643,58 @@ protected void showTagsDialog() {\n         showDialogFragment(dialog);\n     }\n \n+    // init or reset api list\n+    private void jsApiInit() {\n+        mCardSuppliedApiVersion = \"\";\n+        mCardSuppliedDeveloperContact = \"\";\n+\n+        for (int i = 0; i < sApiList.length; i++) {\n+            mJsApiListMap.put(sApiList[i], false);\n+        }\n+    }\n+\n  /*\n  Javascript Interface class for calling Java function from AnkiDroid WebView\n see card.js for available functions\n  */\n+    // list of api that can be accessed\n+    private final String[] sApiList = {\"toggleFlag\", \"markCard\"};\n+\n     public class JavaScriptFunction {\n \n+        private final Gson sGson = new Gson();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a2b548f28b32dc57337e8d997ac5db7fe7c3853"}, "originalPosition": 190}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxODA3MjA1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzowNDowOVrOG9hTvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzoxNjoxNVrOG9hrTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE2MjA0Ng==", "bodyText": "Wouldn't be a problem with making this static", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r467162046", "createdAt": "2020-08-07T17:04:09Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3658,16 +3658,16 @@ private void jsApiInit() {\n see card.js for available functions\n  */\n     // list of api that can be accessed\n-    private final String[] sApiList = {\"toggleFlag\", \"markCard\"};\n+    private final String[] mApiList = {\"toggleFlag\", \"markCard\"};\n \n     public class JavaScriptFunction {\n \n-        private final Gson sGson = new Gson();\n+        private final Gson mGson = new Gson();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0ff6c31679b5a1b7aff68094ee2ded596735f5e"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE2NDU5MA==", "bodyText": "Android Studio is suggesting to make JavaScriptFunction static.", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r467164590", "createdAt": "2020-08-07T17:09:17Z", "author": {"login": "infinyte7"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3658,16 +3658,16 @@ private void jsApiInit() {\n see card.js for available functions\n  */\n     // list of api that can be accessed\n-    private final String[] sApiList = {\"toggleFlag\", \"markCard\"};\n+    private final String[] mApiList = {\"toggleFlag\", \"markCard\"};\n \n     public class JavaScriptFunction {\n \n-        private final Gson sGson = new Gson();\n+        private final Gson mGson = new Gson();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE2MjA0Ng=="}, "originalCommit": {"oid": "c0ff6c31679b5a1b7aff68094ee2ded596735f5e"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE2ODA3Ng==", "bodyText": "If it works either way (static or member) that's fine, so long as it's consistent one way or another.\nI prefer non-static as it's easier to test it if we need/want to later to inspect something. Static makes\ntesting hard in my experience, so I'll merge it like this", "url": "https://github.com/ankidroid/Anki-Android/pull/6521#discussion_r467168076", "createdAt": "2020-08-07T17:16:15Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3658,16 +3658,16 @@ private void jsApiInit() {\n see card.js for available functions\n  */\n     // list of api that can be accessed\n-    private final String[] sApiList = {\"toggleFlag\", \"markCard\"};\n+    private final String[] mApiList = {\"toggleFlag\", \"markCard\"};\n \n     public class JavaScriptFunction {\n \n-        private final Gson sGson = new Gson();\n+        private final Gson mGson = new Gson();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE2MjA0Ng=="}, "originalCommit": {"oid": "c0ff6c31679b5a1b7aff68094ee2ded596735f5e"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 226, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}