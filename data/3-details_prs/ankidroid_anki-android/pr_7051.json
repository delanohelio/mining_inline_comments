{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzMjM3MDg3", "number": 7051, "title": "Improve File Import: Error Handling for Zip Validation ", "bodyText": "Purpose / Description\nA user didn't understand \"archive is not a ZIP archive\" meant the file is corrupt. We improve this error message, and perform more silent exception logging to help diagnose these unknown issues in the future.\nFixes\nFixes #7050\nApproach\n\nChange the dialog\nSend a silent exception report if the exception type is unknown\nReturn a class so we can better handle displaying a string to the user.\n\nHow Has This Been Tested?\n\nLearning (optional, can help others)\nWe can always do better with exception reports\nChecklist\n\n You have not changed whitespace unnecessarily (it makes diffs hard to read)\n You have a descriptive commit message with a short title (first line, max 50 chars).\n Your code follows the style of the project (e.g. never omit braces in if statements)\n You have commented your code, particularly in hard-to-understand areas\n You have performed a self-review of your own code", "createdAt": "2020-09-10T00:41:27Z", "url": "https://github.com/ankidroid/Anki-Android/pull/7051", "merged": true, "mergeCommit": {"oid": "68b12e9b14460b46ce1285fe80b1b0f94002b2a7"}, "closed": true, "closedAt": "2020-09-10T03:40:45Z", "author": {"login": "david-allison-1"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHVwEegH2gAyNDgzMjM3MDg3OmRkYzRjYzA1MzVhYTM0N2RkYjlhNTc1Nzk2NWVkM2E4NTJkYjcyN2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHYZRlAFqTQ4NTU0MzIxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ddc4cc0535aa347ddb9a5757965ed3a852db727c", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/ddc4cc0535aa347ddb9a5757965ed3a852db727c", "committedDate": "2020-09-10T00:35:13Z", "message": "NF: Encapsulate ImportUtils return value\n\nThis will let us handle the exception data and values to provide\nbetter exception messages to the user."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42cba02be2e51f7036e7dc6e59e4d679e6b99765", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/42cba02be2e51f7036e7dc6e59e4d679e6b99765", "committedDate": "2020-09-10T00:35:26Z", "message": "Import: Fail on invalid schema"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NDkxOTE3", "url": "https://github.com/ankidroid/Anki-Android/pull/7051#pullrequestreview-485491917", "createdAt": "2020-09-10T00:42:46Z", "commit": {"oid": "33b3de8787138e8524b046c2e2456d0dc2b653f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMDo0Mjo0N1rOHPe6RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMDo0Mjo0N1rOHPe6RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk5NzEyNA==", "bodyText": "I was ambivalent on this - but it's better as an Optional, I'll fix", "url": "https://github.com/ankidroid/Anki-Android/pull/7051#discussion_r485997124", "createdAt": "2020-09-10T00:42:47Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/utils/ImportUtils.java", "diffHunk": "@@ -151,51 +155,51 @@ private String handleContentProviderFile(Context context, Intent intent, Uri dat\n                 } else {\n                     Timber.e(\"Could not retrieve filename from ContentProvider or read content as ZipFile\");\n                     AnkiDroidApp.sendExceptionReport(new RuntimeException(\"Could not import apkg from ContentProvider\"), \"IntentHandler.java\", \"apkg import failed\");\n-                    return AnkiDroidApp.getAppResources().getString(R.string.import_error_content_provider, AnkiDroidApp.getManualUrl() + \"#importing\");\n+                    return ImportResult.fromErrorString(AnkiDroidApp.getAppResources().getString(R.string.import_error_content_provider, AnkiDroidApp.getManualUrl() + \"#importing\"));\n                 }\n             }\n \n             if (!isValidPackageName(filename)) {\n                 if (isAnkiDatabase(filename)) {\n                     //.anki2 files aren't supported by Anki Desktop, we should eventually support them, because we can\n                     //but for now, show a \"nice\" error.\n-                    return context.getResources().getString(R.string.import_error_load_imported_database);\n+                    return ImportResult.fromErrorString(context.getResources().getString(R.string.import_error_load_imported_database));\n                 } else {\n                     // Don't import if file doesn't have an Anki package extension\n-                    return context.getResources().getString(R.string.import_error_not_apkg_extension, filename);\n+                    return ImportResult.fromErrorString(context.getResources().getString(R.string.import_error_not_apkg_extension, filename));\n                 }\n             } else {\n                 // Copy to temporary file\n                 filename = ensureValidLength(filename);\n                 String tempOutDir = Uri.fromFile(new File(context.getCacheDir(), filename)).getEncodedPath();\n-                errorMessage = copyFileToCache(context, data, tempOutDir) ? null : context.getString(R.string.import_error_copy_file_to_cache);\n+                String errorMessage = copyFileToCache(context, data, tempOutDir) ? null : context.getString(R.string.import_error_copy_file_to_cache);\n                 // Show import dialog\n                 if (errorMessage != null) {\n                     AnkiDroidApp.sendExceptionReport(new RuntimeException(\"Error importing apkg file\"), \"IntentHandler.java\", \"apkg import failed\");\n-                    return errorMessage;\n+                    return ImportResult.fromErrorString(errorMessage);\n                 }\n \n-                errorMessage = validateZipFile(context, tempOutDir);\n-                if (errorMessage != null) {\n+                ImportResult validateZipResult = validateZipFile(context, tempOutDir);\n+                if (!validateZipResult.isSuccess()) {\n                     //noinspection ResultOfMethodCallIgnored\n                     new File(tempOutDir).delete();\n-                    return errorMessage;\n+                    return validateZipResult;\n                 }\n \n                 sendShowImportFileDialogMsg(tempOutDir);\n-                return null;\n+                return ImportResult.fromSuccess();\n             }\n         }\n \n-\n-        protected String validateZipFile(Context context, String filePath) {\n+        @NonNull\n+        protected ImportResult validateZipFile(Context ctx, String filePath) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33b3de8787138e8524b046c2e2456d0dc2b653f0"}, "originalPosition": 130}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25fe93df243ded027aa4e0d05d2c47e238abb7df", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/25fe93df243ded027aa4e0d05d2c47e238abb7df", "committedDate": "2020-09-10T00:47:27Z", "message": "Import: send silent exception if validation fails\n\nWe want to improve this error UX, to do this we need exception reports."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09486a2aa8170b70e44c21d8874d12649064b8bb", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/09486a2aa8170b70e44c21d8874d12649064b8bb", "committedDate": "2020-09-10T00:47:29Z", "message": "Import: Improve error on corrupt files\n\nFixes 7050: User requested support so we make the exception more explicit"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "33b3de8787138e8524b046c2e2456d0dc2b653f0", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/33b3de8787138e8524b046c2e2456d0dc2b653f0", "committedDate": "2020-09-10T00:35:51Z", "message": "Import: Improve error on corrupt files\n\nFixes 7050: User requested support so we make the exception more explicit"}, "afterCommit": {"oid": "09486a2aa8170b70e44c21d8874d12649064b8bb", "author": {"user": {"login": "david-allison-1", "name": "David Allison"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/09486a2aa8170b70e44c21d8874d12649064b8bb", "committedDate": "2020-09-10T00:47:29Z", "message": "Import: Improve error on corrupt files\n\nFixes 7050: User requested support so we make the exception more explicit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NTQzMjEw", "url": "https://github.com/ankidroid/Anki-Android/pull/7051#pullrequestreview-485543210", "createdAt": "2020-09-10T03:40:02Z", "commit": {"oid": "09486a2aa8170b70e44c21d8874d12649064b8bb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4069, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}