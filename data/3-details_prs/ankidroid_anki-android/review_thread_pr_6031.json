{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0NTAxMjcw", "number": 6031, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwODo0NDo0OFrOEDWgLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwODo0NDo0OFrOEDWgLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTQ5ODcwOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwODo0NDo0OFrOGgUaRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTo1MTo1N1rOGgaQWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU0MjAyMg==", "bodyText": "Maybe: hasCardsTodayAfterStudyAheadLimit", "url": "https://github.com/ankidroid/Anki-Android/pull/6031#discussion_r436542022", "createdAt": "2020-06-08T08:44:48Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2009,9 +2009,7 @@ private void handleDeckSelection(long did, boolean dontSkipStudyOptions) {\n             }\n             return;\n         }\n-        getCol().getSched().reset();\n-        int[] studyOptionsCounts = getCol().getSched().counts();\n-        if (studyOptionsCounts[0] + studyOptionsCounts[1] + studyOptionsCounts[2] > 0) {\n+        if (getCol().getSched().lrnDueFromToday()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9272fa57ee8db4a8ff33bdc6f495ec28a6f38588"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzNzc4Nw==", "bodyText": "Seems a little strange, as the name describe why we use it and not what it does, but that's fine with me.", "url": "https://github.com/ankidroid/Anki-Android/pull/6031#discussion_r436637787", "createdAt": "2020-06-08T11:51:57Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2009,9 +2009,7 @@ private void handleDeckSelection(long did, boolean dontSkipStudyOptions) {\n             }\n             return;\n         }\n-        getCol().getSched().reset();\n-        int[] studyOptionsCounts = getCol().getSched().counts();\n-        if (studyOptionsCounts[0] + studyOptionsCounts[1] + studyOptionsCounts[2] > 0) {\n+        if (getCol().getSched().lrnDueFromToday()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU0MjAyMg=="}, "originalCommit": {"oid": "9272fa57ee8db4a8ff33bdc6f495ec28a6f38588"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 352, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}