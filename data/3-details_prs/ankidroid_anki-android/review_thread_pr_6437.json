{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMzIxMDMw", "number": 6437, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNjoyNTozNlrOEFVSLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNjoyOToxNVrOEFVTGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDI3MDUyOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNjoyNTozN1rOGjeEjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNjoyNTozN1rOGjeEjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0NjAzMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    AlertDialog.Builder builder = new AlertDialog.Builder(this);\n          \n          \n            \n                                    builder.setTitle(R.string.custom_sync_server_base_url_invalid);\n          \n          \n            \n                                    builder.setPositiveButton(R.string.dialog_ok, null);builder.show();\n          \n          \n            \n                                    new AlertDialog.Builder(this)\n          \n          \n            \n                                        .setTitle(R.string.custom_sync_server_base_url_invalid);\n          \n          \n            \n                                        .setPositiveButton(R.string.dialog_ok, null)\n          \n          \n            \n                                        .show();", "url": "https://github.com/ankidroid/Anki-Android/pull/6437#discussion_r439846031", "createdAt": "2020-06-14T16:25:37Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "diffHunk": "@@ -380,6 +384,51 @@ private void initSubscreen(String action, PreferenceContext listener) {\n             case \"com.ichi2.anki.prefs.custom_sync_server\":\n                 getSupportActionBar().setTitle(R.string.custom_sync_server_title);\n                 listener.addPreferencesFromResource(R.xml.preferences_custom_sync_server);\n+                screen = listener.getPreferenceScreen();\n+                Preference syncUrlPreference = screen.findPreference(\"syncBaseUrl\");\n+                Preference mSyncUrlPreference = screen.findPreference(\"syncMediaUrl\");\n+                syncUrlPreference.setOnPreferenceChangeListener((Preference preference, Object newValue) -> {\n+                    String newUrl = newValue.toString();\n+                    if (!URLUtil.isValidUrl(newUrl)) {\n+                        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n+                        builder.setTitle(R.string.custom_sync_server_base_url_invalid);\n+                        builder.setPositiveButton(R.string.dialog_ok, null);builder.show();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc1861d12593105dbc12777bc1083c7e452cd5b1"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDI3MTE3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNjoyNjoyM1rOGjeE1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNjoyNjoyM1rOGjeE1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0NjEwMw==", "bodyText": "same as above - it's a fluent API, use the fluency, and since we don't care about the builder after we use it, it does not need a local variable even I don't believe", "url": "https://github.com/ankidroid/Anki-Android/pull/6437#discussion_r439846103", "createdAt": "2020-06-14T16:26:23Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "diffHunk": "@@ -380,6 +384,51 @@ private void initSubscreen(String action, PreferenceContext listener) {\n             case \"com.ichi2.anki.prefs.custom_sync_server\":\n                 getSupportActionBar().setTitle(R.string.custom_sync_server_title);\n                 listener.addPreferencesFromResource(R.xml.preferences_custom_sync_server);\n+                screen = listener.getPreferenceScreen();\n+                Preference syncUrlPreference = screen.findPreference(\"syncBaseUrl\");\n+                Preference mSyncUrlPreference = screen.findPreference(\"syncMediaUrl\");\n+                syncUrlPreference.setOnPreferenceChangeListener((Preference preference, Object newValue) -> {\n+                    String newUrl = newValue.toString();\n+                    if (!URLUtil.isValidUrl(newUrl)) {\n+                        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n+                        builder.setTitle(R.string.custom_sync_server_base_url_invalid);\n+                        builder.setPositiveButton(R.string.dialog_ok, null);builder.show();\n+\n+                        return false;\n+                    }\n+\n+                    URI uri = URI.create(newUrl);\n+                    if (!Pattern.matches(\".*[^/]*/$\", uri.getPath())) {\n+                        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n+                        builder.setTitle(R.string.custom_sync_server_base_url_single_slash);\n+                        builder.setPositiveButton(R.string.dialog_ok, null);builder.show();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc1861d12593105dbc12777bc1083c7e452cd5b1"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDI3MTI2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNjoyNjozOFrOGjeE5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNjoyNjozOFrOGjeE5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0NjExNg==", "bodyText": "same as above - it's a fluent API, use the fluency, and since we don't care about the builder after we use it, it does not need a local variable even I don't believe", "url": "https://github.com/ankidroid/Anki-Android/pull/6437#discussion_r439846116", "createdAt": "2020-06-14T16:26:38Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "diffHunk": "@@ -380,6 +384,51 @@ private void initSubscreen(String action, PreferenceContext listener) {\n             case \"com.ichi2.anki.prefs.custom_sync_server\":\n                 getSupportActionBar().setTitle(R.string.custom_sync_server_title);\n                 listener.addPreferencesFromResource(R.xml.preferences_custom_sync_server);\n+                screen = listener.getPreferenceScreen();\n+                Preference syncUrlPreference = screen.findPreference(\"syncBaseUrl\");\n+                Preference mSyncUrlPreference = screen.findPreference(\"syncMediaUrl\");\n+                syncUrlPreference.setOnPreferenceChangeListener((Preference preference, Object newValue) -> {\n+                    String newUrl = newValue.toString();\n+                    if (!URLUtil.isValidUrl(newUrl)) {\n+                        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n+                        builder.setTitle(R.string.custom_sync_server_base_url_invalid);\n+                        builder.setPositiveButton(R.string.dialog_ok, null);builder.show();\n+\n+                        return false;\n+                    }\n+\n+                    URI uri = URI.create(newUrl);\n+                    if (!Pattern.matches(\".*[^/]*/$\", uri.getPath())) {\n+                        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n+                        builder.setTitle(R.string.custom_sync_server_base_url_single_slash);\n+                        builder.setPositiveButton(R.string.dialog_ok, null);builder.show();\n+\n+                        return false;\n+                    }\n+\n+                    return true;\n+                });\n+                mSyncUrlPreference.setOnPreferenceChangeListener((Preference preference, Object newValue) -> {\n+                    String newUrl = newValue.toString();\n+                    if (!URLUtil.isValidUrl(newUrl)) {\n+                        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n+                        builder.setTitle(R.string.custom_sync_server_media_url_invalid);\n+                        builder.setPositiveButton(R.string.dialog_ok, null);builder.show();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc1861d12593105dbc12777bc1083c7e452cd5b1"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDI3MTMzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNjoyNjo0NlrOGjeE8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNjoyNjo0NlrOGjeE8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0NjEyOA==", "bodyText": "same as above - it's a fluent API, use the fluency, and since we don't care about the builder after we use it, it does not need a local variable even I don't believe", "url": "https://github.com/ankidroid/Anki-Android/pull/6437#discussion_r439846128", "createdAt": "2020-06-14T16:26:46Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "diffHunk": "@@ -380,6 +384,51 @@ private void initSubscreen(String action, PreferenceContext listener) {\n             case \"com.ichi2.anki.prefs.custom_sync_server\":\n                 getSupportActionBar().setTitle(R.string.custom_sync_server_title);\n                 listener.addPreferencesFromResource(R.xml.preferences_custom_sync_server);\n+                screen = listener.getPreferenceScreen();\n+                Preference syncUrlPreference = screen.findPreference(\"syncBaseUrl\");\n+                Preference mSyncUrlPreference = screen.findPreference(\"syncMediaUrl\");\n+                syncUrlPreference.setOnPreferenceChangeListener((Preference preference, Object newValue) -> {\n+                    String newUrl = newValue.toString();\n+                    if (!URLUtil.isValidUrl(newUrl)) {\n+                        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n+                        builder.setTitle(R.string.custom_sync_server_base_url_invalid);\n+                        builder.setPositiveButton(R.string.dialog_ok, null);builder.show();\n+\n+                        return false;\n+                    }\n+\n+                    URI uri = URI.create(newUrl);\n+                    if (!Pattern.matches(\".*[^/]*/$\", uri.getPath())) {\n+                        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n+                        builder.setTitle(R.string.custom_sync_server_base_url_single_slash);\n+                        builder.setPositiveButton(R.string.dialog_ok, null);builder.show();\n+\n+                        return false;\n+                    }\n+\n+                    return true;\n+                });\n+                mSyncUrlPreference.setOnPreferenceChangeListener((Preference preference, Object newValue) -> {\n+                    String newUrl = newValue.toString();\n+                    if (!URLUtil.isValidUrl(newUrl)) {\n+                        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n+                        builder.setTitle(R.string.custom_sync_server_media_url_invalid);\n+                        builder.setPositiveButton(R.string.dialog_ok, null);builder.show();\n+\n+                        return false;\n+                    }\n+\n+                    URI uri = URI.create(newUrl);\n+                    if (!Pattern.matches(\".*[^/]*/$\", uri.getPath())) {\n+                        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n+                        builder.setTitle(R.string.custom_sync_server_media_url_single_slash);\n+                        builder.setPositiveButton(R.string.dialog_ok, null);builder.show();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc1861d12593105dbc12777bc1083c7e452cd5b1"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDI3MjkxOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNjoyOToxNVrOGjeFug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxOTowMDo0MlrOGje0iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0NjMzMA==", "bodyText": "If the URIUtil already says it is valid, why are we checking something else? It is valid or not, isn't it?\nShould the URIUtil be extended to do the complete check, or is the second check unnecessary? (this comment applies to the other instance as well", "url": "https://github.com/ankidroid/Anki-Android/pull/6437#discussion_r439846330", "createdAt": "2020-06-14T16:29:15Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "diffHunk": "@@ -380,6 +384,51 @@ private void initSubscreen(String action, PreferenceContext listener) {\n             case \"com.ichi2.anki.prefs.custom_sync_server\":\n                 getSupportActionBar().setTitle(R.string.custom_sync_server_title);\n                 listener.addPreferencesFromResource(R.xml.preferences_custom_sync_server);\n+                screen = listener.getPreferenceScreen();\n+                Preference syncUrlPreference = screen.findPreference(\"syncBaseUrl\");\n+                Preference mSyncUrlPreference = screen.findPreference(\"syncMediaUrl\");\n+                syncUrlPreference.setOnPreferenceChangeListener((Preference preference, Object newValue) -> {\n+                    String newUrl = newValue.toString();\n+                    if (!URLUtil.isValidUrl(newUrl)) {\n+                        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n+                        builder.setTitle(R.string.custom_sync_server_base_url_invalid);\n+                        builder.setPositiveButton(R.string.dialog_ok, null);builder.show();\n+\n+                        return false;\n+                    }\n+\n+                    URI uri = URI.create(newUrl);\n+                    if (!Pattern.matches(\".*[^/]*/$\", uri.getPath())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc1861d12593105dbc12777bc1083c7e452cd5b1"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1ODMxNQ==", "bodyText": "Edit: The first check with URIUtil is a general check whether the uri is valid. That check catches for example https;// instead of https://. URIUtil.isValid does not care if the uri ends with a slash or not.\nNevertheless I removed the second check with the regex and instead reused the code from HttpSyncer::syncUrl() in the req() method of the HttpSyncer to build the url.\nWith the line Uri.parse(syncURL()).buildUpon().appendPath(method) it does not matter if syncURL() returns a string ending with a slash or not, the url will be correct.", "url": "https://github.com/ankidroid/Anki-Android/pull/6437#discussion_r439858315", "createdAt": "2020-06-14T19:00:42Z", "author": {"login": "kalehmann"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java", "diffHunk": "@@ -380,6 +384,51 @@ private void initSubscreen(String action, PreferenceContext listener) {\n             case \"com.ichi2.anki.prefs.custom_sync_server\":\n                 getSupportActionBar().setTitle(R.string.custom_sync_server_title);\n                 listener.addPreferencesFromResource(R.xml.preferences_custom_sync_server);\n+                screen = listener.getPreferenceScreen();\n+                Preference syncUrlPreference = screen.findPreference(\"syncBaseUrl\");\n+                Preference mSyncUrlPreference = screen.findPreference(\"syncMediaUrl\");\n+                syncUrlPreference.setOnPreferenceChangeListener((Preference preference, Object newValue) -> {\n+                    String newUrl = newValue.toString();\n+                    if (!URLUtil.isValidUrl(newUrl)) {\n+                        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n+                        builder.setTitle(R.string.custom_sync_server_base_url_invalid);\n+                        builder.setPositiveButton(R.string.dialog_ok, null);builder.show();\n+\n+                        return false;\n+                    }\n+\n+                    URI uri = URI.create(newUrl);\n+                    if (!Pattern.matches(\".*[^/]*/$\", uri.getPath())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0NjMzMA=="}, "originalCommit": {"oid": "dc1861d12593105dbc12777bc1083c7e452cd5b1"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 171, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}