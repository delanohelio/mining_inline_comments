{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5NzY0MjAw", "number": 5941, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNjozODo0M1rODvNnGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTowMDoyNFrODvQ4-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwODMyNjY1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/async/DeckTask.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNjozODo0M1rOGBgZwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNjozODo0M1rOGBgZwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzMjY0Mg==", "bodyText": "getDecks().get() returns did:1 if unsuccessful.", "url": "https://github.com/ankidroid/Anki-Android/pull/5941#discussion_r404232642", "createdAt": "2020-04-06T16:38:43Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/async/DeckTask.java", "diffHunk": "@@ -737,6 +737,28 @@ private TaskData doInBackgroundDismissNotes(TaskData... params) {\n \n                     case CHANGE_DECK_MULTI: {\n                         long newDid = (long) data[2];\n+\n+                        Timber.i(\"Changing %d cards to deck: '%d'\", cards.length, newDid);\n+                        JSONObject deckData = col.getDecks().get(newDid);\n+\n+                        if (Decks.isDynamic(deckData)) {\n+                            //#5932 - can't change to a dynamic deck. Use \"Rebuild\"\n+                            Timber.w(\"Attempted to move to dynamic deck. Cancelling task.\");\n+                            return new TaskData(false);\n+                        }\n+\n+                        //Confirm that the deck exists (and is not the default)\n+                        try {\n+                            long actualId = deckData.getLong(\"id\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "680b7128d43c5df2953ad62e91de2a86fba8d2c4"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwODMyOTkxOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/test/java/com/ichi2/anki/CardBrowserTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNjozOToyNFrOGBgbuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODo1NDoyNVrOGBlfag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzMzE0NQ==", "bodyText": "I know streams whenever we reach a new API level, is there anything now?", "url": "https://github.com/ankidroid/Anki-Android/pull/5941#discussion_r404233145", "createdAt": "2020-04-06T16:39:24Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/CardBrowserTest.java", "diffHunk": "@@ -159,6 +273,15 @@ private void selectMenuItem(CardBrowser browser, int action_select_all) {\n         shadowActivity.clickMenuItem(action_select_all);\n     }\n \n+    //There has to be a better way :(\n+    private long[] toLongArray(List<Long> list){\n+        long[] ret = new long[list.size()];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "680b7128d43c5df2953ad62e91de2a86fba8d2c4"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxNjAxMA==", "bodyText": "no idea, and certainly not bothered in a test. in the main code you can use the compat infrastructure if you need to access higher API things to either prepare for major deprecation / access important new feature / achieve massive speedup by having an old-style backup in the lowest API level compat then overriding it in the first compat API level you have the APIs you need", "url": "https://github.com/ankidroid/Anki-Android/pull/5941#discussion_r404316010", "createdAt": "2020-04-06T18:54:25Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/CardBrowserTest.java", "diffHunk": "@@ -159,6 +273,15 @@ private void selectMenuItem(CardBrowser browser, int action_select_all) {\n         shadowActivity.clickMenuItem(action_select_all);\n     }\n \n+    //There has to be a better way :(\n+    private long[] toLongArray(List<Long> list){\n+        long[] ret = new long[list.size()];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzMzE0NQ=="}, "originalCommit": {"oid": "680b7128d43c5df2953ad62e91de2a86fba8d2c4"}, "originalPosition": 149}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwODg2Mzk1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTowMDoyNFrOGBltBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMDoyMToxM1rOGBoZHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxOTQ5Mw==", "bodyText": "I'm just reviewing as I go through the commits in series so this may be addressed later but writing it while I think it: this is the exact assumption that bit us somewhere else but you worked on it directly so you might remember better. There were two different tests for a deck and whether it was dynamic right? And the previous problem was that they were used in different spots and (incorrectly I think) they returned different answers sometimes. Centralizing this and making sure everyone is using the same test and everything still works should be a side quest I think", "url": "https://github.com/ankidroid/Anki-Android/pull/5941#discussion_r404319493", "createdAt": "2020-04-06T19:00:24Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -1053,4 +1053,8 @@ public boolean hasDeckOptions(long deckId) throws NoSuchDeckException {\n     public void removeDeckOptions(long deckId) throws NoSuchDeckException {\n         getDeckOrFail(deckId).remove(\"conf\");\n     }\n+\n+    public static boolean isDynamic(JSONObject deck) {\n+        return deck.getInt(\"dyn\") != 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8b9ab6142d5670061780215b9a4b73ab2ef14e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMzMzcxMQ==", "bodyText": "I'm fine doing this, but:\n\nI want to keep libAnki compatibility as much as possible. Inlining and renaming methods can sadly introduce bugs and reduce clarity\nDamien is in the process of strongly typing the deck object.\n\n\nIn the coming months I plan to deserialize the decks json into a proper structure before access instead of accessing it as an untyped map,\n\nDyn != 0 is the standard way to check. Has(conf) was the irregular way.", "url": "https://github.com/ankidroid/Anki-Android/pull/5941#discussion_r404333711", "createdAt": "2020-04-06T19:26:04Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -1053,4 +1053,8 @@ public boolean hasDeckOptions(long deckId) throws NoSuchDeckException {\n     public void removeDeckOptions(long deckId) throws NoSuchDeckException {\n         getDeckOrFail(deckId).remove(\"conf\");\n     }\n+\n+    public static boolean isDynamic(JSONObject deck) {\n+        return deck.getInt(\"dyn\") != 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxOTQ5Mw=="}, "originalCommit": {"oid": "7e8b9ab6142d5670061780215b9a4b73ab2ef14e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM2MzU1MQ==", "bodyText": "good points on all counts - as long as we know this check at least is the regular way, good to go", "url": "https://github.com/ankidroid/Anki-Android/pull/5941#discussion_r404363551", "createdAt": "2020-04-06T20:21:13Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -1053,4 +1053,8 @@ public boolean hasDeckOptions(long deckId) throws NoSuchDeckException {\n     public void removeDeckOptions(long deckId) throws NoSuchDeckException {\n         getDeckOrFail(deckId).remove(\"conf\");\n     }\n+\n+    public static boolean isDynamic(JSONObject deck) {\n+        return deck.getInt(\"dyn\") != 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxOTQ5Mw=="}, "originalCommit": {"oid": "7e8b9ab6142d5670061780215b9a4b73ab2ef14e"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 510, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}