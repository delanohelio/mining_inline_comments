{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3NjAyNDk1", "number": 7632, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjozNjoyOFrOE22Xmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNzo1NToxMVrOE24lJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTQ5MzM5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjozNjoyOFrOHv3OXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNzo0MDo0M1rOHv6J3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0OTkxNw==", "bodyText": "Doesn't ArrayList.addAll already exist?\nCould be simplified even further (and with an efficiency gain):\ncms = note.model().getJSONArray(\"tmpls\").toJsonObjectList()", "url": "https://github.com/ankidroid/Anki-Android/pull/7632#discussion_r519949917", "createdAt": "2020-11-09T16:36:28Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -909,10 +910,7 @@ public void _remNotes(java.util.Collection<Long> ids) {\n \t            break;\n             default: // MODELS\n     \t        cms = new ArrayList<>();\n-                JSONArray tmpls = note.model().getJSONArray(\"tmpls\");\n-                for (JSONObject tmpl: tmpls.jsonObjectIterable()) {\n-                    cms.add(tmpl);\n-                }\n+    \t        addAll(cms, note.model().getJSONArray(\"tmpls\").jsonObjectIterable());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1a84c3fe5bed5d959dfd54701d72dfb5bfce7b5"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk3Nzg0Mw==", "bodyText": "To be clear, the same way that I created jsonObjectIterable you want to add a method\nList<JSONObject> toJSONObjectList()\nand similarly for other type, right ?\nIt would totally work, not totally ideal when we want to add elements to an existing list, since it requires to create list to delete it immediately after, but as long as we create new elmeents, it's great.", "url": "https://github.com/ankidroid/Anki-Android/pull/7632#discussion_r519977843", "createdAt": "2020-11-09T17:10:31Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -909,10 +910,7 @@ public void _remNotes(java.util.Collection<Long> ids) {\n \t            break;\n             default: // MODELS\n     \t        cms = new ArrayList<>();\n-                JSONArray tmpls = note.model().getJSONArray(\"tmpls\");\n-                for (JSONObject tmpl: tmpls.jsonObjectIterable()) {\n-                    cms.add(tmpl);\n-                }\n+    \t        addAll(cms, note.model().getJSONArray(\"tmpls\").jsonObjectIterable());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0OTkxNw=="}, "originalCommit": {"oid": "f1a84c3fe5bed5d959dfd54701d72dfb5bfce7b5"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk3OTU0Mg==", "bodyText": "To be clear, the same way that I created jsonObjectIterable you want to add a method\nList<JSONObject> toJSONObjectList()\nand similarly for other type, right ?\nIt would totally work, not totally ideal when we want to add elements to an existing list, since it requires to create list to delete it immediately after, but as long as we create new elmeents, it's great.\n\nThat's right! For this use case (and a few more) it's perfect as it allows the optimisation of setting the list size before initialisation.\n\nnot totally ideal when we want to add elements to an existing list\n\nTrue, but we have CllectionUtils.addAll for that.", "url": "https://github.com/ankidroid/Anki-Android/pull/7632#discussion_r519979542", "createdAt": "2020-11-09T17:12:59Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -909,10 +910,7 @@ public void _remNotes(java.util.Collection<Long> ids) {\n \t            break;\n             default: // MODELS\n     \t        cms = new ArrayList<>();\n-                JSONArray tmpls = note.model().getJSONArray(\"tmpls\");\n-                for (JSONObject tmpl: tmpls.jsonObjectIterable()) {\n-                    cms.add(tmpl);\n-                }\n+    \t        addAll(cms, note.model().getJSONArray(\"tmpls\").jsonObjectIterable());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0OTkxNw=="}, "originalCommit": {"oid": "f1a84c3fe5bed5d959dfd54701d72dfb5bfce7b5"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk5NzkxNw==", "bodyText": "As I tried to explain above, addAll can not take an iterable, it takes a collection. So I could not give anything directly from Array", "url": "https://github.com/ankidroid/Anki-Android/pull/7632#discussion_r519997917", "createdAt": "2020-11-09T17:40:43Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -909,10 +910,7 @@ public void _remNotes(java.util.Collection<Long> ids) {\n \t            break;\n             default: // MODELS\n     \t        cms = new ArrayList<>();\n-                JSONArray tmpls = note.model().getJSONArray(\"tmpls\");\n-                for (JSONObject tmpl: tmpls.jsonObjectIterable()) {\n-                    cms.add(tmpl);\n-                }\n+    \t        addAll(cms, note.model().getJSONArray(\"tmpls\").jsonObjectIterable());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0OTkxNw=="}, "originalCommit": {"oid": "f1a84c3fe5bed5d959dfd54701d72dfb5bfce7b5"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTQ5NTMxOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjozNjo1M1rOHv3Pew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjozNjo1M1rOHv3Pew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk1MDIwMw==", "bodyText": "ditto", "url": "https://github.com/ankidroid/Anki-Android/pull/7632#discussion_r519950203", "createdAt": "2020-11-09T16:36:53Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java", "diffHunk": "@@ -514,9 +515,7 @@ private static String _incGuid(String guid) {\n \n     public static List<Long> jsonArrayToLongList(JSONArray jsonArray) throws JSONException {\n         List<Long> ar = new ArrayList<>(jsonArray.length());\n-        for (Long l: jsonArray.longIterable()) {\n-            ar.add(l);\n-        }\n+        addAll(ar, jsonArray.longIterable());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1a84c3fe5bed5d959dfd54701d72dfb5bfce7b5"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTQ5NjE1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sync/Syncer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjozNzowMVrOHv3P7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjozNzowMVrOHv3P7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk1MDMxNw==", "bodyText": "ditto", "url": "https://github.com/ankidroid/Anki-Android/pull/7632#discussion_r519950317", "createdAt": "2020-11-09T16:37:01Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sync/Syncer.java", "diffHunk": "@@ -793,9 +795,7 @@ private JSONArray getTags() {\n \n     private void mergeTags(JSONArray tags) {\n         ArrayList<String> list = new ArrayList<>();\n-        for (String tag: tags.stringIterable()) {\n-            list.add(tag);\n-        }\n+        addAll(list, tags.stringIterable());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1a84c3fe5bed5d959dfd54701d72dfb5bfce7b5"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTg1NTcyOnYy", "diffSide": "LEFT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNzo1NToxMVrOHv6tVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODowMToyOFrOHv68iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAwNjk5Ng==", "bodyText": "ditto from the other PR - I don't see how this is the same", "url": "https://github.com/ankidroid/Anki-Android/pull/7632#discussion_r520006996", "createdAt": "2020-11-09T17:55:11Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -1866,14 +1864,10 @@ public CheckDatabaseResult fixIntegrity(CollectionTask.ProgressCallback progress\n         ArrayList<String> problems = new ArrayList<>();\n         notifyProgress.run();\n         if (m.getInt(\"type\") == Consts.MODEL_STD) {\n-            ArrayList<Integer> ords = new ArrayList<>();\n             JSONArray tmpls = m.getJSONArray(\"tmpls\");\n-            for (JSONObject tmpl: tmpls.jsonObjectIterable()) {\n-                ords.add(tmpl.getInt(\"ord\"));\n-            }\n             // cards with invalid ordinal\n             ArrayList<Long> ids = mDb.queryLongList(\n-                    \"SELECT id FROM cards WHERE ord NOT IN \" + Utils.ids2str(ords) + \" AND nid IN ( \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c708f2bbedfb8c3fce225a6590a502ed55879503"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAxMDg4OQ==", "bodyText": "You're entirely right.", "url": "https://github.com/ankidroid/Anki-Android/pull/7632#discussion_r520010889", "createdAt": "2020-11-09T18:01:28Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -1866,14 +1864,10 @@ public CheckDatabaseResult fixIntegrity(CollectionTask.ProgressCallback progress\n         ArrayList<String> problems = new ArrayList<>();\n         notifyProgress.run();\n         if (m.getInt(\"type\") == Consts.MODEL_STD) {\n-            ArrayList<Integer> ords = new ArrayList<>();\n             JSONArray tmpls = m.getJSONArray(\"tmpls\");\n-            for (JSONObject tmpl: tmpls.jsonObjectIterable()) {\n-                ords.add(tmpl.getInt(\"ord\"));\n-            }\n             // cards with invalid ordinal\n             ArrayList<Long> ids = mDb.queryLongList(\n-                    \"SELECT id FROM cards WHERE ord NOT IN \" + Utils.ids2str(ords) + \" AND nid IN ( \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAwNjk5Ng=="}, "originalCommit": {"oid": "c708f2bbedfb8c3fce225a6590a502ed55879503"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 712, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}