{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1OTY3NTM2", "number": 7005, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQyMzoyMjo0OVrOEeHWBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0wMlQxOTo1NjowM1rOFtjHww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDEzMDYyOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/test/java/com/ichi2/libanki/sched/AbstractSchedTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQyMzoyMjo0OVrOHJmblw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQyMzoyMjo0OVrOHJmblw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgyODg4Nw==", "bodyText": "There's semantic meaning in the previous name (admittedly the timeout variable can go)\nI feel the new code is harder to reason about", "url": "https://github.com/ankidroid/Anki-Android/pull/7005#discussion_r479828887", "createdAt": "2020-08-30T23:22:49Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/test/java/com/ichi2/libanki/sched/AbstractSchedTest.java", "diffHunk": "@@ -96,7 +96,7 @@ public void testUndoResetsCardCountsToCorrectValue() throws InterruptedException\n \n         sched.answerCard(cardBeforeUndo, EASE_3);\n \n-        waitForTask(UNDO, 5000);\n+        getCol().getTaskManager().launchCollectionTask(UNDO);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab66529d7fdc0b43ee695ef61fd4e25c9597f46c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzgxNDk5ODE1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/androidTest/java/com/ichi2/anki/tests/ContentProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yOVQyMTo0OTo0M1rOI_rEEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yOVQyMTo0OTo0M1rOI_rEEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzYzNjc1NA==", "bodyText": "Let's keep the TaskManager methods static, and call .getManager() inside the TaskManager methods, this will reduce the PR down to what matters", "url": "https://github.com/ankidroid/Anki-Android/pull/7005#discussion_r603636754", "createdAt": "2021-03-29T21:49:43Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/androidTest/java/com/ichi2/anki/tests/ContentProviderTest.java", "diffHunk": "@@ -795,9 +795,9 @@ public void testQueryNextCard() {\n         for(int i = 0; i < 10; i++) {//minimizing fails, when sched.reset() randomly chooses between multiple cards\n             col.reset();\n             nextCard = sched.getCard();\n-            TaskManager.waitToFinish();\n+            TaskManager.getManager().waitToFinish();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ca54af1ae66e3de93fef9a303db3b5d9c3d2ca3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzgxNzg4NTYwOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/async/SingleTaskManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0zMFQxMzowMDowMVrOJAFt7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0zMFQxMzowMDowMVrOJAFt7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDA3MzQ1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class SingleTaskManager extends TaskManager{\n          \n          \n            \n            public class SingleTaskManager extends TaskManager {", "url": "https://github.com/ankidroid/Anki-Android/pull/7005#discussion_r604073453", "createdAt": "2021-03-30T13:00:01Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/async/SingleTaskManager.java", "diffHunk": "@@ -0,0 +1,166 @@\n+package com.ichi2.async;\n+\n+import android.os.AsyncTask;\n+\n+import com.ichi2.utils.ThreadUtil;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import timber.log.Timber;\n+\n+public class SingleTaskManager extends TaskManager{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84281089ef7a64bbf7fe7d4626c5647e064bbcb2"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzgxNzg5NzA3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/test/java/com/ichi2/anki/RobolectricTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0zMFQxMzowMjoyMlrOJAF1Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0zMFQxMzowMjoyMlrOJAF1Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDA3NTI3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void noBackground() {\n          \n          \n            \n                public void runTasksInForeground() {", "url": "https://github.com/ankidroid/Anki-Android/pull/7005#discussion_r604075274", "createdAt": "2021-03-30T13:02:22Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/RobolectricTest.java", "diffHunk": "@@ -167,10 +172,31 @@ public void tearDown() {\n             //called on each AnkiDroidApp.onCreate(), and spams the build\n             //there is no onDestroy(), so call it here.\n             Timber.uprootAll();\n+\n+            TaskManager.setTaskManager(new SingleTaskManager());\n         }\n     }\n \n \n+    /**\n+     * Ensure that each task in backgrounds are executed immediately instead of being queued.\n+     * This may help debugging test without requiring to guess where `advanceRobolectricLooper` are needed.\n+     */\n+    public void noBackground() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84281089ef7a64bbf7fe7d4626c5647e064bbcb2"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzgxNzg5ODEzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/test/java/com/ichi2/anki/RobolectricTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0zMFQxMzowMjozM1rOJAF1sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0wMlQyMDoyMzo1NlrOJCUGtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDA3NTQ0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void background() {\n          \n          \n            \n                public void runTasksInBackground() {", "url": "https://github.com/ankidroid/Anki-Android/pull/7005#discussion_r604075440", "createdAt": "2021-03-30T13:02:33Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/RobolectricTest.java", "diffHunk": "@@ -167,10 +172,31 @@ public void tearDown() {\n             //called on each AnkiDroidApp.onCreate(), and spams the build\n             //there is no onDestroy(), so call it here.\n             Timber.uprootAll();\n+\n+            TaskManager.setTaskManager(new SingleTaskManager());\n         }\n     }\n \n \n+    /**\n+     * Ensure that each task in backgrounds are executed immediately instead of being queued.\n+     * This may help debugging test without requiring to guess where `advanceRobolectricLooper` are needed.\n+     */\n+    public void noBackground() {\n+        TaskManager.setTaskManager(new ForegroundTaskManager(this));\n+        mBackground = false;\n+    }\n+\n+\n+    /**\n+     * Set back the standard background process\n+     */\n+    public void background() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84281089ef7a64bbf7fe7d4626c5647e064bbcb2"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjM5NDMzNA==", "bodyText": "David's suggestion here is good, the API should have mirror naming if it has mirror effect I think", "url": "https://github.com/ankidroid/Anki-Android/pull/7005#discussion_r606394334", "createdAt": "2021-04-02T19:54:04Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/RobolectricTest.java", "diffHunk": "@@ -167,10 +172,31 @@ public void tearDown() {\n             //called on each AnkiDroidApp.onCreate(), and spams the build\n             //there is no onDestroy(), so call it here.\n             Timber.uprootAll();\n+\n+            TaskManager.setTaskManager(new SingleTaskManager());\n         }\n     }\n \n \n+    /**\n+     * Ensure that each task in backgrounds are executed immediately instead of being queued.\n+     * This may help debugging test without requiring to guess where `advanceRobolectricLooper` are needed.\n+     */\n+    public void noBackground() {\n+        TaskManager.setTaskManager(new ForegroundTaskManager(this));\n+        mBackground = false;\n+    }\n+\n+\n+    /**\n+     * Set back the standard background process\n+     */\n+    public void background() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDA3NTQ0MA=="}, "originalCommit": {"oid": "84281089ef7a64bbf7fe7d4626c5647e064bbcb2"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjQwNjMyNw==", "bodyText": "Sorry, I missed it", "url": "https://github.com/ankidroid/Anki-Android/pull/7005#discussion_r606406327", "createdAt": "2021-04-02T20:23:56Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/RobolectricTest.java", "diffHunk": "@@ -167,10 +172,31 @@ public void tearDown() {\n             //called on each AnkiDroidApp.onCreate(), and spams the build\n             //there is no onDestroy(), so call it here.\n             Timber.uprootAll();\n+\n+            TaskManager.setTaskManager(new SingleTaskManager());\n         }\n     }\n \n \n+    /**\n+     * Ensure that each task in backgrounds are executed immediately instead of being queued.\n+     * This may help debugging test without requiring to guess where `advanceRobolectricLooper` are needed.\n+     */\n+    public void noBackground() {\n+        TaskManager.setTaskManager(new ForegroundTaskManager(this));\n+        mBackground = false;\n+    }\n+\n+\n+    /**\n+     * Set back the standard background process\n+     */\n+    public void background() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDA3NTQ0MA=="}, "originalCommit": {"oid": "84281089ef7a64bbf7fe7d4626c5647e064bbcb2"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzgxNzkwMTI5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/test/java/com/ichi2/anki/RobolectricTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0zMFQxMzowMzoxNlrOJAF3tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0zMVQwMTowMzo1N1rOJAhV3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDA3NTk1Ng==", "bodyText": "Shouldn't this be a call to background, or else the local variable won't be set", "url": "https://github.com/ankidroid/Anki-Android/pull/7005#discussion_r604075956", "createdAt": "2021-03-30T13:03:16Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/RobolectricTest.java", "diffHunk": "@@ -167,10 +172,31 @@ public void tearDown() {\n             //called on each AnkiDroidApp.onCreate(), and spams the build\n             //there is no onDestroy(), so call it here.\n             Timber.uprootAll();\n+\n+            TaskManager.setTaskManager(new SingleTaskManager());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84281089ef7a64bbf7fe7d4626c5647e064bbcb2"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDUyNjA0Nw==", "bodyText": "Nice catch", "url": "https://github.com/ankidroid/Anki-Android/pull/7005#discussion_r604526047", "createdAt": "2021-03-31T01:03:57Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/RobolectricTest.java", "diffHunk": "@@ -167,10 +172,31 @@ public void tearDown() {\n             //called on each AnkiDroidApp.onCreate(), and spams the build\n             //there is no onDestroy(), so call it here.\n             Timber.uprootAll();\n+\n+            TaskManager.setTaskManager(new SingleTaskManager());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDA3NTk1Ng=="}, "originalCommit": {"oid": "84281089ef7a64bbf7fe7d4626c5647e064bbcb2"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzgxNzkwNjE5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/test/java/com/ichi2/async/ForegroundTaskManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0zMFQxMzowNDoxN1rOJAF60w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0zMVQwMTowNzozMFrOJAhaGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDA3Njc1NQ==", "bodyText": "Is it possible to add a warning to exceptions thrown here (as Robolectric does) to warn that a new failure may have something to do with running in the foreground", "url": "https://github.com/ankidroid/Anki-Android/pull/7005#discussion_r604076755", "createdAt": "2021-03-30T13:04:17Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/test/java/com/ichi2/async/ForegroundTaskManager.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package com.ichi2.async;\n+\n+import com.ichi2.libanki.CollectionGetter;\n+import com.ichi2.libanki.Collection;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+public class ForegroundTaskManager extends TaskManager {\n+    private final CollectionGetter mColGetter;\n+\n+\n+    public ForegroundTaskManager(CollectionGetter colGetter) {\n+        mColGetter = colGetter;\n+    }\n+\n+    @Override\n+    protected boolean removeTaskConcrete(CollectionTask task) {\n+        return true;\n+    }\n+\n+\n+    @Override\n+    public <ProgressBackground, ResultBackground> CollectionTask<ProgressBackground, ProgressBackground, ResultBackground, ResultBackground> launchCollectionTaskConcrete(CollectionTask.Task<ProgressBackground, ResultBackground> task) {\n+        return launchCollectionTaskConcrete(task, null);\n+    }\n+\n+\n+    @Override\n+    protected void setLatestInstanceConcrete(CollectionTask task) {\n+    }\n+\n+\n+    @Override\n+    public <ProgressListener, ProgressBackground extends ProgressListener, ResultListener, ResultBackground extends ResultListener> CollectionTask<ProgressListener, ProgressBackground, ResultListener, ResultBackground> launchCollectionTaskConcrete(\n+            @NonNull CollectionTask.Task<ProgressBackground, ResultBackground> task,\n+            @Nullable TaskListener<ProgressListener, ResultListener> listener) {\n+        if (listener != null) {\n+            listener.onPreExecute();\n+        }\n+        ResultBackground res = task.task(mColGetter.getCol(), new MockTaskManager<>(listener));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84281089ef7a64bbf7fe7d4626c5647e064bbcb2"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDUyNzEzMA==", "bodyText": "Done. Not sure about the exact message", "url": "https://github.com/ankidroid/Anki-Android/pull/7005#discussion_r604527130", "createdAt": "2021-03-31T01:07:30Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/test/java/com/ichi2/async/ForegroundTaskManager.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package com.ichi2.async;\n+\n+import com.ichi2.libanki.CollectionGetter;\n+import com.ichi2.libanki.Collection;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+public class ForegroundTaskManager extends TaskManager {\n+    private final CollectionGetter mColGetter;\n+\n+\n+    public ForegroundTaskManager(CollectionGetter colGetter) {\n+        mColGetter = colGetter;\n+    }\n+\n+    @Override\n+    protected boolean removeTaskConcrete(CollectionTask task) {\n+        return true;\n+    }\n+\n+\n+    @Override\n+    public <ProgressBackground, ResultBackground> CollectionTask<ProgressBackground, ProgressBackground, ResultBackground, ResultBackground> launchCollectionTaskConcrete(CollectionTask.Task<ProgressBackground, ResultBackground> task) {\n+        return launchCollectionTaskConcrete(task, null);\n+    }\n+\n+\n+    @Override\n+    protected void setLatestInstanceConcrete(CollectionTask task) {\n+    }\n+\n+\n+    @Override\n+    public <ProgressListener, ProgressBackground extends ProgressListener, ResultListener, ResultBackground extends ResultListener> CollectionTask<ProgressListener, ProgressBackground, ResultListener, ResultBackground> launchCollectionTaskConcrete(\n+            @NonNull CollectionTask.Task<ProgressBackground, ResultBackground> task,\n+            @Nullable TaskListener<ProgressListener, ResultListener> listener) {\n+        if (listener != null) {\n+            listener.onPreExecute();\n+        }\n+        ResultBackground res = task.task(mColGetter.getCol(), new MockTaskManager<>(listener));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDA3Njc1NQ=="}, "originalCommit": {"oid": "84281089ef7a64bbf7fe7d4626c5647e064bbcb2"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzgxNzk0NzE3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/async/TaskManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0zMFQxMzoxMzowMVrOJAGUjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0zMFQxMzoxMzowMVrOJAGUjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDA4MzM0MQ==", "bodyText": "\u26a0\ufe0f This is calling the static launchCollectionTask", "url": "https://github.com/ankidroid/Anki-Android/pull/7005#discussion_r604083341", "createdAt": "2021-03-30T13:13:01Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/async/TaskManager.java", "diffHunk": "@@ -50,11 +48,18 @@ protected static void setLatestInstance(CollectionTask task) {\n      * @param task the task to execute\n      * @return the newly created task\n      */\n+    protected static void setLatestInstance(CollectionTask task) {\n+        sTaskManager.setLatestInstanceConcrete(task);\n+    }\n+\n     public static <ProgressBackground, ResultBackground> CollectionTask<ProgressBackground, ProgressBackground, ResultBackground, ResultBackground> launchCollectionTask(CollectionTask.Task<ProgressBackground, ResultBackground> task) {\n-        return launchCollectionTask(task, null);\n+        return sTaskManager.launchCollectionTask(task);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84281089ef7a64bbf7fe7d4626c5647e064bbcb2"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzgyMDYyOTUyOnYy", "diffSide": "LEFT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0zMFQyMzo1Mzo0MVrOJAgA_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0wMVQxNzoxMDo1NFrOJBwImw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDUwNDMxNg==", "bodyText": "This should likely still be an abstraction on CollectionTask", "url": "https://github.com/ankidroid/Anki-Android/pull/7005#discussion_r604504316", "createdAt": "2021-03-30T23:53:41Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -906,7 +904,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent intent)\n                 }\n             } else if (resultCode == Reviewer.RESULT_ABORT_AND_SYNC) {\n                 Timber.i(\"Obtained Abort and Sync result\");\n-                CollectionTask.waitForAllToFinish(4);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b78b85cd58f6b8e698ab597b46737c673ee07e9d"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDUyNTYyOA==", "bodyText": "Why ?\nMy understanding is that CollectionTask deal with the individual tasks and the TaskManager with the queue of tasks. This is relevant to the queue.", "url": "https://github.com/ankidroid/Anki-Android/pull/7005#discussion_r604525628", "createdAt": "2021-03-31T01:02:30Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -906,7 +904,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent intent)\n                 }\n             } else if (resultCode == Reviewer.RESULT_ABORT_AND_SYNC) {\n                 Timber.i(\"Obtained Abort and Sync result\");\n-                CollectionTask.waitForAllToFinish(4);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDUwNDMxNg=="}, "originalCommit": {"oid": "b78b85cd58f6b8e698ab597b46737c673ee07e9d"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNTgxNjk4Nw==", "bodyText": "You're correct", "url": "https://github.com/ankidroid/Anki-Android/pull/7005#discussion_r605816987", "createdAt": "2021-04-01T17:10:54Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -906,7 +904,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent intent)\n                 }\n             } else if (resultCode == Reviewer.RESULT_ABORT_AND_SYNC) {\n                 Timber.i(\"Obtained Abort and Sync result\");\n-                CollectionTask.waitForAllToFinish(4);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDUwNDMxNg=="}, "originalCommit": {"oid": "b78b85cd58f6b8e698ab597b46737c673ee07e9d"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzgzMzA1NjY3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/test/java/com/ichi2/anki/RobolectricTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0wMlQxOTo1NjowM1rOJCTazQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0wM1QwMToyNDoxOFrOJCdrfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjM5NTA4NQ==", "bodyText": "I think I would actually go farther with this!\nI would start with mBackground = false and in the RobolectricTest.setUp I would set the foreground task manager, with cleanup resetting it to foreground\nI think unit tests wanting actual asynchronous testing are the rare case in other words, and the burden should be on them to call runTasksInForeground vs on regular code to call runTasksInBackground (note I picked David's name there", "url": "https://github.com/ankidroid/Anki-Android/pull/7005#discussion_r606395085", "createdAt": "2021-04-02T19:56:03Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/RobolectricTest.java", "diffHunk": "@@ -77,7 +80,9 @@\n import static org.hamcrest.Matchers.is;\n import static org.robolectric.Shadows.shadowOf;\n \n-public class RobolectricTest {\n+public class RobolectricTest implements CollectionGetter {\n+\n+    private static boolean mBackground = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81dc984585ce8b28b6d8ac1d825afb595bf8dfff"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjQwNTgyMA==", "bodyText": "I would like to merge this PR first.\nI'm okay with doing what you want, but in a different PR. Because if we go your way, we will probably remove also advanceRobolectricLooper and similar functions, as they won't be relevant anymore, and this may lead to some complex tests to deal with, discussion about which tests should or should not be on foreground/background...\nSo, I believe that the request you ask for will take a lot of discussion, and the discussion will be more complex because the current PR\u00a0will be in the change list.\nI'd note that, as far as I know, merging this PR is still a progress, whatever the decision we take for when we should use foreground and background in tests.", "url": "https://github.com/ankidroid/Anki-Android/pull/7005#discussion_r606405820", "createdAt": "2021-04-02T20:22:24Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/RobolectricTest.java", "diffHunk": "@@ -77,7 +80,9 @@\n import static org.hamcrest.Matchers.is;\n import static org.robolectric.Shadows.shadowOf;\n \n-public class RobolectricTest {\n+public class RobolectricTest implements CollectionGetter {\n+\n+    private static boolean mBackground = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjM5NTA4NQ=="}, "originalCommit": {"oid": "81dc984585ce8b28b6d8ac1d825afb595bf8dfff"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjQzMTk5NA==", "bodyText": "Fair point - okay, in this goes, and then hopefully we can switch the default and delete manual looper advance from most tests", "url": "https://github.com/ankidroid/Anki-Android/pull/7005#discussion_r606431994", "createdAt": "2021-04-02T21:41:05Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/RobolectricTest.java", "diffHunk": "@@ -77,7 +80,9 @@\n import static org.hamcrest.Matchers.is;\n import static org.robolectric.Shadows.shadowOf;\n \n-public class RobolectricTest {\n+public class RobolectricTest implements CollectionGetter {\n+\n+    private static boolean mBackground = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjM5NTA4NQ=="}, "originalCommit": {"oid": "81dc984585ce8b28b6d8ac1d825afb595bf8dfff"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjU2MzE5OQ==", "bodyText": "I would start with mBackground = false and in the RobolectricTest.setUp I would set the foreground task manager, with cleanup resetting it to foreground\n\nresetting to \"background\" you mean I assume. I don't expect you want both to set to foreground", "url": "https://github.com/ankidroid/Anki-Android/pull/7005#discussion_r606563199", "createdAt": "2021-04-03T01:24:18Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/RobolectricTest.java", "diffHunk": "@@ -77,7 +80,9 @@\n import static org.hamcrest.Matchers.is;\n import static org.robolectric.Shadows.shadowOf;\n \n-public class RobolectricTest {\n+public class RobolectricTest implements CollectionGetter {\n+\n+    private static boolean mBackground = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjM5NTA4NQ=="}, "originalCommit": {"oid": "81dc984585ce8b28b6d8ac1d825afb595bf8dfff"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4903, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}