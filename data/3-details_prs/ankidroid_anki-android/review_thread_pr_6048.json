{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NTI3MDk1", "number": 6048, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOToxNzozNFrOECs0Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOToyMzo1MFrOECs8Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjY2ODYzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOToxNzozNFrOGfUbww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOTo1ODo1NFrOGfVuKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5MzgyNw==", "bodyText": "For reference: You could use a single | here which will evaluate both sides, but I'm happy with the comment. Feel free to mark as resolved with no action.", "url": "https://github.com/ankidroid/Anki-Android/pull/6048#discussion_r435493827", "createdAt": "2020-06-04T19:17:34Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -979,13 +979,14 @@ private void gather(HashMap<Long, HashMap> node, List<Long> arr) {\n \n \n     public void beforeUpload() {\n-        for (JSONObject d : all()) {\n-            d.put(\"usn\", 0);\n+        boolean changed_decks = Utils.shouldSave(all());\n+        boolean changed_conf = Utils.shouldSave(allConf());\n+        if (changed_decks || changed_conf) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9cffb6595f77972d749eb0a2443f81454813ec8"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUwNjg0OQ==", "bodyText": "Since you are mentioning readability, I do believe the current version to be more clear than using a bitwise or on booleans. I do admit that you're right and that I've not thought of it, so thank you for the feedback.", "url": "https://github.com/ankidroid/Anki-Android/pull/6048#discussion_r435506849", "createdAt": "2020-06-04T19:43:18Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -979,13 +979,14 @@ private void gather(HashMap<Long, HashMap> node, List<Long> arr) {\n \n \n     public void beforeUpload() {\n-        for (JSONObject d : all()) {\n-            d.put(\"usn\", 0);\n+        boolean changed_decks = Utils.shouldSave(all());\n+        boolean changed_conf = Utils.shouldSave(allConf());\n+        if (changed_decks || changed_conf) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5MzgyNw=="}, "originalCommit": {"oid": "b9cffb6595f77972d749eb0a2443f81454813ec8"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUxNDkyMQ==", "bodyText": "No worries - glad I helped. Marking as \"no action needed\"", "url": "https://github.com/ankidroid/Anki-Android/pull/6048#discussion_r435514921", "createdAt": "2020-06-04T19:58:54Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -979,13 +979,14 @@ private void gather(HashMap<Long, HashMap> node, List<Long> arr) {\n \n \n     public void beforeUpload() {\n-        for (JSONObject d : all()) {\n-            d.put(\"usn\", 0);\n+        boolean changed_decks = Utils.shouldSave(all());\n+        boolean changed_conf = Utils.shouldSave(allConf());\n+        if (changed_decks || changed_conf) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5MzgyNw=="}, "originalCommit": {"oid": "b9cffb6595f77972d749eb0a2443f81454813ec8"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjY2OTIzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOToxNzo0NlrOGfUcLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOToxNzo0NlrOGfUcLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5MzkzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // shouldSave should always be called on both list, for\n          \n          \n            \n                        // shouldSave should always be called on both lists, for", "url": "https://github.com/ankidroid/Anki-Android/pull/6048#discussion_r435493935", "createdAt": "2020-06-04T19:17:46Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -979,13 +979,14 @@ private void gather(HashMap<Long, HashMap> node, List<Long> arr) {\n \n \n     public void beforeUpload() {\n-        for (JSONObject d : all()) {\n-            d.put(\"usn\", 0);\n+        boolean changed_decks = Utils.shouldSave(all());\n+        boolean changed_conf = Utils.shouldSave(allConf());\n+        if (changed_decks || changed_conf) {\n+            // shouldSave should always be called on both list, for", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9cffb6595f77972d749eb0a2443f81454813ec8"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjY3NTc1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Tags.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOToxOTo1MlrOGfUgRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDowNDo0NFrOGfV5jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5NDk4Mw==", "bodyText": "nit: I think you can iterate mTags here, rather than the keySet.\nYou might want to extract this to a shouldSave in Utils with a different parameter type for readability", "url": "https://github.com/ankidroid/Anki-Android/pull/6048#discussion_r435494983", "createdAt": "2020-06-04T19:19:52Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Tags.java", "diffHunk": "@@ -372,10 +372,16 @@ public boolean inList(String tag, Iterable<String> tags) {\n      */\n \n     public void beforeUpload() {\n+        boolean changed = false;\n         for (String k : mTags.keySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9cffb6595f77972d749eb0a2443f81454813ec8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUxMzk0NA==", "bodyText": "I'll do another PR if you want. I was not touching this line and would prefer the PR to remain smalls and to reduce the risk they are not NF", "url": "https://github.com/ankidroid/Anki-Android/pull/6048#discussion_r435513944", "createdAt": "2020-06-04T19:56:55Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Tags.java", "diffHunk": "@@ -372,10 +372,16 @@ public boolean inList(String tag, Iterable<String> tags) {\n      */\n \n     public void beforeUpload() {\n+        boolean changed = false;\n         for (String k : mTags.keySet()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5NDk4Mw=="}, "originalCommit": {"oid": "b9cffb6595f77972d749eb0a2443f81454813ec8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUxNjU0OQ==", "bodyText": "Nope, it's a TreeMap and they are not iterable.", "url": "https://github.com/ankidroid/Anki-Android/pull/6048#discussion_r435516549", "createdAt": "2020-06-04T20:02:07Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Tags.java", "diffHunk": "@@ -372,10 +372,16 @@ public boolean inList(String tag, Iterable<String> tags) {\n      */\n \n     public void beforeUpload() {\n+        boolean changed = false;\n         for (String k : mTags.keySet()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5NDk4Mw=="}, "originalCommit": {"oid": "b9cffb6595f77972d749eb0a2443f81454813ec8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUxNzgzOQ==", "bodyText": "Doesn't .entrySet() or .values() work? That sucks. No need for another PR", "url": "https://github.com/ankidroid/Anki-Android/pull/6048#discussion_r435517839", "createdAt": "2020-06-04T20:04:44Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Tags.java", "diffHunk": "@@ -372,10 +372,16 @@ public boolean inList(String tag, Iterable<String> tags) {\n      */\n \n     public void beforeUpload() {\n+        boolean changed = false;\n         for (String k : mTags.keySet()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5NDk4Mw=="}, "originalCommit": {"oid": "b9cffb6595f77972d749eb0a2443f81454813ec8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjY3OTY3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOToyMTowN1rOGfUiyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOTo1OTo0MFrOGfVvrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5NTYyNg==", "bodyText": "if the connection break at this exact moment, the collection will be inconsistent.\n\nIs this handled in the code right now, or do we need an issue to fix this?", "url": "https://github.com/ankidroid/Anki-Android/pull/6048#discussion_r435495626", "createdAt": "2020-06-04T19:21:07Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java", "diffHunk": "@@ -1017,4 +1017,29 @@ public static float randomFloatInRange(float min, float max) {\n         Random rand = new Random();\n         return rand.nextFloat() * (max - min) + min;\n     }\n+\n+    /**\n+       Set usn to 0 in every object.\n+\n+       Usn zero means that the object is already online. Non-zero usn\n+       means that the object is different than online or is not online.\n+\n+       This method is called during sync, before uploading, so during\n+       an instant, the value will be zero while the object is not\n+       actually online; if the connection break at this exact moment,\n+       the collection will be inconsistent.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9cffb6595f77972d749eb0a2443f81454813ec8"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUxMjQ3Mg==", "bodyText": "This is not handled in the code, as the code is the same as in upstream. It was not handled in upstream either. I do not know whether rust takes care of it or not, rust is too hard for me to read.\nI assume you could take a full copy of the arrays as they are before uploading them, and if the sync fails, restore the copy. However, maybe the upload suceeded and we just never received the confirmation, so the arrays are correct and reverting to previous version would actually be the bug.\nI've no clue whether it ever was a problem for anyone (statistically, I assume it has been), but I've no reason to believe that it was actually an important problem", "url": "https://github.com/ankidroid/Anki-Android/pull/6048#discussion_r435512472", "createdAt": "2020-06-04T19:54:09Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java", "diffHunk": "@@ -1017,4 +1017,29 @@ public static float randomFloatInRange(float min, float max) {\n         Random rand = new Random();\n         return rand.nextFloat() * (max - min) + min;\n     }\n+\n+    /**\n+       Set usn to 0 in every object.\n+\n+       Usn zero means that the object is already online. Non-zero usn\n+       means that the object is different than online or is not online.\n+\n+       This method is called during sync, before uploading, so during\n+       an instant, the value will be zero while the object is not\n+       actually online; if the connection break at this exact moment,\n+       the collection will be inconsistent.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5NTYyNg=="}, "originalCommit": {"oid": "b9cffb6595f77972d749eb0a2443f81454813ec8"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUxMjg1NQ==", "bodyText": "I should note in any case that the problem is exactly the same in current master and in this PR. The comment is new but it is about an already existing theoretical problem.", "url": "https://github.com/ankidroid/Anki-Android/pull/6048#discussion_r435512855", "createdAt": "2020-06-04T19:54:52Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java", "diffHunk": "@@ -1017,4 +1017,29 @@ public static float randomFloatInRange(float min, float max) {\n         Random rand = new Random();\n         return rand.nextFloat() * (max - min) + min;\n     }\n+\n+    /**\n+       Set usn to 0 in every object.\n+\n+       Usn zero means that the object is already online. Non-zero usn\n+       means that the object is different than online or is not online.\n+\n+       This method is called during sync, before uploading, so during\n+       an instant, the value will be zero while the object is not\n+       actually online; if the connection break at this exact moment,\n+       the collection will be inconsistent.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5NTYyNg=="}, "originalCommit": {"oid": "b9cffb6595f77972d749eb0a2443f81454813ec8"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUxNTMwOQ==", "bodyText": "Agreed - could you add an issue for someone later to investigate this? I'll do it - #6361", "url": "https://github.com/ankidroid/Anki-Android/pull/6048#discussion_r435515309", "createdAt": "2020-06-04T19:59:40Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java", "diffHunk": "@@ -1017,4 +1017,29 @@ public static float randomFloatInRange(float min, float max) {\n         Random rand = new Random();\n         return rand.nextFloat() * (max - min) + min;\n     }\n+\n+    /**\n+       Set usn to 0 in every object.\n+\n+       Usn zero means that the object is already online. Non-zero usn\n+       means that the object is different than online or is not online.\n+\n+       This method is called during sync, before uploading, so during\n+       an instant, the value will be zero while the object is not\n+       actually online; if the connection break at this exact moment,\n+       the collection will be inconsistent.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5NTYyNg=="}, "originalCommit": {"oid": "b9cffb6595f77972d749eb0a2443f81454813ec8"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjY4ODkwOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOToyMzo1MFrOGfUoYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOTo1OToxNFrOGfVuyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5NzA1OA==", "bodyText": "Nit: needs a name change. should implies it doesn't make changed.\nMaybe markAsRequiringSync", "url": "https://github.com/ankidroid/Anki-Android/pull/6048#discussion_r435497058", "createdAt": "2020-06-04T19:23:50Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java", "diffHunk": "@@ -1017,4 +1017,29 @@ public static float randomFloatInRange(float min, float max) {\n         Random rand = new Random();\n         return rand.nextFloat() * (max - min) + min;\n     }\n+\n+    /**\n+       Set usn to 0 in every object.\n+\n+       Usn zero means that the object is already online. Non-zero usn\n+       means that the object is different than online or is not online.\n+\n+       This method is called during sync, before uploading, so during\n+       an instant, the value will be zero while the object is not\n+       actually online; if the connection break at this exact moment,\n+       the collection will be inconsistent.\n+\n+       @return whether there was a non-zero usn; in this case the list\n+       should be saved before the upload.\n+     */\n+    public static boolean shouldSave(ArrayList<JSONObject> ar) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9cffb6595f77972d749eb0a2443f81454813ec8"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUxMzQ5NQ==", "bodyText": "Indeed, the \"save\" action is done by the caller. This method change the USN number. Actually, it is the reason why the save occurs, to save the new usn number (0) in the database.", "url": "https://github.com/ankidroid/Anki-Android/pull/6048#discussion_r435513495", "createdAt": "2020-06-04T19:56:07Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java", "diffHunk": "@@ -1017,4 +1017,29 @@ public static float randomFloatInRange(float min, float max) {\n         Random rand = new Random();\n         return rand.nextFloat() * (max - min) + min;\n     }\n+\n+    /**\n+       Set usn to 0 in every object.\n+\n+       Usn zero means that the object is already online. Non-zero usn\n+       means that the object is different than online or is not online.\n+\n+       This method is called during sync, before uploading, so during\n+       an instant, the value will be zero while the object is not\n+       actually online; if the connection break at this exact moment,\n+       the collection will be inconsistent.\n+\n+       @return whether there was a non-zero usn; in this case the list\n+       should be saved before the upload.\n+     */\n+    public static boolean shouldSave(ArrayList<JSONObject> ar) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5NzA1OA=="}, "originalCommit": {"oid": "b9cffb6595f77972d749eb0a2443f81454813ec8"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUxNTA4Mg==", "bodyText": "I used another name, but changed it to a more descriptive name", "url": "https://github.com/ankidroid/Anki-Android/pull/6048#discussion_r435515082", "createdAt": "2020-06-04T19:59:14Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java", "diffHunk": "@@ -1017,4 +1017,29 @@ public static float randomFloatInRange(float min, float max) {\n         Random rand = new Random();\n         return rand.nextFloat() * (max - min) + min;\n     }\n+\n+    /**\n+       Set usn to 0 in every object.\n+\n+       Usn zero means that the object is already online. Non-zero usn\n+       means that the object is different than online or is not online.\n+\n+       This method is called during sync, before uploading, so during\n+       an instant, the value will be zero while the object is not\n+       actually online; if the connection break at this exact moment,\n+       the collection will be inconsistent.\n+\n+       @return whether there was a non-zero usn; in this case the list\n+       should be saved before the upload.\n+     */\n+    public static boolean shouldSave(ArrayList<JSONObject> ar) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5NzA1OA=="}, "originalCommit": {"oid": "b9cffb6595f77972d749eb0a2443f81454813ec8"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 365, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}