{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNDcxNjg3", "number": 5961, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOToyMDo0NVrODwiNlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMDoyNDo0OVrODwjcdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMjE4Nzc0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOToyMDo0NVrOGDmJzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOTozODo0M1rOGDmtnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQyNDAxNQ==", "bodyText": "I worry about how this will work across activity restarts, mDueTree would be null unless it was saved/restored in onSaveInstance/onCreate (which we can't do because it is unbounded data and the Bundle for Activity save/restore has finite size).\nI think there should be a null check for mDueTree here and if it's null you'll have to forego the optimization and call updateDeckList from here then return\nRelated, are there any conditions where mDueTree should be invalidated where it is not? My analysis was that updateDeckList would always overwrite it when necessary, but it's worth a triple check to make sure you agree", "url": "https://github.com/ankidroid/Anki-Android/pull/5961#discussion_r406424015", "createdAt": "2020-04-09T19:20:45Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2093,39 +2095,43 @@ public void onPostExecute(TaskData result) {\n                     showCollectionErrorDialog();\n                     return;\n                 }\n-                List<Sched.DeckDueTreeNode> nodes = (List<Sched.DeckDueTreeNode>) result.getObjArray()[0];\n-                mDeckListAdapter.buildDeckList(nodes, getCol());\n-\n-                // Set the \"x due in y minutes\" subtitle\n-                try {\n-                    int eta = mDeckListAdapter.getEta();\n-                    int due = mDeckListAdapter.getDue();\n-                    Resources res = getResources();\n-                    if (getCol().cardCount() != -1) {\n-                        String time = \"-\";\n-                        if (eta != -1) {\n-                            time = Utils.timeQuantity(AnkiDroidApp.getInstance(), eta*60);\n-                        }\n-                        if (getSupportActionBar() != null) {\n-                            getSupportActionBar().setSubtitle(res.getQuantityString(R.plurals.deckpicker_title, due, due, time));\n-                        }\n-                    }\n-                } catch (RuntimeException e) {\n-                    Timber.e(e, \"RuntimeException setting time remaining\");\n-                }\n-\n-                long current = getCol().getDecks().current().optLong(\"id\");\n-                if (mFocusedDeck != current) {\n-                    scrollDecklistToDeck(current);\n-                    mFocusedDeck = current;\n-                }\n+                mDueTree = (List<Sched.DeckDueTreeNode>) result.getObjArray()[0];\n \n+                __renderPage();\n                 // Update the mini statistics bar as well\n                 AnkiStatsTaskHandler.createReviewSummaryStatistics(getCol(), mReviewSummaryTextView);\n             }\n         });\n     }\n \n+    public void __renderPage() {\n+        mDeckListAdapter.buildDeckList(mDueTree, getCol());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba9314eb0ebf32d0c9f625a2152e21954b71843d"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQzMzE4Mw==", "bodyText": "Thanks. I really have trouble keeping my head around all of the specificity of a graphical user interface. I have not yet used ankidroid enough to see that it was a problem here.\nI pushed a correction", "url": "https://github.com/ankidroid/Anki-Android/pull/5961#discussion_r406433183", "createdAt": "2020-04-09T19:38:43Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2093,39 +2095,43 @@ public void onPostExecute(TaskData result) {\n                     showCollectionErrorDialog();\n                     return;\n                 }\n-                List<Sched.DeckDueTreeNode> nodes = (List<Sched.DeckDueTreeNode>) result.getObjArray()[0];\n-                mDeckListAdapter.buildDeckList(nodes, getCol());\n-\n-                // Set the \"x due in y minutes\" subtitle\n-                try {\n-                    int eta = mDeckListAdapter.getEta();\n-                    int due = mDeckListAdapter.getDue();\n-                    Resources res = getResources();\n-                    if (getCol().cardCount() != -1) {\n-                        String time = \"-\";\n-                        if (eta != -1) {\n-                            time = Utils.timeQuantity(AnkiDroidApp.getInstance(), eta*60);\n-                        }\n-                        if (getSupportActionBar() != null) {\n-                            getSupportActionBar().setSubtitle(res.getQuantityString(R.plurals.deckpicker_title, due, due, time));\n-                        }\n-                    }\n-                } catch (RuntimeException e) {\n-                    Timber.e(e, \"RuntimeException setting time remaining\");\n-                }\n-\n-                long current = getCol().getDecks().current().optLong(\"id\");\n-                if (mFocusedDeck != current) {\n-                    scrollDecklistToDeck(current);\n-                    mFocusedDeck = current;\n-                }\n+                mDueTree = (List<Sched.DeckDueTreeNode>) result.getObjArray()[0];\n \n+                __renderPage();\n                 // Update the mini statistics bar as well\n                 AnkiStatsTaskHandler.createReviewSummaryStatistics(getCol(), mReviewSummaryTextView);\n             }\n         });\n     }\n \n+    public void __renderPage() {\n+        mDeckListAdapter.buildDeckList(mDueTree, getCol());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQyNDAxNQ=="}, "originalCommit": {"oid": "ba9314eb0ebf32d0c9f625a2152e21954b71843d"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMjM1MDcwOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMDoxMjowM1rOGDnw1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMDoyMzowMVrOGDoFfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ1MDM4OQ==", "bodyText": "this is a good start but my comment contained the last bit as well \"then return\" - updateDeckList actually fires off an AsyncTask and only in that future timeline in the onPostExecute will mDueTree have a value, so we cannot proceed here on our timeline to use mDueTree, because it is still null. So after checking for null, we schedule that work but then we have to just call return here so we don't do anymore work. onPostExecute in updateDeckList will set mDueTree and call back into this code later, and we'll make it past this check and be able to do the work", "url": "https://github.com/ankidroid/Anki-Android/pull/5961#discussion_r406450389", "createdAt": "2020-04-09T20:12:03Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2093,39 +2095,48 @@ public void onPostExecute(TaskData result) {\n                     showCollectionErrorDialog();\n                     return;\n                 }\n-                List<Sched.DeckDueTreeNode> nodes = (List<Sched.DeckDueTreeNode>) result.getObjArray()[0];\n-                mDeckListAdapter.buildDeckList(nodes, getCol());\n-\n-                // Set the \"x due in y minutes\" subtitle\n-                try {\n-                    int eta = mDeckListAdapter.getEta();\n-                    int due = mDeckListAdapter.getDue();\n-                    Resources res = getResources();\n-                    if (getCol().cardCount() != -1) {\n-                        String time = \"-\";\n-                        if (eta != -1) {\n-                            time = Utils.timeQuantity(AnkiDroidApp.getInstance(), eta*60);\n-                        }\n-                        if (getSupportActionBar() != null) {\n-                            getSupportActionBar().setSubtitle(res.getQuantityString(R.plurals.deckpicker_title, due, due, time));\n-                        }\n-                    }\n-                } catch (RuntimeException e) {\n-                    Timber.e(e, \"RuntimeException setting time remaining\");\n-                }\n-\n-                long current = getCol().getDecks().current().optLong(\"id\");\n-                if (mFocusedDeck != current) {\n-                    scrollDecklistToDeck(current);\n-                    mFocusedDeck = current;\n-                }\n+                mDueTree = (List<Sched.DeckDueTreeNode>) result.getObjArray()[0];\n \n+                __renderPage();\n                 // Update the mini statistics bar as well\n                 AnkiStatsTaskHandler.createReviewSummaryStatistics(getCol(), mReviewSummaryTextView);\n             }\n         });\n     }\n \n+    public void __renderPage() {\n+        if (mDueTree == null) {\n+            // mDueTree may be set back to null when the activity restart.\n+            // We may need to recompute it.\n+            updateDeckList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f3cdf3332e0f0585b112cbd9dd97343039c0244"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ1NDk4Nw==", "bodyText": "Yeah, of course returning make sens. I don't know what I was thinking in this change.", "url": "https://github.com/ankidroid/Anki-Android/pull/5961#discussion_r406454987", "createdAt": "2020-04-09T20:21:41Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2093,39 +2095,48 @@ public void onPostExecute(TaskData result) {\n                     showCollectionErrorDialog();\n                     return;\n                 }\n-                List<Sched.DeckDueTreeNode> nodes = (List<Sched.DeckDueTreeNode>) result.getObjArray()[0];\n-                mDeckListAdapter.buildDeckList(nodes, getCol());\n-\n-                // Set the \"x due in y minutes\" subtitle\n-                try {\n-                    int eta = mDeckListAdapter.getEta();\n-                    int due = mDeckListAdapter.getDue();\n-                    Resources res = getResources();\n-                    if (getCol().cardCount() != -1) {\n-                        String time = \"-\";\n-                        if (eta != -1) {\n-                            time = Utils.timeQuantity(AnkiDroidApp.getInstance(), eta*60);\n-                        }\n-                        if (getSupportActionBar() != null) {\n-                            getSupportActionBar().setSubtitle(res.getQuantityString(R.plurals.deckpicker_title, due, due, time));\n-                        }\n-                    }\n-                } catch (RuntimeException e) {\n-                    Timber.e(e, \"RuntimeException setting time remaining\");\n-                }\n-\n-                long current = getCol().getDecks().current().optLong(\"id\");\n-                if (mFocusedDeck != current) {\n-                    scrollDecklistToDeck(current);\n-                    mFocusedDeck = current;\n-                }\n+                mDueTree = (List<Sched.DeckDueTreeNode>) result.getObjArray()[0];\n \n+                __renderPage();\n                 // Update the mini statistics bar as well\n                 AnkiStatsTaskHandler.createReviewSummaryStatistics(getCol(), mReviewSummaryTextView);\n             }\n         });\n     }\n \n+    public void __renderPage() {\n+        if (mDueTree == null) {\n+            // mDueTree may be set back to null when the activity restart.\n+            // We may need to recompute it.\n+            updateDeckList();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ1MDM4OQ=="}, "originalCommit": {"oid": "0f3cdf3332e0f0585b112cbd9dd97343039c0244"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ1NTY3Nw==", "bodyText": "Pushed. Thanks for the explanation.", "url": "https://github.com/ankidroid/Anki-Android/pull/5961#discussion_r406455677", "createdAt": "2020-04-09T20:23:01Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2093,39 +2095,48 @@ public void onPostExecute(TaskData result) {\n                     showCollectionErrorDialog();\n                     return;\n                 }\n-                List<Sched.DeckDueTreeNode> nodes = (List<Sched.DeckDueTreeNode>) result.getObjArray()[0];\n-                mDeckListAdapter.buildDeckList(nodes, getCol());\n-\n-                // Set the \"x due in y minutes\" subtitle\n-                try {\n-                    int eta = mDeckListAdapter.getEta();\n-                    int due = mDeckListAdapter.getDue();\n-                    Resources res = getResources();\n-                    if (getCol().cardCount() != -1) {\n-                        String time = \"-\";\n-                        if (eta != -1) {\n-                            time = Utils.timeQuantity(AnkiDroidApp.getInstance(), eta*60);\n-                        }\n-                        if (getSupportActionBar() != null) {\n-                            getSupportActionBar().setSubtitle(res.getQuantityString(R.plurals.deckpicker_title, due, due, time));\n-                        }\n-                    }\n-                } catch (RuntimeException e) {\n-                    Timber.e(e, \"RuntimeException setting time remaining\");\n-                }\n-\n-                long current = getCol().getDecks().current().optLong(\"id\");\n-                if (mFocusedDeck != current) {\n-                    scrollDecklistToDeck(current);\n-                    mFocusedDeck = current;\n-                }\n+                mDueTree = (List<Sched.DeckDueTreeNode>) result.getObjArray()[0];\n \n+                __renderPage();\n                 // Update the mini statistics bar as well\n                 AnkiStatsTaskHandler.createReviewSummaryStatistics(getCol(), mReviewSummaryTextView);\n             }\n         });\n     }\n \n+    public void __renderPage() {\n+        if (mDueTree == null) {\n+            // mDueTree may be set back to null when the activity restart.\n+            // We may need to recompute it.\n+            updateDeckList();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ1MDM4OQ=="}, "originalCommit": {"oid": "0f3cdf3332e0f0585b112cbd9dd97343039c0244"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMjM4OTY2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMDoyNDo0OVrOGDoI-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMDoyNDo0OVrOGDoI-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ1NjU3MA==", "bodyText": "Issue found: The instance method name '__renderPage' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ankidroid/Anki-Android/pull/5961#discussion_r406456570", "createdAt": "2020-04-09T20:24:49Z", "author": {"login": "timrae"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2093,39 +2095,49 @@ public void onPostExecute(TaskData result) {\n                     showCollectionErrorDialog();\n                     return;\n                 }\n-                List<Sched.DeckDueTreeNode> nodes = (List<Sched.DeckDueTreeNode>) result.getObjArray()[0];\n-                mDeckListAdapter.buildDeckList(nodes, getCol());\n-\n-                // Set the \"x due in y minutes\" subtitle\n-                try {\n-                    int eta = mDeckListAdapter.getEta();\n-                    int due = mDeckListAdapter.getDue();\n-                    Resources res = getResources();\n-                    if (getCol().cardCount() != -1) {\n-                        String time = \"-\";\n-                        if (eta != -1) {\n-                            time = Utils.timeQuantity(AnkiDroidApp.getInstance(), eta*60);\n-                        }\n-                        if (getSupportActionBar() != null) {\n-                            getSupportActionBar().setSubtitle(res.getQuantityString(R.plurals.deckpicker_title, due, due, time));\n-                        }\n-                    }\n-                } catch (RuntimeException e) {\n-                    Timber.e(e, \"RuntimeException setting time remaining\");\n-                }\n-\n-                long current = getCol().getDecks().current().optLong(\"id\");\n-                if (mFocusedDeck != current) {\n-                    scrollDecklistToDeck(current);\n-                    mFocusedDeck = current;\n-                }\n+                mDueTree = (List<Sched.DeckDueTreeNode>) result.getObjArray()[0];\n \n+                __renderPage();\n                 // Update the mini statistics bar as well\n                 AnkiStatsTaskHandler.createReviewSummaryStatistics(getCol(), mReviewSummaryTextView);\n             }\n         });\n     }\n \n+    public void __renderPage() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f74e827e166253197a2375b074f9fd337bcd29d2"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 536, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}