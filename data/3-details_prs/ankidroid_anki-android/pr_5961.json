{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNDcxNjg3", "number": 5961, "title": "Collapsing a deck get quick", "bodyText": "Pull Request template\nPurpose / Description\nCollapsing a deck is an extremely long process (I've more than 200 decks), and it does not need to since there is nothing to recompute.\nFixes\nIt gets quicker\nApproach\nCurrently, collapsing a deck calls updateDeckList. This methods\nrecompute the number of cards to review in each deck and subdecks. On\nmy collection, it's a 30 seconds long operation. This operation is\ntotally useless when decks get collapsed since this does not change\nthe deck hierarchy at all.\nI just took a part of the postExecute method which updates the view\nand put it in an external function __renderPage. The method\n__renderPage is called from updateDeckList's onPostExecute and\nwhen a deck is (un)collapsed. This decrease collapsing down to under a\nsecond on my phone.\nIn order to allow __renderPage to do its computation, a variable\nmDueTree is added, which save the last due tree.\nThe name mDueTree and __renderPage are related to the variables\n_dueTree and __renderPage. in qt/deckbrowser.py\nHow Has This Been Tested?\nAdding it to my merge branch, installing it on my phone. I collapse/uncollapse in under a second. No problem either when I sync, review a card and come back to deck list, etc...\nLearning (optional, can help others)\nDescribe the research stage\nLinks to blog posts, patterns, libraries or addons used to solve this problem\nChecklist\nPlease, go through these checks before submitting the PR.\n\n You have not changed whitespace unnecessarily (it makes diffs hard to read)\n You have a descriptive commit message with a short title (first line, max 50 chars).\n Your code follows the style of the project (e.g. never omit braces in if statements)\n You have commented your code, particularly in hard-to-understand areas\n You have performed a self-review of your own code", "createdAt": "2020-04-09T14:53:32Z", "url": "https://github.com/ankidroid/Anki-Android/pull/5961", "merged": true, "mergeCommit": {"oid": "a0957344677d3b13d7fbc9aa661db94c12cc3e6f"}, "closed": true, "closedAt": "2020-04-09T22:17:11Z", "author": {"login": "Arthur-Milchior"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcV_9TMABqjMyMTkyNzQwMTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWCoG1AFqTM5MTExMzc5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e65c906a48d67bddab3c936cda5dc91aabdff97b", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/e65c906a48d67bddab3c936cda5dc91aabdff97b", "committedDate": "2020-04-09T14:48:52Z", "message": "Collapsing a deck get quick\n\nCurrently, collapsing a deck calls `updateDeckList`. This methods\nrecompute the number of cards to review in each deck and subdecks. On\nmy collection, it's a 30 seconds long operation. This operation is\ntotally useless when decks get collapsed since this does not change\nthe deck hierarchy at all.\n\nI just took a part of the postExecute method which updates the view\nand put it in an external function `__renderPage`. The method\n`__renderPage` is called from `updateDeckList`'s `onPostExecute` and\nwhen a deck is (un)collapsed. This decrease collapsing down to under a\nsecond on my phone.\n\nIn order to allow `__renderPage` to do its computation, a variable\n`mDueTree` is added, which save the last due tree.\n\nThe name `mDueTree` and `__renderPage` are related to the variables\n`_dueTree` and `__renderPage`. in qt/deckbrowser.py"}, "afterCommit": {"oid": "05cca4230482e01697dd2de80f48b7303e87efaf", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/05cca4230482e01697dd2de80f48b7303e87efaf", "committedDate": "2020-04-09T17:28:58Z", "message": "Collapsing a deck get quick\n\nCurrently, collapsing a deck calls `updateDeckList`. This methods\nrecompute the number of cards to review in each deck and subdecks. On\nmy collection, it's a 30 seconds long operation. This operation is\ntotally useless when decks get collapsed since this does not change\nthe deck hierarchy at all.\n\nI just took a part of the postExecute method which updates the view\nand put it in an external function `__renderPage`. The method\n`__renderPage` is called from `updateDeckList`'s `onPostExecute` and\nwhen a deck is (un)collapsed. This decrease collapsing down to under a\nsecond on my phone.\n\nIn order to allow `__renderPage` to do its computation, a variable\n`mDueTree` is added, which save the last due tree.\n\nThe name `mDueTree` and `__renderPage` are related to the variables\n`_dueTree` and `__renderPage`. in qt/deckbrowser.py"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "05cca4230482e01697dd2de80f48b7303e87efaf", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/05cca4230482e01697dd2de80f48b7303e87efaf", "committedDate": "2020-04-09T17:28:58Z", "message": "Collapsing a deck get quick\n\nCurrently, collapsing a deck calls `updateDeckList`. This methods\nrecompute the number of cards to review in each deck and subdecks. On\nmy collection, it's a 30 seconds long operation. This operation is\ntotally useless when decks get collapsed since this does not change\nthe deck hierarchy at all.\n\nI just took a part of the postExecute method which updates the view\nand put it in an external function `__renderPage`. The method\n`__renderPage` is called from `updateDeckList`'s `onPostExecute` and\nwhen a deck is (un)collapsed. This decrease collapsing down to under a\nsecond on my phone.\n\nIn order to allow `__renderPage` to do its computation, a variable\n`mDueTree` is added, which save the last due tree.\n\nThe name `mDueTree` and `__renderPage` are related to the variables\n`_dueTree` and `__renderPage`. in qt/deckbrowser.py"}, "afterCommit": {"oid": "ba9314eb0ebf32d0c9f625a2152e21954b71843d", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/ba9314eb0ebf32d0c9f625a2152e21954b71843d", "committedDate": "2020-04-09T17:30:04Z", "message": "Collapsing a deck get quick\n\nCurrently, collapsing a deck calls `updateDeckList`. This methods\nrecompute the number of cards to review in each deck and subdecks. On\nmy collection, it's a 30 seconds long operation. This operation is\ntotally useless when decks get collapsed since this does not change\nthe deck hierarchy at all.\n\nI just took a part of the postExecute method which updates the view\nand put it in an external function `__renderPage`. The method\n`__renderPage` is called from `updateDeckList`'s `onPostExecute` and\nwhen a deck is (un)collapsed. This decrease collapsing down to under a\nsecond on my phone.\n\nIn order to allow `__renderPage` to do its computation, a variable\n`mDueTree` is added, which save the last due tree.\n\nThe name `mDueTree` and `__renderPage` are related to the variables\n`_dueTree` and `__renderPage`. in qt/deckbrowser.py"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMDY2ODU2", "url": "https://github.com/ankidroid/Anki-Android/pull/5961#pullrequestreview-391066856", "createdAt": "2020-04-09T19:20:45Z", "commit": {"oid": "ba9314eb0ebf32d0c9f625a2152e21954b71843d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOToyMDo0NVrOGDmJzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOToyMDo0NVrOGDmJzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQyNDAxNQ==", "bodyText": "I worry about how this will work across activity restarts, mDueTree would be null unless it was saved/restored in onSaveInstance/onCreate (which we can't do because it is unbounded data and the Bundle for Activity save/restore has finite size).\nI think there should be a null check for mDueTree here and if it's null you'll have to forego the optimization and call updateDeckList from here then return\nRelated, are there any conditions where mDueTree should be invalidated where it is not? My analysis was that updateDeckList would always overwrite it when necessary, but it's worth a triple check to make sure you agree", "url": "https://github.com/ankidroid/Anki-Android/pull/5961#discussion_r406424015", "createdAt": "2020-04-09T19:20:45Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2093,39 +2095,43 @@ public void onPostExecute(TaskData result) {\n                     showCollectionErrorDialog();\n                     return;\n                 }\n-                List<Sched.DeckDueTreeNode> nodes = (List<Sched.DeckDueTreeNode>) result.getObjArray()[0];\n-                mDeckListAdapter.buildDeckList(nodes, getCol());\n-\n-                // Set the \"x due in y minutes\" subtitle\n-                try {\n-                    int eta = mDeckListAdapter.getEta();\n-                    int due = mDeckListAdapter.getDue();\n-                    Resources res = getResources();\n-                    if (getCol().cardCount() != -1) {\n-                        String time = \"-\";\n-                        if (eta != -1) {\n-                            time = Utils.timeQuantity(AnkiDroidApp.getInstance(), eta*60);\n-                        }\n-                        if (getSupportActionBar() != null) {\n-                            getSupportActionBar().setSubtitle(res.getQuantityString(R.plurals.deckpicker_title, due, due, time));\n-                        }\n-                    }\n-                } catch (RuntimeException e) {\n-                    Timber.e(e, \"RuntimeException setting time remaining\");\n-                }\n-\n-                long current = getCol().getDecks().current().optLong(\"id\");\n-                if (mFocusedDeck != current) {\n-                    scrollDecklistToDeck(current);\n-                    mFocusedDeck = current;\n-                }\n+                mDueTree = (List<Sched.DeckDueTreeNode>) result.getObjArray()[0];\n \n+                __renderPage();\n                 // Update the mini statistics bar as well\n                 AnkiStatsTaskHandler.createReviewSummaryStatistics(getCol(), mReviewSummaryTextView);\n             }\n         });\n     }\n \n+    public void __renderPage() {\n+        mDeckListAdapter.buildDeckList(mDueTree, getCol());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba9314eb0ebf32d0c9f625a2152e21954b71843d"}, "originalPosition": 67}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba9314eb0ebf32d0c9f625a2152e21954b71843d", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/ba9314eb0ebf32d0c9f625a2152e21954b71843d", "committedDate": "2020-04-09T17:30:04Z", "message": "Collapsing a deck get quick\n\nCurrently, collapsing a deck calls `updateDeckList`. This methods\nrecompute the number of cards to review in each deck and subdecks. On\nmy collection, it's a 30 seconds long operation. This operation is\ntotally useless when decks get collapsed since this does not change\nthe deck hierarchy at all.\n\nI just took a part of the postExecute method which updates the view\nand put it in an external function `__renderPage`. The method\n`__renderPage` is called from `updateDeckList`'s `onPostExecute` and\nwhen a deck is (un)collapsed. This decrease collapsing down to under a\nsecond on my phone.\n\nIn order to allow `__renderPage` to do its computation, a variable\n`mDueTree` is added, which save the last due tree.\n\nThe name `mDueTree` and `__renderPage` are related to the variables\n`_dueTree` and `__renderPage`. in qt/deckbrowser.py"}, "afterCommit": {"oid": "0f3cdf3332e0f0585b112cbd9dd97343039c0244", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/0f3cdf3332e0f0585b112cbd9dd97343039c0244", "committedDate": "2020-04-09T19:37:26Z", "message": "Collapsing a deck get quick\n\nCurrently, collapsing a deck calls `updateDeckList`. This methods\nrecompute the number of cards to review in each deck and subdecks. On\nmy collection, it's a 30 seconds long operation. This operation is\ntotally useless when decks get collapsed since this does not change\nthe deck hierarchy at all.\n\nI just took a part of the postExecute method which updates the view\nand put it in an external function `__renderPage`. The method\n`__renderPage` is called from `updateDeckList`'s `onPostExecute` and\nwhen a deck is (un)collapsed. This decrease collapsing down to under a\nsecond on my phone.\n\nIn order to allow `__renderPage` to do its computation, a variable\n`mDueTree` is added, which save the last due tree.\n\nThe name `mDueTree` and `__renderPage` are related to the variables\n`_dueTree` and `__renderPage`. in qt/deckbrowser.py"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMDk5MjM2", "url": "https://github.com/ankidroid/Anki-Android/pull/5961#pullrequestreview-391099236", "createdAt": "2020-04-09T20:12:03Z", "commit": {"oid": "0f3cdf3332e0f0585b112cbd9dd97343039c0244"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMDoxMjowM1rOGDnw1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMDoxMjowM1rOGDnw1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ1MDM4OQ==", "bodyText": "this is a good start but my comment contained the last bit as well \"then return\" - updateDeckList actually fires off an AsyncTask and only in that future timeline in the onPostExecute will mDueTree have a value, so we cannot proceed here on our timeline to use mDueTree, because it is still null. So after checking for null, we schedule that work but then we have to just call return here so we don't do anymore work. onPostExecute in updateDeckList will set mDueTree and call back into this code later, and we'll make it past this check and be able to do the work", "url": "https://github.com/ankidroid/Anki-Android/pull/5961#discussion_r406450389", "createdAt": "2020-04-09T20:12:03Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2093,39 +2095,48 @@ public void onPostExecute(TaskData result) {\n                     showCollectionErrorDialog();\n                     return;\n                 }\n-                List<Sched.DeckDueTreeNode> nodes = (List<Sched.DeckDueTreeNode>) result.getObjArray()[0];\n-                mDeckListAdapter.buildDeckList(nodes, getCol());\n-\n-                // Set the \"x due in y minutes\" subtitle\n-                try {\n-                    int eta = mDeckListAdapter.getEta();\n-                    int due = mDeckListAdapter.getDue();\n-                    Resources res = getResources();\n-                    if (getCol().cardCount() != -1) {\n-                        String time = \"-\";\n-                        if (eta != -1) {\n-                            time = Utils.timeQuantity(AnkiDroidApp.getInstance(), eta*60);\n-                        }\n-                        if (getSupportActionBar() != null) {\n-                            getSupportActionBar().setSubtitle(res.getQuantityString(R.plurals.deckpicker_title, due, due, time));\n-                        }\n-                    }\n-                } catch (RuntimeException e) {\n-                    Timber.e(e, \"RuntimeException setting time remaining\");\n-                }\n-\n-                long current = getCol().getDecks().current().optLong(\"id\");\n-                if (mFocusedDeck != current) {\n-                    scrollDecklistToDeck(current);\n-                    mFocusedDeck = current;\n-                }\n+                mDueTree = (List<Sched.DeckDueTreeNode>) result.getObjArray()[0];\n \n+                __renderPage();\n                 // Update the mini statistics bar as well\n                 AnkiStatsTaskHandler.createReviewSummaryStatistics(getCol(), mReviewSummaryTextView);\n             }\n         });\n     }\n \n+    public void __renderPage() {\n+        if (mDueTree == null) {\n+            // mDueTree may be set back to null when the activity restart.\n+            // We may need to recompute it.\n+            updateDeckList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f3cdf3332e0f0585b112cbd9dd97343039c0244"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f74e827e166253197a2375b074f9fd337bcd29d2", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/f74e827e166253197a2375b074f9fd337bcd29d2", "committedDate": "2020-04-09T20:22:29Z", "message": "Collapsing a deck get quick\n\nCurrently, collapsing a deck calls `updateDeckList`. This methods\nrecompute the number of cards to review in each deck and subdecks. On\nmy collection, it's a 30 seconds long operation. This operation is\ntotally useless when decks get collapsed since this does not change\nthe deck hierarchy at all.\n\nI just took a part of the postExecute method which updates the view\nand put it in an external function `__renderPage`. The method\n`__renderPage` is called from `updateDeckList`'s `onPostExecute` and\nwhen a deck is (un)collapsed. This decrease collapsing down to under a\nsecond on my phone.\n\nIn order to allow `__renderPage` to do its computation, a variable\n`mDueTree` is added, which save the last due tree.\n\nThe name `mDueTree` and `__renderPage` are related to the variables\n`_dueTree` and `__renderPage`. in qt/deckbrowser.py"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f3cdf3332e0f0585b112cbd9dd97343039c0244", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/0f3cdf3332e0f0585b112cbd9dd97343039c0244", "committedDate": "2020-04-09T19:37:26Z", "message": "Collapsing a deck get quick\n\nCurrently, collapsing a deck calls `updateDeckList`. This methods\nrecompute the number of cards to review in each deck and subdecks. On\nmy collection, it's a 30 seconds long operation. This operation is\ntotally useless when decks get collapsed since this does not change\nthe deck hierarchy at all.\n\nI just took a part of the postExecute method which updates the view\nand put it in an external function `__renderPage`. The method\n`__renderPage` is called from `updateDeckList`'s `onPostExecute` and\nwhen a deck is (un)collapsed. This decrease collapsing down to under a\nsecond on my phone.\n\nIn order to allow `__renderPage` to do its computation, a variable\n`mDueTree` is added, which save the last due tree.\n\nThe name `mDueTree` and `__renderPage` are related to the variables\n`_dueTree` and `__renderPage`. in qt/deckbrowser.py"}, "afterCommit": {"oid": "f74e827e166253197a2375b074f9fd337bcd29d2", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/f74e827e166253197a2375b074f9fd337bcd29d2", "committedDate": "2020-04-09T20:22:29Z", "message": "Collapsing a deck get quick\n\nCurrently, collapsing a deck calls `updateDeckList`. This methods\nrecompute the number of cards to review in each deck and subdecks. On\nmy collection, it's a 30 seconds long operation. This operation is\ntotally useless when decks get collapsed since this does not change\nthe deck hierarchy at all.\n\nI just took a part of the postExecute method which updates the view\nand put it in an external function `__renderPage`. The method\n`__renderPage` is called from `updateDeckList`'s `onPostExecute` and\nwhen a deck is (un)collapsed. This decrease collapsing down to under a\nsecond on my phone.\n\nIn order to allow `__renderPage` to do its computation, a variable\n`mDueTree` is added, which save the last due tree.\n\nThe name `mDueTree` and `__renderPage` are related to the variables\n`_dueTree` and `__renderPage`. in qt/deckbrowser.py"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMTA2ODg2", "url": "https://github.com/ankidroid/Anki-Android/pull/5961#pullrequestreview-391106886", "createdAt": "2020-04-09T20:24:49Z", "commit": {"oid": "f74e827e166253197a2375b074f9fd337bcd29d2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMDoyNDo0OVrOGDoI-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMDoyNDo0OVrOGDoI-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ1NjU3MA==", "bodyText": "Issue found: The instance method name '__renderPage' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ankidroid/Anki-Android/pull/5961#discussion_r406456570", "createdAt": "2020-04-09T20:24:49Z", "author": {"login": "timrae"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2093,39 +2095,49 @@ public void onPostExecute(TaskData result) {\n                     showCollectionErrorDialog();\n                     return;\n                 }\n-                List<Sched.DeckDueTreeNode> nodes = (List<Sched.DeckDueTreeNode>) result.getObjArray()[0];\n-                mDeckListAdapter.buildDeckList(nodes, getCol());\n-\n-                // Set the \"x due in y minutes\" subtitle\n-                try {\n-                    int eta = mDeckListAdapter.getEta();\n-                    int due = mDeckListAdapter.getDue();\n-                    Resources res = getResources();\n-                    if (getCol().cardCount() != -1) {\n-                        String time = \"-\";\n-                        if (eta != -1) {\n-                            time = Utils.timeQuantity(AnkiDroidApp.getInstance(), eta*60);\n-                        }\n-                        if (getSupportActionBar() != null) {\n-                            getSupportActionBar().setSubtitle(res.getQuantityString(R.plurals.deckpicker_title, due, due, time));\n-                        }\n-                    }\n-                } catch (RuntimeException e) {\n-                    Timber.e(e, \"RuntimeException setting time remaining\");\n-                }\n-\n-                long current = getCol().getDecks().current().optLong(\"id\");\n-                if (mFocusedDeck != current) {\n-                    scrollDecklistToDeck(current);\n-                    mFocusedDeck = current;\n-                }\n+                mDueTree = (List<Sched.DeckDueTreeNode>) result.getObjArray()[0];\n \n+                __renderPage();\n                 // Update the mini statistics bar as well\n                 AnkiStatsTaskHandler.createReviewSummaryStatistics(getCol(), mReviewSummaryTextView);\n             }\n         });\n     }\n \n+    public void __renderPage() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f74e827e166253197a2375b074f9fd337bcd29d2"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMTEzNzk3", "url": "https://github.com/ankidroid/Anki-Android/pull/5961#pullrequestreview-391113797", "createdAt": "2020-04-09T20:36:02Z", "commit": {"oid": "f74e827e166253197a2375b074f9fd337bcd29d2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3616, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}