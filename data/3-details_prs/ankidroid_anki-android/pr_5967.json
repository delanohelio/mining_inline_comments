{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxODkyNzc0", "number": 5967, "title": "schedv1 prepared queries", "bodyText": "When ankidroid scheduler reset, it spends a lot of time in queries. While investigating it, I realized that most queries where not \"prepared statements\". If my basic notions of database are right, it means that we were loosing uselessly an huge amount of time by compiling each query over and over again and just replacing the deck id.\nSo, in this PR, I simply transformed each query of sched v1 into prepared statements. And I can confirm that on my phone, it makes ankidroid quite faster. Saving seconds when loading a deck with hundreds of subdecks.\nCan you please let me know if there is anything wrong with this approach ? Any problem I missed ? A reason why prepared statements were not used before.\nIf there are known, then I'll do a similar work on scheduler V2 and on other queries in the code. But it is such a boring task that I prefer to wait for feedback to be sure that I didn't miss anything before doing more of it.\nAs a side note, I tried as much as possible to preserve indentation and new line in middle of queries, so that the diff is as simple to check as possible.", "createdAt": "2020-04-10T12:38:21Z", "url": "https://github.com/ankidroid/Anki-Android/pull/5967", "merged": true, "mergeCommit": {"oid": "5569d28c3865b0a56aafd2172694a4f86b1a7ba4"}, "closed": true, "closedAt": "2020-04-12T01:21:11Z", "author": {"login": "Arthur-Milchior"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWQcbggBqjMyMjE3NDA1NjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWv4WNAFqTM5MTgxMjc3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ca9bd8b8a0e1430f15a9d34db7db253f826d1ba7", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/ca9bd8b8a0e1430f15a9d34db7db253f826d1ba7", "committedDate": "2020-04-10T12:32:49Z", "message": "schedv1 prepared queries"}, "afterCommit": {"oid": "86989067049d50520b4657b8c61449c030682b17", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/86989067049d50520b4657b8c61449c030682b17", "committedDate": "2020-04-10T12:41:51Z", "message": "schedv1 prepared queries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTM5NDE4", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#pullrequestreview-391539418", "createdAt": "2020-04-10T16:40:17Z", "commit": {"oid": "86989067049d50520b4657b8c61449c030682b17"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNjo0MDoxN1rOGD_gfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNjo0MDoxN1rOGD_gfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzOTQyMQ==", "bodyText": "out of curiosity - these strings that are built as a bunch of ids to be used in an 'IN' query, can those not be used as an argument in a prepared statement? because if they can't then the statement preparation won't have an effect as this will change the database's view of what the statement is and mean caching is ineffective. There are few examples but it's the same general question", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406839421", "createdAt": "2020-04-10T16:40:17Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Sched.java", "diffHunk": "@@ -1231,9 +1242,9 @@ private Card _getRevCard() {\n \n \n     public int totalRevForCurrentDeck() {\n-        return mCol.getDb().queryScalar(String.format(Locale.US,\n-        \t\t\"SELECT count() FROM cards WHERE id IN (SELECT id FROM cards WHERE did IN %s AND queue = \" + Consts.QUEUE_TYPE_REV + \" AND due <= %d LIMIT %s)\",\n-        \t\tUtils.ids2str(mCol.getDecks().active()), mToday, mReportLimit));\n+        return mCol.getDb().queryScalar(\n+        \t\t\"SELECT count() FROM cards WHERE id IN (SELECT id FROM cards WHERE did IN \" + Utils.ids2str(mCol.getDecks().active()) + \"  AND queue = \" + Consts.QUEUE_TYPE_REV + \" AND due <= ? LIMIT ?)\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86989067049d50520b4657b8c61449c030682b17"}, "originalPosition": 157}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTQwMzQ3", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#pullrequestreview-391540347", "createdAt": "2020-04-10T16:42:05Z", "commit": {"oid": "86989067049d50520b4657b8c61449c030682b17"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNjo0MjowNVrOGD_jfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNjo0MjowNVrOGD_jfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0MDE4OA==", "bodyText": "is _deckLimit() constant here? or should it be a prepared statement '?' argument as well?", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406840188", "createdAt": "2020-04-10T16:42:05Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Sched.java", "diffHunk": "@@ -1802,8 +1813,9 @@ public String _nextDueMsg(Context context) {\n     public boolean revDue() {\n         return mCol.getDb()\n                 .queryScalar(\n-                        \"SELECT 1 FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_REV + \" AND due <= \" + mToday\n-                                + \" LIMIT 1\") != 0;\n+                        \"SELECT 1 FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_REV + \" AND due <= ?\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86989067049d50520b4657b8c61449c030682b17"}, "originalPosition": 168}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "86989067049d50520b4657b8c61449c030682b17", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/86989067049d50520b4657b8c61449c030682b17", "committedDate": "2020-04-10T12:41:51Z", "message": "schedv1 prepared queries"}, "afterCommit": {"oid": "7408bc537af199558fe8f28cf3ac2758c10d3331", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/7408bc537af199558fe8f28cf3ac2758c10d3331", "committedDate": "2020-04-10T20:58:49Z", "message": "Prepared queries\n\nIn order to improve speed of code, preparred queries are better than\ncreating queries where values change. So here they are.\n\nIt also adds a few methods in libanki/DB.java in order to allow more\npreparred queries.\n\nQueries with IN are not entirely preparred. This is because ? can only\nbe replaced by constant I believe. I'll test and push in another\ncommit. Note that preparring partly those queries is still\ninteresting. Indeed, sometime the query won't change the \"IN ....\"\npart and only change some other part. This way, preparation won't be wasted"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNjc2Nzky", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#pullrequestreview-391676792", "createdAt": "2020-04-10T21:40:11Z", "commit": {"oid": "7408bc537af199558fe8f28cf3ac2758c10d3331"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMTo0MDoxMlrOGEGlcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMjoyMDo0N1rOGEHSBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1NTM3OQ==", "bodyText": "Does requery support named parameters? If we do, we can reduce this to just sending did which would be a little more clear. Something along the lines of https://stackoverflow.com/a/27235389", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406955379", "createdAt": "2020-04-10T21:40:12Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -314,7 +314,7 @@ public void rem(long did, boolean cardsToo, boolean childrenToo) {\n             if (cardsToo) {\n                 // don't use cids(), as we want cards in cram decks too\n                 ArrayList<Long> cids = mCol.getDb().queryColumn(Long.class,\n-                                                                \"SELECT id FROM cards WHERE did = \" + did + \" OR odid = \" + did, 0);\n+                                                                \"SELECT id FROM cards WHERE did = ? OR odid = ?\", 0, new Object[] {did, did});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7408bc537af199558fe8f28cf3ac2758c10d3331"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1NjMyNw==", "bodyText": "I know we follow Anki downstream here, but mId != 0 ? mId : 0 makes very little sense in a strongly typed language.\nRef: https://github.com/ankitects/anki/blob/862e2b48f06dadf414d171d2cfdc4ac3ad79e7da/pylib/anki/notes.py#L195", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406956327", "createdAt": "2020-04-10T21:42:56Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -284,8 +284,8 @@ public Integer dupeOrEmpty() {\n         // find any matching csums and compare\n         for (String flds : mCol.getDb().queryColumn(\n                 String.class,\n-                \"SELECT flds FROM notes WHERE csum = \" + csum + \" AND id != \" + (mId != 0 ? mId : 0) + \" AND mid = \"\n-                        + mMid, 0)) {\n+                \"SELECT flds FROM notes WHERE csum = ? AND id != ? AND mid = ?\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7408bc537af199558fe8f28cf3ac2758c10d3331"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1ODcyMA==", "bodyText": "Flagging the missing null, assume this is intentional.", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406958720", "createdAt": "2020-04-10T21:51:06Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java", "diffHunk": "@@ -778,8 +785,9 @@ protected boolean _fillRev() {\n                             .getDb()\n                             .getDatabase()\n                             .query(\n-                                    \"SELECT id FROM cards WHERE did = \" + did + \" AND queue = \" + Consts.QUEUE_TYPE_REV + \" AND due <= \" + mToday\n-                                            + \" LIMIT \" + lim, null);\n+                                    \"SELECT id FROM cards WHERE did = ? AND queue = \" + Consts.QUEUE_TYPE_REV + \" AND due <= ?\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7408bc537af199558fe8f28cf3ac2758c10d3331"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2NDQ1MQ==", "bodyText": "\u26a0\ufe0f The parameter seems wrong", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406964451", "createdAt": "2020-04-10T22:11:29Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -1901,14 +1910,15 @@ public String _nextDueMsg(Context context) {\n     public boolean revDue() {\n         return mCol.getDb()\n                 .queryScalar(\n-                        \"SELECT 1 FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_REV + \" AND due <= \" + mToday\n-                                + \" LIMIT 1\") != 0;\n+                        \"SELECT 1 FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_REV + \" AND due <= ?\"\n+                                + \" LIMIT 1\",\n+                        new Object[] {mToday}) != 0;\n     }\n \n \n     /** true if there are any new cards due. */\n     public boolean newDue() {\n-        return mCol.getDb().queryScalar(\"SELECT 1 FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_NEW + \" LIMIT 1\") != 0;\n+        return mCol.getDb().queryScalar(\"SELECT 1 FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_NEW + \" LIMIT 1\", new Object[] {_deckLimit()}) != 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7408bc537af199558fe8f28cf3ac2758c10d3331"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2NDk5Mg==", "bodyText": "(nit) I know we're copying from the original, but it'd be nice to space out the due<=?", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406964992", "createdAt": "2020-04-10T22:13:35Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -2146,9 +2159,10 @@ protected void _burySiblings(Card card) {\n         // loop through and remove from queues\n         Cursor cur = null;\n         try {\n-            cur = mCol.getDb().getDatabase().query(String.format(Locale.US,\n-                    \"select id, queue from cards where nid=%d and id!=%d \"+\n-                    \"and (queue=\" + Consts.QUEUE_TYPE_NEW + \" or (queue=\" + Consts.QUEUE_TYPE_REV + \" and due<=%d))\", card.getNid(), card.getId(), mToday), null);\n+            cur = mCol.getDb().getDatabase().query(\n+                    \"select id, queue from cards where nid=? and id!=? \"+\n+                    \"and (queue=\" + Consts.QUEUE_TYPE_NEW + \" or (queue=\" + Consts.QUEUE_TYPE_REV + \" and due<=?))\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7408bc537af199558fe8f28cf3ac2758c10d3331"}, "originalPosition": 232}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2NjEwNg==", "bodyText": "I'll ask whether queryColumn is the correct abstraction here. We seem to only be using it to pass in 0, querySingleColumn would be more descriptive, and would reduce the surface for bugs.", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406966106", "createdAt": "2020-04-10T22:18:02Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -2294,13 +2311,15 @@ public void sortCards(long[] cids, int start, int step, boolean shuffle, boolean\n \n \n     public void randomizeCards(long did) {\n-        List<Long> cids = mCol.getDb().queryColumn(Long.class, \"select id from cards where did = \" + did, 0);\n+        List<Long> cids = mCol.getDb().queryColumn(Long.class, \"select id from cards where did = ?\", 0,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7408bc537af199558fe8f28cf3ac2758c10d3331"}, "originalPosition": 281}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2Njc4OA==", "bodyText": "similar nit: spacing on +ivl", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406966788", "createdAt": "2020-04-10T22:20:47Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -2353,9 +2373,11 @@ private void _removeAllFromLearning() {\n     private void _removeAllFromLearning(int schedVer) {\n         // remove review cards from relearning\n         if (schedVer == 1) {\n-            mCol.getDb().execute(String.format(Locale.US,\"update cards set due = odue, queue = \" + Consts.QUEUE_TYPE_REV + \", type = \" + Consts.CARD_TYPE_REV + \", mod = %d, usn = %d, odue = 0 where queue in (\" + Consts.QUEUE_TYPE_LRN + \",\" + Consts.QUEUE_TYPE_DAY_LEARN_RELEARN + \") and type in (\" + Consts.CARD_TYPE_REV + \",\" + Consts.CARD_TYPE_RELEARNING + \")\", Utils.intTime(), mCol.usn()));\n+            mCol.getDb().execute(\"update cards set due = odue, queue = \" + Consts.QUEUE_TYPE_REV + \", type = \" + Consts.CARD_TYPE_REV + \", mod = ?, usn = ?, odue = 0 where queue in (\" + Consts.QUEUE_TYPE_LRN + \",\" + Consts.QUEUE_TYPE_DAY_LEARN_RELEARN + \") and type in (\" + Consts.CARD_TYPE_REV + \",\" + Consts.CARD_TYPE_RELEARNING + \")\",\n+                                 new Object[] {Utils.intTime(), mCol.usn()});\n         } else {\n-            mCol.getDb().execute(String.format(Locale.US,\"update cards set due = %d+ivl, queue = \" + Consts.QUEUE_TYPE_REV + \", type = \" + Consts.CARD_TYPE_REV + \", mod = %d, usn = %d, odue = 0 where queue in (\" + Consts.QUEUE_TYPE_LRN + \",\" + Consts.QUEUE_TYPE_DAY_LEARN_RELEARN + \") and type in (\" + Consts.CARD_TYPE_REV + \",\" + Consts.CARD_TYPE_RELEARNING + \")\", mToday, Utils.intTime(), mCol.usn()));\n+            mCol.getDb().execute(\"update cards set due = ?+ivl, queue = \" + Consts.QUEUE_TYPE_REV + \", type = \" + Consts.CARD_TYPE_REV + \", mod = ?, usn = ?, odue = 0 where queue in (\" + Consts.QUEUE_TYPE_LRN + \",\" + Consts.QUEUE_TYPE_DAY_LEARN_RELEARN + \") and type in (\" + Consts.CARD_TYPE_REV + \",\" + Consts.CARD_TYPE_RELEARNING + \")\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7408bc537af199558fe8f28cf3ac2758c10d3331"}, "originalPosition": 313}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7408bc537af199558fe8f28cf3ac2758c10d3331", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/7408bc537af199558fe8f28cf3ac2758c10d3331", "committedDate": "2020-04-10T20:58:49Z", "message": "Prepared queries\n\nIn order to improve speed of code, preparred queries are better than\ncreating queries where values change. So here they are.\n\nIt also adds a few methods in libanki/DB.java in order to allow more\npreparred queries.\n\nQueries with IN are not entirely preparred. This is because ? can only\nbe replaced by constant I believe. I'll test and push in another\ncommit. Note that preparring partly those queries is still\ninteresting. Indeed, sometime the query won't change the \"IN ....\"\npart and only change some other part. This way, preparation won't be wasted"}, "afterCommit": {"oid": "d5c91c50eadf1ab069289ad672898093b6a7cba6", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/d5c91c50eadf1ab069289ad672898093b6a7cba6", "committedDate": "2020-04-10T23:59:27Z", "message": "Prepared queries\n\nIn order to improve speed of code, preparred queries are better than\ncreating queries where values change. So here they are.\n\nIt also adds a few methods in libanki/DB.java in order to allow more\npreparred queries.\n\nQueries with IN are not entirely preparred. This is because ? can only\nbe replaced by constant I believe. I'll test and push in another\ncommit. Note that preparring partly those queries is still\ninteresting. Indeed, sometime the query won't change the \"IN ....\"\npart and only change some other part. This way, preparation won't be wasted"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzIwOTU5", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#pullrequestreview-391720959", "createdAt": "2020-04-11T01:04:38Z", "commit": {"oid": "d5c91c50eadf1ab069289ad672898093b6a7cba6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d5c91c50eadf1ab069289ad672898093b6a7cba6", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/d5c91c50eadf1ab069289ad672898093b6a7cba6", "committedDate": "2020-04-10T23:59:27Z", "message": "Prepared queries\n\nIn order to improve speed of code, preparred queries are better than\ncreating queries where values change. So here they are.\n\nIt also adds a few methods in libanki/DB.java in order to allow more\npreparred queries.\n\nQueries with IN are not entirely preparred. This is because ? can only\nbe replaced by constant I believe. I'll test and push in another\ncommit. Note that preparring partly those queries is still\ninteresting. Indeed, sometime the query won't change the \"IN ....\"\npart and only change some other part. This way, preparation won't be wasted"}, "afterCommit": {"oid": "c76148d070f49cecb8ce247cd7ea2e6159d95bfb", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/c76148d070f49cecb8ce247cd7ea2e6159d95bfb", "committedDate": "2020-04-11T18:14:45Z", "message": "Prepared queries\n\nIn order to improve speed of code, preparred queries are better than\ncreating queries where values change. So here they are.\n\nIt also adds a few methods in libanki/DB.java in order to allow more\npreparred queries.\n\nQueries with IN are not entirely preparred. This is because ? can only\nbe replaced by constant I believe. I'll test and push in another\ncommit. Note that preparring partly those queries is still\ninteresting. Indeed, sometime the query won't change the \"IN ....\"\npart and only change some other part. This way, preparation won't be wasted"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c76148d070f49cecb8ce247cd7ea2e6159d95bfb", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/c76148d070f49cecb8ce247cd7ea2e6159d95bfb", "committedDate": "2020-04-11T18:14:45Z", "message": "Prepared queries\n\nIn order to improve speed of code, preparred queries are better than\ncreating queries where values change. So here they are.\n\nIt also adds a few methods in libanki/DB.java in order to allow more\npreparred queries.\n\nQueries with IN are not entirely preparred. This is because ? can only\nbe replaced by constant I believe. I'll test and push in another\ncommit. Note that preparring partly those queries is still\ninteresting. Indeed, sometime the query won't change the \"IN ....\"\npart and only change some other part. This way, preparation won't be wasted"}, "afterCommit": {"oid": "763632c5a9cee3cf6298e483ed1f8e774a71a9b4", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/763632c5a9cee3cf6298e483ed1f8e774a71a9b4", "committedDate": "2020-04-11T18:25:13Z", "message": "Prepared queries\n\nIn order to improve speed of code, preparred queries are better than\ncreating queries where values change. So here they are.\n\nIt also adds a few methods in libanki/DB.java in order to allow more\npreparred queries.\n\nQueries with IN are not entirely preparred. This is because ? can only\nbe replaced by constant I believe. I'll test and push in another\ncommit. Note that preparring partly those queries is still\ninteresting. Indeed, sometime the query won't change the \"IN ....\"\npart and only change some other part. This way, preparation won't be wasted"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c2f254d8c958e517c7e60db88ad228028837aef", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/8c2f254d8c958e517c7e60db88ad228028837aef", "committedDate": "2020-04-11T20:28:15Z", "message": "Prepared queries\n\nIn order to improve speed of code, preparred queries are better than\ncreating queries where values change. So here they are.\n\nIt also adds a few methods in libanki/DB.java in order to allow more\npreparred queries.\n\nQueries with IN are not entirely preparred. This is because ? can only\nbe replaced by constant I believe. I'll test and push in another\ncommit. Note that preparring partly those queries is still\ninteresting. Indeed, sometime the query won't change the \"IN ....\"\npart and only change some other part. This way, preparation won't be wasted"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "763632c5a9cee3cf6298e483ed1f8e774a71a9b4", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/763632c5a9cee3cf6298e483ed1f8e774a71a9b4", "committedDate": "2020-04-11T18:25:13Z", "message": "Prepared queries\n\nIn order to improve speed of code, preparred queries are better than\ncreating queries where values change. So here they are.\n\nIt also adds a few methods in libanki/DB.java in order to allow more\npreparred queries.\n\nQueries with IN are not entirely preparred. This is because ? can only\nbe replaced by constant I believe. I'll test and push in another\ncommit. Note that preparring partly those queries is still\ninteresting. Indeed, sometime the query won't change the \"IN ....\"\npart and only change some other part. This way, preparation won't be wasted"}, "afterCommit": {"oid": "8c2f254d8c958e517c7e60db88ad228028837aef", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/8c2f254d8c958e517c7e60db88ad228028837aef", "committedDate": "2020-04-11T20:28:15Z", "message": "Prepared queries\n\nIn order to improve speed of code, preparred queries are better than\ncreating queries where values change. So here they are.\n\nIt also adds a few methods in libanki/DB.java in order to allow more\npreparred queries.\n\nQueries with IN are not entirely preparred. This is because ? can only\nbe replaced by constant I believe. I'll test and push in another\ncommit. Note that preparring partly those queries is still\ninteresting. Indeed, sometime the query won't change the \"IN ....\"\npart and only change some other part. This way, preparation won't be wasted"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxODEyNzcz", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#pullrequestreview-391812773", "createdAt": "2020-04-12T01:19:30Z", "commit": {"oid": "8c2f254d8c958e517c7e60db88ad228028837aef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3627, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}