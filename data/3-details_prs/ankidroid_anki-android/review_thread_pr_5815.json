{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4MTA5MDYz", "number": 5815, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxMjoyMDo1NFrODoDMCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOToyNDoyN1rODpP5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMzIxODY1OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxMjoyMDo1NFrOF2ZUXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxMjoyMDo1NFrOF2ZUXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU4MjIzNg==", "bodyText": "you have a SIGNAL_NONE which is defensive, but there's no case for it, or Timber.w for the default case. Maybe a quick Timber.w in default that says 'received unexpected signal ...' ?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                default:\n          \n          \n            \n                                default:\n          \n          \n            \n                                    Timber.w(\"Received unexpected signal '%s' from WebView. Ignoring.\", url);\n          \n      \n    \n    \n  \n\nor something like that", "url": "https://github.com/ankidroid/Anki-Android/pull/5815#discussion_r392582236", "createdAt": "2020-03-14T12:20:54Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -1469,11 +1471,18 @@ private boolean filterUrl(String url) {\n                     mFlipCardLayout.performClick();\n                     return true;\n                 }\n-                if (\"signal:typefocus\".equals(url)) {\n-                    // Hide the \u201cSHOW ANSWER\u201d button when the input has focus. The soft keyboard takes up enough space\n-                    // by itself.\n-                    mFlipCardLayout.setVisibility(View.GONE);\n-                    return true;\n+                switch (WebViewSignalParserUtils.getSignalFromUrl(url)) {\n+                    case WebViewSignalParserUtils.TYPE_FOCUS:\n+                        // Hide the \u201cSHOW ANSWER\u201d button when the input has focus. The soft keyboard takes up enough\n+                        // space by itself.\n+                        mFlipCardLayout.setVisibility(View.GONE);\n+                        return true;\n+                    case WebViewSignalParserUtils.RELINQUISH_FOCUS:\n+                        //#5811 - The WebView could be focused via mouse. Allow components to return focus to Android.\n+                        focusAnswerCompletionField();\n+                        return true;\n+                    default:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40747cdd0102a0821a4f03703984cd24c54d2cbd"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMzIxOTQ0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxMjoyMzoyMlrOF2ZUwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxMjoyMzoyMlrOF2ZUwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU4MjMzOA==", "bodyText": "My suggestion for defensive programming logging above could alternatively be here, just some notice somewhere would be nice\nIn addition, if you're doing short-circuit returns, you can go from else if statements to just if statements which I think require just a tiny bit less cognitive work to reason about. That's a nit thought", "url": "https://github.com/ankidroid/Anki-Android/pull/5815#discussion_r392582338", "createdAt": "2020-03-14T12:23:22Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -2925,4 +2944,24 @@ protected void dismiss(Collection.DismissType type) {\n         DeckTask.launchDeckTask(DeckTask.TASK_TYPE_DISMISS, mDismissCardHandler,\n                 new DeckTask.TaskData(new Object[]{mCurrentCard, type}));\n     }\n+\n+    /** Signals from a WebView represent actions with no parameters */\n+    @VisibleForTesting\n+    static class WebViewSignalParserUtils {\n+        public static final int SIGNAL_NONE = 0;\n+        public static final int TYPE_FOCUS = 1;\n+        /** Tell the app that we no longer want to focus the WebView and should instead return keyboard focus to a\n+         * native answer input method. */\n+        public static final int RELINQUISH_FOCUS = 2;\n+\n+        public static int getSignalFromUrl(String url) {\n+            if (\"signal:typefocus\".equals(url)) {\n+                return TYPE_FOCUS;\n+            } else if (\"signal:relinquishFocus\".equals(url)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40747cdd0102a0821a4f03703984cd24c54d2cbd"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMzIyMDU0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxMjoyNjoyMlrOF2ZVSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQyMzoxNTo1MFrOF2h-NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU4MjQ3NA==", "bodyText": "@timrae I think this is the only potential change to existing behavior - do you have an opinion? The specific review note is:\n\nConfirm whether selecting the Text Input Field, rather than \"Show Answer\" on a note type with both {{hint:}} and {{type:}} is correct.\nNormally, a {{type:}} field does not have this focus initially.\nBut, even with focus on the text input field, ENTER displays the new card.", "url": "https://github.com/ankidroid/Anki-Android/pull/5815#discussion_r392582474", "createdAt": "2020-03-14T12:26:22Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -1651,6 +1660,16 @@ protected void hideEaseButtons() {\n         mEase3Layout.setVisibility(View.GONE);\n         mEase4Layout.setVisibility(View.GONE);\n         mFlipCardLayout.setVisibility(View.VISIBLE);\n+        focusAnswerCompletionField();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40747cdd0102a0821a4f03703984cd24c54d2cbd"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcyNDAyMQ==", "bodyText": "Related and to consider: #4699", "url": "https://github.com/ankidroid/Anki-Android/pull/5815#discussion_r392724021", "createdAt": "2020-03-15T23:15:50Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -1651,6 +1660,16 @@ protected void hideEaseButtons() {\n         mEase3Layout.setVisibility(View.GONE);\n         mEase4Layout.setVisibility(View.GONE);\n         mFlipCardLayout.setVisibility(View.VISIBLE);\n+        focusAnswerCompletionField();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU4MjQ3NA=="}, "originalCommit": {"oid": "40747cdd0102a0821a4f03703984cd24c54d2cbd"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NTU2MTE2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxODoxNzoyOFrOF4RaRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOToxNDo1MVrOF4TXLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU0OTgzMA==", "bodyText": "I don't understand how a signal that starts with answer_ease is handled, when the 4 we expect are above (and are handled in a switch when they are seen by the caller) but handled is actually not handled? who is handling it? Might be naming semantics - might be better as unhandled with a little more logging about an answer_ease value that we're not expecting?", "url": "https://github.com/ankidroid/Anki-Android/pull/5815#discussion_r394549830", "createdAt": "2020-03-18T18:17:28Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3092,4 +3113,43 @@ protected void dismiss(Collection.DismissType type) {\n         DeckTask.launchDeckTask(DeckTask.TASK_TYPE_DISMISS, mDismissCardHandler,\n                 new DeckTask.TaskData(new Object[]{mCurrentCard, type}));\n     }\n+\n+    /** Signals from a WebView represent actions with no parameters */\n+    @VisibleForTesting\n+    static class WebViewSignalParserUtils {\n+        /** A signal which we did not know how to handle */\n+        public static final int SIGNAL_UNHANDLED = 0;\n+        /** A known signal which should perform a noop */\n+        public static final int SIGNAL_HANDLED = 1;\n+\n+        public static final int TYPE_FOCUS = 2;\n+        /** Tell the app that we no longer want to focus the WebView and should instead return keyboard focus to a\n+         * native answer input method. */\n+        public static final int RELINQUISH_FOCUS = 3;\n+\n+        public static final int SHOW_ANSWER = 4;\n+        public static final int ANSWER_ORDINAL_1 = 5;\n+        public static final int ANSWER_ORDINAL_2 = 6;\n+        public static final int ANSWER_ORDINAL_3 = 7;\n+        public static final int ANSWER_ORDINAL_4 = 8;\n+\n+        public static int getSignalFromUrl(String url) {\n+            switch (url) {\n+                case \"signal:typefocus\": return TYPE_FOCUS;\n+                case \"signal:relinquishFocus\": return RELINQUISH_FOCUS;\n+                case \"signal:show_answer\": return SHOW_ANSWER;\n+                case \"signal:answer_ease1\": return ANSWER_ORDINAL_1;\n+                case \"signal:answer_ease2\": return ANSWER_ORDINAL_2;\n+                case \"signal:answer_ease3\": return ANSWER_ORDINAL_3;\n+                case \"signal:answer_ease4\": return ANSWER_ORDINAL_4;\n+                default: break;\n+            }\n+\n+            if (url.startsWith(\"signal:answer_ease\")) {\n+                return SIGNAL_HANDLED;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d81a9b8ec42a09b420bc7abc4e61c124f3811c51"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU1NDgzMw==", "bodyText": "Yep, naming.\nCurrently\nUnhandled: We don't know about this, it's not a signal so try intent processing.\nHandled: We know about this, but have no associated action to take.\nMaybe SIGNAL_HANDLED => SIGNAL_NOOP?", "url": "https://github.com/ankidroid/Anki-Android/pull/5815#discussion_r394554833", "createdAt": "2020-03-18T18:26:14Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3092,4 +3113,43 @@ protected void dismiss(Collection.DismissType type) {\n         DeckTask.launchDeckTask(DeckTask.TASK_TYPE_DISMISS, mDismissCardHandler,\n                 new DeckTask.TaskData(new Object[]{mCurrentCard, type}));\n     }\n+\n+    /** Signals from a WebView represent actions with no parameters */\n+    @VisibleForTesting\n+    static class WebViewSignalParserUtils {\n+        /** A signal which we did not know how to handle */\n+        public static final int SIGNAL_UNHANDLED = 0;\n+        /** A known signal which should perform a noop */\n+        public static final int SIGNAL_HANDLED = 1;\n+\n+        public static final int TYPE_FOCUS = 2;\n+        /** Tell the app that we no longer want to focus the WebView and should instead return keyboard focus to a\n+         * native answer input method. */\n+        public static final int RELINQUISH_FOCUS = 3;\n+\n+        public static final int SHOW_ANSWER = 4;\n+        public static final int ANSWER_ORDINAL_1 = 5;\n+        public static final int ANSWER_ORDINAL_2 = 6;\n+        public static final int ANSWER_ORDINAL_3 = 7;\n+        public static final int ANSWER_ORDINAL_4 = 8;\n+\n+        public static int getSignalFromUrl(String url) {\n+            switch (url) {\n+                case \"signal:typefocus\": return TYPE_FOCUS;\n+                case \"signal:relinquishFocus\": return RELINQUISH_FOCUS;\n+                case \"signal:show_answer\": return SHOW_ANSWER;\n+                case \"signal:answer_ease1\": return ANSWER_ORDINAL_1;\n+                case \"signal:answer_ease2\": return ANSWER_ORDINAL_2;\n+                case \"signal:answer_ease3\": return ANSWER_ORDINAL_3;\n+                case \"signal:answer_ease4\": return ANSWER_ORDINAL_4;\n+                default: break;\n+            }\n+\n+            if (url.startsWith(\"signal:answer_ease\")) {\n+                return SIGNAL_HANDLED;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU0OTgzMA=="}, "originalCommit": {"oid": "d81a9b8ec42a09b420bc7abc4e61c124f3811c51"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU1NTU4MA==", "bodyText": "I guess the aim is: we want to stop execution and return true from a NOOP, and continue processing from anything unhandled.", "url": "https://github.com/ankidroid/Anki-Android/pull/5815#discussion_r394555580", "createdAt": "2020-03-18T18:27:34Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3092,4 +3113,43 @@ protected void dismiss(Collection.DismissType type) {\n         DeckTask.launchDeckTask(DeckTask.TASK_TYPE_DISMISS, mDismissCardHandler,\n                 new DeckTask.TaskData(new Object[]{mCurrentCard, type}));\n     }\n+\n+    /** Signals from a WebView represent actions with no parameters */\n+    @VisibleForTesting\n+    static class WebViewSignalParserUtils {\n+        /** A signal which we did not know how to handle */\n+        public static final int SIGNAL_UNHANDLED = 0;\n+        /** A known signal which should perform a noop */\n+        public static final int SIGNAL_HANDLED = 1;\n+\n+        public static final int TYPE_FOCUS = 2;\n+        /** Tell the app that we no longer want to focus the WebView and should instead return keyboard focus to a\n+         * native answer input method. */\n+        public static final int RELINQUISH_FOCUS = 3;\n+\n+        public static final int SHOW_ANSWER = 4;\n+        public static final int ANSWER_ORDINAL_1 = 5;\n+        public static final int ANSWER_ORDINAL_2 = 6;\n+        public static final int ANSWER_ORDINAL_3 = 7;\n+        public static final int ANSWER_ORDINAL_4 = 8;\n+\n+        public static int getSignalFromUrl(String url) {\n+            switch (url) {\n+                case \"signal:typefocus\": return TYPE_FOCUS;\n+                case \"signal:relinquishFocus\": return RELINQUISH_FOCUS;\n+                case \"signal:show_answer\": return SHOW_ANSWER;\n+                case \"signal:answer_ease1\": return ANSWER_ORDINAL_1;\n+                case \"signal:answer_ease2\": return ANSWER_ORDINAL_2;\n+                case \"signal:answer_ease3\": return ANSWER_ORDINAL_3;\n+                case \"signal:answer_ease4\": return ANSWER_ORDINAL_4;\n+                default: break;\n+            }\n+\n+            if (url.startsWith(\"signal:answer_ease\")) {\n+                return SIGNAL_HANDLED;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU0OTgzMA=="}, "originalCommit": {"oid": "d81a9b8ec42a09b420bc7abc4e61c124f3811c51"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4MTgwNg==", "bodyText": "SIGNAL_NOOP sounds good, with an associated Timber.w because it feels like it is unexpected input/state (thus more than info), but we can certainly continue processing (thus not error) ?", "url": "https://github.com/ankidroid/Anki-Android/pull/5815#discussion_r394581806", "createdAt": "2020-03-18T19:14:51Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3092,4 +3113,43 @@ protected void dismiss(Collection.DismissType type) {\n         DeckTask.launchDeckTask(DeckTask.TASK_TYPE_DISMISS, mDismissCardHandler,\n                 new DeckTask.TaskData(new Object[]{mCurrentCard, type}));\n     }\n+\n+    /** Signals from a WebView represent actions with no parameters */\n+    @VisibleForTesting\n+    static class WebViewSignalParserUtils {\n+        /** A signal which we did not know how to handle */\n+        public static final int SIGNAL_UNHANDLED = 0;\n+        /** A known signal which should perform a noop */\n+        public static final int SIGNAL_HANDLED = 1;\n+\n+        public static final int TYPE_FOCUS = 2;\n+        /** Tell the app that we no longer want to focus the WebView and should instead return keyboard focus to a\n+         * native answer input method. */\n+        public static final int RELINQUISH_FOCUS = 3;\n+\n+        public static final int SHOW_ANSWER = 4;\n+        public static final int ANSWER_ORDINAL_1 = 5;\n+        public static final int ANSWER_ORDINAL_2 = 6;\n+        public static final int ANSWER_ORDINAL_3 = 7;\n+        public static final int ANSWER_ORDINAL_4 = 8;\n+\n+        public static int getSignalFromUrl(String url) {\n+            switch (url) {\n+                case \"signal:typefocus\": return TYPE_FOCUS;\n+                case \"signal:relinquishFocus\": return RELINQUISH_FOCUS;\n+                case \"signal:show_answer\": return SHOW_ANSWER;\n+                case \"signal:answer_ease1\": return ANSWER_ORDINAL_1;\n+                case \"signal:answer_ease2\": return ANSWER_ORDINAL_2;\n+                case \"signal:answer_ease3\": return ANSWER_ORDINAL_3;\n+                case \"signal:answer_ease4\": return ANSWER_ORDINAL_4;\n+                default: break;\n+            }\n+\n+            if (url.startsWith(\"signal:answer_ease\")) {\n+                return SIGNAL_HANDLED;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU0OTgzMA=="}, "originalCommit": {"oid": "d81a9b8ec42a09b420bc7abc4e61c124f3811c51"}, "originalPosition": 156}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NTc4NjE2OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/test/java/com/ichi2/anki/AbstractFlashcardViewerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOToyNDoyN1rOF4TrPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOToyNDoyN1rOF4TrPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4Njk0MQ==", "bodyText": "Issue found: Avoid unused imports such as 'com.ichi2.anki.AbstractFlashcardViewer.WebViewSignalParserUtils'", "url": "https://github.com/ankidroid/Anki-Android/pull/5815#discussion_r394586941", "createdAt": "2020-03-18T19:24:27Z", "author": {"login": "timrae"}, "path": "AnkiDroid/src/test/java/com/ichi2/anki/AbstractFlashcardViewerTest.java", "diffHunk": "@@ -8,6 +8,7 @@\n \n import androidx.test.ext.junit.runners.AndroidJUnit4;\n \n+import static com.ichi2.anki.AbstractFlashcardViewer.WebViewSignalParserUtils.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8aae1768128d56df6ebfd2c1c4b3a36fae3b5eef"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 604, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}