{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MzgzODI0", "number": 6040, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxOToxNDo1MFrOELz-Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOToyMzo1NlrOEVi7uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODIxMzMwOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxOToxNDo1MFrOGtj9AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxOToxNDo1MFrOGtj9AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQyODE2MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // the window size is saved in\n          \n          \n            \n                    // io.requery.android.database.CursorWindow.sCursorWindowSize.\n          \n          \n            \n                    // Values are copied here. Ideally, a getter would allow to access it.\n          \n          \n            \n                    final int WINDOW_SIZE_KB = 2048;\n          \n          \n            \n                    final int sCursorWindowSize = WINDOW_SIZE_KB * 1024;\n          \n          \n            \n                    // reduce the actual size a little bit.\n          \n          \n            \n                    final int chunk = (sCursorWindowSize / 16) * 15;\n          \n          \n            \n                    // We have the ability to look into our sqlite implementation on Android and use it's value\n          \n          \n            \n                    // as a ceiling. Try it, with a reasonable fallback in case of failure\n          \n          \n            \n                    int chunk = 1024*1024; // 1 mb, a little less than what a cursor line may contain\n          \n          \n            \n                    if (\"io.requery.android.database.sqlite.SQLiteDatabase\".equals(mDb.getDatabase().getClass().getName())) {\n          \n          \n            \n                        try {\n          \n          \n            \n                            Field cursorWindowSize = io.requery.android.database.CursorWindow.class.getDeclaredField(\"sCursorWindowSize\");\n          \n          \n            \n                            cursorWindowSize.setAccessible(true);\n          \n          \n            \n                            chunk = cursorWindowSize.getInt(null);\n          \n          \n            \n                        } catch (Exception e) {\n          \n          \n            \n                            Timber.w(e, \"Unable to get window size from requery cursor.\");\n          \n          \n            \n                        }\n          \n          \n            \n                    }\n          \n      \n    \n    \n  \n\n@Arthur-Milchior - tested and working with proof from the coverage report on jacocoTestReport", "url": "https://github.com/ankidroid/Anki-Android/pull/6040#discussion_r450428161", "createdAt": "2020-07-06T19:14:50Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -272,7 +272,13 @@ public void load() {\n \n     public String loadColumn(String columnName) {\n         int pos = 1;\n-        int chunk = 1024*1024; // 1 mb, a little less than what a cursor line may contain\n+        // the window size is saved in\n+        // io.requery.android.database.CursorWindow.sCursorWindowSize.\n+        // Values are copied here. Ideally, a getter would allow to access it.\n+        final int WINDOW_SIZE_KB = 2048;\n+        final int sCursorWindowSize = WINDOW_SIZE_KB * 1024;\n+        // reduce the actual size a little bit.\n+        final int chunk = (sCursorWindowSize / 16) * 15;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cf1caf59edc6f7fe82b10b412e00fb2c06be967"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwODcyNjczOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjo0NzoxOFrOG8IGOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODo1NDo0N1rOG8WdWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwMDQxMA==", "bodyText": "This isn't going to work now #3524 has gone in as it applies a decorator to the class", "url": "https://github.com/ankidroid/Anki-Android/pull/6040#discussion_r465700410", "createdAt": "2020-08-05T12:47:18Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -272,7 +272,24 @@ public void load() {\n \n     public String loadColumn(String columnName) {\n         int pos = 1;\n-        int chunk = 1024*1024; // 1 mb, a little less than what a cursor line may contain\n+        // the window size is saved in\n+        // io.requery.android.database.CursorWindow.sCursorWindowSize.\n+        // Values are copied here. Ideally, a getter would allow to access it.\n+        final int WINDOW_SIZE_KB = 2048;\n+        final int sCursorWindowSize = WINDOW_SIZE_KB * 1024;\n+        // reduce the actual size a little bit.\n+        // We have the ability to look into our sqlite implementation on Android and use it's value\n+        // as a ceiling. Try it, with a reasonable fallback in case of failure\n+        if (\"io.requery.android.database.sqlite.SQLiteDatabase\".equals(mDb.getDatabase().getClass().getName())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f29ac33842661e94099569117fc097966e2369ab"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgwMzU1Nw==", "bodyText": "We need to peek through the decorator I think? We need to be able to get the real implementation class so we have reasonable assurance that an otherwise known reflective access will work", "url": "https://github.com/ankidroid/Anki-Android/pull/6040#discussion_r465803557", "createdAt": "2020-08-05T15:16:23Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -272,7 +272,24 @@ public void load() {\n \n     public String loadColumn(String columnName) {\n         int pos = 1;\n-        int chunk = 1024*1024; // 1 mb, a little less than what a cursor line may contain\n+        // the window size is saved in\n+        // io.requery.android.database.CursorWindow.sCursorWindowSize.\n+        // Values are copied here. Ideally, a getter would allow to access it.\n+        final int WINDOW_SIZE_KB = 2048;\n+        final int sCursorWindowSize = WINDOW_SIZE_KB * 1024;\n+        // reduce the actual size a little bit.\n+        // We have the ability to look into our sqlite implementation on Android and use it's value\n+        // as a ceiling. Try it, with a reasonable fallback in case of failure\n+        if (\"io.requery.android.database.sqlite.SQLiteDatabase\".equals(mDb.getDatabase().getClass().getName())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwMDQxMA=="}, "originalCommit": {"oid": "f29ac33842661e94099569117fc097966e2369ab"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzNTcwNw==", "bodyText": "@Arthur-Milchior - @david-allison-1 is right on this one, we'll need a change to the new wrapper as well, in order to access this https://github.com/david-allison-1/Anki-Android/blob/677831e94aa2cbd83284a305cf9cb88050e78f4f/AnkiDroid/src/main/java/com/ichi2/utils/DatabaseChangeDecorator.java#L39 - I believe the change is to make a getter for the wrapped object, then in this PR do a cast in order to access it\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (\"io.requery.android.database.sqlite.SQLiteDatabase\".equals(mDb.getDatabase().getClass().getName())) {\n          \n          \n            \n                    if (\"io.requery.android.database.sqlite.SQLiteDatabase\".equals(((DatabaseChangeDecorator)mDb.getDatabase()).getWrapped().getClass().getName())) {\n          \n      \n    \n    \n  \n\nThis PR has been close but refuses to die! I think this last bit will get it", "url": "https://github.com/ankidroid/Anki-Android/pull/6040#discussion_r465935707", "createdAt": "2020-08-05T18:54:47Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -272,7 +272,24 @@ public void load() {\n \n     public String loadColumn(String columnName) {\n         int pos = 1;\n-        int chunk = 1024*1024; // 1 mb, a little less than what a cursor line may contain\n+        // the window size is saved in\n+        // io.requery.android.database.CursorWindow.sCursorWindowSize.\n+        // Values are copied here. Ideally, a getter would allow to access it.\n+        final int WINDOW_SIZE_KB = 2048;\n+        final int sCursorWindowSize = WINDOW_SIZE_KB * 1024;\n+        // reduce the actual size a little bit.\n+        // We have the ability to look into our sqlite implementation on Android and use it's value\n+        // as a ceiling. Try it, with a reasonable fallback in case of failure\n+        if (\"io.requery.android.database.sqlite.SQLiteDatabase\".equals(mDb.getDatabase().getClass().getName())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwMDQxMA=="}, "originalCommit": {"oid": "f29ac33842661e94099569117fc097966e2369ab"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwODcyODczOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjo0Nzo0OFrOG8IHcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOToxMzoyOFrOG8XEaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwMDcyMg==", "bodyText": "This is going to slow down the app (reflection and exceptions are slow), ideally perform it once and cache the result", "url": "https://github.com/ankidroid/Anki-Android/pull/6040#discussion_r465700722", "createdAt": "2020-08-05T12:47:48Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -272,7 +272,24 @@ public void load() {\n \n     public String loadColumn(String columnName) {\n         int pos = 1;\n-        int chunk = 1024*1024; // 1 mb, a little less than what a cursor line may contain\n+        // the window size is saved in\n+        // io.requery.android.database.CursorWindow.sCursorWindowSize.\n+        // Values are copied here. Ideally, a getter would allow to access it.\n+        final int WINDOW_SIZE_KB = 2048;\n+        final int sCursorWindowSize = WINDOW_SIZE_KB * 1024;\n+        // reduce the actual size a little bit.\n+        // We have the ability to look into our sqlite implementation on Android and use it's value\n+        // as a ceiling. Try it, with a reasonable fallback in case of failure\n+        if (\"io.requery.android.database.sqlite.SQLiteDatabase\".equals(mDb.getDatabase().getClass().getName())) {\n+            try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f29ac33842661e94099569117fc097966e2369ab"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcxMTkzMQ==", "bodyText": "Probably not slow the app a lot. This method is used only twice: to load decks and models.\nI'll do it anyway", "url": "https://github.com/ankidroid/Anki-Android/pull/6040#discussion_r465711931", "createdAt": "2020-08-05T13:06:05Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -272,7 +272,24 @@ public void load() {\n \n     public String loadColumn(String columnName) {\n         int pos = 1;\n-        int chunk = 1024*1024; // 1 mb, a little less than what a cursor line may contain\n+        // the window size is saved in\n+        // io.requery.android.database.CursorWindow.sCursorWindowSize.\n+        // Values are copied here. Ideally, a getter would allow to access it.\n+        final int WINDOW_SIZE_KB = 2048;\n+        final int sCursorWindowSize = WINDOW_SIZE_KB * 1024;\n+        // reduce the actual size a little bit.\n+        // We have the ability to look into our sqlite implementation on Android and use it's value\n+        // as a ceiling. Try it, with a reasonable fallback in case of failure\n+        if (\"io.requery.android.database.sqlite.SQLiteDatabase\".equals(mDb.getDatabase().getClass().getName())) {\n+            try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwMDcyMg=="}, "originalCommit": {"oid": "f29ac33842661e94099569117fc097966e2369ab"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg3NTE0NQ==", "bodyText": "To be exhaustive, I should mention that those columns are loaded each time the collection is loaded, i.e. twice by sync, even for partial sync (unless you accept my PR which removes it)", "url": "https://github.com/ankidroid/Anki-Android/pull/6040#discussion_r465875145", "createdAt": "2020-08-05T17:05:42Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -272,7 +272,24 @@ public void load() {\n \n     public String loadColumn(String columnName) {\n         int pos = 1;\n-        int chunk = 1024*1024; // 1 mb, a little less than what a cursor line may contain\n+        // the window size is saved in\n+        // io.requery.android.database.CursorWindow.sCursorWindowSize.\n+        // Values are copied here. Ideally, a getter would allow to access it.\n+        final int WINDOW_SIZE_KB = 2048;\n+        final int sCursorWindowSize = WINDOW_SIZE_KB * 1024;\n+        // reduce the actual size a little bit.\n+        // We have the ability to look into our sqlite implementation on Android and use it's value\n+        // as a ceiling. Try it, with a reasonable fallback in case of failure\n+        if (\"io.requery.android.database.sqlite.SQLiteDatabase\".equals(mDb.getDatabase().getClass().getName())) {\n+            try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwMDcyMg=="}, "originalCommit": {"oid": "f29ac33842661e94099569117fc097966e2369ab"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk0NTcwNA==", "bodyText": "@Arthur-Milchior note that getWrapped() accessor does not exist yet on DatabaseChangeDecorator - it needs that too", "url": "https://github.com/ankidroid/Anki-Android/pull/6040#discussion_r465945704", "createdAt": "2020-08-05T19:13:28Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -272,7 +272,24 @@ public void load() {\n \n     public String loadColumn(String columnName) {\n         int pos = 1;\n-        int chunk = 1024*1024; // 1 mb, a little less than what a cursor line may contain\n+        // the window size is saved in\n+        // io.requery.android.database.CursorWindow.sCursorWindowSize.\n+        // Values are copied here. Ideally, a getter would allow to access it.\n+        final int WINDOW_SIZE_KB = 2048;\n+        final int sCursorWindowSize = WINDOW_SIZE_KB * 1024;\n+        // reduce the actual size a little bit.\n+        // We have the ability to look into our sqlite implementation on Android and use it's value\n+        // as a ceiling. Try it, with a reasonable fallback in case of failure\n+        if (\"io.requery.android.database.sqlite.SQLiteDatabase\".equals(mDb.getDatabase().getClass().getName())) {\n+            try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwMDcyMg=="}, "originalCommit": {"oid": "f29ac33842661e94099569117fc097966e2369ab"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwODczMzkyOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjo0OTowOFrOG8IKnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNzowMzoyM1rOG8Srmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwMTUzMg==", "bodyText": "Use doubles here, then convert back to an int at the end. (I think this will make it more accurate, but needs verification).", "url": "https://github.com/ankidroid/Anki-Android/pull/6040#discussion_r465701532", "createdAt": "2020-08-05T12:49:08Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -272,7 +272,24 @@ public void load() {\n \n     public String loadColumn(String columnName) {\n         int pos = 1;\n-        int chunk = 1024*1024; // 1 mb, a little less than what a cursor line may contain\n+        // the window size is saved in\n+        // io.requery.android.database.CursorWindow.sCursorWindowSize.\n+        // Values are copied here. Ideally, a getter would allow to access it.\n+        final int WINDOW_SIZE_KB = 2048;\n+        final int sCursorWindowSize = WINDOW_SIZE_KB * 1024;\n+        // reduce the actual size a little bit.\n+        // We have the ability to look into our sqlite implementation on Android and use it's value\n+        // as a ceiling. Try it, with a reasonable fallback in case of failure\n+        if (\"io.requery.android.database.sqlite.SQLiteDatabase\".equals(mDb.getDatabase().getClass().getName())) {\n+            try {\n+                Field cursorWindowSize = io.requery.android.database.CursorWindow.class.getDeclaredField(\"sCursorWindowSize\");\n+                cursorWindowSize.setAccessible(true);\n+                sCursorWindowSize = cursorWindowSize.getInt(null);\n+            } catch (Exception e) {\n+                Timber.w(e, \"Unable to get window size from requery cursor.\");\n+            }\n+        }\n+        int final chunk = sCursorWindowSize * 15 / 16 ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f29ac33842661e94099569117fc097966e2369ab"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgwMjMzMg==", "bodyText": "I hate computer math. I think you're right, may not matter here but should be a habit.", "url": "https://github.com/ankidroid/Anki-Android/pull/6040#discussion_r465802332", "createdAt": "2020-08-05T15:14:42Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -272,7 +272,24 @@ public void load() {\n \n     public String loadColumn(String columnName) {\n         int pos = 1;\n-        int chunk = 1024*1024; // 1 mb, a little less than what a cursor line may contain\n+        // the window size is saved in\n+        // io.requery.android.database.CursorWindow.sCursorWindowSize.\n+        // Values are copied here. Ideally, a getter would allow to access it.\n+        final int WINDOW_SIZE_KB = 2048;\n+        final int sCursorWindowSize = WINDOW_SIZE_KB * 1024;\n+        // reduce the actual size a little bit.\n+        // We have the ability to look into our sqlite implementation on Android and use it's value\n+        // as a ceiling. Try it, with a reasonable fallback in case of failure\n+        if (\"io.requery.android.database.sqlite.SQLiteDatabase\".equals(mDb.getDatabase().getClass().getName())) {\n+            try {\n+                Field cursorWindowSize = io.requery.android.database.CursorWindow.class.getDeclaredField(\"sCursorWindowSize\");\n+                cursorWindowSize.setAccessible(true);\n+                sCursorWindowSize = cursorWindowSize.getInt(null);\n+            } catch (Exception e) {\n+                Timber.w(e, \"Unable to get window size from requery cursor.\");\n+            }\n+        }\n+        int final chunk = sCursorWindowSize * 15 / 16 ;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwMTUzMg=="}, "originalCommit": {"oid": "f29ac33842661e94099569117fc097966e2369ab"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg3MzgxOA==", "bodyText": "Done.", "url": "https://github.com/ankidroid/Anki-Android/pull/6040#discussion_r465873818", "createdAt": "2020-08-05T17:03:23Z", "author": {"login": "Arthur-Milchior"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -272,7 +272,24 @@ public void load() {\n \n     public String loadColumn(String columnName) {\n         int pos = 1;\n-        int chunk = 1024*1024; // 1 mb, a little less than what a cursor line may contain\n+        // the window size is saved in\n+        // io.requery.android.database.CursorWindow.sCursorWindowSize.\n+        // Values are copied here. Ideally, a getter would allow to access it.\n+        final int WINDOW_SIZE_KB = 2048;\n+        final int sCursorWindowSize = WINDOW_SIZE_KB * 1024;\n+        // reduce the actual size a little bit.\n+        // We have the ability to look into our sqlite implementation on Android and use it's value\n+        // as a ceiling. Try it, with a reasonable fallback in case of failure\n+        if (\"io.requery.android.database.sqlite.SQLiteDatabase\".equals(mDb.getDatabase().getClass().getName())) {\n+            try {\n+                Field cursorWindowSize = io.requery.android.database.CursorWindow.class.getDeclaredField(\"sCursorWindowSize\");\n+                cursorWindowSize.setAccessible(true);\n+                sCursorWindowSize = cursorWindowSize.getInt(null);\n+            } catch (Exception e) {\n+                Timber.w(e, \"Unable to get window size from requery cursor.\");\n+            }\n+        }\n+        int final chunk = sCursorWindowSize * 15 / 16 ;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwMTUzMg=="}, "originalCommit": {"oid": "f29ac33842661e94099569117fc097966e2369ab"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDI3ODk5OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOToyMzo1NlrOG8XZyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMjoxMzoxNlrOG9qP3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk1MTE3Ng==", "bodyText": "You need to check that mDb.getDatabase() can be cast to DatabaseChangeDecorator\nIt'd be best to extract a few variables out of the line for clarity.\nMaybe extract getCursorWindowSize() so an early return is possible to make the code cleaner", "url": "https://github.com/ankidroid/Anki-Android/pull/6040#discussion_r465951176", "createdAt": "2020-08-05T19:23:56Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -276,14 +277,40 @@ public void load() {\n         mDecks.load(loadColumn(\"decks\"), deckConf);\n     }\n \n+    private static int sChunk = 0;\n+\n+    private int getChunk() {\n+        if (sChunk != 0) {\n+            return sChunk;\n+        }\n+        // the window size is saved in\n+        // io.requery.android.database.CursorWindow.sCursorWindowSize.\n+        // Values are copied here. Ideally, a getter would allow to access it.\n+        final int WINDOW_SIZE_KB = 2048;\n+        int sCursorWindowSize = WINDOW_SIZE_KB * 1024;\n+        // reduce the actual size a little bit.\n+        // We have the ability to look into our sqlite implementation on Android and use it's value\n+        // as a ceiling. Try it, with a reasonable fallback in case of failure\n+        if (\"io.requery.android.database.sqlite.SQLiteDatabase\".equals(((DatabaseChangeDecorator)mDb.getDatabase()).getWrapped().getClass().getName())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae94ae74acede39d0fd0c999cb848d60472f5b55"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMwODA1Nw==", "bodyText": "@david-allison-1 I think you mean ?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (\"io.requery.android.database.sqlite.SQLiteDatabase\".equals(((DatabaseChangeDecorator)mDb.getDatabase()).getWrapped().getClass().getName())) {\n          \n          \n            \n                    SQLiteDatabase maybeDecorator = mDb.getDatabase();\n          \n          \n            \n                    if ((maybeDecorator instanceof DatabaseChangeDecorator) && (\"io.requery.android.database.sqlite.SQLiteDatabase\".equals(((DatabaseChangeDecorator)maybeDecorator).getWrapped().getClass().getName())) {", "url": "https://github.com/ankidroid/Anki-Android/pull/6040#discussion_r467308057", "createdAt": "2020-08-07T22:11:30Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -276,14 +277,40 @@ public void load() {\n         mDecks.load(loadColumn(\"decks\"), deckConf);\n     }\n \n+    private static int sChunk = 0;\n+\n+    private int getChunk() {\n+        if (sChunk != 0) {\n+            return sChunk;\n+        }\n+        // the window size is saved in\n+        // io.requery.android.database.CursorWindow.sCursorWindowSize.\n+        // Values are copied here. Ideally, a getter would allow to access it.\n+        final int WINDOW_SIZE_KB = 2048;\n+        int sCursorWindowSize = WINDOW_SIZE_KB * 1024;\n+        // reduce the actual size a little bit.\n+        // We have the ability to look into our sqlite implementation on Android and use it's value\n+        // as a ceiling. Try it, with a reasonable fallback in case of failure\n+        if (\"io.requery.android.database.sqlite.SQLiteDatabase\".equals(((DatabaseChangeDecorator)mDb.getDatabase()).getWrapped().getClass().getName())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk1MTE3Ng=="}, "originalCommit": {"oid": "ae94ae74acede39d0fd0c999cb848d60472f5b55"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMwODUxMQ==", "bodyText": "you addressed this", "url": "https://github.com/ankidroid/Anki-Android/pull/6040#discussion_r467308511", "createdAt": "2020-08-07T22:13:16Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -276,14 +277,40 @@ public void load() {\n         mDecks.load(loadColumn(\"decks\"), deckConf);\n     }\n \n+    private static int sChunk = 0;\n+\n+    private int getChunk() {\n+        if (sChunk != 0) {\n+            return sChunk;\n+        }\n+        // the window size is saved in\n+        // io.requery.android.database.CursorWindow.sCursorWindowSize.\n+        // Values are copied here. Ideally, a getter would allow to access it.\n+        final int WINDOW_SIZE_KB = 2048;\n+        int sCursorWindowSize = WINDOW_SIZE_KB * 1024;\n+        // reduce the actual size a little bit.\n+        // We have the ability to look into our sqlite implementation on Android and use it's value\n+        // as a ceiling. Try it, with a reasonable fallback in case of failure\n+        if (\"io.requery.android.database.sqlite.SQLiteDatabase\".equals(((DatabaseChangeDecorator)mDb.getDatabase()).getWrapped().getClass().getName())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk1MTE3Ng=="}, "originalCommit": {"oid": "ae94ae74acede39d0fd0c999cb848d60472f5b55"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 361, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}