{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MjEwNjY4", "number": 6492, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOTowNzoyNlrOEGqmkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOToxNzo0OFrOEGq2jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NDI0OTE0OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/analytics/UsageAnalytics.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOTowNzoyNlrOGlmghA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzozOToxOVrOGlvwCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA4MTQxMg==", "bodyText": "These seem erroneous", "url": "https://github.com/ankidroid/Anki-Android/pull/6492#discussion_r442081412", "createdAt": "2020-06-18T09:07:26Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/analytics/UsageAnalytics.java", "diffHunk": "@@ -221,9 +228,9 @@ public static void sendAnalyticsEvent(@NonNull String category, @NonNull String\n      * Send a detailed arbitrary analytics event, with noun/verb pairs and extra data if needed\n      *\n      * @param category the category of event, make your own but use a constant so reporting is good\n-     * @param action the action the user performed\n-     * @param value A value for the event, Integer.MIN_VALUE signifies caller shouldn't send the value\n-     * @param label A label for the event, may be null\n+     * @param action   the action the user performed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e002d5ba7f3b9637e7ff3d16cc863f8e5d636c1b"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIzMjg0Mw==", "bodyText": "No, they are fine, they are just textually aligned now fixed-space-horizontal with the beginning of javadoc description for the longest argument 'category', that's what I mentioned before the whitespace-didn't-change thing. Visually it's pleasing. I wouldn't do it manually but the editor did it and it's nice to read when you're reading code so I left it.", "url": "https://github.com/ankidroid/Anki-Android/pull/6492#discussion_r442232843", "createdAt": "2020-06-18T13:39:19Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/analytics/UsageAnalytics.java", "diffHunk": "@@ -221,9 +228,9 @@ public static void sendAnalyticsEvent(@NonNull String category, @NonNull String\n      * Send a detailed arbitrary analytics event, with noun/verb pairs and extra data if needed\n      *\n      * @param category the category of event, make your own but use a constant so reporting is good\n-     * @param action the action the user performed\n-     * @param value A value for the event, Integer.MIN_VALUE signifies caller shouldn't send the value\n-     * @param label A label for the event, may be null\n+     * @param action   the action the user performed", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA4MTQxMg=="}, "originalCommit": {"oid": "e002d5ba7f3b9637e7ff3d16cc863f8e5d636c1b"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NDI2MjgzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/analytics/UsageAnalytics.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOToxMDo0NFrOGlmopA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzo0Nzo0MVrOGlwHfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA4MzQ5Mg==", "bodyText": "Might want to look into how ACRA gets compatScreenHeightDp, possibly from Configuration", "url": "https://github.com/ankidroid/Anki-Android/pull/6492#discussion_r442083492", "createdAt": "2020-06-18T09:10:44Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/analytics/UsageAnalytics.java", "diffHunk": "@@ -278,4 +285,46 @@ public static void sendAnalyticsException(@NonNull String description, boolean f\n         }\n         sAnalytics.exception().exceptionDescription(description).exceptionFatal(fatal).sendAsync();\n     }\n+\n+\n+    /**\n+     * An Android-specific device config generator. Without this it's \"Desktop\" and unknown for all hardware.\n+     * It is interesting to us what devices people use though (for instance: is Amazon Kindle support worth it?\n+     * Is anyone still using e-ink devices? How many people are on tablets? ChromeOS?)\n+     */\n+    private static class AndroidDefaultRequest extends DefaultRequest {\n+        private DefaultRequest setAndroidRequestParameters(Context context) {\n+\n+            // Are we running on really large screens or small screens or ?\n+            try {\n+                WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);\n+                Display display = wm.getDefaultDisplay();\n+                Point size = new Point();\n+                display.getSize(size);\n+                this.screenResolution(size.x + \"x\" + size.y);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e002d5ba7f3b9637e7ff3d16cc863f8e5d636c1b"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIzODg0NQ==", "bodyText": "They're getting fancier if they are going for Dp (device-independent pixels), I just wanted to collect raw screen size and this is the canonical method according to stack overflow. Confirmed that for real display size this is how they do it as well\nhttps://github.com/ACRA/acra/blob/f12bf576c8ac54fc80c96c04ea066ac4908b1dea/acra-core/src/main/java/org/acra/collector/DisplayManagerCollector.java#L140-L146", "url": "https://github.com/ankidroid/Anki-Android/pull/6492#discussion_r442238845", "createdAt": "2020-06-18T13:47:41Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/analytics/UsageAnalytics.java", "diffHunk": "@@ -278,4 +285,46 @@ public static void sendAnalyticsException(@NonNull String description, boolean f\n         }\n         sAnalytics.exception().exceptionDescription(description).exceptionFatal(fatal).sendAsync();\n     }\n+\n+\n+    /**\n+     * An Android-specific device config generator. Without this it's \"Desktop\" and unknown for all hardware.\n+     * It is interesting to us what devices people use though (for instance: is Amazon Kindle support worth it?\n+     * Is anyone still using e-ink devices? How many people are on tablets? ChromeOS?)\n+     */\n+    private static class AndroidDefaultRequest extends DefaultRequest {\n+        private DefaultRequest setAndroidRequestParameters(Context context) {\n+\n+            // Are we running on really large screens or small screens or ?\n+            try {\n+                WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);\n+                Display display = wm.getDefaultDisplay();\n+                Point size = new Point();\n+                display.getSize(size);\n+                this.screenResolution(size.x + \"x\" + size.y);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA4MzQ5Mg=="}, "originalCommit": {"oid": "e002d5ba7f3b9637e7ff3d16cc863f8e5d636c1b"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NDI3NDUzOnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/analytics/UsageAnalytics.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOToxMzo1MFrOGlmv_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNDowNjozM1rOGlw_9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA4NTM3NA==", "bodyText": "Got this confused with BuildConfig.DEBUG\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        this.customDimension(1, Build.VERSION.RELEASE); // systemVersion\n          \n          \n            \n                        this.customDimension(1, Build.VERSION.RELEASE); // readable version: \"2.12alpha9\"", "url": "https://github.com/ankidroid/Anki-Android/pull/6492#discussion_r442085374", "createdAt": "2020-06-18T09:13:50Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/analytics/UsageAnalytics.java", "diffHunk": "@@ -278,4 +285,46 @@ public static void sendAnalyticsException(@NonNull String description, boolean f\n         }\n         sAnalytics.exception().exceptionDescription(description).exceptionFatal(fatal).sendAsync();\n     }\n+\n+\n+    /**\n+     * An Android-specific device config generator. Without this it's \"Desktop\" and unknown for all hardware.\n+     * It is interesting to us what devices people use though (for instance: is Amazon Kindle support worth it?\n+     * Is anyone still using e-ink devices? How many people are on tablets? ChromeOS?)\n+     */\n+    private static class AndroidDefaultRequest extends DefaultRequest {\n+        private DefaultRequest setAndroidRequestParameters(Context context) {\n+\n+            // Are we running on really large screens or small screens or ?\n+            try {\n+                WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);\n+                Display display = wm.getDefaultDisplay();\n+                Point size = new Point();\n+                display.getSize(size);\n+                this.screenResolution(size.x + \"x\" + size.y);\n+            } catch (RuntimeException e) {\n+                // nothing much to do here, it means we couldn't get WindowManager\n+            }\n+\n+            // We can have up to 20 of these - there might be other things we want to know\n+            // but simply seeing what hardware we are running on should be useful\n+            this.customDimension(1, Build.VERSION.RELEASE); // systemVersion", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e002d5ba7f3b9637e7ff3d16cc863f8e5d636c1b"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIzNDQ1NQ==", "bodyText": "No, VERSION.RELEASE is systemVersion, like \"10\" for Android 10. After maintaining react-native-device-info for 2 years, I know my build constants ;-)", "url": "https://github.com/ankidroid/Anki-Android/pull/6492#discussion_r442234455", "createdAt": "2020-06-18T13:41:31Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/analytics/UsageAnalytics.java", "diffHunk": "@@ -278,4 +285,46 @@ public static void sendAnalyticsException(@NonNull String description, boolean f\n         }\n         sAnalytics.exception().exceptionDescription(description).exceptionFatal(fatal).sendAsync();\n     }\n+\n+\n+    /**\n+     * An Android-specific device config generator. Without this it's \"Desktop\" and unknown for all hardware.\n+     * It is interesting to us what devices people use though (for instance: is Amazon Kindle support worth it?\n+     * Is anyone still using e-ink devices? How many people are on tablets? ChromeOS?)\n+     */\n+    private static class AndroidDefaultRequest extends DefaultRequest {\n+        private DefaultRequest setAndroidRequestParameters(Context context) {\n+\n+            // Are we running on really large screens or small screens or ?\n+            try {\n+                WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);\n+                Display display = wm.getDefaultDisplay();\n+                Point size = new Point();\n+                display.getSize(size);\n+                this.screenResolution(size.x + \"x\" + size.y);\n+            } catch (RuntimeException e) {\n+                // nothing much to do here, it means we couldn't get WindowManager\n+            }\n+\n+            // We can have up to 20 of these - there might be other things we want to know\n+            // but simply seeing what hardware we are running on should be useful\n+            this.customDimension(1, Build.VERSION.RELEASE); // systemVersion", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA4NTM3NA=="}, "originalCommit": {"oid": "e002d5ba7f3b9637e7ff3d16cc863f8e5d636c1b"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI1MzMwMA==", "bodyText": "\ud83e\udd26 Definitely needed those comments then, thanks!", "url": "https://github.com/ankidroid/Anki-Android/pull/6492#discussion_r442253300", "createdAt": "2020-06-18T14:06:33Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/analytics/UsageAnalytics.java", "diffHunk": "@@ -278,4 +285,46 @@ public static void sendAnalyticsException(@NonNull String description, boolean f\n         }\n         sAnalytics.exception().exceptionDescription(description).exceptionFatal(fatal).sendAsync();\n     }\n+\n+\n+    /**\n+     * An Android-specific device config generator. Without this it's \"Desktop\" and unknown for all hardware.\n+     * It is interesting to us what devices people use though (for instance: is Amazon Kindle support worth it?\n+     * Is anyone still using e-ink devices? How many people are on tablets? ChromeOS?)\n+     */\n+    private static class AndroidDefaultRequest extends DefaultRequest {\n+        private DefaultRequest setAndroidRequestParameters(Context context) {\n+\n+            // Are we running on really large screens or small screens or ?\n+            try {\n+                WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);\n+                Display display = wm.getDefaultDisplay();\n+                Point size = new Point();\n+                display.getSize(size);\n+                this.screenResolution(size.x + \"x\" + size.y);\n+            } catch (RuntimeException e) {\n+                // nothing much to do here, it means we couldn't get WindowManager\n+            }\n+\n+            // We can have up to 20 of these - there might be other things we want to know\n+            // but simply seeing what hardware we are running on should be useful\n+            this.customDimension(1, Build.VERSION.RELEASE); // systemVersion", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA4NTM3NA=="}, "originalCommit": {"oid": "e002d5ba7f3b9637e7ff3d16cc863f8e5d636c1b"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NDI5MDA3OnYy", "diffSide": "RIGHT", "path": "AnkiDroid/src/main/java/com/ichi2/anki/analytics/UsageAnalytics.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOToxNzo0OFrOGlm5kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzo0Mjo0N1rOGlv5ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA4NzgyNQ==", "bodyText": "Just flagging; I don't think this will trigger #5794", "url": "https://github.com/ankidroid/Anki-Android/pull/6492#discussion_r442087825", "createdAt": "2020-06-18T09:17:48Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/analytics/UsageAnalytics.java", "diffHunk": "@@ -278,4 +285,46 @@ public static void sendAnalyticsException(@NonNull String description, boolean f\n         }\n         sAnalytics.exception().exceptionDescription(description).exceptionFatal(fatal).sendAsync();\n     }\n+\n+\n+    /**\n+     * An Android-specific device config generator. Without this it's \"Desktop\" and unknown for all hardware.\n+     * It is interesting to us what devices people use though (for instance: is Amazon Kindle support worth it?\n+     * Is anyone still using e-ink devices? How many people are on tablets? ChromeOS?)\n+     */\n+    private static class AndroidDefaultRequest extends DefaultRequest {\n+        private DefaultRequest setAndroidRequestParameters(Context context) {\n+\n+            // Are we running on really large screens or small screens or ?\n+            try {\n+                WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);\n+                Display display = wm.getDefaultDisplay();\n+                Point size = new Point();\n+                display.getSize(size);\n+                this.screenResolution(size.x + \"x\" + size.y);\n+            } catch (RuntimeException e) {\n+                // nothing much to do here, it means we couldn't get WindowManager\n+            }\n+\n+            // We can have up to 20 of these - there might be other things we want to know\n+            // but simply seeing what hardware we are running on should be useful\n+            this.customDimension(1, Build.VERSION.RELEASE); // systemVersion\n+            this.customDimension(2, Build.BRAND); // brand\n+            this.customDimension(3, Build.MODEL); // model\n+            this.customDimension(4, Build.BOARD); // deviceId\n+\n+            // This is important for google to auto-fingerprint us for default reporting\n+            try {\n+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {\n+                    this.userAgent(WebSettings.getDefaultUserAgent(context));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e002d5ba7f3b9637e7ff3d16cc863f8e5d636c1b"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIzNTMzMQ==", "bodyText": "I/we (at react-native-device-info) catch RuntimeException on purpose so it never crashes. Nearly 10 million downloads on that piece of code with no reported crashes, I'm comfortable with this block", "url": "https://github.com/ankidroid/Anki-Android/pull/6492#discussion_r442235331", "createdAt": "2020-06-18T13:42:47Z", "author": {"login": "mikehardy"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/analytics/UsageAnalytics.java", "diffHunk": "@@ -278,4 +285,46 @@ public static void sendAnalyticsException(@NonNull String description, boolean f\n         }\n         sAnalytics.exception().exceptionDescription(description).exceptionFatal(fatal).sendAsync();\n     }\n+\n+\n+    /**\n+     * An Android-specific device config generator. Without this it's \"Desktop\" and unknown for all hardware.\n+     * It is interesting to us what devices people use though (for instance: is Amazon Kindle support worth it?\n+     * Is anyone still using e-ink devices? How many people are on tablets? ChromeOS?)\n+     */\n+    private static class AndroidDefaultRequest extends DefaultRequest {\n+        private DefaultRequest setAndroidRequestParameters(Context context) {\n+\n+            // Are we running on really large screens or small screens or ?\n+            try {\n+                WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);\n+                Display display = wm.getDefaultDisplay();\n+                Point size = new Point();\n+                display.getSize(size);\n+                this.screenResolution(size.x + \"x\" + size.y);\n+            } catch (RuntimeException e) {\n+                // nothing much to do here, it means we couldn't get WindowManager\n+            }\n+\n+            // We can have up to 20 of these - there might be other things we want to know\n+            // but simply seeing what hardware we are running on should be useful\n+            this.customDimension(1, Build.VERSION.RELEASE); // systemVersion\n+            this.customDimension(2, Build.BRAND); // brand\n+            this.customDimension(3, Build.MODEL); // model\n+            this.customDimension(4, Build.BOARD); // deviceId\n+\n+            // This is important for google to auto-fingerprint us for default reporting\n+            try {\n+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {\n+                    this.userAgent(WebSettings.getDefaultUserAgent(context));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA4NzgyNQ=="}, "originalCommit": {"oid": "e002d5ba7f3b9637e7ff3d16cc863f8e5d636c1b"}, "originalPosition": 115}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 204, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}