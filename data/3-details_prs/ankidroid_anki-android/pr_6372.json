{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NjE2OTI0", "number": 6372, "title": "Browser: Don't compute question/answer unless they are required", "bodyText": "The main speed gain here is that we don't compute question/answer unless they are asked by the user.\nI find code more elegant, because we don't just deal with a map String->String but uses standard well typed Card object and its methods.\nTo test it, I opened the browser, selected cards, marked them, flagged them. Ensured that all was still working, those updates were still correctly shown in the GUI", "createdAt": "2020-06-05T17:47:43Z", "url": "https://github.com/ankidroid/Anki-Android/pull/6372", "merged": true, "mergeCommit": {"oid": "3be7f0e1c8e7bc5bc9102d3bfe93f4e9219110a2"}, "closed": true, "closedAt": "2020-08-15T22:59:19Z", "author": {"login": "Arthur-Milchior"}, "timelineItems": {"totalCount": 91, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoWgzwABqjM0MTI1MDI4NTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_RZIkgFqTQ2ODAyMTk2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3ff19e4812aa256822b22c87bae9fa510e432a84", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/3ff19e4812aa256822b22c87bae9fa510e432a84", "committedDate": "2020-06-05T17:42:26Z", "message": "NF: don't compute question/answer if it's not used"}, "afterCommit": {"oid": "08079357133713802642b321ba05b24232e9c5e5", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/08079357133713802642b321ba05b24232e9c5e5", "committedDate": "2020-06-05T17:56:18Z", "message": "NF: don't compute question/answer if it's not used"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "08079357133713802642b321ba05b24232e9c5e5", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/08079357133713802642b321ba05b24232e9c5e5", "committedDate": "2020-06-05T17:56:18Z", "message": "NF: don't compute question/answer if it's not used"}, "afterCommit": {"oid": "e3db36ce813c304ae96e4e0136fc10be2c8760bf", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/e3db36ce813c304ae96e4e0136fc10be2c8760bf", "committedDate": "2020-06-06T13:41:56Z", "message": "NF: don't compute question/answer if it's not used"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e3db36ce813c304ae96e4e0136fc10be2c8760bf", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/e3db36ce813c304ae96e4e0136fc10be2c8760bf", "committedDate": "2020-06-06T13:41:56Z", "message": "NF: don't compute question/answer if it's not used"}, "afterCommit": {"oid": "38accedd2bb5dec66e2603c8c6db9f6075acd560", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/38accedd2bb5dec66e2603c8c6db9f6075acd560", "committedDate": "2020-06-06T19:42:01Z", "message": "NF: CardCache have hash and equals\n\nThe comparison is based only on ids"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "38accedd2bb5dec66e2603c8c6db9f6075acd560", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/38accedd2bb5dec66e2603c8c6db9f6075acd560", "committedDate": "2020-06-06T19:42:01Z", "message": "NF: CardCache have hash and equals\n\nThe comparison is based only on ids"}, "afterCommit": {"oid": "5cf9981e008232f65d7dc25120bd2b3453c2f0b2", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/5cf9981e008232f65d7dc25120bd2b3453c2f0b2", "committedDate": "2020-06-06T20:08:42Z", "message": "NF: CardCache have hash and equals\n\nThe comparison is based only on ids"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e9a2ca5974521fa26e1477bae7126791e2408806", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/e9a2ca5974521fa26e1477bae7126791e2408806", "committedDate": "2020-06-06T21:48:53Z", "message": "NF: use empty instead of size"}, "afterCommit": {"oid": "ac300e38efc942ff253ad54088b9cc1a2565d8a3", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/ac300e38efc942ff253ad54088b9cc1a2565d8a3", "committedDate": "2020-06-06T22:00:47Z", "message": "NF: use empty instead of size"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ac300e38efc942ff253ad54088b9cc1a2565d8a3", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/ac300e38efc942ff253ad54088b9cc1a2565d8a3", "committedDate": "2020-06-06T22:00:47Z", "message": "NF: use empty instead of size"}, "afterCommit": {"oid": "10bf7817eed39982792988a72a38d575dea614fa", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/10bf7817eed39982792988a72a38d575dea614fa", "committedDate": "2020-06-07T23:43:36Z", "message": "NF: use empty instead of size"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "10bf7817eed39982792988a72a38d575dea614fa", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/10bf7817eed39982792988a72a38d575dea614fa", "committedDate": "2020-06-07T23:43:36Z", "message": "NF: use empty instead of size"}, "afterCommit": {"oid": "bd34b7d9c7a10b81c3e7c596161cbc1d592fff8e", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/bd34b7d9c7a10b81c3e7c596161cbc1d592fff8e", "committedDate": "2020-06-08T14:32:35Z", "message": "NF: use empty instead of size"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd34b7d9c7a10b81c3e7c596161cbc1d592fff8e", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/bd34b7d9c7a10b81c3e7c596161cbc1d592fff8e", "committedDate": "2020-06-08T14:32:35Z", "message": "NF: use empty instead of size"}, "afterCommit": {"oid": "b26ede33e1b567a46a027e44d8b2bc42358b02f7", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/b26ede33e1b567a46a027e44d8b2bc42358b02f7", "committedDate": "2020-06-08T19:04:37Z", "message": "NF: use empty instead of size"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b26ede33e1b567a46a027e44d8b2bc42358b02f7", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/b26ede33e1b567a46a027e44d8b2bc42358b02f7", "committedDate": "2020-06-08T19:04:37Z", "message": "NF: use empty instead of size"}, "afterCommit": {"oid": "7d21e677194a0898946a9a30770977e204709592", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/7d21e677194a0898946a9a30770977e204709592", "committedDate": "2020-06-13T23:55:04Z", "message": "NF: use empty instead of size"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NTAzNzUw", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#pullrequestreview-425503750", "createdAt": "2020-06-05T17:50:20Z", "commit": {"oid": "3ff19e4812aa256822b22c87bae9fa510e432a84"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNzo1MjowMVrOGf302A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxMDowNToxMFrOGjcCag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA3MzY4OA==", "bodyText": "I don't understand this method - shouldn't it be static?", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r436073688", "createdAt": "2020-06-05T17:52:01Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -2109,11 +1996,180 @@ private void onSelectionChanged() {\n     private long[] getAllCardIds() {\n         long[] l = new long[mCards.size()];\n         for (int i = 0; i < mCards.size(); i++) {\n-            l[i] = Long.parseLong(mCards.get(i).get(ID));\n+            l[i] = mCards.get(i).getId();\n         }\n         return l;\n     }\n \n+    public class CardCache {\n+        private long mId;\n+        private Card mCard = null;\n+        private boolean mLoaded = false;\n+        private Pair<String, String> mQa = null;\n+\n+        public CardCache(long id) {\n+            mId = id;\n+        }\n+\n+        public long getId() {\n+            return mId;\n+        }\n+\n+        /** clear all values except ID.*/\n+        public void reload() {\n+            mCard = null;\n+            mLoaded = false;\n+            mQa = null;\n+        }\n+\n+        public Card getCard() {\n+            if (mCard == null) {\n+                mCard = getCol().getCard(mId);\n+            }\n+            return mCard;\n+        }\n+\n+        /**\n+         * Get the background color of items in the card list based on the Card\n+         * @return index into TypedArray specifying the background color\n+         */\n+        private int getColor() {\n+            int flag = getCard().getUserFlag();\n+            switch (flag) {\n+                case 1:\n+                    return R.attr.flagRed;\n+                case 2:\n+                    return R.attr.flagOrange;\n+                case 3:\n+                    return R.attr.flagGreen;\n+                case 4:\n+                    return R.attr.flagBlue;\n+                default:\n+                    if (getCard().note().hasTag(\"marked\")) {\n+                        return R.attr.markedColor;\n+                    } else {\n+                        if (getCard().getQueue() == Consts.QUEUE_TYPE_SUSPENDED) {\n+                            return R.attr.suspendedColor;\n+                        } else {\n+                            return android.R.attr.colorBackground;\n+                        }\n+                    }\n+            }\n+        }\n+\n+        public String content(Column key) {\n+            switch (key) {\n+            case FLAGS:\n+                return (new Integer(getCard().getUserFlag())).toString();\n+            case SUSPENDED:\n+                return getCard().getQueue() == Consts.QUEUE_TYPE_SUSPENDED ? \"True\": \"False\";\n+            case MARKED:\n+                return getCard().note().hasTag(\"marked\") ? \"marked\" : null;\n+            case SFLD:\n+                return getCard().note().getSFld();\n+            case DECK:\n+                return getCol().getDecks().name(getCard().getDid());\n+            case TAGS:\n+                return getCard().note().stringTags();\n+            case CARD:\n+                return getCard().template().optString(\"name\");\n+            case DUE:\n+                return getCard().getDueString();\n+            case EASE:\n+                if (getCard().getType() == Consts.CARD_TYPE_NEW) {\n+                    return AnkiDroidApp.getInstance().getString(R.string.card_browser_ease_new_card);\n+                } else {\n+                    return (getCard().getFactor()/10)+\"%\";\n+                }\n+            case CHANGED:\n+                return LanguageUtil.getShortDateFormatFromS(getCard().getMod());\n+            case CREATED:\n+                return LanguageUtil.getShortDateFormatFromMs(getCard().note().getId());\n+            case EDITED:\n+                return LanguageUtil.getShortDateFormatFromS(getCard().note().getMod());\n+            case INTERVAL:\n+                switch (getCard().getType()) {\n+                case Consts.CARD_TYPE_NEW:\n+                    return AnkiDroidApp.getInstance().getString(R.string.card_browser_interval_new_card);\n+                case Consts.CARD_TYPE_LRN :\n+                    return AnkiDroidApp.getInstance().getString(R.string.card_browser_interval_learning_card);\n+                default:\n+                    return Utils.roundedTimeSpanUnformatted(AnkiDroidApp.getInstance(), getCard().getIvl()*86400);\n+                }\n+            case LAPSES:\n+                return Integer.toString(getCard().getLapses());\n+            case NOTE:\n+                return getCard().model().optString(\"name\");\n+            case REVIEWS:\n+                return Integer.toString(getCard().getReps());\n+            case QUESTION:\n+                updateSearchItemQA();\n+                return mQa.first;\n+            case ANSWER:\n+                updateSearchItemQA();\n+                return mQa.second;\n+            default:\n+                return null;\n+            }\n+        }\n+\n+        /** pre compute the note and question/answer.  It can safely\n+            be called twice without doing extra work. */\n+        public void load(boolean reload) {\n+            if (reload) {\n+                reload();\n+            }\n+            getCard().note();\n+            if (COLUMN1_KEYS[mColumn1Index] == QUESTION ||\n+                COLUMN1_KEYS[mColumn1Index] == ANSWER ||\n+                COLUMN2_KEYS[mColumn2Index] == QUESTION ||\n+                COLUMN2_KEYS[mColumn2Index] == ANSWER) {\n+                updateSearchItemQA();\n+            }\n+            mLoaded = true;\n+        }\n+\n+        public boolean isLoaded() {\n+            return mLoaded;\n+        }\n+\n+        /**\n+           Reload question and answer. Use browser format. If it's empty\n+           uses non-browser format. If answer starts by question, remove\n+           question.\n+        */\n+        public void updateSearchItemQA() {\n+            if (mQa != null) {\n+                return;\n+            }\n+            // render question and answer\n+            Map<String, String> qa = getCard()._getQA(true, true);\n+            // Render full question / answer if the bafmt (i.e. \"browser appearance\") setting forced blank result\n+            if (\"\".equals(qa.get(\"q\")) || \"\".equals(qa.get(\"a\"))) {\n+                HashMap<String, String> qaFull = getCard()._getQA(true, false);\n+                if (\"\".equals(qa.get(\"q\"))) {\n+                    qa.put(\"q\", qaFull.get(\"q\"));\n+                }\n+                if (\"\".equals(qa.get(\"a\"))) {\n+                    qa.put(\"a\", qaFull.get(\"a\"));\n+                }\n+            }\n+            // update the original hash map to include rendered question & answer\n+            String q = qa.get(\"q\");\n+            String a = qa.get(\"a\");\n+            // remove the question from the start of the answer if it exists\n+            if (a.startsWith(q)) {\n+                a = a.replaceFirst(Pattern.quote(q), \"\");\n+            }\n+            a = formatQA(a, AnkiDroidApp.getInstance());\n+            q = formatQA(q, AnkiDroidApp.getInstance());\n+            mQa = new Pair<>(q, a);\n+        }\n+    }\n+\n+    public CardCache getCardCache(long id) {\n+        return new CardCache(id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ff19e4812aa256822b22c87bae9fa510e432a84"}, "originalPosition": 631}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMxNzA1Ng==", "bodyText": "card.getNid() would be good - I'm not a fan of the strict application of the law of demeter, but it'd be useful to have another more efficient backing store here.", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r436317056", "createdAt": "2020-06-07T02:07:22Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -386,10 +390,10 @@ private boolean hasSelectedSingleNoteId() {\n             return false;\n         }\n         //copy to array to ensure threadsafe iteration\n-        Integer[] checkedPositions = mCheckedCardPositions.toArray(new Integer[0]);\n-        HashSet<String> notes = new HashSet<>();\n-        for (Integer position : checkedPositions) {\n-            String noteId = mCards.get(position).get(NOTE);\n+        CardCache[] checkedPositions = mCheckedCard.toArray(new CardCache[0]);\n+        HashSet<Long> notes = new HashSet<>();\n+        for (CardCache card : checkedPositions) {\n+            long noteId = card.getCard().getNid();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac300e38efc942ff253ad54088b9cc1a2565d8a3"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgxMTcwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (! idToRemove.contains(card.getId())) {\n          \n          \n            \n                        if (!idToRemove.contains(card.getId())) {", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r439811706", "createdAt": "2020-06-14T09:51:48Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -1582,10 +1516,10 @@ private void removeNotesView(java.util.Collection<Long> cardsIds, boolean reorde\n             }\n         }\n \n-        List<Map<String, String>> newMCards = new ArrayList<Map<String, String>>();\n-        for (Map<String, String> cardProperties: oldMCards) {\n-            if (! idToRemove.contains(Long.parseLong(cardProperties.get(ID)))) {\n-                newMCards.add(cardProperties);\n+        List<CardCache> newMCards = new ArrayList<>();\n+        for (CardCache card: oldMCards) {\n+            if (! idToRemove.contains(card.getId())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d21e677194a0898946a9a30770977e204709592"}, "originalPosition": 375}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgxMTc0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (! firstLoaded || ! lastLoaded) {\n          \n          \n            \n                            if (!firstLoaded || !lastLoaded) {", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r439811740", "createdAt": "2020-06-14T09:52:21Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -1831,10 +1765,10 @@ public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCoun\n             int lastVisibleItem = firstVisibleItem + visibleItemCount;\n             int size = getCardCount();\n             if ((size > 0) && (firstVisibleItem < size) && ((lastVisibleItem - 1) < size)) {\n-                String firstAns = getCards().get(firstVisibleItem).get(ANSWER);\n+                boolean firstLoaded = getCards().get(firstVisibleItem).isLoaded();\n                 // Note: max value of lastVisibleItem is totalItemCount, so need to subtract 1\n-                String lastAns = getCards().get(lastVisibleItem - 1).get(ANSWER);\n-                if (firstAns == null || lastAns == null) {\n+                boolean lastLoaded = getCards().get(lastVisibleItem - 1).isLoaded();\n+                if (! firstLoaded || ! lastLoaded) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d21e677194a0898946a9a30770977e204709592"}, "originalPosition": 399}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgxMTg1NA==", "bodyText": "design: I'm not sure content is the best word. getColumnText springs to mind, but I still think it could be better.", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r439811854", "createdAt": "2020-06-14T09:53:41Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -1905,23 +1839,23 @@ public View getView(int position, View convertView, ViewGroup parent) {\n         private void bindView(final int position, final View v) {\n             // Draw the content in the columns\n             View[] columns = (View[]) v.getTag();\n-            final Map<String, String> card = getCards().get(position);\n+            final CardCache card = getCards().get(position);\n             for (int i = 0; i < mToIds.length; i++) {\n                 TextView col = (TextView) columns[i];\n                 // set font for column\n                 setFont(col);\n                 // set text for column\n-                col.setText(card.get(mFromKeys[i]));\n+                col.setText(card.content(mFromKeys[i]));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d21e677194a0898946a9a30770977e204709592"}, "originalPosition": 432}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgxMTkyOA==", "bodyText": "mCheckedCards", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r439811928", "createdAt": "2020-06-14T09:54:27Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -198,7 +202,7 @@\n     private TextView mActionBarTitle;\n     private boolean mReloadRequired = false;\n     private boolean mInMultiSelectMode = false;\n-    private Set<Integer> mCheckedCardPositions = Collections.synchronizedSet(new LinkedHashSet<>());\n+    private Set<CardCache> mCheckedCard = Collections.synchronizedSet(new LinkedHashSet<>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d21e677194a0898946a9a30770977e204709592"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgxMTk5NA==", "bodyText": "Can this be cached, or are the callers optimised to only call this once?", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r439811994", "createdAt": "2020-06-14T09:55:23Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -2099,11 +1985,201 @@ private void onSelectionChanged() {\n     private long[] getAllCardIds() {\n         long[] l = new long[mCards.size()];\n         for (int i = 0; i < mCards.size(); i++) {\n-            l[i] = Long.parseLong(mCards.get(i).get(ID));\n+            l[i] = mCards.get(i).getId();\n         }\n         return l;\n     }\n \n+    public class CardCache {\n+        private long mId;\n+        private Card mCard = null;\n+        private boolean mLoaded = false;\n+        private Pair<String, String> mQa = null;\n+        private int mPosition;\n+\n+        public CardCache(long id, int position) {\n+            mId = id;\n+            mPosition = position;\n+        }\n+\n+        public long getId() {\n+            return mId;\n+        }\n+\n+        public int getPosition() {\n+            return mPosition;\n+        }\n+\n+        /** clear all values except ID.*/\n+        public void reload() {\n+            mCard = null;\n+            mLoaded = false;\n+            mQa = null;\n+        }\n+\n+        public Card getCard() {\n+            if (mCard == null) {\n+                mCard = getCol().getCard(mId);\n+            }\n+            return mCard;\n+        }\n+\n+        /**\n+         * Get the background color of items in the card list based on the Card\n+         * @return index into TypedArray specifying the background color\n+         */\n+        private int getColor() {\n+            int flag = getCard().getUserFlag();\n+            switch (flag) {\n+                case 1:\n+                    return R.attr.flagRed;\n+                case 2:\n+                    return R.attr.flagOrange;\n+                case 3:\n+                    return R.attr.flagGreen;\n+                case 4:\n+                    return R.attr.flagBlue;\n+                default:\n+                    if (getCard().note().hasTag(\"marked\")) {\n+                        return R.attr.markedColor;\n+                    } else {\n+                        if (getCard().getQueue() == Consts.QUEUE_TYPE_SUSPENDED) {\n+                            return R.attr.suspendedColor;\n+                        } else {\n+                            return android.R.attr.colorBackground;\n+                        }\n+                    }\n+            }\n+        }\n+\n+        public String content(Column key) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d21e677194a0898946a9a30770977e204709592"}, "originalPosition": 645}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgxMjIwNQ==", "bodyText": "Could you add a quick comment stating that column1 can't be an answer", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r439812205", "createdAt": "2020-06-14T09:58:13Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -2099,11 +1985,201 @@ private void onSelectionChanged() {\n     private long[] getAllCardIds() {\n         long[] l = new long[mCards.size()];\n         for (int i = 0; i < mCards.size(); i++) {\n-            l[i] = Long.parseLong(mCards.get(i).get(ID));\n+            l[i] = mCards.get(i).getId();\n         }\n         return l;\n     }\n \n+    public class CardCache {\n+        private long mId;\n+        private Card mCard = null;\n+        private boolean mLoaded = false;\n+        private Pair<String, String> mQa = null;\n+        private int mPosition;\n+\n+        public CardCache(long id, int position) {\n+            mId = id;\n+            mPosition = position;\n+        }\n+\n+        public long getId() {\n+            return mId;\n+        }\n+\n+        public int getPosition() {\n+            return mPosition;\n+        }\n+\n+        /** clear all values except ID.*/\n+        public void reload() {\n+            mCard = null;\n+            mLoaded = false;\n+            mQa = null;\n+        }\n+\n+        public Card getCard() {\n+            if (mCard == null) {\n+                mCard = getCol().getCard(mId);\n+            }\n+            return mCard;\n+        }\n+\n+        /**\n+         * Get the background color of items in the card list based on the Card\n+         * @return index into TypedArray specifying the background color\n+         */\n+        private int getColor() {\n+            int flag = getCard().getUserFlag();\n+            switch (flag) {\n+                case 1:\n+                    return R.attr.flagRed;\n+                case 2:\n+                    return R.attr.flagOrange;\n+                case 3:\n+                    return R.attr.flagGreen;\n+                case 4:\n+                    return R.attr.flagBlue;\n+                default:\n+                    if (getCard().note().hasTag(\"marked\")) {\n+                        return R.attr.markedColor;\n+                    } else {\n+                        if (getCard().getQueue() == Consts.QUEUE_TYPE_SUSPENDED) {\n+                            return R.attr.suspendedColor;\n+                        } else {\n+                            return android.R.attr.colorBackground;\n+                        }\n+                    }\n+            }\n+        }\n+\n+        public String content(Column key) {\n+            switch (key) {\n+            case FLAGS:\n+                return (new Integer(getCard().getUserFlag())).toString();\n+            case SUSPENDED:\n+                return getCard().getQueue() == Consts.QUEUE_TYPE_SUSPENDED ? \"True\": \"False\";\n+            case MARKED:\n+                return getCard().note().hasTag(\"marked\") ? \"marked\" : null;\n+            case SFLD:\n+                return getCard().note().getSFld();\n+            case DECK:\n+                return getCol().getDecks().name(getCard().getDid());\n+            case TAGS:\n+                return getCard().note().stringTags();\n+            case CARD:\n+                return getCard().template().optString(\"name\");\n+            case DUE:\n+                return getCard().getDueString();\n+            case EASE:\n+                if (getCard().getType() == Consts.CARD_TYPE_NEW) {\n+                    return AnkiDroidApp.getInstance().getString(R.string.card_browser_ease_new_card);\n+                } else {\n+                    return (getCard().getFactor()/10)+\"%\";\n+                }\n+            case CHANGED:\n+                return LanguageUtil.getShortDateFormatFromS(getCard().getMod());\n+            case CREATED:\n+                return LanguageUtil.getShortDateFormatFromMs(getCard().note().getId());\n+            case EDITED:\n+                return LanguageUtil.getShortDateFormatFromS(getCard().note().getMod());\n+            case INTERVAL:\n+                switch (getCard().getType()) {\n+                case Consts.CARD_TYPE_NEW:\n+                    return AnkiDroidApp.getInstance().getString(R.string.card_browser_interval_new_card);\n+                case Consts.CARD_TYPE_LRN :\n+                    return AnkiDroidApp.getInstance().getString(R.string.card_browser_interval_learning_card);\n+                default:\n+                    return Utils.roundedTimeSpanUnformatted(AnkiDroidApp.getInstance(), getCard().getIvl()*86400);\n+                }\n+            case LAPSES:\n+                return Integer.toString(getCard().getLapses());\n+            case NOTE_TYPE:\n+                return getCard().model().optString(\"name\");\n+            case REVIEWS:\n+                return Integer.toString(getCard().getReps());\n+            case QUESTION:\n+                updateSearchItemQA();\n+                return mQa.first;\n+            case ANSWER:\n+                updateSearchItemQA();\n+                return mQa.second;\n+            default:\n+                return null;\n+            }\n+        }\n+\n+        /** pre compute the note and question/answer.  It can safely\n+            be called twice without doing extra work. */\n+        public void load(boolean reload) {\n+            if (reload) {\n+                reload();\n+            }\n+            getCard().note();\n+            if (\n+                COLUMN1_KEYS[mColumn1Index] == QUESTION ||\n+                COLUMN2_KEYS[mColumn2Index] == QUESTION ||\n+                COLUMN2_KEYS[mColumn2Index] == ANSWER) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d21e677194a0898946a9a30770977e204709592"}, "originalPosition": 711}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgxMjI5MQ==", "bodyText": "No longer relevant comment", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r439812291", "createdAt": "2020-06-14T09:59:56Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -103,33 +103,37 @@\n \n import timber.log.Timber;\n \n+import static com.ichi2.anki.CardBrowser.Column.*;\n+\n public class CardBrowser extends NavigationDrawerActivity implements\n         DeckDropDownAdapter.SubtitleListener {\n \n     // Properties in mCards. this is a stringly typed map for speed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d21e677194a0898946a9a30770977e204709592"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgxMjcxNA==", "bodyText": "This (temporarily) leaks an activity reference, is there a better way to do this (extracting CardCache[] into a data structure for example)?", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r439812714", "createdAt": "2020-06-14T10:05:10Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -910,19 +910,19 @@ private TaskData doInBackgroundSearchCards(TaskData... params) {\n         String query = (String) params[0].getObjArray()[0];\n         Boolean order = (Boolean) params[0].getObjArray()[1];\n         int numCardsToRender = (int) params[0].getObjArray()[2];\n+        CardBrowser cb = (CardBrowser) params[0].getObjArray()[3];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d21e677194a0898946a9a30770977e204709592"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7d21e677194a0898946a9a30770977e204709592", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/7d21e677194a0898946a9a30770977e204709592", "committedDate": "2020-06-13T23:55:04Z", "message": "NF: use empty instead of size"}, "afterCommit": {"oid": "e9866b86609d36ac9155265671636ffbc1923b7e", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/e9866b86609d36ac9155265671636ffbc1923b7e", "committedDate": "2020-06-26T22:58:48Z", "message": "NF: use empty instead of size"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e9866b86609d36ac9155265671636ffbc1923b7e", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/e9866b86609d36ac9155265671636ffbc1923b7e", "committedDate": "2020-06-26T22:58:48Z", "message": "NF: use empty instead of size"}, "afterCommit": {"oid": "ac0955a50df91ec8b7fd21516ca152cb204c2b5e", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/ac0955a50df91ec8b7fd21516ca152cb204c2b5e", "committedDate": "2020-06-26T23:07:55Z", "message": "NF: use empty instead of size"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe80936681075192bd4ff1f569275b73fca7ae62", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/fe80936681075192bd4ff1f569275b73fca7ae62", "committedDate": "2020-06-27T18:50:42Z", "message": "NF: changing comments and name\n\nAs suggested by David"}, "afterCommit": {"oid": "e293c043b3b551347ffd2dc4c0f9497339d66d14", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/e293c043b3b551347ffd2dc4c0f9497339d66d14", "committedDate": "2020-06-27T18:59:41Z", "message": "NF: Avoiding to leak Card Browser Activity"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e293c043b3b551347ffd2dc4c0f9497339d66d14", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/e293c043b3b551347ffd2dc4c0f9497339d66d14", "committedDate": "2020-06-27T18:59:41Z", "message": "NF: Avoiding to leak Card Browser Activity"}, "afterCommit": {"oid": "3dbad652d6ccb694b22501bdbb0e7da3a76f91e7", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/3dbad652d6ccb694b22501bdbb0e7da3a76f91e7", "committedDate": "2020-06-27T20:26:00Z", "message": "NF: use empty instead of size"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3dbad652d6ccb694b22501bdbb0e7da3a76f91e7", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/3dbad652d6ccb694b22501bdbb0e7da3a76f91e7", "committedDate": "2020-06-27T20:26:00Z", "message": "NF: use empty instead of size"}, "afterCommit": {"oid": "53c59bfcbb16132b5c95b3380970539dfd765de0", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/53c59bfcbb16132b5c95b3380970539dfd765de0", "committedDate": "2020-07-04T17:23:12Z", "message": "NF: use empty instead of size"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "53c59bfcbb16132b5c95b3380970539dfd765de0", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/53c59bfcbb16132b5c95b3380970539dfd765de0", "committedDate": "2020-07-04T17:23:12Z", "message": "NF: use empty instead of size"}, "afterCommit": {"oid": "0f28d195d25b5bc21211621ca0328e42e24508fa", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/0f28d195d25b5bc21211621ca0328e42e24508fa", "committedDate": "2020-07-04T17:24:37Z", "message": "NF: use empty instead of size"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f28d195d25b5bc21211621ca0328e42e24508fa", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/0f28d195d25b5bc21211621ca0328e42e24508fa", "committedDate": "2020-07-04T17:24:37Z", "message": "NF: use empty instead of size"}, "afterCommit": {"oid": "5916a5467f0fc159fc5ea3a1fcb91063b2795931", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/5916a5467f0fc159fc5ea3a1fcb91063b2795931", "committedDate": "2020-07-04T17:25:10Z", "message": "NF: use empty instead of size"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5916a5467f0fc159fc5ea3a1fcb91063b2795931", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/5916a5467f0fc159fc5ea3a1fcb91063b2795931", "committedDate": "2020-07-04T17:25:10Z", "message": "NF: use empty instead of size"}, "afterCommit": {"oid": "4d28ef1aaef0476aaf752f4157cf3eba13e92a81", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/4d28ef1aaef0476aaf752f4157cf3eba13e92a81", "committedDate": "2020-07-05T23:10:44Z", "message": "NF: use empty instead of size"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d28ef1aaef0476aaf752f4157cf3eba13e92a81", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/4d28ef1aaef0476aaf752f4157cf3eba13e92a81", "committedDate": "2020-07-05T23:10:44Z", "message": "NF: use empty instead of size"}, "afterCommit": {"oid": "f01cbb2eb3f64b1d1cbf57a4b66339977d3cfa57", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/f01cbb2eb3f64b1d1cbf57a4b66339977d3cfa57", "committedDate": "2020-07-05T23:47:25Z", "message": "NF: use empty instead of size"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f01cbb2eb3f64b1d1cbf57a4b66339977d3cfa57", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/f01cbb2eb3f64b1d1cbf57a4b66339977d3cfa57", "committedDate": "2020-07-05T23:47:25Z", "message": "NF: use empty instead of size"}, "afterCommit": {"oid": "9e829667621150942b680aa19286327d6b348b48", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/9e829667621150942b680aa19286327d6b348b48", "committedDate": "2020-07-22T00:14:58Z", "message": "NF: use empty instead of size"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e829667621150942b680aa19286327d6b348b48", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/9e829667621150942b680aa19286327d6b348b48", "committedDate": "2020-07-22T00:14:58Z", "message": "NF: use empty instead of size"}, "afterCommit": {"oid": "9bb14ef1ae041ee2c87bfc3f7e3508889fa6c880", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/9bb14ef1ae041ee2c87bfc3f7e3508889fa6c880", "committedDate": "2020-07-22T05:14:24Z", "message": "NF: use empty instead of size"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9bb14ef1ae041ee2c87bfc3f7e3508889fa6c880", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/9bb14ef1ae041ee2c87bfc3f7e3508889fa6c880", "committedDate": "2020-07-22T05:14:24Z", "message": "NF: use empty instead of size"}, "afterCommit": {"oid": "9463b840589e4645a77c1661f4dd53c75c779f0b", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/9463b840589e4645a77c1661f4dd53c75c779f0b", "committedDate": "2020-07-24T11:11:48Z", "message": "NF: use empty instead of size"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0ODY2Njgy", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#pullrequestreview-454866682", "createdAt": "2020-07-24T13:01:51Z", "commit": {"oid": "9463b840589e4645a77c1661f4dd53c75c779f0b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMzowMTo1MlrOG2ueNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMzoxMjozNVrOG2uzIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAzNzY4Ng==", "bodyText": "We shouldn't need the array copy now we're iterating over the same collection", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r460037686", "createdAt": "2020-07-24T13:01:52Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -373,11 +374,11 @@ private void onSearch() {\n \n     private long[] getSelectedCardIds() {\n         //copy to array to ensure threadsafe iteration\n-        Integer[] checkedPositions = mCheckedCardPositions.toArray(new Integer[0]);\n-        long[] ids = new long[checkedPositions.length];\n+        CardCache[] checkedCards = mCheckedCards.toArray(new CardCache[0]);\n+        long[] ids = new long[checkedCards.length];\n         int count = 0;\n-        for (int cardPosition : checkedPositions) {\n-            ids[count++] = Long.valueOf(mCards.get(cardPosition).get(ID));\n+        for (CardCache cardPosition : checkedCards) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9463b840589e4645a77c1661f4dd53c75c779f0b"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAzODk1OA==", "bodyText": "I don't get how this could occur, could you explain the change more?", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r460038958", "createdAt": "2020-07-24T13:04:27Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -562,10 +563,10 @@ public void onItemSelected(AdapterView<?> parent, View view, int pos, long id) {\n                     mColumn2Index = pos;\n                     AnkiDroidApp.getSharedPrefs(AnkiDroidApp.getInstance().getBaseContext()).edit()\n                             .putInt(\"cardBrowserColumn2\", mColumn2Index).commit();\n-                    String[] fromMap = mCardsAdapter.getFromMapping();\n+                    Column[] fromMap = mCardsAdapter.getFromMapping();\n                     fromMap[1] = COLUMN2_KEYS[mColumn2Index];\n                     if (fromMap[1] == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9463b840589e4645a77c1661f4dd53c75c779f0b"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAzOTQwMA==", "bodyText": "Again, I don't think this can be null any more, is this logic retained?", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r460039400", "createdAt": "2020-07-24T13:05:20Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -579,9 +580,9 @@ public void onNothingSelected(AdapterView<?> parent) {\n         // get the font and font size from the preferences\n         int sflRelativeFontSize = preferences.getInt(\"relativeCardBrowserFontSize\", DEFAULT_FONT_SIZE_RATIO);\n         String sflCustomFont = preferences.getString(\"browserEditorFont\", \"\");\n-        String[] columnsContent = {COLUMN1_KEYS[mColumn1Index], COLUMN2_KEYS[mColumn2Index]};\n+        Column[] columnsContent = {COLUMN1_KEYS[mColumn1Index], COLUMN2_KEYS[mColumn2Index]};\n         if (columnsContent[1] == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9463b840589e4645a77c1661f4dd53c75c779f0b"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0MzA0Mg==", "bodyText": "I think we want to ensure that we're using the same instance from  getCards() throughout this procedure", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r460043042", "createdAt": "2020-07-24T13:12:35Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -1406,30 +1416,13 @@ public void onPostExecute(TaskData result) {\n     private void updateCardsInList(List<Card> cards, Map<Long, String> updatedCardTags) {\n         Map<Long, Integer> idToPos = getPositionMap(getCards());\n         for (Card c : cards) {\n-            Note note = c.note();\n             // get position in the mCards search results HashMap\n             int pos = idToPos.containsKey(c.getId()) ? idToPos.get(c.getId()) : -1;\n             if (pos < 0 || pos >= getCardCount()) {\n                 continue;\n             }\n-            Map<String, String> card = getCards().get(pos);\n-            // update tags\n-            card.put(MARKED, (c.note().hasTag(\"marked\")) ? \"marked\" : null);\n-            if (updatedCardTags != null) {\n-                card.put(TAGS, updatedCardTags.get(c.getNid()));\n-            }\n-            // update sfld\n-            String sfld = note.getSFld();\n-            card.put(SFLD, sfld);\n             // update Q & A etc\n-            updateSearchItemQA(getBaseContext(), card, c, getCol());\n-            // update deck\n-            String deckName;\n-            deckName = getCol().getDecks().get(c.getDid()).getString(\"name\");\n-            card.put(DECK, deckName);\n-            // update flags (marked / suspended / etc) which determine color\n-            card.put(SUSPENDED, c.getQueue() == Consts.QUEUE_TYPE_SUSPENDED ? \"True\": \"False\");\n-            card.put(FLAGS, (new Integer(c.userFlag())).toString());\n+            getCards().get(pos).load(true, mColumn1Index, mColumn2Index);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9463b840589e4645a77c1661f4dd53c75c779f0b"}, "originalPosition": 286}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0ODc1OTcx", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#pullrequestreview-454875971", "createdAt": "2020-07-24T13:15:27Z", "commit": {"oid": "9463b840589e4645a77c1661f4dd53c75c779f0b"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMzoxNToyN1rOG2u5EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMzoyNzoyNFrOG2vTHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0NDU2MQ==", "bodyText": "getColumnHeaderText?", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r460044561", "createdAt": "2020-07-24T13:15:27Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -1927,23 +1860,23 @@ public View getView(int position, View convertView, ViewGroup parent) {\n         private void bindView(final int position, final View v) {\n             // Draw the content in the columns\n             View[] columns = (View[]) v.getTag();\n-            final Map<String, String> card = getCards().get(position);\n+            final CardCache card = getCards().get(position);\n             for (int i = 0; i < mToIds.length; i++) {\n                 TextView col = (TextView) columns[i];\n                 // set font for column\n                 setFont(col);\n                 // set text for column\n-                col.setText(card.get(mFromKeys[i]));\n+                col.setText(card.getColumnText(mFromKeys[i]));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9463b840589e4645a77c1661f4dd53c75c779f0b"}, "originalPosition": 450}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0NTQ5NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    mActionBarTitle.setText(String.valueOf(mCheckedCards.size()));\n          \n          \n            \n                    mActionBarTitle.setText(String.valueOf(checkedCardCount()));", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r460045494", "createdAt": "2020-07-24T13:17:06Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -2177,7 +2257,7 @@ private void loadMultiSelectMode() {\n         mInMultiSelectMode = true;\n         // show title and hide spinner\n         mActionBarTitle.setVisibility(View.VISIBLE);\n-        mActionBarTitle.setText(String.valueOf(mCheckedCardPositions.size()));\n+        mActionBarTitle.setText(String.valueOf(mCheckedCards.size()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9463b840589e4645a77c1661f4dd53c75c779f0b"}, "originalPosition": 804}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0NTU5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @VisibleForTesting", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r460045592", "createdAt": "2020-07-24T13:17:16Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -2205,7 +2285,7 @@ private void endMultiSelectMode() {\n \n     @VisibleForTesting", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9463b840589e4645a77c1661f4dd53c75c779f0b"}, "originalPosition": 819}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0NTc0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return mCheckedCards.size() >= getCardCount(); //must handle 0.\n          \n          \n            \n                    return checkedCardCount() >= getCardCount(); //must handle 0.", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r460045745", "createdAt": "2020-07-24T13:17:34Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -877,11 +879,11 @@ private void updateMultiselectMenu() {\n \n \n     private boolean hasSelectedCards() {\n-        return mCheckedCardPositions.size() > 0;\n+        return !mCheckedCards.isEmpty();\n     }\n \n     private boolean hasSelectedAllCards() {\n-        return mCheckedCardPositions.size() >= getCardCount(); //must handle 0.\n+        return mCheckedCards.size() >= getCardCount(); //must handle 0.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9463b840589e4645a77c1661f4dd53c75c779f0b"}, "originalPosition": 190}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0NjEwOQ==", "bodyText": "Maybe extract to hasCheckedCards() or similar", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r460046109", "createdAt": "2020-07-24T13:18:08Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -1051,13 +1053,13 @@ public void onClick(DialogInterface dialog, int which) {\n \n             case R.id.action_preview: {\n                 Intent previewer = new Intent(CardBrowser.this, Previewer.class);\n-                if (mInMultiSelectMode && mCheckedCardPositions.size() > 1) {\n+                if (mInMultiSelectMode && mCheckedCards.size() > 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9463b840589e4645a77c1661f4dd53c75c779f0b"}, "originalPosition": 208}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0NjM0Nw==", "bodyText": "nit\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                int startIndex = mCheckedCards.isEmpty() ? 0: mCheckedCards.iterator().next().getPosition();\n          \n          \n            \n                                int startIndex = mCheckedCards.isEmpty() ? 0 : mCheckedCards.iterator().next().getPosition();", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r460046347", "createdAt": "2020-07-24T13:18:37Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -1051,13 +1053,13 @@ public void onClick(DialogInterface dialog, int which) {\n \n             case R.id.action_preview: {\n                 Intent previewer = new Intent(CardBrowser.this, Previewer.class);\n-                if (mInMultiSelectMode && mCheckedCardPositions.size() > 1) {\n+                if (mInMultiSelectMode && mCheckedCards.size() > 1) {\n                     // Multiple cards have been explicitly selected, so preview only those cards\n                     previewer.putExtra(\"index\", 0);\n                     previewer.putExtra(\"cardList\", getSelectedCardIds());\n                 } else {\n                     // Preview all cards, starting from the one that is currently selected\n-                    int startIndex = mCheckedCardPositions.isEmpty() ? 0: mCheckedCardPositions.iterator().next();\n+                    int startIndex = mCheckedCards.isEmpty() ? 0: mCheckedCards.iterator().next().getPosition();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9463b840589e4645a77c1661f4dd53c75c779f0b"}, "originalPosition": 215}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0Njc0Mw==", "bodyText": "``\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        mActionBarTitle.setText(Integer.toString(mCheckedCards.size()));\n          \n          \n            \n                        mActionBarTitle.setText(Integer.toString(checkedCardCount()));", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r460046743", "createdAt": "2020-07-24T13:19:20Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -2105,13 +1990,13 @@ private void onSelectionChanged() {\n             }\n \n             updateMultiselectMenu();\n-            mActionBarTitle.setText(Integer.toString(mCheckedCardPositions.size()));\n+            mActionBarTitle.setText(Integer.toString(mCheckedCards.size()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9463b840589e4645a77c1661f4dd53c75c779f0b"}, "originalPosition": 580}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0NzQyMw==", "bodyText": "@Nullable", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r460047423", "createdAt": "2020-07-24T13:20:29Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -2121,11 +2006,206 @@ private void onSelectionChanged() {\n     private long[] getAllCardIds() {\n         long[] l = new long[mCards.size()];\n         for (int i = 0; i < mCards.size(); i++) {\n-            l[i] = Long.parseLong(mCards.get(i).get(ID));\n+            l[i] = mCards.get(i).getId();\n         }\n         return l;\n     }\n \n+    public static class CardCache {\n+        private long mId;\n+        private Collection mCol;\n+        private Card mCard = null;\n+        private boolean mLoaded = false;\n+        private Pair<String, String> mQa = null;\n+        private int mPosition;\n+\n+        public CardCache(long id, Collection col, int position) {\n+            mId = id;\n+            mCol = col;\n+            mPosition = position;\n+        }\n+\n+        public long getId() {\n+            return mId;\n+        }\n+\n+        public int getPosition() {\n+            return mPosition;\n+        }\n+\n+        /** clear all values except ID.*/\n+        public void reload() {\n+            mCard = null;\n+            mLoaded = false;\n+            mQa = null;\n+        }\n+\n+        public Card getCard() {\n+            if (mCard == null) {\n+                mCard = mCol.getCard(mId);\n+            }\n+            return mCard;\n+        }\n+\n+        /**\n+         * Get the background color of items in the card list based on the Card\n+         * @return index into TypedArray specifying the background color\n+         */\n+        private int getColor() {\n+            int flag = getCard().userFlag();\n+            switch (flag) {\n+                case 1:\n+                    return R.attr.flagRed;\n+                case 2:\n+                    return R.attr.flagOrange;\n+                case 3:\n+                    return R.attr.flagGreen;\n+                case 4:\n+                    return R.attr.flagBlue;\n+                default:\n+                    if (getCard().note().hasTag(\"marked\")) {\n+                        return R.attr.markedColor;\n+                    } else {\n+                        if (getCard().getQueue() == Consts.QUEUE_TYPE_SUSPENDED) {\n+                            return R.attr.suspendedColor;\n+                        } else {\n+                            return android.R.attr.colorBackground;\n+                        }\n+                    }\n+            }\n+        }\n+\n+        public String getColumnText(Column key) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9463b840589e4645a77c1661f4dd53c75c779f0b"}, "originalPosition": 665}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1MTIyOA==", "bodyText": "Having CardCache contain position can lead to bugs, as removing or adding from the list will cause inconsistent data. Is there a way to have the data structure keep track of this?", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#discussion_r460051228", "createdAt": "2020-07-24T13:27:24Z", "author": {"login": "david-allison-1"}, "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -968,17 +968,19 @@ private TaskData doInBackgroundSearchCards(TaskData... params) {\n         String query = (String) params[0].getObjArray()[0];\n         Boolean order = (Boolean) params[0].getObjArray()[1];\n         int numCardsToRender = (int) params[0].getObjArray()[2];\n-        List<Long> searchResult_ = col.findCards(query, order, this);\n         if (isCancelled()) {\n             Timber.d(\"doInBackgroundSearchCards was cancelled so return null\");\n             return null;\n         }\n+        int column1Index = (Integer) params[0].getObjArray()[3];\n+        int column2Index = (Integer) params[0].getObjArray()[4];\n+        List<Long> searchResult_ = col.findCards(query, order, this);\n         int resultSize = searchResult_.size();\n-        List<Map<String,String>> searchResult = new ArrayList<>(resultSize);\n+        List<CardBrowser.CardCache> searchResult = new ArrayList<>(resultSize);\n         Timber.d(\"The search found %d cards\", resultSize);\n+        int position = 0;\n         for (Long cid: searchResult_) {\n-            Map<String, String> card = new HashMap<>();\n-            card.put(CardBrowser.ID, cid.toString());\n+            CardBrowser.CardCache card = new CardBrowser.CardCache(cid, col, position++);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9463b840589e4645a77c1661f4dd53c75c779f0b"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9463b840589e4645a77c1661f4dd53c75c779f0b", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/9463b840589e4645a77c1661f4dd53c75c779f0b", "committedDate": "2020-07-24T11:11:48Z", "message": "NF: use empty instead of size"}, "afterCommit": {"oid": "ff45236566a225367144f9e6c8e0f2aa1750f363", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/ff45236566a225367144f9e6c8e0f2aa1750f363", "committedDate": "2020-07-24T14:26:05Z", "message": "NF: ensure updateCardsInList iterate on a single list of card"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ff45236566a225367144f9e6c8e0f2aa1750f363", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/ff45236566a225367144f9e6c8e0f2aa1750f363", "committedDate": "2020-07-24T14:26:05Z", "message": "NF: ensure updateCardsInList iterate on a single list of card"}, "afterCommit": {"oid": "8bfcc94e4a61f413376b93d938054bcb025a1e7a", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/8bfcc94e4a61f413376b93d938054bcb025a1e7a", "committedDate": "2020-07-24T14:28:59Z", "message": "NF: ensure updateCardsInList iterate on a single list of card"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8bfcc94e4a61f413376b93d938054bcb025a1e7a", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/8bfcc94e4a61f413376b93d938054bcb025a1e7a", "committedDate": "2020-07-24T14:28:59Z", "message": "NF: ensure updateCardsInList iterate on a single list of card"}, "afterCommit": {"oid": "abdaecc8b0814c3bdac85cb81fa62a3e36515baa", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/abdaecc8b0814c3bdac85cb81fa62a3e36515baa", "committedDate": "2020-08-04T19:26:52Z", "message": "NF: ensure updateCardsInList iterate on a single list of card"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMzY4Mjg0", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#pullrequestreview-461368284", "createdAt": "2020-08-05T06:16:30Z", "commit": {"oid": "abdaecc8b0814c3bdac85cb81fa62a3e36515baa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "abdaecc8b0814c3bdac85cb81fa62a3e36515baa", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/abdaecc8b0814c3bdac85cb81fa62a3e36515baa", "committedDate": "2020-08-04T19:26:52Z", "message": "NF: ensure updateCardsInList iterate on a single list of card"}, "afterCommit": {"oid": "81cd8fc09eb9f3511a699c10397b2950a9915f29", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/81cd8fc09eb9f3511a699c10397b2950a9915f29", "committedDate": "2020-08-07T23:18:03Z", "message": "NF: ensure updateCardsInList iterate on a single list of card"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "81cd8fc09eb9f3511a699c10397b2950a9915f29", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/81cd8fc09eb9f3511a699c10397b2950a9915f29", "committedDate": "2020-08-07T23:18:03Z", "message": "NF: ensure updateCardsInList iterate on a single list of card"}, "afterCommit": {"oid": "f8d48b819586b79bf4085fb010de08e409bf50e5", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/f8d48b819586b79bf4085fb010de08e409bf50e5", "committedDate": "2020-08-07T23:29:06Z", "message": "NF: ensure updateCardsInList iterate on a single list of card"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f8d48b819586b79bf4085fb010de08e409bf50e5", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/f8d48b819586b79bf4085fb010de08e409bf50e5", "committedDate": "2020-08-07T23:29:06Z", "message": "NF: ensure updateCardsInList iterate on a single list of card"}, "afterCommit": {"oid": "29b8174bc4abe92d48c25ed45ea0ebf9f386f96e", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/29b8174bc4abe92d48c25ed45ea0ebf9f386f96e", "committedDate": "2020-08-07T23:43:43Z", "message": "NF: ensure updateCardsInList iterate on a single list of card"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a330c9fbd791fe6c4810d7c56069c67a41526d1", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/5a330c9fbd791fe6c4810d7c56069c67a41526d1", "committedDate": "2020-08-13T17:44:36Z", "message": "NF: remove unused setter setCards"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b2a68c2a79f2aa132d8c63f85aa43569ab9e280", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/9b2a68c2a79f2aa132d8c63f85aa43569ab9e280", "committedDate": "2020-08-13T17:44:36Z", "message": "NF: create type cardCache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43a37f4ca2106fdef6de2ea21a2d320e95482218", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/43a37f4ca2106fdef6de2ea21a2d320e95482218", "committedDate": "2020-08-13T17:44:36Z", "message": "NF: replace ID by \"id\".\n\nID represents a browser column. In this case \"id\" represents a JSON\nentry. The same constant should not be used."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a794df8a6c18d430764362dea7f6cf9796a9b1a", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/8a794df8a6c18d430764362dea7f6cf9796a9b1a", "committedDate": "2020-08-13T17:44:36Z", "message": "NF: \"id\" to ID\n\nThose \"id\" are referring to elements of a CardCache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe9e653a666779f476344ae7f1816544145a58d4", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/fe9e653a666779f476344ae7f1816544145a58d4", "committedDate": "2020-08-13T17:44:36Z", "message": "NF: reload in CardCache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee4c36a18630e246a5cc3fbc134e4686c6502d4d", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/ee4c36a18630e246a5cc3fbc134e4686c6502d4d", "committedDate": "2020-08-13T17:44:36Z", "message": "NF: reload CardCache in updateCardsInList"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "908d1fc8298520298e4471ad3cee8fa8052c32a3", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/908d1fc8298520298e4471ad3cee8fa8052c32a3", "committedDate": "2020-08-13T17:44:36Z", "message": "NF: id in CardCache\n\nConstructor always take a long, not a Long, not a String. So no\nworries about missing values or non parsable string. This part of the\ncode can be removed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab971e646f0fd1de0f5f0332fab18e4607a28b46", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/ab971e646f0fd1de0f5f0332fab18e4607a28b46", "committedDate": "2020-08-13T17:44:36Z", "message": "NF: CardClass has card accessor\n\nThis save the card object in memory. It is acceptable because it is\ndone only for cards selected, card displayed and card near the card\ndisplayed. So the amount of memory used is limited. Furthermore, it\navoids extra database access to get the card object later in the execution."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca90303ced6471bac5bf3c632c354b1b615d71c9", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/ca90303ced6471bac5bf3c632c354b1b615d71c9", "committedDate": "2020-08-13T17:44:36Z", "message": "NF: move getFlagOrDefault in CardClass"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2db1ffb2c403e11719470eceb94781f68a0f051", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/d2db1ffb2c403e11719470eceb94781f68a0f051", "committedDate": "2020-08-13T17:44:36Z", "message": "NF: getColor, get variable when needed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "690d07f40eb2335949e287248ee7aedf54b61214", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/690d07f40eb2335949e287248ee7aedf54b61214", "committedDate": "2020-08-13T17:44:36Z", "message": "NF: simplify flag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3fd297ad6bfbea7e0b486b913f2d59a7155b6ac", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/e3fd297ad6bfbea7e0b486b913f2d59a7155b6ac", "committedDate": "2020-08-13T17:44:36Z", "message": "NF: simplify getFlagOrDefault to use card"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f22f0c14b2353cefc2a8c107315daa6f9cc979a", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/0f22f0c14b2353cefc2a8c107315daa6f9cc979a", "committedDate": "2020-08-13T17:44:36Z", "message": "NF: remove getFlagOrDefault"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c2472c34d0b2b260df929ca92e485fcea88c5df", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/6c2472c34d0b2b260df929ca92e485fcea88c5df", "committedDate": "2020-08-13T17:44:36Z", "message": "NF: getColor in CardClass"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54abc7a8493e5e193242fe580d6f31977751ab96", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/54abc7a8493e5e193242fe580d6f31977751ab96", "committedDate": "2020-08-13T17:44:36Z", "message": "NF: uses card feature in color"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c941451e7bf050d6e8cfb038c46bfe493ac063c3", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/c941451e7bf050d6e8cfb038c46bfe493ac063c3", "committedDate": "2020-08-13T17:44:36Z", "message": "NF: cardProperties renamed to card"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac8266e84680d217a238a2e3c30b54b85040514f", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/ac8266e84680d217a238a2e3c30b54b85040514f", "committedDate": "2020-08-13T17:44:36Z", "message": "NF: introduce variable text_for_column in bindView"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c355ece958cf4848e2a8c6d0b9ca0ba38c44f50", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/9c355ece958cf4848e2a8c6d0b9ca0ba38c44f50", "committedDate": "2020-08-13T17:44:36Z", "message": "NF: uses content instead than setText"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16a3081d7f3e162bedf2833d138c4052f9419dcd", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/16a3081d7f3e162bedf2833d138c4052f9419dcd", "committedDate": "2020-08-13T17:44:36Z", "message": "NF: CardCache deal with loading\n\nLoading fetch note and question/answer. This is not entirely efficient\nsince question/answer is not necessarily needed, it should be improved\nsomeplace else.\n\nInstead of checking for question/answer value, we check if loading did\noccur. We also simply states the card to load when we want to\nprecompute it in background.\n\nIt can be indicated to reload the value, if we expect the note to have\nchanged (tag, fields...)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77daaca9b65534ca44f41670177be4f9373a9ecf", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/77daaca9b65534ca44f41670177be4f9373a9ecf", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: FLAGS in content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c44d8d1c9b2d33885392ed79ee15eda9e0b20cf7", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/c44d8d1c9b2d33885392ed79ee15eda9e0b20cf7", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: SUSPENDED in content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a4795feed353bf84dc958df611682b40d89c553", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/4a4795feed353bf84dc958df611682b40d89c553", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: MARKED in Content\n\nTwo deleted lines have different content. Theoretically they should\nhave been the same. However, the regexp matches also:\n* notmarkedatall\nwhile the hasTag matches\n* MARKED\n\nI kept the one which mades more sens."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24373e796b0e331e43ebff441b2417f9d5594459", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/24373e796b0e331e43ebff441b2417f9d5594459", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: remove unused sMarkedPattern"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65f77793c1d135440df1c5d2182f59ae7418abd6", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/65f77793c1d135440df1c5d2182f59ae7418abd6", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: SFLD in content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98614e5a9c00ab35f7ea28de87ec514e1f5a4223", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/98614e5a9c00ab35f7ea28de87ec514e1f5a4223", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: DECK in content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c105dc2e1b4177cd43a3ba923834e4552bea6e67", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/c105dc2e1b4177cd43a3ba923834e4552bea6e67", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: TAGS in content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c37eb925fcc4fba81709edb5b67a7805b0d4c80", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/1c37eb925fcc4fba81709edb5b67a7805b0d4c80", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: CARD in content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a02081e2132b07162082f815a9c95b0d2b01b40", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/7a02081e2132b07162082f815a9c95b0d2b01b40", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: DUE in content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "015d7600a8d822354ea9891a752f0eca7b79f7fd", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/015d7600a8d822354ea9891a752f0eca7b79f7fd", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: EASE in content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a08bd2a223f7fe8e2de50c5aa75207019829d7f6", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/a08bd2a223f7fe8e2de50c5aa75207019829d7f6", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: CHANGED in content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28f734d71ba4c8e170da0cab7a8f0150ba409ef9", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/28f734d71ba4c8e170da0cab7a8f0150ba409ef9", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: CREATED in content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce00082bebaed0fd20cc209ef42dbd7fdb864557", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/ce00082bebaed0fd20cc209ef42dbd7fdb864557", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: EDITED in content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f5206d23ce128e634862c048554b62cd13ee70d", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/4f5206d23ce128e634862c048554b62cd13ee70d", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: INTERVAL in Content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3514f5574a591733957a7eedc62df25f1096eca", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/a3514f5574a591733957a7eedc62df25f1096eca", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: LAPSES in content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ac3dbad9d0597d42c5438e380abf1cde8b7c095", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/7ac3dbad9d0597d42c5438e380abf1cde8b7c095", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: NOTE_TYPE in content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4515bf076d0a5e34f4a8cb22bfdaff37c1b95076", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/4515bf076d0a5e34f4a8cb22bfdaff37c1b95076", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: REVIEWS in content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b2b2d2ad5e428534e51c610d929340bd4fe1c40", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/3b2b2d2ad5e428534e51c610d929340bd4fe1c40", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: remove unused paramater, varilable and comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fbcfa07b46527e758cc30a7740bf6630c2bdee7", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/3fbcfa07b46527e758cc30a7740bf6630c2bdee7", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: context is got directly in updateSearchItemQA"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea18eae5a900fc916aeb6feb0d211b03fd663f73", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/ea18eae5a900fc916aeb6feb0d211b03fd663f73", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: updateSearchItemQA don't take card, but get it from CardCache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c51428eb0905f262c64a9c92588b5f80119188a", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/8c51428eb0905f262c64a9c92588b5f80119188a", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: Question/Answer in Content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f116a296f8732f6b3b7b55f262df75214767e52", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/0f116a296f8732f6b3b7b55f262df75214767e52", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: To get card browser value, uses only .content\n\nThere is nothing anymore in the map"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8131713ff79549cbe154c400eca2165a288cd602", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/8131713ff79549cbe154c400eca2165a288cd602", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: CardCache deal with loading\n\nLoading fetch note and question/answer. This is not entirely efficient\nsince question/answer is not necessarily needed, it should be improved\nsomeplace else.\n\nInstead of checking for question/answer value, we check if loading did\noccur. We also simply states the card to load when we want to\nprecompute it in background.\n\nIt can be indicated to reload the value, if we expect the note to have\nchanged (tag, fields...)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf93dc66afe87b0e4355f25e4e8c2c66555c3a2a", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/bf93dc66afe87b0e4355f25e4e8c2c66555c3a2a", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: simplify slightly code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84dfdca81148445da44cad2f2cf87aa594659e2a", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/84dfdca81148445da44cad2f2cf87aa594659e2a", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: CardCache does not inherits HashMap"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfce76537dd723d2d24137b61ae9b5ca2a3f49f4", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/bfce76537dd723d2d24137b61ae9b5ca2a3f49f4", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: use enum for column"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d76026f5cfa66d5d6c4204623bed9021c875102", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/5d76026f5cfa66d5d6c4204623bed9021c875102", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: don't compute question/answer if it's not used"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0258c11a3f351cc8c8c3903722813f37df6fd92c", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/0258c11a3f351cc8c8c3903722813f37df6fd92c", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: CardCache have hash and equals\n\nThe comparison is based only on ids"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d82e34d70ee545027638be71c1e02471da83d13b", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/d82e34d70ee545027638be71c1e02471da83d13b", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: cardCache constructor takes position"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "229067e095d2c43ed9dffecf600903e2bf9f7c89", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/229067e095d2c43ed9dffecf600903e2bf9f7c89", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: throw exception before adding to set\n\nSince it's used only in test and raise an exception, it's NF"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9b4743011a732dd5e33b6a46e9676f3c2c31aa2", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/e9b4743011a732dd5e33b6a46e9676f3c2c31aa2", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: mCheckedCardPositions becomes a list of CardCache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2969df3cd606bb1b48df7ab735b8bf2c0272481", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/b2969df3cd606bb1b48df7ab735b8bf2c0272481", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: uses checkedCardCount when possible"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31519b2a5c5142368cc48e7eccaf396c2fbc49a1", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/31519b2a5c5142368cc48e7eccaf396c2fbc49a1", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: remove unused parameter cards"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19c556b423788b28716cc6cb08c55e63547fe97d", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/19c556b423788b28716cc6cb08c55e63547fe97d", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: remove unused variable col"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "784e494d5d55d59821a74c5673809ac56de61ee0", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/784e494d5d55d59821a74c5673809ac56de61ee0", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: use empty instead of size"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "312f5d25286cd6a2e374bef8fc873d1045827591", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/312f5d25286cd6a2e374bef8fc873d1045827591", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: remove an always false condition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e53977b480f437b664bc41ef56be7cbb4aba431", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/5e53977b480f437b664bc41ef56be7cbb4aba431", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: updateCardsInList more clear\n\nAs .get() returns null, no need to check whether the elements belong to the set before accessing it."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72d271afa8cbd528a6b705c4032acd2024d986d8", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/72d271afa8cbd528a6b705c4032acd2024d986d8", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: indicates that getPositionMap is static\n\nThis way, it's clear that it only consider the list given as input, and not current card list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4664884898ea45c879699fd4a2b06e07a2a04ea0", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/4664884898ea45c879699fd4a2b06e07a2a04ea0", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: ensure updateCardsInList iterate on a single list of card"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "29b8174bc4abe92d48c25ed45ea0ebf9f386f96e", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/29b8174bc4abe92d48c25ed45ea0ebf9f386f96e", "committedDate": "2020-08-07T23:43:43Z", "message": "NF: ensure updateCardsInList iterate on a single list of card"}, "afterCommit": {"oid": "4664884898ea45c879699fd4a2b06e07a2a04ea0", "author": {"user": {"login": "Arthur-Milchior", "name": "Arthur Milchior"}}, "url": "https://github.com/ankidroid/Anki-Android/commit/4664884898ea45c879699fd4a2b06e07a2a04ea0", "committedDate": "2020-08-13T17:44:37Z", "message": "NF: ensure updateCardsInList iterate on a single list of card"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDIxOTY2", "url": "https://github.com/ankidroid/Anki-Android/pull/6372#pullrequestreview-468021966", "createdAt": "2020-08-15T22:59:09Z", "commit": {"oid": "4664884898ea45c879699fd4a2b06e07a2a04ea0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3143, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}