{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MTEzMzg2", "number": 322, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMjo1NjozNVrOEwwMOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjowNzowMlrOF7Mh4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NTU2NjY3OnYy", "diffSide": "RIGHT", "path": "quickfixj-core/src/main/java/quickfix/Message.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMjo1NjozNVrOHmgXIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMzowMDowMlrOHmghNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEzODE0Ng==", "bodyText": "I know it does not make any sense, but to be backward compatible we need to set OutputKeys.INDENT, \"yes\" without setting the indent-amount, right?", "url": "https://github.com/quickfix-j/quickfixj/pull/322#discussion_r510138146", "createdAt": "2020-10-22T12:56:35Z", "author": {"login": "chrjohn"}, "path": "quickfixj-core/src/main/java/quickfix/Message.java", "diffHunk": "@@ -377,6 +377,8 @@ public String toXML(DataDictionary dataDictionary, boolean indent) {\n             if (indent) {\n                 serializer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n                 serializer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");\n+            } else {\n+                serializer.setOutputProperty(OutputKeys.INDENT, \"no\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99a955b40a7545cf3ade2fe836b8e4e060ebfe4b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE0MDcyNA==", "bodyText": "In theory. If we do that then we are backwards compatible, but we get different behaviour in Java 11. If we set to \"no\" we are backwards compatible and consistent across Java versions. (if we want to be fully backwards compatible with formatting we can go via option 1)\nBTW. Fixing another problem. Seems that there was a bug in Java 9/10/11 https://bugs.openjdk.java.net/browse/JDK-8215543 that also puts additional new line characters before and after CDATA elements when indent is enabled.", "url": "https://github.com/quickfix-j/quickfixj/pull/322#discussion_r510140724", "createdAt": "2020-10-22T13:00:02Z", "author": {"login": "the-thing"}, "path": "quickfixj-core/src/main/java/quickfix/Message.java", "diffHunk": "@@ -377,6 +377,8 @@ public String toXML(DataDictionary dataDictionary, boolean indent) {\n             if (indent) {\n                 serializer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n                 serializer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");\n+            } else {\n+                serializer.setOutputProperty(OutputKeys.INDENT, \"no\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEzODE0Ng=="}, "originalCommit": {"oid": "99a955b40a7545cf3ade2fe836b8e4e060ebfe4b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk3NjE1NTg3OnYy", "diffSide": "RIGHT", "path": "quickfixj-core/src/main/java/quickfix/Message.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjowNzowMlrOJWfVrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjowNzowMlrOJWfVrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU2MTkwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * probably not sufficient for production use, but it more intended\n          \n          \n            \n                 * probably not sufficient for production use, but is more intended", "url": "https://github.com/quickfix-j/quickfixj/pull/322#discussion_r627561902", "createdAt": "2021-05-06T16:07:02Z", "author": {"login": "chrjohn"}, "path": "quickfixj-core/src/main/java/quickfix/Message.java", "diffHunk": "@@ -316,7 +316,24 @@ public boolean trailerHasGroup(Group group) {\n      * @see #toXML(DataDictionary)\n      */\n     public String toXML() {\n-        return toXML(null);\n+        return toXML(false);\n+    }\n+\n+    /**\n+     * Converts the message into a simple XML format. This format is\n+     * probably not sufficient for production use, but it more intended", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c089126834a8177baeec0150f71b73bcbe4264e"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2139, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}