{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3OTU1MjAz", "number": 259, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMTowNDoxMFrODhu47w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMToxODoxM1rODhvBtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2Njk3ODM5OnYy", "diffSide": "RIGHT", "path": "quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMTowNDoxMFrOFsoirg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNzoyNDowM1rOFs-oVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0NTkwMg==", "bodyText": "Make this private - it's not used outside this class.", "url": "https://github.com/quickfix-j/quickfixj/pull/259#discussion_r382345902", "createdAt": "2020-02-21T01:04:10Z", "author": {"login": "philipwhiuk"}, "path": "quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java", "diffHunk": "@@ -537,4 +599,8 @@ public void testConcurrentAccess() throws ConfigError, InterruptedException {\n         return defaultSettings;\n     }\n \n+    protected String getConfigurationFileName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f0cb0c19299a202286ab131b59e373d2d69354b"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNzc5OA==", "bodyText": "Fixed", "url": "https://github.com/quickfix-j/quickfixj/pull/259#discussion_r382707798", "createdAt": "2020-02-21T17:24:03Z", "author": {"login": "MAXbrainRUS"}, "path": "quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java", "diffHunk": "@@ -537,4 +599,8 @@ public void testConcurrentAccess() throws ConfigError, InterruptedException {\n         return defaultSettings;\n     }\n \n+    protected String getConfigurationFileName() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0NTkwMg=="}, "originalCommit": {"oid": "2f0cb0c19299a202286ab131b59e373d2d69354b"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2Njk4MDcxOnYy", "diffSide": "RIGHT", "path": "quickfixj-core/src/main/java/quickfix/SessionSettings.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMTowNToyNlrOFsokEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMTowNToyNlrOFsokEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0NjI1OQ==", "bodyText": "As an aside, this is still a terrible name for a variable IMO but we could fix that in another commit.\nTo be completely obtuse, it's a variable property that contains contains variable properties.\nmodifiableValues would move us in the right direction. I'll take that up in another PR when this is merged.", "url": "https://github.com/quickfix-j/quickfixj/pull/259#discussion_r382346259", "createdAt": "2020-02-21T01:05:26Z", "author": {"login": "philipwhiuk"}, "path": "quickfixj-core/src/main/java/quickfix/SessionSettings.java", "diffHunk": "@@ -86,13 +86,34 @@\n     // problems with moving configuration files between *nix and Windows.\n     private static final String NEWLINE = \"\\r\\n\";\n \n-    private Properties variableValues = System.getProperties();\n+    private Properties variableValues;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f0cb0c19299a202286ab131b59e373d2d69354b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2Njk4NjU3OnYy", "diffSide": "RIGHT", "path": "quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMTowODo1NVrOFsonfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNzoyNDozOFrOFs-pSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0NzEzMw==", "bodyText": "These comments are kind of unnecessary IMO.", "url": "https://github.com/quickfix-j/quickfixj/pull/259#discussion_r382347133", "createdAt": "2020-02-21T01:08:55Z", "author": {"login": "philipwhiuk"}, "path": "quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java", "diffHunk": "@@ -313,6 +324,57 @@ public void testVariableInterpolationWithProps() throws Exception {\n                 settings.getString(\"VariableTest\"));\n     }\n \n+    @Test\n+    public void testVariableInterpolationWithCustomPropsForSessionIdFromInputStream() throws Exception {\n+        // GIVEN", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f0cb0c19299a202286ab131b59e373d2d69354b"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwODA0Mg==", "bodyText": "Fixed", "url": "https://github.com/quickfix-j/quickfixj/pull/259#discussion_r382708042", "createdAt": "2020-02-21T17:24:38Z", "author": {"login": "MAXbrainRUS"}, "path": "quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java", "diffHunk": "@@ -313,6 +324,57 @@ public void testVariableInterpolationWithProps() throws Exception {\n                 settings.getString(\"VariableTest\"));\n     }\n \n+    @Test\n+    public void testVariableInterpolationWithCustomPropsForSessionIdFromInputStream() throws Exception {\n+        // GIVEN", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0NzEzMw=="}, "originalCommit": {"oid": "2f0cb0c19299a202286ab131b59e373d2d69354b"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NzAwMDg0OnYy", "diffSide": "RIGHT", "path": "quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMToxODoxM1rOFsowHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNzoyNDo0N1rOFs-pjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0OTM0Mw==", "bodyText": "This method is both hard to follow and repeated.\nI prefer\nprivate SessionID findSessionID(SessionSettings settings, String targetCompID) {\n     while (sessionIDIterator.hasNext()) {\n          if (sessionID.getTargetCompID().startsWith(sessionID)) {\n                  return sessionID;\n          }\n     }\n     return null;\n}\nthen\nSessionID sessionID = findSessionID(settings, \"CLIENT3\");\nassertNotNull(\"Settings for CLIENT3 not found\", sessionID);\nassertEquals(\"Wrong TargetCompID\", \"CLIENT3_FOO_BAR\", sessionID.getTargetCompID());\nThis abstracts the nasty Iterator iteration out the test and makes the test closer to the arrange, act, assert model - which is what your comments are really saying.", "url": "https://github.com/quickfix-j/quickfixj/pull/259#discussion_r382349343", "createdAt": "2020-02-21T01:18:13Z", "author": {"login": "philipwhiuk"}, "path": "quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java", "diffHunk": "@@ -313,6 +324,57 @@ public void testVariableInterpolationWithProps() throws Exception {\n                 settings.getString(\"VariableTest\"));\n     }\n \n+    @Test\n+    public void testVariableInterpolationWithCustomPropsForSessionIdFromInputStream() throws Exception {\n+        // GIVEN\n+        System.setProperty(\"test.2\", \"BAR\");\n+        final Properties properties = new Properties(System.getProperties());\n+        properties.setProperty(\"test.1\", \"FOO\");\n+\n+        String settingsString = getDefaultSettingString();\n+        settingsString += \"\\n\";\n+        settingsString += \"[SESSION]\\n\";\n+        settingsString += \"BeginString=FIX.4.2\\n\";\n+        settingsString += \"TargetCompID=CLIENT3_${test.1}_${test.2}\\n\";\n+        settingsString += \"DataDictionary=../spec/FIX42.xml\\n\";\n+\n+        // WHEN\n+        final SessionSettings settings = createSettingsFromString(settingsString, properties);\n+\n+        // THEN\n+        Iterator<SessionID> sessionIDIterator = settings.sectionIterator();\n+        while (sessionIDIterator.hasNext()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f0cb0c19299a202286ab131b59e373d2d69354b"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwODEwOA==", "bodyText": "Fixed", "url": "https://github.com/quickfix-j/quickfixj/pull/259#discussion_r382708108", "createdAt": "2020-02-21T17:24:47Z", "author": {"login": "MAXbrainRUS"}, "path": "quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java", "diffHunk": "@@ -313,6 +324,57 @@ public void testVariableInterpolationWithProps() throws Exception {\n                 settings.getString(\"VariableTest\"));\n     }\n \n+    @Test\n+    public void testVariableInterpolationWithCustomPropsForSessionIdFromInputStream() throws Exception {\n+        // GIVEN\n+        System.setProperty(\"test.2\", \"BAR\");\n+        final Properties properties = new Properties(System.getProperties());\n+        properties.setProperty(\"test.1\", \"FOO\");\n+\n+        String settingsString = getDefaultSettingString();\n+        settingsString += \"\\n\";\n+        settingsString += \"[SESSION]\\n\";\n+        settingsString += \"BeginString=FIX.4.2\\n\";\n+        settingsString += \"TargetCompID=CLIENT3_${test.1}_${test.2}\\n\";\n+        settingsString += \"DataDictionary=../spec/FIX42.xml\\n\";\n+\n+        // WHEN\n+        final SessionSettings settings = createSettingsFromString(settingsString, properties);\n+\n+        // THEN\n+        Iterator<SessionID> sessionIDIterator = settings.sectionIterator();\n+        while (sessionIDIterator.hasNext()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0OTM0Mw=="}, "originalCommit": {"oid": "2f0cb0c19299a202286ab131b59e373d2d69354b"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2099, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}