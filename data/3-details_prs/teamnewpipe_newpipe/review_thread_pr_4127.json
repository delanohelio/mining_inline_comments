{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MjQ2Nzk4", "number": 4127, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwNzoxNzo1N1rOEYrQZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwNzoxNzo1N1rOEYrQZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MzA5OTg5OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/about/LicenseFragment.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwNzoxNzo1N1rOHBIbUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxMDozMDo1MFrOHBRYyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk0ODY5MA==", "bodyText": "Add final", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4127#discussion_r470948690", "createdAt": "2020-08-15T07:17:57Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/about/LicenseFragment.java", "diffHunk": "@@ -44,16 +47,21 @@ public static LicenseFragment newInstance(final SoftwareComponent[] softwareComp\n      * @param context the context to use\n      * @param license the license to show\n      */\n-    private static void showLicense(final Context context, final License license) {\n-        new LicenseFragmentHelper((Activity) context).execute(license);\n+    private static void showLicense(final Activity context, final License license) {\n+        new LicenseFragmentHelper(context).execute(license);\n     }\n \n     @Override\n     public void onCreate(@Nullable final Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         softwareComponents = (SoftwareComponent[]) getArguments()\n                 .getParcelableArray(ARG_COMPONENTS);\n-\n+        if (savedInstanceState != null) {\n+            Serializable license = savedInstanceState.getSerializable(LICENSE_KEY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c148fd1e68b1829d493558b8b658706eaf41e5d4"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTAwMjc0Ng==", "bodyText": "Done", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4127#discussion_r471002746", "createdAt": "2020-08-15T15:29:31Z", "author": {"login": "nmurali94"}, "path": "app/src/main/java/org/schabi/newpipe/about/LicenseFragment.java", "diffHunk": "@@ -44,16 +47,21 @@ public static LicenseFragment newInstance(final SoftwareComponent[] softwareComp\n      * @param context the context to use\n      * @param license the license to show\n      */\n-    private static void showLicense(final Context context, final License license) {\n-        new LicenseFragmentHelper((Activity) context).execute(license);\n+    private static void showLicense(final Activity context, final License license) {\n+        new LicenseFragmentHelper(context).execute(license);\n     }\n \n     @Override\n     public void onCreate(@Nullable final Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         softwareComponents = (SoftwareComponent[]) getArguments()\n                 .getParcelableArray(ARG_COMPONENTS);\n-\n+        if (savedInstanceState != null) {\n+            Serializable license = savedInstanceState.getSerializable(LICENSE_KEY);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk0ODY5MA=="}, "originalCommit": {"oid": "c148fd1e68b1829d493558b8b658706eaf41e5d4"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA5NTQ5Ng==", "bodyText": "@nmurali94: If you've fixed such an issue, next time please just press the \"Resolve conversation\" button instead of saying something like \"Done\".", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4127#discussion_r471095496", "createdAt": "2020-08-16T10:30:50Z", "author": {"login": "wb9688"}, "path": "app/src/main/java/org/schabi/newpipe/about/LicenseFragment.java", "diffHunk": "@@ -44,16 +47,21 @@ public static LicenseFragment newInstance(final SoftwareComponent[] softwareComp\n      * @param context the context to use\n      * @param license the license to show\n      */\n-    private static void showLicense(final Context context, final License license) {\n-        new LicenseFragmentHelper((Activity) context).execute(license);\n+    private static void showLicense(final Activity context, final License license) {\n+        new LicenseFragmentHelper(context).execute(license);\n     }\n \n     @Override\n     public void onCreate(@Nullable final Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         softwareComponents = (SoftwareComponent[]) getArguments()\n                 .getParcelableArray(ARG_COMPONENTS);\n-\n+        if (savedInstanceState != null) {\n+            Serializable license = savedInstanceState.getSerializable(LICENSE_KEY);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk0ODY5MA=="}, "originalCommit": {"oid": "c148fd1e68b1829d493558b8b658706eaf41e5d4"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3054, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}