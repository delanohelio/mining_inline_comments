{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2MTg0OTky", "number": 4276, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNjowMzo0MlrOElvJkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNToyMDo1NFrOErA-_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDA1MjY1OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/util/DeviceUtils.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNjowMzo0MlrOHVYFWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNDozMTozOFrOHX0m6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE3NjczMQ==", "bodyText": "Not ContextCompat here?", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4276#discussion_r492176731", "createdAt": "2020-09-21T16:03:42Z", "author": {"login": "Redirion"}, "path": "app/src/main/java/org/schabi/newpipe/util/DeviceUtils.java", "diffHunk": "@@ -32,15 +31,14 @@ public static boolean isTv(final Context context) {\n         final PackageManager pm = App.getApp().getPackageManager();\n \n         // from doc: https://developer.android.com/training/tv/start/hardware.html#runtime-check\n-        boolean isTv = ((UiModeManager) context.getSystemService(UI_MODE_SERVICE))\n+        boolean isTv = ContextCompat.getSystemService(context, UiModeManager.class)\n                 .getCurrentModeType() == Configuration.UI_MODE_TYPE_TELEVISION\n                 || pm.hasSystemFeature(AMAZON_FEATURE_FIRE_TV)\n                 || pm.hasSystemFeature(PackageManager.FEATURE_TELEVISION);\n \n         // from https://stackoverflow.com/a/58932366\n         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n-            final boolean isBatteryAbsent\n-                    = ((BatteryManager) context.getSystemService(BATTERY_SERVICE))\n+            final boolean isBatteryAbsent = context.getSystemService(BatteryManager.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "811c790b0b49d749b0351b2786dbbba7a8fa50dd"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI1ODY2Nw==", "bodyText": "It isn't needed, as Context's getSystemService(Class) method is available on Android Marshmallow and higher.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4276#discussion_r494258667", "createdAt": "2020-09-24T12:03:09Z", "author": {"login": "Isira-Seneviratne"}, "path": "app/src/main/java/org/schabi/newpipe/util/DeviceUtils.java", "diffHunk": "@@ -32,15 +31,14 @@ public static boolean isTv(final Context context) {\n         final PackageManager pm = App.getApp().getPackageManager();\n \n         // from doc: https://developer.android.com/training/tv/start/hardware.html#runtime-check\n-        boolean isTv = ((UiModeManager) context.getSystemService(UI_MODE_SERVICE))\n+        boolean isTv = ContextCompat.getSystemService(context, UiModeManager.class)\n                 .getCurrentModeType() == Configuration.UI_MODE_TYPE_TELEVISION\n                 || pm.hasSystemFeature(AMAZON_FEATURE_FIRE_TV)\n                 || pm.hasSystemFeature(PackageManager.FEATURE_TELEVISION);\n \n         // from https://stackoverflow.com/a/58932366\n         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n-            final boolean isBatteryAbsent\n-                    = ((BatteryManager) context.getSystemService(BATTERY_SERVICE))\n+            final boolean isBatteryAbsent = context.getSystemService(BatteryManager.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE3NjczMQ=="}, "originalCommit": {"oid": "811c790b0b49d749b0351b2786dbbba7a8fa50dd"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI2NTYwNQ==", "bodyText": "Sorry, I don't understand. Don't you always need to call context.getSystemService(Class).", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4276#discussion_r494265605", "createdAt": "2020-09-24T12:15:17Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/util/DeviceUtils.java", "diffHunk": "@@ -32,15 +31,14 @@ public static boolean isTv(final Context context) {\n         final PackageManager pm = App.getApp().getPackageManager();\n \n         // from doc: https://developer.android.com/training/tv/start/hardware.html#runtime-check\n-        boolean isTv = ((UiModeManager) context.getSystemService(UI_MODE_SERVICE))\n+        boolean isTv = ContextCompat.getSystemService(context, UiModeManager.class)\n                 .getCurrentModeType() == Configuration.UI_MODE_TYPE_TELEVISION\n                 || pm.hasSystemFeature(AMAZON_FEATURE_FIRE_TV)\n                 || pm.hasSystemFeature(PackageManager.FEATURE_TELEVISION);\n \n         // from https://stackoverflow.com/a/58932366\n         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n-            final boolean isBatteryAbsent\n-                    = ((BatteryManager) context.getSystemService(BATTERY_SERVICE))\n+            final boolean isBatteryAbsent = context.getSystemService(BatteryManager.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE3NjczMQ=="}, "originalCommit": {"oid": "811c790b0b49d749b0351b2786dbbba7a8fa50dd"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc0MTIyNQ==", "bodyText": "ContextCompat.getSystemService() actually calls Context.getSystemService(Class) on Android Marshmallow and higher, and calls Context.getSystemService(String) on lower versions.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4276#discussion_r494741225", "createdAt": "2020-09-25T04:31:38Z", "author": {"login": "Isira-Seneviratne"}, "path": "app/src/main/java/org/schabi/newpipe/util/DeviceUtils.java", "diffHunk": "@@ -32,15 +31,14 @@ public static boolean isTv(final Context context) {\n         final PackageManager pm = App.getApp().getPackageManager();\n \n         // from doc: https://developer.android.com/training/tv/start/hardware.html#runtime-check\n-        boolean isTv = ((UiModeManager) context.getSystemService(UI_MODE_SERVICE))\n+        boolean isTv = ContextCompat.getSystemService(context, UiModeManager.class)\n                 .getCurrentModeType() == Configuration.UI_MODE_TYPE_TELEVISION\n                 || pm.hasSystemFeature(AMAZON_FEATURE_FIRE_TV)\n                 || pm.hasSystemFeature(PackageManager.FEATURE_TELEVISION);\n \n         // from https://stackoverflow.com/a/58932366\n         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n-            final boolean isBatteryAbsent\n-                    = ((BatteryManager) context.getSystemService(BATTERY_SERVICE))\n+            final boolean isBatteryAbsent = context.getSystemService(BatteryManager.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE3NjczMQ=="}, "originalCommit": {"oid": "811c790b0b49d749b0351b2786dbbba7a8fa50dd"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNTM5Mzk2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/player/helper/LockManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNToxNTozMVrOHdi4QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNToyNDozNVrOHdjBoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc0MjIwOA==", "bodyText": "Why getApplicationContext()? Isn't context already enough, like the line below?", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4276#discussion_r500742208", "createdAt": "2020-10-07T05:15:31Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/player/helper/LockManager.java", "diffHunk": "@@ -18,10 +17,9 @@\n     private WifiManager.WifiLock wifiLock;\n \n     public LockManager(final Context context) {\n-        powerManager = ((PowerManager) context.getApplicationContext()\n-                .getSystemService(POWER_SERVICE));\n-        wifiManager = ((WifiManager) context.getApplicationContext()\n-                .getSystemService(WIFI_SERVICE));\n+        powerManager = ContextCompat.getSystemService(context.getApplicationContext(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61ae65a4a92575487ce2f8ca65ba1d2e89c34a74"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc0NDYwOA==", "bodyText": "The documentation for WifiManager states:\n\"On releases before Build.VERSION_CODES.N, this object should only be obtained from an Context#getApplicationContext(), and not from any other derived context to avoid memory leaks within the calling process.\"", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4276#discussion_r500744608", "createdAt": "2020-10-07T05:24:35Z", "author": {"login": "Isira-Seneviratne"}, "path": "app/src/main/java/org/schabi/newpipe/player/helper/LockManager.java", "diffHunk": "@@ -18,10 +17,9 @@\n     private WifiManager.WifiLock wifiLock;\n \n     public LockManager(final Context context) {\n-        powerManager = ((PowerManager) context.getApplicationContext()\n-                .getSystemService(POWER_SERVICE));\n-        wifiManager = ((WifiManager) context.getApplicationContext()\n-                .getSystemService(WIFI_SERVICE));\n+        powerManager = ContextCompat.getSystemService(context.getApplicationContext(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc0MjIwOA=="}, "originalCommit": {"oid": "61ae65a4a92575487ce2f8ca65ba1d2e89c34a74"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNTQwMjM5OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/App.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNToyMDoxNFrOHdi9IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNToyMDoxNFrOHdi9IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc0MzQ1Ng==", "bodyText": "Instead of adding this line to the lint suppressions, just split it in half", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4276#discussion_r500743456", "createdAt": "2020-10-07T05:20:14Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/App.java", "diffHunk": "@@ -219,49 +219,30 @@ protected void initACRA() {\n         }\n     }\n \n-    public void initNotificationChannel() {\n+    private void initNotificationChannels() {\n         if (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) {\n             return;\n         }\n \n-        final String id = getString(R.string.notification_channel_id);\n-        final CharSequence name = getString(R.string.notification_channel_name);\n-        final String description = getString(R.string.notification_channel_description);\n+        String id = getString(R.string.notification_channel_id);\n+        String name = getString(R.string.notification_channel_name);\n+        String description = getString(R.string.notification_channel_description);\n \n         // Keep this below DEFAULT to avoid making noise on every notification update\n         final int importance = NotificationManager.IMPORTANCE_LOW;\n \n-        final NotificationChannel mChannel = new NotificationChannel(id, name, importance);\n-        mChannel.setDescription(description);\n+        final NotificationChannel mainChannel = new NotificationChannel(id, name, importance);\n+        mainChannel.setDescription(description);\n \n-        final NotificationManager mNotificationManager =\n-                (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\n-        mNotificationManager.createNotificationChannel(mChannel);\n+        id = getString(R.string.app_update_notification_channel_id);\n+        name = getString(R.string.app_update_notification_channel_name);\n+        description = getString(R.string.app_update_notification_channel_description);\n \n-        setUpUpdateNotificationChannel(importance);\n-    }\n+        final NotificationChannel appUpdateChannel = new NotificationChannel(id, name, importance);\n+        appUpdateChannel.setDescription(description);\n \n-    /**\n-     * Set up notification channel for app update.\n-     *\n-     * @param importance\n-     */\n-    @TargetApi(Build.VERSION_CODES.O)\n-    private void setUpUpdateNotificationChannel(final int importance) {\n-        final String appUpdateId\n-                = getString(R.string.app_update_notification_channel_id);\n-        final CharSequence appUpdateName\n-                = getString(R.string.app_update_notification_channel_name);\n-        final String appUpdateDescription\n-                = getString(R.string.app_update_notification_channel_description);\n-\n-        final NotificationChannel appUpdateChannel\n-                = new NotificationChannel(appUpdateId, appUpdateName, importance);\n-        appUpdateChannel.setDescription(appUpdateDescription);\n-\n-        final NotificationManager appUpdateNotificationManager\n-                = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\n-        appUpdateNotificationManager.createNotificationChannel(appUpdateChannel);\n+        final NotificationManager notificationManager = getSystemService(NotificationManager.class);\n+        notificationManager.createNotificationChannels(Arrays.asList(mainChannel, appUpdateChannel));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61ae65a4a92575487ce2f8ca65ba1d2e89c34a74"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNTQwMzUwOnYy", "diffSide": "RIGHT", "path": "checkstyle-suppressions.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNToyMDo1NFrOHdi9zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNToyMDo1NFrOHdi9zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc0MzYyOA==", "bodyText": "So remove this\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n              <suppress checks=\"LineLength\"\n          \n          \n            \n                  files=\"App.java\"\n          \n          \n            \n                  lines=\"245\"/>", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4276#discussion_r500743628", "createdAt": "2020-10-07T05:20:54Z", "author": {"login": "Stypox"}, "path": "checkstyle-suppressions.xml", "diffHunk": "@@ -13,7 +13,11 @@\n \n   <suppress checks=\"FinalParameters\"\n       files=\"ListHelper.java\"\n-      lines=\"280,312\"/>\n+      lines=\"282,314\"/>\n+\n+  <suppress checks=\"LineLength\"\n+      files=\"App.java\"\n+      lines=\"245\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61ae65a4a92575487ce2f8ca65ba1d2e89c34a74"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3067, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}