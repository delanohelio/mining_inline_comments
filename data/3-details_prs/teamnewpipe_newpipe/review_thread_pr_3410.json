{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxODkwNzMx", "number": 3410, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMjo1ODo0NVrODwvVVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMzo0MzoxNVrODwwBYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDMzNzQ5OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMjo1ODo0NVrOGD5z4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMzoyNzozOFrOGD6dlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc0NjA4MQ==", "bodyText": "Why create a new exception type to just use it to transfer information to a method? Why not just creating another method to handle restricted video infos?", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3410#discussion_r406746081", "createdAt": "2020-04-10T12:58:45Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java", "diffHunk": "@@ -1325,4 +1335,6 @@ private void updateProgressInfo(@NonNull final StreamInfo info) {\n                     animateView(detailPositionView, false, 500);\n                 });\n     }\n+\n+    private static class RestrictedVideoException extends Exception { }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc43b1c29d1834a6af6ed1c0e2d5f361a90d4846"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc1Njc1Nw==", "bodyText": "Because I was having some issue when calling showError directly, but it seems to work fine now.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3410#discussion_r406756757", "createdAt": "2020-04-10T13:27:38Z", "author": {"login": "wb9688"}, "path": "app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java", "diffHunk": "@@ -1325,4 +1335,6 @@ private void updateProgressInfo(@NonNull final StreamInfo info) {\n                     animateView(detailPositionView, false, 500);\n                 });\n     }\n+\n+    private static class RestrictedVideoException extends Exception { }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc0NjA4MQ=="}, "originalCommit": {"oid": "fc43b1c29d1834a6af6ed1c0e2d5f361a90d4846"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDMzODk5OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMjo1OToxM1rOGD50oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMzoyMjoxOFrOGD6V4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc0NjI3Mw==", "bodyText": "I don't understand where you are checking if the user has disabled restricted videos", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3410#discussion_r406746273", "createdAt": "2020-04-10T12:59:13Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java", "diffHunk": "@@ -811,9 +812,13 @@ public void startLoading(final boolean forceLoad) {\n                 .observeOn(AndroidSchedulers.mainThread())\n                 .subscribe((@NonNull StreamInfo result) -> {\n                     isLoading.set(false);\n-                    currentInfo = result;\n-                    handleResult(result);\n-                    showContent();\n+                    if (result.getAgeLimit() != NO_AGE_LIMIT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc43b1c29d1834a6af6ed1c0e2d5f361a90d4846"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc0ODk3Mw==", "bodyText": "Actually, enabling or disabling the option does nothing", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3410#discussion_r406748973", "createdAt": "2020-04-10T13:06:39Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java", "diffHunk": "@@ -811,9 +812,13 @@ public void startLoading(final boolean forceLoad) {\n                 .observeOn(AndroidSchedulers.mainThread())\n                 .subscribe((@NonNull StreamInfo result) -> {\n                     isLoading.set(false);\n-                    currentInfo = result;\n-                    handleResult(result);\n-                    showContent();\n+                    if (result.getAgeLimit() != NO_AGE_LIMIT) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc0NjI3Mw=="}, "originalCommit": {"oid": "fc43b1c29d1834a6af6ed1c0e2d5f361a90d4846"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc1NDc4NA==", "bodyText": "I forgot to commit that ;)", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3410#discussion_r406754784", "createdAt": "2020-04-10T13:22:18Z", "author": {"login": "wb9688"}, "path": "app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java", "diffHunk": "@@ -811,9 +812,13 @@ public void startLoading(final boolean forceLoad) {\n                 .observeOn(AndroidSchedulers.mainThread())\n                 .subscribe((@NonNull StreamInfo result) -> {\n                     isLoading.set(false);\n-                    currentInfo = result;\n-                    handleResult(result);\n-                    showContent();\n+                    if (result.getAgeLimit() != NO_AGE_LIMIT) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc0NjI3Mw=="}, "originalCommit": {"oid": "fc43b1c29d1834a6af6ed1c0e2d5f361a90d4846"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDQ1MDI3OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMzo0MzoxNVrOGD62Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNzozOToxNlrOGELNkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc2MzAxMA==", "bodyText": "Add a function at line 1243, this should fix the tab hiding issues. Comments are shown until the video is loaded, and are then hidden, but there is not much that can be done about this since when comments are loaded we do not yet know if the video is age restricted or not\n    private void hideAgeRestrictedContent() {\n        showError(getString(R.string.restricted_video), false);\n\n        if (relatedStreamsLayout != null) { // tablet\n            relatedStreamsLayout.setVisibility(View.INVISIBLE);\n        }\n\n        viewPager.setVisibility(View.GONE);\n        tabLayout.setVisibility(View.GONE);\n    }\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    showError(getString(R.string.restricted_video), false);\n          \n          \n            \n                                    hideAgeRestrictedContent();", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3410#discussion_r406763010", "createdAt": "2020-04-10T13:43:15Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java", "diffHunk": "@@ -806,19 +807,25 @@ public void startLoading(final boolean forceLoad) {\n             currentWorker.dispose();\n         }\n \n+        final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(activity);\n+\n         currentWorker = ExtractorHelper.getStreamInfo(serviceId, url, forceLoad)\n                 .subscribeOn(Schedulers.io())\n                 .observeOn(AndroidSchedulers.mainThread())\n-                .subscribe((@NonNull StreamInfo result) -> {\n+                .subscribe((@NonNull final StreamInfo result) -> {\n                     isLoading.set(false);\n-                    currentInfo = result;\n-                    handleResult(result);\n-                    showContent();\n-                }, (@NonNull Throwable throwable) -> {\n+                    if (result.getAgeLimit() != NO_AGE_LIMIT && !prefs.getBoolean(\n+                            getString(R.string.show_age_restricted_content), false)) {\n+                        showError(getString(R.string.restricted_video), false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90f9819cbd1d10ffd2d649291873ed2eb01b7d95"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMTE4Nw==", "bodyText": "hum, not sure whether we should hide comments.\nNor PeerTube neither YouTube do that.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3410#discussion_r407031187", "createdAt": "2020-04-11T07:39:16Z", "author": {"login": "B0pol"}, "path": "app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java", "diffHunk": "@@ -806,19 +807,25 @@ public void startLoading(final boolean forceLoad) {\n             currentWorker.dispose();\n         }\n \n+        final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(activity);\n+\n         currentWorker = ExtractorHelper.getStreamInfo(serviceId, url, forceLoad)\n                 .subscribeOn(Schedulers.io())\n                 .observeOn(AndroidSchedulers.mainThread())\n-                .subscribe((@NonNull StreamInfo result) -> {\n+                .subscribe((@NonNull final StreamInfo result) -> {\n                     isLoading.set(false);\n-                    currentInfo = result;\n-                    handleResult(result);\n-                    showContent();\n-                }, (@NonNull Throwable throwable) -> {\n+                    if (result.getAgeLimit() != NO_AGE_LIMIT && !prefs.getBoolean(\n+                            getString(R.string.show_age_restricted_content), false)) {\n+                        showError(getString(R.string.restricted_video), false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc2MzAxMA=="}, "originalCommit": {"oid": "90f9819cbd1d10ffd2d649291873ed2eb01b7d95"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3144, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}