{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NDg2NDM3", "number": 3689, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjozNjoyMVrOEOw2Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjozOTo0NlrOEOw7Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTE1NzkxOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/player/helper/PlayerHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjozNjoyMVrOGyGIxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjozNjoyMVrOGyGIxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4MjUzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (final InfoItem item : info.getRelatedStreams()) {\n          \n          \n            \n                    for (final InfoItem item : relatedItems) {", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3689#discussion_r455182533", "createdAt": "2020-07-15T16:36:21Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/player/helper/PlayerHelper.java", "diffHunk": "@@ -152,27 +152,28 @@ public static String cacheKeyOf(@NonNull final StreamInfo info,\n     @Nullable\n     public static PlayQueue autoQueueOf(@NonNull final StreamInfo info,\n                                         @NonNull final List<PlayQueueItem> existingItems) {\n-        Set<String> urls = new HashSet<>(existingItems.size());\n+        final Set<String> urls = new HashSet<>(existingItems.size());\n         for (final PlayQueueItem item : existingItems) {\n             urls.add(item.getUrl());\n         }\n \n-        final StreamInfoItem nextVideo = info.getNextVideo();\n-        if (nextVideo != null && !urls.contains(nextVideo.getUrl())) {\n-            return getAutoQueuedSinglePlayQueue(nextVideo);\n-        }\n-\n         final List<InfoItem> relatedItems = info.getRelatedStreams();\n         if (relatedItems == null) {\n             return null;\n         }\n \n-        List<StreamInfoItem> autoQueueItems = new ArrayList<>();\n+        if (relatedItems.get(0) != null && relatedItems.get(0) instanceof StreamInfoItem\n+                && !urls.contains(relatedItems.get(0).getUrl())) {\n+            return getAutoQueuedSinglePlayQueue((StreamInfoItem) relatedItems.get(0));\n+        }\n+\n+        final List<StreamInfoItem> autoQueueItems = new ArrayList<>();\n         for (final InfoItem item : info.getRelatedStreams()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a30f4a7d2598549e9fcd5a8d75a04461c420609"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTE3MTE1OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/fragments/list/videos/RelatedVideosFragment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjozOTo0NlrOGyGQ7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjozOTo0NlrOGyGQ7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4NDYyMw==", "bodyText": "I think this indentation is wrong", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3689#discussion_r455184623", "createdAt": "2020-07-15T16:39:46Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/fragments/list/videos/RelatedVideosFragment.java", "diffHunk": "@@ -81,22 +72,18 @@ public void onDestroy() {\n     }\n \n     protected View getListHeader() {\n-        if (relatedStreamInfo != null && relatedStreamInfo.getNextStream() != null) {\n+        if (relatedStreamInfo != null && relatedStreamInfo.getRelatedItems() != null) {\n             headerRootLayout = activity.getLayoutInflater()\n                     .inflate(R.layout.related_streams_header, itemsList, false);\n-            aSwitch = headerRootLayout.findViewById(R.id.autoplay_switch);\n-\n-            SharedPreferences pref = PreferenceManager.getDefaultSharedPreferences(getContext());\n-            Boolean autoplay = pref.getBoolean(getString(R.string.auto_queue_key), false);\n-            aSwitch.setChecked(autoplay);\n-            aSwitch.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n-                @Override\n-                public void onCheckedChanged(final CompoundButton compoundButton,\n-                                             final boolean b) {\n+            autoplaySwitch = headerRootLayout.findViewById(R.id.autoplay_switch);\n+\n+            final SharedPreferences pref = PreferenceManager\n+                    .getDefaultSharedPreferences(getContext());\n+            final boolean autoplay = pref.getBoolean(getString(R.string.auto_queue_key), false);\n+            autoplaySwitch.setChecked(autoplay);\n+            autoplaySwitch.setOnCheckedChangeListener((compoundButton, b) ->\n                     PreferenceManager.getDefaultSharedPreferences(getContext()).edit()\n-                            .putBoolean(getString(R.string.auto_queue_key), b).apply();\n-                }\n-            });\n+                    .putBoolean(getString(R.string.auto_queue_key), b).apply());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a30f4a7d2598549e9fcd5a8d75a04461c420609"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3200, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}