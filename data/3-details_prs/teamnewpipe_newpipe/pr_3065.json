{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNjg3MDYx", "number": 3065, "title": "Added the ability to remove all watched videos from a local playlist", "bodyText": "Features:\n\nAdded the ability to remove all watched videos from a local playlist\n\nTested on:\n\n\nPixel\n\n\n I carefully read the contribution guidelines and agree to them.\n\n\nEDIT: Changed Location of 'Remove Watched' button to the three dot menu, see below comments for photos.\nBefore:\n\nLoading Screen:\n\nAfter:", "createdAt": "2020-02-08T06:41:44Z", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065", "merged": true, "mergeCommit": {"oid": "2db0d63c977f98521d454cbf9d6b215f8338f42e"}, "closed": true, "closedAt": "2020-04-23T21:52:28Z", "author": {"login": "GradyClark"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcK7i_0gFqTM3MDEzODQwNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcakBwkgFqTM5OTUwMDI0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMTM4NDA2", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#pullrequestreview-370138406", "createdAt": "2020-03-06T08:00:43Z", "commit": {"oid": "27af9a9c4bded24583fe7242350364fde38540b1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODowMDo0M1rOFyv9Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODowNTo1NlrOFywD-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc1ODc5OQ==", "bodyText": "deleteItem(playlist_item) probably crashes because it has to be called on the main thread (not sure though).", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r388758799", "createdAt": "2020-03-06T08:00:43Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java", "diffHunk": "@@ -300,6 +316,20 @@ public void onComplete() {}\n         };\n     }\n \n+    @Override\n+    public boolean onOptionsItemSelected(MenuItem item) {\n+        switch (item.getItemId()) {\n+            case R.id.menu_item_removeWatched:\n+                //Solution, Scorched Earth, Copy non duplicates, clear playlist, then copy back over\n+                //Other options didn't work as intended, or crashed. Like deleteItem(playlist_item) crashes when called in this function.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27af9a9c4bded24583fe7242350364fde38540b1"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc1OTQ3Mw==", "bodyText": "Since the local playlist controls have been reset to the old ones, you should revert this change and remove the file app/src/main/res/layout/local_playlist_control.xml", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r388759473", "createdAt": "2020-03-06T08:02:48Z", "author": {"login": "Stypox"}, "path": "app/src/main/res/layout/local_playlist_header.xml", "diffHunk": "@@ -50,7 +50,7 @@\n         android:layout_height=\"wrap_content\"\n         android:layout_below=\"@id/playlist_stream_count\">\n \n-        <include layout=\"@layout/playlist_control\"/>\n+        <include layout=\"@layout/local_playlist_control\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27af9a9c4bded24583fe7242350364fde38540b1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc2MDQ4OQ==", "bodyText": "What about adding an icon, and making this line app:showAsAction=\"ifRoom\"? The user would then be able to access the option in only one click, if there is enough space. A delete-multiple icon exists in Android Studio's library, which is the same as the Material Design icon library", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r388760489", "createdAt": "2020-03-06T08:05:45Z", "author": {"login": "Stypox"}, "path": "app/src/main/res/menu/menu_local_playlist.xml", "diffHunk": "@@ -0,0 +1,10 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    xmlns:tools=\"http://schemas.android.com/tools\">\n+\n+    <item\n+        android:id=\"@+id/menu_item_removeWatched\"\n+        android:title=\"@string/remove_watched\"\n+        app:showAsAction=\"never\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27af9a9c4bded24583fe7242350364fde38540b1"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc2MDU3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <string name=\"remove_watched\">Remove Watched</string>\n          \n          \n            \n                <string name=\"remove_watched\">Remove watched</string>", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r388760571", "createdAt": "2020-03-06T08:05:56Z", "author": {"login": "Stypox"}, "path": "app/src/main/res/values/strings.xml", "diffHunk": "@@ -592,6 +592,7 @@\n     <string name=\"choose_instance_prompt\">Choose an instance</string>\n     <string name=\"app_language_title\">App language</string>\n     <string name=\"systems_language\">System default</string>\n+    <string name=\"remove_watched\">Remove Watched</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27af9a9c4bded24583fe7242350364fde38540b1"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMTEwMjYx", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#pullrequestreview-373110261", "createdAt": "2020-03-11T20:41:50Z", "commit": {"oid": "fb193ce3622f34b212bff6a645887f98940eb63c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMDo0MTo1MFrOF1IXyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMDo0NTowM1rOF1Idkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI1NjAxMA==", "bodyText": "Before this line you should add this code to dispose removeWatchedWorker if it is not null:\nif (removeWatchedWorker != null) {\n    removeWatchedWorker.dispose();\n}", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r391256010", "createdAt": "2020-03-11T20:41:50Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java", "diffHunk": "@@ -300,6 +321,32 @@ public void onComplete() {}\n         };\n     }\n \n+    @Override\n+    public boolean onOptionsItemSelected(MenuItem item) {\n+        switch (item.getItemId()) {\n+            case R.id.menu_item_removeWatched:\n+                RemoveWatchedStreams remover = new RemoveWatchedStreams();\n+\n+                remover.onPreExecute();\n+                removeWatchedWorker = Flowable.just(playlistManager.getPlaylistStreams(playlistId).blockingFirst())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb193ce3622f34b212bff6a645887f98940eb63c"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI1NzE1Ng==", "bodyText": "I'm not sure this should be done inside a nested class. You could do the same things in three functions without nesting things (at least, that's how I have seen it done in other places in the repository)", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r391257156", "createdAt": "2020-03-11T20:44:13Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java", "diffHunk": "@@ -616,5 +663,75 @@ private PlayQueue getPlayQueue(final int index) {\n         }\n         return new SinglePlayQueue(streamInfoItems, index);\n     }\n+\n+    private class RemoveWatchedStreams{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb193ce3622f34b212bff6a645887f98940eb63c"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI1NzQ5MQ==", "bodyText": "Match the style of the repo: } else {\nAlso below: spaces between if and (: if (", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r391257491", "createdAt": "2020-03-11T20:45:03Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java", "diffHunk": "@@ -616,5 +663,75 @@ private PlayQueue getPlayQueue(final int index) {\n         }\n         return new SinglePlayQueue(streamInfoItems, index);\n     }\n+\n+    private class RemoveWatchedStreams{\n+        List<PlaylistStreamEntry> localItems = new ArrayList<>();\n+        Long RemovedItemCount = 0l;\n+        boolean thumbnailVideoRemoved = false;\n+\n+        // Do this in the main thread\n+        protected void onPreExecute() {\n+            showLoading();\n+        }\n+\n+        // Do not do this in the main thread\n+        protected Long doInBackground(List<PlaylistStreamEntry> playlist) {\n+\n+            HistoryRecordManager recordManager = new HistoryRecordManager(getContext());\n+            Iterator<StreamHistoryEntry> it_history;\n+            StreamHistoryEntry history_item;\n+\n+            Iterator<PlaylistStreamEntry> it_playlist = playlist.iterator();\n+            PlaylistStreamEntry playlist_item = null;\n+\n+            boolean isNonDuplicate;\n+\n+            while (it_playlist.hasNext()) {\n+                playlist_item = it_playlist.next();\n+\n+                it_history = recordManager.getStreamHistory().blockingFirst().iterator();\n+\n+                isNonDuplicate = true;\n+                while (it_history.hasNext()) {\n+                    history_item = it_history.next();\n+                    if (history_item.streamId == playlist_item.streamId) {\n+                        isNonDuplicate = false;\n+                        break;\n+                    }\n+                }\n+                if (isNonDuplicate) {\n+                    localItems.add(playlist_item);\n+                }\n+                else\n+                {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb193ce3622f34b212bff6a645887f98940eb63c"}, "originalPosition": 154}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "75fb1f61be148178f4735cb18ae699aa24582291", "author": {"user": {"login": "GradyClark", "name": "Grady Clark"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/75fb1f61be148178f4735cb18ae699aa24582291", "committedDate": "2020-03-16T21:22:00Z", "message": "Merge branch 'dev' into dev"}, "afterCommit": {"oid": "ff255a01d3a38c0cabe8a84dda1ccd4ec7042db7", "author": {"user": {"login": "GradyClark", "name": "Grady Clark"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/ff255a01d3a38c0cabe8a84dda1ccd4ec7042db7", "committedDate": "2020-03-16T22:52:28Z", "message": "Merge branch 'dev' into dev"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1Nzg2NzM3", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#pullrequestreview-375786737", "createdAt": "2020-03-17T07:18:11Z", "commit": {"oid": "ff255a01d3a38c0cabe8a84dda1ccd4ec7042db7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNzoxODoxMlrOF3QQag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNzo1NDoxM1rOF3RFfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4MjM0Ng==", "bodyText": "Why was this added?", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r393482346", "createdAt": "2020-03-17T07:18:12Z", "author": {"login": "Stypox"}, "path": "app/src/main/res/values/strings.xml", "diffHunk": "@@ -593,6 +593,8 @@\n     <string name=\"choose_instance_prompt\">Choose an instance</string>\n     <string name=\"app_language_title\">App language</string>\n     <string name=\"systems_language\">System default</string>\n+    <string name=\"remove_watched\">Remove watched</string>\n+    <string name=\"dynamic_seek_duration_description\">%s seconds</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff255a01d3a38c0cabe8a84dda1ccd4ec7042db7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ5NDgzMQ==", "bodyText": "As you can see above, the same thing is being done with other disposables. So reorder code to make it uniform.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                    if (removeWatchedWorker != null) removeWatchedWorker.dispose();\n          \n          \n            \n                    removeWatchedWorker = null;\n          \n          \n            \n            \n          \n          \n            \n                    debouncedSaveSignal = null;\n          \n          \n            \n                    playlistManager = null;\n          \n          \n            \n                    disposables = null;\n          \n          \n            \n                    if (removeWatchedWorker != null) removeWatchedWorker.dispose();\n          \n          \n            \n            \n          \n          \n            \n                    debouncedSaveSignal = null;\n          \n          \n            \n                    playlistManager = null;\n          \n          \n            \n                    disposables = null;\n          \n          \n            \n                    removeWatchedWorker = null;", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r393494831", "createdAt": "2020-03-17T07:51:30Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java", "diffHunk": "@@ -255,6 +273,9 @@ public void onDestroy() {\n         if (debouncedSaveSignal != null) debouncedSaveSignal.onComplete();\n         if (disposables != null) disposables.dispose();\n \n+        if (removeWatchedWorker != null) removeWatchedWorker.dispose();\n+        removeWatchedWorker = null;\n+\n         debouncedSaveSignal = null;\n         playlistManager = null;\n         disposables = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff255a01d3a38c0cabe8a84dda1ccd4ec7042db7"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ5NTkzNA==", "bodyText": "Rename to removeWatchedDisposable", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r393495934", "createdAt": "2020-03-17T07:54:13Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java", "diffHunk": "@@ -67,6 +75,8 @@\n     private View headerPopupButton;\n     private View headerBackgroundButton;\n \n+    private Disposable removeWatchedWorker;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff255a01d3a38c0cabe8a84dda1ccd4ec7042db7"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66c95f901dfa31c193375abfdef8028f527834de", "author": {"user": {"login": "GradyClark", "name": "Grady Clark"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/66c95f901dfa31c193375abfdef8028f527834de", "committedDate": "2020-04-03T17:47:31Z", "message": "Added the ability to remove all watched videos from local playlists\n\nChanges:\n - local_playlist_control.xml\n   * A copy of playlist_control.xml\n   * To hold the 'Remove Watched Videos' buttton\n\n - local_playlist_header.xml\n   * Changed the include layout\tto now include local_playlist_control.xml\n\n - strings.xml\n   * added string 'remove_watched' with value 'Remove Watched'\n\n - LocalPlaylistFragment.java\n   * Added the functionality to remove watched videos,\n      to the 'Remove Watched Videos' button in local_playlist_control.xml.\n      In the background via AsyncTask.\n      This will also change the playlist's thumbnail, if the thumbnail video is removed.\n\nTested on:\n - Pixel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "954399b2557eb43976dd344daee25b53d629811e", "author": {"user": {"login": "GradyClark", "name": "Grady Clark"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/954399b2557eb43976dd344daee25b53d629811e", "committedDate": "2020-04-03T17:49:01Z", "message": "Moved the 'Remove Watched' button to the three dot menu button."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cab79003052ef8b1b0bd3782498a04ce9b287c9", "author": {"user": {"login": "GradyClark", "name": "Grady Clark"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/8cab79003052ef8b1b0bd3782498a04ce9b287c9", "committedDate": "2020-04-03T17:49:41Z", "message": "- Will now use ReactiveX instead of AsyncTask, when removing watched videos.\n- Removed redundant file 'local_playlist_control'\n- Fixed grammer issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98fc88dec6daa0a0ef5b8507bc1a03569b163543", "author": {"user": {"login": "GradyClark", "name": "Grady Clark"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/98fc88dec6daa0a0ef5b8507bc1a03569b163543", "committedDate": "2020-04-03T17:49:41Z", "message": "Simplified the removal of watched videos, into the function `removeWatchedStreams`\n  Replaced unnecessary nested class.\nFixed formating issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ac2865b7484b64b00a2da1178d015ea06d831c0", "author": {"user": {"login": "GradyClark", "name": "Grady Clark"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/0ac2865b7484b64b00a2da1178d015ea06d831c0", "committedDate": "2020-04-03T17:50:12Z", "message": "Optimised 'removeWatchedStreams'\nRemoved merge mistake\nReordered code\nRefactored 'removeWatchedWorker' to 'removeWatchedDisposable'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c3f138b8e30e17bad4530e4b85b81fcec4f44bf", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/9c3f138b8e30e17bad4530e4b85b81fcec4f44bf", "committedDate": "2020-04-03T17:51:29Z", "message": "Use binary search to remove watched items from playlists"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6223c3657d732309f08199a799123da2e359493b", "author": {"user": {"login": "GradyClark", "name": "Grady Clark"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/6223c3657d732309f08199a799123da2e359493b", "committedDate": "2020-03-18T06:49:46Z", "message": "Optimised 'removeWatchedStreams'\nRemoved merge mistake\nReordered code\nRefactored 'removeWatchedWorker' to 'removeWatchedDisposable'"}, "afterCommit": {"oid": "9c3f138b8e30e17bad4530e4b85b81fcec4f44bf", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/9c3f138b8e30e17bad4530e4b85b81fcec4f44bf", "committedDate": "2020-04-03T17:51:29Z", "message": "Use binary search to remove watched items from playlists"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6571fdbaa282be16fa2675623ba5af496ef6f39b", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/6571fdbaa282be16fa2675623ba5af496ef6f39b", "committedDate": "2020-04-03T18:13:56Z", "message": "Fix checkstyle errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92ca1e6e0910178d82063e275dfd6e77c46de27e", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/92ca1e6e0910178d82063e275dfd6e77c46de27e", "committedDate": "2020-04-03T18:41:21Z", "message": "Check if already running before removing watched"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c34cc475c01469f2fc0df4090e245d671514a3be", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/c34cc475c01469f2fc0df4090e245d671514a3be", "committedDate": "2020-04-03T18:34:01Z", "message": "Check if already running before removing watched"}, "afterCommit": {"oid": "92ca1e6e0910178d82063e275dfd6e77c46de27e", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/92ca1e6e0910178d82063e275dfd6e77c46de27e", "committedDate": "2020-04-03T18:41:21Z", "message": "Check if already running before removing watched"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe1646caa00e8791c131f2be92b973afb95a3032", "author": {"user": {"login": "GradyClark", "name": "Grady Clark"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/fe1646caa00e8791c131f2be92b973afb95a3032", "committedDate": "2020-04-14T18:15:07Z", "message": "Changed \"Remove Watched\":\n- Will now execute on the io thread\n- Added confirmation dialog\n  - Warning the user, and asking if they also want to remove partially watched videos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d0c3de65f4943b2d1b33b03ef9eb51ef7fcc648", "author": {"user": {"login": "GradyClark", "name": "Grady Clark"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/1d0c3de65f4943b2d1b33b03ef9eb51ef7fcc648", "committedDate": "2020-04-14T18:24:57Z", "message": "Merge branch 'dev' of https://github.com/TeamNewPipe/NewPipe into dev"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNTIzODI1", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#pullrequestreview-393523825", "createdAt": "2020-04-15T07:34:50Z", "commit": {"oid": "1d0c3de65f4943b2d1b33b03ef9eb51ef7fcc648"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzozNDo1MVrOGFtVzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzo0NzozM1rOGFtxQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYzODkyNQ==", "bodyText": "Declare variables right where you first use them. Redeclaring a variable every cycle of the while loop does not slow down anything, since declaring is just telling the compiler \"I need to have this memory at this point\", so memory is really allocated only once.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r408638925", "createdAt": "2020-04-15T07:34:51Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java", "diffHunk": "@@ -331,6 +358,121 @@ public void onComplete() { }\n         };\n     }\n \n+    @Override\n+    public boolean onOptionsItemSelected(final MenuItem item) {\n+        switch (item.getItemId()) {\n+            case R.id.menu_item_removeWatched:\n+                android.app.AlertDialog.Builder builder =\n+                new android.app.AlertDialog.Builder(getActivity());\n+                builder.setMessage(R.string.remove_watched_popup_warning)\n+                        .setTitle(R.string.remove_watched_popup_title)\n+                        .setPositiveButton(R.string.remove_watched_popup_yes,\n+                                (DialogInterface d, int id) -> removeWatchedStreams(false))\n+                        .setNeutralButton(\n+                                R.string.remove_watched_popup_yes_and_partially_watched_videos,\n+                                (DialogInterface d, int id) -> removeWatchedStreams(true))\n+                        .setNegativeButton(R.string.remove_watched_popup_cancel,\n+                                (DialogInterface d, int id) -> d.cancel());\n+                builder.create().show();\n+                break;\n+            default:\n+                return super.onOptionsItemSelected(item);\n+        }\n+        return true;\n+    }\n+\n+    public void removeWatchedStreams(final boolean removePartiallyWatched) {\n+        if (removeWatchedDisposable != null && !removeWatchedDisposable.isDisposed()) {\n+            // already running\n+            return;\n+        }\n+        showLoading();\n+\n+        removeWatchedDisposable = Flowable.just(Flowable.just(removePartiallyWatched,\n+                playlistManager.getPlaylistStreams(playlistId).blockingFirst()))\n+                .subscribeOn(Schedulers.io())\n+                .map(flow -> {\n+                    boolean localRemovePartiallyWatched = (boolean) flow.blockingFirst();\n+                    List<PlaylistStreamEntry> playlist\n+                            = (List<PlaylistStreamEntry>) flow.blockingLast();\n+                    HistoryRecordManager recordManager = new HistoryRecordManager(getContext());\n+                    Iterator<PlaylistStreamEntry> playlistIter = playlist.iterator();\n+                    Iterator<StreamHistoryEntry> historyIter = recordManager\n+                            .getStreamHistorySortedById().blockingFirst().iterator();\n+                    List<PlaylistStreamEntry> notWatchedItems = new ArrayList<>();\n+                    Iterator<StreamStateEntity> streamStatesIter = null;\n+                    boolean thumbnailVideoRemoved = false;\n+\n+                    if (!localRemovePartiallyWatched) {\n+                        streamStatesIter = recordManager.loadLocalStreamStateBatch(playlist)\n+                                .blockingGet().iterator();\n+                    }\n+\n+                    // already sorted by ^ getStreamHistorySortedById(), binary search can be used\n+                    ArrayList<Long> historyStreamIds = new ArrayList<>();\n+                    while (historyIter.hasNext()) {\n+                        historyStreamIds.add(historyIter.next().getStreamId());\n+                    }\n+\n+                    if (localRemovePartiallyWatched) {\n+                        while (playlistIter.hasNext()) {\n+                            PlaylistStreamEntry playlistItem = playlistIter.next();\n+                            int indexInHistory = Collections.binarySearch(historyStreamIds,\n+                                    playlistItem.getStreamId());\n+\n+                            if (indexInHistory < 0) {\n+                                notWatchedItems.add(playlistItem);\n+                            } else if (!thumbnailVideoRemoved\n+                                    && playlistManager.getPlaylistThumbnail(playlistId)\n+                                    .equals(playlistItem.getStreamEntity().getThumbnailUrl())) {\n+                                thumbnailVideoRemoved = true;\n+                            }\n+                        }\n+                    } else {\n+                        boolean hasState = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d0c3de65f4943b2d1b33b03ef9eb51ef7fcc648"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYzOTQ2OA==", "bodyText": "Anyway, I don't think here another variable is needed, you could just go with\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        hasState = streamStatesIter.next() != null;\n          \n          \n            \n                                        if (indexInHistory < 0 ||  hasState) {\n          \n          \n            \n                                        if (indexInHistory < 0 || streamStatesIter.next() != null) {", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r408639468", "createdAt": "2020-04-15T07:35:50Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java", "diffHunk": "@@ -331,6 +358,121 @@ public void onComplete() { }\n         };\n     }\n \n+    @Override\n+    public boolean onOptionsItemSelected(final MenuItem item) {\n+        switch (item.getItemId()) {\n+            case R.id.menu_item_removeWatched:\n+                android.app.AlertDialog.Builder builder =\n+                new android.app.AlertDialog.Builder(getActivity());\n+                builder.setMessage(R.string.remove_watched_popup_warning)\n+                        .setTitle(R.string.remove_watched_popup_title)\n+                        .setPositiveButton(R.string.remove_watched_popup_yes,\n+                                (DialogInterface d, int id) -> removeWatchedStreams(false))\n+                        .setNeutralButton(\n+                                R.string.remove_watched_popup_yes_and_partially_watched_videos,\n+                                (DialogInterface d, int id) -> removeWatchedStreams(true))\n+                        .setNegativeButton(R.string.remove_watched_popup_cancel,\n+                                (DialogInterface d, int id) -> d.cancel());\n+                builder.create().show();\n+                break;\n+            default:\n+                return super.onOptionsItemSelected(item);\n+        }\n+        return true;\n+    }\n+\n+    public void removeWatchedStreams(final boolean removePartiallyWatched) {\n+        if (removeWatchedDisposable != null && !removeWatchedDisposable.isDisposed()) {\n+            // already running\n+            return;\n+        }\n+        showLoading();\n+\n+        removeWatchedDisposable = Flowable.just(Flowable.just(removePartiallyWatched,\n+                playlistManager.getPlaylistStreams(playlistId).blockingFirst()))\n+                .subscribeOn(Schedulers.io())\n+                .map(flow -> {\n+                    boolean localRemovePartiallyWatched = (boolean) flow.blockingFirst();\n+                    List<PlaylistStreamEntry> playlist\n+                            = (List<PlaylistStreamEntry>) flow.blockingLast();\n+                    HistoryRecordManager recordManager = new HistoryRecordManager(getContext());\n+                    Iterator<PlaylistStreamEntry> playlistIter = playlist.iterator();\n+                    Iterator<StreamHistoryEntry> historyIter = recordManager\n+                            .getStreamHistorySortedById().blockingFirst().iterator();\n+                    List<PlaylistStreamEntry> notWatchedItems = new ArrayList<>();\n+                    Iterator<StreamStateEntity> streamStatesIter = null;\n+                    boolean thumbnailVideoRemoved = false;\n+\n+                    if (!localRemovePartiallyWatched) {\n+                        streamStatesIter = recordManager.loadLocalStreamStateBatch(playlist)\n+                                .blockingGet().iterator();\n+                    }\n+\n+                    // already sorted by ^ getStreamHistorySortedById(), binary search can be used\n+                    ArrayList<Long> historyStreamIds = new ArrayList<>();\n+                    while (historyIter.hasNext()) {\n+                        historyStreamIds.add(historyIter.next().getStreamId());\n+                    }\n+\n+                    if (localRemovePartiallyWatched) {\n+                        while (playlistIter.hasNext()) {\n+                            PlaylistStreamEntry playlistItem = playlistIter.next();\n+                            int indexInHistory = Collections.binarySearch(historyStreamIds,\n+                                    playlistItem.getStreamId());\n+\n+                            if (indexInHistory < 0) {\n+                                notWatchedItems.add(playlistItem);\n+                            } else if (!thumbnailVideoRemoved\n+                                    && playlistManager.getPlaylistThumbnail(playlistId)\n+                                    .equals(playlistItem.getStreamEntity().getThumbnailUrl())) {\n+                                thumbnailVideoRemoved = true;\n+                            }\n+                        }\n+                    } else {\n+                        boolean hasState = false;\n+                        while (playlistIter.hasNext()) {\n+                            PlaylistStreamEntry playlistItem = playlistIter.next();\n+                            int indexInHistory = Collections.binarySearch(historyStreamIds,\n+                                    playlistItem.getStreamId());\n+\n+                            hasState = streamStatesIter.next() != null;\n+                            if (indexInHistory < 0 ||  hasState) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d0c3de65f4943b2d1b33b03ef9eb51ef7fcc648"}, "originalPosition": 180}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MDg4NA==", "bodyText": "Do you really need to pass removePartiallyWatched to the Flowable? I think you can access it just as normal inside the lambda body below", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r408640884", "createdAt": "2020-04-15T07:38:28Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java", "diffHunk": "@@ -331,6 +358,121 @@ public void onComplete() { }\n         };\n     }\n \n+    @Override\n+    public boolean onOptionsItemSelected(final MenuItem item) {\n+        switch (item.getItemId()) {\n+            case R.id.menu_item_removeWatched:\n+                android.app.AlertDialog.Builder builder =\n+                new android.app.AlertDialog.Builder(getActivity());\n+                builder.setMessage(R.string.remove_watched_popup_warning)\n+                        .setTitle(R.string.remove_watched_popup_title)\n+                        .setPositiveButton(R.string.remove_watched_popup_yes,\n+                                (DialogInterface d, int id) -> removeWatchedStreams(false))\n+                        .setNeutralButton(\n+                                R.string.remove_watched_popup_yes_and_partially_watched_videos,\n+                                (DialogInterface d, int id) -> removeWatchedStreams(true))\n+                        .setNegativeButton(R.string.remove_watched_popup_cancel,\n+                                (DialogInterface d, int id) -> d.cancel());\n+                builder.create().show();\n+                break;\n+            default:\n+                return super.onOptionsItemSelected(item);\n+        }\n+        return true;\n+    }\n+\n+    public void removeWatchedStreams(final boolean removePartiallyWatched) {\n+        if (removeWatchedDisposable != null && !removeWatchedDisposable.isDisposed()) {\n+            // already running\n+            return;\n+        }\n+        showLoading();\n+\n+        removeWatchedDisposable = Flowable.just(Flowable.just(removePartiallyWatched,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d0c3de65f4943b2d1b33b03ef9eb51ef7fcc648"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MjU0MA==", "bodyText": "You shouldn't add two new strings: \"Yes\" and \"Cancel\" either already exist in strings.xml (search with CTRL+F if that's the case) or even are in the default android system strings.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r408642540", "createdAt": "2020-04-15T07:41:30Z", "author": {"login": "Stypox"}, "path": "app/src/main/res/values/strings.xml", "diffHunk": "@@ -601,6 +601,12 @@\n     <string name=\"choose_instance_prompt\">Choose an instance</string>\n     <string name=\"app_language_title\">App language</string>\n     <string name=\"systems_language\">System default</string>\n+    <string name=\"remove_watched\">Remove watched</string>\n+    <string name=\"remove_watched_popup_title\">Remove watched videos?</string>\n+    <string name=\"remove_watched_popup_warning\">\"Videos that have been watched\\nbefore and after being added to the playlist will be removed.\\nAre you sure? This cannot be undone!</string>\n+    <string name=\"remove_watched_popup_yes\">Yes</string>\n+    <string name=\"remove_watched_popup_cancel\">Cancel</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d0c3de65f4943b2d1b33b03ef9eb51ef7fcc648"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0NDI3OA==", "bodyText": "In my opinion it is difficult to read all of these declarations here, maybe they should be distributed right befor the places in code where they are being used (e.g. streamStatesIter would be moved on line 405, before the if (!localRemovePartiallyWatched) branch where it is used). But I'm not sure if it's the same for others. ;-)", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r408644278", "createdAt": "2020-04-15T07:44:30Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java", "diffHunk": "@@ -331,6 +358,121 @@ public void onComplete() { }\n         };\n     }\n \n+    @Override\n+    public boolean onOptionsItemSelected(final MenuItem item) {\n+        switch (item.getItemId()) {\n+            case R.id.menu_item_removeWatched:\n+                android.app.AlertDialog.Builder builder =\n+                new android.app.AlertDialog.Builder(getActivity());\n+                builder.setMessage(R.string.remove_watched_popup_warning)\n+                        .setTitle(R.string.remove_watched_popup_title)\n+                        .setPositiveButton(R.string.remove_watched_popup_yes,\n+                                (DialogInterface d, int id) -> removeWatchedStreams(false))\n+                        .setNeutralButton(\n+                                R.string.remove_watched_popup_yes_and_partially_watched_videos,\n+                                (DialogInterface d, int id) -> removeWatchedStreams(true))\n+                        .setNegativeButton(R.string.remove_watched_popup_cancel,\n+                                (DialogInterface d, int id) -> d.cancel());\n+                builder.create().show();\n+                break;\n+            default:\n+                return super.onOptionsItemSelected(item);\n+        }\n+        return true;\n+    }\n+\n+    public void removeWatchedStreams(final boolean removePartiallyWatched) {\n+        if (removeWatchedDisposable != null && !removeWatchedDisposable.isDisposed()) {\n+            // already running\n+            return;\n+        }\n+        showLoading();\n+\n+        removeWatchedDisposable = Flowable.just(Flowable.just(removePartiallyWatched,\n+                playlistManager.getPlaylistStreams(playlistId).blockingFirst()))\n+                .subscribeOn(Schedulers.io())\n+                .map(flow -> {\n+                    boolean localRemovePartiallyWatched = (boolean) flow.blockingFirst();\n+                    List<PlaylistStreamEntry> playlist\n+                            = (List<PlaylistStreamEntry>) flow.blockingLast();\n+                    HistoryRecordManager recordManager = new HistoryRecordManager(getContext());\n+                    Iterator<PlaylistStreamEntry> playlistIter = playlist.iterator();\n+                    Iterator<StreamHistoryEntry> historyIter = recordManager\n+                            .getStreamHistorySortedById().blockingFirst().iterator();\n+                    List<PlaylistStreamEntry> notWatchedItems = new ArrayList<>();\n+                    Iterator<StreamStateEntity> streamStatesIter = null;\n+                    boolean thumbnailVideoRemoved = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d0c3de65f4943b2d1b33b03ef9eb51ef7fcc648"}, "originalPosition": 145}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0NTk1NQ==", "bodyText": "Usually a \"Builder\" variable is never saved, since it is needed exactly once. Also, why can't you use AlertDialog directly without the full path specification?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            android.app.AlertDialog.Builder builder =\n          \n          \n            \n                            new android.app.AlertDialog.Builder(getActivity());\n          \n          \n            \n                            builder.setMessage(R.string.remove_watched_popup_warning)\n          \n          \n            \n                                    .setTitle(R.string.remove_watched_popup_title)\n          \n          \n            \n                                    .setPositiveButton(R.string.remove_watched_popup_yes,\n          \n          \n            \n                                            (DialogInterface d, int id) -> removeWatchedStreams(false))\n          \n          \n            \n                                    .setNeutralButton(\n          \n          \n            \n                                            R.string.remove_watched_popup_yes_and_partially_watched_videos,\n          \n          \n            \n                                            (DialogInterface d, int id) -> removeWatchedStreams(true))\n          \n          \n            \n                                    .setNegativeButton(R.string.remove_watched_popup_cancel,\n          \n          \n            \n                                            (DialogInterface d, int id) -> d.cancel());\n          \n          \n            \n                            builder.create().show();\n          \n          \n            \n                            new AlertDialog.Builder(getActivity())\n          \n          \n            \n                                    .setMessage(R.string.remove_watched_popup_warning)\n          \n          \n            \n                                    .setTitle(R.string.remove_watched_popup_title)\n          \n          \n            \n                                    .setPositiveButton(R.string.remove_watched_popup_yes,\n          \n          \n            \n                                            (DialogInterface d, int id) -> removeWatchedStreams(false))\n          \n          \n            \n                                    .setNeutralButton(\n          \n          \n            \n                                            R.string.remove_watched_popup_yes_and_partially_watched_videos,\n          \n          \n            \n                                            (DialogInterface d, int id) -> removeWatchedStreams(true))\n          \n          \n            \n                                    .setNegativeButton(R.string.remove_watched_popup_cancel,\n          \n          \n            \n                                            (DialogInterface d, int id) -> d.cancel());\n          \n          \n            \n                                    .create()\n          \n          \n            \n                                    .show();", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r408645955", "createdAt": "2020-04-15T07:47:33Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java", "diffHunk": "@@ -331,6 +358,121 @@ public void onComplete() { }\n         };\n     }\n \n+    @Override\n+    public boolean onOptionsItemSelected(final MenuItem item) {\n+        switch (item.getItemId()) {\n+            case R.id.menu_item_removeWatched:\n+                android.app.AlertDialog.Builder builder =\n+                new android.app.AlertDialog.Builder(getActivity());\n+                builder.setMessage(R.string.remove_watched_popup_warning)\n+                        .setTitle(R.string.remove_watched_popup_title)\n+                        .setPositiveButton(R.string.remove_watched_popup_yes,\n+                                (DialogInterface d, int id) -> removeWatchedStreams(false))\n+                        .setNeutralButton(\n+                                R.string.remove_watched_popup_yes_and_partially_watched_videos,\n+                                (DialogInterface d, int id) -> removeWatchedStreams(true))\n+                        .setNegativeButton(R.string.remove_watched_popup_cancel,\n+                                (DialogInterface d, int id) -> d.cancel());\n+                builder.create().show();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d0c3de65f4943b2d1b33b03ef9eb51ef7fcc648"}, "originalPosition": 117}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db335d5cec3b77be37d897279973f1fbf94537af", "author": {"user": {"login": "GradyClark", "name": "Grady Clark"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/db335d5cec3b77be37d897279973f1fbf94537af", "committedDate": "2020-04-16T17:58:16Z", "message": "Removed redundant code\nreorganized code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MDI5NDQx", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#pullrequestreview-396029441", "createdAt": "2020-04-19T15:13:52Z", "commit": {"oid": "db335d5cec3b77be37d897279973f1fbf94537af"}, "state": "DISMISSED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxNToxMzo1MlrOGH48tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxNToyMjo0MFrOGH5Dlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkyNjI2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    android:id=\"@+id/menu_item_removeWatched\"\n          \n          \n            \n                    android:id=\"@+id/menu_item_remove_watched\"", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r410926260", "createdAt": "2020-04-19T15:13:52Z", "author": {"login": "wb9688"}, "path": "app/src/main/res/menu/menu_local_playlist.xml", "diffHunk": "@@ -0,0 +1,10 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    xmlns:tools=\"http://schemas.android.com/tools\">\n+\n+    <item\n+        android:id=\"@+id/menu_item_removeWatched\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db335d5cec3b77be37d897279973f1fbf94537af"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkyNjM4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <string name=\"remove_watched_popup_warning\">\"Videos that have been watched\\nbefore and after being added to the playlist will be removed.\\nAre you sure? This cannot be undone!</string>\n          \n          \n            \n                <string name=\"remove_watched_popup_warning\">\"Videos that have been watched before and after being added to the playlist will be removed.\\nAre you sure? This cannot be undone!</string>", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r410926387", "createdAt": "2020-04-19T15:14:43Z", "author": {"login": "wb9688"}, "path": "app/src/main/res/values/strings.xml", "diffHunk": "@@ -601,6 +601,10 @@\n     <string name=\"choose_instance_prompt\">Choose an instance</string>\n     <string name=\"app_language_title\">App language</string>\n     <string name=\"systems_language\">System default</string>\n+    <string name=\"remove_watched\">Remove watched</string>\n+    <string name=\"remove_watched_popup_title\">Remove watched videos?</string>\n+    <string name=\"remove_watched_popup_warning\">\"Videos that have been watched\\nbefore and after being added to the playlist will be removed.\\nAre you sure? This cannot be undone!</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db335d5cec3b77be37d897279973f1fbf94537af"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkyNjU3Mw==", "bodyText": "They should all have a space after //. Also, there probably is a proper way of solving this.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r410926573", "createdAt": "2020-04-19T15:15:42Z", "author": {"login": "wb9688"}, "path": "app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java", "diffHunk": "@@ -331,6 +358,127 @@ public void onComplete() { }\n         };\n     }\n \n+    @Override\n+    public boolean onOptionsItemSelected(final MenuItem item) {\n+        switch (item.getItemId()) {\n+            case R.id.menu_item_removeWatched:\n+                new AlertDialog.Builder(getActivity())\n+                        .setMessage(R.string.remove_watched_popup_warning)\n+                        .setTitle(R.string.remove_watched_popup_title)\n+                        .setPositiveButton(R.string.yes,\n+                                (DialogInterface d, int id) -> removeWatchedStreams(false))\n+                        .setNeutralButton(\n+                                R.string.remove_watched_popup_yes_and_partially_watched_videos,\n+                                (DialogInterface d, int id) -> removeWatchedStreams(true))\n+                        .setNegativeButton(R.string.cancel,\n+                                (DialogInterface d, int id) -> d.cancel())\n+                        .create()\n+                        .show();\n+                break;\n+            default:\n+                return super.onOptionsItemSelected(item);\n+        }\n+        return true;\n+    }\n+\n+    public void removeWatchedStreams(final boolean removePartiallyWatched) {\n+        if (removeWatchedDisposable != null && !removeWatchedDisposable.isDisposed()) {\n+            // already running\n+            return;\n+        }\n+        showLoading();\n+\n+        removeWatchedDisposable = playlistManager.getPlaylistStreams(playlistId)\n+                .subscribeOn(Schedulers.io())\n+                .map((List<PlaylistStreamEntry> playlist) -> {\n+                    //Playlist data\n+                    Iterator<PlaylistStreamEntry> playlistIter = playlist.iterator();\n+\n+                    //History data\n+                    HistoryRecordManager recordManager = new HistoryRecordManager(getContext());\n+                    Iterator<StreamHistoryEntry> historyIter = recordManager\n+                            .getStreamHistorySortedById().blockingFirst().iterator();\n+                    Iterator<StreamStateEntity> streamStatesIter = null;\n+\n+                    //Remove Watched, Functionality data\n+                    List<PlaylistStreamEntry> notWatchedItems = new ArrayList<>();\n+                    boolean thumbnailVideoRemoved = false;\n+\n+                    if (!removePartiallyWatched) {\n+                        streamStatesIter = recordManager.loadLocalStreamStateBatch(playlist)\n+                                .blockingGet().iterator();\n+                    }\n+\n+                    // already sorted by ^ getStreamHistorySortedById(), binary search can be used\n+                    ArrayList<Long> historyStreamIds = new ArrayList<>();\n+                    while (historyIter.hasNext()) {\n+                        historyStreamIds.add(historyIter.next().getStreamId());\n+                    }\n+\n+                    if (removePartiallyWatched) {\n+                        while (playlistIter.hasNext()) {\n+                            PlaylistStreamEntry playlistItem = playlistIter.next();\n+                            int indexInHistory = Collections.binarySearch(historyStreamIds,\n+                                    playlistItem.getStreamId());\n+\n+                            if (indexInHistory < 0) {\n+                                notWatchedItems.add(playlistItem);\n+                            } else if (!thumbnailVideoRemoved\n+                                    && playlistManager.getPlaylistThumbnail(playlistId)\n+                                    .equals(playlistItem.getStreamEntity().getThumbnailUrl())) {\n+                                thumbnailVideoRemoved = true;\n+                            }\n+                        }\n+                    } else {\n+                        while (playlistIter.hasNext()) {\n+                            PlaylistStreamEntry playlistItem = playlistIter.next();\n+                            int indexInHistory = Collections.binarySearch(historyStreamIds,\n+                                    playlistItem.getStreamId());\n+\n+                            boolean hasState = streamStatesIter.next() != null;\n+                            if (indexInHistory < 0 ||  hasState) {\n+                                notWatchedItems.add(playlistItem);\n+                            } else if (!thumbnailVideoRemoved\n+                                    && playlistManager.getPlaylistThumbnail(playlistId)\n+                                    .equals(playlistItem.getStreamEntity().getThumbnailUrl())) {\n+                                thumbnailVideoRemoved = true;\n+                            }\n+                        }\n+                    }\n+\n+                    return Flowable.just(notWatchedItems, thumbnailVideoRemoved);\n+                })\n+                .observeOn(AndroidSchedulers.mainThread())\n+                .subscribe(flow -> {\n+                    List<PlaylistStreamEntry> notWatchedItems =\n+                            (List<PlaylistStreamEntry>) flow.blockingFirst();\n+                    boolean thumbnailVideoRemoved = (Boolean) flow.blockingLast();\n+\n+                    itemListAdapter.clearStreamItemList();\n+                    itemListAdapter.addItems(notWatchedItems);\n+                    saveChanges();\n+\n+\n+                    if (thumbnailVideoRemoved) {\n+                        updateThumbnailUrl();\n+                    }\n+\n+                    long videoCount = itemListAdapter.getItemsList().size();\n+                    setVideoCount(videoCount);\n+                    if (videoCount == 0) {\n+                        showEmptyState();\n+                    }\n+\n+                    hideLoading();\n+\n+                    //If this is not done, 'removeWatchedDisposable', will never be disposed of.\n+                    //Why: Because using the 'removePartiallyWatched' in this functions parms,\n+                    // prevents it from disposing. Exact reason for this behavior is unknown", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db335d5cec3b77be37d897279973f1fbf94537af"}, "originalPosition": 217}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkyNzAyOQ==", "bodyText": "I'd personally prefer formatting it something like:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Log.d(TAG, \"onCreateOptionsMenu() called with: menu = [\" + menu\n          \n          \n            \n                                + \"], inflater = [\" + inflater + \"]\");\n          \n          \n            \n                        Log.d(TAG, \"onCreateOptionsMenu() called with: \"\n          \n          \n            \n                                + \"menu = [\" + menu + \"], inflater = [\" + inflater + \"]\");", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r410927029", "createdAt": "2020-04-19T15:17:58Z", "author": {"login": "wb9688"}, "path": "app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java", "diffHunk": "@@ -244,6 +256,16 @@ public void onPause() {\n         saveImmediate();\n     }\n \n+    @Override\n+    public void onCreateOptionsMenu(final Menu menu, final MenuInflater inflater) {\n+        if (DEBUG) {\n+            Log.d(TAG, \"onCreateOptionsMenu() called with: menu = [\" + menu\n+                    + \"], inflater = [\" + inflater + \"]\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db335d5cec3b77be37d897279973f1fbf94537af"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkyNzQ1Ng==", "bodyText": "A lot of variables in this function could be final", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r410927456", "createdAt": "2020-04-19T15:19:49Z", "author": {"login": "wb9688"}, "path": "app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java", "diffHunk": "@@ -331,6 +358,127 @@ public void onComplete() { }\n         };\n     }\n \n+    @Override\n+    public boolean onOptionsItemSelected(final MenuItem item) {\n+        switch (item.getItemId()) {\n+            case R.id.menu_item_removeWatched:\n+                new AlertDialog.Builder(getActivity())\n+                        .setMessage(R.string.remove_watched_popup_warning)\n+                        .setTitle(R.string.remove_watched_popup_title)\n+                        .setPositiveButton(R.string.yes,\n+                                (DialogInterface d, int id) -> removeWatchedStreams(false))\n+                        .setNeutralButton(\n+                                R.string.remove_watched_popup_yes_and_partially_watched_videos,\n+                                (DialogInterface d, int id) -> removeWatchedStreams(true))\n+                        .setNegativeButton(R.string.cancel,\n+                                (DialogInterface d, int id) -> d.cancel())\n+                        .create()\n+                        .show();\n+                break;\n+            default:\n+                return super.onOptionsItemSelected(item);\n+        }\n+        return true;\n+    }\n+\n+    public void removeWatchedStreams(final boolean removePartiallyWatched) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db335d5cec3b77be37d897279973f1fbf94537af"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkyODAyMg==", "bodyText": "This could be moved down I think", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#discussion_r410928022", "createdAt": "2020-04-19T15:22:40Z", "author": {"login": "wb9688"}, "path": "app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java", "diffHunk": "@@ -331,6 +358,127 @@ public void onComplete() { }\n         };\n     }\n \n+    @Override\n+    public boolean onOptionsItemSelected(final MenuItem item) {\n+        switch (item.getItemId()) {\n+            case R.id.menu_item_removeWatched:\n+                new AlertDialog.Builder(getActivity())\n+                        .setMessage(R.string.remove_watched_popup_warning)\n+                        .setTitle(R.string.remove_watched_popup_title)\n+                        .setPositiveButton(R.string.yes,\n+                                (DialogInterface d, int id) -> removeWatchedStreams(false))\n+                        .setNeutralButton(\n+                                R.string.remove_watched_popup_yes_and_partially_watched_videos,\n+                                (DialogInterface d, int id) -> removeWatchedStreams(true))\n+                        .setNegativeButton(R.string.cancel,\n+                                (DialogInterface d, int id) -> d.cancel())\n+                        .create()\n+                        .show();\n+                break;\n+            default:\n+                return super.onOptionsItemSelected(item);\n+        }\n+        return true;\n+    }\n+\n+    public void removeWatchedStreams(final boolean removePartiallyWatched) {\n+        if (removeWatchedDisposable != null && !removeWatchedDisposable.isDisposed()) {\n+            // already running\n+            return;\n+        }\n+        showLoading();\n+\n+        removeWatchedDisposable = playlistManager.getPlaylistStreams(playlistId)\n+                .subscribeOn(Schedulers.io())\n+                .map((List<PlaylistStreamEntry> playlist) -> {\n+                    //Playlist data\n+                    Iterator<PlaylistStreamEntry> playlistIter = playlist.iterator();\n+\n+                    //History data\n+                    HistoryRecordManager recordManager = new HistoryRecordManager(getContext());\n+                    Iterator<StreamHistoryEntry> historyIter = recordManager\n+                            .getStreamHistorySortedById().blockingFirst().iterator();\n+                    Iterator<StreamStateEntity> streamStatesIter = null;\n+\n+                    //Remove Watched, Functionality data\n+                    List<PlaylistStreamEntry> notWatchedItems = new ArrayList<>();\n+                    boolean thumbnailVideoRemoved = false;\n+\n+                    if (!removePartiallyWatched) {\n+                        streamStatesIter = recordManager.loadLocalStreamStateBatch(playlist)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db335d5cec3b77be37d897279973f1fbf94537af"}, "originalPosition": 149}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "776ddddc8374e2bc2cabb189ca4c4ad6ec5b990c", "author": {"user": {"login": "GradyClark", "name": "Grady Clark"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/776ddddc8374e2bc2cabb189ca4c4ad6ec5b990c", "committedDate": "2020-04-21T06:03:42Z", "message": "fixed naming and formatting issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73611004a0484fce5f6be54654d8107294e53543", "author": {"user": {"login": "GradyClark", "name": "Grady Clark"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/73611004a0484fce5f6be54654d8107294e53543", "committedDate": "2020-04-21T06:57:23Z", "message": "Code cleanup, and best practices"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "437b86d1a7cfe362172ef9522aa2bafd8d91d698", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/437b86d1a7cfe362172ef9522aa2bafd8d91d698", "committedDate": "2020-04-23T21:35:00Z", "message": "Use centralized CompositeDisposable instead of custom Disposable\n\nAlso do not show any dialog if the user is aready removing watched videos in a local playlist"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NTAwMjQ3", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3065#pullrequestreview-399500247", "createdAt": "2020-04-23T21:46:37Z", "commit": {"oid": "437b86d1a7cfe362172ef9522aa2bafd8d91d698"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4021, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}