{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3NjI0Nzk3", "number": 4587, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzo1NzoyMVrOE0Y0qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzo1NzoyMVrOE0Y0qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzY4MTA3OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/player/event/PlayerGestureListener.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzo1NzoyMVrOHsFY2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDozNzozMVrOHsHCIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk4NzY3NA==", "bodyText": "Could you add here else if (portion == DisplayPortion.MIDDLE) { playerImpl.onPlayPause(); }, so that a double tap in the middle changes the playing state, as it did before #2907? Or will you do this in a future PR?", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4587#discussion_r515987674", "createdAt": "2020-11-02T13:57:21Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/player/event/PlayerGestureListener.java", "diffHunk": "@@ -23,217 +23,114 @@\n import static org.schabi.newpipe.util.AnimationUtils.Type.SCALE_AND_ALPHA;\n import static org.schabi.newpipe.util.AnimationUtils.animateView;\n \n+/**\n+ * GestureListener for the player\n+ *\n+ * While {@link BasePlayerGestureListener} contains the logic behind the single gestures\n+ * this class focuses on the visual aspect like hiding and showing the controls or changing\n+ * volume/brightness during scrolling for specific events.\n+ */\n public class PlayerGestureListener\n-        extends GestureDetector.SimpleOnGestureListener\n+        extends BasePlayerGestureListener\n         implements View.OnTouchListener {\n     private static final String TAG = \".PlayerGestureListener\";\n     private static final boolean DEBUG = BasePlayer.DEBUG;\n \n-    private final VideoPlayerImpl playerImpl;\n-    private final MainPlayer service;\n-\n-    private int initialPopupX;\n-    private int initialPopupY;\n-\n-    private boolean isMovingInMain;\n-    private boolean isMovingInPopup;\n-\n-    private boolean isResizing;\n-\n-    private final int tossFlingVelocity;\n-\n     private final boolean isVolumeGestureEnabled;\n     private final boolean isBrightnessGestureEnabled;\n     private final int maxVolume;\n-    private static final int MOVEMENT_THRESHOLD = 40;\n-\n-    // [popup] initial coordinates and distance between fingers\n-    private double initPointerDistance = -1;\n-    private float initFirstPointerX = -1;\n-    private float initFirstPointerY = -1;\n-    private float initSecPointerX = -1;\n-    private float initSecPointerY = -1;\n-\n \n     public PlayerGestureListener(final VideoPlayerImpl playerImpl, final MainPlayer service) {\n-        this.playerImpl = playerImpl;\n-        this.service = service;\n-        this.tossFlingVelocity = PlayerHelper.getTossFlingVelocity(service);\n+        super(playerImpl, service);\n \n         isVolumeGestureEnabled = PlayerHelper.isVolumeGestureEnabled(service);\n         isBrightnessGestureEnabled = PlayerHelper.isBrightnessGestureEnabled(service);\n         maxVolume = playerImpl.getAudioReactor().getMaxVolume();\n     }\n \n-    /*//////////////////////////////////////////////////////////////////////////\n-    // Helpers\n-    //////////////////////////////////////////////////////////////////////////*/\n-\n-    /*\n-     * Main and popup players' gesture listeners is too different.\n-     * So it will be better to have different implementations of them\n-     * */\n-    @Override\n-    public boolean onDoubleTap(final MotionEvent e) {\n-        if (DEBUG) {\n-            Log.d(TAG, \"onDoubleTap() called with: e = [\" + e + \"]\" + \"rawXy = \"\n-                    + e.getRawX() + \", \" + e.getRawY() + \", xy = \" + e.getX() + \", \" + e.getY());\n-        }\n-\n-        if (playerImpl.popupPlayerSelected()) {\n-            return onDoubleTapInPopup(e);\n-        } else {\n-            return onDoubleTapInMain(e);\n-        }\n-    }\n-\n     @Override\n-    public boolean onSingleTapConfirmed(final MotionEvent e) {\n+    public void onDoubleTap(@NotNull final MotionEvent event,\n+                            @NotNull final DisplayPortion portion) {\n         if (DEBUG) {\n-            Log.d(TAG, \"onSingleTapConfirmed() called with: e = [\" + e + \"]\");\n+            Log.d(TAG, \"onDoubleTap called with playerType = [\"\n+                    + playerImpl.getPlayerType() + \"], portion = [\"\n+                    + portion + \"]\");\n         }\n-\n-        if (playerImpl.popupPlayerSelected()) {\n-            return onSingleTapConfirmedInPopup(e);\n-        } else {\n-            return onSingleTapConfirmedInMain(e);\n-        }\n-    }\n-\n-    @Override\n-    public boolean onDown(final MotionEvent e) {\n-        if (DEBUG) {\n-            Log.d(TAG, \"onDown() called with: e = [\" + e + \"]\");\n+        if (playerImpl.isSomePopupMenuVisible()) {\n+            playerImpl.hideControls(0, 0);\n         }\n \n-        if (playerImpl.popupPlayerSelected()) {\n-            return onDownInPopup(e);\n-        } else {\n-            return true;\n+        if (portion == DisplayPortion.LEFT) {\n+            playerImpl.onFastRewind();\n+        } else if (portion == DisplayPortion.RIGHT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e97f71cf2c7005c114e2e81853063add9da5b496"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAwMjcyMg==", "bodyText": "Oh, I missed this middle gesture somehow., my bad. I'll add it again (or if you'd like to you can do it since you're authorized) :')", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4587#discussion_r516002722", "createdAt": "2020-11-02T14:20:11Z", "author": {"login": "vkay94"}, "path": "app/src/main/java/org/schabi/newpipe/player/event/PlayerGestureListener.java", "diffHunk": "@@ -23,217 +23,114 @@\n import static org.schabi.newpipe.util.AnimationUtils.Type.SCALE_AND_ALPHA;\n import static org.schabi.newpipe.util.AnimationUtils.animateView;\n \n+/**\n+ * GestureListener for the player\n+ *\n+ * While {@link BasePlayerGestureListener} contains the logic behind the single gestures\n+ * this class focuses on the visual aspect like hiding and showing the controls or changing\n+ * volume/brightness during scrolling for specific events.\n+ */\n public class PlayerGestureListener\n-        extends GestureDetector.SimpleOnGestureListener\n+        extends BasePlayerGestureListener\n         implements View.OnTouchListener {\n     private static final String TAG = \".PlayerGestureListener\";\n     private static final boolean DEBUG = BasePlayer.DEBUG;\n \n-    private final VideoPlayerImpl playerImpl;\n-    private final MainPlayer service;\n-\n-    private int initialPopupX;\n-    private int initialPopupY;\n-\n-    private boolean isMovingInMain;\n-    private boolean isMovingInPopup;\n-\n-    private boolean isResizing;\n-\n-    private final int tossFlingVelocity;\n-\n     private final boolean isVolumeGestureEnabled;\n     private final boolean isBrightnessGestureEnabled;\n     private final int maxVolume;\n-    private static final int MOVEMENT_THRESHOLD = 40;\n-\n-    // [popup] initial coordinates and distance between fingers\n-    private double initPointerDistance = -1;\n-    private float initFirstPointerX = -1;\n-    private float initFirstPointerY = -1;\n-    private float initSecPointerX = -1;\n-    private float initSecPointerY = -1;\n-\n \n     public PlayerGestureListener(final VideoPlayerImpl playerImpl, final MainPlayer service) {\n-        this.playerImpl = playerImpl;\n-        this.service = service;\n-        this.tossFlingVelocity = PlayerHelper.getTossFlingVelocity(service);\n+        super(playerImpl, service);\n \n         isVolumeGestureEnabled = PlayerHelper.isVolumeGestureEnabled(service);\n         isBrightnessGestureEnabled = PlayerHelper.isBrightnessGestureEnabled(service);\n         maxVolume = playerImpl.getAudioReactor().getMaxVolume();\n     }\n \n-    /*//////////////////////////////////////////////////////////////////////////\n-    // Helpers\n-    //////////////////////////////////////////////////////////////////////////*/\n-\n-    /*\n-     * Main and popup players' gesture listeners is too different.\n-     * So it will be better to have different implementations of them\n-     * */\n-    @Override\n-    public boolean onDoubleTap(final MotionEvent e) {\n-        if (DEBUG) {\n-            Log.d(TAG, \"onDoubleTap() called with: e = [\" + e + \"]\" + \"rawXy = \"\n-                    + e.getRawX() + \", \" + e.getRawY() + \", xy = \" + e.getX() + \", \" + e.getY());\n-        }\n-\n-        if (playerImpl.popupPlayerSelected()) {\n-            return onDoubleTapInPopup(e);\n-        } else {\n-            return onDoubleTapInMain(e);\n-        }\n-    }\n-\n     @Override\n-    public boolean onSingleTapConfirmed(final MotionEvent e) {\n+    public void onDoubleTap(@NotNull final MotionEvent event,\n+                            @NotNull final DisplayPortion portion) {\n         if (DEBUG) {\n-            Log.d(TAG, \"onSingleTapConfirmed() called with: e = [\" + e + \"]\");\n+            Log.d(TAG, \"onDoubleTap called with playerType = [\"\n+                    + playerImpl.getPlayerType() + \"], portion = [\"\n+                    + portion + \"]\");\n         }\n-\n-        if (playerImpl.popupPlayerSelected()) {\n-            return onSingleTapConfirmedInPopup(e);\n-        } else {\n-            return onSingleTapConfirmedInMain(e);\n-        }\n-    }\n-\n-    @Override\n-    public boolean onDown(final MotionEvent e) {\n-        if (DEBUG) {\n-            Log.d(TAG, \"onDown() called with: e = [\" + e + \"]\");\n+        if (playerImpl.isSomePopupMenuVisible()) {\n+            playerImpl.hideControls(0, 0);\n         }\n \n-        if (playerImpl.popupPlayerSelected()) {\n-            return onDownInPopup(e);\n-        } else {\n-            return true;\n+        if (portion == DisplayPortion.LEFT) {\n+            playerImpl.onFastRewind();\n+        } else if (portion == DisplayPortion.RIGHT) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk4NzY3NA=="}, "originalCommit": {"oid": "e97f71cf2c7005c114e2e81853063add9da5b496"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAxNDYyNA==", "bodyText": "Ok, I'm gonna do it and then merge", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4587#discussion_r516014624", "createdAt": "2020-11-02T14:37:31Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/player/event/PlayerGestureListener.java", "diffHunk": "@@ -23,217 +23,114 @@\n import static org.schabi.newpipe.util.AnimationUtils.Type.SCALE_AND_ALPHA;\n import static org.schabi.newpipe.util.AnimationUtils.animateView;\n \n+/**\n+ * GestureListener for the player\n+ *\n+ * While {@link BasePlayerGestureListener} contains the logic behind the single gestures\n+ * this class focuses on the visual aspect like hiding and showing the controls or changing\n+ * volume/brightness during scrolling for specific events.\n+ */\n public class PlayerGestureListener\n-        extends GestureDetector.SimpleOnGestureListener\n+        extends BasePlayerGestureListener\n         implements View.OnTouchListener {\n     private static final String TAG = \".PlayerGestureListener\";\n     private static final boolean DEBUG = BasePlayer.DEBUG;\n \n-    private final VideoPlayerImpl playerImpl;\n-    private final MainPlayer service;\n-\n-    private int initialPopupX;\n-    private int initialPopupY;\n-\n-    private boolean isMovingInMain;\n-    private boolean isMovingInPopup;\n-\n-    private boolean isResizing;\n-\n-    private final int tossFlingVelocity;\n-\n     private final boolean isVolumeGestureEnabled;\n     private final boolean isBrightnessGestureEnabled;\n     private final int maxVolume;\n-    private static final int MOVEMENT_THRESHOLD = 40;\n-\n-    // [popup] initial coordinates and distance between fingers\n-    private double initPointerDistance = -1;\n-    private float initFirstPointerX = -1;\n-    private float initFirstPointerY = -1;\n-    private float initSecPointerX = -1;\n-    private float initSecPointerY = -1;\n-\n \n     public PlayerGestureListener(final VideoPlayerImpl playerImpl, final MainPlayer service) {\n-        this.playerImpl = playerImpl;\n-        this.service = service;\n-        this.tossFlingVelocity = PlayerHelper.getTossFlingVelocity(service);\n+        super(playerImpl, service);\n \n         isVolumeGestureEnabled = PlayerHelper.isVolumeGestureEnabled(service);\n         isBrightnessGestureEnabled = PlayerHelper.isBrightnessGestureEnabled(service);\n         maxVolume = playerImpl.getAudioReactor().getMaxVolume();\n     }\n \n-    /*//////////////////////////////////////////////////////////////////////////\n-    // Helpers\n-    //////////////////////////////////////////////////////////////////////////*/\n-\n-    /*\n-     * Main and popup players' gesture listeners is too different.\n-     * So it will be better to have different implementations of them\n-     * */\n-    @Override\n-    public boolean onDoubleTap(final MotionEvent e) {\n-        if (DEBUG) {\n-            Log.d(TAG, \"onDoubleTap() called with: e = [\" + e + \"]\" + \"rawXy = \"\n-                    + e.getRawX() + \", \" + e.getRawY() + \", xy = \" + e.getX() + \", \" + e.getY());\n-        }\n-\n-        if (playerImpl.popupPlayerSelected()) {\n-            return onDoubleTapInPopup(e);\n-        } else {\n-            return onDoubleTapInMain(e);\n-        }\n-    }\n-\n     @Override\n-    public boolean onSingleTapConfirmed(final MotionEvent e) {\n+    public void onDoubleTap(@NotNull final MotionEvent event,\n+                            @NotNull final DisplayPortion portion) {\n         if (DEBUG) {\n-            Log.d(TAG, \"onSingleTapConfirmed() called with: e = [\" + e + \"]\");\n+            Log.d(TAG, \"onDoubleTap called with playerType = [\"\n+                    + playerImpl.getPlayerType() + \"], portion = [\"\n+                    + portion + \"]\");\n         }\n-\n-        if (playerImpl.popupPlayerSelected()) {\n-            return onSingleTapConfirmedInPopup(e);\n-        } else {\n-            return onSingleTapConfirmedInMain(e);\n-        }\n-    }\n-\n-    @Override\n-    public boolean onDown(final MotionEvent e) {\n-        if (DEBUG) {\n-            Log.d(TAG, \"onDown() called with: e = [\" + e + \"]\");\n+        if (playerImpl.isSomePopupMenuVisible()) {\n+            playerImpl.hideControls(0, 0);\n         }\n \n-        if (playerImpl.popupPlayerSelected()) {\n-            return onDownInPopup(e);\n-        } else {\n-            return true;\n+        if (portion == DisplayPortion.LEFT) {\n+            playerImpl.onFastRewind();\n+        } else if (portion == DisplayPortion.RIGHT) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk4NzY3NA=="}, "originalCommit": {"oid": "e97f71cf2c7005c114e2e81853063add9da5b496"}, "originalPosition": 129}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2969, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}