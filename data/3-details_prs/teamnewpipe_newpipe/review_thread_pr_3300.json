{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NTUwNDgz", "number": 3300, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNzowNzo1N1rODwR-3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNzozNzo0N1rODwSiUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxOTUyODYwOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNzowNzo1N1rOGDMLTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNzowNzo1N1rOGDMLTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk5ODQxNQ==", "bodyText": "Rename this function to showContentNotSupported.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3300#discussion_r405998415", "createdAt": "2020-04-09T07:07:57Z", "author": {"login": "wb9688"}, "path": "app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java", "diffHunk": "@@ -439,6 +468,13 @@ public void handleResult(@NonNull final ChannelInfo result) {\n                 .playOnBackgroundPlayer(activity, getPlayQueue(), false));\n     }\n \n+    private void updateNoVideoDisplay() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7012fba665e7d749d8f069b2c953b6789535f27b"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxOTYxOTM2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNzozNzo0N1rOGDNDCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMToxNzozN1rOGDpvdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAxMjY4Mg==", "bodyText": "Can't you just use for (Throwable throwable : errors)? I.e.:\n        List<Throwable> errors = new ArrayList<>(result.getErrors());\n\n        // handling ContentNotSupportedException not to show the error but an appropriate string\n        // so that crashes won't be sent uselessly and the user will understand what happened\n        for (Throwable throwable : errors) {\n            if (throwable instanceof ContentNotSupportedException) {\n                showContentNotSupported();\n                errors.remove(throwable);\n            }\n        }\n\n        if (!errors.isEmpty()) {\n            showSnackBarError(result.getErrors(), UserAction.REQUESTED_CHANNEL,\n                    NewPipe.getNameOfService(result.getServiceId()), result.getUrl(), 0);\n        }", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3300#discussion_r406012682", "createdAt": "2020-04-09T07:37:47Z", "author": {"login": "wb9688"}, "path": "app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java", "diffHunk": "@@ -417,9 +431,24 @@ public void handleResult(@NonNull final ChannelInfo result) {\n \n         playlistCtrl.setVisibility(View.VISIBLE);\n \n-        if (!result.getErrors().isEmpty()) {\n-            showSnackBarError(result.getErrors(), UserAction.REQUESTED_CHANNEL,\n-                    NewPipe.getNameOfService(result.getServiceId()), result.getUrl(), 0);\n+        List<Throwable> errors = result.getErrors();\n+        if (!errors.isEmpty()) {\n+\n+            // handling ContentNotSupportedException not to show the error but an appropriate string\n+            // so that crashes won't be sent uselessly and the user will understand what happened\n+            Iterator<Throwable> it = errors.iterator();\n+            while (it.hasNext()) {\n+                Throwable throwable = it.next();\n+                if (throwable instanceof ContentNotSupportedException) {\n+                    updateNoVideoDisplay();\n+                    it.remove();\n+                }\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7012fba665e7d749d8f069b2c953b6789535f27b"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAyMjcyNQ==", "bodyText": "Is it ConcurrentModificationException free? I was told that I should use iterator if I want to remove or add things while iterating because it's always safe.\nedit:\nIt is not safe. Test this:\nList<Integer> list = new ArrayList<>(\n for (int i = 0; i < 1000; i++)\n    list.add(i);\n}\n// works, `list` is all int from 0 to 999\nfor (Integer i : list) {\n    if (200 < i && i < 900) {\n        list.remove(i);\n       // at some point of the list, it will trigger ConcurrentModificationException\n    }\n}\nSystem.out.println(list);", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3300#discussion_r406022725", "createdAt": "2020-04-09T07:57:11Z", "author": {"login": "B0pol"}, "path": "app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java", "diffHunk": "@@ -417,9 +431,24 @@ public void handleResult(@NonNull final ChannelInfo result) {\n \n         playlistCtrl.setVisibility(View.VISIBLE);\n \n-        if (!result.getErrors().isEmpty()) {\n-            showSnackBarError(result.getErrors(), UserAction.REQUESTED_CHANNEL,\n-                    NewPipe.getNameOfService(result.getServiceId()), result.getUrl(), 0);\n+        List<Throwable> errors = result.getErrors();\n+        if (!errors.isEmpty()) {\n+\n+            // handling ContentNotSupportedException not to show the error but an appropriate string\n+            // so that crashes won't be sent uselessly and the user will understand what happened\n+            Iterator<Throwable> it = errors.iterator();\n+            while (it.hasNext()) {\n+                Throwable throwable = it.next();\n+                if (throwable instanceof ContentNotSupportedException) {\n+                    updateNoVideoDisplay();\n+                    it.remove();\n+                }\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAxMjY4Mg=="}, "originalCommit": {"oid": "7012fba665e7d749d8f069b2c953b6789535f27b"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAzMjU1MA==", "bodyText": "@B0pol: You're right. I'm used to Python. You should still remove the outer if though, and I still prefer making a copy of the list, though that uses more memory. You're also currently assuming there could only be one ContentNotSupportedException, while you wouldn't when just making a copy of the list.\n        List<Throwable> errors = new ArrayList<>(result.getErrors());\n\n        // handling ContentNotSupportedException not to show the error but an appropriate string\n        // so that crashes won't be sent uselessly and the user will understand what happened\n        Iterator<Throwable> it = errors.iterator();\n        while (it.hasNext()) {\n            Throwable throwable = it.next();\n            if (throwable instanceof ContentNotSupportedException) {\n                showContentNotSupported();\n                it.remove();\n            }\n        }\n\n        if (!errors.isEmpty()) {\n            showSnackBarError(result.getErrors(), UserAction.REQUESTED_CHANNEL,\n                    NewPipe.getNameOfService(result.getServiceId()), result.getUrl(), 0);\n        }", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3300#discussion_r406032550", "createdAt": "2020-04-09T08:14:09Z", "author": {"login": "wb9688"}, "path": "app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java", "diffHunk": "@@ -417,9 +431,24 @@ public void handleResult(@NonNull final ChannelInfo result) {\n \n         playlistCtrl.setVisibility(View.VISIBLE);\n \n-        if (!result.getErrors().isEmpty()) {\n-            showSnackBarError(result.getErrors(), UserAction.REQUESTED_CHANNEL,\n-                    NewPipe.getNameOfService(result.getServiceId()), result.getUrl(), 0);\n+        List<Throwable> errors = result.getErrors();\n+        if (!errors.isEmpty()) {\n+\n+            // handling ContentNotSupportedException not to show the error but an appropriate string\n+            // so that crashes won't be sent uselessly and the user will understand what happened\n+            Iterator<Throwable> it = errors.iterator();\n+            while (it.hasNext()) {\n+                Throwable throwable = it.next();\n+                if (throwable instanceof ContentNotSupportedException) {\n+                    updateNoVideoDisplay();\n+                    it.remove();\n+                }\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAxMjY4Mg=="}, "originalCommit": {"oid": "7012fba665e7d749d8f069b2c953b6789535f27b"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ4MjgwNA==", "bodyText": "I'd keep the if, but also agree to use a copy of the list to keep the original order.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3300#discussion_r406482804", "createdAt": "2020-04-09T21:17:37Z", "author": {"login": "TobiGr"}, "path": "app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java", "diffHunk": "@@ -417,9 +431,24 @@ public void handleResult(@NonNull final ChannelInfo result) {\n \n         playlistCtrl.setVisibility(View.VISIBLE);\n \n-        if (!result.getErrors().isEmpty()) {\n-            showSnackBarError(result.getErrors(), UserAction.REQUESTED_CHANNEL,\n-                    NewPipe.getNameOfService(result.getServiceId()), result.getUrl(), 0);\n+        List<Throwable> errors = result.getErrors();\n+        if (!errors.isEmpty()) {\n+\n+            // handling ContentNotSupportedException not to show the error but an appropriate string\n+            // so that crashes won't be sent uselessly and the user will understand what happened\n+            Iterator<Throwable> it = errors.iterator();\n+            while (it.hasNext()) {\n+                Throwable throwable = it.next();\n+                if (throwable instanceof ContentNotSupportedException) {\n+                    updateNoVideoDisplay();\n+                    it.remove();\n+                }\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAxMjY4Mg=="}, "originalCommit": {"oid": "7012fba665e7d749d8f069b2c953b6789535f27b"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3113, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}