{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NTIyNzg5", "number": 4425, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzowMzoxN1rOEqt8rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxODozNjoyN1rOEq33vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMjI4NDYyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzowMzoxN1rOHdFR-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzowNjozN1rOHdFbbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI1NzI3Mw==", "bodyText": "br br?", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500257273", "createdAt": "2020-10-06T13:03:17Z", "author": {"login": "opusforlife2"}, "path": "app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java", "diffHunk": "@@ -1,21 +1,61 @@\n package org.schabi.newpipe.util;\n \n import android.content.Context;\n+import android.widget.Toast;\n \n import androidx.fragment.app.Fragment;\n \n import org.schabi.newpipe.R;\n import org.schabi.newpipe.extractor.stream.StreamInfoItem;\n import org.schabi.newpipe.local.dialog.PlaylistAppendDialog;\n+import org.schabi.newpipe.player.MainPlayer;\n+import org.schabi.newpipe.player.helper.PlayerHolder;\n import org.schabi.newpipe.player.playqueue.SinglePlayQueue;\n \n+import java.util.ArrayList;\n import java.util.Collections;\n \n public enum StreamDialogEntry {\n     //////////////////////////////////////\n     // enum values with DEFAULT actions //\n     //////////////////////////////////////\n \n+    /**\n+     * Enqueues the stream automatically to the current PlayerType.<br>\n+     * <br>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed6fc4d848ba113c1087ca453541af08752e4316"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI1ODg3MQ==", "bodyText": "This is  just Java Doc syntax for linebreaks.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500258871", "createdAt": "2020-10-06T13:05:29Z", "author": {"login": "vkay94"}, "path": "app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java", "diffHunk": "@@ -1,21 +1,61 @@\n package org.schabi.newpipe.util;\n \n import android.content.Context;\n+import android.widget.Toast;\n \n import androidx.fragment.app.Fragment;\n \n import org.schabi.newpipe.R;\n import org.schabi.newpipe.extractor.stream.StreamInfoItem;\n import org.schabi.newpipe.local.dialog.PlaylistAppendDialog;\n+import org.schabi.newpipe.player.MainPlayer;\n+import org.schabi.newpipe.player.helper.PlayerHolder;\n import org.schabi.newpipe.player.playqueue.SinglePlayQueue;\n \n+import java.util.ArrayList;\n import java.util.Collections;\n \n public enum StreamDialogEntry {\n     //////////////////////////////////////\n     // enum values with DEFAULT actions //\n     //////////////////////////////////////\n \n+    /**\n+     * Enqueues the stream automatically to the current PlayerType.<br>\n+     * <br>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI1NzI3Mw=="}, "originalCommit": {"oid": "ed6fc4d848ba113c1087ca453541af08752e4316"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI1OTY5Mg==", "bodyText": "Ah.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500259692", "createdAt": "2020-10-06T13:06:37Z", "author": {"login": "opusforlife2"}, "path": "app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java", "diffHunk": "@@ -1,21 +1,61 @@\n package org.schabi.newpipe.util;\n \n import android.content.Context;\n+import android.widget.Toast;\n \n import androidx.fragment.app.Fragment;\n \n import org.schabi.newpipe.R;\n import org.schabi.newpipe.extractor.stream.StreamInfoItem;\n import org.schabi.newpipe.local.dialog.PlaylistAppendDialog;\n+import org.schabi.newpipe.player.MainPlayer;\n+import org.schabi.newpipe.player.helper.PlayerHolder;\n import org.schabi.newpipe.player.playqueue.SinglePlayQueue;\n \n+import java.util.ArrayList;\n import java.util.Collections;\n \n public enum StreamDialogEntry {\n     //////////////////////////////////////\n     // enum values with DEFAULT actions //\n     //////////////////////////////////////\n \n+    /**\n+     * Enqueues the stream automatically to the current PlayerType.<br>\n+     * <br>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI1NzI3Mw=="}, "originalCommit": {"oid": "ed6fc4d848ba113c1087ca453541af08752e4316"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMjQ0Njg1OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/player/helper/PlayerHolder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzozNjozNFrOHdG1tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzo1NjoxM1rOHdH_hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI4MjgwNg==", "bodyText": "Add a method to VideoPlayerImpl that just returns the playerType field", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500282806", "createdAt": "2020-10-06T13:36:34Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/player/helper/PlayerHolder.java", "diffHunk": "@@ -31,6 +35,24 @@ private PlayerHolder() {\n     private static MainPlayer playerService;\n     private static VideoPlayerImpl player;\n \n+    /**\n+     * Returns the current {@link MainPlayer.PlayerType} of the {@link MainPlayer} service,\n+     * otherwise `null` if no service running.\n+     *\n+     * @return Current PlayerType\n+     */\n+    @Nullable\n+    public static MainPlayer.PlayerType getType() {\n+        if (player == null) {\n+            return null;\n+        }\n+\n+        return player.videoPlayerSelected() ? MainPlayer.PlayerType.VIDEO\n+                : player.popupPlayerSelected() ? MainPlayer.PlayerType.POPUP\n+                : player.audioPlayerSelected() ? MainPlayer.PlayerType.AUDIO\n+                : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed6fc4d848ba113c1087ca453541af08752e4316"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMwMTcwMg==", "bodyText": "Alright, I keep the static method in PlayerHolder, so it will call return player.getPlayerType().", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500301702", "createdAt": "2020-10-06T13:56:13Z", "author": {"login": "vkay94"}, "path": "app/src/main/java/org/schabi/newpipe/player/helper/PlayerHolder.java", "diffHunk": "@@ -31,6 +35,24 @@ private PlayerHolder() {\n     private static MainPlayer playerService;\n     private static VideoPlayerImpl player;\n \n+    /**\n+     * Returns the current {@link MainPlayer.PlayerType} of the {@link MainPlayer} service,\n+     * otherwise `null` if no service running.\n+     *\n+     * @return Current PlayerType\n+     */\n+    @Nullable\n+    public static MainPlayer.PlayerType getType() {\n+        if (player == null) {\n+            return null;\n+        }\n+\n+        return player.videoPlayerSelected() ? MainPlayer.PlayerType.VIDEO\n+                : player.popupPlayerSelected() ? MainPlayer.PlayerType.POPUP\n+                : player.audioPlayerSelected() ? MainPlayer.PlayerType.AUDIO\n+                : null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI4MjgwNg=="}, "originalCommit": {"oid": "ed6fc4d848ba113c1087ca453541af08752e4316"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMjQ4ODQxOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzo0MzoyN1rOHdHPOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzo1ODowNVrOHdIGuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI4OTMzNw==", "bodyText": "I think you can replace this part with something like this, and call it a day. As you said the type can never theoretically be null or an invalid value, so we can just include that impossible situation into the condition for opening the main video player (enqueueing when there is no player does not raise errors, but just opens that player).\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (type == null) {\n          \n          \n            \n                        // This code shouldn't be reached since the checks for appending this entry should be\n          \n          \n            \n                        // done within the showStreamDialog calls.\n          \n          \n            \n                        Toast.makeText(fragment.getContext(),\n          \n          \n            \n                                \"No player currently playing\", Toast.LENGTH_SHORT).show();\n          \n          \n            \n                        return;\n          \n          \n            \n                    }\n          \n          \n            \n                    switch (type) {\n          \n          \n            \n                        case AUDIO:\n          \n          \n            \n                            NavigationHelper.enqueueOnBackgroundPlayer(fragment.getContext(),\n          \n          \n            \n                                    new SinglePlayQueue(item), false);\n          \n          \n            \n                            break;\n          \n          \n            \n                        case POPUP:\n          \n          \n            \n                            NavigationHelper.enqueueOnPopupPlayer(fragment.getContext(),\n          \n          \n            \n                                    new SinglePlayQueue(item), false);\n          \n          \n            \n                            break;\n          \n          \n            \n                        case VIDEO:\n          \n          \n            \n                            NavigationHelper.enqueueOnVideoPlayer(fragment.getContext(),\n          \n          \n            \n                                    new SinglePlayQueue(item), false);\n          \n          \n            \n                            break;\n          \n          \n            \n                        default:\n          \n          \n            \n                            // Same as above, but keep it for now for debugging.\n          \n          \n            \n                            Toast.makeText(fragment.getContext(),\n          \n          \n            \n                                    \"Unreachable code executed\", Toast.LENGTH_SHORT).show();\n          \n          \n            \n                            break;\n          \n          \n            \n                    }\n          \n          \n            \n                    if (type == AUDIO) {\n          \n          \n            \n                        NavigationHelper.enqueueOnBackgroundPlayer(fragment.getContext(),\n          \n          \n            \n                                new SinglePlayQueue(item), false);\n          \n          \n            \n                    } else if (type == POPUP) {\n          \n          \n            \n                        NavigationHelper.enqueueOnPopupPlayer(fragment.getContext(),\n          \n          \n            \n                                new SinglePlayQueue(item), false);\n          \n          \n            \n                    } else /* type == VIDEO */ {\n          \n          \n            \n                        NavigationHelper.enqueueOnVideoPlayer(fragment.getContext(),\n          \n          \n            \n                                new SinglePlayQueue(item), false);\n          \n          \n            \n                    }", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500289337", "createdAt": "2020-10-06T13:43:27Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java", "diffHunk": "@@ -1,21 +1,61 @@\n package org.schabi.newpipe.util;\n \n import android.content.Context;\n+import android.widget.Toast;\n \n import androidx.fragment.app.Fragment;\n \n import org.schabi.newpipe.R;\n import org.schabi.newpipe.extractor.stream.StreamInfoItem;\n import org.schabi.newpipe.local.dialog.PlaylistAppendDialog;\n+import org.schabi.newpipe.player.MainPlayer;\n+import org.schabi.newpipe.player.helper.PlayerHolder;\n import org.schabi.newpipe.player.playqueue.SinglePlayQueue;\n \n+import java.util.ArrayList;\n import java.util.Collections;\n \n public enum StreamDialogEntry {\n     //////////////////////////////////////\n     // enum values with DEFAULT actions //\n     //////////////////////////////////////\n \n+    /**\n+     * Enqueues the stream automatically to the current PlayerType.<br>\n+     * <br>\n+     * Info: Add this entry within showStreamDialog.\n+     */\n+    enqueue_stream(R.string.enqueue_stream, (fragment, item) -> {\n+        final MainPlayer.PlayerType type = PlayerHolder.getType();\n+\n+        if (type == null) {\n+            // This code shouldn't be reached since the checks for appending this entry should be\n+            // done within the showStreamDialog calls.\n+            Toast.makeText(fragment.getContext(),\n+                    \"No player currently playing\", Toast.LENGTH_SHORT).show();\n+            return;\n+        }\n+        switch (type) {\n+            case AUDIO:\n+                NavigationHelper.enqueueOnBackgroundPlayer(fragment.getContext(),\n+                        new SinglePlayQueue(item), false);\n+                break;\n+            case POPUP:\n+                NavigationHelper.enqueueOnPopupPlayer(fragment.getContext(),\n+                        new SinglePlayQueue(item), false);\n+                break;\n+            case VIDEO:\n+                NavigationHelper.enqueueOnVideoPlayer(fragment.getContext(),\n+                        new SinglePlayQueue(item), false);\n+                break;\n+            default:\n+                // Same as above, but keep it for now for debugging.\n+                Toast.makeText(fragment.getContext(),\n+                        \"Unreachable code executed\", Toast.LENGTH_SHORT).show();\n+                break;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed6fc4d848ba113c1087ca453541af08752e4316"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMwMzU0NA==", "bodyText": "I kept it before reviews, when there might occur something unexpected, but yeah, I'll make it more compact.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500303544", "createdAt": "2020-10-06T13:58:05Z", "author": {"login": "vkay94"}, "path": "app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java", "diffHunk": "@@ -1,21 +1,61 @@\n package org.schabi.newpipe.util;\n \n import android.content.Context;\n+import android.widget.Toast;\n \n import androidx.fragment.app.Fragment;\n \n import org.schabi.newpipe.R;\n import org.schabi.newpipe.extractor.stream.StreamInfoItem;\n import org.schabi.newpipe.local.dialog.PlaylistAppendDialog;\n+import org.schabi.newpipe.player.MainPlayer;\n+import org.schabi.newpipe.player.helper.PlayerHolder;\n import org.schabi.newpipe.player.playqueue.SinglePlayQueue;\n \n+import java.util.ArrayList;\n import java.util.Collections;\n \n public enum StreamDialogEntry {\n     //////////////////////////////////////\n     // enum values with DEFAULT actions //\n     //////////////////////////////////////\n \n+    /**\n+     * Enqueues the stream automatically to the current PlayerType.<br>\n+     * <br>\n+     * Info: Add this entry within showStreamDialog.\n+     */\n+    enqueue_stream(R.string.enqueue_stream, (fragment, item) -> {\n+        final MainPlayer.PlayerType type = PlayerHolder.getType();\n+\n+        if (type == null) {\n+            // This code shouldn't be reached since the checks for appending this entry should be\n+            // done within the showStreamDialog calls.\n+            Toast.makeText(fragment.getContext(),\n+                    \"No player currently playing\", Toast.LENGTH_SHORT).show();\n+            return;\n+        }\n+        switch (type) {\n+            case AUDIO:\n+                NavigationHelper.enqueueOnBackgroundPlayer(fragment.getContext(),\n+                        new SinglePlayQueue(item), false);\n+                break;\n+            case POPUP:\n+                NavigationHelper.enqueueOnPopupPlayer(fragment.getContext(),\n+                        new SinglePlayQueue(item), false);\n+                break;\n+            case VIDEO:\n+                NavigationHelper.enqueueOnVideoPlayer(fragment.getContext(),\n+                        new SinglePlayQueue(item), false);\n+                break;\n+            default:\n+                // Same as above, but keep it for now for debugging.\n+                Toast.makeText(fragment.getContext(),\n+                        \"Unreachable code executed\", Toast.LENGTH_SHORT).show();\n+                break;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI4OTMzNw=="}, "originalCommit": {"oid": "ed6fc4d848ba113c1087ca453541af08752e4316"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMjQ5NDQwOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzo0NDoyNFrOHdHS1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzo1OTozNFrOHdIMXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MDI2Mg==", "bodyText": "Remove this and the one below, since they are now unused.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500290262", "createdAt": "2020-10-06T13:44:24Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java", "diffHunk": "@@ -1,21 +1,61 @@\n package org.schabi.newpipe.util;\n \n import android.content.Context;\n+import android.widget.Toast;\n \n import androidx.fragment.app.Fragment;\n \n import org.schabi.newpipe.R;\n import org.schabi.newpipe.extractor.stream.StreamInfoItem;\n import org.schabi.newpipe.local.dialog.PlaylistAppendDialog;\n+import org.schabi.newpipe.player.MainPlayer;\n+import org.schabi.newpipe.player.helper.PlayerHolder;\n import org.schabi.newpipe.player.playqueue.SinglePlayQueue;\n \n+import java.util.ArrayList;\n import java.util.Collections;\n \n public enum StreamDialogEntry {\n     //////////////////////////////////////\n     // enum values with DEFAULT actions //\n     //////////////////////////////////////\n \n+    /**\n+     * Enqueues the stream automatically to the current PlayerType.<br>\n+     * <br>\n+     * Info: Add this entry within showStreamDialog.\n+     */\n+    enqueue_stream(R.string.enqueue_stream, (fragment, item) -> {\n+        final MainPlayer.PlayerType type = PlayerHolder.getType();\n+\n+        if (type == null) {\n+            // This code shouldn't be reached since the checks for appending this entry should be\n+            // done within the showStreamDialog calls.\n+            Toast.makeText(fragment.getContext(),\n+                    \"No player currently playing\", Toast.LENGTH_SHORT).show();\n+            return;\n+        }\n+        switch (type) {\n+            case AUDIO:\n+                NavigationHelper.enqueueOnBackgroundPlayer(fragment.getContext(),\n+                        new SinglePlayQueue(item), false);\n+                break;\n+            case POPUP:\n+                NavigationHelper.enqueueOnPopupPlayer(fragment.getContext(),\n+                        new SinglePlayQueue(item), false);\n+                break;\n+            case VIDEO:\n+                NavigationHelper.enqueueOnVideoPlayer(fragment.getContext(),\n+                        new SinglePlayQueue(item), false);\n+                break;\n+            default:\n+                // Same as above, but keep it for now for debugging.\n+                Toast.makeText(fragment.getContext(),\n+                        \"Unreachable code executed\", Toast.LENGTH_SHORT).show();\n+                break;\n+        }\n+    }),\n+\n     enqueue_on_background(R.string.enqueue_on_background, (fragment, item) ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed6fc4d848ba113c1087ca453541af08752e4316"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMwNDk5MQ==", "bodyText": "I didn't want to remove it before review. I'll remove it alongside the strings ;)", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500304991", "createdAt": "2020-10-06T13:59:34Z", "author": {"login": "vkay94"}, "path": "app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java", "diffHunk": "@@ -1,21 +1,61 @@\n package org.schabi.newpipe.util;\n \n import android.content.Context;\n+import android.widget.Toast;\n \n import androidx.fragment.app.Fragment;\n \n import org.schabi.newpipe.R;\n import org.schabi.newpipe.extractor.stream.StreamInfoItem;\n import org.schabi.newpipe.local.dialog.PlaylistAppendDialog;\n+import org.schabi.newpipe.player.MainPlayer;\n+import org.schabi.newpipe.player.helper.PlayerHolder;\n import org.schabi.newpipe.player.playqueue.SinglePlayQueue;\n \n+import java.util.ArrayList;\n import java.util.Collections;\n \n public enum StreamDialogEntry {\n     //////////////////////////////////////\n     // enum values with DEFAULT actions //\n     //////////////////////////////////////\n \n+    /**\n+     * Enqueues the stream automatically to the current PlayerType.<br>\n+     * <br>\n+     * Info: Add this entry within showStreamDialog.\n+     */\n+    enqueue_stream(R.string.enqueue_stream, (fragment, item) -> {\n+        final MainPlayer.PlayerType type = PlayerHolder.getType();\n+\n+        if (type == null) {\n+            // This code shouldn't be reached since the checks for appending this entry should be\n+            // done within the showStreamDialog calls.\n+            Toast.makeText(fragment.getContext(),\n+                    \"No player currently playing\", Toast.LENGTH_SHORT).show();\n+            return;\n+        }\n+        switch (type) {\n+            case AUDIO:\n+                NavigationHelper.enqueueOnBackgroundPlayer(fragment.getContext(),\n+                        new SinglePlayQueue(item), false);\n+                break;\n+            case POPUP:\n+                NavigationHelper.enqueueOnPopupPlayer(fragment.getContext(),\n+                        new SinglePlayQueue(item), false);\n+                break;\n+            case VIDEO:\n+                NavigationHelper.enqueueOnVideoPlayer(fragment.getContext(),\n+                        new SinglePlayQueue(item), false);\n+                break;\n+            default:\n+                // Same as above, but keep it for now for debugging.\n+                Toast.makeText(fragment.getContext(),\n+                        \"Unreachable code executed\", Toast.LENGTH_SHORT).show();\n+                break;\n+        }\n+    }),\n+\n     enqueue_on_background(R.string.enqueue_on_background, (fragment, item) ->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MDI2Mg=="}, "originalCommit": {"oid": "ed6fc4d848ba113c1087ca453541af08752e4316"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMjUwMDgxOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzo0NToyNlrOHdHW2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzo0NToyNlrOHdHW2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MTI5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static void setEnabledEntries(final ArrayList<StreamDialogEntry> entries) {\n          \n          \n            \n                public static void setEnabledEntries(final List<StreamDialogEntry> entries) {", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500291290", "createdAt": "2020-10-06T13:45:26Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java", "diffHunk": "@@ -69,6 +109,10 @@\n     // non-static methods to initialize and edit entries //\n     ///////////////////////////////////////////////////////\n \n+    public static void setEnabledEntries(final ArrayList<StreamDialogEntry> entries) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed6fc4d848ba113c1087ca453541af08752e4316"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMjUwNjMzOnYy", "diffSide": "RIGHT", "path": "app/src/main/res/values/strings.xml", "isResolved": true, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzo0NjoyN1rOHdHaTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNDo1NjoxMVrOHdLilw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MjE3NQ==", "bodyText": "I am not sure, but if these are unused, please remove them.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500292175", "createdAt": "2020-10-06T13:46:27Z", "author": {"login": "Stypox"}, "path": "app/src/main/res/values/strings.xml", "diffHunk": "@@ -445,6 +445,7 @@\n     <string name=\"play_queue_stream_detail\">Details</string>\n     <string name=\"play_queue_audio_settings\">Audio Settings</string>\n     <string name=\"hold_to_append\">Hold to enqueue</string>\n+    <string name=\"enqueue_stream\">Enqueue stream</string>\n     <string name=\"enqueue_on_background\">Enqueue in the background</string>\n     <string name=\"enqueue_on_popup\">Enqueue in a popup</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed6fc4d848ba113c1087ca453541af08752e4316"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5Njk1OQ==", "bodyText": "We just need \"Enqueue\", no matter which button is long-pressed.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500296959", "createdAt": "2020-10-06T13:51:18Z", "author": {"login": "opusforlife2"}, "path": "app/src/main/res/values/strings.xml", "diffHunk": "@@ -445,6 +445,7 @@\n     <string name=\"play_queue_stream_detail\">Details</string>\n     <string name=\"play_queue_audio_settings\">Audio Settings</string>\n     <string name=\"hold_to_append\">Hold to enqueue</string>\n+    <string name=\"enqueue_stream\">Enqueue stream</string>\n     <string name=\"enqueue_on_background\">Enqueue in the background</string>\n     <string name=\"enqueue_on_popup\">Enqueue in a popup</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MjE3NQ=="}, "originalCommit": {"oid": "ed6fc4d848ba113c1087ca453541af08752e4316"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMwMzI3OA==", "bodyText": "That's true", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500303278", "createdAt": "2020-10-06T13:57:48Z", "author": {"login": "Stypox"}, "path": "app/src/main/res/values/strings.xml", "diffHunk": "@@ -445,6 +445,7 @@\n     <string name=\"play_queue_stream_detail\">Details</string>\n     <string name=\"play_queue_audio_settings\">Audio Settings</string>\n     <string name=\"hold_to_append\">Hold to enqueue</string>\n+    <string name=\"enqueue_stream\">Enqueue stream</string>\n     <string name=\"enqueue_on_background\">Enqueue in the background</string>\n     <string name=\"enqueue_on_popup\">Enqueue in a popup</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MjE3NQ=="}, "originalCommit": {"oid": "ed6fc4d848ba113c1087ca453541af08752e4316"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMwNjk2NQ==", "bodyText": "@opusforlife2 Should we just keep \"Enqueue\" instead of \"Enqueue stream\"?", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500306965", "createdAt": "2020-10-06T14:01:39Z", "author": {"login": "vkay94"}, "path": "app/src/main/res/values/strings.xml", "diffHunk": "@@ -445,6 +445,7 @@\n     <string name=\"play_queue_stream_detail\">Details</string>\n     <string name=\"play_queue_audio_settings\">Audio Settings</string>\n     <string name=\"hold_to_append\">Hold to enqueue</string>\n+    <string name=\"enqueue_stream\">Enqueue stream</string>\n     <string name=\"enqueue_on_background\">Enqueue in the background</string>\n     <string name=\"enqueue_on_popup\">Enqueue in a popup</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MjE3NQ=="}, "originalCommit": {"oid": "ed6fc4d848ba113c1087ca453541af08752e4316"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMzY2MQ==", "bodyText": "Probably yes, and if you do that please also rename the StreamDialogEntry item from enqueue_stream to just enqueue", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500313661", "createdAt": "2020-10-06T14:08:36Z", "author": {"login": "Stypox"}, "path": "app/src/main/res/values/strings.xml", "diffHunk": "@@ -445,6 +445,7 @@\n     <string name=\"play_queue_stream_detail\">Details</string>\n     <string name=\"play_queue_audio_settings\">Audio Settings</string>\n     <string name=\"hold_to_append\">Hold to enqueue</string>\n+    <string name=\"enqueue_stream\">Enqueue stream</string>\n     <string name=\"enqueue_on_background\">Enqueue in the background</string>\n     <string name=\"enqueue_on_popup\">Enqueue in a popup</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MjE3NQ=="}, "originalCommit": {"oid": "ed6fc4d848ba113c1087ca453541af08752e4316"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMyMzIxMw==", "bodyText": "@Stypox I can rename the enum, but I can't rename the string resource since there is also R.string,.enqueue (which value is \"Queue\"), so I'd keep the string resource as enqueue_stream but change the value to \"Enqueue\". Okay?", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500323213", "createdAt": "2020-10-06T14:18:29Z", "author": {"login": "vkay94"}, "path": "app/src/main/res/values/strings.xml", "diffHunk": "@@ -445,6 +445,7 @@\n     <string name=\"play_queue_stream_detail\">Details</string>\n     <string name=\"play_queue_audio_settings\">Audio Settings</string>\n     <string name=\"hold_to_append\">Hold to enqueue</string>\n+    <string name=\"enqueue_stream\">Enqueue stream</string>\n     <string name=\"enqueue_on_background\">Enqueue in the background</string>\n     <string name=\"enqueue_on_popup\">Enqueue in a popup</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MjE3NQ=="}, "originalCommit": {"oid": "ed6fc4d848ba113c1087ca453541af08752e4316"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMyNzU4NQ==", "bodyText": "Mmmh, having the value \"Queue\" for R.string.enqueue does not seem right, though changing it would create problems with translations. So yeah, do as you said ;-)", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500327585", "createdAt": "2020-10-06T14:22:54Z", "author": {"login": "Stypox"}, "path": "app/src/main/res/values/strings.xml", "diffHunk": "@@ -445,6 +445,7 @@\n     <string name=\"play_queue_stream_detail\">Details</string>\n     <string name=\"play_queue_audio_settings\">Audio Settings</string>\n     <string name=\"hold_to_append\">Hold to enqueue</string>\n+    <string name=\"enqueue_stream\">Enqueue stream</string>\n     <string name=\"enqueue_on_background\">Enqueue in the background</string>\n     <string name=\"enqueue_on_popup\">Enqueue in a popup</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MjE3NQ=="}, "originalCommit": {"oid": "ed6fc4d848ba113c1087ca453541af08752e4316"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM0MTk4MA==", "bodyText": "By the way, regarding strings:\nI just noticed that NavigationHelper#enqueueOnBackgroundPlayer and enqueueOnPopupPlayer show specific Toast-messages (R.string.popup_playing_append and R.string.background_player_append). They should be replaced/unified, too. For example with R.string.player_append. What do you think?", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500341980", "createdAt": "2020-10-06T14:37:42Z", "author": {"login": "vkay94"}, "path": "app/src/main/res/values/strings.xml", "diffHunk": "@@ -445,6 +445,7 @@\n     <string name=\"play_queue_stream_detail\">Details</string>\n     <string name=\"play_queue_audio_settings\">Audio Settings</string>\n     <string name=\"hold_to_append\">Hold to enqueue</string>\n+    <string name=\"enqueue_stream\">Enqueue stream</string>\n     <string name=\"enqueue_on_background\">Enqueue in the background</string>\n     <string name=\"enqueue_on_popup\">Enqueue in a popup</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MjE3NQ=="}, "originalCommit": {"oid": "ed6fc4d848ba113c1087ca453541af08752e4316"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM1OTgzMQ==", "bodyText": "Yup.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500359831", "createdAt": "2020-10-06T14:56:11Z", "author": {"login": "opusforlife2"}, "path": "app/src/main/res/values/strings.xml", "diffHunk": "@@ -445,6 +445,7 @@\n     <string name=\"play_queue_stream_detail\">Details</string>\n     <string name=\"play_queue_audio_settings\">Audio Settings</string>\n     <string name=\"hold_to_append\">Hold to enqueue</string>\n+    <string name=\"enqueue_stream\">Enqueue stream</string>\n     <string name=\"enqueue_on_background\">Enqueue in the background</string>\n     <string name=\"enqueue_on_popup\">Enqueue in a popup</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MjE3NQ=="}, "originalCommit": {"oid": "ed6fc4d848ba113c1087ca453541af08752e4316"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMzkxMDM4OnYy", "diffSide": "RIGHT", "path": "app/src/main/res/values/strings.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxODozNjoyN1rOHdVBRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOToxNTozMlrOHdWXIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUxNTE0Mw==", "bodyText": "Just use enqueued as the id, or is it already used?", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500515143", "createdAt": "2020-10-06T18:36:27Z", "author": {"login": "Stypox"}, "path": "app/src/main/res/values/strings.xml", "diffHunk": "@@ -445,8 +445,8 @@\n     <string name=\"play_queue_stream_detail\">Details</string>\n     <string name=\"play_queue_audio_settings\">Audio Settings</string>\n     <string name=\"hold_to_append\">Hold to enqueue</string>\n-    <string name=\"enqueue_on_background\">Enqueue in the background</string>\n-    <string name=\"enqueue_on_popup\">Enqueue in a popup</string>\n+    <string name=\"enqueue_stream\">Enqueue</string>\n+    <string name=\"player_append\">Enqueued</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12f615c6da39b7220569c5172899dc8e1c17bbd1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzNzEyMg==", "bodyText": "No, it's not used, I've just oriented on the other resources ;)", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500537122", "createdAt": "2020-10-06T19:15:32Z", "author": {"login": "vkay94"}, "path": "app/src/main/res/values/strings.xml", "diffHunk": "@@ -445,8 +445,8 @@\n     <string name=\"play_queue_stream_detail\">Details</string>\n     <string name=\"play_queue_audio_settings\">Audio Settings</string>\n     <string name=\"hold_to_append\">Hold to enqueue</string>\n-    <string name=\"enqueue_on_background\">Enqueue in the background</string>\n-    <string name=\"enqueue_on_popup\">Enqueue in a popup</string>\n+    <string name=\"enqueue_stream\">Enqueue</string>\n+    <string name=\"player_append\">Enqueued</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUxNTE0Mw=="}, "originalCommit": {"oid": "12f615c6da39b7220569c5172899dc8e1c17bbd1"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3108, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}