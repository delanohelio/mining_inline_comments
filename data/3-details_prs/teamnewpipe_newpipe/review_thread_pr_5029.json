{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MDMxODk4", "number": 5029, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQwODo1MjozMFrOE-XmvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNlQxMjo1ODowOFrOFPjQbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzODMzOTE3OnYy", "diffSide": "LEFT", "path": "app/src/main/res/layout-large-land/fragment_video_detail.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQwODo1MjozMFrOH7hg0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQxMTozNzo0M1rOH7it9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjE3NzEwNA==", "bodyText": "Wouldn't there be side-effects by just moving the id like this? I think tools:viewBindingIgnore=\"true\" would be safer since this layout doesn't need view binding anyway.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5029#discussion_r532177104", "createdAt": "2020-11-29T08:52:30Z", "author": {"login": "vkay94"}, "path": "app/src/main/res/layout-large-land/fragment_video_detail.xml", "diffHunk": "@@ -2,12 +2,12 @@\n <FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n     xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:id=\"@+id/video_item_detail\"\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\"\n     android:background=\"?attr/windowBackground\">\n \n     <LinearLayout\n-        android:id=\"@+id/video_item_detail\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fc7312edd0b9be104ad5805bdaa669846f78936"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjE4Nzk0OQ==", "bodyText": "I found that a compile error is generated even with tools:viewBindingIgnore=\"true\", and it's needed here anyway.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5029#discussion_r532187949", "createdAt": "2020-11-29T10:19:51Z", "author": {"login": "Isira-Seneviratne"}, "path": "app/src/main/res/layout-large-land/fragment_video_detail.xml", "diffHunk": "@@ -2,12 +2,12 @@\n <FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n     xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:id=\"@+id/video_item_detail\"\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\"\n     android:background=\"?attr/windowBackground\">\n \n     <LinearLayout\n-        android:id=\"@+id/video_item_detail\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjE3NzEwNA=="}, "originalCommit": {"oid": "4fc7312edd0b9be104ad5805bdaa669846f78936"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjE5Njg1Mg==", "bodyText": "Ah okay. If it's required later than it's the better approach. I'm just curious because the root layout also covers overlay_layout and there might be unexpected behavior if, for example, the visibility of video_item_detail  is changed (but I didn't look whether there is such case xD)", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5029#discussion_r532196852", "createdAt": "2020-11-29T11:37:43Z", "author": {"login": "vkay94"}, "path": "app/src/main/res/layout-large-land/fragment_video_detail.xml", "diffHunk": "@@ -2,12 +2,12 @@\n <FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n     xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:id=\"@+id/video_item_detail\"\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\"\n     android:background=\"?attr/windowBackground\">\n \n     <LinearLayout\n-        android:id=\"@+id/video_item_detail\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjE3NzEwNA=="}, "originalCommit": {"oid": "4fc7312edd0b9be104ad5805bdaa669846f78936"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxODE0Njk0OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/local/subscription/item/ChannelItem.kt", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNlQwNzo0MDowOVrOIU7wdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNlQxNzoxNDoxN1rOIVEs5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODgyMTQ5Mg==", "bodyText": "Why don't you use view binding here?", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5029#discussion_r558821492", "createdAt": "2021-01-16T07:40:09Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/local/subscription/item/ChannelItem.kt", "diffHunk": "@@ -32,18 +29,25 @@ class ChannelItem(\n     }\n \n     override fun bind(viewHolder: GroupieViewHolder, position: Int) {\n-        viewHolder.itemTitleView.text = infoItem.name\n-        viewHolder.itemAdditionalDetails.text = getDetailLine(viewHolder.root.context)\n-        if (itemVersion == ItemVersion.NORMAL) viewHolder.itemChannelDescriptionView.text = infoItem.description\n+        val itemTitleView = viewHolder.root.findViewById<TextView>(R.id.itemTitleView)\n+        val itemAdditionalDetails = viewHolder.root.findViewById<TextView>(R.id.itemAdditionalDetails)\n+        val itemChannelDescriptionView = viewHolder.root.findViewById<TextView>(R.id.itemChannelDescriptionView)\n+        val itemThumbnailView = viewHolder.root.findViewById<ImageView>(R.id.itemThumbnailView)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c0dfcdd355c8877e699c2faad68f3ee47d443c0"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODg1Nzk3OQ==", "bodyText": "@Stypox This change was the first attempt to switch from the deprecated Android-Kotlin-Extensions. As you can see this class uses the \"default\" Item class. @Isira-Seneviratne This class should extend from the BindableItem too as the other classes do.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5029#discussion_r558857979", "createdAt": "2021-01-16T12:27:31Z", "author": {"login": "vkay94"}, "path": "app/src/main/java/org/schabi/newpipe/local/subscription/item/ChannelItem.kt", "diffHunk": "@@ -32,18 +29,25 @@ class ChannelItem(\n     }\n \n     override fun bind(viewHolder: GroupieViewHolder, position: Int) {\n-        viewHolder.itemTitleView.text = infoItem.name\n-        viewHolder.itemAdditionalDetails.text = getDetailLine(viewHolder.root.context)\n-        if (itemVersion == ItemVersion.NORMAL) viewHolder.itemChannelDescriptionView.text = infoItem.description\n+        val itemTitleView = viewHolder.root.findViewById<TextView>(R.id.itemTitleView)\n+        val itemAdditionalDetails = viewHolder.root.findViewById<TextView>(R.id.itemAdditionalDetails)\n+        val itemChannelDescriptionView = viewHolder.root.findViewById<TextView>(R.id.itemChannelDescriptionView)\n+        val itemThumbnailView = viewHolder.root.findViewById<ImageView>(R.id.itemThumbnailView)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODgyMTQ5Mg=="}, "originalCommit": {"oid": "7c0dfcdd355c8877e699c2faad68f3ee47d443c0"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODg4MTg2OA==", "bodyText": "What should be used as the generic parameter? There are three possible layouts.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5029#discussion_r558881868", "createdAt": "2021-01-16T13:27:42Z", "author": {"login": "Isira-Seneviratne"}, "path": "app/src/main/java/org/schabi/newpipe/local/subscription/item/ChannelItem.kt", "diffHunk": "@@ -32,18 +29,25 @@ class ChannelItem(\n     }\n \n     override fun bind(viewHolder: GroupieViewHolder, position: Int) {\n-        viewHolder.itemTitleView.text = infoItem.name\n-        viewHolder.itemAdditionalDetails.text = getDetailLine(viewHolder.root.context)\n-        if (itemVersion == ItemVersion.NORMAL) viewHolder.itemChannelDescriptionView.text = infoItem.description\n+        val itemTitleView = viewHolder.root.findViewById<TextView>(R.id.itemTitleView)\n+        val itemAdditionalDetails = viewHolder.root.findViewById<TextView>(R.id.itemAdditionalDetails)\n+        val itemChannelDescriptionView = viewHolder.root.findViewById<TextView>(R.id.itemChannelDescriptionView)\n+        val itemThumbnailView = viewHolder.root.findViewById<ImageView>(R.id.itemThumbnailView)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODgyMTQ5Mg=="}, "originalCommit": {"oid": "7c0dfcdd355c8877e699c2faad68f3ee47d443c0"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODg4NjI0Nw==", "bodyText": "Ah right, that was the point back then. Ignore my above comment :')", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5029#discussion_r558886247", "createdAt": "2021-01-16T13:39:01Z", "author": {"login": "vkay94"}, "path": "app/src/main/java/org/schabi/newpipe/local/subscription/item/ChannelItem.kt", "diffHunk": "@@ -32,18 +29,25 @@ class ChannelItem(\n     }\n \n     override fun bind(viewHolder: GroupieViewHolder, position: Int) {\n-        viewHolder.itemTitleView.text = infoItem.name\n-        viewHolder.itemAdditionalDetails.text = getDetailLine(viewHolder.root.context)\n-        if (itemVersion == ItemVersion.NORMAL) viewHolder.itemChannelDescriptionView.text = infoItem.description\n+        val itemTitleView = viewHolder.root.findViewById<TextView>(R.id.itemTitleView)\n+        val itemAdditionalDetails = viewHolder.root.findViewById<TextView>(R.id.itemAdditionalDetails)\n+        val itemChannelDescriptionView = viewHolder.root.findViewById<TextView>(R.id.itemChannelDescriptionView)\n+        val itemThumbnailView = viewHolder.root.findViewById<ImageView>(R.id.itemThumbnailView)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODgyMTQ5Mg=="}, "originalCommit": {"oid": "7c0dfcdd355c8877e699c2faad68f3ee47d443c0"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODk2ODAzNw==", "bodyText": "Oh, I see", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5029#discussion_r558968037", "createdAt": "2021-01-16T17:14:17Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/local/subscription/item/ChannelItem.kt", "diffHunk": "@@ -32,18 +29,25 @@ class ChannelItem(\n     }\n \n     override fun bind(viewHolder: GroupieViewHolder, position: Int) {\n-        viewHolder.itemTitleView.text = infoItem.name\n-        viewHolder.itemAdditionalDetails.text = getDetailLine(viewHolder.root.context)\n-        if (itemVersion == ItemVersion.NORMAL) viewHolder.itemChannelDescriptionView.text = infoItem.description\n+        val itemTitleView = viewHolder.root.findViewById<TextView>(R.id.itemTitleView)\n+        val itemAdditionalDetails = viewHolder.root.findViewById<TextView>(R.id.itemAdditionalDetails)\n+        val itemChannelDescriptionView = viewHolder.root.findViewById<TextView>(R.id.itemChannelDescriptionView)\n+        val itemThumbnailView = viewHolder.root.findViewById<ImageView>(R.id.itemThumbnailView)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODgyMTQ5Mg=="}, "originalCommit": {"oid": "7c0dfcdd355c8877e699c2faad68f3ee47d443c0"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxODUwNjA1OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/local/subscription/item/PickerSubscriptionItem.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNlQxMjo1ODowOFrOIU-udA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNlQxMjo1ODowOFrOIU-udA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODg3MDEzMg==", "bodyText": "You could use apply to reduce some code:\nviewholder.binding.selectedHighlight.apply {\n    animate().setListener(null).cancel()\n    isGone = true\n    alpha = 1F\n}", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5029#discussion_r558870132", "createdAt": "2021-01-16T12:58:08Z", "author": {"login": "vkay94"}, "path": "app/src/main/java/org/schabi/newpipe/local/subscription/item/PickerSubscriptionItem.kt", "diffHunk": "@@ -1,46 +1,50 @@\n package org.schabi.newpipe.local.subscription.item\n \n import android.view.View\n+import androidx.core.view.isGone\n import androidx.core.view.isVisible\n import com.nostra13.universalimageloader.core.ImageLoader\n-import com.xwray.groupie.kotlinandroidextensions.GroupieViewHolder\n-import com.xwray.groupie.kotlinandroidextensions.Item\n-import kotlinx.android.synthetic.main.picker_subscription_item.*\n-import kotlinx.android.synthetic.main.picker_subscription_item.view.*\n+import com.xwray.groupie.viewbinding.BindableItem\n+import com.xwray.groupie.viewbinding.GroupieViewHolder\n import org.schabi.newpipe.R\n import org.schabi.newpipe.database.subscription.SubscriptionEntity\n+import org.schabi.newpipe.databinding.PickerSubscriptionItemBinding\n import org.schabi.newpipe.ktx.AnimationType\n import org.schabi.newpipe.ktx.animate\n import org.schabi.newpipe.util.ImageDisplayConstants\n \n data class PickerSubscriptionItem(\n     val subscriptionEntity: SubscriptionEntity,\n     var isSelected: Boolean = false\n-) : Item() {\n+) : BindableItem<PickerSubscriptionItemBinding>() {\n     override fun getId(): Long = subscriptionEntity.uid\n     override fun getLayout(): Int = R.layout.picker_subscription_item\n     override fun getSpanSize(spanCount: Int, position: Int): Int = 1\n \n-    override fun bind(viewHolder: GroupieViewHolder, position: Int) {\n+    override fun bind(viewBinding: PickerSubscriptionItemBinding, position: Int) {\n         ImageLoader.getInstance().displayImage(\n             subscriptionEntity.avatarUrl,\n-            viewHolder.thumbnail_view, ImageDisplayConstants.DISPLAY_AVATAR_OPTIONS\n+            viewBinding.thumbnailView, ImageDisplayConstants.DISPLAY_AVATAR_OPTIONS\n         )\n \n-        viewHolder.title_view.text = subscriptionEntity.name\n-        viewHolder.selected_highlight.isVisible = isSelected\n+        viewBinding.titleView.text = subscriptionEntity.name\n+        viewBinding.selectedHighlight.isVisible = isSelected\n     }\n \n-    override fun unbind(viewHolder: GroupieViewHolder) {\n+    override fun unbind(viewHolder: GroupieViewHolder<PickerSubscriptionItemBinding>) {\n         super.unbind(viewHolder)\n \n-        viewHolder.selected_highlight.animate().setListener(null).cancel()\n-        viewHolder.selected_highlight.visibility = View.GONE\n-        viewHolder.selected_highlight.alpha = 1F\n+        val binding = viewHolder.binding\n+        binding.selectedHighlight.animate().setListener(null).cancel()\n+        binding.selectedHighlight.isGone = true\n+        binding.selectedHighlight.alpha = 1F", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb56b65f5ec2a46dd04af162d61b0a32351b9d61"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3003, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}