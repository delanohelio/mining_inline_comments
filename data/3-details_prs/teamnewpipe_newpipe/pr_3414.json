{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMDAwODAw", "number": 3414, "title": "Fix ReCaptcha Activity for another type of recaptcha page", "bodyText": "What is it?\n\n Bug fix (user facing)\n Feature (user facing)\n Code base improvement (dev facing)\n Meta improvement to the project (dev facing)\n\nDescription of the changes in your PR\n\nTry to get cookies from pages even when they start loading, because non-html pages like ones with pbj=1 never stop loading.\nTry to extract the cookie directly from the redirection url, by looking at the field google_abuse=.\nAdd GOOGLE_ABUSE_EXEMPTION= to the youtube recaptcha cookies.\nStore cookies into shared preferences so that the user does not have to solve a recaptcha every time he opens the app\n\nFixes the following issue(s)\nFixes #3134 fixes #3272 fixes #3418 fixes #3310\nTesting apk\n@mehedihasanziku @baraa272 @LargePrime @tusch001 could you test this, if recaptchas still pop up for you? Also, @Ristovski, even though I didn't change anything about webviews, could you test, too?\nNewPipe_recaptcha-debug_1.zip\nAgreement\n\n I carefully read the contribution guidelines and agree to them.", "createdAt": "2020-04-10T17:41:18Z", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3414", "merged": true, "mergeCommit": {"oid": "8e9b1b7213f0d6721f81e03e6ddb2751451aa7b1"}, "closed": true, "closedAt": "2020-04-19T17:49:02Z", "author": {"login": "Stypox"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWinrwABqjMyMjM4ODkyMjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZOOkDAFqTM5NjA0NDMxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e721702078f1184d2ec58ec7f8e2d7c9dc32f741", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/e721702078f1184d2ec58ec7f8e2d7c9dc32f741", "committedDate": "2020-04-10T16:49:28Z", "message": "Fix recaptcha activity for another type of recaptcha page\n\nTry to get cookies from pages even when they start loading, because non-html pages like ones with `pbj=1` never stop loading.\nTry to extract the cookie directly from the redirection url, by looking at the field \"google_abuse=\".\nAdd `GOOGLE_ABUSE_EXEMPTION=` to the youtube recaptcha cookies."}, "afterCommit": {"oid": "bd0d7ce06d89d0f3b13715c75a796b8ca8f44bd6", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/bd0d7ce06d89d0f3b13715c75a796b8ca8f44bd6", "committedDate": "2020-04-11T09:51:40Z", "message": "Save and restore cookies to/from preferences\n\nSo that the user does not have to solve a recaptcha every time he opens the app"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzk3MDMz", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3414#pullrequestreview-391797033", "createdAt": "2020-04-11T20:10:46Z", "commit": {"oid": "bd0d7ce06d89d0f3b13715c75a796b8ca8f44bd6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQyMDoxMDo0NlrOGEPw4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQyMDoxMDo0NlrOGEPw4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEwNTc2MA==", "bodyText": "Is that information useful to find further cookies? We might want to show a snackbar to allow reporting the error and more importantly, the url", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3414#discussion_r407105760", "createdAt": "2020-04-11T20:10:46Z", "author": {"login": "TobiGr"}, "path": "app/src/main/java/org/schabi/newpipe/ReCaptchaActivity.java", "diffHunk": "@@ -137,23 +178,54 @@ private void saveCookiesAndFinish() {\n     }\n \n \n-    private void handleCookies(final String url) {\n+    private void handleCookiesFromUrl(final @Nullable String url) {\n+        if (MainActivity.DEBUG) {\n+            Log.d(TAG, \"handleCookiesFromUrl: url=\" + (url == null ? \"null\" : url));\n+        }\n+\n+        if (url == null) {\n+            return;\n+        }\n+\n         String cookies = CookieManager.getInstance().getCookie(url);\n+        handleCookies(cookies);\n+\n+        // sometimes cookies are inside the url\n+        int abuseStart = url.indexOf(\"google_abuse=\");\n+        if (abuseStart != -1) {\n+            int abuseEnd = url.indexOf(\"+path\");\n+\n+            try {\n+                String abuseCookie = url.substring(abuseStart + 13, abuseEnd);\n+                abuseCookie = URLDecoder.decode(abuseCookie, \"UTF-8\");\n+                handleCookies(abuseCookie);\n+            } catch (UnsupportedEncodingException | StringIndexOutOfBoundsException e) {\n+                if (MainActivity.DEBUG) {\n+                    e.printStackTrace();\n+                    Log.d(TAG, \"handleCookiesFromUrl: invalid google abuse starting at \"\n+                            + abuseStart + \" and ending at \" + abuseEnd + \" for url \" + url);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd0d7ce06d89d0f3b13715c75a796b8ca8f44bd6"}, "originalPosition": 118}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNjMxOTgx", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3414#pullrequestreview-393631981", "createdAt": "2020-04-15T10:03:17Z", "commit": {"oid": "bd0d7ce06d89d0f3b13715c75a796b8ca8f44bd6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDowMzoxN1rOGFysbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDowMzoxN1rOGFysbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcyNjYzOA==", "bodyText": "Why this change? We have final after the @s everywhere\u2026", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3414#discussion_r408726638", "createdAt": "2020-04-15T10:03:17Z", "author": {"login": "wb9688"}, "path": "app/src/main/java/org/schabi/newpipe/ReCaptchaActivity.java", "diffHunk": "@@ -137,23 +178,54 @@ private void saveCookiesAndFinish() {\n     }\n \n \n-    private void handleCookies(final String url) {\n+    private void handleCookiesFromUrl(final @Nullable String url) {\n+        if (MainActivity.DEBUG) {\n+            Log.d(TAG, \"handleCookiesFromUrl: url=\" + (url == null ? \"null\" : url));\n+        }\n+\n+        if (url == null) {\n+            return;\n+        }\n+\n         String cookies = CookieManager.getInstance().getCookie(url);\n+        handleCookies(cookies);\n+\n+        // sometimes cookies are inside the url\n+        int abuseStart = url.indexOf(\"google_abuse=\");\n+        if (abuseStart != -1) {\n+            int abuseEnd = url.indexOf(\"+path\");\n+\n+            try {\n+                String abuseCookie = url.substring(abuseStart + 13, abuseEnd);\n+                abuseCookie = URLDecoder.decode(abuseCookie, \"UTF-8\");\n+                handleCookies(abuseCookie);\n+            } catch (UnsupportedEncodingException | StringIndexOutOfBoundsException e) {\n+                if (MainActivity.DEBUG) {\n+                    e.printStackTrace();\n+                    Log.d(TAG, \"handleCookiesFromUrl: invalid google abuse starting at \"\n+                            + abuseStart + \" and ending at \" + abuseEnd + \" for url \" + url);\n+                }\n+            }\n+        }\n+    }\n+\n+    private void handleCookies(final @Nullable String cookies) {\n         if (MainActivity.DEBUG) {\n-            Log.d(TAG, \"handleCookies: \"\n-                    + \"url=\" + url + \"; cookies=\" + (cookies == null ? \"null\" : cookies));\n+            Log.d(TAG, \"handleCookies: cookies=\" + (cookies == null ? \"null\" : cookies));\n         }\n+\n         if (cookies == null) {\n             return;\n         }\n \n         addYoutubeCookies(cookies);\n-        // add other methods to extract cookies here\n+        // add here methods to extract cookies for other services\n     }\n \n-    private void addYoutubeCookies(@NonNull final String cookies) {\n+    private void addYoutubeCookies(final @NonNull String cookies) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd0d7ce06d89d0f3b13715c75a796b8ca8f44bd6"}, "originalPosition": 141}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2cbf40957eb2a0ebd0085bf0d504cb30ef3931b", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/e2cbf40957eb2a0ebd0085bf0d504cb30ef3931b", "committedDate": "2020-04-15T11:30:27Z", "message": "Fix recaptcha activity for another type of recaptcha page\n\nTry to get cookies from pages even when they start loading, because non-html pages like ones with `pbj=1` never stop loading.\nTry to extract the cookie directly from the redirection url, by looking at the field \"google_abuse=\".\nAdd `GOOGLE_ABUSE_EXEMPTION=` to the youtube recaptcha cookies."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8efef7c7a9f3fce8e57a5fb4f6cf1b0f5a3cfd3", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/b8efef7c7a9f3fce8e57a5fb4f6cf1b0f5a3cfd3", "committedDate": "2020-04-15T11:30:27Z", "message": "Remove duplicate check if cookies are already present"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee5ce0c8096cf735588b7b9d13bdc74d39f0f69d", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/ee5ce0c8096cf735588b7b9d13bdc74d39f0f69d", "committedDate": "2020-04-15T11:30:27Z", "message": "Save and restore cookies to/from preferences\n\n    So that the user does not have to solve a recaptcha every time he opens the app"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd0d7ce06d89d0f3b13715c75a796b8ca8f44bd6", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/bd0d7ce06d89d0f3b13715c75a796b8ca8f44bd6", "committedDate": "2020-04-11T09:51:40Z", "message": "Save and restore cookies to/from preferences\n\nSo that the user does not have to solve a recaptcha every time he opens the app"}, "afterCommit": {"oid": "ee5ce0c8096cf735588b7b9d13bdc74d39f0f69d", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/ee5ce0c8096cf735588b7b9d13bdc74d39f0f69d", "committedDate": "2020-04-15T11:30:27Z", "message": "Save and restore cookies to/from preferences\n\n    So that the user does not have to solve a recaptcha every time he opens the app"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MDQ0MzE2", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3414#pullrequestreview-396044316", "createdAt": "2020-04-19T17:48:46Z", "commit": {"oid": "ee5ce0c8096cf735588b7b9d13bdc74d39f0f69d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4144, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}