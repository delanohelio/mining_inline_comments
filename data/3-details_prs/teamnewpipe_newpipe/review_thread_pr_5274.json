{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NjE0Mzk2", "number": 5274, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNzozMToxN1rOFOxp5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNzo0ODoxM1rOFOyEJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxMDM3OTI1OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNzozMToxN1rOITvVDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNzozMToxN1rOITvVDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU2OTI5Mg==", "bodyText": "Remove this, I left it here accidentally", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5274#discussion_r557569292", "createdAt": "2021-01-14T17:31:17Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "diffHunk": "@@ -2837,39 +2851,89 @@ private void onQueueClicked() {\n         buildQueue();\n         //updatePlaybackButtons();//TODO verify this can be removed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "880daad3fe0e49858dc1e876f0bceb7535b33013"}, "originalPosition": 152}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxMDM5NDkxOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNzozNTozMFrOITveyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNzozNTozMFrOITveyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU3MTc4Nw==", "bodyText": "Change\n    /*//////////////////////////////////////////////////////////////////////////\n    // Play queue and streams\n    //////////////////////////////////////////////////////////////////////////*/\n\ninto\n    /*//////////////////////////////////////////////////////////////////////////\n    // Play queue, segments and streams\n    //////////////////////////////////////////////////////////////////////////*/\n\nabove here", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5274#discussion_r557571787", "createdAt": "2021-01-14T17:35:30Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "diffHunk": "@@ -2837,39 +2851,89 @@ private void onQueueClicked() {\n         buildQueue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "880daad3fe0e49858dc1e876f0bceb7535b33013"}, "originalPosition": 151}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxMDQxMDAwOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNzozOToxM1rOITvn4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxODo1Njo1NVrOITyYKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU3NDExNQ==", "bodyText": "Just to make sure: is it possible that the first segment does not start at 0:00? In that case the result of this function would be wrong when the progress is 0:00, since the first segment has yet to start. Maybe no item should be selected in the adapter in that case?", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5274#discussion_r557574115", "createdAt": "2021-01-14T17:39:13Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "diffHunk": "@@ -2882,12 +2946,33 @@ public void onScrolledDown(final RecyclerView recyclerView) {\n                 if (playQueue != null && !playQueue.isComplete()) {\n                     playQueue.fetch();\n                 } else if (binding != null) {\n-                    binding.playQueue.clearOnScrollListeners();\n+                    binding.itemsList.clearOnScrollListeners();\n                 }\n             }\n         };\n     }\n \n+    private StreamSegmentAdapter.StreamSegmentListener getStreamSegmentListener() {\n+        return (item, seconds) -> {\n+            segmentAdapter.selectSegment(item);\n+            seekTo(seconds * 1000);\n+            triggerProgressUpdate();\n+        };\n+    }\n+\n+    private int getNearestStreamSegmentPosition(final long playbackPosition) {\n+        int nearestPosition = 0;\n+        final List<StreamSegment> segments = currentMetadata.getMetadata().getStreamSegments();\n+\n+        for (int i = 0; i < segments.size(); i++) {\n+            if (segments.get(i).getStartTimeSeconds() * 1000 > playbackPosition) {\n+                break;\n+            }\n+            nearestPosition++;\n+        }\n+        return Math.max(0, nearestPosition - 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "880daad3fe0e49858dc1e876f0bceb7535b33013"}, "originalPosition": 284}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzYwNTI1MQ==", "bodyText": "I ran multiple checks myself when I added the functionality to the extractor by uploading a video and playing around. The chapters are only available if the description contains 0:00, so it's always starting from the beginning.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5274#discussion_r557605251", "createdAt": "2021-01-14T18:31:58Z", "author": {"login": "vkay94"}, "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "diffHunk": "@@ -2882,12 +2946,33 @@ public void onScrolledDown(final RecyclerView recyclerView) {\n                 if (playQueue != null && !playQueue.isComplete()) {\n                     playQueue.fetch();\n                 } else if (binding != null) {\n-                    binding.playQueue.clearOnScrollListeners();\n+                    binding.itemsList.clearOnScrollListeners();\n                 }\n             }\n         };\n     }\n \n+    private StreamSegmentAdapter.StreamSegmentListener getStreamSegmentListener() {\n+        return (item, seconds) -> {\n+            segmentAdapter.selectSegment(item);\n+            seekTo(seconds * 1000);\n+            triggerProgressUpdate();\n+        };\n+    }\n+\n+    private int getNearestStreamSegmentPosition(final long playbackPosition) {\n+        int nearestPosition = 0;\n+        final List<StreamSegment> segments = currentMetadata.getMetadata().getStreamSegments();\n+\n+        for (int i = 0; i < segments.size(); i++) {\n+            if (segments.get(i).getStartTimeSeconds() * 1000 > playbackPosition) {\n+                break;\n+            }\n+            nearestPosition++;\n+        }\n+        return Math.max(0, nearestPosition - 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU3NDExNQ=="}, "originalCommit": {"oid": "880daad3fe0e49858dc1e876f0bceb7535b33013"}, "originalPosition": 284}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzYxOTI0MA==", "bodyText": "Ok, great, then this is good", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5274#discussion_r557619240", "createdAt": "2021-01-14T18:56:55Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "diffHunk": "@@ -2882,12 +2946,33 @@ public void onScrolledDown(final RecyclerView recyclerView) {\n                 if (playQueue != null && !playQueue.isComplete()) {\n                     playQueue.fetch();\n                 } else if (binding != null) {\n-                    binding.playQueue.clearOnScrollListeners();\n+                    binding.itemsList.clearOnScrollListeners();\n                 }\n             }\n         };\n     }\n \n+    private StreamSegmentAdapter.StreamSegmentListener getStreamSegmentListener() {\n+        return (item, seconds) -> {\n+            segmentAdapter.selectSegment(item);\n+            seekTo(seconds * 1000);\n+            triggerProgressUpdate();\n+        };\n+    }\n+\n+    private int getNearestStreamSegmentPosition(final long playbackPosition) {\n+        int nearestPosition = 0;\n+        final List<StreamSegment> segments = currentMetadata.getMetadata().getStreamSegments();\n+\n+        for (int i = 0; i < segments.size(); i++) {\n+            if (segments.get(i).getStartTimeSeconds() * 1000 > playbackPosition) {\n+                break;\n+            }\n+            nearestPosition++;\n+        }\n+        return Math.max(0, nearestPosition - 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU3NDExNQ=="}, "originalCommit": {"oid": "880daad3fe0e49858dc1e876f0bceb7535b33013"}, "originalPosition": 284}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxMDQyMzE1OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNzo0MjoyNVrOITvv1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxOToyMzoxMlrOITzWlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU3NjE0OQ==", "bodyText": "Maybe wrap everything in a if (areSegmentsVisible), to make it clearer:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (currentMetadata != null && areSegmentsVisible\n          \n          \n            \n                            && segmentAdapter.setItems(currentMetadata.getMetadata())) {\n          \n          \n            \n                        final int adapterPosition = getNearestStreamSegmentPosition(\n          \n          \n            \n                                simpleExoPlayer.getCurrentPosition());\n          \n          \n            \n                        segmentAdapter.selectSegmentAt(adapterPosition);\n          \n          \n            \n                        binding.itemsList.scrollToPosition(adapterPosition);\n          \n          \n            \n                    } else if (areSegmentsVisible) {\n          \n          \n            \n                        closeItemsList();\n          \n          \n            \n                    }\n          \n          \n            \n                    if (areSegmentsVisible) {\n          \n          \n            \n                        if (currentMetadata != null\n          \n          \n            \n                                && segmentAdapter.setItems(currentMetadata.getMetadata())) {\n          \n          \n            \n                            final int adapterPosition = getNearestStreamSegmentPosition(\n          \n          \n            \n                                    simpleExoPlayer.getCurrentPosition());\n          \n          \n            \n                            segmentAdapter.selectSegmentAt(adapterPosition);\n          \n          \n            \n                            binding.itemsList.scrollToPosition(adapterPosition);\n          \n          \n            \n                        } else {\n          \n          \n            \n                            closeItemsList();\n          \n          \n            \n                        }\n          \n          \n            \n                    }", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5274#discussion_r557576149", "createdAt": "2021-01-14T17:42:25Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "diffHunk": "@@ -3736,6 +3824,15 @@ private void notifyMetadataUpdateToListeners() {\n         if (activityListener != null && currentMetadata != null) {\n             activityListener.onMetadataUpdate(currentMetadata.getMetadata(), playQueue);\n         }\n+        if (currentMetadata != null && areSegmentsVisible\n+                && segmentAdapter.setItems(currentMetadata.getMetadata())) {\n+            final int adapterPosition = getNearestStreamSegmentPosition(\n+                    simpleExoPlayer.getCurrentPosition());\n+            segmentAdapter.selectSegmentAt(adapterPosition);\n+            binding.itemsList.scrollToPosition(adapterPosition);\n+        } else if (areSegmentsVisible) {\n+            closeItemsList();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "880daad3fe0e49858dc1e876f0bceb7535b33013"}, "originalPosition": 346}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzYzNTIyMw==", "bodyText": "Okay. I'll also move this code snippet - like the other one - to the upper method onMetadataChanged (it also provides the MetaInfo directly, no null checks required) (the placements are from the previous code before rebasing :') )", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5274#discussion_r557635223", "createdAt": "2021-01-14T19:23:12Z", "author": {"login": "vkay94"}, "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "diffHunk": "@@ -3736,6 +3824,15 @@ private void notifyMetadataUpdateToListeners() {\n         if (activityListener != null && currentMetadata != null) {\n             activityListener.onMetadataUpdate(currentMetadata.getMetadata(), playQueue);\n         }\n+        if (currentMetadata != null && areSegmentsVisible\n+                && segmentAdapter.setItems(currentMetadata.getMetadata())) {\n+            final int adapterPosition = getNearestStreamSegmentPosition(\n+                    simpleExoPlayer.getCurrentPosition());\n+            segmentAdapter.selectSegmentAt(adapterPosition);\n+            binding.itemsList.scrollToPosition(adapterPosition);\n+        } else if (areSegmentsVisible) {\n+            closeItemsList();\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU3NjE0OQ=="}, "originalCommit": {"oid": "880daad3fe0e49858dc1e876f0bceb7535b33013"}, "originalPosition": 346}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxMDQyNzQzOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNzo0MzozMVrOITvylw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxODozODo1NFrOITxwrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU3Njg1NQ==", "bodyText": "This is not a listener, so I don't think this piece of code should be here, but maybe I'm wrong", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5274#discussion_r557576855", "createdAt": "2021-01-14T17:43:31Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "diffHunk": "@@ -3758,6 +3855,9 @@ private void notifyProgressUpdateToListeners(final int currentProgress,\n         if (activityListener != null) {\n             activityListener.onProgressUpdate(currentProgress, duration, bufferPercent);\n         }\n+        if (areSegmentsVisible) {\n+            segmentAdapter.selectSegmentAt(getNearestStreamSegmentPosition(currentProgress));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "880daad3fe0e49858dc1e876f0bceb7535b33013"}, "originalPosition": 356}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzYwOTEzNQ==", "bodyText": "In fact, you're right, I'll move it to the \"parent\" method (onUpdateProgress), should be better.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5274#discussion_r557609135", "createdAt": "2021-01-14T18:38:54Z", "author": {"login": "vkay94"}, "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "diffHunk": "@@ -3758,6 +3855,9 @@ private void notifyProgressUpdateToListeners(final int currentProgress,\n         if (activityListener != null) {\n             activityListener.onProgressUpdate(currentProgress, duration, bufferPercent);\n         }\n+        if (areSegmentsVisible) {\n+            segmentAdapter.selectSegmentAt(getNearestStreamSegmentPosition(currentProgress));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU3Njg1NQ=="}, "originalCommit": {"oid": "880daad3fe0e49858dc1e876f0bceb7535b33013"}, "originalPosition": 356}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxMDQ0NjQ2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/info_list/StreamSegmentItem.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNzo0ODoxM1rOITv-GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxODo0NDo1NlrOITx-HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU3OTgwMQ==", "bodyText": "This can probably be moved somewhere else, like in LocalizationUtils (or whatever that file is called). And a localized & standard timestamp should probably be generated by building a LocalDateTime and then formatting it using one of the default option. I'm not completely sure about this though, @B0pol do you have any opinion?", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5274#discussion_r557579801", "createdAt": "2021-01-14T17:48:13Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/info_list/StreamSegmentItem.kt", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.schabi.newpipe.info_list\n+\n+import android.widget.ImageView\n+import android.widget.TextView\n+import com.nostra13.universalimageloader.core.ImageLoader\n+import com.xwray.groupie.GroupieViewHolder\n+import com.xwray.groupie.Item\n+import org.schabi.newpipe.R\n+import org.schabi.newpipe.extractor.stream.StreamSegment\n+import org.schabi.newpipe.util.ImageDisplayConstants\n+import java.util.concurrent.TimeUnit\n+\n+class StreamSegmentItem(\n+    private val item: StreamSegment,\n+    private val onClick: StreamSegmentAdapter.StreamSegmentListener\n+) : Item<GroupieViewHolder>() {\n+\n+    companion object {\n+        const val PAYLOAD_SELECT = 1\n+    }\n+\n+    var isSelected = false\n+\n+    override fun bind(viewHolder: GroupieViewHolder, position: Int) {\n+        item.previewUrl?.let {\n+            ImageLoader.getInstance().displayImage(\n+                it, viewHolder.root.findViewById<ImageView>(R.id.previewImage),\n+                ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS\n+            )\n+        }\n+        viewHolder.root.findViewById<TextView>(R.id.textViewTitle).text = item.title\n+        viewHolder.root.findViewById<TextView>(R.id.textViewStartSeconds).text =\n+            secondsToString(item.startTimeSeconds.toLong())\n+        viewHolder.root.setOnClickListener { onClick.onItemClick(this, item.startTimeSeconds) }\n+        viewHolder.root.isSelected = isSelected\n+    }\n+\n+    override fun bind(viewHolder: GroupieViewHolder, position: Int, payloads: MutableList<Any>) {\n+        if (payloads.contains(PAYLOAD_SELECT)) {\n+            viewHolder.root.isSelected = isSelected\n+            return\n+        }\n+        super.bind(viewHolder, position, payloads)\n+    }\n+\n+    private fun secondsToString(seconds: Long): String {\n+        val hours = TimeUnit.SECONDS.toHours(seconds)\n+        val minutes = TimeUnit.SECONDS.toMinutes(seconds)\n+            .minus(TimeUnit.HOURS.toMinutes(hours))\n+        val sec = seconds\n+            .minus(TimeUnit.HOURS.toSeconds(hours))\n+            .minus(TimeUnit.MINUTES.toSeconds(minutes))\n+\n+        return if (hours == 0L) String.format(\"%02d:%02d\", minutes, sec)\n+        else String.format(\"%d:%02d:%02d\", hours, minutes, sec)\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "880daad3fe0e49858dc1e876f0bceb7535b33013"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzYxMjU3Mg==", "bodyText": "I've looked it up and there is a method in the utils package which does the job (Localization#getDurationString(final long duration)). I'll use that method instead.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5274#discussion_r557612572", "createdAt": "2021-01-14T18:44:56Z", "author": {"login": "vkay94"}, "path": "app/src/main/java/org/schabi/newpipe/info_list/StreamSegmentItem.kt", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.schabi.newpipe.info_list\n+\n+import android.widget.ImageView\n+import android.widget.TextView\n+import com.nostra13.universalimageloader.core.ImageLoader\n+import com.xwray.groupie.GroupieViewHolder\n+import com.xwray.groupie.Item\n+import org.schabi.newpipe.R\n+import org.schabi.newpipe.extractor.stream.StreamSegment\n+import org.schabi.newpipe.util.ImageDisplayConstants\n+import java.util.concurrent.TimeUnit\n+\n+class StreamSegmentItem(\n+    private val item: StreamSegment,\n+    private val onClick: StreamSegmentAdapter.StreamSegmentListener\n+) : Item<GroupieViewHolder>() {\n+\n+    companion object {\n+        const val PAYLOAD_SELECT = 1\n+    }\n+\n+    var isSelected = false\n+\n+    override fun bind(viewHolder: GroupieViewHolder, position: Int) {\n+        item.previewUrl?.let {\n+            ImageLoader.getInstance().displayImage(\n+                it, viewHolder.root.findViewById<ImageView>(R.id.previewImage),\n+                ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS\n+            )\n+        }\n+        viewHolder.root.findViewById<TextView>(R.id.textViewTitle).text = item.title\n+        viewHolder.root.findViewById<TextView>(R.id.textViewStartSeconds).text =\n+            secondsToString(item.startTimeSeconds.toLong())\n+        viewHolder.root.setOnClickListener { onClick.onItemClick(this, item.startTimeSeconds) }\n+        viewHolder.root.isSelected = isSelected\n+    }\n+\n+    override fun bind(viewHolder: GroupieViewHolder, position: Int, payloads: MutableList<Any>) {\n+        if (payloads.contains(PAYLOAD_SELECT)) {\n+            viewHolder.root.isSelected = isSelected\n+            return\n+        }\n+        super.bind(viewHolder, position, payloads)\n+    }\n+\n+    private fun secondsToString(seconds: Long): String {\n+        val hours = TimeUnit.SECONDS.toHours(seconds)\n+        val minutes = TimeUnit.SECONDS.toMinutes(seconds)\n+            .minus(TimeUnit.HOURS.toMinutes(hours))\n+        val sec = seconds\n+            .minus(TimeUnit.HOURS.toSeconds(hours))\n+            .minus(TimeUnit.MINUTES.toSeconds(minutes))\n+\n+        return if (hours == 0L) String.format(\"%02d:%02d\", minutes, sec)\n+        else String.format(\"%d:%02d:%02d\", hours, minutes, sec)\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU3OTgwMQ=="}, "originalCommit": {"oid": "880daad3fe0e49858dc1e876f0bceb7535b33013"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2948, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}