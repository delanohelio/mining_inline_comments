{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MzA3ODk0", "number": 3546, "title": "Allow choosing which types of search suggestions to show", "bodyText": "What is it?\n\n Bug fix (user facing)\n Feature (user facing)\n Code base improvement (dev facing)\n Meta improvement to the project (dev facing)\n\nDescription of the changes in your PR\n\n\n\nThis PR replaces the switch preference to enable/disable all search suggestions with a multiselect one, so that the user can choose which types of search suggestions he likes: local, remote, both, none.\nSince the previous preference stored a boolean while the new one stores a Set<String>, I had to create a migration function and call it in NewPipeSettings.init(). If the previous value was true, both local and remote suggestions are activated, otherwise they are both deactivated. I testes this and it works both when updating the app and when importing a database with the old setting.\n\n\nFixes the following issue(s)\n\nfixes #3540\n\nTesting apk\n@anpic could you test if this option suits you?\napp-debug_1.zip\nAgreement\n\n I carefully read the contribution guidelines and agree to them.", "createdAt": "2020-05-06T20:08:25Z", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3546", "merged": true, "mergeCommit": {"oid": "a6d6ed647433603e86d227ba0c07cbbb31ffbbab"}, "closed": true, "closedAt": "2021-08-24T17:27:36Z", "author": {"login": "Stypox"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfhynKgFqTQwODYyNDgzNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABe3kzbrgFqTczNzQ5OTM4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjI0ODM1", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3546#pullrequestreview-408624835", "createdAt": "2020-05-09T07:59:53Z", "commit": {"oid": "ac5ea76168f0026fc9180edbf7d1c5ddff8cd940"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwNzo1OTo1M1rOGS5UiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwNzo1OTo1M1rOGS5UiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NjY5Ng==", "bodyText": "Why change this? For all of them, it's whatever_key without changes in whatever. We couldn't change the whatever either, as then a previously set setting would be back to its default.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3546#discussion_r422466696", "createdAt": "2020-05-09T07:59:53Z", "author": {"login": "wb9688"}, "path": "app/src/main/res/values/settings_keys.xml", "diffHunk": "@@ -158,7 +158,7 @@\n     <string name=\"caption_user_set_key\" translatable=\"false\">caption_user_set_key</string>\n \n     <!-- Content & History -->\n-    <string name=\"show_search_suggestions_key\" translatable=\"false\">show_search_suggestions</string>\n+    <string name=\"show_remote_search_suggestions_key\" translatable=\"false\">show_search_suggestions</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac5ea76168f0026fc9180edbf7d1c5ddff8cd940"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ac5ea76168f0026fc9180edbf7d1c5ddff8cd940", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/ac5ea76168f0026fc9180edbf7d1c5ddff8cd940", "committedDate": "2020-05-06T20:02:07Z", "message": "Show local search suggestions even when (remote) search suggestions are disabled"}, "afterCommit": {"oid": "add872b77563aa7b2be0682ee3af513abb39d081", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/add872b77563aa7b2be0682ee3af513abb39d081", "committedDate": "2020-06-28T13:52:53Z", "message": "Allow choosing which types of search suggestions to show\n\nlocal, remote, both, none\nReplacing the old on-off setting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMTY4NTY1", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3546#pullrequestreview-441168565", "createdAt": "2020-07-01T20:17:02Z", "commit": {"oid": "add872b77563aa7b2be0682ee3af513abb39d081"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMDoxNzowM1rOGr0ANQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMDoxNzowM1rOGr0ANQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5Mzk3Mw==", "bodyText": "I think we should do the migration process a little different. First of all, it is good to store the last used/started NewPipe version (or better version code). That should also help us when creating a welcome tour and showing changelogs in future versions, too.\nDepending on the last used version, we could do something like this:\nint lastStartedVersionCode = preferences.getInt(context.getString(R.string.last_started_newpipe_version_code), -1);\nif (lastStartedVersionCode < 951) { // version code for 0.19.6\n    // do migration here or call a method\n}\n// register later migrations here\nThe only thing we should figure out is how to differentiate between a new installation and a user updating. Both have not set last_started_newpipe_version_code, but a new installation does not need to run migrations. @wb9688 @B0pol @Stypox Any thoughts on this or suggestions for a different structure of the migration process?\nWe should update the last used version code if necessary at the end of \n  \n    \n      NewPipe/app/src/main/java/org/schabi/newpipe/App.java\n    \n    \n         Line 85\n      in\n      049c8f7\n    \n    \n    \n    \n\n        \n          \n           public void onCreate() {", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3546#discussion_r448593973", "createdAt": "2020-07-01T20:17:03Z", "author": {"login": "TobiGr"}, "path": "app/src/main/java/org/schabi/newpipe/settings/NewPipeSettings.java", "diffHunk": "@@ -50,6 +55,32 @@ public static void initSettings(final Context context) {\n         getAudioDownloadFolder(context);\n     }\n \n+    /**\n+     * Backward-compatibility: convert boolean search suggestions value to new multi-select list.\n+     * @param context the context to use to get shared preferences\n+     */\n+    private static void migrateSearchSuggestionsIfNeeded(final Context context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "add872b77563aa7b2be0682ee3af513abb39d081"}, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "add872b77563aa7b2be0682ee3af513abb39d081", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/add872b77563aa7b2be0682ee3af513abb39d081", "committedDate": "2020-06-28T13:52:53Z", "message": "Allow choosing which types of search suggestions to show\n\nlocal, remote, both, none\nReplacing the old on-off setting"}, "afterCommit": {"oid": "1e8e45b66c1e36c03410d871933c3f66743743cb", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/1e8e45b66c1e36c03410d871933c3f66743743cb", "committedDate": "2020-10-04T19:55:04Z", "message": "Allow choosing which types of search suggestions to show\n\nlocal, remote, both, none\nReplacing the old on-off setting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1e8e45b66c1e36c03410d871933c3f66743743cb", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/1e8e45b66c1e36c03410d871933c3f66743743cb", "committedDate": "2020-10-04T19:55:04Z", "message": "Allow choosing which types of search suggestions to show\n\nlocal, remote, both, none\nReplacing the old on-off setting"}, "afterCommit": {"oid": "91b371428658417ffdf6bbdc01fcc21c057b921b", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/91b371428658417ffdf6bbdc01fcc21c057b921b", "committedDate": "2020-10-04T20:14:35Z", "message": "Allow choosing which types of search suggestions to show\n\nlocal, remote, both, none\nReplacing the old on-off setting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "91b371428658417ffdf6bbdc01fcc21c057b921b", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/91b371428658417ffdf6bbdc01fcc21c057b921b", "committedDate": "2020-10-04T20:14:35Z", "message": "Allow choosing which types of search suggestions to show\n\nlocal, remote, both, none\nReplacing the old on-off setting"}, "afterCommit": {"oid": "28429b08e361ee2ea1d629e29c4a82f53478de13", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/28429b08e361ee2ea1d629e29c4a82f53478de13", "committedDate": "2020-11-01T10:03:11Z", "message": "Allow choosing which types of search suggestions to show\n\nlocal, remote, both, none\nReplacing the old on-off setting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28429b08e361ee2ea1d629e29c4a82f53478de13", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/28429b08e361ee2ea1d629e29c4a82f53478de13", "committedDate": "2020-11-01T10:03:11Z", "message": "Allow choosing which types of search suggestions to show\n\nlocal, remote, both, none\nReplacing the old on-off setting"}, "afterCommit": {"oid": "1f3619775cdd5e5b5be173564d9b3d463f0d0d8f", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/1f3619775cdd5e5b5be173564d9b3d463f0d0d8f", "committedDate": "2020-11-01T16:02:02Z", "message": "Allow choosing which types of search suggestions to show\n\nlocal, remote, both, none\nReplacing the old on-off setting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f3619775cdd5e5b5be173564d9b3d463f0d0d8f", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/1f3619775cdd5e5b5be173564d9b3d463f0d0d8f", "committedDate": "2020-11-01T16:02:02Z", "message": "Allow choosing which types of search suggestions to show\n\nlocal, remote, both, none\nReplacing the old on-off setting"}, "afterCommit": {"oid": "8ec6461f53b6a76390799247782426fa45803240", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/8ec6461f53b6a76390799247782426fa45803240", "committedDate": "2021-03-17T19:56:19Z", "message": "Allow choosing which types of search suggestions to show\n\nlocal, remote, both, none\nReplacing the old on-off setting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "464d29e16f730933c63f0c99c5c31868fa43a8bb", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/464d29e16f730933c63f0c99c5c31868fa43a8bb", "committedDate": "2021-03-17T20:36:02Z", "message": "Make sure not caused by interrupted io before showing suggestions error"}, "afterCommit": {"oid": "0e039ac869b2445ee0a9ef5fa2598ee5ef195a36", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/0e039ac869b2445ee0a9ef5fa2598ee5ef195a36", "committedDate": "2021-03-17T20:57:22Z", "message": "Do not show suggestions error snackbar for interrupted I/O"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE0Nzc3OTEy", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3546#pullrequestreview-614777912", "createdAt": "2021-03-17T20:57:23Z", "commit": {"oid": "464d29e16f730933c63f0c99c5c31868fa43a8bb"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xN1QyMDo1NzoyM1rOI4v9Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xN1QyMTowMjoyOFrOI4wJdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjM3Njg1NA==", "bodyText": "For better readability:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    return Observable.zip(getLocalSuggestionsObservable(query, 3),\n          \n          \n            \n                                            getRemoteSuggestionsObservable(query),\n          \n          \n            \n                                    return Observable.zip(\n          \n          \n            \n                                            getLocalSuggestionsObservable(query, 3),\n          \n          \n            \n                                            getRemoteSuggestionsObservable(query),", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3546#discussion_r596376854", "createdAt": "2021-03-17T20:57:23Z", "author": {"login": "TobiGr"}, "path": "app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java", "diffHunk": "@@ -723,69 +745,44 @@ private void initSuggestionObserver() {\n \n         suggestionDisposable = suggestionPublisher\n                 .debounce(SUGGESTIONS_DEBOUNCE, TimeUnit.MILLISECONDS)\n-                .startWithItem(searchString != null\n-                        ? searchString\n-                        : \"\")\n-                .filter(ss -> isSuggestionsEnabled)\n+                .startWithItem(searchString == null ? \"\" : searchString)\n                 .switchMap(query -> {\n-                    final Flowable<List<SearchHistoryEntry>> flowable = historyRecordManager\n-                            .getRelatedSearches(query, 3, 25);\n-                    final Observable<List<SuggestionItem>> local = flowable.toObservable()\n-                            .map(searchHistoryEntries -> {\n-                                final List<SuggestionItem> result = new ArrayList<>();\n-                                for (final SearchHistoryEntry entry : searchHistoryEntries) {\n-                                    result.add(new SuggestionItem(true, entry.getSearch()));\n-                                }\n-                                return result;\n-                            });\n-\n-                    if (query.length() < THRESHOLD_NETWORK_SUGGESTION) {\n-                        // Only pass through if the query length\n-                        // is equal or greater than THRESHOLD_NETWORK_SUGGESTION\n-                        return local.materialize();\n+                    // Only show remote suggestions if they are enabled in settings and\n+                    // the query length is at least THRESHOLD_NETWORK_SUGGESTION\n+                    final boolean shallShowRemoteSuggestionsNow = showRemoteSuggestions\n+                            && query.length() >= THRESHOLD_NETWORK_SUGGESTION;\n+\n+                    if (showLocalSuggestions && shallShowRemoteSuggestionsNow) {\n+                        return Observable.zip(getLocalSuggestionsObservable(query, 3),\n+                                getRemoteSuggestionsObservable(query),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "464d29e16f730933c63f0c99c5c31868fa43a8bb"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjM4MDAyMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                } else if (listNotification.isOnError() && listNotification.getError() != null\n          \n          \n            \n                                        && !ExceptionUtils.isInterruptedCaused(listNotification.getError())) {\n          \n          \n            \n                                } else if (listNotification.isOnError()\n          \n          \n            \n                                        && listNotification.getError() != null\n          \n          \n            \n                                        && !ExceptionUtils.isInterruptedCaused(listNotification.getError())) {", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3546#discussion_r596380023", "createdAt": "2021-03-17T21:02:28Z", "author": {"login": "TobiGr"}, "path": "app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java", "diffHunk": "@@ -723,70 +745,45 @@ private void initSuggestionObserver() {\n \n         suggestionDisposable = suggestionPublisher\n                 .debounce(SUGGESTIONS_DEBOUNCE, TimeUnit.MILLISECONDS)\n-                .startWithItem(searchString != null\n-                        ? searchString\n-                        : \"\")\n-                .filter(ss -> isSuggestionsEnabled)\n+                .startWithItem(searchString == null ? \"\" : searchString)\n                 .switchMap(query -> {\n-                    final Flowable<List<SearchHistoryEntry>> flowable = historyRecordManager\n-                            .getRelatedSearches(query, 3, 25);\n-                    final Observable<List<SuggestionItem>> local = flowable.toObservable()\n-                            .map(searchHistoryEntries -> {\n-                                final List<SuggestionItem> result = new ArrayList<>();\n-                                for (final SearchHistoryEntry entry : searchHistoryEntries) {\n-                                    result.add(new SuggestionItem(true, entry.getSearch()));\n-                                }\n-                                return result;\n-                            });\n-\n-                    if (query.length() < THRESHOLD_NETWORK_SUGGESTION) {\n-                        // Only pass through if the query length\n-                        // is equal or greater than THRESHOLD_NETWORK_SUGGESTION\n-                        return local.materialize();\n+                    // Only show remote suggestions if they are enabled in settings and\n+                    // the query length is at least THRESHOLD_NETWORK_SUGGESTION\n+                    final boolean shallShowRemoteSuggestionsNow = showRemoteSuggestions\n+                            && query.length() >= THRESHOLD_NETWORK_SUGGESTION;\n+\n+                    if (showLocalSuggestions && shallShowRemoteSuggestionsNow) {\n+                        return Observable.zip(getLocalSuggestionsObservable(query, 3),\n+                                getRemoteSuggestionsObservable(query),\n+                                (local, remote) -> {\n+                                    remote.removeIf(remoteItem -> local.stream().anyMatch(\n+                                            localItem -> localItem.equals(remoteItem)));\n+                                    local.addAll(remote);\n+                                    return local;\n+                                })\n+                                .materialize();\n+                    } else if (showLocalSuggestions) {\n+                        return getLocalSuggestionsObservable(query, 25)\n+                                .materialize();\n+                    } else if (shallShowRemoteSuggestionsNow) {\n+                        return getRemoteSuggestionsObservable(query)\n+                                .materialize();\n+                    } else {\n+                        return Single.fromCallable(Collections::<SuggestionItem>emptyList)\n+                                .toObservable()\n+                                .materialize();\n                     }\n-\n-                    final Observable<List<SuggestionItem>> network = ExtractorHelper\n-                            .suggestionsFor(serviceId, query)\n-                            .onErrorReturn(throwable -> {\n-                                if (!ExceptionUtils.isNetworkRelated(throwable)) {\n-                                    showSnackBarError(new ErrorInfo(throwable,\n-                                            UserAction.GET_SUGGESTIONS, searchString, serviceId));\n-                                }\n-                                return new ArrayList<>();\n-                            })\n-                            .toObservable()\n-                            .map(strings -> {\n-                                final List<SuggestionItem> result = new ArrayList<>();\n-                                for (final String entry : strings) {\n-                                    result.add(new SuggestionItem(false, entry));\n-                                }\n-                                return result;\n-                            });\n-\n-                    return Observable.zip(local, network, (localResult, networkResult) -> {\n-                        final List<SuggestionItem> result = new ArrayList<>();\n-                        if (localResult.size() > 0) {\n-                            result.addAll(localResult);\n-                        }\n-\n-                        // Remove duplicates\n-                        networkResult.removeIf(networkItem ->\n-                                localResult.stream().anyMatch(localItem ->\n-                                        localItem.query.equals(networkItem.query)));\n-\n-                        if (networkResult.size() > 0) {\n-                            result.addAll(networkResult);\n-                        }\n-                        return result;\n-                    }).materialize();\n                 })\n                 .subscribeOn(Schedulers.io())\n                 .observeOn(AndroidSchedulers.mainThread())\n                 .subscribe(listNotification -> {\n                     if (listNotification.isOnNext()) {\n-                        handleSuggestions(listNotification.getValue());\n-                    } else if (listNotification.isOnError()) {\n-                        showError(new ErrorInfo(listNotification.getError(),\n+                        if (listNotification.getValue() != null) {\n+                            handleSuggestions(listNotification.getValue());\n+                        }\n+                    } else if (listNotification.isOnError() && listNotification.getError() != null\n+                            && !ExceptionUtils.isInterruptedCaused(listNotification.getError())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e039ac869b2445ee0a9ef5fa2598ee5ef195a36"}, "originalPosition": 222}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0e039ac869b2445ee0a9ef5fa2598ee5ef195a36", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/0e039ac869b2445ee0a9ef5fa2598ee5ef195a36", "committedDate": "2021-03-17T20:57:22Z", "message": "Do not show suggestions error snackbar for interrupted I/O"}, "afterCommit": {"oid": "a9a11f99ddda4e764000348ab8d31e0b16ed5b1c", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/a9a11f99ddda4e764000348ab8d31e0b16ed5b1c", "committedDate": "2021-03-17T21:10:15Z", "message": "Do not show suggestions error snackbar for interrupted I/O\n\nFix formatting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a9a11f99ddda4e764000348ab8d31e0b16ed5b1c", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/a9a11f99ddda4e764000348ab8d31e0b16ed5b1c", "committedDate": "2021-03-17T21:10:15Z", "message": "Do not show suggestions error snackbar for interrupted I/O\n\nFix formatting"}, "afterCommit": {"oid": "e4bec24c5276fcffd6fb59315f37aed487eb5d95", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/e4bec24c5276fcffd6fb59315f37aed487eb5d95", "committedDate": "2021-06-15T20:29:12Z", "message": "Do not show suggestions error snackbar for interrupted I/O\n\nFix formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d33e7ab49a239d49f79a2c049699df5806a61a5", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/1d33e7ab49a239d49f79a2c049699df5806a61a5", "committedDate": "2021-08-24T16:16:16Z", "message": "Allow choosing which types of search suggestions to show\n\nlocal, remote, both, none\nReplacing the old on-off setting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d37ee1e0dc011e01c8a7c8508d182774b95f5720", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/d37ee1e0dc011e01c8a7c8508d182774b95f5720", "committedDate": "2021-08-24T16:16:17Z", "message": "First run migrations, then setDefaultValues, since the latter requires the correct types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87e7d959668d5f4f6dacb49be5ea06ee4eb64b92", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/87e7d959668d5f4f6dacb49be5ea06ee4eb64b92", "committedDate": "2021-08-24T16:16:17Z", "message": "Do not show suggestions error snackbar for interrupted I/O\n\nFix formatting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e4bec24c5276fcffd6fb59315f37aed487eb5d95", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/e4bec24c5276fcffd6fb59315f37aed487eb5d95", "committedDate": "2021-06-15T20:29:12Z", "message": "Do not show suggestions error snackbar for interrupted I/O\n\nFix formatting"}, "afterCommit": {"oid": "87e7d959668d5f4f6dacb49be5ea06ee4eb64b92", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipe/commit/87e7d959668d5f4f6dacb49be5ea06ee4eb64b92", "committedDate": "2021-08-24T16:16:17Z", "message": "Do not show suggestions error snackbar for interrupted I/O\n\nFix formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM3NDk5Mzgx", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3546#pullrequestreview-737499381", "createdAt": "2021-08-24T17:26:59Z", "commit": {"oid": "87e7d959668d5f4f6dacb49be5ea06ee4eb64b92"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4162, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}