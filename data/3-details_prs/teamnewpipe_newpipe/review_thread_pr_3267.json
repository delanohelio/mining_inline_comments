{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNTI5NTg2", "number": 3267, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMjozNTowMlrODrMTSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjozMTozMlrODrS9Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NjE2OTA0OnYy", "diffSide": "RIGHT", "path": "app/build.gradle", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMjozNTowMlrOF7Y9Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOToyNTo0MFrOF9g_xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzgxOTE1MQ==", "bodyText": "Why increase by 30? It was a coincidence that e.g. 0.18.7 was 870 and it should just be increased by 10 like always imho. However now it's already too late.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3267#discussion_r397819151", "createdAt": "2020-03-25T12:35:02Z", "author": {"login": "wb9688"}, "path": "app/build.gradle", "diffHunk": "@@ -12,8 +12,8 @@ android {\n         resValue \"string\", \"app_name\", \"NewPipe\"\n         minSdkVersion 19\n         targetSdkVersion 28\n-        versionCode 870\n-        versionName \"0.18.7\"\n+        versionCode 900", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b08ab5cc065b6a6a07cb6824c500bd095a5fb099"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAwNjYyOA==", "bodyText": "Why though? It's nice to be consistent. In fact, I would prefer 1910 for 0.19.1 and eventually, 10000 for 1.0.0. It's just symbolic.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3267#discussion_r398006628", "createdAt": "2020-03-25T16:45:40Z", "author": {"login": "opusforlife2"}, "path": "app/build.gradle", "diffHunk": "@@ -12,8 +12,8 @@ android {\n         resValue \"string\", \"app_name\", \"NewPipe\"\n         minSdkVersion 19\n         targetSdkVersion 28\n-        versionCode 870\n-        versionName \"0.18.7\"\n+        versionCode 900", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzgxOTE1MQ=="}, "originalCommit": {"oid": "b08ab5cc065b6a6a07cb6824c500bd095a5fb099"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAyNTU2Mg==", "bodyText": "Yeah. I agree with opus.\nI think we can do this when going 1.0.0 which should be soon after #2907 is merged", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3267#discussion_r398025562", "createdAt": "2020-03-25T17:11:08Z", "author": {"login": "TobiGr"}, "path": "app/build.gradle", "diffHunk": "@@ -12,8 +12,8 @@ android {\n         resValue \"string\", \"app_name\", \"NewPipe\"\n         minSdkVersion 19\n         targetSdkVersion 28\n-        versionCode 870\n-        versionName \"0.18.7\"\n+        versionCode 900", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzgxOTE1MQ=="}, "originalCommit": {"oid": "b08ab5cc065b6a6a07cb6824c500bd095a5fb099"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA2NjA0NA==", "bodyText": "Copy-paste of my argument on IRC:\n\nWith his 10000 example it's still not possible to give a \"correct\" version code for e.g. 1.0.10. I don't think we should have ridiculously long version codes, though that doesn't really matter since we probably won't hit the 32-bit limit that soon. Also, version codes are purely for Android to check whether an APK is newer than the currently installed one. Version codes aren't for users to see, that's what version names are for. Google says: \" Typically, you would release the first version of your app with versionCode set to 1, then monotonically increase the value with each release, regardless of whether the release constitutes a major or minor release. This means that the versionCode value does not necessarily have a strong resemblance to the app release version that is visible to the user (see versionName, below). Apps and publishing services should not display this version value to users.\" Iirc TheAssassin once argued that we shouldn't just increase by 1 every time, but by 10, which he had a reason for, so we switched to that. Imho it just doesn't make sense to somehow tie it to the version names.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3267#discussion_r398066044", "createdAt": "2020-03-25T18:09:17Z", "author": {"login": "wb9688"}, "path": "app/build.gradle", "diffHunk": "@@ -12,8 +12,8 @@ android {\n         resValue \"string\", \"app_name\", \"NewPipe\"\n         minSdkVersion 19\n         targetSdkVersion 28\n-        versionCode 870\n-        versionName \"0.18.7\"\n+        versionCode 900", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzgxOTE1MQ=="}, "originalCommit": {"oid": "b08ab5cc065b6a6a07cb6824c500bd095a5fb099"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0ODA3MQ==", "bodyText": "It's much easier and foreseeable IMO to just increase by the ever same amount. The interval of 10 isn't even really needed any more, but we should keep it. As @wb9688 showed, any \"binding\" to a version code doesn't work, there's always cases in which it breaks. A version code is 3 integers, not 1.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3267#discussion_r400048071", "createdAt": "2020-03-30T09:25:40Z", "author": {"login": "TheAssassin"}, "path": "app/build.gradle", "diffHunk": "@@ -12,8 +12,8 @@ android {\n         resValue \"string\", \"app_name\", \"NewPipe\"\n         minSdkVersion 19\n         targetSdkVersion 28\n-        versionCode 870\n-        versionName \"0.18.7\"\n+        versionCode 900", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzgxOTE1MQ=="}, "originalCommit": {"oid": "b08ab5cc065b6a6a07cb6824c500bd095a5fb099"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzI1OTAyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/settings/VideoAudioSettingsFragment.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjozMTozMlrOF7jvgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMTo0NToxOVrOF7vkJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk5NTkwNA==", "bodyText": "I just noticed an error in one of my PR, it needs to be\nif (inexactSeek && selectedDuration / (int) DateUtils.SECOND_IN_MILLIS % 10 == 5) {\nOtherwise the seek durations get rounded up when opening the settings, even if inexact seek is disabled", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3267#discussion_r397995904", "createdAt": "2020-03-25T16:31:32Z", "author": {"login": "XiangRongLin"}, "path": "app/src/main/java/org/schabi/newpipe/settings/VideoAudioSettingsFragment.java", "diffHunk": "@@ -58,10 +46,59 @@ public void onCreate(@Nullable Bundle savedInstanceState) {\n                             .show();\n \n                 }\n+            } else if (s.equals(getString(R.string.use_inexact_seek_key))) {\n+                updateSeekOptions();\n             }\n         };\n     }\n \n+    /**\n+     * Update fast-forward/-rewind seek duration options according to language and inexact seek setting.\n+     * Exoplayer can't seek 5 seconds in audio when using inexact seek.\n+     */\n+    private void updateSeekOptions() {\n+        //initializing R.array.seek_duration_description to display the translation of seconds\n+        final Resources res = getResources();\n+        final String[] durationsValues = res.getStringArray(R.array.seek_duration_value);\n+        final List<String> displayedDurationValues = new LinkedList<>();\n+        final List<String> displayedDescriptionValues = new LinkedList<>();\n+        int currentDurationValue;\n+        final boolean inexactSeek = getPreferenceManager().getSharedPreferences()\n+            .getBoolean(res.getString(R.string.use_inexact_seek_key), false);\n+\n+        for (String durationsValue : durationsValues) {\n+            currentDurationValue =\n+                Integer.parseInt(durationsValue) / (int) DateUtils.SECOND_IN_MILLIS;\n+            if (inexactSeek && currentDurationValue % 10 == 5) {\n+                continue;\n+            }\n+\n+            displayedDurationValues.add(durationsValue);\n+            try {\n+                displayedDescriptionValues.add(String.format(\n+                    res.getQuantityString(R.plurals.seconds,\n+                        currentDurationValue),\n+                    currentDurationValue));\n+            } catch (Resources.NotFoundException ignored) {\n+                //if this happens, the translation is missing, and the english string will be displayed instead\n+            }\n+        }\n+\n+        final ListPreference durations = (ListPreference) findPreference(getString(R.string.seek_duration_key));\n+        durations.setEntryValues(displayedDurationValues.toArray(new CharSequence[0]));\n+        durations.setEntries(displayedDescriptionValues.toArray(new CharSequence[0]));\n+        final int selectedDuration = Integer.parseInt(durations.getValue());\n+        if (selectedDuration / (int) DateUtils.SECOND_IN_MILLIS % 10 == 5) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b08ab5cc065b6a6a07cb6824c500bd095a5fb099"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAyMTY3Mw==", "bodyText": "Thanks. I'll fix it in a minute", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3267#discussion_r398021673", "createdAt": "2020-03-25T17:06:05Z", "author": {"login": "TobiGr"}, "path": "app/src/main/java/org/schabi/newpipe/settings/VideoAudioSettingsFragment.java", "diffHunk": "@@ -58,10 +46,59 @@ public void onCreate(@Nullable Bundle savedInstanceState) {\n                             .show();\n \n                 }\n+            } else if (s.equals(getString(R.string.use_inexact_seek_key))) {\n+                updateSeekOptions();\n             }\n         };\n     }\n \n+    /**\n+     * Update fast-forward/-rewind seek duration options according to language and inexact seek setting.\n+     * Exoplayer can't seek 5 seconds in audio when using inexact seek.\n+     */\n+    private void updateSeekOptions() {\n+        //initializing R.array.seek_duration_description to display the translation of seconds\n+        final Resources res = getResources();\n+        final String[] durationsValues = res.getStringArray(R.array.seek_duration_value);\n+        final List<String> displayedDurationValues = new LinkedList<>();\n+        final List<String> displayedDescriptionValues = new LinkedList<>();\n+        int currentDurationValue;\n+        final boolean inexactSeek = getPreferenceManager().getSharedPreferences()\n+            .getBoolean(res.getString(R.string.use_inexact_seek_key), false);\n+\n+        for (String durationsValue : durationsValues) {\n+            currentDurationValue =\n+                Integer.parseInt(durationsValue) / (int) DateUtils.SECOND_IN_MILLIS;\n+            if (inexactSeek && currentDurationValue % 10 == 5) {\n+                continue;\n+            }\n+\n+            displayedDurationValues.add(durationsValue);\n+            try {\n+                displayedDescriptionValues.add(String.format(\n+                    res.getQuantityString(R.plurals.seconds,\n+                        currentDurationValue),\n+                    currentDurationValue));\n+            } catch (Resources.NotFoundException ignored) {\n+                //if this happens, the translation is missing, and the english string will be displayed instead\n+            }\n+        }\n+\n+        final ListPreference durations = (ListPreference) findPreference(getString(R.string.seek_duration_key));\n+        durations.setEntryValues(displayedDurationValues.toArray(new CharSequence[0]));\n+        durations.setEntries(displayedDescriptionValues.toArray(new CharSequence[0]));\n+        final int selectedDuration = Integer.parseInt(durations.getValue());\n+        if (selectedDuration / (int) DateUtils.SECOND_IN_MILLIS % 10 == 5) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk5NTkwNA=="}, "originalCommit": {"oid": "b08ab5cc065b6a6a07cb6824c500bd095a5fb099"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE4OTYwNw==", "bodyText": "Fixed in 55c577e", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3267#discussion_r398189607", "createdAt": "2020-03-25T21:45:19Z", "author": {"login": "TobiGr"}, "path": "app/src/main/java/org/schabi/newpipe/settings/VideoAudioSettingsFragment.java", "diffHunk": "@@ -58,10 +46,59 @@ public void onCreate(@Nullable Bundle savedInstanceState) {\n                             .show();\n \n                 }\n+            } else if (s.equals(getString(R.string.use_inexact_seek_key))) {\n+                updateSeekOptions();\n             }\n         };\n     }\n \n+    /**\n+     * Update fast-forward/-rewind seek duration options according to language and inexact seek setting.\n+     * Exoplayer can't seek 5 seconds in audio when using inexact seek.\n+     */\n+    private void updateSeekOptions() {\n+        //initializing R.array.seek_duration_description to display the translation of seconds\n+        final Resources res = getResources();\n+        final String[] durationsValues = res.getStringArray(R.array.seek_duration_value);\n+        final List<String> displayedDurationValues = new LinkedList<>();\n+        final List<String> displayedDescriptionValues = new LinkedList<>();\n+        int currentDurationValue;\n+        final boolean inexactSeek = getPreferenceManager().getSharedPreferences()\n+            .getBoolean(res.getString(R.string.use_inexact_seek_key), false);\n+\n+        for (String durationsValue : durationsValues) {\n+            currentDurationValue =\n+                Integer.parseInt(durationsValue) / (int) DateUtils.SECOND_IN_MILLIS;\n+            if (inexactSeek && currentDurationValue % 10 == 5) {\n+                continue;\n+            }\n+\n+            displayedDurationValues.add(durationsValue);\n+            try {\n+                displayedDescriptionValues.add(String.format(\n+                    res.getQuantityString(R.plurals.seconds,\n+                        currentDurationValue),\n+                    currentDurationValue));\n+            } catch (Resources.NotFoundException ignored) {\n+                //if this happens, the translation is missing, and the english string will be displayed instead\n+            }\n+        }\n+\n+        final ListPreference durations = (ListPreference) findPreference(getString(R.string.seek_duration_key));\n+        durations.setEntryValues(displayedDurationValues.toArray(new CharSequence[0]));\n+        durations.setEntries(displayedDescriptionValues.toArray(new CharSequence[0]));\n+        final int selectedDuration = Integer.parseInt(durations.getValue());\n+        if (selectedDuration / (int) DateUtils.SECOND_IN_MILLIS % 10 == 5) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk5NTkwNA=="}, "originalCommit": {"oid": "b08ab5cc065b6a6a07cb6824c500bd095a5fb099"}, "originalPosition": 87}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3339, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}