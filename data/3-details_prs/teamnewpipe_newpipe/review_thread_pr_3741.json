{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NzE4OTAz", "number": 3741, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNFQwNzozMTowN1rOFlpY3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNFQwNzo0Njo1M1rOFlpePg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc1MDE5NzQyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNFQwNzozMTowN1rOI2WIIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNFQxMTo0NzoyNlrOI2YA2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mzg1NjU0NA==", "bodyText": "Why not use javadoc above the method declaration instead of inline comments. Javadoc has IDE support.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3741#discussion_r593856544", "createdAt": "2021-03-14T07:31:07Z", "author": {"login": "XiangRongLin"}, "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "diffHunk": "@@ -1129,6 +1129,12 @@ private void onBroadcastReceived(final Intent intent) {\n                 // Close it because when changing orientation from portrait\n                 // (in fullscreen mode) the size of queue layout can be larger than the screen size\n                 closeItemsList();\n+                // When the orientation changed, the screen height might be smaller.\n+                // If the end screen thumbnail is not re-scaled,\n+                // it can be larger than the current screen height\n+                // and thus enlarging the whole player.\n+                // This causes the seekbar to be ouf the visible area.\n+                updateEndScreenThumbnail();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56a9fe6f491e6ccfc1a75db87d8d11263763655c"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mzg4NzQ0OQ==", "bodyText": "Done", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3741#discussion_r593887449", "createdAt": "2021-03-14T11:47:26Z", "author": {"login": "TobiGr"}, "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "diffHunk": "@@ -1129,6 +1129,12 @@ private void onBroadcastReceived(final Intent intent) {\n                 // Close it because when changing orientation from portrait\n                 // (in fullscreen mode) the size of queue layout can be larger than the screen size\n                 closeItemsList();\n+                // When the orientation changed, the screen height might be smaller.\n+                // If the end screen thumbnail is not re-scaled,\n+                // it can be larger than the current screen height\n+                // and thus enlarging the whole player.\n+                // This causes the seekbar to be ouf the visible area.\n+                updateEndScreenThumbnail();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mzg1NjU0NA=="}, "originalCommit": {"oid": "56a9fe6f491e6ccfc1a75db87d8d11263763655c"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc1MDE5ODQ0OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNFQwNzozMjozN1rOI2WInw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNFQxMDo1ODozMFrOI2XpTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mzg1NjY3MQ==", "bodyText": "conversion to int (rounding down) won't cause problems?", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3741#discussion_r593856671", "createdAt": "2021-03-14T07:32:37Z", "author": {"login": "XiangRongLin"}, "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "diffHunk": "@@ -1187,6 +1193,54 @@ private void initThumbnail(final String url) {\n                 .loadImage(url, ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS, this);\n     }\n \n+    public void updateEndScreenThumbnail() {\n+        if (currentThumbnail == null) {\n+            return;\n+        }\n+\n+        final float endScreenHeight;\n+\n+        updateScreenSize(); // ensure that screenHeight is initialized and thus not 0\n+\n+        // Show at least stream title and content creator on TVs and tablets (using the land layout)\n+        // 85dp for height of R.id.detail_root and R.id.detail_title_root_layout\n+        // 15/16sp for text size of video title\n+        if (DeviceUtils.isTv(context) && !isFullscreen) {\n+            final int videoInfoHeight =\n+                    DeviceUtils.dpToPx(85, context) + DeviceUtils.spToPx(16, context);\n+            endScreenHeight = Math.min(currentThumbnail.getHeight(),\n+                    screenHeight - videoInfoHeight);\n+        } else if (DeviceUtils.isTablet(context) && !isFullscreen) {\n+            final int videoInfoHeight =\n+                    DeviceUtils.dpToPx(85, context) + DeviceUtils.spToPx(15, context);\n+            endScreenHeight = Math.min(currentThumbnail.getHeight(),\n+                    screenHeight - videoInfoHeight);\n+        } else { // fullscreen player: max height is the device height\n+            endScreenHeight = Math.min(currentThumbnail.getHeight(), screenHeight);\n+        }\n+\n+        // scale the player audio / end screen thumbnail\n+        // This is necessary when the thumbnail's height is larger than the device's height\n+        // and thus is enlarging the player's height\n+        // causing the bottom playback controls to be out of the visible screen.\n+        final Bitmap endScreenBitmap = Bitmap.createScaledBitmap(\n+                currentThumbnail,\n+                (int) (currentThumbnail.getWidth()\n+                        / (currentThumbnail.getHeight() / endScreenHeight)),\n+                (int) endScreenHeight,\n+                true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56a9fe6f491e6ccfc1a75db87d8d11263763655c"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mzg4MTQyMA==", "bodyText": "no. The size is in pixels. The device cannot display an image with e.g. with a width of 800.8px.  We want to scale the thumbnail to not make the player larger than the screen, so to be sure we do not make the player grow out of the display, we need to scale down.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3741#discussion_r593881420", "createdAt": "2021-03-14T10:58:30Z", "author": {"login": "TobiGr"}, "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "diffHunk": "@@ -1187,6 +1193,54 @@ private void initThumbnail(final String url) {\n                 .loadImage(url, ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS, this);\n     }\n \n+    public void updateEndScreenThumbnail() {\n+        if (currentThumbnail == null) {\n+            return;\n+        }\n+\n+        final float endScreenHeight;\n+\n+        updateScreenSize(); // ensure that screenHeight is initialized and thus not 0\n+\n+        // Show at least stream title and content creator on TVs and tablets (using the land layout)\n+        // 85dp for height of R.id.detail_root and R.id.detail_title_root_layout\n+        // 15/16sp for text size of video title\n+        if (DeviceUtils.isTv(context) && !isFullscreen) {\n+            final int videoInfoHeight =\n+                    DeviceUtils.dpToPx(85, context) + DeviceUtils.spToPx(16, context);\n+            endScreenHeight = Math.min(currentThumbnail.getHeight(),\n+                    screenHeight - videoInfoHeight);\n+        } else if (DeviceUtils.isTablet(context) && !isFullscreen) {\n+            final int videoInfoHeight =\n+                    DeviceUtils.dpToPx(85, context) + DeviceUtils.spToPx(15, context);\n+            endScreenHeight = Math.min(currentThumbnail.getHeight(),\n+                    screenHeight - videoInfoHeight);\n+        } else { // fullscreen player: max height is the device height\n+            endScreenHeight = Math.min(currentThumbnail.getHeight(), screenHeight);\n+        }\n+\n+        // scale the player audio / end screen thumbnail\n+        // This is necessary when the thumbnail's height is larger than the device's height\n+        // and thus is enlarging the player's height\n+        // causing the bottom playback controls to be out of the visible screen.\n+        final Bitmap endScreenBitmap = Bitmap.createScaledBitmap(\n+                currentThumbnail,\n+                (int) (currentThumbnail.getWidth()\n+                        / (currentThumbnail.getHeight() / endScreenHeight)),\n+                (int) endScreenHeight,\n+                true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mzg1NjY3MQ=="}, "originalCommit": {"oid": "56a9fe6f491e6ccfc1a75db87d8d11263763655c"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc1MDE5ODg0OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNFQwNzozMzoxMlrOI2WI0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNFQxMToxNjo1M1rOI2Xx6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mzg1NjcyMQ==", "bodyText": "scale to what and why?", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3741#discussion_r593856721", "createdAt": "2021-03-14T07:33:12Z", "author": {"login": "XiangRongLin"}, "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "diffHunk": "@@ -1207,23 +1261,28 @@ public void onLoadingFailed(final String imageUri, final View view,\n     @Override\n     public void onLoadingComplete(final String imageUri, final View view,\n                                   final Bitmap loadedImage) {\n-        final float width = Math.min(\n+        // scale the notification thumbnail", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56a9fe6f491e6ccfc1a75db87d8d11263763655c"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mzg4MjM1MA==", "bodyText": "Performance improvements. IIRC if we pass the full size thumbnail to the notification, the notification needs more RAM and every time it is updated, the thumbnail needs to the scaled again. That's why we scale it down to the maximum thumbnail size.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3741#discussion_r593882350", "createdAt": "2021-03-14T11:05:59Z", "author": {"login": "TobiGr"}, "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "diffHunk": "@@ -1207,23 +1261,28 @@ public void onLoadingFailed(final String imageUri, final View view,\n     @Override\n     public void onLoadingComplete(final String imageUri, final View view,\n                                   final Bitmap loadedImage) {\n-        final float width = Math.min(\n+        // scale the notification thumbnail", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mzg1NjcyMQ=="}, "originalCommit": {"oid": "56a9fe6f491e6ccfc1a75db87d8d11263763655c"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mzg4MzYyNw==", "bodyText": "Then expand the comment to something like scale down the notification thumbnail for performance", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3741#discussion_r593883627", "createdAt": "2021-03-14T11:16:53Z", "author": {"login": "XiangRongLin"}, "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "diffHunk": "@@ -1207,23 +1261,28 @@ public void onLoadingFailed(final String imageUri, final View view,\n     @Override\n     public void onLoadingComplete(final String imageUri, final View view,\n                                   final Bitmap loadedImage) {\n-        final float width = Math.min(\n+        // scale the notification thumbnail", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mzg1NjcyMQ=="}, "originalCommit": {"oid": "56a9fe6f491e6ccfc1a75db87d8d11263763655c"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc1MDE5OTgwOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNFQwNzozNDoxN1rOI2WJRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNFQxMTo0NzowN1rOI2YAng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mzg1NjgzNw==", "bodyText": "Seeing as the method twice is used twice, it definetly should be javadoc instead of inline comments", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3741#discussion_r593856837", "createdAt": "2021-03-14T07:34:17Z", "author": {"login": "XiangRongLin"}, "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "diffHunk": "@@ -1207,23 +1261,28 @@ public void onLoadingFailed(final String imageUri, final View view,\n     @Override\n     public void onLoadingComplete(final String imageUri, final View view,\n                                   final Bitmap loadedImage) {\n-        final float width = Math.min(\n+        // scale the notification thumbnail\n+        final float notificationThumbnailWidth = Math.min(\n                 context.getResources().getDimension(R.dimen.player_notification_thumbnail_width),\n                 loadedImage.getWidth());\n+        currentThumbnail = Bitmap.createScaledBitmap(\n+                loadedImage,\n+                (int) notificationThumbnailWidth,\n+                (int) (loadedImage.getHeight()\n+                        / (loadedImage.getWidth() / notificationThumbnailWidth)),\n+                true);\n \n         if (DEBUG) {\n             Log.d(TAG, \"Thumbnail - onLoadingComplete() called with: \"\n                     + \"imageUri = [\" + imageUri + \"], view = [\" + view + \"], \"\n                     + \"loadedImage = [\" + loadedImage + \"], \"\n                     + loadedImage.getWidth() + \"x\" + loadedImage.getHeight()\n-                    + \", scaled width = \" + width);\n+                    + \", scaled notification width = \" + notificationThumbnailWidth);\n         }\n \n-        currentThumbnail = Bitmap.createScaledBitmap(loadedImage,\n-                (int) width,\n-                (int) (loadedImage.getHeight() / (loadedImage.getWidth() / width)), true);\n-        binding.endScreen.setImageBitmap(loadedImage);\n         NotificationUtil.getInstance().createNotificationIfNeededAndUpdate(this, false);\n+\n+        updateEndScreenThumbnail();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56a9fe6f491e6ccfc1a75db87d8d11263763655c"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mzg4NzM5MA==", "bodyText": "Done", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3741#discussion_r593887390", "createdAt": "2021-03-14T11:47:07Z", "author": {"login": "TobiGr"}, "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "diffHunk": "@@ -1207,23 +1261,28 @@ public void onLoadingFailed(final String imageUri, final View view,\n     @Override\n     public void onLoadingComplete(final String imageUri, final View view,\n                                   final Bitmap loadedImage) {\n-        final float width = Math.min(\n+        // scale the notification thumbnail\n+        final float notificationThumbnailWidth = Math.min(\n                 context.getResources().getDimension(R.dimen.player_notification_thumbnail_width),\n                 loadedImage.getWidth());\n+        currentThumbnail = Bitmap.createScaledBitmap(\n+                loadedImage,\n+                (int) notificationThumbnailWidth,\n+                (int) (loadedImage.getHeight()\n+                        / (loadedImage.getWidth() / notificationThumbnailWidth)),\n+                true);\n \n         if (DEBUG) {\n             Log.d(TAG, \"Thumbnail - onLoadingComplete() called with: \"\n                     + \"imageUri = [\" + imageUri + \"], view = [\" + view + \"], \"\n                     + \"loadedImage = [\" + loadedImage + \"], \"\n                     + loadedImage.getWidth() + \"x\" + loadedImage.getHeight()\n-                    + \", scaled width = \" + width);\n+                    + \", scaled notification width = \" + notificationThumbnailWidth);\n         }\n \n-        currentThumbnail = Bitmap.createScaledBitmap(loadedImage,\n-                (int) width,\n-                (int) (loadedImage.getHeight() / (loadedImage.getWidth() / width)), true);\n-        binding.endScreen.setImageBitmap(loadedImage);\n         NotificationUtil.getInstance().createNotificationIfNeededAndUpdate(this, false);\n+\n+        updateEndScreenThumbnail();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mzg1NjgzNw=="}, "originalCommit": {"oid": "56a9fe6f491e6ccfc1a75db87d8d11263763655c"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc1MDIwNDgzOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNFQwNzozOToxOVrOI2WLhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNFQwNzozOToxOVrOI2WLhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mzg1NzQxNQ==", "bodyText": "If you extract this into a method, you can\n\nGive it a name, which make this part here easier to read\nReference the R.id.* properly through javadoc instead of inline comments, which gives IDE support when refactoring or navigating. I don't think Android Studio will pick these up, if they are changed.\n\nSomething like calculateScreenHeight", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3741#discussion_r593857415", "createdAt": "2021-03-14T07:39:19Z", "author": {"login": "XiangRongLin"}, "path": "app/src/main/java/org/schabi/newpipe/player/Player.java", "diffHunk": "@@ -1187,6 +1193,54 @@ private void initThumbnail(final String url) {\n                 .loadImage(url, ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS, this);\n     }\n \n+    public void updateEndScreenThumbnail() {\n+        if (currentThumbnail == null) {\n+            return;\n+        }\n+\n+        final float endScreenHeight;\n+\n+        updateScreenSize(); // ensure that screenHeight is initialized and thus not 0\n+\n+        // Show at least stream title and content creator on TVs and tablets (using the land layout)\n+        // 85dp for height of R.id.detail_root and R.id.detail_title_root_layout\n+        // 15/16sp for text size of video title\n+        if (DeviceUtils.isTv(context) && !isFullscreen) {\n+            final int videoInfoHeight =\n+                    DeviceUtils.dpToPx(85, context) + DeviceUtils.spToPx(16, context);\n+            endScreenHeight = Math.min(currentThumbnail.getHeight(),\n+                    screenHeight - videoInfoHeight);\n+        } else if (DeviceUtils.isTablet(context) && !isFullscreen) {\n+            final int videoInfoHeight =\n+                    DeviceUtils.dpToPx(85, context) + DeviceUtils.spToPx(15, context);\n+            endScreenHeight = Math.min(currentThumbnail.getHeight(),\n+                    screenHeight - videoInfoHeight);\n+        } else { // fullscreen player: max height is the device height\n+            endScreenHeight = Math.min(currentThumbnail.getHeight(), screenHeight);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56a9fe6f491e6ccfc1a75db87d8d11263763655c"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc1MDIxMTE4OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/util/DeviceUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNFQwNzo0Njo1M1rOI2WOeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNFQxMTowMTozM1rOI2Xqwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mzg1ODE3MA==", "bodyText": "Tests would be nice", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3741#discussion_r593858170", "createdAt": "2021-03-14T07:46:53Z", "author": {"login": "XiangRongLin"}, "path": "app/src/main/java/org/schabi/newpipe/util/DeviceUtils.java", "diffHunk": "@@ -70,4 +71,15 @@ public static boolean isConfirmKey(final int keyCode) {\n                 return false;\n         }\n     }\n+\n+    public static int dpToPx(final float dp, final Context context) {\n+        return (int) (dp * context.getResources().getDisplayMetrics().density);\n+    }\n+\n+    public static int spToPx(final float sp, final Context context) {\n+        return (int) TypedValue.applyDimension(\n+                TypedValue.COMPLEX_UNIT_SP,\n+                sp,\n+                context.getResources().getDisplayMetrics());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56a9fe6f491e6ccfc1a75db87d8d11263763655c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mzg4MTc5NA==", "bodyText": "spToPx is the recommended way to do it, I will also change the dpToPx method to do the same. These methods are used in various internal android libs (e.g. see com.google.android.material.internal.ViewUtils.dpToPx(Context context, int dp)), so I do not think they need tests.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3741#discussion_r593881794", "createdAt": "2021-03-14T11:01:33Z", "author": {"login": "TobiGr"}, "path": "app/src/main/java/org/schabi/newpipe/util/DeviceUtils.java", "diffHunk": "@@ -70,4 +71,15 @@ public static boolean isConfirmKey(final int keyCode) {\n                 return false;\n         }\n     }\n+\n+    public static int dpToPx(final float dp, final Context context) {\n+        return (int) (dp * context.getResources().getDisplayMetrics().density);\n+    }\n+\n+    public static int spToPx(final float sp, final Context context) {\n+        return (int) TypedValue.applyDimension(\n+                TypedValue.COMPLEX_UNIT_SP,\n+                sp,\n+                context.getResources().getDisplayMetrics());\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mzg1ODE3MA=="}, "originalCommit": {"oid": "56a9fe6f491e6ccfc1a75db87d8d11263763655c"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3203, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}