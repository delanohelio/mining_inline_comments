{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMDAwODAw", "number": 3414, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQyMDoxMDo0NlrODw-u-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDowMzoxN1rODyAKSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjg2MDczOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/ReCaptchaActivity.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQyMDoxMDo0NlrOGEPw4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzozMToyOFrOGF5yeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEwNTc2MA==", "bodyText": "Is that information useful to find further cookies? We might want to show a snackbar to allow reporting the error and more importantly, the url", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3414#discussion_r407105760", "createdAt": "2020-04-11T20:10:46Z", "author": {"login": "TobiGr"}, "path": "app/src/main/java/org/schabi/newpipe/ReCaptchaActivity.java", "diffHunk": "@@ -137,23 +178,54 @@ private void saveCookiesAndFinish() {\n     }\n \n \n-    private void handleCookies(final String url) {\n+    private void handleCookiesFromUrl(final @Nullable String url) {\n+        if (MainActivity.DEBUG) {\n+            Log.d(TAG, \"handleCookiesFromUrl: url=\" + (url == null ? \"null\" : url));\n+        }\n+\n+        if (url == null) {\n+            return;\n+        }\n+\n         String cookies = CookieManager.getInstance().getCookie(url);\n+        handleCookies(cookies);\n+\n+        // sometimes cookies are inside the url\n+        int abuseStart = url.indexOf(\"google_abuse=\");\n+        if (abuseStart != -1) {\n+            int abuseEnd = url.indexOf(\"+path\");\n+\n+            try {\n+                String abuseCookie = url.substring(abuseStart + 13, abuseEnd);\n+                abuseCookie = URLDecoder.decode(abuseCookie, \"UTF-8\");\n+                handleCookies(abuseCookie);\n+            } catch (UnsupportedEncodingException | StringIndexOutOfBoundsException e) {\n+                if (MainActivity.DEBUG) {\n+                    e.printStackTrace();\n+                    Log.d(TAG, \"handleCookiesFromUrl: invalid google abuse starting at \"\n+                            + abuseStart + \" and ending at \" + abuseEnd + \" for url \" + url);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd0d7ce06d89d0f3b13715c75a796b8ca8f44bd6"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc3OTMxOQ==", "bodyText": "This piece of code has never been useful in my testing, since it just obtains a cookie that would anyway appear as a cookie in one of the subsequent requests. Though to prevent issues under different environment where the webview behaves strangely (who knows?), it doesn't hurt to obtain the cookie twice in a different way and call it a day.\nI left a Log there just so that when I send people an apk to debug, I don't have to make a custom one that throws a random Exception with the log message inside (as I did with the other cookie testing apk), but I can just tell them to install a logcat viewer and I have the information needed for the whole execution of the activity.\nAnyway, if the catch block is ever reached it means the url isn't useful to obtain a cookie, so there is no need to report anything to a normal user imho.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3414#discussion_r408779319", "createdAt": "2020-04-15T11:44:06Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/ReCaptchaActivity.java", "diffHunk": "@@ -137,23 +178,54 @@ private void saveCookiesAndFinish() {\n     }\n \n \n-    private void handleCookies(final String url) {\n+    private void handleCookiesFromUrl(final @Nullable String url) {\n+        if (MainActivity.DEBUG) {\n+            Log.d(TAG, \"handleCookiesFromUrl: url=\" + (url == null ? \"null\" : url));\n+        }\n+\n+        if (url == null) {\n+            return;\n+        }\n+\n         String cookies = CookieManager.getInstance().getCookie(url);\n+        handleCookies(cookies);\n+\n+        // sometimes cookies are inside the url\n+        int abuseStart = url.indexOf(\"google_abuse=\");\n+        if (abuseStart != -1) {\n+            int abuseEnd = url.indexOf(\"+path\");\n+\n+            try {\n+                String abuseCookie = url.substring(abuseStart + 13, abuseEnd);\n+                abuseCookie = URLDecoder.decode(abuseCookie, \"UTF-8\");\n+                handleCookies(abuseCookie);\n+            } catch (UnsupportedEncodingException | StringIndexOutOfBoundsException e) {\n+                if (MainActivity.DEBUG) {\n+                    e.printStackTrace();\n+                    Log.d(TAG, \"handleCookiesFromUrl: invalid google abuse starting at \"\n+                            + abuseStart + \" and ending at \" + abuseEnd + \" for url \" + url);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEwNTc2MA=="}, "originalCommit": {"oid": "bd0d7ce06d89d0f3b13715c75a796b8ca8f44bd6"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc4NDYwOQ==", "bodyText": "However logcat apps need root access since Jelly Bean.", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3414#discussion_r408784609", "createdAt": "2020-04-15T11:54:04Z", "author": {"login": "wb9688"}, "path": "app/src/main/java/org/schabi/newpipe/ReCaptchaActivity.java", "diffHunk": "@@ -137,23 +178,54 @@ private void saveCookiesAndFinish() {\n     }\n \n \n-    private void handleCookies(final String url) {\n+    private void handleCookiesFromUrl(final @Nullable String url) {\n+        if (MainActivity.DEBUG) {\n+            Log.d(TAG, \"handleCookiesFromUrl: url=\" + (url == null ? \"null\" : url));\n+        }\n+\n+        if (url == null) {\n+            return;\n+        }\n+\n         String cookies = CookieManager.getInstance().getCookie(url);\n+        handleCookies(cookies);\n+\n+        // sometimes cookies are inside the url\n+        int abuseStart = url.indexOf(\"google_abuse=\");\n+        if (abuseStart != -1) {\n+            int abuseEnd = url.indexOf(\"+path\");\n+\n+            try {\n+                String abuseCookie = url.substring(abuseStart + 13, abuseEnd);\n+                abuseCookie = URLDecoder.decode(abuseCookie, \"UTF-8\");\n+                handleCookies(abuseCookie);\n+            } catch (UnsupportedEncodingException | StringIndexOutOfBoundsException e) {\n+                if (MainActivity.DEBUG) {\n+                    e.printStackTrace();\n+                    Log.d(TAG, \"handleCookiesFromUrl: invalid google abuse starting at \"\n+                            + abuseStart + \" and ending at \" + abuseEnd + \" for url \" + url);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEwNTc2MA=="}, "originalCommit": {"oid": "bd0d7ce06d89d0f3b13715c75a796b8ca8f44bd6"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg0Mjg3Mw==", "bodyText": "Oh, do they? I didn't know ;-)\nBut what could I implement then, that would log everything and display it to the user after he presses \"Ok\" on a snackbar? Should I do some kind of bug report, but with logs instead of stack trace?", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3414#discussion_r408842873", "createdAt": "2020-04-15T13:31:28Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/ReCaptchaActivity.java", "diffHunk": "@@ -137,23 +178,54 @@ private void saveCookiesAndFinish() {\n     }\n \n \n-    private void handleCookies(final String url) {\n+    private void handleCookiesFromUrl(final @Nullable String url) {\n+        if (MainActivity.DEBUG) {\n+            Log.d(TAG, \"handleCookiesFromUrl: url=\" + (url == null ? \"null\" : url));\n+        }\n+\n+        if (url == null) {\n+            return;\n+        }\n+\n         String cookies = CookieManager.getInstance().getCookie(url);\n+        handleCookies(cookies);\n+\n+        // sometimes cookies are inside the url\n+        int abuseStart = url.indexOf(\"google_abuse=\");\n+        if (abuseStart != -1) {\n+            int abuseEnd = url.indexOf(\"+path\");\n+\n+            try {\n+                String abuseCookie = url.substring(abuseStart + 13, abuseEnd);\n+                abuseCookie = URLDecoder.decode(abuseCookie, \"UTF-8\");\n+                handleCookies(abuseCookie);\n+            } catch (UnsupportedEncodingException | StringIndexOutOfBoundsException e) {\n+                if (MainActivity.DEBUG) {\n+                    e.printStackTrace();\n+                    Log.d(TAG, \"handleCookiesFromUrl: invalid google abuse starting at \"\n+                            + abuseStart + \" and ending at \" + abuseEnd + \" for url \" + url);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEwNTc2MA=="}, "originalCommit": {"oid": "bd0d7ce06d89d0f3b13715c75a796b8ca8f44bd6"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzU4MDI0OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/schabi/newpipe/ReCaptchaActivity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDowMzoxN1rOGFysbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMTozMjowOVrOGF1iAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcyNjYzOA==", "bodyText": "Why this change? We have final after the @s everywhere\u2026", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3414#discussion_r408726638", "createdAt": "2020-04-15T10:03:17Z", "author": {"login": "wb9688"}, "path": "app/src/main/java/org/schabi/newpipe/ReCaptchaActivity.java", "diffHunk": "@@ -137,23 +178,54 @@ private void saveCookiesAndFinish() {\n     }\n \n \n-    private void handleCookies(final String url) {\n+    private void handleCookiesFromUrl(final @Nullable String url) {\n+        if (MainActivity.DEBUG) {\n+            Log.d(TAG, \"handleCookiesFromUrl: url=\" + (url == null ? \"null\" : url));\n+        }\n+\n+        if (url == null) {\n+            return;\n+        }\n+\n         String cookies = CookieManager.getInstance().getCookie(url);\n+        handleCookies(cookies);\n+\n+        // sometimes cookies are inside the url\n+        int abuseStart = url.indexOf(\"google_abuse=\");\n+        if (abuseStart != -1) {\n+            int abuseEnd = url.indexOf(\"+path\");\n+\n+            try {\n+                String abuseCookie = url.substring(abuseStart + 13, abuseEnd);\n+                abuseCookie = URLDecoder.decode(abuseCookie, \"UTF-8\");\n+                handleCookies(abuseCookie);\n+            } catch (UnsupportedEncodingException | StringIndexOutOfBoundsException e) {\n+                if (MainActivity.DEBUG) {\n+                    e.printStackTrace();\n+                    Log.d(TAG, \"handleCookiesFromUrl: invalid google abuse starting at \"\n+                            + abuseStart + \" and ending at \" + abuseEnd + \" for url \" + url);\n+                }\n+            }\n+        }\n+    }\n+\n+    private void handleCookies(final @Nullable String cookies) {\n         if (MainActivity.DEBUG) {\n-            Log.d(TAG, \"handleCookies: \"\n-                    + \"url=\" + url + \"; cookies=\" + (cookies == null ? \"null\" : cookies));\n+            Log.d(TAG, \"handleCookies: cookies=\" + (cookies == null ? \"null\" : cookies));\n         }\n+\n         if (cookies == null) {\n             return;\n         }\n \n         addYoutubeCookies(cookies);\n-        // add other methods to extract cookies here\n+        // add here methods to extract cookies for other services\n     }\n \n-    private void addYoutubeCookies(@NonNull final String cookies) {\n+    private void addYoutubeCookies(final @NonNull String cookies) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd0d7ce06d89d0f3b13715c75a796b8ca8f44bd6"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc3MzEyMg==", "bodyText": "I don't know ;-)\nFixed", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3414#discussion_r408773122", "createdAt": "2020-04-15T11:32:09Z", "author": {"login": "Stypox"}, "path": "app/src/main/java/org/schabi/newpipe/ReCaptchaActivity.java", "diffHunk": "@@ -137,23 +178,54 @@ private void saveCookiesAndFinish() {\n     }\n \n \n-    private void handleCookies(final String url) {\n+    private void handleCookiesFromUrl(final @Nullable String url) {\n+        if (MainActivity.DEBUG) {\n+            Log.d(TAG, \"handleCookiesFromUrl: url=\" + (url == null ? \"null\" : url));\n+        }\n+\n+        if (url == null) {\n+            return;\n+        }\n+\n         String cookies = CookieManager.getInstance().getCookie(url);\n+        handleCookies(cookies);\n+\n+        // sometimes cookies are inside the url\n+        int abuseStart = url.indexOf(\"google_abuse=\");\n+        if (abuseStart != -1) {\n+            int abuseEnd = url.indexOf(\"+path\");\n+\n+            try {\n+                String abuseCookie = url.substring(abuseStart + 13, abuseEnd);\n+                abuseCookie = URLDecoder.decode(abuseCookie, \"UTF-8\");\n+                handleCookies(abuseCookie);\n+            } catch (UnsupportedEncodingException | StringIndexOutOfBoundsException e) {\n+                if (MainActivity.DEBUG) {\n+                    e.printStackTrace();\n+                    Log.d(TAG, \"handleCookiesFromUrl: invalid google abuse starting at \"\n+                            + abuseStart + \" and ending at \" + abuseEnd + \" for url \" + url);\n+                }\n+            }\n+        }\n+    }\n+\n+    private void handleCookies(final @Nullable String cookies) {\n         if (MainActivity.DEBUG) {\n-            Log.d(TAG, \"handleCookies: \"\n-                    + \"url=\" + url + \"; cookies=\" + (cookies == null ? \"null\" : cookies));\n+            Log.d(TAG, \"handleCookies: cookies=\" + (cookies == null ? \"null\" : cookies));\n         }\n+\n         if (cookies == null) {\n             return;\n         }\n \n         addYoutubeCookies(cookies);\n-        // add other methods to extract cookies here\n+        // add here methods to extract cookies for other services\n     }\n \n-    private void addYoutubeCookies(@NonNull final String cookies) {\n+    private void addYoutubeCookies(final @NonNull String cookies) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcyNjYzOA=="}, "originalCommit": {"oid": "bd0d7ce06d89d0f3b13715c75a796b8ca8f44bd6"}, "originalPosition": 141}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3146, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}