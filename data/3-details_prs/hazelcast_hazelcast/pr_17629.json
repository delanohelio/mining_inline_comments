{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzOTg5NDA3", "number": 17629, "title": "Update TTL with offloadable EP", "bodyText": "closes #17606", "createdAt": "2020-09-28T08:52:27Z", "url": "https://github.com/hazelcast/hazelcast/pull/17629", "merged": true, "mergeCommit": {"oid": "fb9199f7506776d6584a1c0d1cf592b01ab2bad6"}, "closed": true, "closedAt": "2020-10-05T16:30:45Z", "author": {"login": "ahmetmircik"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNQQKRgFqTQ5NzM0MjgwOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPl7xAAFqTUwMjIwMDA3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MzQyODA5", "url": "https://github.com/hazelcast/hazelcast/pull/17629#pullrequestreview-497342809", "createdAt": "2020-09-28T09:34:22Z", "commit": {"oid": "47576d536f1f4cc32715ece425cd5cd87c8ae418"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOTozNDoyMlrOHY11yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOTozNDoyMlrOHY11yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgwOTk5NQ==", "bodyText": "Afaik EntryOffloadableSetUnlockOperation must be Versioned to get version of the stream in EE.", "url": "https://github.com/hazelcast/hazelcast/pull/17629#discussion_r495809995", "createdAt": "2020-09-28T09:34:22Z", "author": {"login": "mdogan"}, "path": "hazelcast/src/main/java/com/hazelcast/map/impl/operation/EntryOffloadableSetUnlockOperation.java", "diffHunk": "@@ -151,18 +155,27 @@ protected void writeInternal(ObjectDataOutput out) throws IOException {\n         UUIDSerializationUtil.writeUUID(out, caller);\n         out.writeLong(begin);\n         out.writeObject(entryBackupProcessor);\n+        // RU_COMPAT_4_0\n+        if (out.getVersion().isGreaterOrEqual(Versions.V4_1)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47576d536f1f4cc32715ece425cd5cd87c8ae418"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NDcyODEy", "url": "https://github.com/hazelcast/hazelcast/pull/17629#pullrequestreview-497472812", "createdAt": "2020-09-28T12:45:19Z", "commit": {"oid": "10d54bbb351505e6953c2f6a304baf4f730ffb55"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMjo0NToxOVrOHY766A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMjo0NToxOVrOHY766A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkwOTYwOA==", "bodyText": "Is the default value of 0 ok during RU?", "url": "https://github.com/hazelcast/hazelcast/pull/17629#discussion_r495909608", "createdAt": "2020-09-28T12:45:19Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/map/impl/operation/EntryOffloadableSetUnlockOperation.java", "diffHunk": "@@ -151,18 +156,27 @@ protected void writeInternal(ObjectDataOutput out) throws IOException {\n         UUIDSerializationUtil.writeUUID(out, caller);\n         out.writeLong(begin);\n         out.writeObject(entryBackupProcessor);\n+        // RU_COMPAT_4_0\n+        if (out.getVersion().isGreaterOrEqual(Versions.V4_1)) {\n+            out.writeLong(newTtl);\n+        }\n     }\n \n     @Override\n     protected void readInternal(ObjectDataInput in) throws IOException {\n         super.readInternal(in);\n         String modificationTypeName = in.readUTF();\n-        modificationType = modificationTypeName.equals(\"\") ? null : EntryEventType.valueOf(modificationTypeName);\n+        modificationType = modificationTypeName.equals(\"\")\n+                ? null : EntryEventType.valueOf(modificationTypeName);\n         oldValue = IOUtil.readData(in);\n         newValue = IOUtil.readData(in);\n         caller = UUIDSerializationUtil.readUUID(in);\n         begin = in.readLong();\n         entryBackupProcessor = in.readObject();\n+        // RU_COMPAT_4_0\n+        if (in.getVersion().isGreaterOrEqual(Versions.V4_1)) {\n+            newTtl = in.readLong();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10d54bbb351505e6953c2f6a304baf4f730ffb55"}, "originalPosition": 98}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NDgxMzYw", "url": "https://github.com/hazelcast/hazelcast/pull/17629#pullrequestreview-497481360", "createdAt": "2020-09-28T12:55:59Z", "commit": {"oid": "10d54bbb351505e6953c2f6a304baf4f730ffb55"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMjo1NTo1OVrOHY8U4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMjo1NTo1OVrOHY8U4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkxNjI1Nw==", "bodyText": "How come you don't use the outComes.add(operator.getEntry().getNewTtl()); above and set the TTL here? Same in PartitionWideEntryOperation.\nIs there an EE test with offloadable and setting TTL?", "url": "https://github.com/hazelcast/hazelcast/pull/17629#discussion_r495916257", "createdAt": "2020-09-28T12:55:59Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/map/impl/operation/PartitionWideEntryBackupOperation.java", "diffHunk": "@@ -86,7 +87,7 @@ protected void runWithPartitionScanForNative() {\n             Object newValue = outComes.poll();\n             EntryEventType eventType = (EntryEventType) outComes.poll();\n \n-            operator.init(dataKey, oldValue, newValue, null, eventType, null)\n+            operator.init(dataKey, oldValue, newValue, null, eventType, null, UNSET)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10d54bbb351505e6953c2f6a304baf4f730ffb55"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "10d54bbb351505e6953c2f6a304baf4f730ffb55", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/10d54bbb351505e6953c2f6a304baf4f730ffb55", "committedDate": "2020-09-28T09:38:25Z", "message": "Address Mehmet's review comment"}, "afterCommit": {"oid": "c3d0edbae9b72b9a14cd258f9c55a210c5fe0d99", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/c3d0edbae9b72b9a14cd258f9c55a210c5fe0d99", "committedDate": "2020-09-30T18:06:17Z", "message": "Address Matko's review comments 2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1637f9371f578425dee8c32b40c0d971cfa0615d", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/1637f9371f578425dee8c32b40c0d971cfa0615d", "committedDate": "2020-10-01T08:00:25Z", "message": "Update ttl with offloadable EP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a21028f6b438a4c9b7cf288fed65489316cc7fa1", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/a21028f6b438a4c9b7cf288fed65489316cc7fa1", "committedDate": "2020-10-01T08:00:25Z", "message": "Address Mehmet's review comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0836905da5a308c6928fb5b3b2a85e883c7be79", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/a0836905da5a308c6928fb5b3b2a85e883c7be79", "committedDate": "2020-10-01T08:00:25Z", "message": "Address Matko's review comments 2"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c3d0edbae9b72b9a14cd258f9c55a210c5fe0d99", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/c3d0edbae9b72b9a14cd258f9c55a210c5fe0d99", "committedDate": "2020-09-30T18:06:17Z", "message": "Address Matko's review comments 2"}, "afterCommit": {"oid": "a0836905da5a308c6928fb5b3b2a85e883c7be79", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/a0836905da5a308c6928fb5b3b2a85e883c7be79", "committedDate": "2020-10-01T08:00:25Z", "message": "Address Matko's review comments 2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxOTQ5NTcy", "url": "https://github.com/hazelcast/hazelcast/pull/17629#pullrequestreview-501949572", "createdAt": "2020-10-05T11:12:10Z", "commit": {"oid": "a0836905da5a308c6928fb5b3b2a85e883c7be79"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMToxMjoxMFrOHcYSTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMToxMjoxMFrOHcYSTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyMDA3OA==", "bodyText": "Do we not need to apply the TTL to the backup as well?", "url": "https://github.com/hazelcast/hazelcast/pull/17629#discussion_r499520078", "createdAt": "2020-10-05T11:12:10Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/map/impl/operation/EntryOffloadableSetUnlockOperation.java", "diffHunk": "@@ -104,7 +108,8 @@ public boolean returnsResponse() {\n \n     @Override\n     public Operation getBackupOperation() {\n-        return entryBackupProcessor != null ? new EntryBackupOperation(name, dataKey, entryBackupProcessor) : null;\n+        return entryBackupProcessor != null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0836905da5a308c6928fb5b3b2a85e883c7be79"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjAwMDcz", "url": "https://github.com/hazelcast/hazelcast/pull/17629#pullrequestreview-502200073", "createdAt": "2020-10-05T15:57:52Z", "commit": {"oid": "a0836905da5a308c6928fb5b3b2a85e883c7be79"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3172, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}