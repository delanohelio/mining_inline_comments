{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MzE5NTQz", "number": 17688, "title": "Make IndexStatsChangingNumberOfMembersTest more reliable", "bodyText": "This PR attempts to improve the reliability of the IndexStatsChangingNumberOfMembersTest. The test has intermittent failures caused by the insert metrics by greater than expected. The analysis of the code shown that it could be possible in theory if the index creation is executed concurrently with rebalance. The following changes were made to the test:\n\nRemove unnecessary IMap.createIndex calls.\nWait for the full index rebuild on all members before proceeding with asserts\n\nDuring the implementation of the second step, a severe bug was found in MapReplicationStateHolder - the index rebuild counter was not managed properly, which could lead to the index that is unavailable for SQL querying forever. Fixed as well.", "createdAt": "2020-10-06T07:03:54Z", "url": "https://github.com/hazelcast/hazelcast/pull/17688", "merged": true, "mergeCommit": {"oid": "094fa6fcba30b952eb24f6410d688b52846d4b97"}, "closed": true, "closedAt": "2020-10-06T13:11:04Z", "author": {"login": "devozerov"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPyxplgH2gAyNDk4MzE5NTQzOjI4M2MzODg2MGQ5MTMyOTBlNDliN2NhNjQ2NDZlNzIwODNiNTQ5NzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdP4IAuAFqTUwMjkyNTcyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "283c38860d913290e49b7ca64646e72083b54976", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/283c38860d913290e49b7ca64646e72083b54976", "committedDate": "2020-10-06T06:55:35Z", "message": "1) Fixed index partition marking in the MapReplicationStateHolder; 2) Improved reliability of IndexStatsChangingNumberOfMembersTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "817dac32098520cec7a37f7b3f820ff5dcb48c36", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/817dac32098520cec7a37f7b3f820ff5dcb48c36", "committedDate": "2020-10-06T07:02:32Z", "message": "WIP"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNzQzODM0", "url": "https://github.com/hazelcast/hazelcast/pull/17688#pullrequestreview-502743834", "createdAt": "2020-10-06T09:19:15Z", "commit": {"oid": "817dac32098520cec7a37f7b3f820ff5dcb48c36"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyODA4MTAw", "url": "https://github.com/hazelcast/hazelcast/pull/17688#pullrequestreview-502808100", "createdAt": "2020-10-06T10:43:51Z", "commit": {"oid": "817dac32098520cec7a37f7b3f820ff5dcb48c36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDo0Mzo1MVrOHdAYgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDo0Mzo1MVrOHdAYgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3NzAyNQ==", "bodyText": "Should we not reevaluate this UUID to partition mapping in the assertTrueEventually block? I'm asking because I can imagine that this was invoked with the 1st member being the master member while the 0th member might have had a stale partition table. We then wait until all members have the same partition table as the 0th, which might not happen.", "url": "https://github.com/hazelcast/hazelcast/pull/17688#discussion_r500177025", "createdAt": "2020-10-06T10:43:51Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/test/java/com/hazelcast/map/IndexStatsChangingNumberOfMembersTest.java", "diffHunk": "@@ -409,7 +418,36 @@ protected double calculateOverallSelectivity(long initialHits, double initialTot\n     }\n \n     protected void addIndex(IMap<?, ?> map) {\n-        map.addIndex(new IndexConfig(IndexType.HASH, \"this\").setName(\"this\"));\n+        map.addIndex(new IndexConfig(IndexType.HASH, \"this\").setName(INDEX_NAME));\n     }\n \n+    protected void awaitStable(String mapName, HazelcastInstance... instances) {\n+        // Await for migrations to complete.\n+        waitAllForSafeState(instances);\n+\n+        // Make sure that all indexes contain expected partitions.\n+        Map<UUID, PartitionIdSet> memberToPartitions = new HashMap<>();\n+\n+        Set<Partition> partitions = instances[0].getPartitionService().getPartitions();\n+\n+        for (Partition partition : partitions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "817dac32098520cec7a37f7b3f820ff5dcb48c36"}, "originalPosition": 121}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyOTI1NzI1", "url": "https://github.com/hazelcast/hazelcast/pull/17688#pullrequestreview-502925725", "createdAt": "2020-10-06T13:09:32Z", "commit": {"oid": "817dac32098520cec7a37f7b3f820ff5dcb48c36"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3240, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}