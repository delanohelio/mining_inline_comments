{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMjM3NDky", "number": 17611, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMDoxMjozNFrOEnZTdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMDoxMjozNFrOEnZTdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NzQ0NTAwOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/ringbuffer/Ringbuffer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMDoxMjozNFrOHX9ozg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDoxNjoxNlrOHYFjcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4OTE2Ng==", "bodyText": "I guess you can include in this PR delaying preallocating items and seqs inside the ReadResultSetImpl. Probably we can leave ReadManyOperation as-is, but rather expand the items and seqs as new items are added, maybe even by coordinating with how many will be added exactly in RingbufferContainer#readMany, instead of having some power-of-two expansion like ArrayList or wrapper objects like LinkedList.", "url": "https://github.com/hazelcast/hazelcast/pull/17611#discussion_r494889166", "createdAt": "2020-09-25T10:12:34Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/ringbuffer/Ringbuffer.java", "diffHunk": "@@ -340,6 +340,11 @@\n      * If there are less items available than {@code minCount}, then this call\n      * blocks.\n      * <p>\n+     * <b>Warning:</b>\n+     * <p>\n+     * These blocking calls consume server memory and if there are many calls,\n+     * it can be possible to see leaking memory or OOME.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebd9c0694f4baf9c1b2e40112555067cb880c057"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxODg2NA==", "bodyText": "done", "url": "https://github.com/hazelcast/hazelcast/pull/17611#discussion_r495018864", "createdAt": "2020-09-25T14:16:16Z", "author": {"login": "ahmetmircik"}, "path": "hazelcast/src/main/java/com/hazelcast/ringbuffer/Ringbuffer.java", "diffHunk": "@@ -340,6 +340,11 @@\n      * If there are less items available than {@code minCount}, then this call\n      * blocks.\n      * <p>\n+     * <b>Warning:</b>\n+     * <p>\n+     * These blocking calls consume server memory and if there are many calls,\n+     * it can be possible to see leaking memory or OOME.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4OTE2Ng=="}, "originalCommit": {"oid": "ebd9c0694f4baf9c1b2e40112555067cb880c057"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 259, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}