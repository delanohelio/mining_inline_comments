{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0ODI0NzA4", "number": 17642, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODo1MzoxNlrOEr9hvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODo1MzoxNlrOEr9hvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NTMyMjg0OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/internal/server/tcp/TcpServerConnection.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODo1MzoxNlrOHfBBrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNjoxODo1NVrOHfwYXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI4NDcxNg==", "bodyText": "Do we know how much time a logout can take?\nIf we don't know, then probably it is best to get this offloaded to some executor to prevent blocking this thread for an underermined amount of time.", "url": "https://github.com/hazelcast/hazelcast/pull/17642#discussion_r502284716", "createdAt": "2020-10-09T08:53:16Z", "author": {"login": "pveentjer"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/server/tcp/TcpServerConnection.java", "diffHunk": "@@ -246,6 +249,15 @@ public void close(String reason, Throwable cause) {\n \n         lifecycleListener.onConnectionClose(this, null, false);\n         serverContext.onDisconnect(remoteAddress, cause);\n+\n+        LoginContext lc = (LoginContext) attributeMap.remove(LoginContext.class);\n+        if (lc != null) {\n+            try {\n+                lc.logout();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c07eff9e89cf08bf06e32820d484eda13813a1e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM1NTgxMw==", "bodyText": "Logout usually means just removing some principal instances from a Set in the JAAS Subject.\nThe member login is not offloaded either, so let's keep it here the simple way.", "url": "https://github.com/hazelcast/hazelcast/pull/17642#discussion_r502355813", "createdAt": "2020-10-09T11:11:08Z", "author": {"login": "kwart"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/server/tcp/TcpServerConnection.java", "diffHunk": "@@ -246,6 +249,15 @@ public void close(String reason, Throwable cause) {\n \n         lifecycleListener.onConnectionClose(this, null, false);\n         serverContext.onDisconnect(remoteAddress, cause);\n+\n+        LoginContext lc = (LoginContext) attributeMap.remove(LoginContext.class);\n+        if (lc != null) {\n+            try {\n+                lc.logout();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI4NDcxNg=="}, "originalCommit": {"oid": "7c07eff9e89cf08bf06e32820d484eda13813a1e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA2MDU3NA==", "bodyText": "If it is just removal of a set, I'm fine with it. But if it potentially involved alien code and perhaps even doing remote calls.....", "url": "https://github.com/hazelcast/hazelcast/pull/17642#discussion_r503060574", "createdAt": "2020-10-12T06:18:55Z", "author": {"login": "pveentjer"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/server/tcp/TcpServerConnection.java", "diffHunk": "@@ -246,6 +249,15 @@ public void close(String reason, Throwable cause) {\n \n         lifecycleListener.onConnectionClose(this, null, false);\n         serverContext.onDisconnect(remoteAddress, cause);\n+\n+        LoginContext lc = (LoginContext) attributeMap.remove(LoginContext.class);\n+        if (lc != null) {\n+            try {\n+                lc.logout();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI4NDcxNg=="}, "originalCommit": {"oid": "7c07eff9e89cf08bf06e32820d484eda13813a1e"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 128, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}