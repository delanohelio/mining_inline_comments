{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNDEwNjE5", "number": 16722, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNDo0OTo1MVrODmVGXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTowMDoxMFrODmVYkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTE4MTcyOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNDo0OTo1MVrOFzr1Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNzo0NDo0OFrOF0EGUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTczOTc4Mw==", "bodyText": "removing final should be enough, why does serializerFor need to be public?", "url": "https://github.com/hazelcast/hazelcast/pull/16722#discussion_r389739783", "createdAt": "2020-03-09T14:49:51Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java", "diffHunk": "@@ -435,7 +446,7 @@ private SerializerAdapter registerFromSuperType(final Class type, final Class su\n         return serializer;\n     }\n \n-    protected final SerializerAdapter serializerFor(final int typeId) {\n+    public SerializerAdapter serializerFor(final int typeId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c357136528722e9cdcddeff20d44ace8163a0176"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEzNzQyNg==", "bodyText": "as discussed, serializerFor methods need to be public to be used by the delegating serialization service on Jet side.", "url": "https://github.com/hazelcast/hazelcast/pull/16722#discussion_r390137426", "createdAt": "2020-03-10T07:44:48Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java", "diffHunk": "@@ -435,7 +446,7 @@ private SerializerAdapter registerFromSuperType(final Class type, final Class su\n         return serializer;\n     }\n \n-    protected final SerializerAdapter serializerFor(final int typeId) {\n+    public SerializerAdapter serializerFor(final int typeId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTczOTc4Mw=="}, "originalCommit": {"oid": "c357136528722e9cdcddeff20d44ace8163a0176"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTE4MzEzOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNDo1MDoxNFrOFzr17A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNzo0NTowNFrOF0EGsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc0MDAxMg==", "bodyText": "isn't protected enough?", "url": "https://github.com/hazelcast/hazelcast/pull/16722#discussion_r389740012", "createdAt": "2020-03-09T14:50:14Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java", "diffHunk": "@@ -445,7 +456,7 @@ protected final SerializerAdapter serializerFor(final int typeId) {\n         return idMap.get(typeId);\n     }\n \n-    protected final SerializerAdapter serializerFor(Object object) {\n+    public SerializerAdapter serializerFor(Object object) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c357136528722e9cdcddeff20d44ace8163a0176"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEzNzUyMQ==", "bodyText": "same as above serializerFor comment", "url": "https://github.com/hazelcast/hazelcast/pull/16722#discussion_r390137521", "createdAt": "2020-03-10T07:45:04Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java", "diffHunk": "@@ -445,7 +456,7 @@ protected final SerializerAdapter serializerFor(final int typeId) {\n         return idMap.get(typeId);\n     }\n \n-    protected final SerializerAdapter serializerFor(Object object) {\n+    public SerializerAdapter serializerFor(Object object) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc0MDAxMg=="}, "originalCommit": {"oid": "c357136528722e9cdcddeff20d44ace8163a0176"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTIyMTgwOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/StreamSerializerAdapter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNDo1ODozOVrOFzsODg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNDo1ODozOVrOFzsODg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc0NjE5MA==", "bodyText": "instead of changing visibility of constructor maybe you can make the static factory method SerializationUtil#createSerializerAdapter public and client code on Jet side can work on SerializerAdapter interface?", "url": "https://github.com/hazelcast/hazelcast/pull/16722#discussion_r389746190", "createdAt": "2020-03-09T14:58:39Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/StreamSerializerAdapter.java", "diffHunk": "@@ -27,12 +26,12 @@\n \n import java.io.IOException;\n \n-class StreamSerializerAdapter implements SerializerAdapter {\n+public class StreamSerializerAdapter implements SerializerAdapter {\n \n     protected final InternalSerializationService service;\n     protected final StreamSerializer serializer;\n \n-    StreamSerializerAdapter(InternalSerializationService service, StreamSerializer serializer) {\n+    public StreamSerializerAdapter(InternalSerializationService service, StreamSerializer serializer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c357136528722e9cdcddeff20d44ace8163a0176"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTIyODMyOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/ByteArraySerializerAdapter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTowMDoxMVrOFzsSIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTowMDoxMVrOFzsSIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc0NzIzNQ==", "bodyText": "no need for this to be public as discussed", "url": "https://github.com/hazelcast/hazelcast/pull/16722#discussion_r389747235", "createdAt": "2020-03-09T15:00:11Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/ByteArraySerializerAdapter.java", "diffHunk": "@@ -25,11 +25,11 @@\n \n import java.io.IOException;\n \n-class ByteArraySerializerAdapter implements SerializerAdapter {\n+public class ByteArraySerializerAdapter implements SerializerAdapter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c357136528722e9cdcddeff20d44ace8163a0176"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 732, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}