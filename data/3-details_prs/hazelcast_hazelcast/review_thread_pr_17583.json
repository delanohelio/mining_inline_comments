{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5OTM0NDI3", "number": 17583, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNFQxNzoyNDo0MVrOFaQRQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNFQxNzoyNDo0MVrOFaQRQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYzMDczODU2OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/internal/server/tcp/TcpServerConnectionManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNFQxNzoyNDo0MVrOIlKZCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNFQxOTowMDowNFrOIlLFnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTgzODQ3Mw==", "bodyText": "implements ServerConnectionManager is redundant here (the base class also implements this interface)", "url": "https://github.com/hazelcast/hazelcast/pull/17583#discussion_r575838473", "createdAt": "2021-02-14T17:24:41Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/server/tcp/TcpServerConnectionManager.java", "diffHunk": "@@ -76,87 +58,40 @@\n import static com.hazelcast.internal.nio.ConnectionType.REST_CLIENT;\n import static com.hazelcast.internal.nio.IOUtil.close;\n import static com.hazelcast.internal.nio.IOUtil.setChannelOptions;\n-import static com.hazelcast.internal.util.ConcurrencyUtil.getOrPutIfAbsent;\n import static com.hazelcast.internal.util.Preconditions.checkNotNull;\n-import static com.hazelcast.internal.util.counters.MwCounter.newMwCounter;\n-import static com.hazelcast.spi.properties.ClusterProperty.CHANNEL_COUNT;\n import static java.lang.Math.abs;\n import static java.util.Arrays.stream;\n-import static java.util.Collections.newSetFromMap;\n import static java.util.Collections.unmodifiableSet;\n \n-@SuppressWarnings(\"checkstyle:methodcount\")\n-public class TcpServerConnectionManager\n+/**\n+ * This is the public APIs for connection manager\n+ * Private APIs and supporting stuff is in the Base class\n+ */\n+public class TcpServerConnectionManager extends TcpServerConnectionManagerBase\n         implements ServerConnectionManager, Consumer<Packet>, DynamicMetricsProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12f6b8e695d498558846629bf87bd824b701bba3"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTg0OTg4NQ==", "bodyText": "fixed", "url": "https://github.com/hazelcast/hazelcast/pull/17583#discussion_r575849885", "createdAt": "2021-02-14T19:00:04Z", "author": {"login": "lprimak"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/server/tcp/TcpServerConnectionManager.java", "diffHunk": "@@ -76,87 +58,40 @@\n import static com.hazelcast.internal.nio.ConnectionType.REST_CLIENT;\n import static com.hazelcast.internal.nio.IOUtil.close;\n import static com.hazelcast.internal.nio.IOUtil.setChannelOptions;\n-import static com.hazelcast.internal.util.ConcurrencyUtil.getOrPutIfAbsent;\n import static com.hazelcast.internal.util.Preconditions.checkNotNull;\n-import static com.hazelcast.internal.util.counters.MwCounter.newMwCounter;\n-import static com.hazelcast.spi.properties.ClusterProperty.CHANNEL_COUNT;\n import static java.lang.Math.abs;\n import static java.util.Arrays.stream;\n-import static java.util.Collections.newSetFromMap;\n import static java.util.Collections.unmodifiableSet;\n \n-@SuppressWarnings(\"checkstyle:methodcount\")\n-public class TcpServerConnectionManager\n+/**\n+ * This is the public APIs for connection manager\n+ * Private APIs and supporting stuff is in the Base class\n+ */\n+public class TcpServerConnectionManager extends TcpServerConnectionManagerBase\n         implements ServerConnectionManager, Consumer<Packet>, DynamicMetricsProvider {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTgzODQ3Mw=="}, "originalCommit": {"oid": "12f6b8e695d498558846629bf87bd824b701bba3"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 254, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}