{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MDE3Nzc2", "number": 17327, "title": "Added Benchmark for the phonehome process", "bodyText": "", "createdAt": "2020-08-11T10:32:00Z", "url": "https://github.com/hazelcast/hazelcast/pull/17327", "merged": true, "mergeCommit": {"oid": "9a1ed8916ea8d97632f6799c41ba6c58c7dc0dc3"}, "closed": true, "closedAt": "2020-08-14T07:26:39Z", "author": {"login": "chanmol1999"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc90P3FgH2gAyNDY2MDE3Nzc2OjcyMTlhN2FkNDlhNjFkOTIwMGI2MTMxZjU5ZTcyZTZmOGE3OWIxMjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-vclmgFqTQ2NjUxMDE2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7219a7ad49a61d9200b6131f59e72e6f8a79b122", "author": {"user": {"login": "chanmol1999", "name": "Anmol Chaddha"}}, "url": "https://github.com/hazelcast/hazelcast/commit/7219a7ad49a61d9200b6131f59e72e6f8a79b122", "committedDate": "2020-08-11T10:27:51Z", "message": "Added Benchmark for the phonehome process"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MDA2NTI2", "url": "https://github.com/hazelcast/hazelcast/pull/17327#pullrequestreview-465006526", "createdAt": "2020-08-11T12:15:35Z", "commit": {"oid": "7219a7ad49a61d9200b6131f59e72e6f8a79b122"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMjoxNTozNlrOG-1GUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMjoxNjo1N1rOG-1JQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUzNDg2NA==", "bodyText": "I think you don't have to add it here, it is already added to the parent project (but please double-check).", "url": "https://github.com/hazelcast/hazelcast/pull/17327#discussion_r468534864", "createdAt": "2020-08-11T12:15:36Z", "author": {"login": "erosb"}, "path": "hazelcast/pom.xml", "diffHunk": "@@ -486,5 +486,16 @@\n             <version>2.26.3</version>\n             <scope>test</scope>\n         </dependency>\n+        <!-- https://mvnrepository.com/artifact/org.openjdk.jmh/jmh-core -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7219a7ad49a61d9200b6131f59e72e6f8a79b122"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUzNTEwMw==", "bodyText": "Maps are covered by the 100k loop below, aren't they?", "url": "https://github.com/hazelcast/hazelcast/pull/17327#discussion_r468535103", "createdAt": "2020-08-11T12:16:02Z", "author": {"login": "erosb"}, "path": "hazelcast/src/test/java/com/hazelcast/internal/util/phonehome/PhoneHomeBenchMark.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.hazelcast.internal.util.phonehome;\n+\n+import com.hazelcast.config.AttributeConfig;\n+import com.hazelcast.config.CacheConfig;\n+import com.hazelcast.config.EvictionConfig;\n+import com.hazelcast.config.EvictionPolicy;\n+import com.hazelcast.config.HotRestartConfig;\n+import com.hazelcast.config.InMemoryFormat;\n+import com.hazelcast.config.IndexConfig;\n+import com.hazelcast.config.MapConfig;\n+import com.hazelcast.config.QueryCacheConfig;\n+import com.hazelcast.config.WanReplicationRef;\n+import com.hazelcast.core.HazelcastInstance;\n+import com.hazelcast.instance.impl.Node;\n+import com.hazelcast.map.IMap;\n+import com.hazelcast.test.HazelcastTestSupport;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.TearDown;\n+\n+import javax.cache.CacheManager;\n+import javax.cache.spi.CachingProvider;\n+\n+import static com.hazelcast.cache.CacheTestSupport.createServerCachingProvider;\n+import static com.hazelcast.test.Accessors.getNode;\n+\n+@State(Scope.Benchmark)\n+public class PhoneHomeBenchMark extends HazelcastTestSupport {\n+\n+    private PhoneHome phoneHome;\n+    private Node node;\n+\n+    @Setup\n+    public void setup() {\n+        HazelcastInstance hz = createHazelcastInstance();\n+        node = getNode(hz);\n+        phoneHome = new PhoneHome(node);\n+        CachingProvider cachingProvider = createServerCachingProvider(hz);\n+        CacheManager cacheManager = cachingProvider.getCacheManager();\n+\n+        for (int i = 1; i <= 10000; i++) {\n+            hz.getMap(\"maps\" + i);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7219a7ad49a61d9200b6131f59e72e6f8a79b122"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUzNTYxOA==", "bodyText": "I doubt if getClass().getName() will work here. Does this class implement the MapStore interface.", "url": "https://github.com/hazelcast/hazelcast/pull/17327#discussion_r468535618", "createdAt": "2020-08-11T12:16:57Z", "author": {"login": "erosb"}, "path": "hazelcast/src/test/java/com/hazelcast/internal/util/phonehome/PhoneHomeBenchMark.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.hazelcast.internal.util.phonehome;\n+\n+import com.hazelcast.config.AttributeConfig;\n+import com.hazelcast.config.CacheConfig;\n+import com.hazelcast.config.EvictionConfig;\n+import com.hazelcast.config.EvictionPolicy;\n+import com.hazelcast.config.HotRestartConfig;\n+import com.hazelcast.config.InMemoryFormat;\n+import com.hazelcast.config.IndexConfig;\n+import com.hazelcast.config.MapConfig;\n+import com.hazelcast.config.QueryCacheConfig;\n+import com.hazelcast.config.WanReplicationRef;\n+import com.hazelcast.core.HazelcastInstance;\n+import com.hazelcast.instance.impl.Node;\n+import com.hazelcast.map.IMap;\n+import com.hazelcast.test.HazelcastTestSupport;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.TearDown;\n+\n+import javax.cache.CacheManager;\n+import javax.cache.spi.CachingProvider;\n+\n+import static com.hazelcast.cache.CacheTestSupport.createServerCachingProvider;\n+import static com.hazelcast.test.Accessors.getNode;\n+\n+@State(Scope.Benchmark)\n+public class PhoneHomeBenchMark extends HazelcastTestSupport {\n+\n+    private PhoneHome phoneHome;\n+    private Node node;\n+\n+    @Setup\n+    public void setup() {\n+        HazelcastInstance hz = createHazelcastInstance();\n+        node = getNode(hz);\n+        phoneHome = new PhoneHome(node);\n+        CachingProvider cachingProvider = createServerCachingProvider(hz);\n+        CacheManager cacheManager = cachingProvider.getCacheManager();\n+\n+        for (int i = 1; i <= 10000; i++) {\n+            hz.getMap(\"maps\" + i);\n+            hz.getSet(\"set\" + i);\n+            hz.getQueue(\"queue\" + i);\n+            hz.getMultiMap(\"multimap\" + i);\n+            hz.getList(\"list\" + i);\n+            hz.getRingbuffer(\"ringbuffer\" + i);\n+            hz.getTopic(\"topic\" + i);\n+            hz.getReplicatedMap(\"replicatedmap\" + i);\n+            hz.getCardinalityEstimator(\"cardinalityEstimator\" + i);\n+            hz.getPNCounter(\"PNcounter\" + i);\n+            hz.getFlakeIdGenerator(\"flakeid\" + i);\n+            cacheManager.createCache(\"cache\" + i, new CacheConfig<>(\"cache\" + i));\n+        }\n+\n+        for (int i = 1; i <= 100000; i++) {\n+            IMap<Object, Object> iMap = hz.getMap(\"map\" + i);\n+            MapConfig config = node.getConfig().getMapConfig(\"map\" + i);\n+\n+            if (i % 10 == 0) {\n+                config.getMapStoreConfig().setClassName(getClass().getName()).setEnabled(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7219a7ad49a61d9200b6131f59e72e6f8a79b122"}, "originalPosition": 80}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "333ceced3f90a8d52ca13b67f378f8739a069cd5", "author": {"user": {"login": "chanmol1999", "name": "Anmol Chaddha"}}, "url": "https://github.com/hazelcast/hazelcast/commit/333ceced3f90a8d52ca13b67f378f8739a069cd5", "committedDate": "2020-08-13T12:01:12Z", "message": "Update the quantity of distributed objects"}, "afterCommit": {"oid": "840a230666836313bcb6befd2cd04644f4d98567", "author": {"user": {"login": "chanmol1999", "name": "Anmol Chaddha"}}, "url": "https://github.com/hazelcast/hazelcast/commit/840a230666836313bcb6befd2cd04644f4d98567", "committedDate": "2020-08-13T12:01:54Z", "message": "Reduce the quantity of distributed objects\n\nUpdate the quantity of distributed objects"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "840a230666836313bcb6befd2cd04644f4d98567", "author": {"user": {"login": "chanmol1999", "name": "Anmol Chaddha"}}, "url": "https://github.com/hazelcast/hazelcast/commit/840a230666836313bcb6befd2cd04644f4d98567", "committedDate": "2020-08-13T12:01:54Z", "message": "Reduce the quantity of distributed objects\n\nUpdate the quantity of distributed objects"}, "afterCommit": {"oid": "ba9bde3e6a350889f0c6684f1b507de17c8564fb", "author": {"user": {"login": "chanmol1999", "name": "Anmol Chaddha"}}, "url": "https://github.com/hazelcast/hazelcast/commit/ba9bde3e6a350889f0c6684f1b507de17c8564fb", "committedDate": "2020-08-13T12:03:42Z", "message": "Improve the benchmark setup\n\nReduce the quantity of distributed objects\n\nUpdate the quantity of distributed objects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef4e21eea2d7dc85be8d719e66bc2bdb44922c79", "author": {"user": {"login": "chanmol1999", "name": "Anmol Chaddha"}}, "url": "https://github.com/hazelcast/hazelcast/commit/ef4e21eea2d7dc85be8d719e66bc2bdb44922c79", "committedDate": "2020-08-13T12:08:23Z", "message": "Improve the benchmark setup\n\nReduce the quantity of distributed objects\n\nUpdate the quantity of distributed objects\n\nUpdates"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bad3211c56816e36c48afe1dff66cc4263bd4f4b", "author": {"user": {"login": "chanmol1999", "name": "Anmol Chaddha"}}, "url": "https://github.com/hazelcast/hazelcast/commit/bad3211c56816e36c48afe1dff66cc4263bd4f4b", "committedDate": "2020-08-13T12:07:39Z", "message": "Updates"}, "afterCommit": {"oid": "ef4e21eea2d7dc85be8d719e66bc2bdb44922c79", "author": {"user": {"login": "chanmol1999", "name": "Anmol Chaddha"}}, "url": "https://github.com/hazelcast/hazelcast/commit/ef4e21eea2d7dc85be8d719e66bc2bdb44922c79", "committedDate": "2020-08-13T12:08:23Z", "message": "Improve the benchmark setup\n\nReduce the quantity of distributed objects\n\nUpdate the quantity of distributed objects\n\nUpdates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb0b76bc6fa8e252ff26dda4f8e55759b305b559", "author": {"user": {"login": "chanmol1999", "name": "Anmol Chaddha"}}, "url": "https://github.com/hazelcast/hazelcast/commit/bb0b76bc6fa8e252ff26dda4f8e55759b305b559", "committedDate": "2020-08-13T14:14:20Z", "message": "Merged the two classes in one"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2NTEwMTY3", "url": "https://github.com/hazelcast/hazelcast/pull/17327#pullrequestreview-466510167", "createdAt": "2020-08-13T07:30:38Z", "commit": {"oid": "4fbaecd3e6cf44b5be98ae3061ff7b1da9f54a9d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzozMDozOVrOG__ZmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzozMDozOVrOG__ZmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc1MjIxNg==", "bodyText": "Can we please delete this class and move this main method to the PhoneHomeBenchmark itself?", "url": "https://github.com/hazelcast/hazelcast/pull/17327#discussion_r469752216", "createdAt": "2020-08-13T07:30:39Z", "author": {"login": "erosb"}, "path": "hazelcast/src/test/java/com/hazelcast/internal/util/phonehome/BenchMarkRunner.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.hazelcast.internal.util.phonehome;\n+\n+import org.openjdk.jmh.runner.Runner;\n+import org.openjdk.jmh.runner.RunnerException;\n+import org.openjdk.jmh.runner.options.Options;\n+import org.openjdk.jmh.runner.options.OptionsBuilder;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+public class BenchMarkRunner {\n+    public static void main(String[] args) throws RunnerException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fbaecd3e6cf44b5be98ae3061ff7b1da9f54a9d"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3372, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}