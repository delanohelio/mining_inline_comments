{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYxOTcyODk5", "number": 17291, "title": "Move SQL parser to Jet", "bodyText": "", "createdAt": "2020-08-03T06:31:46Z", "url": "https://github.com/hazelcast/hazelcast/pull/17291", "merged": true, "mergeCommit": {"oid": "15bf75da0c09b9d111e3f25044a9e1e1d01c2c79"}, "closed": true, "closedAt": "2020-08-05T06:53:30Z", "author": {"login": "gierlachg"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6UZBHgH2gAyNDYxOTcyODk5OjkwOTVjZWM3OTUzYjdhZmYzMDA3NGUwNDQzMDMwY2UwY2I5OTFhOWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7nDUOAH2gAyNDYxOTcyODk5OjUyZjQ1NWUyMzQwMjE0YTMyMjFkYzMyYTEzZDY5YWI2NWRiZDg2YWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9095cec7953b7aff30074e0443030ce0cb991a9d", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast/commit/9095cec7953b7aff30074e0443030ce0cb991a9d", "committedDate": "2020-07-31T13:39:07Z", "message": "Remove custom parser, connector, external tables infrastructure.\n\nAdd parser, converter & optimizer integration points for Jet."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71b11df1db58fa43485e3931c4d783cf2aaf92b2", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast/commit/71b11df1db58fa43485e3931c4d783cf2aaf92b2", "committedDate": "2020-08-03T06:11:15Z", "message": "Simplify"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e4ad522df9a10e3163c702ccc5090c1686f28b8", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast/commit/2e4ad522df9a10e3163c702ccc5090c1686f28b8", "committedDate": "2020-08-03T06:39:43Z", "message": "Make checkstyle happier"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5OTI2OTI0", "url": "https://github.com/hazelcast/hazelcast/pull/17291#pullrequestreview-459926924", "createdAt": "2020-08-03T10:42:31Z", "commit": {"oid": "2e4ad522df9a10e3163c702ccc5090c1686f28b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b717890b12bea8011c00a3692774371d61918746", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/b717890b12bea8011c00a3692774371d61918746", "committedDate": "2020-08-03T14:23:32Z", "message": "Tweaks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77a834b8f39f9b63b2d940ad1453bbd65e040572", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast/commit/77a834b8f39f9b63b2d940ad1453bbd65e040572", "committedDate": "2020-08-04T09:00:17Z", "message": "Merge branch 'sql' into parser-move\n\n# Conflicts:\n#\thazelcast-sql/src/test/java/com/hazelcast/sql/schema/SchemaTest.java\n#\thazelcast/src/main/java/com/hazelcast/sql/impl/SqlServiceImpl.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNzg0NTI2", "url": "https://github.com/hazelcast/hazelcast/pull/17291#pullrequestreview-460784526", "createdAt": "2020-08-04T12:55:45Z", "commit": {"oid": "77a834b8f39f9b63b2d940ad1453bbd65e040572"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMjo1NTo0NlrOG7fG7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMjo1NTo0NlrOG7fG7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAyODg0Ng==", "bodyText": "Changes in this class look suspicious to me - what if we reveal that some context information that is needed for a new command is not passed here?\nAn alternative is to move the whole parser instantiation to jetSqlBackend. This way the risk of the aforementioned problem is zero.", "url": "https://github.com/hazelcast/hazelcast/pull/17291#discussion_r465028846", "createdAt": "2020-08-04T12:55:46Z", "author": {"login": "devozerov"}, "path": "hazelcast-sql/src/main/java/com/hazelcast/sql/impl/calcite/parse/QueryParser.java", "diffHunk": "@@ -19,100 +19,70 @@\n import com.hazelcast.sql.SqlErrorCode;\n import com.hazelcast.sql.impl.JetSqlBackend;\n import com.hazelcast.sql.impl.QueryException;\n-import com.hazelcast.sql.impl.calcite.parser.HazelcastSqlParser;\n import com.hazelcast.sql.impl.calcite.validate.HazelcastSqlConformance;\n-import org.apache.calcite.rel.type.RelDataType;\n-import org.apache.calcite.sql.SqlCall;\n-import org.apache.calcite.sql.SqlHint;\n import org.apache.calcite.sql.SqlKind;\n import org.apache.calcite.sql.SqlNode;\n import org.apache.calcite.sql.SqlOperator;\n-import org.apache.calcite.sql.SqlOperatorTable;\n-import org.apache.calcite.sql.SqlSelect;\n import org.apache.calcite.sql.parser.SqlParser;\n-import org.apache.calcite.sql.util.SqlBasicVisitor;\n+import org.apache.calcite.sql.parser.SqlParserImplFactory;\n import org.apache.calcite.sql.validate.SqlValidator;\n \n-import java.util.Collections;\n-import java.util.HashSet;\n+import javax.annotation.Nullable;\n import java.util.Set;\n \n+import static java.util.Collections.emptySet;\n+\n /**\n  * Performs syntactic and semantic validation of the query, and converts the parse tree into a relational tree.\n  */\n public class QueryParser {\n \n-    /** A hint to force execution of a query on Jet. */\n-    private static final String RUN_ON_JET_HINT = \"jet\";\n+    private final SqlParser.Config parserConfig;\n \n-    private static final SqlParser.Config CONFIG;\n     private final SqlValidator validator;\n-\n-    static {\n+    private final Set<SqlKind> extensionSqlKinds;\n+    private final Set<SqlOperator> extensionSqlOperators;\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public QueryParser(\n+            SqlValidator validator,\n+            @Nullable JetSqlBackend jetSqlBackend\n+    ) {\n         SqlParser.ConfigBuilder configBuilder = SqlParser.configBuilder();\n-\n         CasingConfiguration.DEFAULT.toParserConfig(configBuilder);\n         configBuilder.setConformance(HazelcastSqlConformance.INSTANCE);\n-        configBuilder.setParserFactory(HazelcastSqlParser.FACTORY);\n-\n-        CONFIG = configBuilder.build();\n-    }\n+        if (jetSqlBackend != null) {\n+            configBuilder.setParserFactory((SqlParserImplFactory) jetSqlBackend.createParserFactory());\n+        }\n+        this.parserConfig = configBuilder.build();\n \n-    public QueryParser(SqlValidator validator) {\n         this.validator = validator;\n+        this.extensionSqlKinds = jetSqlBackend == null ? emptySet() : (Set<SqlKind>) jetSqlBackend.kinds();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77a834b8f39f9b63b2d940ad1453bbd65e040572"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNzg2ODEx", "url": "https://github.com/hazelcast/hazelcast/pull/17291#pullrequestreview-460786811", "createdAt": "2020-08-04T12:58:42Z", "commit": {"oid": "77a834b8f39f9b63b2d940ad1453bbd65e040572"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMjo1ODo0MlrOG7fN9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMjo1ODo0MlrOG7fN9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAzMDY0Ng==", "bodyText": "The same concern as in the parser. It may happen that Jet would require a custom syntax somewhere deep inside some other fragment (e.g. SELECT statement), We will not be able to extend the UnsupportedOperationVisitor without a separate IMDG release.", "url": "https://github.com/hazelcast/hazelcast/pull/17291#discussion_r465030646", "createdAt": "2020-08-04T12:58:42Z", "author": {"login": "devozerov"}, "path": "hazelcast-sql/src/main/java/com/hazelcast/sql/impl/calcite/parse/UnsupportedOperationVisitor.java", "diffHunk": "@@ -182,19 +170,26 @@\n         SUPPORTED_OPERATORS.add(SqlStdOperatorTable.CURRENT_TIMESTAMP);\n         SUPPORTED_OPERATORS.add(SqlStdOperatorTable.LOCALTIMESTAMP);\n         SUPPORTED_OPERATORS.add(SqlStdOperatorTable.LOCALTIME);\n-\n-        // Other/Extensions\n-        SUPPORTED_OPERATORS.add(SqlOption.OPERATOR);\n     }\n \n-    private final Set<SqlOperator> extensionOperators;\n+    private final SqlValidatorCatalogReader catalogReader;\n+\n+    private final Set<SqlKind> extensionSqlKinds;\n+    private final Set<SqlOperator> extensionSqlOperators;\n+\n+    private boolean exclusivelyImdgStatement;\n \n     UnsupportedOperationVisitor(\n             SqlValidatorCatalogReader catalogReader,\n-            Set<SqlOperator> extensionOperators\n+            Set<SqlKind> extensionSqlKinds,\n+            Set<SqlOperator> extensionSqlOperators\n     ) {\n         this.catalogReader = catalogReader;\n-        this.extensionOperators = extensionOperators;\n+\n+        this.extensionSqlKinds = extensionSqlKinds;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77a834b8f39f9b63b2d940ad1453bbd65e040572"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNzkwODEz", "url": "https://github.com/hazelcast/hazelcast/pull/17291#pullrequestreview-460790813", "createdAt": "2020-08-04T13:03:36Z", "commit": {"oid": "77a834b8f39f9b63b2d940ad1453bbd65e040572"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec719494d724707465448d01871132259b2942e3", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast/commit/ec719494d724707465448d01871132259b2942e3", "committedDate": "2020-08-04T13:45:17Z", "message": "Refactor parser & converter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52f455e2340214a3221dc32a13d69ab65dbd86ad", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast/commit/52f455e2340214a3221dc32a13d69ab65dbd86ad", "committedDate": "2020-08-04T13:57:32Z", "message": "Make checkstyle happier"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3479, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}