{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0MDE2Mzc2", "number": 17996, "title": "SQL: support \"NOT LIKE\" expression [IMDG-148]", "bodyText": "This PR adds support for the NOT LIKE operator in addition to the existing LIKE. The implementation is relatively straightforward: we just add the negate flag to the existing operator. Since we do not support rolling upgrades in SQL, we can change the serialization of the LikeFunction.", "createdAt": "2020-12-22T10:11:35Z", "url": "https://github.com/hazelcast/hazelcast/pull/17996", "merged": true, "mergeCommit": {"oid": "72723cb26c2f1f31dca9982fb495ace9e1023fd0"}, "closed": true, "closedAt": "2021-01-14T09:51:27Z", "author": {"login": "devozerov"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdonskVgH2gAyNTQ0MDE2Mzc2OmY2MGZlNjI3N2EwOWZmMTdhMDZiMTQ5ZTBhOTE5MDRmZTRkZTg5M2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdv-JKiAH2gAyNTQ0MDE2Mzc2OmQzNDRiZTY2Y2FmODU1MmNmMDdjOGQzMmEzZTBkZTQzMmFlYjYwNjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f60fe6277a09ff17a06b149e0a91904fe4de893a", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/f60fe6277a09ff17a06b149e0a91904fe4de893a", "committedDate": "2020-12-22T10:09:11Z", "message": "SQL: support \"NOT LIKE\" expression"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d877a19f30afc9ef29b2deb862feb7c5df3ff18", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/2d877a19f30afc9ef29b2deb862feb7c5df3ff18", "committedDate": "2020-12-22T12:22:33Z", "message": "Fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3ODU2NDk1", "url": "https://github.com/hazelcast/hazelcast/pull/17996#pullrequestreview-557856495", "createdAt": "2020-12-23T13:06:45Z", "commit": {"oid": "2d877a19f30afc9ef29b2deb862feb7c5df3ff18"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMzowNjo0NlrOIKkNjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMzowNjo0NlrOIKkNjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk0OTk2NQ==", "bodyText": "Question: do we use java reflections to instantiate so that we have to have empty public constructor?", "url": "https://github.com/hazelcast/hazelcast/pull/17996#discussion_r547949965", "createdAt": "2020-12-23T13:06:46Z", "author": {"login": "alex-dukhno"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/expression/string/LikeFunction.java", "diffHunk": "@@ -54,18 +57,26 @@\n     /** Special characters which require escaping in Java. */\n     private static final String ESCAPE_CHARACTERS_JAVA = \"[]()|^+*?{}$\\\\.\";\n \n+    private boolean negated;\n     private transient State state;\n \n     public LikeFunction() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d877a19f30afc9ef29b2deb862feb7c5df3ff18"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY3MzYyOTk0", "url": "https://github.com/hazelcast/hazelcast/pull/17996#pullrequestreview-567362994", "createdAt": "2021-01-13T15:50:10Z", "commit": {"oid": "2d877a19f30afc9ef29b2deb862feb7c5df3ff18"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNTo1MDoxMFrOIS1t2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNTo1MDoxMFrOIS1t2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjYyNTM3MQ==", "bodyText": "If you have just one parameter, you don't need to use a nested collection:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static Collection<Object[]> parameters() {\n          \n          \n            \n                    return Arrays.asList(new Object[][]{ { false }, { true } });\n          \n          \n            \n                public static List<Boolean> parameters() {\n          \n          \n            \n                    return Arrays.asList(false, true);", "url": "https://github.com/hazelcast/hazelcast/pull/17996#discussion_r556625371", "createdAt": "2021-01-13T15:50:10Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-sql-core/src/test/java/com/hazelcast/sql/impl/expression/string/LikeFunctionIntegrationTest.java", "diffHunk": "@@ -37,132 +43,149 @@\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n-@RunWith(HazelcastParallelClassRunner.class)\n+@RunWith(Parameterized.class)\n+@Parameterized.UseParametersRunnerFactory(HazelcastParallelParametersRunnerFactory.class)\n @Category({QuickTest.class, ParallelJVMTest.class})\n public class LikeFunctionIntegrationTest extends ExpressionTestSupport {\n+\n+    private static final ConstantExpression<?> CONST_1 = ConstantExpression.create(\"1\", QueryDataType.VARCHAR);\n+    private static final ConstantExpression<?> CONST_2 = ConstantExpression.create(\"2\", QueryDataType.VARCHAR);\n+    private static final ConstantExpression<?> CONST_3 = ConstantExpression.create(\"3\", QueryDataType.VARCHAR);\n+    private static final ConstantExpression<?> CONST_OTHER = ConstantExpression.create(\"100\", QueryDataType.VARCHAR);\n+\n+    @Parameterized.Parameter\n+    public boolean negated;\n+\n+    @Parameterized.Parameters(name = \"mode:{0}\")\n+    public static Collection<Object[]> parameters() {\n+        return Arrays.asList(new Object[][]{ { false }, { true } });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d877a19f30afc9ef29b2deb862feb7c5df3ff18"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d27a5e8f9b5f9e2e2c0243d153288798ce575964", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/d27a5e8f9b5f9e2e2c0243d153288798ce575964", "committedDate": "2021-01-14T06:14:53Z", "message": "Merge branch 'master' into sql-expr-not-like"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d344be66caf8552cf07c8d32a3e0de432aeb6065", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/d344be66caf8552cf07c8d32a3e0de432aeb6065", "committedDate": "2021-01-14T06:15:48Z", "message": "Minors."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3046, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}