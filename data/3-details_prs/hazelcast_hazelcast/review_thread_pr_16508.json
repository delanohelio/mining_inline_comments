{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1MTQ2Mzc3", "number": 16508, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMzo0OTo0M1rODZf09Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMzo1Mzo1OVrODZf6uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MDYyNDUzOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/internal/nearcache/NearCacheRecordStore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMzo0OTo0M1rOFf6kpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoxMzowOFrOFf7XrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAwOTgyOA==", "bodyText": "minor: internal API but adding a @return would be nice", "url": "https://github.com/hazelcast/hazelcast/pull/16508#discussion_r369009828", "createdAt": "2020-01-21T13:49:43Z", "author": {"login": "vojtechtoman"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/nearcache/NearCacheRecordStore.java", "diffHunk": "@@ -110,7 +110,7 @@\n      *                            size check, otherwise set {@code false} to evict\n      *                            after a max size check.\n      */\n-    void doEviction(boolean withoutMaxSizeCheck);\n+    boolean doEviction(boolean withoutMaxSizeCheck);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84244b7218b9cb6ac0fc3b9e5c7fd8f2b8cc7304"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAyMjg5Mg==", "bodyText": "fixed", "url": "https://github.com/hazelcast/hazelcast/pull/16508#discussion_r369022892", "createdAt": "2020-01-21T14:13:08Z", "author": {"login": "ahmetmircik"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/nearcache/NearCacheRecordStore.java", "diffHunk": "@@ -110,7 +110,7 @@\n      *                            size check, otherwise set {@code false} to evict\n      *                            after a max size check.\n      */\n-    void doEviction(boolean withoutMaxSizeCheck);\n+    boolean doEviction(boolean withoutMaxSizeCheck);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAwOTgyOA=="}, "originalCommit": {"oid": "84244b7218b9cb6ac0fc3b9e5c7fd8f2b8cc7304"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MDYzOTI5OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/internal/nearcache/impl/store/AbstractNearCacheRecordStore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMzo1Mzo1OVrOFf6tyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoxMzoyMFrOFf7YJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAxMjE2OQ==", "bodyText": "Just to double-check - the idea is to return true if eviction was performed, but not if eviction was performed and an entry was evicted (that is, return the result of evictionStrategy.evict()), correct?", "url": "https://github.com/hazelcast/hazelcast/pull/16508#discussion_r369012169", "createdAt": "2020-01-21T13:53:59Z", "author": {"login": "vojtechtoman"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/nearcache/impl/store/AbstractNearCacheRecordStore.java", "diffHunk": "@@ -321,15 +321,16 @@ public int size() {\n     }\n \n     @Override\n-    public void doEviction(boolean withoutMaxSizeCheck) {\n+    public boolean doEviction(boolean withoutMaxSizeCheck) {\n         checkAvailable();\n \n         if (evictionDisabled) {\n-            return;\n+            return false;\n         }\n \n         EvictionChecker evictionChecker = withoutMaxSizeCheck ? null : this.evictionChecker;\n         evictionStrategy.evict(records, evictionPolicyEvaluator, evictionChecker, this);\n+        return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84244b7218b9cb6ac0fc3b9e5c7fd8f2b8cc7304"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAyMzAxMg==", "bodyText": "your understanding is true.", "url": "https://github.com/hazelcast/hazelcast/pull/16508#discussion_r369023012", "createdAt": "2020-01-21T14:13:20Z", "author": {"login": "ahmetmircik"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/nearcache/impl/store/AbstractNearCacheRecordStore.java", "diffHunk": "@@ -321,15 +321,16 @@ public int size() {\n     }\n \n     @Override\n-    public void doEviction(boolean withoutMaxSizeCheck) {\n+    public boolean doEviction(boolean withoutMaxSizeCheck) {\n         checkAvailable();\n \n         if (evictionDisabled) {\n-            return;\n+            return false;\n         }\n \n         EvictionChecker evictionChecker = withoutMaxSizeCheck ? null : this.evictionChecker;\n         evictionStrategy.evict(records, evictionPolicyEvaluator, evictionChecker, this);\n+        return true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAxMjE2OQ=="}, "originalCommit": {"oid": "84244b7218b9cb6ac0fc3b9e5c7fd8f2b8cc7304"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 876, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}