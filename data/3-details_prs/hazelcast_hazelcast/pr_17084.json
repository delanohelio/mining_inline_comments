{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0NTIxMTUy", "number": 17084, "title": "Fix fragmented message handling", "bodyText": "By definition, fragmented messages may have arbitrary number of frames.\nHowever, ClientMessageDecoder was using ClientMessage#createForDecode\nwhich expects a single frame that has no next frame. As the added test\nshows, that assumption generally does not hold. Start frame of the\nfragmented message may have next frames. The fix correctly creates\na client message using the start and end frames of the fragmented\nmessage.", "createdAt": "2020-06-15T12:53:54Z", "url": "https://github.com/hazelcast/hazelcast/pull/17084", "merged": true, "mergeCommit": {"oid": "0815c96d1cab4d6e74b45c9666896f077178764c"}, "closed": true, "closedAt": "2020-06-17T13:24:01Z", "author": {"login": "mdumandag"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcrgCRQAH2gAyNDM0NTIxMTUyOjhkMTVkNDJiOWM5NzI3ZTc2MzI3ZDQzZDk3N2JjMTg0YWJlYzAyZTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsJMj-gFqTQzMjM1OTA1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8d15d42b9c9727e76327d43d977bc184abec02e3", "author": {"user": {"login": "mdumandag", "name": "Metin Dumandag"}}, "url": "https://github.com/hazelcast/hazelcast/commit/8d15d42b9c9727e76327d43d977bc184abec02e3", "committedDate": "2020-06-15T12:44:16Z", "message": "Fix fragmented message handling\n\nBy definition, fragmented messages may have arbitrary number of frames.\nHowever, ClientMessageDecoder was using ClientMessage#createForDecode\nwhich expects a single frame that has no next frame. As the added test\nshows, that assumption generally does not hold. Start frame of the\nfragmented message may have next frames. The fix correctly creates\na client message using the start and end frames of the fragmented\nmessage."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMjQyNjQ5", "url": "https://github.com/hazelcast/hazelcast/pull/17084#pullrequestreview-431242649", "createdAt": "2020-06-16T07:46:15Z", "commit": {"oid": "8d15d42b9c9727e76327d43d977bc184abec02e3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNzo0NjoxNVrOGkPOhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNzo0NjoxNVrOGkPOhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1MTM5Nw==", "bodyText": "Good finding. I think we can make further cleanups. Instead of creating a new message, we put the message directly to builderBySessionIdMap . We just need to dropFragmentationFrame .\n                   ClientMessage message = activeReader.getClientMessage();\n                    message.dropFragmentationFrame();\n                    long fragmentationId = Bits.readLongL(firstFrame.content, FRAGMENTATION_ID_OFFSET);\n                    if (ClientMessage.isFlagSet(flags, BEGIN_FRAGMENT_FLAG)) {\n                        builderBySessionIdMap.put(fragmentationId, message);\n\nWe have a new method on ClientMessage:\n  public void dropFragmentationFrame() {\n        startFrame = startFrame.next;\n    }\n\nand merge method should change accordingly. Dropping the fragmentation logic was there, and feeling wrong to begin with.\n public void merge(ClientMessage fragment) {\n        endFrame.next = fragment.startFrame;\n        endFrame = fragment.endFrame;\n    }\n\n@mdumandag How does that look ?", "url": "https://github.com/hazelcast/hazelcast/pull/17084#discussion_r440651397", "createdAt": "2020-06-16T07:46:15Z", "author": {"login": "sancar"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/util/ClientMessageDecoder.java", "diffHunk": "@@ -90,13 +90,14 @@ public HandlerStatus onRead() {\n                     throw new IllegalStateException(\n                             \"Fragmented client messages are not allowed before the client is authenticated.\");\n                 } else {\n-                    ClientMessage.ForwardFrameIterator frameIterator = activeReader.getClientMessage().frameIterator();\n+                    ClientMessage message = activeReader.getClientMessage();\n+                    ClientMessage.ForwardFrameIterator frameIterator = message.frameIterator();\n                     //ignore the fragmentationFrame\n                     frameIterator.next();\n                     ClientMessage.Frame startFrame = frameIterator.next();\n                     long fragmentationId = Bits.readLongL(firstFrame.content, FRAGMENTATION_ID_OFFSET);\n                     if (ClientMessage.isFlagSet(flags, BEGIN_FRAGMENT_FLAG)) {\n-                        builderBySessionIdMap.put(fragmentationId, ClientMessage.createForDecode(startFrame));\n+                        builderBySessionIdMap.put(fragmentationId, new ClientMessage(startFrame, message.getEndFrame()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d15d42b9c9727e76327d43d977bc184abec02e3"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f006ae421022068180639b80489d19bc13c771d", "author": {"user": {"login": "mdumandag", "name": "Metin Dumandag"}}, "url": "https://github.com/hazelcast/hazelcast/commit/8f006ae421022068180639b80489d19bc13c771d", "committedDate": "2020-06-16T13:06:09Z", "message": "do not create an extra message while putting it into"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMTE2NjQ0", "url": "https://github.com/hazelcast/hazelcast/pull/17084#pullrequestreview-432116644", "createdAt": "2020-06-17T07:10:02Z", "commit": {"oid": "8f006ae421022068180639b80489d19bc13c771d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMzU5MDUz", "url": "https://github.com/hazelcast/hazelcast/pull/17084#pullrequestreview-432359053", "createdAt": "2020-06-17T12:41:37Z", "commit": {"oid": "8f006ae421022068180639b80489d19bc13c771d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3686, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}