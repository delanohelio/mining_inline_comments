{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNDkxNDEz", "number": 17131, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwOTo1NToyOFrOEJEzsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwOTo1NToyOFrOEJEzsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTUxNDA5OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/map/EntryProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwOTo1NToyOFrOGpbAlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwOTo1NToyOFrOGpbAlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA4NzMxOQ==", "bodyText": "can we put your example code snippet here in javaDoc?\nclass EntryProc implements EntryProcessor {\n  process(Entry<K, V> e) {\n    ExtendedMapEntry entry = (ExtendedMapEntry) e;\n    if (hasTtl) { \n      entry.setValue(value + 1, 120, SECONDS);\n    } else {\n      // cannot use entry.setValue , need to use e.setValue instead\n      e.setValue(value + 1);\n    }\n  }\n}", "url": "https://github.com/hazelcast/hazelcast/pull/17131#discussion_r446087319", "createdAt": "2020-06-26T09:55:28Z", "author": {"login": "ahmetmircik"}, "path": "hazelcast/src/main/java/com/hazelcast/map/EntryProcessor.java", "diffHunk": "@@ -56,11 +57,17 @@\n  * otherwise EntryProcessor does not guarantee that it will modify the entry.\n  *<p>\n  * EntryProcessor instances can be shared between threads. If an EntryProcessor instance contains mutable state, proper\n- * concurrency control needs to be provided to coordinate access to mutable state. Another option is to rely on threadlocals.\n+ * concurrency control needs to be provided to coordinate access to mutable state. Another option is to rely\n+ * on {@code ThreadLocal}s.\n+ * <p>\n+ * Since Hazelcast 4.1, an instance of {@link ExtendedMapEntry} is provided as argument in {@link #process(Entry)}\n+ * method.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16a1af8ce4dc65cbca86243df3ceef38128b819d"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 403, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}