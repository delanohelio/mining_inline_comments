{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMTU3NDc0", "number": 17295, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMzoyMTo0NFrOEUmlaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMzoyMzoxMVrOEUmnfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMDM5MTQ0OnYy", "diffSide": "RIGHT", "path": "hazelcast-sql/src/main/java/com/hazelcast/sql/impl/calcite/parse/UnsupportedOperationVisitor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMzoyMTo0NFrOG65RbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMzozNjoyMVrOG65yoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQwODk0MA==", "bodyText": "We need the same for OFFSET probably", "url": "https://github.com/hazelcast/hazelcast/pull/17295#discussion_r464408940", "createdAt": "2020-08-03T13:21:44Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-sql/src/main/java/com/hazelcast/sql/impl/calcite/parse/UnsupportedOperationVisitor.java", "diffHunk": "@@ -165,6 +165,10 @@ private void processSelect(SqlSelect select) {\n         if (select.getGroup() != null && select.getGroup().size() > 0) {\n             throw unsupported(select.getGroup(), \"GROUP BY\");\n         }\n+\n+        if (select.getFetch() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72e756a02aed765e7c1e9a864e87d3f8b6eb2cf1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQxNzQ0MQ==", "bodyText": "Fixed.", "url": "https://github.com/hazelcast/hazelcast/pull/17295#discussion_r464417441", "createdAt": "2020-08-03T13:36:21Z", "author": {"login": "Holmistr"}, "path": "hazelcast-sql/src/main/java/com/hazelcast/sql/impl/calcite/parse/UnsupportedOperationVisitor.java", "diffHunk": "@@ -165,6 +165,10 @@ private void processSelect(SqlSelect select) {\n         if (select.getGroup() != null && select.getGroup().size() > 0) {\n             throw unsupported(select.getGroup(), \"GROUP BY\");\n         }\n+\n+        if (select.getFetch() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQwODk0MA=="}, "originalCommit": {"oid": "72e756a02aed765e7c1e9a864e87d3f8b6eb2cf1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMDM5Njc3OnYy", "diffSide": "RIGHT", "path": "hazelcast-sql/src/main/java/com/hazelcast/sql/impl/calcite/parse/UnsupportedOperationVisitor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMzoyMzoxMVrOG65UhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMzozNjozMFrOG65y-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQwOTczMw==", "bodyText": "We need a unit test to cover this case in ParserOperationsTest. Something like:\n@Test\n    public void testUnsupportedLimit() {\n        checkFailure(\n            \"SELECT a FROM t LIMIT 10\",\n            \"LIMIT is not supported\"\n        );\n    }", "url": "https://github.com/hazelcast/hazelcast/pull/17295#discussion_r464409733", "createdAt": "2020-08-03T13:23:11Z", "author": {"login": "devozerov"}, "path": "hazelcast-sql/src/main/java/com/hazelcast/sql/impl/calcite/parse/UnsupportedOperationVisitor.java", "diffHunk": "@@ -165,6 +165,10 @@ private void processSelect(SqlSelect select) {\n         if (select.getGroup() != null && select.getGroup().size() > 0) {\n             throw unsupported(select.getGroup(), \"GROUP BY\");\n         }\n+\n+        if (select.getFetch() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72e756a02aed765e7c1e9a864e87d3f8b6eb2cf1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQxNzUyOQ==", "bodyText": "Fixed.", "url": "https://github.com/hazelcast/hazelcast/pull/17295#discussion_r464417529", "createdAt": "2020-08-03T13:36:30Z", "author": {"login": "Holmistr"}, "path": "hazelcast-sql/src/main/java/com/hazelcast/sql/impl/calcite/parse/UnsupportedOperationVisitor.java", "diffHunk": "@@ -165,6 +165,10 @@ private void processSelect(SqlSelect select) {\n         if (select.getGroup() != null && select.getGroup().size() > 0) {\n             throw unsupported(select.getGroup(), \"GROUP BY\");\n         }\n+\n+        if (select.getFetch() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQwOTczMw=="}, "originalCommit": {"oid": "72e756a02aed765e7c1e9a864e87d3f8b6eb2cf1"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 389, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}