{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNDEzMTUx", "number": 16871, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzoxNDoxMFrODwqzeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwODoyNDozM1rODwrwew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzU5NTQ0OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/internal/partition/impl/PartitionReplicaManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzoxNDoxMFrOGDzCSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzoxNDoxMFrOGDzCSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYzNTA4MA==", "bodyText": "If there is a bad configuration, then it is better to throw an exception. Now you are at risk of loosing the problematic configuration completely and I have no idea if the system will actually behave correctly.", "url": "https://github.com/hazelcast/hazelcast/pull/16871#discussion_r406635080", "createdAt": "2020-04-10T07:14:10Z", "author": {"login": "pveentjer"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/partition/impl/PartitionReplicaManager.java", "diffHunk": "@@ -453,6 +465,9 @@ void reset() {\n         // permit count can exceed allowed parallelization count.\n         replicaSyncSemaphore.drainPermits();\n         replicaSyncSemaphore.release(maxParallelReplications);\n+        if (logger.isFinestEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4078622f54303743496dd0876f6b112d553ec240"}, "originalPosition": 115}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzc1MTYzOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/internal/partition/impl/PartitionReplicaManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwODoyNDozM1rOGD0eWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwODoyNDozM1rOGD0eWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY1ODY1MA==", "bodyText": "I think we should log this as a warning. So it will be visible.", "url": "https://github.com/hazelcast/hazelcast/pull/16871#discussion_r406658650", "createdAt": "2020-04-10T08:24:33Z", "author": {"login": "mdogan"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/partition/impl/PartitionReplicaManager.java", "diffHunk": "@@ -409,13 +413,21 @@ public int tryAcquireReplicaSyncPermits(int requestedPermits) {\n      */\n     public void releaseReplicaSyncPermits(int permits) {\n         assert permits > 0 : \"Invalid permits: \" + permits;\n+\n         replicaSyncSemaphore.release(permits);\n+\n         if (logger.isFinestEnabled()) {\n-            logger.finest(\"Released \" + permits + \" replica sync permits. Available permits: \"\n-                        + replicaSyncSemaphore.availablePermits());\n+            int availableReplicaSyncPermits = availableReplicaSyncPermits();\n+\n+            logger.finest(format(\"Released %d replica sync permits. Available permits: %d\",\n+                    permits, availableReplicaSyncPermits));\n+\n+            if (availableReplicaSyncPermits <= maxParallelReplications) {\n+                logger.finest(format(\"Replica sync permits exceeded the configured number! (available: %d, max: %d)\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4078622f54303743496dd0876f6b112d553ec240"}, "originalPosition": 101}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 646, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}