{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNDIzNzUw", "number": 16462, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMjoyMjo0N1rODXI0nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwODowMzo0M1rODXcLeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NTg4MzgwOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/internal/nearcache/impl/DefaultNearCache.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMjoyMjo0N1rOFcSnjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMjoyMjo0N1rOFcSnjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIwOTQ4Ng==", "bodyText": "This looks clearer:\nif (serializeKeys) {\n\tcheckInstanceOf(Data.class, key, \"key must be of type Data!\");\n} else {\n    checkNotInstanceOf(Data.class, key, \"key cannot be of type Data!\");        \n}", "url": "https://github.com/hazelcast/hazelcast/pull/16462#discussion_r365209486", "createdAt": "2020-01-10T12:22:47Z", "author": {"login": "ahmetmircik"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/nearcache/impl/DefaultNearCache.java", "diffHunk": "@@ -222,6 +223,8 @@ public V tryPublishReserved(K key, V value, long reservationId, boolean deserial\n     private void checkKeyFormat(K key) {\n         if (!serializeKeys) {\n             checkNotInstanceOf(Data.class, key, \"key cannot be of type Data!\");\n+        } else {\n+            checkInstanceOf(Data.class, key, \"key must be of type Data!\");\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15a0322816e5a745cca13c8ab94c4bce1531f78b"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTA1NTI4OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/client/impl/proxy/ClientReplicatedMapProxy.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwODowMzo0M1rOFcvJOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwODowMzo0M1rOFcvJOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY3Njg1Ng==", "bodyText": "can we fail fast here instead of forcing it to be false?", "url": "https://github.com/hazelcast/hazelcast/pull/16462#discussion_r365676856", "createdAt": "2020-01-13T08:03:43Z", "author": {"login": "ahmetmircik"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/proxy/ClientReplicatedMapProxy.java", "diffHunk": "@@ -112,7 +112,11 @@ protected void onInitialize() {\n     private void initNearCache() {\n         NearCacheConfig nearCacheConfig = getContext().getClientConfig().getNearCacheConfig(name);\n         if (nearCacheConfig != null) {\n-            nearCache = getContext().getNearCacheManager(getServiceName()).getOrCreateNearCache(name, nearCacheConfig);\n+            NearCacheConfig copyNearCacheConfig = new NearCacheConfig(nearCacheConfig);\n+            //We don't have serializeKeys support on replicated map nearcache\n+            copyNearCacheConfig.setSerializeKeys(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73efca89f265e5fb3c53a9d3a2893000e6007d30"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 854, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}