{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5OTEwMDAx", "number": 16414, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMzozMDoxNlrODWP4MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMzozMDoxNlrODWP4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NjU1NDA5OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/instance/impl/DefaultNodeExtension.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMzozMDoxN1rOFa5X4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNDozOTozMVrOFa7Ozg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc0NzI5OA==", "bodyText": "Shouldn't this be derived ?", "url": "https://github.com/hazelcast/hazelcast/pull/16414#discussion_r363747298", "createdAt": "2020-01-07T13:30:17Z", "author": {"login": "neilstevenson"}, "path": "hazelcast/src/main/java/com/hazelcast/instance/impl/DefaultNodeExtension.java", "diffHunk": "@@ -194,7 +194,7 @@ protected String constructBuildString(BuildInfo buildInfo) {\n     private void printNodeInfoInternal(BuildInfo buildInfo, String build) {\n         systemLogger.info(getEditionString() + \" \" + buildInfo.getVersion()\n                 + \" (\" + build + \") starting at \" + node.getThisAddress());\n-        systemLogger.info(\"Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.\");\n+        systemLogger.info(\"Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ad7ea81f4b0f73b00cd9f45fb6596af9e27acc8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc1MzY1OQ==", "bodyText": "How do you mean derived? If the idea is to print the current year, I think we can't go this way due to copyright expiration reasons.", "url": "https://github.com/hazelcast/hazelcast/pull/16414#discussion_r363753659", "createdAt": "2020-01-07T13:46:09Z", "author": {"login": "kwart"}, "path": "hazelcast/src/main/java/com/hazelcast/instance/impl/DefaultNodeExtension.java", "diffHunk": "@@ -194,7 +194,7 @@ protected String constructBuildString(BuildInfo buildInfo) {\n     private void printNodeInfoInternal(BuildInfo buildInfo, String build) {\n         systemLogger.info(getEditionString() + \" \" + buildInfo.getVersion()\n                 + \" (\" + build + \") starting at \" + node.getThisAddress());\n-        systemLogger.info(\"Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.\");\n+        systemLogger.info(\"Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc0NzI5OA=="}, "originalCommit": {"oid": "5ad7ea81f4b0f73b00cd9f45fb6596af9e27acc8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc3Nzc0Mg==", "bodyText": "Ok. So really my comment was \"could this be derived\" and the answer is \"no\".", "url": "https://github.com/hazelcast/hazelcast/pull/16414#discussion_r363777742", "createdAt": "2020-01-07T14:39:31Z", "author": {"login": "neilstevenson"}, "path": "hazelcast/src/main/java/com/hazelcast/instance/impl/DefaultNodeExtension.java", "diffHunk": "@@ -194,7 +194,7 @@ protected String constructBuildString(BuildInfo buildInfo) {\n     private void printNodeInfoInternal(BuildInfo buildInfo, String build) {\n         systemLogger.info(getEditionString() + \" \" + buildInfo.getVersion()\n                 + \" (\" + build + \") starting at \" + node.getThisAddress());\n-        systemLogger.info(\"Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.\");\n+        systemLogger.info(\"Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc0NzI5OA=="}, "originalCommit": {"oid": "5ad7ea81f4b0f73b00cd9f45fb6596af9e27acc8"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 835, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}