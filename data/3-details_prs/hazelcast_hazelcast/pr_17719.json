{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyNTg1Mjc4", "number": 17719, "title": "SQL: Fix memory leak in the client handler", "bodyText": "This PR fixes the memory leak that may happen in the case of exception during client execute and fetch operations.\nBefore the fix, an exception occurred during the client page processing could lead to orphaned handles in the QueryStateRegistry and QueryClientStateRegistry. With the fix, we cleanup handles in the case of exception.\nA better approach would be to encapsulate client result consumption into the QueryStateRegistry and remove the QueryClientStateRegistry completely. This way, we would have only one state map that is easier to manage. The problem is that this change would require significant changes to the Jet handler. Therefore, we use a simpler fix.", "createdAt": "2020-10-13T17:07:57Z", "url": "https://github.com/hazelcast/hazelcast/pull/17719", "merged": true, "mergeCommit": {"oid": "b3485e9afbbf6756aee37d4825828e734050abfb"}, "closed": true, "closedAt": "2020-10-15T10:08:00Z", "author": {"login": "devozerov"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSLoVYgH2gAyNTAyNTg1Mjc4OmRhY2Y3ODc0MGJkYmQ5MTljNGRlYTdhNmVjMjEzZjhhYmRmMmU1ZTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSuDnJgH2gAyNTAyNTg1Mjc4OmJiZTRlOTBiMTI3N2ZkYTFkN2I1N2QyZTJjZWFjMzM0NWQ5NjM1NTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "dacf78740bdbd919c4dea7a6ec213f8abdf2e5e7", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/dacf78740bdbd919c4dea7a6ec213f8abdf2e5e7", "committedDate": "2020-10-13T17:00:53Z", "message": "Done"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3de8236cedca2307622e501c2d6f0e6e056371c9", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/3de8236cedca2307622e501c2d6f0e6e056371c9", "committedDate": "2020-10-13T17:11:04Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MDE0NzE2", "url": "https://github.com/hazelcast/hazelcast/pull/17719#pullrequestreview-508014716", "createdAt": "2020-10-14T05:54:07Z", "commit": {"oid": "3de8236cedca2307622e501c2d6f0e6e056371c9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97df53a25cdd72228e18136a1653a399214585a2", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/97df53a25cdd72228e18136a1653a399214585a2", "committedDate": "2020-10-14T08:23:28Z", "message": "Fix HazelcastSqlException propagation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d225bcd797543335e5e46ec8699ecf91a92e9e8", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/7d225bcd797543335e5e46ec8699ecf91a92e9e8", "committedDate": "2020-10-14T08:28:33Z", "message": "checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NDEzMzE1", "url": "https://github.com/hazelcast/hazelcast/pull/17719#pullrequestreview-508413315", "createdAt": "2020-10-14T14:33:19Z", "commit": {"oid": "7d225bcd797543335e5e46ec8699ecf91a92e9e8"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDozMzoxOVrOHhWIxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDozODozMVrOHhWZ9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcyNzc1MQ==", "bodyText": "Add Test to the name", "url": "https://github.com/hazelcast/hazelcast/pull/17719#discussion_r504727751", "createdAt": "2020-10-14T14:33:19Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-sql/src/test/java/com/hazelcast/sql/SqlClientCursorCleanup.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.sql;\n+\n+import com.hazelcast.client.config.ClientConfig;\n+import com.hazelcast.core.HazelcastInstance;\n+import com.hazelcast.map.IMap;\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.nio.ObjectDataOutput;\n+import com.hazelcast.nio.serialization.DataSerializable;\n+import com.hazelcast.sql.impl.SqlInternalService;\n+import com.hazelcast.sql.impl.SqlServiceImpl;\n+import com.hazelcast.sql.impl.SqlTestSupport;\n+import com.hazelcast.test.HazelcastSerialClassRunner;\n+import com.hazelcast.test.annotation.ParallelJVMTest;\n+import com.hazelcast.test.annotation.QuickTest;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.junit.runner.RunWith;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+\n+@SuppressWarnings(\"StatementWithEmptyBody\")\n+@RunWith(HazelcastSerialClassRunner.class)\n+@Category({QuickTest.class, ParallelJVMTest.class})\n+public class SqlClientCursorCleanup extends SqlTestSupport {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d225bcd797543335e5e46ec8699ecf91a92e9e8"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDczMjE1MQ==", "bodyText": "The exception class is an important part of the exception. For example, NPE often has a null message.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        QueryException error = QueryException.error(e.getMessage(), e);\n          \n          \n            \n                        QueryException error = QueryException.error(e.toString(), e);", "url": "https://github.com/hazelcast/hazelcast/pull/17719#discussion_r504732151", "createdAt": "2020-10-14T14:38:31Z", "author": {"login": "viliam-durina"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/state/QueryClientStateRegistry.java", "diffHunk": "@@ -90,14 +99,26 @@ private SqlPage fetchInternal(\n     ) {\n         ResultIterator<SqlRow> iterator = clientCursor.getIterator();\n \n-        List<List<Data>> page = new ArrayList<>(cursorBufferSize);\n-        boolean last = fetchPage(iterator, page, cursorBufferSize, serializationService, isFirstPage);\n+        try {\n+            List<List<Data>> page = new ArrayList<>(cursorBufferSize);\n+            boolean last = fetchPage(iterator, page, cursorBufferSize, serializationService, isFirstPage);\n \n-        if (last) {\n-            deleteClientCursor(clientCursor);\n-        }\n+            return new SqlPage(page, last);\n+        } catch (HazelcastSqlException e) {\n+            // We use public API to extract results from the cursor. The cursor may throw HazelcastSqlException only. When\n+            // it happens, the cursor is already closed with the error, so we just re-throw.\n+            throw e;\n+        } catch (Exception e) {\n+            // Any other exception indicates that something has happened outside of the internal query state. For example,\n+            // we may fail to serialize a specific column value to Data. We have to close the cursor in this case.\n+            AbstractSqlResult result = clientCursor.getSqlResult();\n+\n+            QueryException error = QueryException.error(e.getMessage(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d225bcd797543335e5e46ec8699ecf91a92e9e8"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d4a9db217e5b8dff8386c21d1c2e39911c057f1", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/2d4a9db217e5b8dff8386c21d1c2e39911c057f1", "committedDate": "2020-10-15T08:08:48Z", "message": "Add \"Test\" to test name."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbe4e90b1277fda1d7b57d2e2ceac3345d963551", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/bbe4e90b1277fda1d7b57d2e2ceac3345d963551", "committedDate": "2020-10-15T09:07:27Z", "message": "Change error message"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3258, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}