{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExNDc3NDY4", "number": 17780, "title": "Additional SQL expression tests [IMDG-144]", "bodyText": "This PR adds a couple of missing tests to expressions infrastructure and Calcite integration classes.\nCloses #17360", "createdAt": "2020-10-28T11:31:20Z", "url": "https://github.com/hazelcast/hazelcast/pull/17780", "merged": true, "mergeCommit": {"oid": "36d11eb5c1cfeeb11be3a0e53136fbcb2767f6da"}, "closed": true, "closedAt": "2020-11-09T15:52:31Z", "author": {"login": "devozerov"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdW6rvDAH2gAyNTExNDc3NDY4OjRkZGZjNTNhNzAxNzUzZjM2NjUzMTdlOGY5ZDdlODY0NmM2Zjc4NTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABda0gz1AH2gAyNTExNDc3NDY4OjA1OWFlZjVlZWNlOGNlZTI0YjkzY2UxOTIyZDY0NmE5YWE1ZjQxY2U=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4ddfc53a701753f3665317e8f9d7e8646c6f7854", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/4ddfc53a701753f3665317e8f9d7e8646c6f7854", "committedDate": "2020-10-28T10:05:50Z", "message": "WIP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "574a396caecb809c66295d806ba443db2704f656", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/574a396caecb809c66295d806ba443db2704f656", "committedDate": "2020-10-28T10:14:23Z", "message": "WIP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c889c456aa09af15ade177c413183d7ee525e795", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/c889c456aa09af15ade177c413183d7ee525e795", "committedDate": "2020-10-28T10:16:32Z", "message": "ABS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95160fb990cdf973c56e435e524e798d094628df", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/95160fb990cdf973c56e435e524e798d094628df", "committedDate": "2020-10-28T10:19:34Z", "message": "Double funcs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b427b996a8cccc5abf8aa499397e7695d13e1223", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/b427b996a8cccc5abf8aa499397e7695d13e1223", "committedDate": "2020-10-28T10:23:20Z", "message": "RAND"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88f092cea7eab4d8d9498c09e852ecc1e2788390", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/88f092cea7eab4d8d9498c09e852ecc1e2788390", "committedDate": "2020-10-28T11:13:36Z", "message": "SIGN"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c8479ec04bf58f05bfb50987a2df3b7eedd74b7", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/9c8479ec04bf58f05bfb50987a2df3b7eedd74b7", "committedDate": "2020-10-28T11:29:44Z", "message": "Done"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNDQwNTcw", "url": "https://github.com/hazelcast/hazelcast/pull/17780#pullrequestreview-522440570", "createdAt": "2020-11-03T12:19:23Z", "commit": {"oid": "9c8479ec04bf58f05bfb50987a2df3b7eedd74b7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MjA3MTcy", "url": "https://github.com/hazelcast/hazelcast/pull/17780#pullrequestreview-526207172", "createdAt": "2020-11-09T12:35:46Z", "commit": {"oid": "9c8479ec04bf58f05bfb50987a2df3b7eedd74b7"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMjozNTo0NlrOHvsg2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMjozNzozOVrOHvsk-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc3NDQyNw==", "bodyText": "What about naming this MockCatalogReader?", "url": "https://github.com/hazelcast/hazelcast/pull/17780#discussion_r519774427", "createdAt": "2020-11-09T12:35:46Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-sql/src/test/java/com/hazelcast/sql/impl/calcite/validate/types/InferTypesTestSupport.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.sql.impl.calcite.validate.types;\n+\n+import com.hazelcast.sql.impl.calcite.validate.HazelcastSqlConformance;\n+import com.hazelcast.sql.impl.calcite.validate.HazelcastSqlValidator;\n+import com.hazelcast.sql.impl.calcite.validate.operators.HazelcastSqlTrimFunction;\n+import org.apache.calcite.config.CalciteConnectionConfig;\n+import org.apache.calcite.jdbc.CalciteSchema;\n+import org.apache.calcite.rel.type.RelDataType;\n+import org.apache.calcite.rel.type.RelDataTypeField;\n+import org.apache.calcite.sql.SqlBasicCall;\n+import org.apache.calcite.sql.SqlCall;\n+import org.apache.calcite.sql.SqlCallBinding;\n+import org.apache.calcite.sql.SqlIdentifier;\n+import org.apache.calcite.sql.SqlNode;\n+import org.apache.calcite.sql.parser.SqlParserPos;\n+import org.apache.calcite.sql.type.SqlTypeName;\n+import org.apache.calcite.sql.validate.SqlMoniker;\n+import org.apache.calcite.sql.validate.SqlNameMatcher;\n+import org.apache.calcite.sql.validate.SqlNameMatchers;\n+import org.apache.calcite.sql.validate.SqlValidatorCatalogReader;\n+import org.apache.calcite.sql.validate.SqlValidatorTable;\n+\n+import java.util.List;\n+\n+public class InferTypesTestSupport {\n+    protected static RelDataType type(SqlTypeName typeName) {\n+        return HazelcastTypeFactory.INSTANCE.createSqlType(typeName);\n+    }\n+\n+    protected static RelDataType typeUnknown() {\n+        return HazelcastTypeFactory.INSTANCE.createUnknownType();\n+    }\n+\n+    protected static SqlCallBinding createBinding() {\n+        SqlParserPos parserPos = new SqlParserPos(0, 0);\n+        SqlCall call = new SqlBasicCall(new HazelcastSqlTrimFunction(), new SqlNode[0], parserPos);\n+\n+        HazelcastSqlValidator validator = new HazelcastSqlValidator(\n+            new CatalogReader(),\n+            HazelcastTypeFactory.INSTANCE,\n+            HazelcastSqlConformance.INSTANCE\n+        );\n+\n+        return new SqlCallBinding(validator, null, call);\n+    }\n+\n+    private static class CatalogReader implements SqlValidatorCatalogReader {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c8479ec04bf58f05bfb50987a2df3b7eedd74b7"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc3NTQ4MQ==", "bodyText": "Might be better to use InferTypesTestSupport as a utility rather than as a superclass.", "url": "https://github.com/hazelcast/hazelcast/pull/17780#discussion_r519775481", "createdAt": "2020-11-09T12:37:39Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-sql/src/test/java/com/hazelcast/sql/impl/calcite/validate/types/ReplaceUnknownOperandTypeInferenceTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.sql.impl.calcite.validate.types;\n+\n+import com.hazelcast.test.HazelcastParallelClassRunner;\n+import com.hazelcast.test.annotation.ParallelJVMTest;\n+import com.hazelcast.test.annotation.QuickTest;\n+import org.apache.calcite.rel.type.RelDataType;\n+import org.apache.calcite.sql.SqlCallBinding;\n+import org.apache.calcite.sql.type.SqlTypeName;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.junit.runner.RunWith;\n+\n+import static junit.framework.TestCase.assertEquals;\n+\n+@RunWith(HazelcastParallelClassRunner.class)\n+@Category({QuickTest.class, ParallelJVMTest.class})\n+public class ReplaceUnknownOperandTypeInferenceTest extends InferTypesTestSupport {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c8479ec04bf58f05bfb50987a2df3b7eedd74b7"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "059aef5eece8cee24b93ce1922d646a9aa5f41ce", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/059aef5eece8cee24b93ce1922d646a9aa5f41ce", "committedDate": "2020-11-09T13:10:10Z", "message": "Rename catalog reader"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3110, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}