{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NTMzOTQ3", "number": 18007, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMDoyODoyOFrOFJfgjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjo0NjowNVrOFJ8UnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NDk3NzQwOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/client/SqlClientUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMDoyODoyOFrOIL2ZeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMDo0MDo1OFrOIL2oLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI5NjUwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static byte expectedResultTypeToBytes(SqlExpectedResultType expectedResultType) {\n          \n          \n            \n                public static byte expectedResultTypeToByte(SqlExpectedResultType expectedResultType) {", "url": "https://github.com/hazelcast/hazelcast/pull/18007#discussion_r549296505", "createdAt": "2020-12-28T10:28:28Z", "author": {"login": "viliam-durina"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/client/SqlClientUtils.java", "diffHunk": "@@ -38,4 +44,34 @@ public static SqlError exceptionToClientError(Exception exception, UUID localMem\n             sqlException.getOriginatingMemberId()\n         );\n     }\n+\n+    public static byte expectedResultTypeToBytes(SqlExpectedResultType expectedResultType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2155b8659c281ad378ef5f3bb48b766dd45a5a98"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMwMDI3MA==", "bodyText": "Applied the proposed change.", "url": "https://github.com/hazelcast/hazelcast/pull/18007#discussion_r549300270", "createdAt": "2020-12-28T10:40:58Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/client/SqlClientUtils.java", "diffHunk": "@@ -38,4 +44,34 @@ public static SqlError exceptionToClientError(Exception exception, UUID localMem\n             sqlException.getOriginatingMemberId()\n         );\n     }\n+\n+    public static byte expectedResultTypeToBytes(SqlExpectedResultType expectedResultType) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI5NjUwNQ=="}, "originalCommit": {"oid": "2155b8659c281ad378ef5f3bb48b766dd45a5a98"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTA0ODQ4OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/client/SqlClientUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMTowMjo0MlrOIL3BGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMToxMDo0MFrOIL3KYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMwNjY1MQ==", "bodyText": "Consider, moving expectedResultTypeToByte and expectedResultTypeToEnum method into SqlExpectedResultType enum with name something like toByte or expectedResultType and fromByte.\nThen we could use SqlExpectedResultType#toByte and would need to change this switch statement.\nWDYT?", "url": "https://github.com/hazelcast/hazelcast/pull/18007#discussion_r549306651", "createdAt": "2020-12-28T11:02:42Z", "author": {"login": "alex-dukhno"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/client/SqlClientUtils.java", "diffHunk": "@@ -38,4 +44,34 @@ public static SqlError exceptionToClientError(Exception exception, UUID localMem\n             sqlException.getOriginatingMemberId()\n         );\n     }\n+\n+    public static byte expectedResultTypeToByte(SqlExpectedResultType expectedResultType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ea3d089535eb1a71923d6a70091baca5d49ba93"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMwOTAyNw==", "bodyText": "SqlExpectedResultType is a public API, I would avoid exposing internals from there.", "url": "https://github.com/hazelcast/hazelcast/pull/18007#discussion_r549309027", "createdAt": "2020-12-28T11:10:40Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/client/SqlClientUtils.java", "diffHunk": "@@ -38,4 +44,34 @@ public static SqlError exceptionToClientError(Exception exception, UUID localMem\n             sqlException.getOriginatingMemberId()\n         );\n     }\n+\n+    public static byte expectedResultTypeToByte(SqlExpectedResultType expectedResultType) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMwNjY1MQ=="}, "originalCommit": {"oid": "4ea3d089535eb1a71923d6a70091baca5d49ba93"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTcyMDA4OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/sql/SqlExpectedResultType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNjowNzozNlrOIL8vxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNjowNzozNlrOIL8vxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQwMDUxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             */\n          \n          \n            \n             * @since 4.2\n          \n          \n            \n             */", "url": "https://github.com/hazelcast/hazelcast/pull/18007#discussion_r549400518", "createdAt": "2020-12-28T16:07:36Z", "author": {"login": "viliam-durina"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/SqlExpectedResultType.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.sql;\n+\n+/**\n+ * The expected statement result type.\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ea3d089535eb1a71923d6a70091baca5d49ba93"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTcyMTA1OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/sql/SqlStatement.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNjowODowMVrOIL8wUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjozOTo1NFrOIMeXyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQwMDY1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 */\n          \n          \n            \n                 * @since 4.2\n          \n          \n            \n                 */", "url": "https://github.com/hazelcast/hazelcast/pull/18007#discussion_r549400658", "createdAt": "2020-12-28T16:08:01Z", "author": {"login": "viliam-durina"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/SqlStatement.java", "diffHunk": "@@ -273,14 +282,39 @@ public SqlStatement setCursorBufferSize(int cursorBufferSize) {\n         return this;\n     }\n \n+    /**\n+     * Gets the expected result type.\n+     *\n+     * @return expected result type\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ea3d089535eb1a71923d6a70091baca5d49ba93"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk1MTQzNA==", "bodyText": "Applied.", "url": "https://github.com/hazelcast/hazelcast/pull/18007#discussion_r549951434", "createdAt": "2020-12-30T06:39:54Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/SqlStatement.java", "diffHunk": "@@ -273,14 +282,39 @@ public SqlStatement setCursorBufferSize(int cursorBufferSize) {\n         return this;\n     }\n \n+    /**\n+     * Gets the expected result type.\n+     *\n+     * @return expected result type\n+     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQwMDY1OA=="}, "originalCommit": {"oid": "4ea3d089535eb1a71923d6a70091baca5d49ba93"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTcyMTgyOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/sql/SqlStatement.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNjowODoxOVrOIL8wtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjo0MDowMVrOIMeX3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQwMDc1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 */\n          \n          \n            \n                 * @since 4.2\n          \n          \n            \n                 */", "url": "https://github.com/hazelcast/hazelcast/pull/18007#discussion_r549400758", "createdAt": "2020-12-28T16:08:19Z", "author": {"login": "viliam-durina"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/SqlStatement.java", "diffHunk": "@@ -273,14 +282,39 @@ public SqlStatement setCursorBufferSize(int cursorBufferSize) {\n         return this;\n     }\n \n+    /**\n+     * Gets the expected result type.\n+     *\n+     * @return expected result type\n+     */\n+    @Nonnull\n+    public SqlExpectedResultType getExpectedResultType() {\n+        return expectedResultType;\n+    }\n+\n+    /**\n+     * Sets the expected result type.\n+     *\n+     * @param expectedResultType expected result type\n+     * @return this instance for chaining\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ea3d089535eb1a71923d6a70091baca5d49ba93"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk1MTQ1Mw==", "bodyText": "Applied.", "url": "https://github.com/hazelcast/hazelcast/pull/18007#discussion_r549951453", "createdAt": "2020-12-30T06:40:01Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/SqlStatement.java", "diffHunk": "@@ -273,14 +282,39 @@ public SqlStatement setCursorBufferSize(int cursorBufferSize) {\n         return this;\n     }\n \n+    /**\n+     * Gets the expected result type.\n+     *\n+     * @return expected result type\n+     */\n+    @Nonnull\n+    public SqlExpectedResultType getExpectedResultType() {\n+        return expectedResultType;\n+    }\n+\n+    /**\n+     * Sets the expected result type.\n+     *\n+     * @param expectedResultType expected result type\n+     * @return this instance for chaining\n+     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQwMDc1OA=="}, "originalCommit": {"oid": "4ea3d089535eb1a71923d6a70091baca5d49ba93"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTY5ODIxOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/codec/ClientRemoveMigrationListenerCodec.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjo0NjowNVrOIMejwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwOToyMjo0M1rOIMltSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk1NDQ5Ng==", "bodyText": "Looks like there is a typo on the protocol side. specifiec  -> specified\nI know it is not related to your work but would you mind fixing that for us?", "url": "https://github.com/hazelcast/hazelcast/pull/18007#discussion_r549954496", "createdAt": "2020-12-30T06:46:05Z", "author": {"login": "sancar"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/codec/ClientRemoveMigrationListenerCodec.java", "diffHunk": "@@ -34,9 +34,9 @@\n  */\n \n /**\n- * Removes a Migration listener to the cluster.\n+ * Removes the specifiec migration listener.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a85129d208d810575379f34d4c143ac826299dc6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk4Mjg4MA==", "bodyText": "Fixed.", "url": "https://github.com/hazelcast/hazelcast/pull/18007#discussion_r549982880", "createdAt": "2020-12-30T07:25:31Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/codec/ClientRemoveMigrationListenerCodec.java", "diffHunk": "@@ -34,9 +34,9 @@\n  */\n \n /**\n- * Removes a Migration listener to the cluster.\n+ * Removes the specifiec migration listener.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk1NDQ5Ng=="}, "originalCommit": {"oid": "a85129d208d810575379f34d4c143ac826299dc6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDA2OTIwMA==", "bodyText": "Reverted back because it leads to test failures.", "url": "https://github.com/hazelcast/hazelcast/pull/18007#discussion_r550069200", "createdAt": "2020-12-30T09:19:24Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/codec/ClientRemoveMigrationListenerCodec.java", "diffHunk": "@@ -34,9 +34,9 @@\n  */\n \n /**\n- * Removes a Migration listener to the cluster.\n+ * Removes the specifiec migration listener.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk1NDQ5Ng=="}, "originalCommit": {"oid": "a85129d208d810575379f34d4c143ac826299dc6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDA3MTYyNQ==", "bodyText": "Fixed through protocol generator.", "url": "https://github.com/hazelcast/hazelcast/pull/18007#discussion_r550071625", "createdAt": "2020-12-30T09:22:43Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/codec/ClientRemoveMigrationListenerCodec.java", "diffHunk": "@@ -34,9 +34,9 @@\n  */\n \n /**\n- * Removes a Migration listener to the cluster.\n+ * Removes the specifiec migration listener.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk1NDQ5Ng=="}, "originalCommit": {"oid": "a85129d208d810575379f34d4c143ac826299dc6"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 44, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}