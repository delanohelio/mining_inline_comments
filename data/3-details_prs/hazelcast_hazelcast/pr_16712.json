{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMjM1Nzkz", "number": 16712, "title": "initial commit for #12298", "bodyText": "Hi,\nfix for #12298\nmvn clean package -P checkstyle,spotbugs - pass\nsigned CLA sent\nAt the moment I just ported 1 to 1 existing tests - should i extract common stuff to some base class ?", "createdAt": "2020-03-02T08:16:09Z", "url": "https://github.com/hazelcast/hazelcast/pull/16712", "merged": true, "mergeCommit": {"oid": "72ab6072b1bc7fe6ab03f35c1bd3c017b037af4b"}, "closed": true, "closedAt": "2020-03-11T10:52:39Z", "author": {"login": "KowalczykBartek"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJfXIBgH2gAyMzgyMjM1NzkzOjBmMmMzODE4ZWRkMDQyYmE0OWU4NWI3NTdlZjAxMGEzNjI4ZmM3YTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMkb7wAFqTM3MjYyOTQzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0f2c3818edd042ba49e85b757ef010a3628fc7a8", "author": {"user": {"login": "KowalczykBartek", "name": "Bartek Kowalczyk"}}, "url": "https://github.com/hazelcast/hazelcast/commit/0f2c3818edd042ba49e85b757ef010a3628fc7a8", "committedDate": "2020-03-01T20:43:43Z", "message": "initial commit for #12298"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MDQ2Nzc4", "url": "https://github.com/hazelcast/hazelcast/pull/16712#pullrequestreview-367046778", "createdAt": "2020-03-02T09:21:07Z", "commit": {"oid": "0f2c3818edd042ba49e85b757ef010a3628fc7a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwOToyMTowN1rOFwYUsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwOToyMTowN1rOFwYUsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI3NDQ4MA==", "bodyText": "Will this set the stdout for all other tests that may be running in parallel in the same JVM?", "url": "https://github.com/hazelcast/hazelcast/pull/16712#discussion_r386274480", "createdAt": "2020-03-02T09:21:07Z", "author": {"login": "ihsandemir"}, "path": "hazelcast/src/test/java/com/hazelcast/client/console/ClientConsoleAppTest.java", "diffHunk": "@@ -0,0 +1,211 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.client.console;\n+\n+import com.hazelcast.client.HazelcastClient;\n+import com.hazelcast.client.config.ClientConfig;\n+import com.hazelcast.config.Config;\n+import com.hazelcast.core.Hazelcast;\n+import com.hazelcast.core.HazelcastInstance;\n+import com.hazelcast.map.IMap;\n+import com.hazelcast.test.HazelcastSerialClassRunner;\n+import com.hazelcast.test.HazelcastTestSupport;\n+import com.hazelcast.test.annotation.QuickTest;\n+import org.hamcrest.CoreMatchers;\n+import org.junit.After;\n+import org.junit.AfterClass;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.junit.runner.RunWith;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import java.io.UnsupportedEncodingException;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertTrue;\n+/**\n+ * Tests for demo client console application.\n+ */\n+@RunWith(HazelcastSerialClassRunner.class)\n+@Category({QuickTest.class})\n+public class ClientConsoleAppTest extends HazelcastTestSupport {\n+\n+    private static final PrintStream systemOutOrig = System.out;\n+\n+    private static ByteArrayOutputStream baos;\n+\n+    private  HazelcastInstance hazelcastInstance;\n+\n+    @BeforeClass\n+    public static void beforeClass() {\n+        baos = new ByteArrayOutputStream();\n+        try {\n+            System.setOut(new PrintStream(baos, true, \"UTF-8\"));\n+        } catch (UnsupportedEncodingException e) {\n+            // Should never happen for the UTF-8\n+        }\n+    }\n+\n+    @AfterClass\n+    public static void afterClass() {\n+        System.setOut(systemOutOrig);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f2c3818edd042ba49e85b757ef010a3628fc7a8"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30e090d3e1ab74011b636d1c7de44b93f5c1e1b7", "author": {"user": {"login": "KowalczykBartek", "name": "Bartek Kowalczyk"}}, "url": "https://github.com/hazelcast/hazelcast/commit/30e090d3e1ab74011b636d1c7de44b93f5c1e1b7", "committedDate": "2020-03-04T19:32:17Z", "message": "allow to explicitly pass output buffer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNTI4NDY5", "url": "https://github.com/hazelcast/hazelcast/pull/16712#pullrequestreview-372528469", "createdAt": "2020-03-11T07:40:53Z", "commit": {"oid": "30e090d3e1ab74011b636d1c7de44b93f5c1e1b7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNjI5NDMw", "url": "https://github.com/hazelcast/hazelcast/pull/16712#pullrequestreview-372629430", "createdAt": "2020-03-11T10:20:16Z", "commit": {"oid": "30e090d3e1ab74011b636d1c7de44b93f5c1e1b7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3855, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}