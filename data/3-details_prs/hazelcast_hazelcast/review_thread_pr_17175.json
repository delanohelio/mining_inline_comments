{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MDg1NDY1", "number": 17175, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjowNDoxMVrOEOHYGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjowNDoxMVrOEOHYGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjM2Mzc3OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/map/EntryProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjowNDoxMVrOGxFZtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjowNDoxMVrOGxFZtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEyMTkxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Since Hazelcast 4.1, an instance of {@link ExtendedMapEntry} is provided as argument in {@link #process(Entry)}\n          \n          \n            \n             * Since Hazelcast 4.0.3, an instance of {@link ExtendedMapEntry} is provided as argument in {@link #process(Entry)}", "url": "https://github.com/hazelcast/hazelcast/pull/17175#discussion_r454121910", "createdAt": "2020-07-14T06:04:11Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/map/EntryProcessor.java", "diffHunk": "@@ -56,11 +57,40 @@\n  * otherwise EntryProcessor does not guarantee that it will modify the entry.\n  *<p>\n  * EntryProcessor instances can be shared between threads. If an EntryProcessor instance contains mutable state, proper\n- * concurrency control needs to be provided to coordinate access to mutable state. Another option is to rely on threadlocals.\n+ * concurrency control needs to be provided to coordinate access to mutable state. Another option is to rely\n+ * on {@code ThreadLocal}s.\n+ * <p>\n+ * Since Hazelcast 4.1, an instance of {@link ExtendedMapEntry} is provided as argument in {@link #process(Entry)}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ba385658c08d7980299a94b6e785b4aa5bffb09"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 431, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}