{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4OTAzMjI0", "number": 17366, "title": "Reduce client results latency", "bodyText": "", "createdAt": "2020-08-17T15:27:21Z", "url": "https://github.com/hazelcast/hazelcast/pull/17366", "merged": true, "mergeCommit": {"oid": "e73814b3e64c979ae828cad6c29cde7e92936f21"}, "closed": true, "closedAt": "2020-08-18T10:49:59Z", "author": {"login": "viliam-durina"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc_xdTcAH2gAyNDY4OTAzMjI0OjdhNWEzNTBjNGRlMjg0MDA4M2U3YzEwNjRkZWJkM2YwMGU0OTZmMTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAELh9gFqTQ2OTE4MTk4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7a5a350c4de2840083e7c1064debd3f00e496f14", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/7a5a350c4de2840083e7c1064debd3f00e496f14", "committedDate": "2020-08-17T12:20:40Z", "message": "Improve client performance\n\nStart fetching next page as soon as the previous page is ready to\niterate. Before: next page fetch was started after the first row after\nthe current page was requested. Cuts down the time for a query with many\nresult rows by 20% on localhost and more on a network, depending on the\nRTT."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dfd0d289cf12985c779352ed8861a67f700f89d", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/0dfd0d289cf12985c779352ed8861a67f700f89d", "committedDate": "2020-08-17T14:00:38Z", "message": "Reduce client results latency"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e173a69a9d4448039a499d5ba210facd426d293", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/3e173a69a9d4448039a499d5ba210facd426d293", "committedDate": "2020-08-17T14:16:26Z", "message": "Reduce client results latency"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "500aa994f4b425905f3185fb6a3af323fc700fa7", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/500aa994f4b425905f3185fb6a3af323fc700fa7", "committedDate": "2020-08-17T15:22:31Z", "message": "Only use the minimum-latency mode if requested"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "807210e1db24b7fa5d4fe7dbe5466de697fb359b", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/807210e1db24b7fa5d4fe7dbe5466de697fb359b", "committedDate": "2020-08-17T15:27:09Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "986a2a04501424e92eb6c9adc76aebe4db3fee19", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/986a2a04501424e92eb6c9adc76aebe4db3fee19", "committedDate": "2020-08-18T07:07:46Z", "message": "Fix test failure and improve the test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "057e19e0970bba6f7ea8465bf807fc08126d0d61", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/057e19e0970bba6f7ea8465bf807fc08126d0d61", "committedDate": "2020-08-18T07:08:14Z", "message": "Merge branch 'sql' of ssh://github.com/hazelcast/hazelcast into sql"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2d8814022a43a574b16b5a80d85e5b14b334ff9", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/a2d8814022a43a574b16b5a80d85e5b14b334ff9", "committedDate": "2020-08-18T07:09:35Z", "message": "Merge branch 'sql' into sql-client-performance\n\n# Conflicts:\n#\thazelcast/src/main/java/com/hazelcast/sql/impl/exec/root/BlockingRootResultConsumer.java\n#\thazelcast/src/main/java/com/hazelcast/sql/impl/state/QueryClientStateRegistry.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MDU2NDg2", "url": "https://github.com/hazelcast/hazelcast/pull/17366#pullrequestreview-469056486", "createdAt": "2020-08-18T07:24:16Z", "commit": {"oid": "a2d8814022a43a574b16b5a80d85e5b14b334ff9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNzoyNDoxNlrOHCGq7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNzoyNDoxNlrOHCGq7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk2ODQ5NQ==", "bodyText": "I vote for avoiding this asynchrony now. It complicates things while at the same time it is not proven that it brings anything in real use cases. The current implementation has two issues:\n\nIt lacks synchronization on close/cancel. One of the typical use cases is closing the cursor from the other thread, not the same. Even JDBC standard assumes such usage pattern\nWe do not want to have request-response flow at all. In the mid-term, we are going to rework client communication to streaming mode, when multiple responses are sent from the server to the client. This will make the current implementation obsolete. And it is likely to happen very soon.", "url": "https://github.com/hazelcast/hazelcast/pull/17366#discussion_r471968495", "createdAt": "2020-08-18T07:24:16Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/client/SqlClientResult.java", "diffHunk": "@@ -49,6 +50,7 @@\n \n     private boolean closed;\n     private boolean iteratorAccessed;\n+    private ClientInvocationFuture pendingPageFuture;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2d8814022a43a574b16b5a80d85e5b14b334ff9"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MDYwNDUz", "url": "https://github.com/hazelcast/hazelcast/pull/17366#pullrequestreview-469060453", "createdAt": "2020-08-18T07:29:34Z", "commit": {"oid": "a2d8814022a43a574b16b5a80d85e5b14b334ff9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNzoyOTozNFrOHCG3hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNzoyOTozNFrOHCG3hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk3MTcxOQ==", "bodyText": "Can we convert int constants to enum? This will make methods relying on these constants easier to understand and refactor.\nAlso, ResultIterator could be a top-level class.", "url": "https://github.com/hazelcast/hazelcast/pull/17366#discussion_r471971719", "createdAt": "2020-08-18T07:29:34Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/AbstractSqlResult.java", "diffHunk": "@@ -17,15 +17,51 @@\n package com.hazelcast.sql.impl;\n \n import com.hazelcast.sql.SqlResult;\n+import com.hazelcast.sql.SqlRow;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Iterator;\n \n public abstract class AbstractSqlResult implements SqlResult {\n \n     public abstract QueryId getQueryId();\n \n     public abstract void closeOnError(QueryException exception);\n \n+    @Nonnull @Override\n+    public abstract ResultIterator<SqlRow> iterator();\n+\n     @Override\n     public void close() {\n         closeOnError(QueryException.cancelledByUser());\n     }\n+\n+    public interface ResultIterator<T> extends Iterator<T> {\n+\n+        /**\n+         * A result value from {@link #hasNextImmediately()} meaning that a next\n+         * item is available immediately.\n+         */\n+        int YES = 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2d8814022a43a574b16b5a80d85e5b14b334ff9"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MDYxMzU5", "url": "https://github.com/hazelcast/hazelcast/pull/17366#pullrequestreview-469061359", "createdAt": "2020-08-18T07:30:43Z", "commit": {"oid": "a2d8814022a43a574b16b5a80d85e5b14b334ff9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNzozMDo0M1rOHCG6qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNzozMDo0M1rOHCG6qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk3MjUyMA==", "bodyText": "Minor: a better name for this would be something like waitForFullBatch.", "url": "https://github.com/hazelcast/hazelcast/pull/17366#discussion_r471972520", "createdAt": "2020-08-18T07:30:43Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/exec/root/BlockingRootResultConsumer.java", "diffHunk": "@@ -33,6 +33,9 @@\n     /** Iterator over produced rows. */\n     private final InternalIterator iterator = new InternalIterator();\n \n+    /** Enables {@link ResultIterator#RETRY} result from {@link ResultIterator#hasNextImmediately()} */\n+    private final boolean useMinimumLatency;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2d8814022a43a574b16b5a80d85e5b14b334ff9"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MDY0ODQz", "url": "https://github.com/hazelcast/hazelcast/pull/17366#pullrequestreview-469064843", "createdAt": "2020-08-18T07:35:27Z", "commit": {"oid": "a2d8814022a43a574b16b5a80d85e5b14b334ff9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNzozNToyN1rOHCHGHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNzozNToyN1rOHCHGHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk3NTQ1NA==", "bodyText": "I do not quite understand how it affects IMDG. Consider that the batch is not available immediately for IMDG. Will it stop waiting for results and return a semi-filled batch back to the client?", "url": "https://github.com/hazelcast/hazelcast/pull/17366#discussion_r471975454", "createdAt": "2020-08-18T07:35:27Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/state/QueryClientStateRegistry.java", "diffHunk": "@@ -94,24 +94,27 @@ private SqlPage fetchInternal(\n     }\n \n     private static boolean fetchPage(\n-        Iterator<SqlRow> iterator,\n+        ResultIterator<SqlRow> iterator,\n         List<List<Data>> page,\n         int cursorBufferSize,\n         InternalSerializationService serializationService\n     ) {\n-        while (iterator.hasNext()) {\n+        assert cursorBufferSize > 0;\n+\n+        if (!iterator.hasNext()) {\n+            return true;\n+        }\n+\n+        int res;\n+        do {\n             SqlRow row = iterator.next();\n             List<Data> convertedRow = convertRow(row, serializationService);\n \n             page.add(convertedRow);\n+            res = iterator.hasNextImmediately();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2d8814022a43a574b16b5a80d85e5b14b334ff9"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "523c6a5649801e2bcad95e1e3f6feba23eb733a0", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/523c6a5649801e2bcad95e1e3f6feba23eb733a0", "committedDate": "2020-08-18T08:24:47Z", "message": "Revert \"Improve client performance\"\n\nThis reverts commit 7a5a350c4de2840083e7c1064debd3f00e496f14."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51fafae2871702461ff8d32ae2297864e0f088b4", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/51fafae2871702461ff8d32ae2297864e0f088b4", "committedDate": "2020-08-18T08:26:35Z", "message": "Renaming"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1143b2050f8c7f355ea794782c7320bdd5c33d83", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/1143b2050f8c7f355ea794782c7320bdd5c33d83", "committedDate": "2020-08-18T08:43:30Z", "message": "Move ResultIterator to top-level class, return enum"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "903248a865af8bd3f1ce4e314aa56ab1a1dc0d9b", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/903248a865af8bd3f1ce4e314aa56ab1a1dc0d9b", "committedDate": "2020-08-18T08:57:12Z", "message": "Touchups"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6edff63160b1b3b9c52c2d09198337fae31d8e66", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/6edff63160b1b3b9c52c2d09198337fae31d8e66", "committedDate": "2020-08-18T09:59:53Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MTgxOTgw", "url": "https://github.com/hazelcast/hazelcast/pull/17366#pullrequestreview-469181980", "createdAt": "2020-08-18T10:09:27Z", "commit": {"oid": "6edff63160b1b3b9c52c2d09198337fae31d8e66"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3395, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}