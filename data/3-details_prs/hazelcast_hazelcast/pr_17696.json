{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MTk5MDkz", "number": 17696, "title": "Introduce mode for persistent-memory configuration", "bodyText": "Introduce config attribute for the operational mode of the persistent memory. Two modes supported: MOUNTED (FS DAX) and SYSTEM_MEMORY (KMEM DAX). With this setting, the user can define to use PMEM in the KMEM DAX mode. Additionally, an enabled toggle is added to persistent-memory, which makes it explicit when persisten memory is used. For legacy reasons, if the persistent-memory-directory that was introduced in 4.0 is set, enabled is set to true, so the users already using persistent memory don't need to change their configs. Otherwise, the persistent memory should be explicitly enabled by setting enabled to\ntrue, since the default is false.\nEE PR: hazelcast/hazelcast-enterprise#3814", "createdAt": "2020-10-07T12:03:58Z", "url": "https://github.com/hazelcast/hazelcast/pull/17696", "merged": true, "mergeCommit": {"oid": "b2c6871b62243e6efa57640e01c8ee953a5680b8"}, "closed": true, "closedAt": "2020-10-14T14:47:55Z", "author": {"login": "blazember"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQhi4-AFqTUwNDczOTIzMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSdyZdAFqTUwODM4ODcxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0NzM5MjMz", "url": "https://github.com/hazelcast/hazelcast/pull/17696#pullrequestreview-504739233", "createdAt": "2020-10-08T12:41:46Z", "commit": {"oid": "928fdfbbbc055a5a720504f20c17ba4426259d2e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjo0MTo0NlrOHecorQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjo0NTo1M1rOHecy8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY4ODQ5Mw==", "bodyText": "If enabled flag is set to false, why do we still have the directory element underneath?", "url": "https://github.com/hazelcast/hazelcast/pull/17696#discussion_r501688493", "createdAt": "2020-10-08T12:41:46Z", "author": {"login": "petrpleshachkov"}, "path": "hazelcast-spring-tests/src/test/resources/com/hazelcast/spring/node-client-applicationContext-hazelcast.xml", "diffHunk": "@@ -433,7 +433,7 @@\n                           min-block-size=\"10\"\n                           page-size=\"20\">\n             <hz:size unit=\"GIGABYTES\" value=\"256\"/>\n-            <hz:persistent-memory>\n+            <hz:persistent-memory enabled=\"false\" mode=\"MOUNTED\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "928fdfbbbc055a5a720504f20c17ba4426259d2e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY4OTQyMg==", "bodyText": "If enabledNode is false, shall we go through the directories?", "url": "https://github.com/hazelcast/hazelcast/pull/17696#discussion_r501689422", "createdAt": "2020-10-08T12:43:17Z", "author": {"login": "petrpleshachkov"}, "path": "hazelcast-spring/src/main/java/com/hazelcast/spring/AbstractHazelcastBeanDefinitionParser.java", "diffHunk": "@@ -558,7 +559,24 @@ protected void handleNativeMemory(Node node) {\n             configBuilder.addPropertyValue(\"nativeMemoryConfig\", beanDefinition);\n         }\n \n-        private void handlePersistentMemoryConfig(Node pmemNode, ManagedList<BeanDefinition> directoriesList) {\n+        private void handlePersistentMemoryConfig(Node pmemNode, BeanDefinitionBuilder pmemConfigBuilder,\n+                                                  ManagedList<BeanDefinition> directoriesList) {\n+            Node enabledNode = pmemNode.getAttributes().getNamedItem(\"enabled\");\n+            if (enabledNode != null) {\n+                boolean enabled = getBooleanValue(getTextContent(enabledNode));\n+                pmemConfigBuilder.addPropertyValue(\"enabled\", enabled);\n+            }\n+\n+            Node mode = pmemNode.getAttributes().getNamedItem(\"mode\");\n+            if (mode != null) {\n+                String modeValue = getTextContent(mode);\n+                try {\n+                    pmemConfigBuilder.addPropertyValue(\"mode\", PersistentMemoryMode.valueOf(modeValue));\n+                } catch (Exception ex) {\n+                    throw new InvalidConfigurationException(\"Invalid 'mode' for 'persistent-memory': \" + modeValue);\n+                }\n+            }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "928fdfbbbc055a5a720504f20c17ba4426259d2e"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY5MTEyMw==", "bodyText": "Javadoc would be useful.", "url": "https://github.com/hazelcast/hazelcast/pull/17696#discussion_r501691123", "createdAt": "2020-10-08T12:45:53Z", "author": {"login": "petrpleshachkov"}, "path": "hazelcast/src/main/java/com/hazelcast/config/PersistentMemoryConfig.java", "diffHunk": "@@ -28,11 +28,18 @@\n  * Configuration class for persistent memory devices (e.g. Intel Optane).\n  */\n public class PersistentMemoryConfig {\n+    private boolean enabled;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "928fdfbbbc055a5a720504f20c17ba4426259d2e"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NDMwMTky", "url": "https://github.com/hazelcast/hazelcast/pull/17696#pullrequestreview-505430192", "createdAt": "2020-10-09T07:37:34Z", "commit": {"oid": "9064d7aad4639670ab3188729d13a8c1c4f6a4cb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0eebe692bab24f521a762fe6ae274c7e667835b6", "author": {"user": {"login": "blazember", "name": "Zolt\u00e1n Baranyi"}}, "url": "https://github.com/hazelcast/hazelcast/commit/0eebe692bab24f521a762fe6ae274c7e667835b6", "committedDate": "2020-10-12T14:21:57Z", "message": "Introduce mode for persistent-memory configuration\n\nIntroduce config attribute for the operational mode of the persistent\nmemory. Two modes supported: `MOUNTED (FS DAX)` and `SYSTEM_MEMORY (KMEM\nDAX)`. With this setting, the user can define to use PMEM in the KMEM DAX\nmode. Additionally, an `enabled` toggle is added to `persistent-memory`,\nwhich makes it explicit when persisten memory is used. For legacy\nreasons, if the `persistent-memory-directory` that was introduced in 4.0\nis set, `enabled` is set to `true`, so the users already using\npersistent memory don't need to change their configs. Otherwise, the\npersistent memory should be explicitly enabled by setting `enabled` to\n`true`, since the default is `false`."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4635263f5949f26088f504af18f6c2408e0b23a", "author": {"user": {"login": "blazember", "name": "Zolt\u00e1n Baranyi"}}, "url": "https://github.com/hazelcast/hazelcast/commit/b4635263f5949f26088f504af18f6c2408e0b23a", "committedDate": "2020-10-12T14:21:57Z", "message": "Test fix: add missing enabled toggle in fullconfig-no-netork yaml config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b877bc503e23cef30f90d87cea12627fdab2169", "author": {"user": {"login": "blazember", "name": "Zolt\u00e1n Baranyi"}}, "url": "https://github.com/hazelcast/hazelcast/commit/1b877bc503e23cef30f90d87cea12627fdab2169", "committedDate": "2020-10-12T14:21:57Z", "message": "Address review comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9064d7aad4639670ab3188729d13a8c1c4f6a4cb", "author": {"user": {"login": "blazember", "name": "Zolt\u00e1n Baranyi"}}, "url": "https://github.com/hazelcast/hazelcast/commit/9064d7aad4639670ab3188729d13a8c1c4f6a4cb", "committedDate": "2020-10-08T21:01:38Z", "message": "Address review comment"}, "afterCommit": {"oid": "1b877bc503e23cef30f90d87cea12627fdab2169", "author": {"user": {"login": "blazember", "name": "Zolt\u00e1n Baranyi"}}, "url": "https://github.com/hazelcast/hazelcast/commit/1b877bc503e23cef30f90d87cea12627fdab2169", "committedDate": "2020-10-12T14:21:57Z", "message": "Address review comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MzY1MjE1", "url": "https://github.com/hazelcast/hazelcast/pull/17696#pullrequestreview-507365215", "createdAt": "2020-10-13T12:11:49Z", "commit": {"oid": "1b877bc503e23cef30f90d87cea12627fdab2169"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMjoxMTo0OVrOHgjjjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMjoxMTo0OVrOHgjjjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg5OTAyMw==", "bodyText": "Looks like this method and none of the overriden methods use the mode argument.", "url": "https://github.com/hazelcast/hazelcast/pull/17696#discussion_r503899023", "createdAt": "2020-10-13T12:11:49Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/config/AbstractDomConfigProcessor.java", "diffHunk": "@@ -312,33 +315,63 @@ protected void fillNativeMemoryConfig(Node node, NativeMemoryConfig nativeMemory\n                 String value = getTextContent(n);\n                 nativeMemoryConfig.setMetadataSpacePercentage(Float.parseFloat(value));\n             } else if (matches(\"persistent-memory-directory\", nodeName)) {\n-                nativeMemoryConfig.getPersistentMemoryConfig()\n-                                  .addDirectoryConfig(new PersistentMemoryDirectoryConfig(getTextContent(n).trim()));\n+                PersistentMemoryConfig pmemConfig = nativeMemoryConfig.getPersistentMemoryConfig();\n+                pmemConfig.addDirectoryConfig(new PersistentMemoryDirectoryConfig(getTextContent(n).trim()));\n+                // we enable the persistent memory configuration for legacy reasons\n+                pmemConfig.setEnabled(true);\n             } else if (matches(\"persistent-memory\", nodeName)) {\n                 handlePersistentMemoryConfig(nativeMemoryConfig.getPersistentMemoryConfig(), n);\n             }\n         }\n     }\n \n-    protected void handlePersistentMemoryConfig(PersistentMemoryConfig persistentMemoryConfig, Node node) {\n+    private void handlePersistentMemoryConfig(PersistentMemoryConfig persistentMemoryConfig, Node node) {\n+        Node enabledNode = getNamedItemNode(node, \"enabled\");\n+            if (enabledNode != null) {\n+            boolean enabled = getBooleanValue(getTextContent(enabledNode));\n+            persistentMemoryConfig.setEnabled(enabled);\n+        }\n+\n+        final Node modeNode = getNamedItemNode(node, \"mode\");\n+        final String modeStr = getTextContent(modeNode);\n+        PersistentMemoryMode mode = PersistentMemoryMode.MOUNTED;\n+        if (!StringUtil.isNullOrEmptyAfterTrim(modeStr)) {\n+            try {\n+                mode = PersistentMemoryMode.valueOf(modeStr);\n+                persistentMemoryConfig.setMode(mode);\n+            } catch (Exception ex) {\n+                throw new InvalidConfigurationException(\"Invalid 'mode' for 'persistent-memory': \" + modeStr);\n+            }\n+        }\n+\n         for (Node parent : childElements(node)) {\n             final String nodeName = cleanNodeName(parent);\n             if (matches(\"directories\", nodeName)) {\n+                if (PersistentMemoryMode.SYSTEM_MEMORY == mode) {\n+                    throw new InvalidConfigurationException(\"Directories for 'persistent-memory' should only be\"\n+                            + \" defined if the 'mode' is set to '\" + PersistentMemoryMode.MOUNTED.name() + \"'\");\n+                }\n+\n                 for (Node dirNode : childElements(parent)) {\n-                    final String childNodeName = cleanNodeName(dirNode);\n-                    if (matches(\"directory\", childNodeName)) {\n-                        Node numaNodeIdNode = getNamedItemNode(dirNode, \"numa-node\");\n-                        int numaNodeId = numaNodeIdNode != null\n-                                ? getIntegerValue(\"numa-node\", getTextContent(numaNodeIdNode))\n-                                : -1;\n-                        String directory = getTextContent(dirNode).trim();\n-                        persistentMemoryConfig.addDirectoryConfig(new PersistentMemoryDirectoryConfig(directory, numaNodeId));\n-                    }\n+                    handlePersistentMemoryDirectory(persistentMemoryConfig, mode, dirNode);\n                 }\n             }\n         }\n     }\n \n+    protected void handlePersistentMemoryDirectory(PersistentMemoryConfig persistentMemoryConfig,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b877bc503e23cef30f90d87cea12627fdab2169"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74713a3c2ee866ff76b913498bf87da8d5b7f682", "author": {"user": {"login": "blazember", "name": "Zolt\u00e1n Baranyi"}}, "url": "https://github.com/hazelcast/hazelcast/commit/74713a3c2ee866ff76b913498bf87da8d5b7f682", "committedDate": "2020-10-13T20:24:26Z", "message": "Return this in all PmemConfig setters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11d8435b1fe8166fc1a35906934fa6a12415052a", "author": {"user": {"login": "blazember", "name": "Zolt\u00e1n Baranyi"}}, "url": "https://github.com/hazelcast/hazelcast/commit/11d8435b1fe8166fc1a35906934fa6a12415052a", "committedDate": "2020-10-13T20:28:45Z", "message": "Address review comment: default PMEM mode in javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a1442a8dca6356bec0abc215067459587bb2910", "author": {"user": {"login": "blazember", "name": "Zolt\u00e1n Baranyi"}}, "url": "https://github.com/hazelcast/hazelcast/commit/2a1442a8dca6356bec0abc215067459587bb2910", "committedDate": "2020-10-13T20:36:41Z", "message": "Address review comment: remove unused mode in config processor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3ca397e83843cc0f473e301135aa52edaf5436b", "author": {"user": {"login": "blazember", "name": "Zolt\u00e1n Baranyi"}}, "url": "https://github.com/hazelcast/hazelcast/commit/c3ca397e83843cc0f473e301135aa52edaf5436b", "committedDate": "2020-10-14T10:07:51Z", "message": "Checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4Mzg4NzEx", "url": "https://github.com/hazelcast/hazelcast/pull/17696#pullrequestreview-508388711", "createdAt": "2020-10-14T14:10:10Z", "commit": {"oid": "c3ca397e83843cc0f473e301135aa52edaf5436b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3244, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}