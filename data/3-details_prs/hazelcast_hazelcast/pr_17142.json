{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxODUxNjc1", "number": 17142, "title": "Check replicas by dividing partitions into smaller batches", "bodyText": "closes #17012", "createdAt": "2020-06-30T07:57:41Z", "url": "https://github.com/hazelcast/hazelcast/pull/17142", "merged": true, "mergeCommit": {"oid": "49043785b6be543af5cbccba63e95c4cab1d6b3f"}, "closed": true, "closedAt": "2020-07-23T10:36:40Z", "author": {"login": "ahmetmircik"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwspPdgBqjM1MDMyMTQzMDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3sJpygBqjM1NzkxNzQ4Mjk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "42d4737385e2c4fc4648255d69bf8ead10902724", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/42d4737385e2c4fc4648255d69bf8ead10902724", "committedDate": "2020-07-01T12:34:37Z", "message": "wip"}, "afterCommit": {"oid": "a6e17e17de4a54b1e9d1e4abe181cdcc0c6dd708", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/a6e17e17de4a54b1e9d1e4abe181cdcc0c6dd708", "committedDate": "2020-07-01T16:15:08Z", "message": "Check replicas by dividing partitions into smaller batches."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a6e17e17de4a54b1e9d1e4abe181cdcc0c6dd708", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/a6e17e17de4a54b1e9d1e4abe181cdcc0c6dd708", "committedDate": "2020-07-01T16:15:08Z", "message": "Check replicas by dividing partitions into smaller batches."}, "afterCommit": {"oid": "f3061c7f2cce51d5a8dc8504dfb4db1fb317e278", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/f3061c7f2cce51d5a8dc8504dfb4db1fb317e278", "committedDate": "2020-07-01T19:18:17Z", "message": "Check replicas by dividing partitions into smaller batches"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f3061c7f2cce51d5a8dc8504dfb4db1fb317e278", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/f3061c7f2cce51d5a8dc8504dfb4db1fb317e278", "committedDate": "2020-07-01T19:18:17Z", "message": "Check replicas by dividing partitions into smaller batches"}, "afterCommit": {"oid": "3947a684cd3bc43fa071a291bac18d96a78af0fd", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/3947a684cd3bc43fa071a291bac18d96a78af0fd", "committedDate": "2020-07-02T13:49:09Z", "message": "Check replicas by dividing partitions into smaller batches"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3947a684cd3bc43fa071a291bac18d96a78af0fd", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/3947a684cd3bc43fa071a291bac18d96a78af0fd", "committedDate": "2020-07-02T13:49:09Z", "message": "Check replicas by dividing partitions into smaller batches"}, "afterCommit": {"oid": "6fe93a65286ea1d1ea076e47b3deae38bc227bfd", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/6fe93a65286ea1d1ea076e47b3deae38bc227bfd", "committedDate": "2020-07-03T08:00:07Z", "message": "Check replicas by dividing partitions into smaller batches"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNzU0NDEx", "url": "https://github.com/hazelcast/hazelcast/pull/17142#pullrequestreview-443754411", "createdAt": "2020-07-07T10:15:37Z", "commit": {"oid": "6fe93a65286ea1d1ea076e47b3deae38bc227bfd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMDoxNTozN1rOGt4Hng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMDoxNTozN1rOGt4Hng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc1ODU1OA==", "bodyText": "Was this change for testing? I'm asking since some issues does not appear with very low partition counts.", "url": "https://github.com/hazelcast/hazelcast/pull/17142#discussion_r450758558", "createdAt": "2020-07-07T10:15:37Z", "author": {"login": "mdogan"}, "path": "hazelcast/src/test/java/com/hazelcast/internal/partition/PartitionCorrectnessTestSupport.java", "diffHunk": "@@ -76,7 +76,7 @@\n     @Parameterized.Parameter(1)\n     public int nodeCount;\n \n-    protected int partitionCount = 111;\n+    protected int partitionCount = 11;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fe93a65286ea1d1ea076e47b3deae38bc227bfd"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6fe93a65286ea1d1ea076e47b3deae38bc227bfd", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/6fe93a65286ea1d1ea076e47b3deae38bc227bfd", "committedDate": "2020-07-03T08:00:07Z", "message": "Check replicas by dividing partitions into smaller batches"}, "afterCommit": {"oid": "5409e4b82b56c9c879a2565f34bf90b90baf362f", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/5409e4b82b56c9c879a2565f34bf90b90baf362f", "committedDate": "2020-07-07T10:45:04Z", "message": "remove leftover"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNzc3MTQz", "url": "https://github.com/hazelcast/hazelcast/pull/17142#pullrequestreview-443777143", "createdAt": "2020-07-07T10:50:34Z", "commit": {"oid": "5409e4b82b56c9c879a2565f34bf90b90baf362f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMjAwNzAz", "url": "https://github.com/hazelcast/hazelcast/pull/17142#pullrequestreview-452200703", "createdAt": "2020-07-21T07:38:15Z", "commit": {"oid": "5409e4b82b56c9c879a2565f34bf90b90baf362f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNzozODoxNVrOG0r2WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzo1NTozMVrOG1XCRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg5NzU2MA==", "bodyText": "minor: you can probably use PartitionIdSet instead of BitSet here. It is backed by a BitSet while providing a Set<Integer> interface as well as methods with primitive int arguments to avoid unnecessary boxing/unboxing.", "url": "https://github.com/hazelcast/hazelcast/pull/17142#discussion_r457897560", "createdAt": "2020-07-21T07:38:15Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/partition/impl/PartitionReplicaManager.java", "diffHunk": "@@ -516,31 +517,116 @@ public void process(EntryTaskScheduler<ReplicaFragmentSyncInfo, Void> scheduler,\n     }\n \n     private class AntiEntropyTask implements Runnable {\n+\n+        private static final int UNSET = -1;\n+\n+        private final long firstRunNanos;\n+        private final long backupSyncCheckIntervalSeconds;\n+        private final Semaphore semaphore = new Semaphore(0);\n+\n+        private int numInOneGo;\n+        private Queue<Integer> localPartitionIds;\n+\n+        AntiEntropyTask(long backupSyncCheckIntervalSeconds) {\n+            this(backupSyncCheckIntervalSeconds, null, UNSET, UNSET);\n+        }\n+\n+        AntiEntropyTask(long backupSyncCheckIntervalSeconds, Queue<Integer> localPartitionIds,\n+                        long firstRunNanos, int numInOneGo) {\n+            this.backupSyncCheckIntervalSeconds = backupSyncCheckIntervalSeconds;\n+            this.localPartitionIds = localPartitionIds;\n+            this.firstRunNanos = firstRunNanos;\n+            this.numInOneGo = numInOneGo;\n+        }\n+\n         @Override\n         public void run() {\n+            long initialStartTimeInNanos = firstRunNanos == UNSET ? System.nanoTime() : firstRunNanos;\n+\n             if (!node.isRunning() || !node.getNodeExtension().isStartCompleted()\n                     || !partitionService.areMigrationTasksAllowed()) {\n                 return;\n             }\n-            nodeEngine.getOperationService().executeOnPartitions(new PartitionAntiEntropyTaskFactory(), getLocalPartitions());\n+\n+            initLocalPartitionsIfNull();\n+\n+            BitSet partitionsBitSet = convertLocalPartitionsToBitSet();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5409e4b82b56c9c879a2565f34bf90b90baf362f"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwNTEyNA==", "bodyText": "Here if partitionId is not null and we reach numInOneGo, then that partitionId is lost from this batch because it was already removed from the queue.", "url": "https://github.com/hazelcast/hazelcast/pull/17142#discussion_r458605124", "createdAt": "2020-07-22T07:55:31Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/partition/impl/PartitionReplicaManager.java", "diffHunk": "@@ -516,31 +517,116 @@ public void process(EntryTaskScheduler<ReplicaFragmentSyncInfo, Void> scheduler,\n     }\n \n     private class AntiEntropyTask implements Runnable {\n+\n+        private static final int UNSET = -1;\n+\n+        private final long firstRunNanos;\n+        private final long backupSyncCheckIntervalSeconds;\n+        private final Semaphore semaphore = new Semaphore(0);\n+\n+        private int numInOneGo;\n+        private Queue<Integer> localPartitionIds;\n+\n+        AntiEntropyTask(long backupSyncCheckIntervalSeconds) {\n+            this(backupSyncCheckIntervalSeconds, null, UNSET, UNSET);\n+        }\n+\n+        AntiEntropyTask(long backupSyncCheckIntervalSeconds, Queue<Integer> localPartitionIds,\n+                        long firstRunNanos, int numInOneGo) {\n+            this.backupSyncCheckIntervalSeconds = backupSyncCheckIntervalSeconds;\n+            this.localPartitionIds = localPartitionIds;\n+            this.firstRunNanos = firstRunNanos;\n+            this.numInOneGo = numInOneGo;\n+        }\n+\n         @Override\n         public void run() {\n+            long initialStartTimeInNanos = firstRunNanos == UNSET ? System.nanoTime() : firstRunNanos;\n+\n             if (!node.isRunning() || !node.getNodeExtension().isStartCompleted()\n                     || !partitionService.areMigrationTasksAllowed()) {\n                 return;\n             }\n-            nodeEngine.getOperationService().executeOnPartitions(new PartitionAntiEntropyTaskFactory(), getLocalPartitions());\n+\n+            initLocalPartitionsIfNull();\n+\n+            BitSet partitionsBitSet = convertLocalPartitionsToBitSet();\n+\n+            runAntiEntropyTask(partitionsBitSet);\n+\n+            waitAntiEntropyTaskEnd(partitionsBitSet.cardinality());\n+\n+            scheduleNextRun(initialStartTimeInNanos);\n         }\n \n-        private BitSet getLocalPartitions() {\n-            BitSet localPartitions = new BitSet(partitionService.getPartitionCount());\n+        private void scheduleNextRun(long initialStartTimeInNanos) {\n+            ExecutionService executionService = nodeEngine.getExecutionService();\n+\n+            if (!localPartitionIds.isEmpty()) {\n+                // we still have local partitions to check\n+                executionService.schedule(new AntiEntropyTask(backupSyncCheckIntervalSeconds,\n+                        localPartitionIds, initialStartTimeInNanos, numInOneGo), 1, TimeUnit.SECONDS);\n+            } else {\n+                // we have finished checking of all local partitions, time to decide when to commence next run.\n+                long elapsedSeconds = TimeUnit.NANOSECONDS.toSeconds(System.nanoTime() - initialStartTimeInNanos);\n+                long delayBeforeNextRunSeconds = Math.max(1, backupSyncCheckIntervalSeconds - elapsedSeconds);\n+                executionService.schedule(new AntiEntropyTask(backupSyncCheckIntervalSeconds),\n+                        delayBeforeNextRunSeconds, TimeUnit.SECONDS);\n+            }\n+        }\n+\n+        private void runAntiEntropyTask(BitSet partitionsBitSet) {\n+            nodeEngine.getOperationService().executeOnPartitions(partitionId -> {\n+                semaphore.release();\n+                return new PartitionPrimaryReplicaAntiEntropyTask(nodeEngine, partitionId);\n+            }, partitionsBitSet);\n+        }\n+\n+        private void waitAntiEntropyTaskEnd(int partitionCount) {\n+            try {\n+                semaphore.acquire(partitionCount);\n+            } catch (InterruptedException e) {\n+                Thread.currentThread().interrupt();\n+                throw ExceptionUtil.rethrow(e);\n+            }\n+        }\n+\n+        private void initLocalPartitionsIfNull() {\n+            if (localPartitionIds != null) {\n+                return;\n+            }\n+\n+            localPartitionIds = getLocalPartitionIds();\n+            numInOneGo = Math.max(1, (int) Math.ceil(1D * localPartitionIds.size() / backupSyncCheckIntervalSeconds));\n+        }\n+\n+        @Nonnull\n+        private BitSet convertLocalPartitionsToBitSet() {\n+            BitSet bitSet = new BitSet(partitionService.getPartitionCount());\n+\n+            do {\n+                Integer partitionId = localPartitionIds.poll();\n+                if (partitionId == null || bitSet.cardinality() == numInOneGo) {\n+                    break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5409e4b82b56c9c879a2565f34bf90b90baf362f"}, "originalPosition": 141}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5409e4b82b56c9c879a2565f34bf90b90baf362f", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/5409e4b82b56c9c879a2565f34bf90b90baf362f", "committedDate": "2020-07-07T10:45:04Z", "message": "remove leftover"}, "afterCommit": {"oid": "9f39c33f3266fba15253390d95d2abf4cb52ffc5", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/9f39c33f3266fba15253390d95d2abf4cb52ffc5", "committedDate": "2020-07-22T22:34:13Z", "message": "Vassilis reviews"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f39c33f3266fba15253390d95d2abf4cb52ffc5", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/9f39c33f3266fba15253390d95d2abf4cb52ffc5", "committedDate": "2020-07-22T22:34:13Z", "message": "Vassilis reviews"}, "afterCommit": {"oid": "b518ac7dcd6197d3fef21f9c9a59fe83e340b29c", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/b518ac7dcd6197d3fef21f9c9a59fe83e340b29c", "committedDate": "2020-07-23T07:56:24Z", "message": "Vassilis reviews"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b518ac7dcd6197d3fef21f9c9a59fe83e340b29c", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/b518ac7dcd6197d3fef21f9c9a59fe83e340b29c", "committedDate": "2020-07-23T07:56:24Z", "message": "Vassilis reviews"}, "afterCommit": {"oid": "831c3703784e4335bc4502e017aeb3b37baf9d46", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/831c3703784e4335bc4502e017aeb3b37baf9d46", "committedDate": "2020-07-23T08:01:35Z", "message": "Vassilis reviews"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzOTcyNzM5", "url": "https://github.com/hazelcast/hazelcast/pull/17142#pullrequestreview-453972739", "createdAt": "2020-07-23T09:34:17Z", "commit": {"oid": "831c3703784e4335bc4502e017aeb3b37baf9d46"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f87f3a08f0ba5adae36a58040264f0114a0226fa", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/f87f3a08f0ba5adae36a58040264f0114a0226fa", "committedDate": "2020-07-23T09:38:06Z", "message": "Check replicas by dividing partitions into smaller batches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddd459d1c205a0be692e1ae9bb2b14e6d7854fcf", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/ddd459d1c205a0be692e1ae9bb2b14e6d7854fcf", "committedDate": "2020-07-23T09:38:06Z", "message": "remove leftover"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04e83c99cdd496cec12a2cb486f2443e789bd5b7", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/04e83c99cdd496cec12a2cb486f2443e789bd5b7", "committedDate": "2020-07-23T09:38:06Z", "message": "Vassilis reviews"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "831c3703784e4335bc4502e017aeb3b37baf9d46", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/831c3703784e4335bc4502e017aeb3b37baf9d46", "committedDate": "2020-07-23T08:01:35Z", "message": "Vassilis reviews"}, "afterCommit": {"oid": "04e83c99cdd496cec12a2cb486f2443e789bd5b7", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/04e83c99cdd496cec12a2cb486f2443e789bd5b7", "committedDate": "2020-07-23T09:38:06Z", "message": "Vassilis reviews"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3508, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}