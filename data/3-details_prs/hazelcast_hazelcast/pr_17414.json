{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczODk1Mzgy", "number": 17414, "title": "Do not read HD entries from SQL schema resolver", "bodyText": "This PR fixes a JVM crash that could occur when attempting to resolve SQL schema and there is an HD map.\nPreviously we read key-value samples from record stores for all maps. This is illegal for HD maps because they could be accessed only from partition threads.\nThis PR ensures that only concurrent HD indexes are used to read HD map samples.\nFixes: #17413\nEE: https://github.com/hazelcast/hazelcast-enterprise/pull/3734", "createdAt": "2020-08-26T13:09:17Z", "url": "https://github.com/hazelcast/hazelcast/pull/17414", "merged": true, "mergeCommit": {"oid": "fb5d198a79f5407560a36b36b553dcb7fe412300"}, "closed": true, "closedAt": "2020-08-26T14:18:58Z", "author": {"login": "devozerov"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCrfWvgH2gAyNDczODk1MzgyOjc1NzAzNGVkMmFlMDJmODg5NzZmMDMzYjUwZTE0MTM2MWE2ZWRkNGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCr_SsAFqTQ3NTQ5ODYwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "757034ed2ae02f88976f033b50e141361a6edd4b", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/757034ed2ae02f88976f033b50e141361a6edd4b", "committedDate": "2020-08-26T13:05:15Z", "message": "Fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e67662c24edde8f3db40cdfdec8cf6a04a56552", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/0e67662c24edde8f3db40cdfdec8cf6a04a56552", "committedDate": "2020-08-26T13:05:49Z", "message": "Merge branch 'master' into sql-hd-sampling-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47e6181470541c4b2f029b4d25b6da6134afe76a", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/47e6181470541c4b2f029b4d25b6da6134afe76a", "committedDate": "2020-08-26T13:08:25Z", "message": "Merge branch 'master' into sql-hd-sampling-fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NDc1MTMx", "url": "https://github.com/hazelcast/hazelcast/pull/17414#pullrequestreview-475475131", "createdAt": "2020-08-26T13:15:17Z", "commit": {"oid": "47e6181470541c4b2f029b4d25b6da6134afe76a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMzoxNToxOFrOHHLgNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMzoxNToxOFrOHHLgNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI5MDU0OQ==", "bodyText": "We already have a similar exception trying to run a map scan without index. Shall we reuse the code?", "url": "https://github.com/hazelcast/hazelcast/pull/17414#discussion_r477290549", "createdAt": "2020-08-26T13:15:18Z", "author": {"login": "petrpleshachkov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/schema/map/PartitionedMapTableResolver.java", "diffHunk": "@@ -174,11 +159,120 @@ private PartitionedMapTable createTable(\n         }\n     }\n \n-    private static PartitionedMapTable emptyMap(String mapName) {\n+    @SuppressWarnings(\"rawtypes\")\n+    private FieldsMetadata getHeapMapFields(MapServiceContext context, String name) {\n+        for (PartitionContainer partitionContainer : context.getPartitionContainers()) {\n+            // Resolve sample.\n+            RecordStore<?> recordStore = partitionContainer.getExistingRecordStore(name);\n+\n+            if (recordStore == null) {\n+                continue;\n+            }\n+\n+            Iterator<Map.Entry<Data, Record>> recordStoreIterator = recordStore.iterator();\n+\n+            if (!recordStoreIterator.hasNext()) {\n+                continue;\n+            }\n+\n+            Map.Entry<Data, Record> entry = recordStoreIterator.next();\n+\n+            return getFieldMetadata(entry.getKey(), entry.getValue().getValue());\n+        }\n+\n+        return FieldsMetadata.EMPTY_ERROR;\n+    }\n+\n+    @SuppressWarnings(\"rawtypes\")\n+    private FieldsMetadata getHdMapFields(MapContainer mapContainer) {\n+        if (!nodeEngine.getProperties().getBoolean(GLOBAL_HD_INDEX_ENABLED)) {\n+            // Cannot resolve fields when concurrent indexes are disabled\n+            return FieldsMetadata.HD_ERROR;\n+        }\n+\n+        InternalIndex[] indexes = mapContainer.getIndexes().getIndexes();\n+\n+        if (indexes == null || indexes.length == 0) {\n+            // Cannot resolve fields when the map doesn't have concurrent indexes\n+            return FieldsMetadata.HD_ERROR;\n+        }\n+\n+        InternalIndex index = indexes[0];\n+\n+        Iterator<QueryableEntry> entryIterator = index.getSqlRecordIterator();\n+\n+        if (!entryIterator.hasNext()) {\n+            return FieldsMetadata.EMPTY_ERROR;\n+        }\n+\n+        QueryableEntry entry = entryIterator.next();\n+\n+        return getFieldMetadata(entry.getKey(), entry.getValue());\n+    }\n+\n+    private static PartitionedMapTable emptyError(String mapName) {\n         QueryException error = QueryException.error(\n             \"Cannot resolve IMap schema because it doesn't have entries on the local member: \" + mapName\n         );\n \n         return new PartitionedMapTable(mapName, error);\n     }\n+\n+    private static PartitionedMapTable hdError(String mapName) {\n+        QueryException error = QueryException.error(\"Cannot query the IMap \\\"\" + mapName", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47e6181470541c4b2f029b4d25b6da6134afe76a"}, "originalPosition": 203}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NDg1MDcy", "url": "https://github.com/hazelcast/hazelcast/pull/17414#pullrequestreview-475485072", "createdAt": "2020-08-26T13:25:58Z", "commit": {"oid": "47e6181470541c4b2f029b4d25b6da6134afe76a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NDg1MDQx", "url": "https://github.com/hazelcast/hazelcast/pull/17414#pullrequestreview-475485041", "createdAt": "2020-08-26T13:25:57Z", "commit": {"oid": "47e6181470541c4b2f029b4d25b6da6134afe76a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMzoyNTo1N1rOHHL9PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMzoyNTo1N1rOHHL9PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI5Nzk4MA==", "bodyText": "If we have NULL values in the index, the iterator will return an entry corresponding to it. I guess this is OK for further resolution logic? In the value, some attributes might be missing...", "url": "https://github.com/hazelcast/hazelcast/pull/17414#discussion_r477297980", "createdAt": "2020-08-26T13:25:57Z", "author": {"login": "petrpleshachkov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/schema/map/PartitionedMapTableResolver.java", "diffHunk": "@@ -174,11 +159,120 @@ private PartitionedMapTable createTable(\n         }\n     }\n \n-    private static PartitionedMapTable emptyMap(String mapName) {\n+    @SuppressWarnings(\"rawtypes\")\n+    private FieldsMetadata getHeapMapFields(MapServiceContext context, String name) {\n+        for (PartitionContainer partitionContainer : context.getPartitionContainers()) {\n+            // Resolve sample.\n+            RecordStore<?> recordStore = partitionContainer.getExistingRecordStore(name);\n+\n+            if (recordStore == null) {\n+                continue;\n+            }\n+\n+            Iterator<Map.Entry<Data, Record>> recordStoreIterator = recordStore.iterator();\n+\n+            if (!recordStoreIterator.hasNext()) {\n+                continue;\n+            }\n+\n+            Map.Entry<Data, Record> entry = recordStoreIterator.next();\n+\n+            return getFieldMetadata(entry.getKey(), entry.getValue().getValue());\n+        }\n+\n+        return FieldsMetadata.EMPTY_ERROR;\n+    }\n+\n+    @SuppressWarnings(\"rawtypes\")\n+    private FieldsMetadata getHdMapFields(MapContainer mapContainer) {\n+        if (!nodeEngine.getProperties().getBoolean(GLOBAL_HD_INDEX_ENABLED)) {\n+            // Cannot resolve fields when concurrent indexes are disabled\n+            return FieldsMetadata.HD_ERROR;\n+        }\n+\n+        InternalIndex[] indexes = mapContainer.getIndexes().getIndexes();\n+\n+        if (indexes == null || indexes.length == 0) {\n+            // Cannot resolve fields when the map doesn't have concurrent indexes\n+            return FieldsMetadata.HD_ERROR;\n+        }\n+\n+        InternalIndex index = indexes[0];\n+\n+        Iterator<QueryableEntry> entryIterator = index.getSqlRecordIterator();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47e6181470541c4b2f029b4d25b6da6134afe76a"}, "originalPosition": 183}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NDk4NjA0", "url": "https://github.com/hazelcast/hazelcast/pull/17414#pullrequestreview-475498604", "createdAt": "2020-08-26T13:40:08Z", "commit": {"oid": "47e6181470541c4b2f029b4d25b6da6134afe76a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3432, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}