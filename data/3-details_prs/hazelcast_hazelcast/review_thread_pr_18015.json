{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2NDEzMzUw", "number": 18015, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxODozNjoxMVrOFJ1xqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxODozNjoxMVrOFJ1xqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODYyNTY5OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/map/IMap.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxODozNjoxMlrOIMVjcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxMTo0MzowNVrOIMrc-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTgwNjk2MA==", "bodyText": "why don't you put these descriptions to the parameters itself?", "url": "https://github.com/hazelcast/hazelcast/pull/18015#discussion_r549806960", "createdAt": "2020-12-29T18:36:12Z", "author": {"login": "ihsandemir"}, "path": "hazelcast/src/main/java/com/hazelcast/map/IMap.java", "diffHunk": "@@ -1720,15 +1735,18 @@ V putIfAbsent(@Nonnull K key, @Nonnull V value,\n      * max idle time value without returning the old value (which is more\n      * efficient than {@code put()}).\n      * <p>\n-     * The entry will expire and get evicted after the TTL. If the TTL is 0,\n-     * then the entry lives forever. If the TTL is negative, then the TTL\n-     * from the map configuration will be used (default: forever).\n-     * <p>\n-     * The entry will expire and get evicted after the Max Idle time. If the\n-     * MaxIdle is 0, then the entry lives forever. If the MaxIdle is negative,\n-     * then the MaxIdle from the map configuration will be used\n-     * (default: forever). The time precision is limited by 1 second. The MaxIdle\n-     * that less than 1 second can lead to unexpected behaviour.\n+     * The entry will expire and get evicted after the TTL. It limits the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91ece4774a7c5df548b681b5478bee8f1b1b4204"}, "originalPosition": 150}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk2MjE3Nw==", "bodyText": "They already have short descriptions. As for this particular descriptions, they were already present in the javadoc and that approach seems to be consistent across IMap interface.", "url": "https://github.com/hazelcast/hazelcast/pull/18015#discussion_r549962177", "createdAt": "2020-12-30T06:56:34Z", "author": {"login": "puzpuzpuz"}, "path": "hazelcast/src/main/java/com/hazelcast/map/IMap.java", "diffHunk": "@@ -1720,15 +1735,18 @@ V putIfAbsent(@Nonnull K key, @Nonnull V value,\n      * max idle time value without returning the old value (which is more\n      * efficient than {@code put()}).\n      * <p>\n-     * The entry will expire and get evicted after the TTL. If the TTL is 0,\n-     * then the entry lives forever. If the TTL is negative, then the TTL\n-     * from the map configuration will be used (default: forever).\n-     * <p>\n-     * The entry will expire and get evicted after the Max Idle time. If the\n-     * MaxIdle is 0, then the entry lives forever. If the MaxIdle is negative,\n-     * then the MaxIdle from the map configuration will be used\n-     * (default: forever). The time precision is limited by 1 second. The MaxIdle\n-     * that less than 1 second can lead to unexpected behaviour.\n+     * The entry will expire and get evicted after the TTL. It limits the", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTgwNjk2MA=="}, "originalCommit": {"oid": "91ece4774a7c5df548b681b5478bee8f1b1b4204"}, "originalPosition": 150}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE2NTc1NQ==", "bodyText": "Please let me know if there is a reason to move the clarifications into parameter descriptions. Then I'll submit a separate PR to change that.", "url": "https://github.com/hazelcast/hazelcast/pull/18015#discussion_r550165755", "createdAt": "2020-12-30T11:43:05Z", "author": {"login": "puzpuzpuz"}, "path": "hazelcast/src/main/java/com/hazelcast/map/IMap.java", "diffHunk": "@@ -1720,15 +1735,18 @@ V putIfAbsent(@Nonnull K key, @Nonnull V value,\n      * max idle time value without returning the old value (which is more\n      * efficient than {@code put()}).\n      * <p>\n-     * The entry will expire and get evicted after the TTL. If the TTL is 0,\n-     * then the entry lives forever. If the TTL is negative, then the TTL\n-     * from the map configuration will be used (default: forever).\n-     * <p>\n-     * The entry will expire and get evicted after the Max Idle time. If the\n-     * MaxIdle is 0, then the entry lives forever. If the MaxIdle is negative,\n-     * then the MaxIdle from the map configuration will be used\n-     * (default: forever). The time precision is limited by 1 second. The MaxIdle\n-     * that less than 1 second can lead to unexpected behaviour.\n+     * The entry will expire and get evicted after the TTL. It limits the", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTgwNjk2MA=="}, "originalCommit": {"oid": "91ece4774a7c5df548b681b5478bee8f1b1b4204"}, "originalPosition": 150}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 56, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}