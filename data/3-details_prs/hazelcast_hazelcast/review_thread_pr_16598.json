{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMjMzOTMz", "number": 16598, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODozODoyM1rODd8oIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODozODoyM1rODd8oIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzI4NjA4OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/test/java/com/hazelcast/client/cache/ClientCacheCreationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODozODoyM1rOFm1sZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMDoxMzo0NVrOFm4UeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI2OTkyNw==", "bodyText": "Can you convert it to assertTrueEventually to avoid possibility of infinite wait? (practically can not be more than the test timeout anyway)", "url": "https://github.com/hazelcast/hazelcast/pull/16598#discussion_r376269927", "createdAt": "2020-02-07T08:38:23Z", "author": {"login": "ihsandemir"}, "path": "hazelcast/src/test/java/com/hazelcast/client/cache/ClientCacheCreationTest.java", "diffHunk": "@@ -120,7 +121,15 @@ public void recreateCacheOnRestartedCluster_whenMaxConcurrentInvocationLow() {\n         HazelcastClientCachingProvider cachingProvider = createClientCachingProvider(client);\n         final CacheManager cacheManager = cachingProvider.getCacheManager();\n         MutableConfiguration configuration = new MutableConfiguration();\n-        cacheManager.createCache(\"xmlCache\", configuration);\n+        // ensure cache is created despite the low concurrent invocation limit\n+        while (true) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94d9f8643caf30f2834849978fd775298f9a9343"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMxMjk1Mw==", "bodyText": "done", "url": "https://github.com/hazelcast/hazelcast/pull/16598#discussion_r376312953", "createdAt": "2020-02-07T10:13:45Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/test/java/com/hazelcast/client/cache/ClientCacheCreationTest.java", "diffHunk": "@@ -120,7 +121,15 @@ public void recreateCacheOnRestartedCluster_whenMaxConcurrentInvocationLow() {\n         HazelcastClientCachingProvider cachingProvider = createClientCachingProvider(client);\n         final CacheManager cacheManager = cachingProvider.getCacheManager();\n         MutableConfiguration configuration = new MutableConfiguration();\n-        cacheManager.createCache(\"xmlCache\", configuration);\n+        // ensure cache is created despite the low concurrent invocation limit\n+        while (true) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI2OTkyNw=="}, "originalCommit": {"oid": "94d9f8643caf30f2834849978fd775298f9a9343"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 796, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}