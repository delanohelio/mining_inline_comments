{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4NTE3ODY1", "number": 17562, "title": "Make backupMap volatile to make it visible to user thread", "bodyText": "fixes http://jenkins.hazelcast.com/job/Hazelcast-pr-builder/2378/testReport/junit/com.hazelcast.splitbrainprotection.queue/QueueSplitBrainProtectionReadTest/getLocalQueueStats_splitBrainProtection_splitBrainProtectionType_READ_/\njava.lang.NullPointerException\n\tat com.hazelcast.collection.impl.queue.QueueContainer.createLinkedList(QueueContainer.java:936)\n\tat com.hazelcast.collection.impl.queue.QueueContainer.getItemQueue(QueueContainer.java:914)\n\tat com.hazelcast.collection.impl.queue.QueueContainer.size(QueueContainer.java:654)\n\tat com.hazelcast.collection.impl.queue.QueueService.createLocalQueueStats(QueueService.java:348)\n\tat com.hazelcast.collection.impl.queue.QueueProxyImpl.getLocalQueueStats(QueueProxyImpl.java:51)\n\tat com.hazelcast.splitbrainprotection.queue.QueueSplitBrainProtectionReadTest.getLocalQueueStats_splitBrainProtection(QueueSplitBrainProtectionReadTest.java:91)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat com.hazelcast.test.FailOnTimeoutStatement$CallableStatement.call(FailOnTimeoutStatement.java:114)\n\tat com.hazelcast.test.FailOnTimeoutStatement$CallableStatement.call(FailOnTimeoutStatement.java:106)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.lang.Thread.run(Thread.java:748)", "createdAt": "2020-09-17T09:03:37Z", "url": "https://github.com/hazelcast/hazelcast/pull/17562", "merged": true, "mergeCommit": {"oid": "69e5e22aee00f92f4d541245b5269b9c89722653"}, "closed": true, "closedAt": "2020-09-28T12:32:18Z", "author": {"login": "ahmetmircik"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLBJxjgFqTQ5MjQ3Njk5Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNSrZ0gFqTQ5NzQ1Njk4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyNDc2OTkz", "url": "https://github.com/hazelcast/hazelcast/pull/17562#pullrequestreview-492476993", "createdAt": "2020-09-21T10:50:54Z", "commit": {"oid": "15844b170a946e4838ead3dacc09241210a18952"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMDo1MDo1NFrOHVKQhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMDo1MDo1NFrOHVKQhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk1MDIxMw==", "bodyText": "The backupMap is initialized with the HashMap that is not thread-safe. Is it handled properly that multiple threads are not accessing it?", "url": "https://github.com/hazelcast/hazelcast/pull/17562#discussion_r491950213", "createdAt": "2020-09-21T10:50:54Z", "author": {"login": "petrpleshachkov"}, "path": "hazelcast/src/main/java/com/hazelcast/collection/impl/queue/QueueContainer.java", "diffHunk": "@@ -99,6 +98,8 @@\n     // to avoid reloading same items\n     private long lastIdLoaded;\n \n+    private volatile Map<Long, QueueItem> backupMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15844b170a946e4838ead3dacc09241210a18952"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "15844b170a946e4838ead3dacc09241210a18952", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/15844b170a946e4838ead3dacc09241210a18952", "committedDate": "2020-09-17T09:02:08Z", "message": "Make backupMap volatile to make it visible to user thread"}, "afterCommit": {"oid": "6ad7f14fd8767a430e248a33a96aeb1f747d0c64", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/6ad7f14fd8767a430e248a33a96aeb1f747d0c64", "committedDate": "2020-09-21T12:47:52Z", "message": "Address Petr's comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyNzYxMTY3", "url": "https://github.com/hazelcast/hazelcast/pull/17562#pullrequestreview-492761167", "createdAt": "2020-09-21T15:57:48Z", "commit": {"oid": "6ad7f14fd8767a430e248a33a96aeb1f747d0c64"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NDU5NzQz", "url": "https://github.com/hazelcast/hazelcast/pull/17562#pullrequestreview-494459743", "createdAt": "2020-09-23T09:14:54Z", "commit": {"oid": "6ad7f14fd8767a430e248a33a96aeb1f747d0c64"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwOToxNDo1NFrOHWf3Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwOToxNDo1NFrOHWf3Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM1Mjc0Nw==", "bodyText": "This mix of referring to a local variable and the field is a bit confusing. Can you elaborate a bit or simply use the local variable only when checking the size and adding to backup map?", "url": "https://github.com/hazelcast/hazelcast/pull/17562#discussion_r493352747", "createdAt": "2020-09-23T09:14:54Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/collection/impl/queue/QueueContainer.java", "diffHunk": "@@ -980,24 +986,29 @@ public boolean hasEnoughCapacity(int delta) {\n      * @return backup replica map from item ID to queue item\n      */\n     public Map<Long, QueueItem> getBackupMap() {\n+        ConcurrentMap<Long, QueueItem> backupMap = this.backupMap;\n         if (backupMap == null) {\n+            Queue<QueueItem> itemQueue = this.itemQueue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ad7f14fd8767a430e248a33a96aeb1f747d0c64"}, "originalPosition": 73}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cedd8d1a63db245596403a9cf34206aeacf3ca52", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/cedd8d1a63db245596403a9cf34206aeacf3ca52", "committedDate": "2020-09-28T09:23:44Z", "message": "Make backupMap volatile to make it visible to user thread"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ab0d1a0f4a842353180222304eb81e6289be432", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/6ab0d1a0f4a842353180222304eb81e6289be432", "committedDate": "2020-09-28T09:23:44Z", "message": "Address Petr's comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebe854f3705bbe26d926bb7983b65c57c2ff841a", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/ebe854f3705bbe26d926bb7983b65c57c2ff841a", "committedDate": "2020-09-28T09:36:13Z", "message": "Address Matko's review comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6ad7f14fd8767a430e248a33a96aeb1f747d0c64", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/6ad7f14fd8767a430e248a33a96aeb1f747d0c64", "committedDate": "2020-09-21T12:47:52Z", "message": "Address Petr's comments"}, "afterCommit": {"oid": "ebe854f3705bbe26d926bb7983b65c57c2ff841a", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/ebe854f3705bbe26d926bb7983b65c57c2ff841a", "committedDate": "2020-09-28T09:36:13Z", "message": "Address Matko's review comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NDU2OTg0", "url": "https://github.com/hazelcast/hazelcast/pull/17562#pullrequestreview-497456984", "createdAt": "2020-09-28T12:23:57Z", "commit": {"oid": "ebe854f3705bbe26d926bb7983b65c57c2ff841a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3321, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}