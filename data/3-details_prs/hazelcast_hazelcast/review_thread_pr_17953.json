{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MTA3MTMx", "number": 17953, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDo1ODo1MFrOFIHaTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDo1ODo1MFrOFIHaTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDU0MzQ4OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/sql/SqlStatement.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDo1ODo1MFrOIJ3Iiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzoxMDo1NFrOIJ6q4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIxMTQwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * Gets the current schema name.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return the current schema name or {@code null} if there is none\n          \n          \n            \n                 */\n          \n          \n            \n                public String getSchema() {\n          \n          \n            \n                    return schema;\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                /**\n          \n          \n            \n                 * Sets the current schema name.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param schema the current schema name\n          \n          \n            \n                 * @return this instance for chaining\n          \n          \n            \n                 */\n          \n          \n            \n                public SqlStatement setSchema(String schema) {\n          \n          \n            \n                /**\n          \n          \n            \n                 * Gets the schema name.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return the schema name or {@code null} if there is none\n          \n          \n            \n                 * @since 4.2\n          \n          \n            \n                 */\n          \n          \n            \n                @Nullable\n          \n          \n            \n                public String getSchema() {\n          \n          \n            \n                    return schema;\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                /**\n          \n          \n            \n                 * Sets the schema name. The engine will try to resolve the identifiers\n          \n          \n            \n                 * from the statement first in the given schema, if not found, the default\n          \n          \n            \n                 * search path will be used.\n          \n          \n            \n                 * <p>\n          \n          \n            \n                 * The default value is {@code null} meaning only the default search path\n          \n          \n            \n                 * is used.\n          \n          \n            \n                 * <p>\n          \n          \n            \n                 * A period ({@code .}) is interpreted literally, you can't specify a path\n          \n          \n            \n                 * here.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param schema the schema name for the statement or {@code null}\n          \n          \n            \n                 * @return this instance for chaining\n          \n          \n            \n                 * @since 4.2\n          \n          \n            \n                 */\n          \n          \n            \n                @Nonnull\n          \n          \n            \n                public SqlStatement setSchema(@Nullable String schema) {", "url": "https://github.com/hazelcast/hazelcast/pull/17953#discussion_r547211403", "createdAt": "2020-12-22T10:58:50Z", "author": {"login": "viliam-durina"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/SqlStatement.java", "diffHunk": "@@ -95,6 +97,27 @@ public SqlStatement setSql(@Nonnull String sql) {\n         return this;\n     }\n \n+    /**\n+     * Gets the current schema name.\n+     *\n+     * @return the current schema name or {@code null} if there is none\n+     */\n+    public String getSchema() {\n+        return schema;\n+    }\n+\n+    /**\n+     * Sets the current schema name.\n+     *\n+     * @param schema the current schema name\n+     * @return this instance for chaining\n+     */\n+    public SqlStatement setSchema(String schema) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fc94ba5725332a84348e647464f2a8ce1e73862"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI2OTM0Ng==", "bodyText": "Applied", "url": "https://github.com/hazelcast/hazelcast/pull/17953#discussion_r547269346", "createdAt": "2020-12-22T13:10:54Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/SqlStatement.java", "diffHunk": "@@ -95,6 +97,27 @@ public SqlStatement setSql(@Nonnull String sql) {\n         return this;\n     }\n \n+    /**\n+     * Gets the current schema name.\n+     *\n+     * @return the current schema name or {@code null} if there is none\n+     */\n+    public String getSchema() {\n+        return schema;\n+    }\n+\n+    /**\n+     * Sets the current schema name.\n+     *\n+     * @param schema the current schema name\n+     * @return this instance for chaining\n+     */\n+    public SqlStatement setSchema(String schema) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIxMTQwMw=="}, "originalCommit": {"oid": "6fc94ba5725332a84348e647464f2a8ce1e73862"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 8, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}