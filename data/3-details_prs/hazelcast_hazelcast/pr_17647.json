{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1NDM2ODQ3", "number": 17647, "title": "Fixes race in AbstractInvocationFuture#exceptionally", "bodyText": "Registration of any dependent action on a\nnon-complete AbstractInvocationFuture will result in\nfield state being an instance of an inner class like\nAbstractInvocationFuture$WhenCompleteNode. When calling\nexceptionally, it is possible that this non-complete\nstate is observed and then the AbstractInvocationFuture\nwill erroneously be considered as completed because\nthe condition checks a previously observed value of\nstate along with its current isDone() status.\nFixes #17566", "createdAt": "2020-09-30T11:19:56Z", "url": "https://github.com/hazelcast/hazelcast/pull/17647", "merged": true, "mergeCommit": {"oid": "26a4057f0f227c239a93b875b12bb72a88eade93"}, "closed": true, "closedAt": "2020-10-01T07:33:18Z", "author": {"login": "vbekiaris"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdN668yAH2gAyNDk1NDM2ODQ3OmZlNzg3YTk4MTQwMGVlMDE1MjkyZWVjNDY0YWFiYWM0ZWU5NTc2YzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOMSfdAFqTUwMDA3NjE4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fe787a981400ee015292eec464aabac4ee9576c0", "author": {"user": {"login": "vbekiaris", "name": "Vassilis Bekiaris"}}, "url": "https://github.com/hazelcast/hazelcast/commit/fe787a981400ee015292eec464aabac4ee9576c0", "committedDate": "2020-09-30T11:17:08Z", "message": "Fixes race in AbstractInvocationFuture#exceptionally\n\nRegistration of any dependent action on a\nnon-complete AbstractInvocationFuture will result in\nstate being an instance of an inner class like\nAbstractInvocationFuture$WhenCompleteNode. When calling\nexceptionally, it is possible that this non-complete\nstate is observed and then the AbstractInvocationFuture\nwill erroneously be considered as completed because\nthe condition checks a previously observed value of\nstate along with its current isDone() status."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MzI3NDUz", "url": "https://github.com/hazelcast/hazelcast/pull/17647#pullrequestreview-499327453", "createdAt": "2020-09-30T11:21:55Z", "commit": {"oid": "fe787a981400ee015292eec464aabac4ee9576c0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMToyMTo1NVrOHaY4Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMToyMTo1NVrOHaY4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQzMjYyNw==", "bodyText": "It is wrong to resolve the state at this point and then use its value in a further condition. Instead, we should first check if AbstractInvocationFuture#isDone, similarly to all other CompletionStage API implementations.", "url": "https://github.com/hazelcast/hazelcast/pull/17647#discussion_r497432627", "createdAt": "2020-09-30T11:21:55Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/spi/impl/AbstractInvocationFuture.java", "diffHunk": "@@ -864,33 +879,19 @@ protected void unblockWhenComplete(@Nonnull final BiConsumer<? super V, ? super\n         }\n     }\n \n-    @Override\n-    public InternalCompletableFuture<V> exceptionally(@Nonnull Function<Throwable, ? extends V> fn) {\n-        requireNonNull(fn);\n+    private void unblockExceptionally(@Nonnull Function<Throwable, ? extends V> fn,\n+                                      InternalCompletableFuture<V> future) {\n         Object result = resolve(state);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe787a981400ee015292eec464aabac4ee9576c0"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MzI4OTU5", "url": "https://github.com/hazelcast/hazelcast/pull/17647#pullrequestreview-499328959", "createdAt": "2020-09-30T11:24:07Z", "commit": {"oid": "fe787a981400ee015292eec464aabac4ee9576c0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMToyNDowOFrOHaY8pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMToyNDowOFrOHaY8pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQzMzc2NA==", "bodyText": "Here result may be not UNRESOLVED but another valid value of a non-complete future like Thread, AbstractInvocationFuture$WhenCompleteNode etc. The problem is that isDone() operates on field state but result reflects a potentially stale value of state field -> it is possible that result != UNRESOLVED and isDone() are both true and yet result is not the actual completion value.", "url": "https://github.com/hazelcast/hazelcast/pull/17647#discussion_r497433764", "createdAt": "2020-09-30T11:24:08Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/spi/impl/AbstractInvocationFuture.java", "diffHunk": "@@ -864,33 +879,19 @@ protected void unblockWhenComplete(@Nonnull final BiConsumer<? super V, ? super\n         }\n     }\n \n-    @Override\n-    public InternalCompletableFuture<V> exceptionally(@Nonnull Function<Throwable, ? extends V> fn) {\n-        requireNonNull(fn);\n+    private void unblockExceptionally(@Nonnull Function<Throwable, ? extends V> fn,\n+                                      InternalCompletableFuture<V> future) {\n         Object result = resolve(state);\n-        final InternalCompletableFuture<V> future = newCompletableFuture();\n-        for (; ; ) {\n-            if (result != UNRESOLVED && isDone()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe787a981400ee015292eec464aabac4ee9576c0"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MzQyMjIz", "url": "https://github.com/hazelcast/hazelcast/pull/17647#pullrequestreview-499342223", "createdAt": "2020-09-30T11:43:41Z", "commit": {"oid": "fe787a981400ee015292eec464aabac4ee9576c0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMDc2MTgz", "url": "https://github.com/hazelcast/hazelcast/pull/17647#pullrequestreview-500076183", "createdAt": "2020-10-01T07:31:14Z", "commit": {"oid": "fe787a981400ee015292eec464aabac4ee9576c0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3191, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}