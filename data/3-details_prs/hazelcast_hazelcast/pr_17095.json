{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NjI5MDk0", "number": 17095, "title": "Fixes test failure in event journal test", "bodyText": "Fixes allowReadingWithFutureSeq to account for\npotential reordering of invocations.\nIn the specific test, the request to read\nfrom event journal with a future sequence may be\nreordered with put request when a client is not yet\naware of partition owners.\nAdditionally, in order to unblock the event journal\nreader several puts may be required.\nFixes #16964", "createdAt": "2020-06-17T06:21:18Z", "url": "https://github.com/hazelcast/hazelcast/pull/17095", "merged": true, "mergeCommit": {"oid": "7eab8f933e37e5492fbb54b090fa73a4c36f5872"}, "closed": true, "closedAt": "2020-06-23T07:29:05Z", "author": {"login": "vbekiaris"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsDuqbAH2gAyNDM1NjI5MDk0OjFjMTJkYzgwNmI5OTU5NjcwMTI3NWM1MzU1OWRkYTcxNGU2MzliODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuATKqAFqTQzNTUxMDk3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1c12dc806b99596701275c53559dda714e639b84", "author": {"user": {"login": "vbekiaris", "name": "Vassilis Bekiaris"}}, "url": "https://github.com/hazelcast/hazelcast/commit/1c12dc806b99596701275c53559dda714e639b84", "committedDate": "2020-06-17T06:19:26Z", "message": "Fixes test failure in event journal test\n\nFixes allowReadingWithFutureSeq to account for\npotential reordering of invocations.\nIn the specific test, the request to read\nfrom event journal with a future sequence may be\nreordered with put request when a client is not yet\naware of partition owners.\nAdditionally, in order to unblock the event journal\nreader several puts may be required."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMDkwMTcw", "url": "https://github.com/hazelcast/hazelcast/pull/17095#pullrequestreview-432090170", "createdAt": "2020-06-17T06:21:43Z", "commit": {"oid": "1c12dc806b99596701275c53559dda714e639b84"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjoyMTo0M1rOGk3MRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjoyMTo0M1rOGk3MRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMwNjE4Mw==", "bodyText": "removed assertions no longer make sense since we are executing several puts", "url": "https://github.com/hazelcast/hazelcast/pull/17095#discussion_r441306183", "createdAt": "2020-06-17T06:21:43Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/test/java/com/hazelcast/journal/AbstractEventJournalBasicTest.java", "diffHunk": "@@ -485,34 +484,34 @@ public void allowReadingWithFutureSeq() throws Exception {\n         assertEquals(-1, state.getNewestSequence());\n         assertEventJournalSize(context.dataAdapter, 0);\n \n-        final String key = randomPartitionKey();\n         final Integer value = RANDOM.nextInt();\n         final CountDownLatch latch = new CountDownLatch(1);\n         final int startSequence = 1;\n \n         final BiConsumer<ReadResultSet<EJ_TYPE>, Throwable> callback = (response, t) -> {\n             if (t == null) {\n+                latch.countDown();\n                 assertEquals(1, response.size());\n                 final EventJournalEventAdapter<String, Integer, EJ_TYPE> journalAdapter = context.eventJournalAdapter;\n                 final EJ_TYPE e = response.get(0);\n \n                 assertEquals(ADDED, journalAdapter.getType(e));\n-                assertEquals(key, journalAdapter.getKey(e));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c12dc806b99596701275c53559dda714e639b84"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMDkwNDc0", "url": "https://github.com/hazelcast/hazelcast/pull/17095#pullrequestreview-432090474", "createdAt": "2020-06-17T06:22:22Z", "commit": {"oid": "1c12dc806b99596701275c53559dda714e639b84"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjoyMjoyMlrOGk3NLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjoyMjoyMlrOGk3NLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMwNjQxNQ==", "bodyText": "If the event journal read request was completed exceptionally, rethrow the exception", "url": "https://github.com/hazelcast/hazelcast/pull/17095#discussion_r441306415", "createdAt": "2020-06-17T06:22:22Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/test/java/com/hazelcast/journal/AbstractEventJournalBasicTest.java", "diffHunk": "@@ -485,34 +484,34 @@ public void allowReadingWithFutureSeq() throws Exception {\n         assertEquals(-1, state.getNewestSequence());\n         assertEventJournalSize(context.dataAdapter, 0);\n \n-        final String key = randomPartitionKey();\n         final Integer value = RANDOM.nextInt();\n         final CountDownLatch latch = new CountDownLatch(1);\n         final int startSequence = 1;\n \n         final BiConsumer<ReadResultSet<EJ_TYPE>, Throwable> callback = (response, t) -> {\n             if (t == null) {\n+                latch.countDown();\n                 assertEquals(1, response.size());\n                 final EventJournalEventAdapter<String, Integer, EJ_TYPE> journalAdapter = context.eventJournalAdapter;\n                 final EJ_TYPE e = response.get(0);\n \n                 assertEquals(ADDED, journalAdapter.getType(e));\n-                assertEquals(key, journalAdapter.getKey(e));\n                 assertEquals(value, journalAdapter.getNewValue(e));\n-                assertNotEquals(startSequence + response.readCount(), response.getNextSequenceToReadFrom());\n-                assertEquals(1, response.getNextSequenceToReadFrom());\n-                latch.countDown();\n             } else {\n-                t.printStackTrace();\n+                rethrow(t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c12dc806b99596701275c53559dda714e639b84"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMjMzNDA2", "url": "https://github.com/hazelcast/hazelcast/pull/17095#pullrequestreview-432233406", "createdAt": "2020-06-17T09:42:27Z", "commit": {"oid": "1c12dc806b99596701275c53559dda714e639b84"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NTEwODM4", "url": "https://github.com/hazelcast/hazelcast/pull/17095#pullrequestreview-435510838", "createdAt": "2020-06-23T07:27:20Z", "commit": {"oid": "1c12dc806b99596701275c53559dda714e639b84"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NTEwOTc5", "url": "https://github.com/hazelcast/hazelcast/pull/17095#pullrequestreview-435510979", "createdAt": "2020-06-23T07:27:32Z", "commit": {"oid": "1c12dc806b99596701275c53559dda714e639b84"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3704, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}