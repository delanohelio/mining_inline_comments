{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2ODE5NTg3", "number": 16555, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMzozNzozMlrODafMCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwODowMzoyMlrODaygLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MTAwNTUyOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/test/java/com/hazelcast/client/protocol/compatibility/ReferenceObjects.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMzozNzozMlrOFhd21g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMzozNzozMlrOFhd21g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYzNjUwMg==", "bodyText": "this should have default parameters set. aString for uniqueKey and anEnum equivalent for uniqueKeyTransformation fields", "url": "https://github.com/hazelcast/hazelcast/pull/16555#discussion_r370636502", "createdAt": "2020-01-24T13:37:32Z", "author": {"login": "mdumandag"}, "path": "hazelcast/src/test/java/com/hazelcast/client/protocol/compatibility/ReferenceObjects.java", "diffHunk": "@@ -716,7 +717,8 @@ private static boolean isEqualStackTrace(StackTraceElement stackTraceElement1, S\n \n     public static ListenerConfigHolder aListenerConfigHolder = new ListenerConfigHolder(anInt, aData, aString, aBoolean, aBoolean);\n     public static AttributeConfig anAttributeConfig = new AttributeConfig(aString, aString);\n-    public static IndexConfig anIndexConfig = CustomTypeFactory.createIndexConfig(aString, anEnum, aListOfStrings);\n+    public static BitmapIndexOptions aBitmapIndexOptions = new BitmapIndexOptions();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0baaf4f577e22f1028e2e9d90773c17355142b89"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDE3MDA0OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/config/IndexConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwODowMzoyMlrOFh6MfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwOTowNzoxNFrOFh7nsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEwMDc5Ng==", "bodyText": "These two lines look dangerous to me because we mutate an object which was set earlier. Consider the following code:\nIndexConfig config = new IndexConfig();\nBitmapIndexOptions options = config1.getBitmapIndexOptions();\n// ...\nconfig.setBitmapIndexOptions(<new options>);\n// \"options\" object changed unexpectedly\n\nI would rather overwrite an object in the setter and perform a lazy initialization in getter as we do in other config classes (e.g. IndexConfig.getAttributes() copies this approach).", "url": "https://github.com/hazelcast/hazelcast/pull/16555#discussion_r371100796", "createdAt": "2020-01-27T08:03:22Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/config/IndexConfig.java", "diffHunk": "@@ -204,6 +204,18 @@ public BitmapIndexOptions getBitmapIndexOptions() {\n         return bitmapIndexOptions;\n     }\n \n+    /**\n+     * Sets bitmap index options of this index config to the given ones.\n+     *\n+     * @param bitmapIndexOptions the bitmap index options to set.\n+     * @return this index config instance.\n+     */\n+    public IndexConfig setBitmapIndexOptions(BitmapIndexOptions bitmapIndexOptions) {\n+        this.bitmapIndexOptions.setUniqueKey(bitmapIndexOptions.getUniqueKey());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47549ff3bd4e95725048393dc8fb111c586c51d7"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEyNDE0Nw==", "bodyText": "fixed in 656e856", "url": "https://github.com/hazelcast/hazelcast/pull/16555#discussion_r371124147", "createdAt": "2020-01-27T09:07:14Z", "author": {"login": "taburet"}, "path": "hazelcast/src/main/java/com/hazelcast/config/IndexConfig.java", "diffHunk": "@@ -204,6 +204,18 @@ public BitmapIndexOptions getBitmapIndexOptions() {\n         return bitmapIndexOptions;\n     }\n \n+    /**\n+     * Sets bitmap index options of this index config to the given ones.\n+     *\n+     * @param bitmapIndexOptions the bitmap index options to set.\n+     * @return this index config instance.\n+     */\n+    public IndexConfig setBitmapIndexOptions(BitmapIndexOptions bitmapIndexOptions) {\n+        this.bitmapIndexOptions.setUniqueKey(bitmapIndexOptions.getUniqueKey());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEwMDc5Ng=="}, "originalCommit": {"oid": "47549ff3bd4e95725048393dc8fb111c586c51d7"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 786, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}