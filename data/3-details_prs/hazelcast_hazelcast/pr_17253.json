{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NTY3Mzcx", "number": 17253, "title": "Add SES and DES stats", "bodyText": "Modifications:\n\nScheduled and durable executor services collect same LocalExecutorStats with regular executor service and these stats are available for MC monitoring.\nExecutor of offloaded entry-processor also collect LocalExecutorStats and these stats also are available for MC monitoring.\n\nPR for client protocol: hazelcast/hazelcast-client-protocol#337\nhttps://hazelcast.atlassian.net/wiki/spaces/PM/pages/1766621636/Statistics+for+Durable+and+Scheduled+Executor+Service", "createdAt": "2020-07-21T15:05:55Z", "url": "https://github.com/hazelcast/hazelcast/pull/17253", "merged": true, "mergeCommit": {"oid": "de7cb4b388dfe350671eab1f885fbdfade630e37"}, "closed": true, "closedAt": "2020-08-26T08:58:50Z", "author": {"login": "ahmetmircik"}, "timelineItems": {"totalCount": 42, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3s-tTABqjM1NzkzNzMyODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCm35kAFqTQ3NTIzMDc4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "02d9b8ab241193d0e57b31321f52f6661acdcfa3", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/02d9b8ab241193d0e57b31321f52f6661acdcfa3", "committedDate": "2020-07-23T08:30:35Z", "message": "ignore test"}, "afterCommit": {"oid": "39ad8acb323c5abf39cfbdc20ebd5f2a35715d01", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/39ad8acb323c5abf39cfbdc20ebd5f2a35715d01", "committedDate": "2020-07-23T10:36:01Z", "message": "public api 1"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "61f35f8d33623828e87b82264e8483ac3874ea0f", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/61f35f8d33623828e87b82264e8483ac3874ea0f", "committedDate": "2020-07-24T12:36:59Z", "message": "Offloaded stats 2"}, "afterCommit": {"oid": "bbbd14ffd737c90e5b95c84ea100e5082a15dccf", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/bbbd14ffd737c90e5b95c84ea100e5082a15dccf", "committedDate": "2020-07-24T12:38:10Z", "message": "Offloaded stats 2"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "205d1c7c38ecbeac9686a377d77147135c34f7e3", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/205d1c7c38ecbeac9686a377d77147135c34f7e3", "committedDate": "2020-07-24T12:55:20Z", "message": "One stats"}, "afterCommit": {"oid": "22250d8c1cb3c99e7aa79b57c5e18ab1434a2fb5", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/22250d8c1cb3c99e7aa79b57c5e18ab1434a2fb5", "committedDate": "2020-08-04T07:41:07Z", "message": "One stats"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "22250d8c1cb3c99e7aa79b57c5e18ab1434a2fb5", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/22250d8c1cb3c99e7aa79b57c5e18ab1434a2fb5", "committedDate": "2020-08-04T07:41:07Z", "message": "One stats"}, "afterCommit": {"oid": "ca37a46e927ff3ce2110199f187bcead6df9f611", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/ca37a46e927ff3ce2110199f187bcead6df9f611", "committedDate": "2020-08-04T15:23:06Z", "message": "add des local api"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ca37a46e927ff3ce2110199f187bcead6df9f611", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/ca37a46e927ff3ce2110199f187bcead6df9f611", "committedDate": "2020-08-04T15:23:06Z", "message": "add des local api"}, "afterCommit": {"oid": "88b500a0d373c7664609c20651b207c7fc03245b", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/88b500a0d373c7664609c20651b207c7fc03245b", "committedDate": "2020-08-06T11:00:04Z", "message": "Remove local-stats from api"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f52bd652c2c04916ab011a232fcf076b4c26213b", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/f52bd652c2c04916ab011a232fcf076b4c26213b", "committedDate": "2020-08-07T14:09:48Z", "message": "checkstyle"}, "afterCommit": {"oid": "21a5605bf417bc2a8a720020b5f2f8ab258b3808", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/21a5605bf417bc2a8a720020b5f2f8ab258b3808", "committedDate": "2020-08-11T12:01:33Z", "message": "wip"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a2b38c6263607e985ab9aa2ff03ab244d22b74b5", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/a2b38c6263607e985ab9aa2ff03ab244d22b74b5", "committedDate": "2020-08-11T13:40:45Z", "message": "Versioned"}, "afterCommit": {"oid": "1ec51050878386d42693be8b7e34505a99a920ad", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/1ec51050878386d42693be8b7e34505a99a920ad", "committedDate": "2020-08-11T14:47:58Z", "message": "Add durable, scheduler and offloded executor stats"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1ec51050878386d42693be8b7e34505a99a920ad", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/1ec51050878386d42693be8b7e34505a99a920ad", "committedDate": "2020-08-11T14:47:58Z", "message": "Add durable, scheduler and offloded executor stats"}, "afterCommit": {"oid": "0a3cef8230354b006ee87f0b2c7422422284a9d5", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/0a3cef8230354b006ee87f0b2c7422422284a9d5", "committedDate": "2020-08-11T16:06:45Z", "message": "Add durable, scheduler and offloded executor stats"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0a3cef8230354b006ee87f0b2c7422422284a9d5", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/0a3cef8230354b006ee87f0b2c7422422284a9d5", "committedDate": "2020-08-11T16:06:45Z", "message": "Add durable, scheduler and offloded executor stats"}, "afterCommit": {"oid": "9e6e440613849ccb7ebaaf7e8b87128ff0a80414", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/9e6e440613849ccb7ebaaf7e8b87128ff0a80414", "committedDate": "2020-08-16T10:05:55Z", "message": "Add durable, scheduler and offloded executor stats"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NDQyNDg1", "url": "https://github.com/hazelcast/hazelcast/pull/17253#pullrequestreview-468442485", "createdAt": "2020-08-17T13:04:07Z", "commit": {"oid": "9e6e440613849ccb7ebaaf7e8b87128ff0a80414"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzowNDowN1rOHBn3HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzowNDowN1rOHBn3HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ2MzcwOQ==", "bodyText": "Leftover TODOs?", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r471463709", "createdAt": "2020-08-17T13:04:07Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/clientside/ClientDynamicClusterConfig.java", "diffHunk": "@@ -288,6 +288,7 @@ public Config addExecutorConfig(ExecutorConfig executorConfig) {\n         return this;\n     }\n \n+    // TODO stats", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6e440613849ccb7ebaaf7e8b87128ff0a80414"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNDQwMDc2", "url": "https://github.com/hazelcast/hazelcast/pull/17253#pullrequestreview-470440076", "createdAt": "2020-08-19T13:10:37Z", "commit": {"oid": "9e6e440613849ccb7ebaaf7e8b87128ff0a80414"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMzoxMDozN1rOHDGo_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMzozMTowMlrOHDHgQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAxNjU3Mw==", "bodyText": "Better use something like Returns {@code true} if. Maybe you can omit the @return then if they will be the same.", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r473016573", "createdAt": "2020-08-19T13:10:37Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/config/DurableExecutorConfig.java", "diffHunk": "@@ -182,13 +187,36 @@ public DurableExecutorConfig setSplitBrainProtectionName(String splitBrainProtec\n         return this;\n     }\n \n+    /**\n+     * Gets if statistics gathering is enabled", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6e440613849ccb7ebaaf7e8b87128ff0a80414"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAxNzU3MA==", "bodyText": "Same comment as in other config", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r473017570", "createdAt": "2020-08-19T13:12:11Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/config/ScheduledExecutorConfig.java", "diffHunk": "@@ -248,6 +261,29 @@ public ScheduledExecutorConfig setMergePolicyConfig(MergePolicyConfig mergePolic\n         return this;\n     }\n \n+    /**\n+     * Gets if statistics gathering is enabled", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6e440613849ccb7ebaaf7e8b87128ff0a80414"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAyMTEyNQ==", "bodyText": "I see we're missing this config in other places like XSD, YAML, XML and spring config (https://github.com/hazelcast/hazelcast/wiki/Checklist-for-Hazelcast-config-changes). Can you add it?", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r473021125", "createdAt": "2020-08-19T13:17:03Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/config/DurableExecutorConfig.java", "diffHunk": "@@ -57,6 +60,8 @@\n \n     private String splitBrainProtectionName;\n \n+    private boolean statisticsEnabled = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6e440613849ccb7ebaaf7e8b87128ff0a80414"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAyOTU4Ng==", "bodyText": "Should this be under executors instead? I see other internal executors like executor.durable.internal.", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r473029586", "createdAt": "2020-08-19T13:29:22Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/metrics/MetricDescriptorConstants.java", "diffHunk": "@@ -199,6 +207,7 @@\n     public static final String MAP_PREFIX = \"map\";\n     public static final String MAP_PREFIX_INDEX = \"map.index\";\n     public static final String MAP_PREFIX_NEARCACHE = \"map.nearcache\";\n+    public static final String MAP_PREFIX_ENTRY_PROCESSOR_OFFLOADABLE_EXECUTOR = \"map.entry.processor.offloadable.executor\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6e440613849ccb7ebaaf7e8b87128ff0a80414"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAzMDcyMQ==", "bodyText": "Can you add javadoc on the class and methods for future maintenance?", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r473030721", "createdAt": "2020-08-19T13:31:02Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/map/impl/ExecutorStats.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.map.impl;\n+\n+import com.hazelcast.internal.monitor.impl.LocalExecutorStatsImpl;\n+import com.hazelcast.internal.util.ConcurrencyUtil;\n+import com.hazelcast.internal.util.ConstructorFunction;\n+\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+public final class ExecutorStats {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6e440613849ccb7ebaaf7e8b87128ff0a80414"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e6e440613849ccb7ebaaf7e8b87128ff0a80414", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/9e6e440613849ccb7ebaaf7e8b87128ff0a80414", "committedDate": "2020-08-16T10:05:55Z", "message": "Add durable, scheduler and offloded executor stats"}, "afterCommit": {"oid": "e0f8e4c47f25e9f219ebeaac82dbaad1ba9dea30", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/e0f8e4c47f25e9f219ebeaac82dbaad1ba9dea30", "committedDate": "2020-08-19T13:50:12Z", "message": "Add TDD docs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e0f8e4c47f25e9f219ebeaac82dbaad1ba9dea30", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/e0f8e4c47f25e9f219ebeaac82dbaad1ba9dea30", "committedDate": "2020-08-19T13:50:12Z", "message": "Add TDD docs"}, "afterCommit": {"oid": "8cba7892b98a93134cbf9afbd8faa5e1b896dfb6", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/8cba7892b98a93134cbf9afbd8faa5e1b896dfb6", "committedDate": "2020-08-19T13:51:46Z", "message": "Add TDD docs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8cba7892b98a93134cbf9afbd8faa5e1b896dfb6", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/8cba7892b98a93134cbf9afbd8faa5e1b896dfb6", "committedDate": "2020-08-19T13:51:46Z", "message": "Add TDD docs"}, "afterCommit": {"oid": "f66091d4b7129036ca0e3f059a6f42498bfade35", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/f66091d4b7129036ca0e3f059a6f42498bfade35", "committedDate": "2020-08-19T13:55:56Z", "message": "Add TDD docs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5cbc9b0947f8bd1a7fb9e69f8ca078743acd1ee5", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/5cbc9b0947f8bd1a7fb9e69f8ca078743acd1ee5", "committedDate": "2020-08-19T14:39:09Z", "message": "Address Matko's comments"}, "afterCommit": {"oid": "1fb18807308dc719c04acd139582c5b53b1a5c61", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/1fb18807308dc719c04acd139582c5b53b1a5c61", "committedDate": "2020-08-21T09:05:04Z", "message": "Add tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1fb18807308dc719c04acd139582c5b53b1a5c61", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/1fb18807308dc719c04acd139582c5b53b1a5c61", "committedDate": "2020-08-21T09:05:04Z", "message": "Add tests"}, "afterCommit": {"oid": "a0bb0b822ddca6a7bf734860ee6639de2786fe33", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/a0bb0b822ddca6a7bf734860ee6639de2786fe33", "committedDate": "2020-08-21T09:05:22Z", "message": "Add tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0bb0b822ddca6a7bf734860ee6639de2786fe33", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/a0bb0b822ddca6a7bf734860ee6639de2786fe33", "committedDate": "2020-08-21T09:05:22Z", "message": "Add tests"}, "afterCommit": {"oid": "83039804f974b3fa37d97f075e1107a932519813", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/83039804f974b3fa37d97f075e1107a932519813", "committedDate": "2020-08-21T09:11:54Z", "message": "Add tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83039804f974b3fa37d97f075e1107a932519813", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/83039804f974b3fa37d97f075e1107a932519813", "committedDate": "2020-08-21T09:11:54Z", "message": "Add tests"}, "afterCommit": {"oid": "f39139b0cde778a655473f48b3076cbf53760be3", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/f39139b0cde778a655473f48b3076cbf53760be3", "committedDate": "2020-08-21T10:09:40Z", "message": "Add tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNDQ1MzQx", "url": "https://github.com/hazelcast/hazelcast/pull/17253#pullrequestreview-472445341", "createdAt": "2020-08-21T12:26:31Z", "commit": {"oid": "f39139b0cde778a655473f48b3076cbf53760be3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMzIzNDAz", "url": "https://github.com/hazelcast/hazelcast/pull/17253#pullrequestreview-473323403", "createdAt": "2020-08-24T10:15:51Z", "commit": {"oid": "abb233f88b7773280640326186c58e889871ded5"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMDoxNTo1MVrOHFd22Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMToxMDoxNlrOHFfuxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ5NDEwNQ==", "bodyText": "Missing changes in ConfigXmlGenerator, ConfigXmlGeneratorTest and ConfigCompatibilityChecker, same for other config.", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r475494105", "createdAt": "2020-08-24T10:15:51Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/config/DurableExecutorConfig.java", "diffHunk": "@@ -57,28 +60,32 @@\n \n     private String splitBrainProtectionName;\n \n+    private boolean statisticsEnabled = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abb233f88b7773280640326186c58e889871ded5"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ5NTM3MA==", "bodyText": "Can you add the default for the statistics here and in the YAML file?", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r475495370", "createdAt": "2020-08-24T10:18:27Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/resources/hazelcast-default.xml", "diffHunk": "@@ -116,6 +116,12 @@\n         <!--Queue capacity. 0 means Integer.MAX_VALUE.-->\n         <queue-capacity>0</queue-capacity>\n     </executor-service>\n+    <scheduled-executor-service name=\"default\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abb233f88b7773280640326186c58e889871ded5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyMDM2Ng==", "bodyText": "Will this wrap the exception? Do we have tests for this case?", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r475520366", "createdAt": "2020-08-24T11:00:38Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/durableexecutor/impl/DurableExecutorContainer.java", "diffHunk": "@@ -17,49 +17,81 @@\n package com.hazelcast.durableexecutor.impl;\n \n import com.hazelcast.durableexecutor.impl.operations.PutResultOperation;\n+import com.hazelcast.internal.util.Clock;\n+import com.hazelcast.internal.util.ExceptionUtil;\n import com.hazelcast.logging.ILogger;\n+import com.hazelcast.map.impl.ExecutorStats;\n import com.hazelcast.spi.impl.NodeEngineImpl;\n import com.hazelcast.spi.impl.executionservice.ExecutionService;\n import com.hazelcast.spi.impl.operationservice.Operation;\n import com.hazelcast.spi.impl.operationservice.OperationService;\n \n import java.util.concurrent.Callable;\n import java.util.concurrent.FutureTask;\n+import java.util.concurrent.RejectedExecutionException;\n \n import static com.hazelcast.durableexecutor.impl.DistributedDurableExecutorService.SERVICE_NAME;\n \n public class DurableExecutorContainer {\n \n-    private final String name;\n-\n-    private final NodeEngineImpl nodeEngine;\n-\n-    private final ExecutionService executionService;\n-\n-    private final ILogger logger;\n-\n-    private final int partitionId;\n-\n     private final int durability;\n+    private final int partitionId;\n+    private final boolean statisticsEnabled;\n \n+    private final String name;\n+    private final ILogger logger;\n     private final TaskRingBuffer ringBuffer;\n+    private final NodeEngineImpl nodeEngine;\n+    private final ExecutorStats executorStats;\n+    private final ExecutionService executionService;\n \n     public DurableExecutorContainer(NodeEngineImpl nodeEngine, String name, int partitionId,\n-                                    int durability, TaskRingBuffer ringBuffer) {\n+                                    int durability, boolean statisticsEnabled, TaskRingBuffer ringBuffer) {\n         this.name = name;\n         this.nodeEngine = nodeEngine;\n         this.executionService = nodeEngine.getExecutionService();\n         this.partitionId = partitionId;\n         this.logger = nodeEngine.getLogger(DurableExecutorContainer.class);\n         this.durability = durability;\n         this.ringBuffer = ringBuffer;\n+        this.statisticsEnabled = statisticsEnabled;\n+        this.executorStats = ((DistributedDurableExecutorService) nodeEngine.getService(SERVICE_NAME)).getExecutorStats();\n     }\n \n     public int execute(Callable callable) {\n-        int sequence = ringBuffer.add(callable);\n-        TaskProcessor processor = new TaskProcessor(sequence, callable);\n-        executionService.executeDurable(name, processor);\n-        return sequence;\n+        try {\n+            int sequence = ringBuffer.add(callable);\n+            TaskProcessor processor = new TaskProcessor(sequence, callable);\n+            executionService.executeDurable(name, processor);\n+            return sequence;\n+        } catch (RejectedExecutionException e) {\n+            if (statisticsEnabled) {\n+                executorStats.rejectExecution(name);\n+            }\n+            throw ExceptionUtil.rethrow(e);\n+        }\n+    }\n+\n+    void executeAll() {\n+        try {\n+            TaskRingBuffer.DurableIterator iterator = ringBuffer.iterator();\n+            while (iterator.hasNext()) {\n+                Object item = iterator.next();\n+                boolean isCallable = iterator.isTask();\n+                if (!isCallable) {\n+                    continue;\n+                }\n+                Callable callable = (Callable) item;\n+                int sequence = iterator.getSequence();\n+                TaskProcessor processor = new TaskProcessor(sequence, callable);\n+                executionService.executeDurable(name, processor);\n+            }\n+        } catch (RejectedExecutionException e) {\n+            if (statisticsEnabled) {\n+                executorStats.rejectExecution(name);\n+            }\n+            throw ExceptionUtil.rethrow(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abb233f88b7773280640326186c58e889871ded5"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyMDY5OQ==", "bodyText": "Does the \"execution time\" include the queueing time in all of the uses of the executor stats?", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r475520699", "createdAt": "2020-08-24T11:01:19Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/durableexecutor/impl/DurableExecutorContainer.java", "diffHunk": "@@ -138,6 +166,9 @@ public void run() {\n             } finally {\n                 if (!isCancelled()) {\n                     setResponse(response);\n+                    if (statisticsEnabled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abb233f88b7773280640326186c58e889871ded5"}, "originalPosition": 154}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyNDMwNA==", "bodyText": "Minor: I see none of the other names of the keys have With in them.", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r475524304", "createdAt": "2020-08-24T11:09:11Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/monitor/impl/MemberStateImpl.java", "diffHunk": "@@ -302,6 +312,8 @@ public JsonObject toJson() {\n         serializeAsMap(root, \"reliableTopicStats\", reliableTopicsWithStats);\n         serializeAsMap(root, \"pnCounterStats\", pnCountersWithStats);\n         serializeAsMap(root, \"executorStats\", executorsWithStats);\n+        serializeAsMap(root, \"scheduledExecutorsWithStats\", scheduledExecutorsWithStats);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abb233f88b7773280640326186c58e889871ded5"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyNDgwNA==", "bodyText": "Again, can this wrap the exception that was previously not wrapped?", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r475524804", "createdAt": "2020-08-24T11:10:16Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/map/impl/operation/EntryOperation.java", "diffHunk": "@@ -407,6 +411,22 @@ private void executeMutatingEntryProcessor(final Object oldValue, String executo\n             }\n         }\n \n+        private void doExecute(String executorName, Runnable runnable) {\n+            boolean statisticsEnabled = mapContainer.getMapConfig().isStatisticsEnabled();\n+            ExecutorStats executorStats = mapServiceContext.getOffloadedEntryProcessorExecutorStats();\n+            try {\n+                Runnable command = statisticsEnabled\n+                        ? new StatsAwareRunnable(runnable, executorName, executorStats) : runnable;\n+                executionService.execute(executorName, command);\n+            } catch (RejectedExecutionException e) {\n+                if (statisticsEnabled) {\n+                    executorStats.rejectExecution(executorName);\n+                }\n+\n+                throw ExceptionUtil.rethrow(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abb233f88b7773280640326186c58e889871ded5"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMzU0MTI1", "url": "https://github.com/hazelcast/hazelcast/pull/17253#pullrequestreview-473354125", "createdAt": "2020-08-24T10:49:11Z", "commit": {"oid": "abb233f88b7773280640326186c58e889871ded5"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMDo0OToxMVrOHFfHyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMTozNzowNFrOHFghZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUxNDgyNw==", "bodyText": "Minor: I know that the default values for newly added booleans are false by default, hence statisticsEnabled can be used like this but I think it would be better if we don't rely on this fact and use something like parameters.isStatisticsEnabledExists && parameters.statisticsEnabled", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r475514827", "createdAt": "2020-08-24T10:49:11Z", "author": {"login": "mdumandag"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/task/dynamicconfig/AddDurableExecutorConfigMessageTask.java", "diffHunk": "@@ -44,7 +44,7 @@ protected ClientMessage encodeResponse(Object response) {\n     @Override\n     protected IdentifiedDataSerializable getConfig() {\n         DurableExecutorConfig config = new DurableExecutorConfig(parameters.name, parameters.poolSize,\n-                parameters.durability, parameters.capacity);\n+                parameters.durability, parameters.capacity, parameters.statisticsEnabled);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abb233f88b7773280640326186c58e889871ded5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUxNTA1MA==", "bodyText": "Same comment as the AddDurableExecutorConfigMessageTask", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r475515050", "createdAt": "2020-08-24T10:49:39Z", "author": {"login": "mdumandag"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/task/dynamicconfig/AddScheduledExecutorConfigMessageTask.java", "diffHunk": "@@ -49,6 +49,7 @@ protected IdentifiedDataSerializable getConfig() {\n         config.setDurability(parameters.durability);\n         config.setCapacity(parameters.capacity);\n         config.setName(parameters.name);\n+        config.setStatisticsEnabled(parameters.statisticsEnabled);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abb233f88b7773280640326186c58e889871ded5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyNTE2Mg==", "bodyText": "Minor: Would it be better to rename those as scheduledExecutorStats and durableExecutorStats to be consistent with others?", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r475525162", "createdAt": "2020-08-24T11:11:03Z", "author": {"login": "mdumandag"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/monitor/impl/MemberStateImpl.java", "diffHunk": "@@ -302,6 +312,8 @@ public JsonObject toJson() {\n         serializeAsMap(root, \"reliableTopicStats\", reliableTopicsWithStats);\n         serializeAsMap(root, \"pnCounterStats\", pnCountersWithStats);\n         serializeAsMap(root, \"executorStats\", executorsWithStats);\n+        serializeAsMap(root, \"scheduledExecutorsWithStats\", scheduledExecutorsWithStats);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abb233f88b7773280640326186c58e889871ded5"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUzMjkzMg==", "bodyText": "Minor: Maybe we could rename nearCacheDescriptor to something else?", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r475532932", "createdAt": "2020-08-24T11:27:45Z", "author": {"login": "mdumandag"}, "path": "hazelcast/src/main/java/com/hazelcast/map/impl/MapService.java", "diffHunk": "@@ -321,6 +323,19 @@ public void provideDynamicMetrics(MetricDescriptor descriptor, MetricsCollection\n                         .withDiscriminator(MAP_DISCRIMINATOR_NAME, mapName);\n                 context.collect(nearCacheDescriptor, nearCacheStats);\n             }\n+\n+        }\n+        // stats of offloaded-entry-processor's executor\n+        ExecutorStats executorStats = mapServiceContext.getOffloadedEntryProcessorExecutorStats();\n+        if (executorStats.hasStats()) {\n+            Iterable<? extends Map.Entry<String, LocalExecutorStatsImpl>> entries = executorStats.entrySet();\n+            for (Map.Entry<String, LocalExecutorStatsImpl> entry : entries) {\n+                MetricDescriptor nearCacheDescriptor = descriptor", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abb233f88b7773280640326186c58e889871ded5"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUzNjUzOA==", "bodyText": "Missing value for the statistics-enabled for this and executor-service. Also, I couldn't find an entry for the durable-executor-service in this file. Maybe we could add those", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r475536538", "createdAt": "2020-08-24T11:34:23Z", "author": {"login": "mdumandag"}, "path": "hazelcast/src/main/resources/hazelcast-default.yaml", "diffHunk": "@@ -108,6 +108,12 @@ hazelcast:\n       # Queue capacity. 0 means Integer.MAX_VALUE.\n       queue-capacity: 0\n \n+  scheduled-executor-service:\n+    default:\n+      capacity: 100\n+      durability: 1\n+      pool-size: 16\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abb233f88b7773280640326186c58e889871ded5"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUzNzc2Nw==", "bodyText": "Similar comments for the hazelcast-default.yaml", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r475537767", "createdAt": "2020-08-24T11:37:04Z", "author": {"login": "mdumandag"}, "path": "hazelcast/src/main/resources/hazelcast-default.xml", "diffHunk": "@@ -116,6 +116,12 @@\n         <!--Queue capacity. 0 means Integer.MAX_VALUE.-->\n         <queue-capacity>0</queue-capacity>\n     </executor-service>\n+    <scheduled-executor-service name=\"default\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abb233f88b7773280640326186c58e889871ded5"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNDI0MDI5", "url": "https://github.com/hazelcast/hazelcast/pull/17253#pullrequestreview-473424029", "createdAt": "2020-08-24T12:40:59Z", "commit": {"oid": "abb233f88b7773280640326186c58e889871ded5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMjo0MTowMFrOHFic1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMjo0MTowMFrOHFic1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU2OTM2NQ==", "bodyText": "By the way, if I am not missing something, the canceled task count is only incremented for ExecutorService. For these two, does this metric mean anything?", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r475569365", "createdAt": "2020-08-24T12:41:00Z", "author": {"login": "mdumandag"}, "path": "docs/design/executors/01-executor-service-stats.md", "diffHunk": "@@ -0,0 +1,100 @@\n+# Scheduled and Durable Executor Service Statistics\n+\n+|\u2139\ufe0f Since: 4.1|\n+|-------------|\n+\n+## Background\n+\n+### Description\n+\n+Hazelcast has 3 different executor service implementations exposed with \n+public api. These three different types of executor services are called\n+as executor service, scheduled executor service and durable executor \n+service. Only executor type which has statistics available \n+among these is executor service. Statistics collection is not done for \n+scheduled and durable ones.\n+\n+\n+## Design\n+\n+In this design, we make same statistics with executor service available \n+for the other executor types. These statistics are only available for\n+monitoring from management center. The statistics we have currently is \n+represented with class `LocalExecutorStats`.\n+\n+```\n+public interface LocalExecutorStats extends LocalInstanceStats {\n+\n+    /**\n+     * Returns the number of pending operations on the executor service.\n+     *\n+     * @return the number of pending operations on the executor service\n+     */\n+    long getPendingTaskCount();\n+\n+    /**\n+     * Returns the number of started operations on the executor service.\n+     *\n+     * @return the number of started operations on the executor service\n+     */\n+    long getStartedTaskCount();\n+\n+    /**\n+     * Returns the number of completed operations on the executor service.\n+     *\n+     * @return the number of completed operations on the executor service\n+     */\n+    long getCompletedTaskCount();\n+\n+    /**\n+     * Returns the number of cancelled operations on the executor service.\n+     *\n+     * @return the number of cancelled operations on the executor service\n+     */\n+    long getCancelledTaskCount();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abb233f88b7773280640326186c58e889871ded5"}, "originalPosition": 54}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "abb233f88b7773280640326186c58e889871ded5", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/abb233f88b7773280640326186c58e889871ded5", "committedDate": "2020-08-21T14:10:47Z", "message": "Add client protocol changes for statsEnabled parameter"}, "afterCommit": {"oid": "8009720db2d968d95793fbed597e861ad5ad53c1", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/8009720db2d968d95793fbed597e861ad5ad53c1", "committedDate": "2020-08-24T16:33:52Z", "message": "Address review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8009720db2d968d95793fbed597e861ad5ad53c1", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/8009720db2d968d95793fbed597e861ad5ad53c1", "committedDate": "2020-08-24T16:33:52Z", "message": "Address review comments"}, "afterCommit": {"oid": "f20fe2ab8451ded1bfb9f13b60a50c7b685b2c48", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/f20fe2ab8451ded1bfb9f13b60a50c7b685b2c48", "committedDate": "2020-08-24T16:43:02Z", "message": "Address review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f20fe2ab8451ded1bfb9f13b60a50c7b685b2c48", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/f20fe2ab8451ded1bfb9f13b60a50c7b685b2c48", "committedDate": "2020-08-24T16:43:02Z", "message": "Address review comments"}, "afterCommit": {"oid": "8e4f513765f6c0229000febee0570c1bcdf75dd2", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/8e4f513765f6c0229000febee0570c1bcdf75dd2", "committedDate": "2020-08-25T10:11:50Z", "message": "Address Metin's review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0NDMwMjQ1", "url": "https://github.com/hazelcast/hazelcast/pull/17253#pullrequestreview-474430245", "createdAt": "2020-08-25T12:29:02Z", "commit": {"oid": "a4a9be2d1e9453e8a1d42518b8c424f6bcd6d587"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMjoyOTowM1rOHGVu7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMzowNzozOFrOHGXNuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQwOTU4MA==", "bodyText": "IMHO TODO's rarely get fixed (check out how many we already have). Either add the stats, or open a GH issue, or just conclude it's not worth the hassle and remove the TODO.", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r476409580", "createdAt": "2020-08-25T12:29:03Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/durableexecutor/impl/DurableExecutorServiceProxy.java", "diffHunk": "@@ -277,6 +271,7 @@ protected void throwNotActiveException() {\n             InternalCompletableFuture<T> completedFuture = completedExceptionally(t.getCause());\n             return new DurableExecutorServiceDelegateFuture<T>(completedFuture, serializationService, null, -1);\n         } catch (CancellationException e) {\n+            // TODO add cancellation stats?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a9be2d1e9453e8a1d42518b8c424f6bcd6d587"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQyODIwNw==", "bodyText": "Remove With", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r476428207", "createdAt": "2020-08-25T12:58:40Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/monitor/impl/MemberStateImpl.java", "diffHunk": "@@ -495,6 +515,8 @@ public String toString() {\n                 + \", reliableTopicsWithStats=\" + reliableTopicsWithStats\n                 + \", pnCountersWithStats=\" + pnCountersWithStats\n                 + \", executorsWithStats=\" + executorsWithStats\n+                + \", scheduledExecutorsWithStats=\" + scheduledExecutorsWithStats", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa1e6eff8768c255028a0cb2a9ef346ab0961d12"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQzMzg0OQ==", "bodyText": "Update these lines if you update the metric name.", "url": "https://github.com/hazelcast/hazelcast/pull/17253#discussion_r476433849", "createdAt": "2020-08-25T13:07:38Z", "author": {"login": "mmedenjak"}, "path": "docs/design/executors/02-offloaded-entry-processor-executor-stats.md", "diffHunk": "@@ -0,0 +1,92 @@\n+# Offloaded Entry Processor Executor Statistics\n+\n+|\u2139\ufe0f Since: 4.1|\n+|-------------|\n+\n+## Background\n+\n+### Description\n+\n+Offloaded entry processors are not executed by regular operation threads.\n+As its name suggests, they offloaded to a different pool of threads and \n+executed by them. But the executor of these offloaded entry processors\n+has no statistics available.\n+\n+\n+## Design\n+\n+In this design, we collect statistics for offloaded entry processor executors. \n+We use same `LocalExecutorStats` with other executors in Hazelcast.\n+\n+```\n+public interface LocalExecutorStats extends LocalInstanceStats {\n+\n+    /**\n+     * Returns the number of pending operations on the executor service.\n+     *\n+     * @return the number of pending operations on the executor service\n+     */\n+    long getPendingTaskCount();\n+\n+    /**\n+     * Returns the number of started operations on the executor service.\n+     *\n+     * @return the number of started operations on the executor service\n+     */\n+    long getStartedTaskCount();\n+\n+    /**\n+     * Returns the number of completed operations on the executor service.\n+     *\n+     * @return the number of completed operations on the executor service\n+     */\n+    long getCompletedTaskCount();\n+\n+    /**\n+     * Returns the number of cancelled operations on the executor service.\n+     *\n+     * @return the number of cancelled operations on the executor service\n+     */\n+    long getCancelledTaskCount();\n+\n+    /**\n+     * Returns the total start latency of operations started.\n+     *\n+     * @return the total start latency of operations started\n+     */\n+    long getTotalStartLatency();\n+\n+    /**\n+     * Returns the total execution time of operations finished.\n+     *\n+     * @return the total execution time of operations finished\n+     */\n+    long getTotalExecutionLatency();\n+}\n+```\n+\n+On submit of each offloadable entry processor, we start to collect the statistics and\n+with metrics subsystem, we made these available to management center.\n+In `MapService` we have `DynamicMetricsProvider` interface implementation\n+and offloaded executor stats are added there too. Statistics are available by default,\n+they can be disabled via `MapConfig`.\n+ \n+### Metrics Prefixes\n+`map.entry.processor.offloadable.executor` prefix is used for offloaded executor.\n+\n+### Example Output\n+```\n+[name=STATS_OFFLOADED_EXECUTOR,unit=ms,metric=map.entry.processor.offloadable.executor.creationTime]=1598017099308", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa1e6eff8768c255028a0cb2a9ef346ab0961d12"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77620103a8e4cd46e69e568ab3c8468e995a167c", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/77620103a8e4cd46e69e568ab3c8468e995a167c", "committedDate": "2020-08-25T14:26:38Z", "message": "Add durable, scheduler and offloded executor stats"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8093b4c3d6be1c9766187bb311648da3d1ba33bd", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/8093b4c3d6be1c9766187bb311648da3d1ba33bd", "committedDate": "2020-08-25T14:26:38Z", "message": "Add TDD docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6854fe2978781fa1518c0bdfce16ab876c83125b", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/6854fe2978781fa1518c0bdfce16ab876c83125b", "committedDate": "2020-08-25T14:26:38Z", "message": "Add missing configs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebd0d62330b197710861b2c51cfcacacd43db7d7", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/ebd0d62330b197710861b2c51cfcacacd43db7d7", "committedDate": "2020-08-25T14:26:38Z", "message": "Address Matko's comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51bbcf19f08def29532e4631c96246179a3294fa", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/51bbcf19f08def29532e4631c96246179a3294fa", "committedDate": "2020-08-25T14:26:38Z", "message": "Add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "319c73fa90abeb0864d5a3dbdd76d89b0b92bd0c", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/319c73fa90abeb0864d5a3dbdd76d89b0b92bd0c", "committedDate": "2020-08-25T14:26:38Z", "message": "enhance TDD"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6be7518f3a0ddd02fcbc4963b420f8f2a548c0da", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/6be7518f3a0ddd02fcbc4963b420f8f2a548c0da", "committedDate": "2020-08-25T14:26:38Z", "message": "Add client protocol changes for statsEnabled parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6f40109146f7f5a9bb45fa2231fb27d868bbddd", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/e6f40109146f7f5a9bb45fa2231fb27d868bbddd", "committedDate": "2020-08-25T14:26:38Z", "message": "Address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db79eaa99cee7348d8def811cd4183a827a4d2b1", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/db79eaa99cee7348d8def811cd4183a827a4d2b1", "committedDate": "2020-08-25T14:26:38Z", "message": "Address Metin's review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f32e882719a4bdfc2ab1a85e71dec96aa63e314", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/6f32e882719a4bdfc2ab1a85e71dec96aa63e314", "committedDate": "2020-08-25T14:26:38Z", "message": "Checkstyle fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "030b12515232e7d8e8673855dec64852391ca7c1", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/030b12515232e7d8e8673855dec64852391ca7c1", "committedDate": "2020-08-25T14:26:38Z", "message": "Removed TODO"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e30382ddb6285521acbbba94df6f74ba8733c40", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/0e30382ddb6285521acbbba94df6f74ba8733c40", "committedDate": "2020-08-25T14:26:38Z", "message": "Removed TODO & polishin"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fa1e6eff8768c255028a0cb2a9ef346ab0961d12", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/fa1e6eff8768c255028a0cb2a9ef346ab0961d12", "committedDate": "2020-08-25T11:52:08Z", "message": "Checkstyle fix"}, "afterCommit": {"oid": "0e30382ddb6285521acbbba94df6f74ba8733c40", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/0e30382ddb6285521acbbba94df6f74ba8733c40", "committedDate": "2020-08-25T14:26:38Z", "message": "Removed TODO & polishin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d474155bd4c497855519ee0971fe9fd8cfd5e4b0", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/d474155bd4c497855519ee0971fe9fd8cfd5e4b0", "committedDate": "2020-08-25T17:12:17Z", "message": "fix test failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "345c68915b74ec5124c93041657f261b9a25b95b", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/345c68915b74ec5124c93041657f261b9a25b95b", "committedDate": "2020-08-25T19:17:47Z", "message": "fix test failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MjMwNzg2", "url": "https://github.com/hazelcast/hazelcast/pull/17253#pullrequestreview-475230786", "createdAt": "2020-08-26T07:42:32Z", "commit": {"oid": "345c68915b74ec5124c93041657f261b9a25b95b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3593, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}