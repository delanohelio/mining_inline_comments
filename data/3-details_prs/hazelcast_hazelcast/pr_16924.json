{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MzAzMzI4", "number": 16924, "title": "Connection count and getActiveConnections cleanup", "bodyText": "Dropped 'getConnections' functionality which is purely the mapped connections.\nThe getActiveConnections has been renamed to getConnections.\nSome improvements for retrieving connection count statistics and some minor other cleanups.", "createdAt": "2020-04-24T03:07:50Z", "url": "https://github.com/hazelcast/hazelcast/pull/16924", "merged": true, "mergeCommit": {"oid": "674d71adc57504d52029b4ca4675aafd4c1a1dfb"}, "closed": true, "closedAt": "2020-05-04T08:08:45Z", "author": {"login": "pveentjer"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcat2CiAFqTM5OTY5NzU4Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABccTGO9AFqTQwMjQxMTQwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5Njk3NTg3", "url": "https://github.com/hazelcast/hazelcast/pull/16924#pullrequestreview-399697587", "createdAt": "2020-04-24T07:19:42Z", "commit": {"oid": "9352e653a2254c5594fc4fd2dd83fa03611ba460"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNzoxOTo0MlrOGLKB1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOToxMDoyNVrOGLOM1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM1MTgzMA==", "bodyText": "rogue \\ inserted here", "url": "https://github.com/hazelcast/hazelcast/pull/16924#discussion_r414351830", "createdAt": "2020-04-24T07:19:42Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/server/Server.java", "diffHunk": "@@ -39,33 +40,54 @@\n      * Returns a {@link ServerConnectionManager} that is able to handle\n      * connections for the given qualifier.\n      *\n-     * It is important to realize that the returned manager could also\n+     * It is important to realize that the return\\ed manager could also", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9352e653a2254c5594fc4fd2dd83fa03611ba460"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM1MjI4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * for the given an {@link EndpointQualifier}. It for MEMBER there will always be an\n          \n          \n            \n                 * for the given {@link EndpointQualifier}. For {@code MEMBER} there will always be a", "url": "https://github.com/hazelcast/hazelcast/pull/16924#discussion_r414352284", "createdAt": "2020-04-24T07:20:36Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/server/Server.java", "diffHunk": "@@ -39,33 +40,54 @@\n      * Returns a {@link ServerConnectionManager} that is able to handle\n      * connections for the given qualifier.\n      *\n-     * It is important to realize that the returned manager could also\n+     * It is important to realize that the return\\ed manager could also\n      * manage other connections; so if you ask for a member connection manager\n      * it could be that you get a connection manager that also handles client\n      * connections. So if you would ask for {@link ServerConnectionManager#getConnections()}\n      * it could contain a mixture of client and member connections.\n      *\n      * @param qualifier the EndpointQualifier used to select the right connection manager.\n      * @return the relevant {@link ServerConnectionManager} that processes connections\n-     * for the given an {@link EndpointQualifier}\n+     * for the given an {@link EndpointQualifier}. It for MEMBER there will always be an", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9352e653a2254c5594fc4fd2dd83fa03611ba460"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQxMDcxNg==", "bodyText": "minor: why specify a merge function instead of using Collectors.toMap(keyMapper, valueMapper)? Collisions are not expected here.", "url": "https://github.com/hazelcast/hazelcast/pull/16924#discussion_r414410716", "createdAt": "2020-04-24T08:55:51Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/server/tcp/TcpServer.java", "diffHunk": "@@ -233,22 +217,18 @@ public synchronized void shutdown() {\n             return emptyMap();\n         }\n \n-        Map<EndpointQualifier, NetworkStats> stats = null;\n-        for (Map.Entry<EndpointQualifier, TcpServerConnectionManager> entry : connectionManagers.entrySet()) {\n-            if (stats == null) {\n-                stats = new HashMap<>();\n-            }\n-            stats.put(entry.getKey(), entry.getValue().getNetworkStats());\n-        }\n-        return stats == null ? emptyMap() : stats;\n+        return connectionManagers.entrySet()\n+                .stream()\n+                .collect(Collectors.toMap(Map.Entry::getKey, entry -> entry.getValue().getNetworkStats(), (a, b) -> b));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9352e653a2254c5594fc4fd2dd83fa03611ba460"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQxMzI2Ng==", "bodyText": "minor: EndpointManager -> ConnectionManager", "url": "https://github.com/hazelcast/hazelcast/pull/16924#discussion_r414413266", "createdAt": "2020-04-24T08:59:35Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/server/tcp/TcpServerConnectionManager.java", "diffHunk": "@@ -258,13 +264,13 @@ public int getKey() {\n \n     public synchronized void reset(boolean cleanListeners) {\n         acceptedChannels.forEach(IOUtil::closeResource);\n-        connectionsMap.values().forEach(conn -> close(conn, \"EndpointManager is stopping\"));\n-        activeConnections.forEach(conn -> close(conn, \"EndpointManager is stopping\"));\n+        mappedConnections.values().forEach(conn -> close(conn, \"EndpointManager is stopping\"));\n+        connections.forEach(conn -> close(conn, \"EndpointManager is stopping\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9352e653a2254c5594fc4fd2dd83fa03611ba460"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQyMDE4MQ==", "bodyText": "a @Nonnull annotation in this method could help clarify API. It seems there were some methods expecting it might return null but that was not the case.", "url": "https://github.com/hazelcast/hazelcast/pull/16924#discussion_r414420181", "createdAt": "2020-04-24T09:10:25Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/server/Server.java", "diffHunk": "@@ -39,33 +40,54 @@\n      * Returns a {@link ServerConnectionManager} that is able to handle\n      * connections for the given qualifier.\n      *\n-     * It is important to realize that the returned manager could also\n+     * It is important to realize that the return\\ed manager could also\n      * manage other connections; so if you ask for a member connection manager\n      * it could be that you get a connection manager that also handles client\n      * connections. So if you would ask for {@link ServerConnectionManager#getConnections()}\n      * it could contain a mixture of client and member connections.\n      *\n      * @param qualifier the EndpointQualifier used to select the right connection manager.\n      * @return the relevant {@link ServerConnectionManager} that processes connections\n-     * for the given an {@link EndpointQualifier}\n+     * for the given an {@link EndpointQualifier}. It for MEMBER there will always be an\n+     * ConnectionManager, but for the other ones null could be returned.\n      */\n     ServerConnectionManager getConnectionManager(EndpointQualifier qualifier);\n \n     /**\n-     * Returns all connections that have been successfully established.\n+     * Returns all connections.\n      *\n-     * @return active connections\n+     * This can be a relatively expensive operations the returned collection might be created\n+     * on every invocation. So if you are just interested in count, have a look at\n+     * {@link #connectionCount(Predicate)} method.\n+     *\n+     * @return the connections.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9352e653a2254c5594fc4fd2dd83fa03611ba460"}, "originalPosition": 36}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9352e653a2254c5594fc4fd2dd83fa03611ba460", "author": {"user": {"login": "pveentjer", "name": "Peter Veentjer"}}, "url": "https://github.com/hazelcast/hazelcast/commit/9352e653a2254c5594fc4fd2dd83fa03611ba460", "committedDate": "2020-04-24T06:24:18Z", "message": "WIP"}, "afterCommit": {"oid": "3902e18215a958022d6f4ab63c6405411e8f1de9", "author": {"user": {"login": "pveentjer", "name": "Peter Veentjer"}}, "url": "https://github.com/hazelcast/hazelcast/commit/3902e18215a958022d6f4ab63c6405411e8f1de9", "committedDate": "2020-04-27T08:11:14Z", "message": "WIP"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNzgzNjgx", "url": "https://github.com/hazelcast/hazelcast/pull/16924#pullrequestreview-401783681", "createdAt": "2020-04-28T12:28:19Z", "commit": {"oid": "3902e18215a958022d6f4ab63c6405411e8f1de9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3902e18215a958022d6f4ab63c6405411e8f1de9", "author": {"user": {"login": "pveentjer", "name": "Peter Veentjer"}}, "url": "https://github.com/hazelcast/hazelcast/commit/3902e18215a958022d6f4ab63c6405411e8f1de9", "committedDate": "2020-04-27T08:11:14Z", "message": "WIP"}, "afterCommit": {"oid": "cadca25053ec34dbb8eede37cab9eff818d4fcac", "author": {"user": {"login": "pveentjer", "name": "Peter Veentjer"}}, "url": "https://github.com/hazelcast/hazelcast/commit/cadca25053ec34dbb8eede37cab9eff818d4fcac", "committedDate": "2020-04-29T06:48:05Z", "message": "Further ServerConnection cleanup\n\nRemoved the 'getAllConections' logic because this is an implementation\ndetail.\n\nIntroduces some connection count methods to prevent building up\nconnections and only using it to determine size."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b85619cfb14b593f60b2610810e3b72fcaa2cebc", "author": {"user": {"login": "pveentjer", "name": "Peter Veentjer"}}, "url": "https://github.com/hazelcast/hazelcast/commit/b85619cfb14b593f60b2610810e3b72fcaa2cebc", "committedDate": "2020-04-29T06:56:07Z", "message": "Further ServerConnection cleanup\n\nRemoved the 'getAllConections' logic because this is an implementation\ndetail.\n\nIntroduces some connection count methods to prevent building up\nconnections and only using it to determine size."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cadca25053ec34dbb8eede37cab9eff818d4fcac", "author": {"user": {"login": "pveentjer", "name": "Peter Veentjer"}}, "url": "https://github.com/hazelcast/hazelcast/commit/cadca25053ec34dbb8eede37cab9eff818d4fcac", "committedDate": "2020-04-29T06:48:05Z", "message": "Further ServerConnection cleanup\n\nRemoved the 'getAllConections' logic because this is an implementation\ndetail.\n\nIntroduces some connection count methods to prevent building up\nconnections and only using it to determine size."}, "afterCommit": {"oid": "b85619cfb14b593f60b2610810e3b72fcaa2cebc", "author": {"user": {"login": "pveentjer", "name": "Peter Veentjer"}}, "url": "https://github.com/hazelcast/hazelcast/commit/b85619cfb14b593f60b2610810e3b72fcaa2cebc", "committedDate": "2020-04-29T06:56:07Z", "message": "Further ServerConnection cleanup\n\nRemoved the 'getAllConections' logic because this is an implementation\ndetail.\n\nIntroduces some connection count methods to prevent building up\nconnections and only using it to determine size."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyNDExNDAy", "url": "https://github.com/hazelcast/hazelcast/pull/16924#pullrequestreview-402411402", "createdAt": "2020-04-29T07:10:58Z", "commit": {"oid": "b85619cfb14b593f60b2610810e3b72fcaa2cebc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3803, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}