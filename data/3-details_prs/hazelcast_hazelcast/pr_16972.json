{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MDIxMDM2", "number": 16972, "title": "Add support for processing WAN replication messages from 4.x members", "bodyText": "Adds support on PASSIVE (target) cluster to be able to deserialize and\nprocess WAN replication events from a 4.x ACTIVE (source) cluster.\nTesting is done by running the full WAN suite on 4.x using compatibility framework to start 3.12 clusters with this change.\nEE: hazelcast/hazelcast-enterprise#3597\nCorresponding PRs for 3.12->4.0 replication:\n#16887\nhazelcast/hazelcast-enterprise#3578", "createdAt": "2020-05-11T10:42:25Z", "url": "https://github.com/hazelcast/hazelcast/pull/16972", "merged": true, "mergeCommit": {"oid": "2569b1a8f86c7c27ef1dda5b3a5b8c4de7fc07a3"}, "closed": true, "closedAt": "2020-05-29T06:14:44Z", "author": {"login": "mmedenjak"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgPYz0ABqjMzMjI4ODE4MjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclulCVAH2gAyNDE2MDIxMDM2OmM5ODU4MjE1MTk0MTYzZmMzZGE4NGJmZjg0NTQ2ZDIwODVlN2YyMDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "15a332ae81175e1a3fa04906a3c529b20c96131f", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/15a332ae81175e1a3fa04906a3c529b20c96131f", "committedDate": "2020-05-11T12:53:50Z", "message": "WAN migration tool"}, "afterCommit": {"oid": "3a61c21e0d8da56e1d27a721002a98078dd49c83", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/3a61c21e0d8da56e1d27a721002a98078dd49c83", "committedDate": "2020-05-11T13:06:43Z", "message": "Add support for processing WAN replication messages from 4.x members\n\nAdds support on PASSIVE (target) cluster to be able to deserialize and\nprocess WAN replication events from a 4.x ACTIVE (source) cluster."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c6716bc9549a674b577d3030f06e49baac4eedc2", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/c6716bc9549a674b577d3030f06e49baac4eedc2", "committedDate": "2020-05-11T13:34:45Z", "message": "Add support for processing WAN replication messages from 4.x members\n\nAdds support on PASSIVE (target) cluster to be able to deserialize and\nprocess WAN replication events from a 4.x ACTIVE (source) cluster."}, "afterCommit": {"oid": "b815b2c959e3c88e21a2b643cce7cef590f563d6", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/b815b2c959e3c88e21a2b643cce7cef590f563d6", "committedDate": "2020-05-11T13:42:57Z", "message": "Add support for processing WAN replication messages from 4.x members\n\nAdds support on PASSIVE (target) cluster to be able to deserialize and\nprocess WAN replication events from a 4.x ACTIVE (source) cluster."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1344bc77aa787d8cb88aedcf205b838152a5d24d", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/1344bc77aa787d8cb88aedcf205b838152a5d24d", "committedDate": "2020-05-11T15:26:02Z", "message": "Add support for processing WAN replication messages from 4.x members\n\nAdds support on PASSIVE (target) cluster to be able to deserialize and\nprocess WAN replication events from a 4.x ACTIVE (source) cluster."}, "afterCommit": {"oid": "4b693032b0b455876ddee314af563288403f3eb9", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/4b693032b0b455876ddee314af563288403f3eb9", "committedDate": "2020-05-13T11:56:25Z", "message": "Add support for processing WAN replication messages from 4.x members\n\nAdds support on PASSIVE (target) cluster to be able to deserialize and\nprocess WAN replication events from a 4.x ACTIVE (source) cluster."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "521089de6259efe8f2dcaa1c57788218dff052df", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/521089de6259efe8f2dcaa1c57788218dff052df", "committedDate": "2020-05-25T15:49:12Z", "message": "Add support for processing WAN replication messages from 4.x members\n\nAdds support on PASSIVE (target) cluster to be able to deserialize and\nprocess WAN replication events from a 4.x ACTIVE (source) cluster."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02b83826badca9e2952fad5d4ac5f64458871cab", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/02b83826badca9e2952fad5d4ac5f64458871cab", "committedDate": "2020-05-25T15:49:12Z", "message": "Add support for processing WAN replication messages from 4.x members\n\nAdds support on PASSIVE (target) cluster to be able to deserialize and\nprocess WAN replication events from a 4.x ACTIVE (source) cluster."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "992b08772210ab5cca82b493c0ea9501f517a0ce", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/992b08772210ab5cca82b493c0ea9501f517a0ce", "committedDate": "2020-05-25T15:49:12Z", "message": "Add support for processing WAN replication messages from 4.x members\n\nAdds support on PASSIVE (target) cluster to be able to deserialize and\nprocess WAN replication events from a 4.x ACTIVE (source) cluster."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16fe078e8fa5291f47d2c6fb45d4190b7c66de27", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/16fe078e8fa5291f47d2c6fb45d4190b7c66de27", "committedDate": "2020-05-25T15:49:12Z", "message": "Add support for processing WAN replication messages from 4.x members\n\nAdds support on PASSIVE (target) cluster to be able to deserialize and\nprocess WAN replication events from a 4.x ACTIVE (source) cluster."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "916b0fa1eba90a629b52fd7d449a91a009ee2f72", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/916b0fa1eba90a629b52fd7d449a91a009ee2f72", "committedDate": "2020-05-25T15:49:12Z", "message": "Add support for processing WAN replication messages from 4.x members\n\nAdds support on PASSIVE (target) cluster to be able to deserialize and\nprocess WAN replication events from a 4.x ACTIVE (source) cluster."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3a48ba8943b8cf9ba48b7d258b2d066ae6ad5fe", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/e3a48ba8943b8cf9ba48b7d258b2d066ae6ad5fe", "committedDate": "2020-05-25T15:49:12Z", "message": "Add support for processing WAN replication messages from 4.x members\n\nAdds support on PASSIVE (target) cluster to be able to deserialize and\nprocess WAN replication events from a 4.x ACTIVE (source) cluster."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2516c8d8d1ee7952e9696334bb003a8b017704e", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/b2516c8d8d1ee7952e9696334bb003a8b017704e", "committedDate": "2020-05-25T15:49:12Z", "message": "Add support for processing WAN replication messages from 4.x members\n\nAdds support on PASSIVE (target) cluster to be able to deserialize and\nprocess WAN replication events from a 4.x ACTIVE (source) cluster."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ed1634c64a58d6876cda91ca43116dceb426161", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/0ed1634c64a58d6876cda91ca43116dceb426161", "committedDate": "2020-05-25T15:49:12Z", "message": "Add support for processing WAN replication messages from 4.x members\n\nAdds support on PASSIVE (target) cluster to be able to deserialize and\nprocess WAN replication events from a 4.x ACTIVE (source) cluster."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "083df110a0c6333a9eb6865c6df724ccecaf5d1b", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/083df110a0c6333a9eb6865c6df724ccecaf5d1b", "committedDate": "2020-05-25T15:49:12Z", "message": "Add support for processing WAN replication messages from 4.x members\n\nAdds support on PASSIVE (target) cluster to be able to deserialize and\nprocess WAN replication events from a 4.x ACTIVE (source) cluster."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fab6fac5a8f9e7d337b79bdbc06d680f9fc540ef", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/fab6fac5a8f9e7d337b79bdbc06d680f9fc540ef", "committedDate": "2020-05-25T15:49:12Z", "message": "Add support for processing WAN replication messages from 4.x members\n\nAdds support on PASSIVE (target) cluster to be able to deserialize and\nprocess WAN replication events from a 4.x ACTIVE (source) cluster."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9339ebe8e3b855188a0f14e755253d6fd9f73886", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/9339ebe8e3b855188a0f14e755253d6fd9f73886", "committedDate": "2020-05-25T15:50:39Z", "message": "Add support for processing WAN replication messages from 4.x members\n\nAdds support on PASSIVE (target) cluster to be able to deserialize and\nprocess WAN replication events from a 4.x ACTIVE (source) cluster."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a04196c2711dca94dd0b6a21ee475209204ccf6", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/5a04196c2711dca94dd0b6a21ee475209204ccf6", "committedDate": "2020-05-25T15:50:39Z", "message": "Add support for processing WAN replication messages from 4.x members\n\nAdds support on PASSIVE (target) cluster to be able to deserialize and\nprocess WAN replication events from a 4.x ACTIVE (source) cluster."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ab1a0c9c3c3617e17d4e9fbdb2fc02b963594a6", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/3ab1a0c9c3c3617e17d4e9fbdb2fc02b963594a6", "committedDate": "2020-05-25T15:50:39Z", "message": "Add support for processing WAN replication messages from 4.x members\n\nAdds support on PASSIVE (target) cluster to be able to deserialize and\nprocess WAN replication events from a 4.x ACTIVE (source) cluster."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "604fd923555effe4ca7abc7e72a2cad1766c2819", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/604fd923555effe4ca7abc7e72a2cad1766c2819", "committedDate": "2020-05-25T15:50:39Z", "message": "Add support for processing WAN replication messages from 4.x members\n\nAdds support on PASSIVE (target) cluster to be able to deserialize and\nprocess WAN replication events from a 4.x ACTIVE (source) cluster."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f2818377b9444bd23dd75beeff894ca7354c9fe", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/5f2818377b9444bd23dd75beeff894ca7354c9fe", "committedDate": "2020-05-25T15:50:39Z", "message": "Address review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "810be1984752077dbf9cb6f7e1bc5bffe41c5976", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/810be1984752077dbf9cb6f7e1bc5bffe41c5976", "committedDate": "2020-05-25T14:57:25Z", "message": "Address review comments"}, "afterCommit": {"oid": "5f2818377b9444bd23dd75beeff894ca7354c9fe", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/5f2818377b9444bd23dd75beeff894ca7354c9fe", "committedDate": "2020-05-25T15:50:39Z", "message": "Address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3acfb22ffcd38f5072b13414d7a714ad6aba8ff6", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/3acfb22ffcd38f5072b13414d7a714ad6aba8ff6", "committedDate": "2020-05-26T07:38:55Z", "message": "Address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7546631a0a87f3c9eaa540de4ddafd749005628", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/b7546631a0a87f3c9eaa540de4ddafd749005628", "committedDate": "2020-05-26T11:57:23Z", "message": "Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "903af9c8a6e12d34256cff52d834c3e6379a5a2d", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/903af9c8a6e12d34256cff52d834c3e6379a5a2d", "committedDate": "2020-05-26T12:17:58Z", "message": "Checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93b6a3fa48094a4687651cee849ccd824df5a827", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/93b6a3fa48094a4687651cee849ccd824df5a827", "committedDate": "2020-05-26T14:12:50Z", "message": "Fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NDEwNTU2", "url": "https://github.com/hazelcast/hazelcast/pull/16972#pullrequestreview-418410556", "createdAt": "2020-05-26T15:22:26Z", "commit": {"oid": "93b6a3fa48094a4687651cee849ccd824df5a827"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNToyMjoyN1rOGajb4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjoxOTozOFrOGamGBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ5NjczOQ==", "bodyText": "minor: leftover ConcurrentHashMap\nedit: actually it originates from the original file in master", "url": "https://github.com/hazelcast/hazelcast/pull/16972#discussion_r430496739", "createdAt": "2020-05-26T15:22:27Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/LinkedHashMapStreamSerializer.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.internal.serialization.impl;\n+\n+import com.hazelcast.internal.compatibility.serialization.impl.CompatibilitySerializationConstants;\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.util.MapUtil;\n+\n+import java.io.IOException;\n+import java.util.LinkedHashMap;\n+\n+/**\n+ * The {@link LinkedHashMap} serializer\n+ * <p>\n+ * Important Note: The ConcurrentHashMap 'loadfactor' is not serialized.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93b6a3fa48094a4687651cee849ccd824df5a827"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxNzM2NQ==", "bodyText": "I think we are missing a test for this special serializer.\nSidenote: we could also use @RequiresJdk8 annotation on this class and write the body in JDK8 code directly here. OTOH, the reflection-based version will also work fine, probably it's not worth the fuss. PoC patch: https://gist.github.com/vbekiaris/df5ee6f9b6be04e2a12b4ff11bf19144 (disclaimer: I didn't actually try starting a member on JDK 6 with this patch).", "url": "https://github.com/hazelcast/hazelcast/pull/16972#discussion_r430517365", "createdAt": "2020-05-26T15:47:06Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/LinkedTransferQueueStreamSerializer.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.internal.serialization.impl;\n+\n+import com.hazelcast.core.HazelcastException;\n+import com.hazelcast.internal.compatibility.serialization.impl.CompatibilitySerializationConstants;\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.nio.ObjectDataOutput;\n+import com.hazelcast.nio.serialization.StreamSerializer;\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+\n+import java.io.IOException;\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.Method;\n+\n+/**\n+ * The {@code java.util.concurrent.LinkedTransferQueue} serializer\n+ */\n+@SuppressFBWarnings(\"REC_CATCH_EXCEPTION\")\n+public class LinkedTransferQueueStreamSerializer<E> implements StreamSerializer<Object> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93b6a3fa48094a4687651cee849ccd824df5a827"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUyODkxMg==", "bodyText": "typo: Return this node's UUID", "url": "https://github.com/hazelcast/hazelcast/pull/16972#discussion_r430528912", "createdAt": "2020-05-26T16:03:15Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/nio/IOService.java", "diffHunk": "@@ -110,9 +110,19 @@\n \n     InternalSerializationService getSerializationService();\n \n+    /**\n+     * Returns the serialization service capable of ser-de in 4.x format.\n+     */\n+    InternalSerializationService getCompatibilitySerializationService();\n+\n     MemberSocketInterceptor getSocketInterceptor(EndpointQualifier endpointQualifier);\n \n     InboundHandler[] createInboundHandlers(EndpointQualifier qualifier, TcpIpConnection connection);\n \n     OutboundHandler[] createOutboundHandlers(EndpointQualifier qualifier, TcpIpConnection connection);\n+\n+    /**\n+     * Return the current this nodes' UUID.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93b6a3fa48094a4687651cee849ccd824df5a827"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU0MDI5Mw==", "bodyText": "Maybe only exclude the client artifact when version is 4.x? Otherwise the hazelcast-client artifact will be missing from 3.12-3.11 compat tests, should we want to execute them.", "url": "https://github.com/hazelcast/hazelcast/pull/16972#discussion_r430540293", "createdAt": "2020-05-26T16:19:38Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/test/java/com/hazelcast/test/starter/HazelcastVersionLocator.java", "diffHunk": "@@ -56,14 +56,14 @@\n     }\n \n     public static File[] locateVersion(String version, File target, boolean enterprise) {\n-        File[] files = new File[enterprise ? 6 : 3];\n+        File[] files = new File[enterprise ? 4 : 2];\n         files[0] = locateMember(version, target, false);\n         files[1] = locateMemberTests(version, target, false);\n-        files[2] = locateClient(version, target, false);\n+        //files[2] = locateClient(version, target, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93b6a3fa48094a4687651cee849ccd824df5a827"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0d0d4c06c370bba7737d9fde508785887579487", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/f0d0d4c06c370bba7737d9fde508785887579487", "committedDate": "2020-05-27T06:39:11Z", "message": "Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3df55ca46b15ab19cb57a69460e49ac371d03eee", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/3df55ca46b15ab19cb57a69460e49ac371d03eee", "committedDate": "2020-05-27T11:24:35Z", "message": "Address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MTgzNTIw", "url": "https://github.com/hazelcast/hazelcast/pull/16972#pullrequestreview-419183520", "createdAt": "2020-05-27T13:04:27Z", "commit": {"oid": "3df55ca46b15ab19cb57a69460e49ac371d03eee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5NjEzMDg3", "url": "https://github.com/hazelcast/hazelcast/pull/16972#pullrequestreview-419613087", "createdAt": "2020-05-27T21:13:37Z", "commit": {"oid": "3df55ca46b15ab19cb57a69460e49ac371d03eee"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMToxMzozN1rOGbdXGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTozMToxM1rOGbd4cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0NTc4NA==", "bodyText": "\u00dcber-minor: typo in nethod.", "url": "https://github.com/hazelcast/hazelcast/pull/16972#discussion_r431445784", "createdAt": "2020-05-27T21:13:37Z", "author": {"login": "blazember"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/TreeSetStreamSerializer.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.internal.serialization.impl;\n+\n+import com.hazelcast.internal.compatibility.serialization.impl.CompatibilitySerializationConstants;\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.nio.ObjectDataOutput;\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+\n+import java.io.IOException;\n+import java.util.Comparator;\n+import java.util.Set;\n+import java.util.TreeSet;\n+\n+/**\n+ * The {@link TreeSet} serializer\n+ */\n+public class TreeSetStreamSerializer<E> extends AbstractCollectionStreamSerializer<Set<E>> {\n+\n+    @Override\n+    public int getTypeId() {\n+        return CompatibilitySerializationConstants.JAVA_DEFAULT_TYPE_TREE_SET;\n+    }\n+\n+    @Override\n+    public void destroy() {\n+\n+    }\n+\n+    @SuppressFBWarnings(value = \"BC_BAD_CAST_TO_CONCRETE_COLLECTION\",\n+            justification = \"The map is guaranteed to be of type TreeSet when this nethod is called.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3df55ca46b15ab19cb57a69460e49ac371d03eee"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ1NDMyMQ==", "bodyText": "Typo: skippped", "url": "https://github.com/hazelcast/hazelcast/pull/16972#discussion_r431454321", "createdAt": "2020-05-27T21:31:13Z", "author": {"login": "blazember"}, "path": "hazelcast/src/test/java/com/hazelcast/test/starter/HazelcastProxyFactory.java", "diffHunk": "@@ -75,6 +75,10 @@\n     // must be mapped both ways (old -> new name and vice versa) in this map\n     private static final Map<String, String> REFACTORED_INTERFACES;\n \n+    // interfaces that have been removed in the current version\n+    // and should be skippped when proxying", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3df55ca46b15ab19cb57a69460e49ac371d03eee"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d89069ebdc5db3ea90d3351c883e364cbb71bb6c", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/d89069ebdc5db3ea90d3351c883e364cbb71bb6c", "committedDate": "2020-05-28T10:12:13Z", "message": "Address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9858215194163fc3da84bff84546d2085e7f207", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/c9858215194163fc3da84bff84546d2085e7f207", "committedDate": "2020-05-28T14:17:22Z", "message": "Address review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3613, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}