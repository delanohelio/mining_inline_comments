{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2OTM1NDE2", "number": 17671, "title": "Fix race in NodeId innitialization in FlakeId proxy", "bodyText": "Fixes #16609\nReasoning:\nThe nextNodeIdUpdate timestamp was updated BEFORE the nodeId field.\nThis means when 2 threads were initializing the proxy concurrently\nthen the 2nd thread could see the timestamp already updated then skip the\nIF branch and return a stale version of nodeId - which was not updated yet.\nThis problem is fixed by updating the timestamp after the nodeId field.\nAdditionally when the IF branch is not taken we still have to dereference\nthe nodeId field. Otherwise we would return a stale value we had dereferenced\nbefore the IF branch.", "createdAt": "2020-10-02T14:15:04Z", "url": "https://github.com/hazelcast/hazelcast/pull/17671", "merged": true, "mergeCommit": {"oid": "4a069defeaf891916fc985fcb1d274ddf7974828"}, "closed": true, "closedAt": "2020-10-05T19:06:05Z", "author": {"login": "jerrinot"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOm0MxgFqTUwMTE4MjE4NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPk61ugBqjM4NDA4NjY5MjA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMTgyMTg1", "url": "https://github.com/hazelcast/hazelcast/pull/17671#pullrequestreview-501182185", "createdAt": "2020-10-02T14:25:34Z", "commit": {"oid": "17dee7c8bbbf26274a3df62f0fce0ae917ece86e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDoyNTozNFrOHbvsLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDoyNTozNFrOHbvsLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg1NDk1Ng==", "bodyText": "enforcing the contract as described in JavaDoc", "url": "https://github.com/hazelcast/hazelcast/pull/17671#discussion_r498854956", "createdAt": "2020-10-02T14:25:34Z", "author": {"login": "jerrinot"}, "path": "hazelcast/src/main/java/com/hazelcast/flakeidgen/impl/FlakeIdGeneratorProxy.java", "diffHunk": "@@ -199,7 +199,9 @@ IdBatchAndWaitTime newIdBaseLocal(long now, int nodeId, int batchSize) {\n      * </ul>\n      */\n     private int getNodeId() {\n-        return getNodeId(System.nanoTime());\n+        int nodeId = getNodeId(System.nanoTime());\n+        assert nodeId > 0 || nodeId == NODE_ID_OUT_OF_RANGE : \"getNodeId() returned invalid value\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17dee7c8bbbf26274a3df62f0fce0ae917ece86e"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxOTkzNjc3", "url": "https://github.com/hazelcast/hazelcast/pull/17671#pullrequestreview-501993677", "createdAt": "2020-10-05T12:15:14Z", "commit": {"oid": "f9d0d7753b302f3ada62984d287dc37b4f63f8f1"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMjoxNToxNVrOHcaUOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMjoxNToxNVrOHcaUOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU1MzMzNg==", "bodyText": "Your code is OK, so I'm approving. This also works, I find it easier. If you like it you can replace it:\n        long nextNodeIdUpdate = this.nextNodeIdUpdate;\n        int nodeId = this.nodeId;\n        if (nextNodeIdUpdate <= nanoTime) {\n            if (nodeId == NODE_ID_OUT_OF_RANGE) {\n                return nodeId;\n            }\n            int newNodeId = getNodeEngine().getClusterService().getMemberListJoinVersion();\n            assert newNodeId >= 0 : \"newNodeId=\" + newNodeId;\n            newNodeId += nodeIdOffset;\n            if (newNodeId != nodeId) {\n                nodeId = newNodeId;\n\n                // If our node ID is out of range, assign NODE_ID_OUT_OF_RANGE to nodeId\n                if ((nodeId & -1 << bitsNodeId) != 0) {\n                    outOfRangeMembers.add(getNodeEngine().getClusterService().getLocalMember().getUuid());\n                    logger.severe(\"Node ID is out of range (\" + nodeId + \"), this member won't be able to generate IDs. \"\n                            + \"Cluster restart is recommended.\");\n                    nodeId = NODE_ID_OUT_OF_RANGE;\n                }\n\n                // we ignore possible double initialization\n                this.nodeId = nodeId;\n                this.nextNodeIdUpdate = nanoTime + NODE_ID_UPDATE_INTERVAL_NS;\n                if (logger.isFineEnabled()) {\n                    logger.fine(\"Node ID assigned to '\" + name + \"': \" + nodeId);\n                }\n            }\n        }\nIt ensures that it's impossible to see no need to update before nodeId was assigned to some valid value.", "url": "https://github.com/hazelcast/hazelcast/pull/17671#discussion_r499553336", "createdAt": "2020-10-05T12:15:15Z", "author": {"login": "viliam-durina"}, "path": "hazelcast/src/main/java/com/hazelcast/flakeidgen/impl/FlakeIdGeneratorProxy.java", "diffHunk": "@@ -226,10 +227,18 @@ int getNodeId(long nanoTime) {\n \n                 // we ignore possible double initialization\n                 this.nodeId = nodeId;\n+                nextNodeIdUpdate = nanoTime + NODE_ID_UPDATE_INTERVAL_NS;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9d0d7753b302f3ada62984d287dc37b4f63f8f1"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxOTk2ODIw", "url": "https://github.com/hazelcast/hazelcast/pull/17671#pullrequestreview-501996820", "createdAt": "2020-10-05T12:19:33Z", "commit": {"oid": "f9d0d7753b302f3ada62984d287dc37b4f63f8f1"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMjoxOTozM1rOHcadAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMjoxOTozM1rOHcadAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU1NTU4NA==", "bodyText": "Minor: did you want to say \"It could be that we did take the branch, yet the local nodeId variable is set to NODE_ID_NOT_YET_SET\"? I must admit, I know what you did with the else branch but I don't understand the comment :)", "url": "https://github.com/hazelcast/hazelcast/pull/17671#discussion_r499555584", "createdAt": "2020-10-05T12:19:33Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/flakeidgen/impl/FlakeIdGeneratorProxy.java", "diffHunk": "@@ -226,10 +227,18 @@ int getNodeId(long nanoTime) {\n \n                 // we ignore possible double initialization\n                 this.nodeId = nodeId;\n+                nextNodeIdUpdate = nanoTime + NODE_ID_UPDATE_INTERVAL_NS;\n                 if (logger.isFineEnabled()) {\n                     logger.fine(\"Node ID assigned to '\" + name + \"': \" + nodeId);\n                 }\n             }\n+        } else if (nodeId == NODE_ID_NOT_YET_SET) {\n+            // There is a race between the IF branch above and the local nodeId assignment just above the branch.\n+            // It could be we didn't take the branch yet the local nodeId variable still contains the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9d0d7753b302f3ada62984d287dc37b4f63f8f1"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48086359e34e72c396d9e320f83fd04e81906384", "author": {"user": {"login": "jerrinot", "name": "Jaromir Hamala"}}, "url": "https://github.com/hazelcast/hazelcast/commit/48086359e34e72c396d9e320f83fd04e81906384", "committedDate": "2020-10-05T14:46:18Z", "message": "Fix race in NodeId innitialization in FlakeId proxy\n\nFixes #16609\n\nReasoning:\nThe `nextNodeIdUpdate` timestamp was updated BEFORE the `nodeId` field.\nThis means when 2 threads were initializing the proxy concurrently\nthen the 2nd thread could see the timestamp already updated then skip the\nIF branch and return a stale version of nodeId - which was not updated yet.\n\nThis problem is fixed by updating the timestamp after the nodeId field."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f9d0d7753b302f3ada62984d287dc37b4f63f8f1", "author": {"user": {"login": "jerrinot", "name": "Jaromir Hamala"}}, "url": "https://github.com/hazelcast/hazelcast/commit/f9d0d7753b302f3ada62984d287dc37b4f63f8f1", "committedDate": "2020-10-02T14:26:31Z", "message": "Improve assertion"}, "afterCommit": {"oid": "48086359e34e72c396d9e320f83fd04e81906384", "author": {"user": {"login": "jerrinot", "name": "Jaromir Hamala"}}, "url": "https://github.com/hazelcast/hazelcast/commit/48086359e34e72c396d9e320f83fd04e81906384", "committedDate": "2020-10-05T14:46:18Z", "message": "Fix race in NodeId innitialization in FlakeId proxy\n\nFixes #16609\n\nReasoning:\nThe `nextNodeIdUpdate` timestamp was updated BEFORE the `nodeId` field.\nThis means when 2 threads were initializing the proxy concurrently\nthen the 2nd thread could see the timestamp already updated then skip the\nIF branch and return a stale version of nodeId - which was not updated yet.\n\nThis problem is fixed by updating the timestamp after the nodeId field."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3224, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}