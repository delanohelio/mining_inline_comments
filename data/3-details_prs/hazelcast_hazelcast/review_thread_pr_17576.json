{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MTIzMzAy", "number": 17576, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODo1MzozMVrOEl_JQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODo1MzozMVrOEl_JQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjY3MzMwOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/test/java/usercodedeployment/DomainClassWithInnerClass.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODo1MzozMVrOHVwYqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODo1MzozMVrOHVwYqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU3NDg4OQ==", "bodyText": "nit: redundant new line", "url": "https://github.com/hazelcast/hazelcast/pull/17576#discussion_r492574889", "createdAt": "2020-09-22T08:53:31Z", "author": {"login": "puzpuzpuz"}, "path": "hazelcast/src/test/java/usercodedeployment/DomainClassWithInnerClass.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package usercodedeployment;\n+\n+import java.io.Serializable;\n+\n+public class DomainClassWithInnerClass implements Serializable {\n+\n+    public final InnerClass innerObject;\n+\n+    public DomainClassWithInnerClass(InnerClass enumVal) {\n+        this.innerObject = enumVal;\n+    }\n+\n+    public static class InnerClass implements Serializable {\n+        public final int value;\n+\n+        public InnerClass(int value) {\n+            this.value = value;\n+        }\n+    }\n+\n+}\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d46d474974dbcad2f9d0c8ed3768f58a90480b78"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 252, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}