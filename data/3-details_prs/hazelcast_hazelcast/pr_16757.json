{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MjUxNTk0", "number": 16757, "title": "Add missing onCommitSuccess/onCommitFailure to XATransaction ", "bodyText": "addressed this comment: https://github.com/hazelcast/hazelcast/pull/16581/files#r391776655", "createdAt": "2020-03-16T13:54:49Z", "url": "https://github.com/hazelcast/hazelcast/pull/16757", "merged": true, "mergeCommit": {"oid": "acaf007a0d7c15e1b1e5120e98420be335aa3435"}, "closed": true, "closedAt": "2020-03-24T08:16:59Z", "author": {"login": "ahmetmircik"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOOe4_AH2gAyMzg5MjUxNTk0OmQ1M2M0NDg3MmM2ODFhZDQyM2IyZmRlNzhkZTdmM2U4MzU4MjY4ZGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQgguxgFqTM3OTU3NDQ1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d53c44872c681ad423b2fde78de7f3e8358268db", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/d53c44872c681ad423b2fde78de7f3e8358268db", "committedDate": "2020-03-16T13:53:26Z", "message": "Add missing onCommitSuccess/onCommitFailure to XATransaction"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1ODI0MDMx", "url": "https://github.com/hazelcast/hazelcast/pull/16757#pullrequestreview-375824031", "createdAt": "2020-03-17T08:29:21Z", "commit": {"oid": "d53c44872c681ad423b2fde78de7f3e8358268db"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "252f51ec9a4174276c7f97f705261e940469a0ff", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/252f51ec9a4174276c7f97f705261e940469a0ff", "committedDate": "2020-03-20T10:04:35Z", "message": "add xa near caching test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6e4688db2d521dca6ba65eb948dee0952657ac59", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/6e4688db2d521dca6ba65eb948dee0952657ac59", "committedDate": "2020-03-20T08:56:49Z", "message": "add xa near caching test"}, "afterCommit": {"oid": "252f51ec9a4174276c7f97f705261e940469a0ff", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/252f51ec9a4174276c7f97f705261e940469a0ff", "committedDate": "2020-03-20T10:04:35Z", "message": "add xa near caching test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4Mzc3Nzgx", "url": "https://github.com/hazelcast/hazelcast/pull/16757#pullrequestreview-378377781", "createdAt": "2020-03-20T10:41:16Z", "commit": {"oid": "252f51ec9a4174276c7f97f705261e940469a0ff"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89cec92505d722cd76d43b4a0de65024bb0b8b67", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/89cec92505d722cd76d43b4a0de65024bb0b8b67", "committedDate": "2020-03-20T10:42:48Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NTU2MTE1", "url": "https://github.com/hazelcast/hazelcast/pull/16757#pullrequestreview-379556115", "createdAt": "2020-03-23T15:43:28Z", "commit": {"oid": "89cec92505d722cd76d43b4a0de65024bb0b8b67"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNTo0MzoyOFrOF6LdNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNTo0MzoyOFrOF6LdNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU0OTQzMQ==", "bodyText": "Shall we fail the test here?", "url": "https://github.com/hazelcast/hazelcast/pull/16757#discussion_r396549431", "createdAt": "2020-03-23T15:43:28Z", "author": {"login": "petrpleshachkov"}, "path": "hazelcast/src/test/java/com/hazelcast/xa/NearCacheXATest.java", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Copyright (c) 2008-2018, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.xa;\n+\n+import com.atomikos.icatch.jta.UserTransactionManager;\n+import com.hazelcast.config.Config;\n+import com.hazelcast.config.InMemoryFormat;\n+import com.hazelcast.config.MapConfig;\n+import com.hazelcast.config.NearCacheConfig;\n+import com.hazelcast.core.HazelcastInstance;\n+import com.hazelcast.core.IMap;\n+import com.hazelcast.core.TransactionalMap;\n+import com.hazelcast.test.HazelcastSerialParametersRunnerFactory;\n+import com.hazelcast.test.HazelcastTestSupport;\n+import com.hazelcast.test.annotation.QuickTest;\n+import com.hazelcast.transaction.HazelcastXAResource;\n+import com.hazelcast.transaction.TransactionContext;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+import javax.transaction.Transaction;\n+import javax.transaction.xa.XAResource;\n+import java.io.File;\n+import java.io.FilenameFilter;\n+import java.util.Collection;\n+\n+import static java.util.Arrays.asList;\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(Parameterized.class)\n+@Parameterized.UseParametersRunnerFactory(HazelcastSerialParametersRunnerFactory.class)\n+@Category(QuickTest.class)\n+public class NearCacheXATest extends HazelcastTestSupport {\n+\n+    @Parameterized.Parameters(name = \"format:{0} serializeKeys:{1}\")\n+    public static Collection<Object[]> parameters() {\n+        return asList(new Object[][]{\n+                {InMemoryFormat.BINARY, true},\n+                {InMemoryFormat.BINARY, false},\n+                {InMemoryFormat.OBJECT, true},\n+                {InMemoryFormat.OBJECT, false},\n+        });\n+    }\n+\n+    @Parameterized.Parameter\n+    public InMemoryFormat inMemoryFormat;\n+\n+    @Parameterized.Parameter(value = 1)\n+    public boolean serializeKeys;\n+\n+\n+    private UserTransactionManager tm;\n+\n+    public void cleanAtomikosLogs() {\n+        try {\n+            File currentDir = new File(\".\");\n+            final File[] tmLogs = currentDir.listFiles(new FilenameFilter() {\n+                @Override\n+                public boolean accept(File dir, String name) {\n+                    return name.endsWith(\".epoch\") || name.startsWith(\"tmlog\");\n+                }\n+            });\n+            for (File tmLog : tmLogs) {\n+                tmLog.delete();\n+            }\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    @Before\n+    public void setUp() throws Exception {\n+        cleanAtomikosLogs();\n+        tm = new UserTransactionManager();\n+        tm.setTransactionTimeout(60);\n+    }\n+\n+    @After\n+    public void tearDown() throws Exception {\n+        tm.close();\n+        cleanAtomikosLogs();\n+    }\n+\n+    @Test\n+    public void after_txn_commit_near_cache_should_be_invalidated() throws Exception {\n+        Config cfg = getConfig();\n+        String mapName = \"cache\";\n+        MapConfig cacheConfig = cfg.getMapConfig(mapName);\n+        NearCacheConfig nearCacheConfig = new NearCacheConfig();\n+        nearCacheConfig.setInvalidateOnChange(true)\n+                .setCacheLocalEntries(true)\n+                .setInMemoryFormat(inMemoryFormat)\n+                .setSerializeKeys(serializeKeys);\n+\n+        cacheConfig.setNearCacheConfig(nearCacheConfig);\n+\n+        HazelcastInstance server = createHazelcastInstance(cfg);\n+        IMap map = server.getMap(mapName);\n+\n+        String key = \"key\";\n+        String oldValue = \"oldValue\";\n+        String updatedValue = \"updatedValue\";\n+\n+        // populate imap\n+        map.put(key, oldValue);\n+\n+        // populate near cache\n+        Object valueReadBeforeTxnFromNonTxnMap = map.get(key);\n+\n+        HazelcastXAResource xaResource = server.getXAResource();\n+\n+        // begin txn\n+        tm.begin();\n+        Object valueReadInsideTxnFromTxnMapBeforeUpdate = null;\n+        Object valueReadInsideTxnFromTxnMapAfterUpdate = null;\n+        Object valueReadInsideTxnFromNonTxnMapAfterUpdate = null;\n+        boolean error = false;\n+        try {\n+            Transaction transaction = tm.getTransaction();\n+            transaction.enlistResource(xaResource);\n+            TransactionContext ctx = xaResource.getTransactionContext();\n+\n+            TransactionalMap txnMap = ctx.getMap(mapName);\n+            valueReadInsideTxnFromTxnMapBeforeUpdate = txnMap.get(key);\n+\n+            txnMap.put(key, updatedValue);\n+\n+            valueReadInsideTxnFromTxnMapAfterUpdate = txnMap.get(key);\n+            valueReadInsideTxnFromNonTxnMapAfterUpdate = map.get(key);\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+            error = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89cec92505d722cd76d43b4a0de65024bb0b8b67"}, "originalPosition": 150}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08107059533723fbc12753639e1818b55f194950", "author": {"user": {"login": "ahmetmircik", "name": "Ahmet Mircik"}}, "url": "https://github.com/hazelcast/hazelcast/commit/08107059533723fbc12753639e1818b55f194950", "committedDate": "2020-03-23T15:54:04Z", "message": "address review comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NTc0NDUy", "url": "https://github.com/hazelcast/hazelcast/pull/16757#pullrequestreview-379574452", "createdAt": "2020-03-23T16:01:35Z", "commit": {"oid": "08107059533723fbc12753639e1818b55f194950"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3880, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}