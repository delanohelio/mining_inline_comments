{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxMDk1NDEw", "number": 17600, "title": "Added support for IMap.replaceAll() #14913", "bodyText": "Closes: #14913", "createdAt": "2020-09-22T17:40:40Z", "url": "https://github.com/hazelcast/hazelcast/pull/17600", "merged": true, "mergeCommit": {"oid": "33eccfad94614ac489055f249382fdb8aba6f86a"}, "closed": true, "closedAt": "2020-09-25T12:40:58Z", "author": {"login": "webashutosh"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLbmrQgH2gAyNDkxMDk1NDEwOjQwNmY2YjljMmZiNWEwYmY5NWQ2MDE5Mjk4NTdhZjcxYWExMTViZTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMT7u5AFqTQ5NjMzMDE3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "406f6b9c2fb5a0bf95d601929857af71aa115be0", "author": {"user": {"login": "webashutosh", "name": "Ashutosh Agrawal"}}, "url": "https://github.com/hazelcast/hazelcast/commit/406f6b9c2fb5a0bf95d601929857af71aa115be0", "committedDate": "2020-09-22T17:40:05Z", "message": "Added support for IMap.replaceAll() #14913"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NDQ2MDU4", "url": "https://github.com/hazelcast/hazelcast/pull/17600#pullrequestreview-494446058", "createdAt": "2020-09-23T08:58:20Z", "commit": {"oid": "406f6b9c2fb5a0bf95d601929857af71aa115be0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwODo1ODoyMFrOHWe6AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwODo1ODoyMFrOHWe6AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzMzNzA4OA==", "bodyText": "I think we should simply not override this method to execute the same on the backup replicas.", "url": "https://github.com/hazelcast/hazelcast/pull/17600#discussion_r493337088", "createdAt": "2020-09-23T08:58:20Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/map/impl/MapEntryReplacingEntryProcessor.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.map.impl;\n+\n+import com.hazelcast.map.EntryProcessor;\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.nio.ObjectDataOutput;\n+import com.hazelcast.nio.serialization.IdentifiedDataSerializable;\n+\n+import javax.annotation.Nullable;\n+import java.io.IOException;\n+import java.util.Map;\n+import java.util.function.BiFunction;\n+\n+public class MapEntryReplacingEntryProcessor<K, V> implements EntryProcessor<K, V, V>, IdentifiedDataSerializable {\n+\n+    BiFunction<? super K, ? super V, ? extends V> function;\n+\n+    public MapEntryReplacingEntryProcessor() {\n+    }\n+\n+    public MapEntryReplacingEntryProcessor(BiFunction<? super K, ? super V, ? extends V> function) {\n+        this.function = function;\n+    }\n+\n+    @Override\n+    public V process(Map.Entry<K, V> entry) {\n+        V newValue = function.apply(entry.getKey(), entry.getValue());\n+        entry.setValue(newValue);\n+        return null;\n+    }\n+\n+    @Override\n+    public int getFactoryId() {\n+        return MapDataSerializerHook.F_ID;\n+    }\n+\n+    @Override\n+    public int getClassId() {\n+        return MapDataSerializerHook.MAP_ENTRY_REPLACING_PROCESSOR;\n+    }\n+\n+    @Override\n+    public void writeData(ObjectDataOutput out) throws IOException {\n+        out.writeObject(function);\n+    }\n+\n+    @Override\n+    public void readData(ObjectDataInput in) throws IOException {\n+        function = in.readObject();\n+    }\n+\n+    @Nullable\n+    @Override\n+    public EntryProcessor<K, V, V> getBackupProcessor() {\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "406f6b9c2fb5a0bf95d601929857af71aa115be0"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c32c8cbbdbf53de42024f389500499338e72a43", "author": {"user": {"login": "webashutosh", "name": "Ashutosh Agrawal"}}, "url": "https://github.com/hazelcast/hazelcast/commit/5c32c8cbbdbf53de42024f389500499338e72a43", "committedDate": "2020-09-23T09:44:01Z", "message": "Removed backup processor #14913"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NDg5Mjc5", "url": "https://github.com/hazelcast/hazelcast/pull/17600#pullrequestreview-494489279", "createdAt": "2020-09-23T09:51:26Z", "commit": {"oid": "5c32c8cbbdbf53de42024f389500499338e72a43"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2Mjk4Njg1", "url": "https://github.com/hazelcast/hazelcast/pull/17600#pullrequestreview-496298685", "createdAt": "2020-09-25T10:26:09Z", "commit": {"oid": "5c32c8cbbdbf53de42024f389500499338e72a43"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2MzMwMTcw", "url": "https://github.com/hazelcast/hazelcast/pull/17600#pullrequestreview-496330170", "createdAt": "2020-09-25T11:17:46Z", "commit": {"oid": "5c32c8cbbdbf53de42024f389500499338e72a43"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3345, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}