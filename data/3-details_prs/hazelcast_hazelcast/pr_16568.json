{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3OTg5NTE1", "number": 16568, "title": "Null support for InPredicate", "bodyText": "Fixes: #15100", "createdAt": "2020-01-28T12:36:12Z", "url": "https://github.com/hazelcast/hazelcast/pull/16568", "merged": true, "mergeCommit": {"oid": "ad4fbb086eacc5fd0f4e1c9eca7be82f3b04b522"}, "closed": true, "closedAt": "2020-01-30T10:39:12Z", "author": {"login": "taburet"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_Dq5uAH2gAyMzY3OTg5NTE1OmQ1M2IxYzYyZjI4NjU4NWE2NzY0NmU2ODNjMGNiMDEzNjg5NjRmNTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_XenggH2gAyMzY3OTg5NTE1OmJhOGQxNzVhODQ0MDgyZjZjYTQwYzhjNDM5MWU4Y2FmMTU2YmI1NGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d53b1c62f286585a67646e683c0cb01368964f53", "author": {"user": {"login": "taburet", "name": "Sergey Sitnikov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/d53b1c62f286585a67646e683c0cb01368964f53", "committedDate": "2020-01-29T10:48:44Z", "message": "Support nulls for InPredicate\n\nFixes: https://github.com/hazelcast/hazelcast/issues/15100"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6357173cf8965dcb7bb9bb7a1b6232e974f2b365", "author": {"user": {"login": "taburet", "name": "Sergey Sitnikov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/6357173cf8965dcb7bb9bb7a1b6232e974f2b365", "committedDate": "2020-01-29T10:48:44Z", "message": "make checkstyle happy"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dee9bd19ee650ed119f8b6742d22b42919c5ddfe", "author": {"user": {"login": "taburet", "name": "Sergey Sitnikov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/dee9bd19ee650ed119f8b6742d22b42919c5ddfe", "committedDate": "2020-01-28T12:42:35Z", "message": "make checkstyle happy"}, "afterCommit": {"oid": "6357173cf8965dcb7bb9bb7a1b6232e974f2b365", "author": {"user": {"login": "taburet", "name": "Sergey Sitnikov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/6357173cf8965dcb7bb9bb7a1b6232e974f2b365", "committedDate": "2020-01-29T10:48:44Z", "message": "make checkstyle happy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMDUxNDM1", "url": "https://github.com/hazelcast/hazelcast/pull/16568#pullrequestreview-350051435", "createdAt": "2020-01-29T11:56:11Z", "commit": {"oid": "d53b1c62f286585a67646e683c0cb01368964f53"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMTo1NjoxMVrOFjF28g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMTo1NjoxMVrOFjF28g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM0MDQ2Ng==", "bodyText": "What if an IN (null) predicate is applied to a sequences of attribute values, where the first one is non-null and the second is null? The first call will result in initialising set which will cause the second iteration to use set.contains() - shouldn't it use isNull() for null items in the set?", "url": "https://github.com/hazelcast/hazelcast/pull/16568#discussion_r372340466", "createdAt": "2020-01-29T11:56:11Z", "author": {"login": "vojtechtoman"}, "path": "hazelcast/src/main/java/com/hazelcast/query/impl/predicates/InPredicate.java", "diffHunk": "@@ -68,11 +69,23 @@ public Predicate accept(Visitor visitor, Indexes indexes) {\n \n     @Override\n     protected boolean applyForSingleAttributeValue(Comparable attributeValue) {\n-        if (attributeValue == null) {\n+        Set<Comparable> set = convertedInValues;\n+\n+        if (attributeValue == null && set == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d53b1c62f286585a67646e683c0cb01368964f53"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c9f5a38e71587f5dcf1d1bdd0779932da92e753", "author": {"user": {"login": "taburet", "name": "Sergey Sitnikov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/8c9f5a38e71587f5dcf1d1bdd0779932da92e753", "committedDate": "2020-01-29T13:33:53Z", "message": "normalize nulls"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "514360e39f2303f42b4e77928f9c738edf08b32b", "author": {"user": {"login": "taburet", "name": "Sergey Sitnikov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/514360e39f2303f42b4e77928f9c738edf08b32b", "committedDate": "2020-01-29T13:44:41Z", "message": "remove unused import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNjAxMzQ2", "url": "https://github.com/hazelcast/hazelcast/pull/16568#pullrequestreview-350601346", "createdAt": "2020-01-30T06:19:52Z", "commit": {"oid": "514360e39f2303f42b4e77928f9c738edf08b32b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwNjoxOTo1M1rOFjga5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwNjoxOTo1M1rOFjga5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjc3NTY1Mw==", "bodyText": "MInor comment: the presence of null values could be cached in a separate Boolean variable so that \"brute force\" is needed at most once.", "url": "https://github.com/hazelcast/hazelcast/pull/16568#discussion_r372775653", "createdAt": "2020-01-30T06:19:53Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/query/impl/predicates/InPredicate.java", "diffHunk": "@@ -68,15 +69,32 @@ public Predicate accept(Visitor visitor, Indexes indexes) {\n \n     @Override\n     protected boolean applyForSingleAttributeValue(Comparable attributeValue) {\n-        if (attributeValue == null) {\n+        Set<Comparable> set = convertedInValues;\n+\n+        if (attributeValue == null && set == null) {\n+            // Conversion of the values given to the predicate is possible only\n+            // if the passed attribute value is non-null, otherwise we are\n+            // unable to infer a proper converter. Postpone the conversion and\n+            // do a brute-force comparison.\n+\n+            for (Comparable value : values) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "514360e39f2303f42b4e77928f9c738edf08b32b"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNjcwODkw", "url": "https://github.com/hazelcast/hazelcast/pull/16568#pullrequestreview-350670890", "createdAt": "2020-01-30T09:12:11Z", "commit": {"oid": "514360e39f2303f42b4e77928f9c738edf08b32b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba8d175a844082f6ca40c8c4391e8caf156bb54d", "author": {"user": {"login": "taburet", "name": "Sergey Sitnikov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/ba8d175a844082f6ca40c8c4391e8caf156bb54d", "committedDate": "2020-01-30T09:53:25Z", "message": "optimize null comparison"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3939, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}