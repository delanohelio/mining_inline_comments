{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNDY3NDI0", "number": 16617, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMjozMzo1NVrODeb7OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMjozMzo1NVrODeb7OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjQxNDAwOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/internal/nearcache/NearCachingHook.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMjozMzo1NVrOFnkaew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMjozMzo1NVrOFnkaew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzAzNTM4Nw==", "bodyText": "Minor, no new line as in other methods?", "url": "https://github.com/hazelcast/hazelcast/pull/16617#discussion_r377035387", "createdAt": "2020-02-10T12:33:55Z", "author": {"login": "petrpleshachkov"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/nearcache/NearCachingHook.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2008-2018, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.internal.nearcache;\n+\n+\n+import com.hazelcast.nio.serialization.Data;\n+\n+/**\n+ * Hook to be used by near cache enabled proxy objects.\n+ *\n+ * With this hook, you can implement needed logic\n+ * for truly invalidate/populate local near cache.\n+ */\n+public interface NearCachingHook<K, V> {\n+\n+    NearCachingHook EMPTY_HOOK = new NearCachingHook() {\n+\n+        @Override\n+        public void beforeRemoteCall(Object key, Data keyData,\n+                                     Object value, Data valueData) {\n+        }\n+\n+        @Override\n+        public void onRemoteCallSuccess() {\n+        }\n+\n+        @Override\n+        public void onRemoteCallFailure() {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47ca45ac96a9d28f93599e25d0a1105c339814d9"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 813, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}