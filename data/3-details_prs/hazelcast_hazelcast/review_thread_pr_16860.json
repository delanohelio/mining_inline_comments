{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMzAwNjc4", "number": 16860, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QwOToxNjoxOVrODxMB1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QwOToxNjoxOVrODxMB1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyOTAzODkyOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/config/security/LdapAuthenticationConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QwOToxNjoxOVrOGEhUiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzoyNTozM1rOGF5iEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzM5MzQxNg==", "bodyText": "Why do we print a secret systemUserPassword here?", "url": "https://github.com/hazelcast/hazelcast/pull/16860#discussion_r407393416", "createdAt": "2020-04-13T09:16:19Z", "author": {"login": "galibey"}, "path": "hazelcast/src/main/java/com/hazelcast/config/security/LdapAuthenticationConfig.java", "diffHunk": "@@ -228,85 +232,85 @@ public LdapAuthenticationConfig setUserSearchScope(LdapSearchScope userSearchSco\n         setIfConfigured(props, \"roleSearchScope\", roleSearchScope);\n         setIfConfigured(props, \"userNameAttribute\", userNameAttribute);\n \n-        if (useSystemUser) {\n+        if (!isNullOrEmpty(systemUserDn)) {\n             props.setProperty(Context.SECURITY_AUTHENTICATION, \"simple\");\n             props.setProperty(Context.SECURITY_PRINCIPAL, systemUserDn);\n             setIfConfigured(props, Context.SECURITY_CREDENTIALS, systemUserPassword);\n             setIfConfigured(props, \"passwordAttribute\", passwordAttribute);\n             setIfConfigured(props, \"userContext\", userContext);\n             setIfConfigured(props, \"userFilter\", userFilter);\n             setIfConfigured(props, \"userSearchScope\", userSearchScope);\n+            setIfConfigured(props, \"skipAuthentication\", skipAuthentication);\n         }\n+        return props;\n+    }\n+\n+    @Override\n+    public LoginModuleConfig[] asLoginModuleConfigs() {\n+        boolean useSystemUser = !isNullOrEmpty(systemUserDn);\n+        LoginModuleConfig loginModuleConfig = new LoginModuleConfig(\n+                useSystemUser ? \"com.hazelcast.security.loginimpl.LdapLoginModule\"\n+                        : \"com.hazelcast.security.loginimpl.BasicLdapLoginModule\",\n+                LoginModuleUsage.REQUIRED);\n+\n+        loginModuleConfig.setProperties(initLoginModuleProperties());\n \n         return new LoginModuleConfig[] { loginModuleConfig };\n     }\n \n     @Override\n     public String toString() {\n-        return \"LdapAuthenticationConfig [url=\" + url + \", socketFactoryClassName=\" + socketFactoryClassName + \", systemUserDN=\"\n-                + systemUserDn + \", systemUserPassword=***, parseDN=\" + parseDn + \", roleContext=\"\n+        return \"LdapAuthenticationConfig [url=\" + url + \", socketFactoryClassName=\" + socketFactoryClassName + \", systemUserDn=\"\n+                + systemUserDn + \", systemUserPassword=\" + systemUserPassword + \", parseDn=\" + parseDn + \", roleContext=\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da25d9967f286683a4254c5db89e1ea09da4ef31"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODgzODY3NQ==", "bodyText": "Nice catch. I'll fix it. It was caused by regenerating the toString method in the Eclipse IDE.", "url": "https://github.com/hazelcast/hazelcast/pull/16860#discussion_r408838675", "createdAt": "2020-04-15T13:25:33Z", "author": {"login": "kwart"}, "path": "hazelcast/src/main/java/com/hazelcast/config/security/LdapAuthenticationConfig.java", "diffHunk": "@@ -228,85 +232,85 @@ public LdapAuthenticationConfig setUserSearchScope(LdapSearchScope userSearchSco\n         setIfConfigured(props, \"roleSearchScope\", roleSearchScope);\n         setIfConfigured(props, \"userNameAttribute\", userNameAttribute);\n \n-        if (useSystemUser) {\n+        if (!isNullOrEmpty(systemUserDn)) {\n             props.setProperty(Context.SECURITY_AUTHENTICATION, \"simple\");\n             props.setProperty(Context.SECURITY_PRINCIPAL, systemUserDn);\n             setIfConfigured(props, Context.SECURITY_CREDENTIALS, systemUserPassword);\n             setIfConfigured(props, \"passwordAttribute\", passwordAttribute);\n             setIfConfigured(props, \"userContext\", userContext);\n             setIfConfigured(props, \"userFilter\", userFilter);\n             setIfConfigured(props, \"userSearchScope\", userSearchScope);\n+            setIfConfigured(props, \"skipAuthentication\", skipAuthentication);\n         }\n+        return props;\n+    }\n+\n+    @Override\n+    public LoginModuleConfig[] asLoginModuleConfigs() {\n+        boolean useSystemUser = !isNullOrEmpty(systemUserDn);\n+        LoginModuleConfig loginModuleConfig = new LoginModuleConfig(\n+                useSystemUser ? \"com.hazelcast.security.loginimpl.LdapLoginModule\"\n+                        : \"com.hazelcast.security.loginimpl.BasicLdapLoginModule\",\n+                LoginModuleUsage.REQUIRED);\n+\n+        loginModuleConfig.setProperties(initLoginModuleProperties());\n \n         return new LoginModuleConfig[] { loginModuleConfig };\n     }\n \n     @Override\n     public String toString() {\n-        return \"LdapAuthenticationConfig [url=\" + url + \", socketFactoryClassName=\" + socketFactoryClassName + \", systemUserDN=\"\n-                + systemUserDn + \", systemUserPassword=***, parseDN=\" + parseDn + \", roleContext=\"\n+        return \"LdapAuthenticationConfig [url=\" + url + \", socketFactoryClassName=\" + socketFactoryClassName + \", systemUserDn=\"\n+                + systemUserDn + \", systemUserPassword=\" + systemUserPassword + \", parseDn=\" + parseDn + \", roleContext=\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzM5MzQxNg=="}, "originalCommit": {"oid": "da25d9967f286683a4254c5db89e1ea09da4ef31"}, "originalPosition": 80}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 635, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}