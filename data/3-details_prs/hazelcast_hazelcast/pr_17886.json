{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2MzkwNDk5", "number": 17886, "title": "Implement IMap.entrySet() on a PartitionIdSet ", "bodyText": "This feature is needed for Jet SQL to implement joins. The actual partition ID set will contain local partitions, but we don't want to use localEntrySet(), because after migration we want to continue working with some remote partitions, until the job is restarted. Also, there's no localEntrySet()...", "createdAt": "2020-11-24T10:53:36Z", "url": "https://github.com/hazelcast/hazelcast/pull/17886", "merged": true, "mergeCommit": {"oid": "5ebc51cf0108d65bd47ca0d9c3113c46d62f1b1e"}, "closed": true, "closedAt": "2020-12-04T13:44:19Z", "author": {"login": "viliam-durina"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfnfCOgH2gAyNTI2MzkwNDk5OjlhMTk3OGM0MTA0OTFlNTQ5MzExNjhlOWRkM2VkZGYxZDFlZDJlNzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdi0z52gH2gAyNTI2MzkwNDk5OmM1NWMwNDc5ZDhiYzExZGRjMjQwZjIyYzgzMGViNmU2ZjM4NTZjMDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9a1978c410491e54931168e9dd3eddf1d1ed2e75", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/9a1978c410491e54931168e9dd3eddf1d1ed2e75", "committedDate": "2020-11-24T10:49:05Z", "message": "Add entrySet(predicate, partitionIdSet)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fce9919d80bbfd2d54d30004b926e87a0b45e0f9", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/fce9919d80bbfd2d54d30004b926e87a0b45e0f9", "committedDate": "2020-11-24T12:59:06Z", "message": "Avoid the expensive PartitionIdSet.size() operation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2faff9f07bcb152cc8e16e63f7ccccb166c6cff", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/b2faff9f07bcb152cc8e16e63f7ccccb166c6cff", "committedDate": "2020-11-24T13:06:32Z", "message": "Fix test failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f0a26f5c2ac7a780ada474a224ef7b21d6dd0d3", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/1f0a26f5c2ac7a780ada474a224ef7b21d6dd0d3", "committedDate": "2020-11-25T13:43:17Z", "message": "Send operation only to members owning some partition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2772d450efd6206ffe2e773cbd120772d95a5ab3", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/2772d450efd6206ffe2e773cbd120772d95a5ab3", "committedDate": "2020-11-25T13:59:39Z", "message": "Fix PartitionPredicate\n\nFixes #17882"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "300da13c7f4980f0e2448c94515ab7392f5ae463", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/300da13c7f4980f0e2448c94515ab7392f5ae463", "committedDate": "2020-11-25T14:10:17Z", "message": "Simplify tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cda1aa1ce664919f3bb3090563808cc3bc531a08", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/cda1aa1ce664919f3bb3090563808cc3bc531a08", "committedDate": "2020-11-25T14:20:50Z", "message": "Add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "327e730cefefacdb24ad727acf1595438757fe35", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/327e730cefefacdb24ad727acf1595438757fe35", "committedDate": "2020-11-25T16:52:18Z", "message": "Fix generateKeyForPartition for client instance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60cc3dc9b80b4bf846e9ea919916ecd65a8f97ba", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/60cc3dc9b80b4bf846e9ea919916ecd65a8f97ba", "committedDate": "2020-11-25T16:52:31Z", "message": "Fix test failures"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MzAxMjk2", "url": "https://github.com/hazelcast/hazelcast/pull/17886#pullrequestreview-539301296", "createdAt": "2020-11-26T13:10:17Z", "commit": {"oid": "60cc3dc9b80b4bf846e9ea919916ecd65a8f97ba"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMzoxMDoxN1rOH6azXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMzoxMDoxN1rOH6azXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTAxODU4OA==", "bodyText": "Changing the serialized form of a class in a patch release will break patch-level-compatibility: 4.1.1 will not be able to participate in the same cluster as 4.1 member. The class evolution support we have for rolling upgrades doesn't help much here, because it is geared towards minor-version compatibility.\nIn terms of serialization, it would be probably ok to start with the same format (1 int, 1 UTF field), then append the partitions object. This way, a 4.1 receiver will just ignore whatever is past the 2 fields it is already aware of, and not throw a serialization exception. The other way around, a 4.1.1 receiver of a Target from a 4.1 member can try to read the partitions object after the UTF field and expect an exception (assuming then that it was sent from a 4.1 member). However this only solves the \"do not throw a serialization exception\" part of the problem. The semantics of deserialized object would be the real challenge to solve. Is there any way to avoid changing Target's serialized form?", "url": "https://github.com/hazelcast/hazelcast/pull/17886#discussion_r531018588", "createdAt": "2020-11-26T13:10:17Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/map/impl/query/Target.java", "diffHunk": "@@ -79,17 +81,18 @@ public int getClassId() {\n \n     @Override\n     public void writeData(ObjectDataOutput out) throws IOException {\n-        out.writeInt(partitionId);\n+        // TODO use IDS", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60cc3dc9b80b4bf846e9ea919916ecd65a8f97ba"}, "originalPosition": 73}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11c5050b0671632f97acda8376871ff71c21005b", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/11c5050b0671632f97acda8376871ff71c21005b", "committedDate": "2020-11-30T14:35:53Z", "message": "Experiment: wreck the Target serialization\n\nI think it's never serialized."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6cd1c7f3c7e1ad98ddf98805f7c47d144fc7d2e", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/c6cd1c7f3c7e1ad98ddf98805f7c47d144fc7d2e", "committedDate": "2020-11-30T16:21:43Z", "message": "Make Target non-serializable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee7195842aa0962718376e47fe9a5f4a4a3227da", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/ee7195842aa0962718376e47fe9a5f4a4a3227da", "committedDate": "2020-11-30T16:26:46Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MzE5OTAw", "url": "https://github.com/hazelcast/hazelcast/pull/17886#pullrequestreview-539319900", "createdAt": "2020-11-26T13:35:04Z", "commit": {"oid": "60cc3dc9b80b4bf846e9ea919916ecd65a8f97ba"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMzozNTowNFrOH6bsJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMjo1NzozOFrOH9ZtYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTAzMzEyNw==", "bodyText": "Probably this class is generated by the client protocol. If that's the case, it will be overwritten whenever client protocol classes are regenerated. A clients team member can enlighten us on this.", "url": "https://github.com/hazelcast/hazelcast/pull/17886#discussion_r531033127", "createdAt": "2020-11-26T13:35:04Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/codec/holder/PagingPredicateHolder.java", "diffHunk": "@@ -24,6 +24,7 @@\n import com.hazelcast.query.impl.predicates.PagingPredicateImpl;\n import com.hazelcast.query.impl.predicates.PartitionPredicateImpl;\n \n+import javax.annotation.Nonnull;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60cc3dc9b80b4bf846e9ea919916ecd65a8f97ba"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMyNjc2Mg==", "bodyText": "nit: \"Execute the {@code keySet} operation on the given {@code partitions}.\" seems sufficient (\"given partitions\" does not necessarily imply \"all nodes\" will be involved).", "url": "https://github.com/hazelcast/hazelcast/pull/17886#discussion_r533326762", "createdAt": "2020-12-01T11:09:25Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/map/impl/proxy/MapProxyImpl.java", "diffHunk": "@@ -684,7 +685,18 @@ public void clear() {\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public Set<K> keySet(@Nonnull Predicate<K, V> predicate) {\n-        return executePredicate(predicate, IterationType.KEY, true);\n+        return executePredicate(predicate, IterationType.KEY, true, Target.ALL_NODES);\n+    }\n+\n+    /**\n+     * Execute the {@code keySet} operation on all nodes, but only on the given\n+     * {@code partitions}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7195842aa0962718376e47fe9a5f4a4a3227da"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE0NjQwMw==", "bodyText": "We can now get rid of this no-args constructor, it was only used by the serializer hook.", "url": "https://github.com/hazelcast/hazelcast/pull/17886#discussion_r534146403", "createdAt": "2020-12-02T12:57:38Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/main/java/com/hazelcast/map/impl/query/Target.java", "diffHunk": "@@ -16,80 +16,54 @@\n \n package com.hazelcast.map.impl.query;\n \n-import com.hazelcast.map.impl.MapDataSerializerHook;\n-import com.hazelcast.nio.ObjectDataInput;\n-import com.hazelcast.nio.ObjectDataOutput;\n-import com.hazelcast.nio.serialization.IdentifiedDataSerializable;\n+import com.hazelcast.internal.util.collection.PartitionIdSet;\n \n-import java.io.IOException;\n-\n-import static com.hazelcast.map.impl.query.Target.TargetMode.PARTITION_OWNER;\n import static com.hazelcast.internal.util.Preconditions.checkNotNull;\n+import static com.hazelcast.map.impl.query.Target.TargetMode.PARTITION_OWNER;\n \n /**\n  * Target for a query.\n  * <p>\n- * Possible options:\n- * - all nodes\n- * - local node only\n- * - given partition\n+ * Possible options:<ul>\n+ *     <li>all nodes\n+ *     <li>local node only\n+ *     <li>given partition set\n+ * </ul>\n  */\n-public class Target implements IdentifiedDataSerializable {\n+public class Target {\n \n     public static final Target ALL_NODES = new Target(TargetMode.ALL_NODES, null);\n     public static final Target LOCAL_NODE = new Target(TargetMode.LOCAL_NODE, null);\n \n     private TargetMode mode;\n-    private Integer partitionId;\n+    private PartitionIdSet partitions;\n \n     public Target() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7195842aa0962718376e47fe9a5f4a4a3227da"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bf5acfca990f0a6e73bef2a98154996a92ce36b", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/2bf5acfca990f0a6e73bef2a98154996a92ce36b", "committedDate": "2020-12-02T13:22:36Z", "message": "Address Vasillis' comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "416cefef10e76deb7e20c390a4f888edd174262e", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/416cefef10e76deb7e20c390a4f888edd174262e", "committedDate": "2020-12-02T13:24:30Z", "message": "Unrelated typos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f16bdb72aa39dc0d32a459cd8545c316aa547da7", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/f16bdb72aa39dc0d32a459cd8545c316aa547da7", "committedDate": "2020-12-02T14:22:52Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzODU3MTk0", "url": "https://github.com/hazelcast/hazelcast/pull/17886#pullrequestreview-543857194", "createdAt": "2020-12-03T11:25:36Z", "commit": {"oid": "f16bdb72aa39dc0d32a459cd8545c316aa547da7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMToyNTozNlrOH-Vwfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMToyNTozNlrOH-Vwfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEzMDIzOQ==", "bodyText": "Seems runOnAllPartitions can also be removed and\nrunOnGivenPartitions(adjustedQuery, getAllPartitionIds(), TargetMode.ALL_NODES) can be used instead?", "url": "https://github.com/hazelcast/hazelcast/pull/17886#discussion_r535130239", "createdAt": "2020-12-03T11:25:36Z", "author": {"login": "ahmetmircik"}, "path": "hazelcast/src/main/java/com/hazelcast/map/impl/query/QueryEngineImpl.java", "diffHunk": "@@ -93,9 +93,14 @@ public Result execute(Query query, Target target) {\n             case ALL_NODES:\n                 return runOnAllPartitions(adjustedQuery);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f16bdb72aa39dc0d32a459cd8545c316aa547da7"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzODU4OTgw", "url": "https://github.com/hazelcast/hazelcast/pull/17886#pullrequestreview-543858980", "createdAt": "2020-12-03T11:28:13Z", "commit": {"oid": "f16bdb72aa39dc0d32a459cd8545c316aa547da7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMToyODoxM1rOH-V7KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMToyODoxM1rOH-V7KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEzMjk2OQ==", "bodyText": "seems we can just return without further proceeding if userPredice is always false?", "url": "https://github.com/hazelcast/hazelcast/pull/17886#discussion_r535132969", "createdAt": "2020-12-03T11:28:13Z", "author": {"login": "ahmetmircik"}, "path": "hazelcast/src/main/java/com/hazelcast/map/impl/proxy/MapProxySupport.java", "diffHunk": "@@ -1351,14 +1353,22 @@ private void publishMapEvent(int numberOfAffectedEntries, EntryEventType eventTy\n     protected <T extends Result> T executeQueryInternal(Predicate predicate, Aggregator aggregator, Projection projection,\n                                                         IterationType iterationType, Target target) {\n         QueryEngine queryEngine = getMapQueryEngine();\n-        Predicate userPredicate = predicate;\n+        final Predicate userPredicate;\n \n         if (predicate instanceof PartitionPredicate) {\n             PartitionPredicate partitionPredicate = (PartitionPredicate) predicate;\n             Data key = toData(partitionPredicate.getPartitionKey());\n             int partitionId = partitionService.getPartitionId(key);\n-            userPredicate = partitionPredicate.getTarget();\n-            target = createPartitionTarget(partitionId);\n+            if (target.mode() == TargetMode.LOCAL_NODE && !partitionService.isPartitionOwner(partitionId)\n+                    || target.mode() == TargetMode.PARTITION_OWNER && !target.partitions().contains(partitionId)\n+            ) {\n+                userPredicate = alwaysFalse();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f16bdb72aa39dc0d32a459cd8545c316aa547da7"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzODc5MDYy", "url": "https://github.com/hazelcast/hazelcast/pull/17886#pullrequestreview-543879062", "createdAt": "2020-12-03T11:55:16Z", "commit": {"oid": "f16bdb72aa39dc0d32a459cd8545c316aa547da7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c55c0479d8bc11ddc240f22c830eb6e6f3856c09", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/c55c0479d8bc11ddc240f22c830eb6e6f3856c09", "committedDate": "2020-12-04T10:02:25Z", "message": "Remove duplicate code"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3140, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}