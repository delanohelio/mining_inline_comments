{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyNzAyODQ4", "number": 17512, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwOTo1NTozNlrOEhmSzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwOTo1NTozNlrOEhmSzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNjY1ODcxOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwOTo1NTozNlrOHO_4Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMDoxMzowMFrOHPAgQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ4ODY5OA==", "bodyText": "Alternatively, we can add this to the surrounding if.", "url": "https://github.com/hazelcast/hazelcast/pull/17512#discussion_r485488698", "createdAt": "2020-09-09T09:55:36Z", "author": {"login": "blazember"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointImpl.java", "diffHunk": "@@ -282,8 +282,12 @@ public String toString() {\n     public void provideDynamicMetrics(MetricDescriptor descriptor, MetricsCollectionContext context) {\n         ClientStatistics clientStatistics = statsRef.get();\n         if (clientStatistics != null && clientStatistics.metricsBlob() != null) {\n-            long timestamp = clientStatistics.timestamp();\n             byte[] metricsBlob = clientStatistics.metricsBlob();\n+            if (metricsBlob.length == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f29b3a3f20bec5b150191fc97a29e66dd706fd6a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ5ODk0Ng==", "bodyText": "Yup, I didn't do it as it already includes two checks", "url": "https://github.com/hazelcast/hazelcast/pull/17512#discussion_r485498946", "createdAt": "2020-09-09T10:13:00Z", "author": {"login": "puzpuzpuz"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointImpl.java", "diffHunk": "@@ -282,8 +282,12 @@ public String toString() {\n     public void provideDynamicMetrics(MetricDescriptor descriptor, MetricsCollectionContext context) {\n         ClientStatistics clientStatistics = statsRef.get();\n         if (clientStatistics != null && clientStatistics.metricsBlob() != null) {\n-            long timestamp = clientStatistics.timestamp();\n             byte[] metricsBlob = clientStatistics.metricsBlob();\n+            if (metricsBlob.length == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ4ODY5OA=="}, "originalCommit": {"oid": "f29b3a3f20bec5b150191fc97a29e66dd706fd6a"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 204, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}