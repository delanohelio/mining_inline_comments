{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MzA5MDc0", "number": 16980, "title": "SQL: Initial integration with Apache Calcite ", "bodyText": "This PR introduces the basic integration with Apache Calcite:\n\nOptimizerContext that glues parser, validator, and optimizer\nSchema resolution rules\nValidation of unsupported features\n\nOut of scope:\n\nSqlNode to RelNode conversions\nOptimization rules\nCase-insensitive parsing\n\nThese will be implemented in separate PRs.\nCloses #16979", "createdAt": "2020-05-13T11:48:30Z", "url": "https://github.com/hazelcast/hazelcast/pull/16980", "merged": true, "mergeCommit": {"oid": "8f4a099f80ac8cc5bfedf04ab658b5c840a29e09"}, "closed": true, "closedAt": "2020-05-19T11:44:40Z", "author": {"login": "devozerov"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcg3YwugH2gAyNDE3MzA5MDc0OjEzZDM0OGNhMGZhZGYxZTRiYjBlYTI4ZWJmMzI3MGEwNDQyNTU1OTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABciwmIaAH2gAyNDE3MzA5MDc0OjBiM2RjNGY2ZTk3YzA0MDI1OWVjOTFmNDlmYTgxMGQ1MmJmNzk3YWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "13d348ca0fadf1e4bb0ea28ebf3270a044255591", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/13d348ca0fadf1e4bb0ea28ebf3270a044255591", "committedDate": "2020-05-13T11:43:29Z", "message": "Initial integration with Apache Calcite (#16979)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fc43c85404605c5f8e93f54c1b75b8e6a48f50c", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/5fc43c85404605c5f8e93f54c1b75b8e6a48f50c", "committedDate": "2020-05-15T06:54:43Z", "message": "Merge branch 'master' into issues/16979"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNDIxMTIy", "url": "https://github.com/hazelcast/hazelcast/pull/16980#pullrequestreview-413421122", "createdAt": "2020-05-18T09:26:32Z", "commit": {"oid": "5fc43c85404605c5f8e93f54c1b75b8e6a48f50c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOToyNjozMlrOGWu34A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOToyNjozMlrOGWu34A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ4OTgyNA==", "bodyText": "Not directly related to the PR: why we have QueryDataTypeFamily mapping for SqlTypeName.TIMESTAMP_WITH_LOCAL_TIME_ZONE, but no similar family/mapping for SqlTypeName.TIME_WITH_LOCAL_TIME_ZONE?", "url": "https://github.com/hazelcast/hazelcast/pull/16980#discussion_r426489824", "createdAt": "2020-05-18T09:26:32Z", "author": {"login": "taburet"}, "path": "hazelcast-sql/src/main/java/com/hazelcast/sql/impl/calcite/schema/HazelcastTable.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.sql.impl.calcite.schema;\n+\n+import com.hazelcast.sql.impl.schema.Table;\n+import com.hazelcast.sql.impl.schema.TableField;\n+import com.hazelcast.sql.impl.type.QueryDataType;\n+import com.hazelcast.sql.impl.type.QueryDataTypeFamily;\n+import org.apache.calcite.rel.type.RelDataType;\n+import org.apache.calcite.rel.type.RelDataTypeFactory;\n+import org.apache.calcite.rel.type.RelDataTypeField;\n+import org.apache.calcite.rel.type.RelDataTypeFieldImpl;\n+import org.apache.calcite.rel.type.RelRecordType;\n+import org.apache.calcite.rel.type.StructKind;\n+import org.apache.calcite.schema.Statistic;\n+import org.apache.calcite.schema.impl.AbstractTable;\n+import org.apache.calcite.sql.type.SqlTypeName;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Base class for all tables in the Calcite integration:\n+ * <ul>\n+ *     <li>Maps field types defined in the {@code core} module to Calcite types</li>\n+ *     <li>Provides access to the underlying table and statistics</li>\n+ * </ul>\n+ */\n+public class HazelcastTable extends AbstractTable {\n+\n+    private static final Map<QueryDataTypeFamily, SqlTypeName> QUERY_TO_SQL_TYPE = new HashMap<>();\n+\n+    static {\n+        QUERY_TO_SQL_TYPE.put(QueryDataTypeFamily.VARCHAR, SqlTypeName.VARCHAR);\n+\n+        QUERY_TO_SQL_TYPE.put(QueryDataTypeFamily.BOOLEAN, SqlTypeName.BOOLEAN);\n+\n+        QUERY_TO_SQL_TYPE.put(QueryDataTypeFamily.TINYINT, SqlTypeName.TINYINT);\n+        QUERY_TO_SQL_TYPE.put(QueryDataTypeFamily.SMALLINT, SqlTypeName.SMALLINT);\n+        QUERY_TO_SQL_TYPE.put(QueryDataTypeFamily.INT, SqlTypeName.INTEGER);\n+        QUERY_TO_SQL_TYPE.put(QueryDataTypeFamily.BIGINT, SqlTypeName.BIGINT);\n+\n+        QUERY_TO_SQL_TYPE.put(QueryDataTypeFamily.DECIMAL, SqlTypeName.DECIMAL);\n+\n+        QUERY_TO_SQL_TYPE.put(QueryDataTypeFamily.REAL, SqlTypeName.REAL);\n+        QUERY_TO_SQL_TYPE.put(QueryDataTypeFamily.DOUBLE, SqlTypeName.DOUBLE);\n+\n+        QUERY_TO_SQL_TYPE.put(QueryDataTypeFamily.TIME, SqlTypeName.TIME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fc43c85404605c5f8e93f54c1b75b8e6a48f50c"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNDM5MTQ5", "url": "https://github.com/hazelcast/hazelcast/pull/16980#pullrequestreview-413439149", "createdAt": "2020-05-18T09:49:57Z", "commit": {"oid": "5fc43c85404605c5f8e93f54c1b75b8e6a48f50c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo0OTo1OFrOGWvwSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo0OTo1OFrOGWvwSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwNDI2NA==", "bodyText": "Why it's returning list of lists?", "url": "https://github.com/hazelcast/hazelcast/pull/16980#discussion_r426504264", "createdAt": "2020-05-18T09:49:58Z", "author": {"login": "taburet"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/schema/TableResolver.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.sql.impl.schema;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+/**\n+ * Generic interface that resolves tables belonging to a particular backend.\n+ * <p>\n+ * At the moment the interface does exactly what we need - provides tables and registers default search paths.\n+ * In future, if we have more objects to expose, it might be expanded or reworked completely.\n+ */\n+public interface TableResolver {\n+    /**\n+     * @return Search paths to be added for object resolution.\n+     */\n+    List<List<String>> getDefaultSearchPaths();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fc43c85404605c5f8e93f54c1b75b8e6a48f50c"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNDc0ODkx", "url": "https://github.com/hazelcast/hazelcast/pull/16980#pullrequestreview-413474891", "createdAt": "2020-05-18T10:40:58Z", "commit": {"oid": "5fc43c85404605c5f8e93f54c1b75b8e6a48f50c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNjI0MzA4", "url": "https://github.com/hazelcast/hazelcast/pull/16980#pullrequestreview-413624308", "createdAt": "2020-05-18T14:02:13Z", "commit": {"oid": "5fc43c85404605c5f8e93f54c1b75b8e6a48f50c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDowMjoxM1rOGW4lxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDowMjoxM1rOGW4lxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY0OTAyOQ==", "bodyText": "It'd be nice to have an explanation somewhere why rowCount is double (not a long)?", "url": "https://github.com/hazelcast/hazelcast/pull/16980#discussion_r426649029", "createdAt": "2020-05-18T14:02:13Z", "author": {"login": "petrpleshachkov"}, "path": "hazelcast-sql/src/main/java/com/hazelcast/sql/impl/calcite/schema/MapTableStatistic.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.sql.impl.calcite.schema;\n+\n+import org.apache.calcite.rel.RelCollation;\n+import org.apache.calcite.rel.RelDistribution;\n+import org.apache.calcite.rel.RelDistributionTraitDef;\n+import org.apache.calcite.rel.RelReferentialConstraint;\n+import org.apache.calcite.schema.Statistic;\n+import org.apache.calcite.util.ImmutableBitSet;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * Simple table statistics for IMap and ReplicatedMap.\n+ */\n+public class MapTableStatistic implements Statistic {\n+    /** Row count that is fixed for the duration of query optimization process. */\n+    private final Long rowCount;\n+\n+    public MapTableStatistic(long rowCount) {\n+        this.rowCount = rowCount;\n+    }\n+\n+    @Override\n+    public Double getRowCount() {\n+        return (double) rowCount;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fc43c85404605c5f8e93f54c1b75b8e6a48f50c"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNjQxMTc2", "url": "https://github.com/hazelcast/hazelcast/pull/16980#pullrequestreview-413641176", "createdAt": "2020-05-18T14:20:26Z", "commit": {"oid": "5fc43c85404605c5f8e93f54c1b75b8e6a48f50c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6feb427e36782d38ef8c7df9072e7ce60454ec0c", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/6feb427e36782d38ef8c7df9072e7ce60454ec0c", "committedDate": "2020-05-19T08:49:38Z", "message": "Merge branch 'master' into issues/16979"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b3dc4f6e97c040259ec91f49fa810d52bf797ae", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/0b3dc4f6e97c040259ec91f49fa810d52bf797ae", "committedDate": "2020-05-19T08:56:36Z", "message": "JavaDocs."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3616, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}