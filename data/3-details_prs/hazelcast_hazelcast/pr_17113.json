{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MDQwODg2", "number": 17113, "title": "[4.1] Fine-tuning cluster properties for EE WAN throttling (#17092)", "bodyText": "Adding the fine-tuning group properties for the EE WAN throttling\nfeature.\nEE: hazelcast/hazelcast-enterprise#3638\nClean port of: #17092", "createdAt": "2020-06-19T11:10:24Z", "url": "https://github.com/hazelcast/hazelcast/pull/17113", "merged": true, "mergeCommit": {"oid": "50c8332e01c79faa0ae5f01b0145a5e6bf67fac9"}, "closed": true, "closedAt": "2020-06-23T17:04:39Z", "author": {"login": "mmedenjak"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsxC7nAH2gAyNDM3MDQwODg2OjY3Mzg2ZDk2OTU0NDBhMGQ2YTEzYTE0NzY1YTAyODcyMmFjOTZmZWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuGPzAgFqTQzNTgzNTQ5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "67386d9695440a0d6a13a14765a028722ac96feb", "author": {"user": {"login": "blazember", "name": "Zolt\u00e1n Baranyi"}}, "url": "https://github.com/hazelcast/hazelcast/commit/67386d9695440a0d6a13a14765a028722ac96feb", "committedDate": "2020-06-19T11:07:18Z", "message": "Fine-tuning cluster properties for EE WAN throttling (#17092)\n\nAdding the fine-tuning group properties for the EE WAN throttling\nfeature."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0ODIzNzIz", "url": "https://github.com/hazelcast/hazelcast/pull/17113#pullrequestreview-434823723", "createdAt": "2020-06-22T11:10:32Z", "commit": {"oid": "67386d9695440a0d6a13a14765a028722ac96feb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0ODI0MTkz", "url": "https://github.com/hazelcast/hazelcast/pull/17113#pullrequestreview-434824193", "createdAt": "2020-06-22T11:11:20Z", "commit": {"oid": "67386d9695440a0d6a13a14765a028722ac96feb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMToxMToyMFrOGm8K-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMToxMToyMFrOGm8K-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ4NDkyMA==", "bodyText": "Why are you using a string here? A Double won't do?", "url": "https://github.com/hazelcast/hazelcast/pull/17113#discussion_r443484920", "createdAt": "2020-06-22T11:11:20Z", "author": {"login": "pveentjer"}, "path": "hazelcast/src/main/java/com/hazelcast/spi/properties/ClusterProperty.java", "diffHunk": "@@ -1130,6 +1130,63 @@ private int getWhenNoSSLDetected() {\n     public static final HazelcastProperty METRICS_COLLECTION_FREQUENCY\n             = new HazelcastProperty(\"hazelcast.metrics.collection.frequency\");\n \n+    /**\n+     * Defines the pending invocation threshold for the Enterprise WAN\n+     * replication implementation. Exceeding this threshold on a WAN\n+     * consumer member makes the member delaying the WAN acknowledgment,\n+     * thus slowing down the WAN publishers on the source side that send\n+     * WAN events to the given WAN consumer. Setting this value to\n+     * negative turns off the acknowledgement delaying feature.\n+     *\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_INIT_MS\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_MAX_MS\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_MULTIPLIER\n+     */\n+    public static final HazelcastProperty WAN_CONSUMER_INVOCATION_THRESHOLD\n+            = new HazelcastProperty(\"hazelcast.wan.consumer.invocation.threshold\", 50000);\n+\n+    /**\n+     * Defines the initial backoff delay for the Enterprise WAN\n+     * implementation's consumer. It is used if the acknowledgment\n+     * delaying feature is enabled by setting\n+     * {@link #WAN_CONSUMER_INVOCATION_THRESHOLD} to a non-negative value\n+     * and that the threshold is exceeded.\n+     *\n+     * @see #WAN_CONSUMER_INVOCATION_THRESHOLD\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_MAX_MS\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_MULTIPLIER\n+     */\n+    public static final HazelcastProperty WAN_CONSUMER_ACK_DELAY_BACKOFF_INIT_MS\n+            = new HazelcastProperty(\"hazelcast.wan.consumer.ack.delay.backoff.init\", 1);\n+\n+    /**\n+     * Defines the maximum backoff delay for the Enterprise WAN\n+     * implementation's consumer. It is used if the acknowledgment\n+     * delaying feature is enabled by setting\n+     * {@link #WAN_CONSUMER_INVOCATION_THRESHOLD} to a non-negative value\n+     * and that the threshold is exceeded.\n+     *\n+     * @see #WAN_CONSUMER_INVOCATION_THRESHOLD\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_INIT_MS\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_MULTIPLIER\n+     */\n+    public static final HazelcastProperty WAN_CONSUMER_ACK_DELAY_BACKOFF_MAX_MS\n+            = new HazelcastProperty(\"hazelcast.wan.consumer.ack.delay.backoff.max\", 100);\n+\n+    /**\n+     * Defines the multiplier (the speed of the function) for the backoff\n+     * delay for the Enterprise WAN implementation's consumer. It is used\n+     * if the acknowledgment delaying feature is enabled by setting\n+     * {@link #WAN_CONSUMER_INVOCATION_THRESHOLD} to a non-negative value\n+     * and that the threshold is exceeded.\n+     *\n+     * @see #WAN_CONSUMER_INVOCATION_THRESHOLD\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_INIT_MS\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_MAX_MS\n+     */\n+    public static final HazelcastProperty WAN_CONSUMER_ACK_DELAY_BACKOFF_MULTIPLIER\n+            = new HazelcastProperty(\"hazelcast.wan.consumer.ack.delay.backoff.multiplier\", \"1.5\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67386d9695440a0d6a13a14765a028722ac96feb"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6507bad83aad6de25258dd856fbd3088b200138", "author": {"user": {"login": "blazember", "name": "Zolt\u00e1n Baranyi"}}, "url": "https://github.com/hazelcast/hazelcast/commit/c6507bad83aad6de25258dd856fbd3088b200138", "committedDate": "2020-06-23T14:12:00Z", "message": "Add float/double support to HazelcastProperty"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1ODM1NDk4", "url": "https://github.com/hazelcast/hazelcast/pull/17113#pullrequestreview-435835498", "createdAt": "2020-06-23T14:23:17Z", "commit": {"oid": "c6507bad83aad6de25258dd856fbd3088b200138"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3715, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}