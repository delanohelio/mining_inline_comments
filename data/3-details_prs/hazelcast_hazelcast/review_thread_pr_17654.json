{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1NzE4NDcz", "number": 17654, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODoyMjowMlrOEpXfhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwOTowNzozNlrOEpYkfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODExOTczOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODoyMjowMlrOHa_nHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODoyMjowMlrOHa_nHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA2NzIyOQ==", "bodyText": "nit: this comment does not mention client name, so it's better to change it to smth like we add some tags for MC", "url": "https://github.com/hazelcast/hazelcast/pull/17654#discussion_r498067229", "createdAt": "2020-10-01T08:22:02Z", "author": {"login": "puzpuzpuz"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointImpl.java", "diffHunk": "@@ -307,6 +308,7 @@ private MetricDescriptor enhanceDescriptor(MetricDescriptor descriptor, long tim\n                             .withIncludedTarget(MANAGEMENT_CENTER)\n                             // we add \"client\" and \"timestamp\" tags for MC", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1564777f960b3b325bf2c77c68544961245b740"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODI5NjMwOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointImpl.java", "isResolved": false, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwOTowNzozNlrOHbBTnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMDoxNjozNlrOHbodPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA5NTAwNQ==", "bodyText": "Shouldn't we make either of METRICS_TAG_CLIENT or METRICS_TAG_CLIENTNAME a discriminator? Discriminators are used to adding extra info to the metrics definition that it captures the \"entity\" provided the given metric. It's basically a distinguished tag. It can make processing the metric easier. I think it should have been done in the initial implementation with METRICS_TAG_CLIENT, but now we can choose between the two mentioned tags. WDYT @emre-aydin?", "url": "https://github.com/hazelcast/hazelcast/pull/17654#discussion_r498095005", "createdAt": "2020-10-01T09:07:36Z", "author": {"login": "blazember"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointImpl.java", "diffHunk": "@@ -307,6 +308,7 @@ private MetricDescriptor enhanceDescriptor(MetricDescriptor descriptor, long tim\n                             .withIncludedTarget(MANAGEMENT_CENTER)\n                             // we add \"client\" and \"timestamp\" tags for MC\n                             .withTag(METRICS_TAG_CLIENT, getUuid().toString())\n+                            .withTag(METRICS_TAG_CLIENTNAME, clientName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1564777f960b3b325bf2c77c68544961245b740"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODExOTk0OQ==", "bodyText": "I didn't know about the discriminator tag. In this case, I think making the UUID is a better choice. AFAIK clients can have the same name.", "url": "https://github.com/hazelcast/hazelcast/pull/17654#discussion_r498119949", "createdAt": "2020-10-01T09:49:14Z", "author": {"login": "emre-aydin"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointImpl.java", "diffHunk": "@@ -307,6 +308,7 @@ private MetricDescriptor enhanceDescriptor(MetricDescriptor descriptor, long tim\n                             .withIncludedTarget(MANAGEMENT_CENTER)\n                             // we add \"client\" and \"timestamp\" tags for MC\n                             .withTag(METRICS_TAG_CLIENT, getUuid().toString())\n+                            .withTag(METRICS_TAG_CLIENTNAME, clientName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA5NTAwNQ=="}, "originalCommit": {"oid": "e1564777f960b3b325bf2c77c68544961245b740"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODEyMjA4Mw==", "bodyText": "A small note here. METRICS_TAG_CLIENTNAME are not unique and there may be multiple clients with the same name, so METRICS_TAG_CLIENT should be used as a discriminator.", "url": "https://github.com/hazelcast/hazelcast/pull/17654#discussion_r498122083", "createdAt": "2020-10-01T09:52:55Z", "author": {"login": "puzpuzpuz"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointImpl.java", "diffHunk": "@@ -307,6 +308,7 @@ private MetricDescriptor enhanceDescriptor(MetricDescriptor descriptor, long tim\n                             .withIncludedTarget(MANAGEMENT_CENTER)\n                             // we add \"client\" and \"timestamp\" tags for MC\n                             .withTag(METRICS_TAG_CLIENT, getUuid().toString())\n+                            .withTag(METRICS_TAG_CLIENTNAME, clientName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA5NTAwNQ=="}, "originalCommit": {"oid": "e1564777f960b3b325bf2c77c68544961245b740"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyMDQ1Nw==", "bodyText": "Hello, I tried it out and in the prometheus exporter we don't print the discriminator key-value as a metric label. So we can\na) set the clientUuid both as a tag and a discriminator, not sure if such duplication is ok\nb) set the clientUuid only as a discriminator, but not as a regular tag - it would be a BC-breaking change, and also the UUID wouldn't be usable by Prometheus clients anymore\nOne more concern: as far as I understand this #enchanceDescriptor() method adds additional tags to an already existing metric, sent from the client. So what happens if the client already set a discriminator for the metric? Isn't it a problem that we override it here, by using the clientUuid as the discriminator? It doesn't look like a future-proof approach for me, so maybe it is better to leave this as-is and not populate the discriminator? WDYT?", "url": "https://github.com/hazelcast/hazelcast/pull/17654#discussion_r498420457", "createdAt": "2020-10-01T17:55:00Z", "author": {"login": "erosb"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointImpl.java", "diffHunk": "@@ -307,6 +308,7 @@ private MetricDescriptor enhanceDescriptor(MetricDescriptor descriptor, long tim\n                             .withIncludedTarget(MANAGEMENT_CENTER)\n                             // we add \"client\" and \"timestamp\" tags for MC\n                             .withTag(METRICS_TAG_CLIENT, getUuid().toString())\n+                            .withTag(METRICS_TAG_CLIENTNAME, clientName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA5NTAwNQ=="}, "originalCommit": {"oid": "e1564777f960b3b325bf2c77c68544961245b740"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ1NjgxMw==", "bodyText": "Hello, I tried it out and in the prometheus exporter we don't print the discriminator key-value as a metric label. So we can\n\nSo, it totally ignores the discriminator? If so, it sounds wrong, as other parts of MC treat discriminator as a tag.", "url": "https://github.com/hazelcast/hazelcast/pull/17654#discussion_r498456813", "createdAt": "2020-10-01T19:05:14Z", "author": {"login": "puzpuzpuz"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointImpl.java", "diffHunk": "@@ -307,6 +308,7 @@ private MetricDescriptor enhanceDescriptor(MetricDescriptor descriptor, long tim\n                             .withIncludedTarget(MANAGEMENT_CENTER)\n                             // we add \"client\" and \"timestamp\" tags for MC\n                             .withTag(METRICS_TAG_CLIENT, getUuid().toString())\n+                            .withTag(METRICS_TAG_CLIENTNAME, clientName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA5NTAwNQ=="}, "originalCommit": {"oid": "e1564777f960b3b325bf2c77c68544961245b740"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ1NzY2Mw==", "bodyText": "As for the collision problem, I agree that it might be a problem. Even if clients don't use discriminator now, nothing stops them from doing that in future.", "url": "https://github.com/hazelcast/hazelcast/pull/17654#discussion_r498457663", "createdAt": "2020-10-01T19:06:50Z", "author": {"login": "puzpuzpuz"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointImpl.java", "diffHunk": "@@ -307,6 +308,7 @@ private MetricDescriptor enhanceDescriptor(MetricDescriptor descriptor, long tim\n                             .withIncludedTarget(MANAGEMENT_CENTER)\n                             // we add \"client\" and \"timestamp\" tags for MC\n                             .withTag(METRICS_TAG_CLIENT, getUuid().toString())\n+                            .withTag(METRICS_TAG_CLIENTNAME, clientName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA5NTAwNQ=="}, "originalCommit": {"oid": "e1564777f960b3b325bf2c77c68544961245b740"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NDcxMw==", "bodyText": "You're right with the potential override. We do set the discriminator on the client side btw. For example, we set the data structures names in that field. This change is good as is then, sorry for the noise.\nOn the other hand, ignoring the discriminator doesn't sound good indeed. How a map metric looks like then? If MC converts the discriminator to regular tags, it should be present as a tag name=<ds_name> in the Prometheus export.", "url": "https://github.com/hazelcast/hazelcast/pull/17654#discussion_r498464713", "createdAt": "2020-10-01T19:21:38Z", "author": {"login": "blazember"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointImpl.java", "diffHunk": "@@ -307,6 +308,7 @@ private MetricDescriptor enhanceDescriptor(MetricDescriptor descriptor, long tim\n                             .withIncludedTarget(MANAGEMENT_CENTER)\n                             // we add \"client\" and \"timestamp\" tags for MC\n                             .withTag(METRICS_TAG_CLIENT, getUuid().toString())\n+                            .withTag(METRICS_TAG_CLIENTNAME, clientName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA5NTAwNQ=="}, "originalCommit": {"oid": "e1564777f960b3b325bf2c77c68544961245b740"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY0MDc5Nw==", "bodyText": "So, it totally ignores the discriminator? If so, it sounds wrong, as other parts of MC treat discriminator as a tag.\n\nI've checked Prometheus exporter impl and it consumes MC's internal data point representation, which has the discriminator merged into tags. So, we should be safe here.", "url": "https://github.com/hazelcast/hazelcast/pull/17654#discussion_r498640797", "createdAt": "2020-10-02T06:44:01Z", "author": {"login": "puzpuzpuz"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointImpl.java", "diffHunk": "@@ -307,6 +308,7 @@ private MetricDescriptor enhanceDescriptor(MetricDescriptor descriptor, long tim\n                             .withIncludedTarget(MANAGEMENT_CENTER)\n                             // we add \"client\" and \"timestamp\" tags for MC\n                             .withTag(METRICS_TAG_CLIENT, getUuid().toString())\n+                            .withTag(METRICS_TAG_CLIENTNAME, clientName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA5NTAwNQ=="}, "originalCommit": {"oid": "e1564777f960b3b325bf2c77c68544961245b740"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMTIyNA==", "bodyText": "Re-tested, we do expose discriminators as tags in Prometheus metrics (the discriminator is added to the tag list internally in MC).", "url": "https://github.com/hazelcast/hazelcast/pull/17654#discussion_r498731224", "createdAt": "2020-10-02T10:05:06Z", "author": {"login": "erosb"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointImpl.java", "diffHunk": "@@ -307,6 +308,7 @@ private MetricDescriptor enhanceDescriptor(MetricDescriptor descriptor, long tim\n                             .withIncludedTarget(MANAGEMENT_CENTER)\n                             // we add \"client\" and \"timestamp\" tags for MC\n                             .withTag(METRICS_TAG_CLIENT, getUuid().toString())\n+                            .withTag(METRICS_TAG_CLIENTNAME, clientName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA5NTAwNQ=="}, "originalCommit": {"oid": "e1564777f960b3b325bf2c77c68544961245b740"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczNjQ0NQ==", "bodyText": "Thanks for confirming this @erosb @puzpuzpuz \ud83d\udc4d", "url": "https://github.com/hazelcast/hazelcast/pull/17654#discussion_r498736445", "createdAt": "2020-10-02T10:16:36Z", "author": {"login": "blazember"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointImpl.java", "diffHunk": "@@ -307,6 +308,7 @@ private MetricDescriptor enhanceDescriptor(MetricDescriptor descriptor, long tim\n                             .withIncludedTarget(MANAGEMENT_CENTER)\n                             // we add \"client\" and \"timestamp\" tags for MC\n                             .withTag(METRICS_TAG_CLIENT, getUuid().toString())\n+                            .withTag(METRICS_TAG_CLIENTNAME, clientName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA5NTAwNQ=="}, "originalCommit": {"oid": "e1564777f960b3b325bf2c77c68544961245b740"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 150, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}