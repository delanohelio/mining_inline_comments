{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4OTY1ODc1", "number": 17758, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODo0MjoxM1rOEyPN9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODo0MjoxM1rOEyPN9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMTEzNTg5OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/test/java/com/hazelcast/internal/cluster/impl/PromoteLiteMemberTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODo0MjoxM1rOHow0TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODo0MjoxM1rOHow0TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUwNDkwOA==", "bodyText": "nit: could use waitClusterForSafeState here and assertEqualsEventually in subsequent assertTrueEventually usages below.", "url": "https://github.com/hazelcast/hazelcast/pull/17758#discussion_r512504908", "createdAt": "2020-10-27T08:42:13Z", "author": {"login": "vbekiaris"}, "path": "hazelcast/src/test/java/com/hazelcast/internal/cluster/impl/PromoteLiteMemberTest.java", "diffHunk": "@@ -374,6 +376,110 @@ private void memberAttributes_arePreserved_afterPromotion(boolean isMaster) thro\n         }\n     }\n \n+    @Test\n+    public void test_lite_member_promotion_causes_no_data_loss_on_three_members() throws InterruptedException {\n+        final int entryCount = 1000;\n+\n+        TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory();\n+        Config config = new Config().setLiteMember(true);\n+\n+        // start first hazelcast instance as a lite member\n+        final HazelcastInstance firstHazelcastInstance = factory.newHazelcastInstance(config);\n+\n+        // start second and third hazelcast instances as a lite member\n+        final HazelcastInstance secondHazelcastInstance = factory.newHazelcastInstance(config);\n+        final HazelcastInstance thirdHazelcastInstance = factory.newHazelcastInstance(config);\n+\n+        // promote all instances to data members\n+        firstHazelcastInstance.getCluster().promoteLocalLiteMember();\n+        secondHazelcastInstance.getCluster().promoteLocalLiteMember();\n+        thirdHazelcastInstance.getCluster().promoteLocalLiteMember();\n+\n+        // check if cluster is in a good shape\n+        assertTrueEventually(new AssertTask() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2db56f6c455b18efa92b8392c63c41effb6ff62f"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 67, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}