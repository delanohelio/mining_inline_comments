{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4NzI1Mjk2", "number": 17212, "title": "Add caller stacktrace to rethrown RuntimeException", "bodyText": "We have lots of places that we use the following pattern\ntry {\n     invocationFuture.get()\n}catch(Exception e){\n    throw retrhow(e);\n}\n\nIf the exception is RuntimeException, it is not wrapped and thrown directly. In that case, we can not follow where the exception is thrown from. Here is an example of a put from a member.\njava.lang.RuntimeException: here comes the bug\n        at com.hazelcast.map.impl.operation.PutOperation.runInternal(PutOperation.java:36)\n        at com.hazelcast.map.impl.operation.MapOperation.run(MapOperation.java:112)\n        at com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:227)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:216)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:422)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:166)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:136)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)\n        at com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)\n\n:\ntry {\n     invocationFuture.get()\n}catch(Exception e){\n    throw retrhow(e);\n}\n\nIf the exception is RuntimeException, it is not wrapped and thrown directly. In that case, we can not follow where the exception is thrown from. Here is an example of a put from a member.\njava.lang.RuntimeException: here comes the bug\n        at com.hazelcast.map.impl.operation.PutOperation.runInternal(PutOperation.java:36)\n        at com.hazelcast.map.impl.operation.MapOperation.run(MapOperation.java:112)\n        at com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:227)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:216)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:422)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:166)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:136)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)\n        at com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)\n\nSame problem on the client side:\njava.lang.RuntimeException: here comes the bug\n        at com.hazelcast.map.impl.operation.PutOperation.runInternal(PutOperation.java:36)\n        at com.hazelcast.map.impl.operation.MapOperation.run(MapOperation.java:112)\n        at com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:227)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:216)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.run(OperationExecutorImpl.java:411)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.runOrExecute(OperationExecutorImpl.java:438)\n        at com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvokeLocal(Invocation.java:597)\n        at com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvoke(Invocation.java:582)\n        at com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke0(Invocation.java:541)\n        at com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke(Invocation.java:238)\n        at com.hazelcast.spi.impl.operationservice.impl.InvocationBuilderImpl.invoke(InvocationBuilderImpl.java:59)\n        at com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask.processInternal(AbstractPartitionMessageTask.java:51)\n        at com.hazelcast.client.impl.protocol.task.AbstractAsyncMessageTask.processMessage(AbstractAsyncMessageTask.java:71)\n        at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.initializeAndProcessMessage(AbstractMessageTask.java:153)\n        at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.run(AbstractMessageTask.java:116)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:180)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:172)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:140)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)\n        at com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)\n\nThese exceptions should contain the stack trace of the caller as well. But they only have the remote stack trace.\nTo fix this, the tryWrapInSameClass is moved to ExceptionUtil to be used by rethrow. AbstractInvocationFuture uses methods\nfrom the ExceptionUtil.\nAfter the fix, the stacktrace of the same run for the member:\njava.lang.RuntimeException: here comes the bug\n        at java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:627)\n        at com.hazelcast.internal.util.ExceptionUtil.tryWrapInSameClass(ExceptionUtil.java:233)\n        at com.hazelcast.internal.util.ExceptionUtil.wrapException(ExceptionUtil.java:138)\n        at com.hazelcast.internal.util.ExceptionUtil.peel(ExceptionUtil.java:114)\n        at com.hazelcast.internal.util.ExceptionUtil.peel(ExceptionUtil.java:120)\n        at com.hazelcast.internal.util.ExceptionUtil.peel(ExceptionUtil.java:73)\n        at com.hazelcast.internal.util.ExceptionUtil.rethrow(ExceptionUtil.java:148)\n        at com.hazelcast.map.impl.proxy.MapProxySupport.invokeOperation(MapProxySupport.java:484)\n        at com.hazelcast.map.impl.proxy.MapProxySupport.putInternal(MapProxySupport.java:411)\n        at com.hazelcast.map.impl.proxy.MapProxyImpl.put(MapProxyImpl.java:130)\n        at com.hazelcast.map.impl.proxy.MapProxyImpl.put(MapProxyImpl.java:120)\n        at XNode.onliteMember(XNode.java:28)\n        at XNode.main(XNode.java:14)\nCaused by: java.lang.RuntimeException: here comes the bug\n        at com.hazelcast.map.impl.operation.PutOperation.runInternal(PutOperation.java:36)\n        at com.hazelcast.map.impl.operation.MapOperation.run(MapOperation.java:112)\n        at com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:227)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:216)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:422)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:166)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:136)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)\n        at com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)\n\nAnd the stacktrace of the same run for the client:\njava.lang.RuntimeException: here comes the bug\n        at java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:627)\n        at com.hazelcast.internal.util.ExceptionUtil.tryWrapInSameClass(ExceptionUtil.java:233)\n        at com.hazelcast.internal.util.ExceptionUtil.wrapException(ExceptionUtil.java:138)\n        at com.hazelcast.internal.util.ExceptionUtil.peel(ExceptionUtil.java:114)\n        at com.hazelcast.internal.util.ExceptionUtil.peel(ExceptionUtil.java:120)\n        at com.hazelcast.internal.util.ExceptionUtil.peel(ExceptionUtil.java:73)\n        at com.hazelcast.internal.util.ExceptionUtil.rethrow(ExceptionUtil.java:148)\n        at com.hazelcast.client.impl.spi.ClientProxy.invokeOnPartition(ClientProxy.java:190)\n        at com.hazelcast.client.impl.spi.ClientProxy.invoke(ClientProxy.java:182)\n        at com.hazelcast.client.impl.proxy.ClientMapProxy.putInternal(ClientMapProxy.java:529)\n        at com.hazelcast.client.impl.proxy.ClientMapProxy.put(ClientMapProxy.java:261)\n        at XNode.onClient(XNode.java:41)\n        at XNode.main(XNode.java:15)\nCaused by: java.lang.RuntimeException: here comes the bug\n        at java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:627)\n        at com.hazelcast.internal.util.ExceptionUtil.tryWrapInSameClass(ExceptionUtil.java:233)\n        at com.hazelcast.internal.util.ExceptionUtil.wrapException(ExceptionUtil.java:138)\n        at com.hazelcast.internal.util.ExceptionUtil.peel(ExceptionUtil.java:114)\n        at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.peelIfNeeded(AbstractMessageTask.java:348)\n        at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.encodeException(AbstractMessageTask.java:275)\n        at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.sendClientMessage(AbstractMessageTask.java:269)\n        at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.handleProcessingFailure(AbstractMessageTask.java:194)\n        at com.hazelcast.client.impl.protocol.task.AbstractAsyncMessageTask.sendResponseOrHandleFailure(AbstractAsyncMessageTask.java:84)\n        at java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:774)\n        at java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:750)\n        at java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:456)\n        at com.hazelcast.internal.util.ConcurrencyUtil$1.execute(ConcurrencyUtil.java:39)\n        at java.util.concurrent.CompletableFuture$UniCompletion.claim(CompletableFuture.java:543)\n        at java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:765)\n        at java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:750)\n        at java.util.concurrent.CompletableFuture.uniWhenCompleteStage(CompletableFuture.java:795)\n        at java.util.concurrent.CompletableFuture.whenCompleteAsync(CompletableFuture.java:2163)\n        at com.hazelcast.client.impl.protocol.task.AbstractAsyncMessageTask.processMessage(AbstractAsyncMessageTask.java:73)\n        at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.initializeAndProcessMessage(AbstractMessageTask.java:153)\n        at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.run(AbstractMessageTask.java:116)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:180)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:172)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:140)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)\n        at com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)\nCaused by: java.lang.RuntimeException: here comes the bug\n        at com.hazelcast.map.impl.operation.PutOperation.runInternal(PutOperation.java:36)\n        at com.hazelcast.map.impl.operation.MapOperation.run(MapOperation.java:112)\n        at com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:227)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:216)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.run(OperationExecutorImpl.java:411)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.runOrExecute(OperationExecutorImpl.java:438)\n        at com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvokeLocal(Invocation.java:597)\n        at com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvoke(Invocation.java:582)\n        at com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke0(Invocation.java:541)\n        at com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke(Invocation.java:238)\n        at com.hazelcast.spi.impl.operationservice.impl.InvocationBuilderImpl.invoke(InvocationBuilderImpl.java:59)\n        at com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask.processInternal(AbstractPartitionMessageTask.java:51)\n        at com.hazelcast.client.impl.protocol.task.AbstractAsyncMessageTask.processMessage(AbstractAsyncMessageTask.java:71)\n        ... 7 more\n\nfixes #17202", "createdAt": "2020-07-14T08:19:22Z", "url": "https://github.com/hazelcast/hazelcast/pull/17212", "merged": true, "mergeCommit": {"oid": "2a2daa2615cd53abd489e72137f4e9bfc0aa5a44"}, "closed": true, "closedAt": "2020-07-23T13:47:22Z", "author": {"login": "sancar"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0yA4zAFqTQ0NzkxMDQ5Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3tLvSABqjM1Nzk0MTk2NTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3OTEwNDk3", "url": "https://github.com/hazelcast/hazelcast/pull/17212#pullrequestreview-447910497", "createdAt": "2020-07-14T08:46:22Z", "commit": {"oid": "3a243fee6a959e244e02a195e9027177fc712fe8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMTkyNTUy", "url": "https://github.com/hazelcast/hazelcast/pull/17212#pullrequestreview-452192552", "createdAt": "2020-07-21T07:26:02Z", "commit": {"oid": "0b9a53e238310807ee0f396244e37106282863a7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0b9a53e238310807ee0f396244e37106282863a7", "author": {"user": {"login": "sancar", "name": "sancar"}}, "url": "https://github.com/hazelcast/hazelcast/commit/0b9a53e238310807ee0f396244e37106282863a7", "committedDate": "2020-07-14T10:06:33Z", "message": "test fixes"}, "afterCommit": {"oid": "da89fbac81f3ce024f27843ecf64c69b0d0973ef", "author": {"user": {"login": "sancar", "name": "sancar"}}, "url": "https://github.com/hazelcast/hazelcast/commit/da89fbac81f3ce024f27843ecf64c69b0d0973ef", "committedDate": "2020-07-21T07:21:14Z", "message": "test fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMDYwNDU1", "url": "https://github.com/hazelcast/hazelcast/pull/17212#pullrequestreview-453060455", "createdAt": "2020-07-22T07:27:29Z", "commit": {"oid": "da89fbac81f3ce024f27843ecf64c69b0d0973ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMDg3NDAy", "url": "https://github.com/hazelcast/hazelcast/pull/17212#pullrequestreview-453087402", "createdAt": "2020-07-22T08:06:23Z", "commit": {"oid": "da89fbac81f3ce024f27843ecf64c69b0d0973ef"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODowNjoyM1rOG1Xaig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODowOTo1MFrOG1XiLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYxMTMzOA==", "bodyText": "We seem to do this lookup for the same exception many times if many exceptions. Do you think that we should cache it so that reflection lookup cost is minimal?", "url": "https://github.com/hazelcast/hazelcast/pull/17212#discussion_r458611338", "createdAt": "2020-07-22T08:06:23Z", "author": {"login": "ihsandemir"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/util/ExceptionUtil.java", "diffHunk": "@@ -194,4 +224,27 @@ public static RuntimeException rethrowAllowInterrupted(final Throwable t) throws\n             }\n         };\n     }\n+\n+    public static <T extends Throwable> T tryWrapInSameClass(T cause) {\n+        Class<? extends Throwable> exceptionClass = cause.getClass();\n+        MethodHandle constructor;\n+        try {\n+            constructor = LOOKUP.findConstructor(exceptionClass, MT_INIT_STRING_THROWABLE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da89fbac81f3ce024f27843ecf64c69b0d0973ef"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYxMzI5NA==", "bodyText": "is all instances of t an HazelcastException for the client? if they all have the same base class, then for only the client side we may just make HazelcastException as WrappableException , and hence we may eliminate the need for the tryWrapInSameClass  method.", "url": "https://github.com/hazelcast/hazelcast/pull/17212#discussion_r458613294", "createdAt": "2020-07-22T08:09:50Z", "author": {"login": "ihsandemir"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/util/ExceptionUtil.java", "diffHunk": "@@ -118,7 +130,20 @@ public static RuntimeException peel(final Throwable t) {\n         return exceptionWrapper.apply(t, message);\n     }\n \n-    public static RuntimeException rethrow(Throwable t) {\n+    public static <W extends Throwable> Throwable wrapException(Throwable t, String message,\n+                                                                BiFunction<Throwable, String, W> exceptionWrapper) {\n+        if (t instanceof WrappableException) {\n+            return ((WrappableException) t).wrap();\n+        }\n+        Throwable wrapped = tryWrapInSameClass(t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da89fbac81f3ce024f27843ecf64c69b0d0973ef"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMjQwMzQ3", "url": "https://github.com/hazelcast/hazelcast/pull/17212#pullrequestreview-453240347", "createdAt": "2020-07-22T11:48:02Z", "commit": {"oid": "da89fbac81f3ce024f27843ecf64c69b0d0973ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ae8fcea22ffa31f6e1f2cffc0b791ddf9c33d800", "author": {"user": {"login": "sancar", "name": "sancar"}}, "url": "https://github.com/hazelcast/hazelcast/commit/ae8fcea22ffa31f6e1f2cffc0b791ddf9c33d800", "committedDate": "2020-07-22T13:29:40Z", "message": "Merge branch 'master' into fix/callerStacktrace/master"}, "afterCommit": {"oid": "0e61a132e1555a0fadec1799479b630ed54982ef", "author": {"user": {"login": "sancar", "name": "sancar"}}, "url": "https://github.com/hazelcast/hazelcast/commit/0e61a132e1555a0fadec1799479b630ed54982ef", "committedDate": "2020-07-22T13:30:52Z", "message": "test fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a922f976f024f09faac379eb8a6f792e5e4f22c", "author": {"user": {"login": "sancar", "name": "sancar"}}, "url": "https://github.com/hazelcast/hazelcast/commit/0a922f976f024f09faac379eb8a6f792e5e4f22c", "committedDate": "2020-07-23T10:50:15Z", "message": "Add caller stacktrace to rethrown RuntimeException\n\nWe have lots of places that we use the following pattern\n```\ntry {\n     invocationFuture.get()\n}catch(Exception e){\n    throw retrhow(e);\n}\n```\n\nIf the exception is RuntimeException, it is not wrapped and thrown directly. In that case, we can not follow where the exception is thrown from. Here is an example of a put from a member.\n\n```\njava.lang.RuntimeException: here comes the bug\n        at com.hazelcast.map.impl.operation.PutOperation.runInternal(PutOperation.java:36)\n        at com.hazelcast.map.impl.operation.MapOperation.run(MapOperation.java:112)\n        at com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:227)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:216)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:422)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:166)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:136)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)\n        at com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)\n```\n\n:\n```\ntry {\n     invocationFuture.get()\n}catch(Exception e){\n    throw retrhow(e);\n}\n```\n\nIf the exception is RuntimeException, it is not wrapped and thrown directly. In that case, we can not follow where the exception is thrown from. Here is an example of a put from a member.\n\n```\njava.lang.RuntimeException: here comes the bug\n        at com.hazelcast.map.impl.operation.PutOperation.runInternal(PutOperation.java:36)\n        at com.hazelcast.map.impl.operation.MapOperation.run(MapOperation.java:112)\n        at com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:227)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:216)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:422)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:166)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:136)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)\n        at com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)\n```\n\nSame problem on the client side:\n\n```\njava.lang.RuntimeException: here comes the bug\n        at com.hazelcast.map.impl.operation.PutOperation.runInternal(PutOperation.java:36)\n        at com.hazelcast.map.impl.operation.MapOperation.run(MapOperation.java:112)\n        at com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:227)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:216)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.run(OperationExecutorImpl.java:411)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.runOrExecute(OperationExecutorImpl.java:438)\n        at com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvokeLocal(Invocation.java:597)\n        at com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvoke(Invocation.java:582)\n        at com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke0(Invocation.java:541)\n        at com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke(Invocation.java:238)\n        at com.hazelcast.spi.impl.operationservice.impl.InvocationBuilderImpl.invoke(InvocationBuilderImpl.java:59)\n        at com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask.processInternal(AbstractPartitionMessageTask.java:51)\n        at com.hazelcast.client.impl.protocol.task.AbstractAsyncMessageTask.processMessage(AbstractAsyncMessageTask.java:71)\n        at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.initializeAndProcessMessage(AbstractMessageTask.java:153)\n        at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.run(AbstractMessageTask.java:116)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:180)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:172)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:140)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)\n        at com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)\n```\n\nThese exceptions should contain the stack trace of the caller as well. But they only have the remote stack trace.\n\nTo fix this, the tryWrapInSameClass is moved to ExceptionUtil to be used by rethrow. AbstractInvocationFuture uses methods\nfrom the ExceptionUtil.\n\nAfter the fix, the stacktrace of the same run for the member:\n\n```\njava.lang.RuntimeException: here comes the bug\n        at java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:627)\n        at com.hazelcast.internal.util.ExceptionUtil.tryWrapInSameClass(ExceptionUtil.java:233)\n        at com.hazelcast.internal.util.ExceptionUtil.wrapException(ExceptionUtil.java:138)\n        at com.hazelcast.internal.util.ExceptionUtil.peel(ExceptionUtil.java:114)\n        at com.hazelcast.internal.util.ExceptionUtil.peel(ExceptionUtil.java:120)\n        at com.hazelcast.internal.util.ExceptionUtil.peel(ExceptionUtil.java:73)\n        at com.hazelcast.internal.util.ExceptionUtil.rethrow(ExceptionUtil.java:148)\n        at com.hazelcast.map.impl.proxy.MapProxySupport.invokeOperation(MapProxySupport.java:484)\n        at com.hazelcast.map.impl.proxy.MapProxySupport.putInternal(MapProxySupport.java:411)\n        at com.hazelcast.map.impl.proxy.MapProxyImpl.put(MapProxyImpl.java:130)\n        at com.hazelcast.map.impl.proxy.MapProxyImpl.put(MapProxyImpl.java:120)\n        at XNode.onliteMember(XNode.java:28)\n        at XNode.main(XNode.java:14)\nCaused by: java.lang.RuntimeException: here comes the bug\n        at com.hazelcast.map.impl.operation.PutOperation.runInternal(PutOperation.java:36)\n        at com.hazelcast.map.impl.operation.MapOperation.run(MapOperation.java:112)\n        at com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:227)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:216)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:422)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:166)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:136)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)\n        at com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)\n```\n\nAnd the stacktrace of the same run for the client:\n\n```\njava.lang.RuntimeException: here comes the bug\n        at java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:627)\n        at com.hazelcast.internal.util.ExceptionUtil.tryWrapInSameClass(ExceptionUtil.java:233)\n        at com.hazelcast.internal.util.ExceptionUtil.wrapException(ExceptionUtil.java:138)\n        at com.hazelcast.internal.util.ExceptionUtil.peel(ExceptionUtil.java:114)\n        at com.hazelcast.internal.util.ExceptionUtil.peel(ExceptionUtil.java:120)\n        at com.hazelcast.internal.util.ExceptionUtil.peel(ExceptionUtil.java:73)\n        at com.hazelcast.internal.util.ExceptionUtil.rethrow(ExceptionUtil.java:148)\n        at com.hazelcast.client.impl.spi.ClientProxy.invokeOnPartition(ClientProxy.java:190)\n        at com.hazelcast.client.impl.spi.ClientProxy.invoke(ClientProxy.java:182)\n        at com.hazelcast.client.impl.proxy.ClientMapProxy.putInternal(ClientMapProxy.java:529)\n        at com.hazelcast.client.impl.proxy.ClientMapProxy.put(ClientMapProxy.java:261)\n        at XNode.onClient(XNode.java:41)\n        at XNode.main(XNode.java:15)\nCaused by: java.lang.RuntimeException: here comes the bug\n        at java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:627)\n        at com.hazelcast.internal.util.ExceptionUtil.tryWrapInSameClass(ExceptionUtil.java:233)\n        at com.hazelcast.internal.util.ExceptionUtil.wrapException(ExceptionUtil.java:138)\n        at com.hazelcast.internal.util.ExceptionUtil.peel(ExceptionUtil.java:114)\n        at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.peelIfNeeded(AbstractMessageTask.java:348)\n        at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.encodeException(AbstractMessageTask.java:275)\n        at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.sendClientMessage(AbstractMessageTask.java:269)\n        at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.handleProcessingFailure(AbstractMessageTask.java:194)\n        at com.hazelcast.client.impl.protocol.task.AbstractAsyncMessageTask.sendResponseOrHandleFailure(AbstractAsyncMessageTask.java:84)\n        at java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:774)\n        at java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:750)\n        at java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:456)\n        at com.hazelcast.internal.util.ConcurrencyUtil$1.execute(ConcurrencyUtil.java:39)\n        at java.util.concurrent.CompletableFuture$UniCompletion.claim(CompletableFuture.java:543)\n        at java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:765)\n        at java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:750)\n        at java.util.concurrent.CompletableFuture.uniWhenCompleteStage(CompletableFuture.java:795)\n        at java.util.concurrent.CompletableFuture.whenCompleteAsync(CompletableFuture.java:2163)\n        at com.hazelcast.client.impl.protocol.task.AbstractAsyncMessageTask.processMessage(AbstractAsyncMessageTask.java:73)\n        at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.initializeAndProcessMessage(AbstractMessageTask.java:153)\n        at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.run(AbstractMessageTask.java:116)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:180)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:172)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:140)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)\n        at com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)\nCaused by: java.lang.RuntimeException: here comes the bug\n        at com.hazelcast.map.impl.operation.PutOperation.runInternal(PutOperation.java:36)\n        at com.hazelcast.map.impl.operation.MapOperation.run(MapOperation.java:112)\n        at com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:227)\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:216)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.run(OperationExecutorImpl.java:411)\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.runOrExecute(OperationExecutorImpl.java:438)\n        at com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvokeLocal(Invocation.java:597)\n        at com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvoke(Invocation.java:582)\n        at com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke0(Invocation.java:541)\n        at com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke(Invocation.java:238)\n        at com.hazelcast.spi.impl.operationservice.impl.InvocationBuilderImpl.invoke(InvocationBuilderImpl.java:59)\n        at com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask.processInternal(AbstractPartitionMessageTask.java:51)\n        at com.hazelcast.client.impl.protocol.task.AbstractAsyncMessageTask.processMessage(AbstractAsyncMessageTask.java:71)\n        ... 7 more\n```\n\nfixes https://github.com/hazelcast/hazelcast/issues/17202"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9943cb26df0e4505c54b5efe3938f7f854a2d22", "author": {"user": {"login": "sancar", "name": "sancar"}}, "url": "https://github.com/hazelcast/hazelcast/commit/c9943cb26df0e4505c54b5efe3938f7f854a2d22", "committedDate": "2020-07-23T10:50:15Z", "message": "test fixes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0e61a132e1555a0fadec1799479b630ed54982ef", "author": {"user": {"login": "sancar", "name": "sancar"}}, "url": "https://github.com/hazelcast/hazelcast/commit/0e61a132e1555a0fadec1799479b630ed54982ef", "committedDate": "2020-07-22T13:30:52Z", "message": "test fixes"}, "afterCommit": {"oid": "c9943cb26df0e4505c54b5efe3938f7f854a2d22", "author": {"user": {"login": "sancar", "name": "sancar"}}, "url": "https://github.com/hazelcast/hazelcast/commit/c9943cb26df0e4505c54b5efe3938f7f854a2d22", "committedDate": "2020-07-23T10:50:15Z", "message": "test fixes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3565, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}