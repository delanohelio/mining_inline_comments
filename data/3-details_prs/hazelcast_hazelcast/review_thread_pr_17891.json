{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NTc4MDAx", "number": 17891, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwODowNDo1NFrOE9Gwag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwODowNDo1NFrOE9Gwag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNTA5MjkwOnYy", "diffSide": "RIGHT", "path": "hazelcast-all/src/test/java/com/hazelcast/it/DependencyReducedPomIT.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwODowNDo1NFrOH5nOWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwODoxMjo1MVrOH6P7_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE3MzUyOQ==", "bodyText": "@kwart @jerrinot I think we need to add similar fail safe to release automation, I will work on it, please let me know if you see that redundant after this test case.\n\nUpdate:\ncreated https://github.com/hazelcast/hazelcast-pipeline-library/issues/119 on automation side. Thanks @kwart for the guidance.", "url": "https://github.com/hazelcast/hazelcast/pull/17891#discussion_r530173529", "createdAt": "2020-11-25T08:04:54Z", "author": {"login": "lazerion"}, "path": "hazelcast-all/src/test/java/com/hazelcast/it/DependencyReducedPomIT.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.it;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.FileInputStream;\n+import java.util.Iterator;\n+\n+import javax.xml.namespace.NamespaceContext;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.xpath.XPath;\n+import javax.xml.xpath.XPathConstants;\n+import javax.xml.xpath.XPathFactory;\n+\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.junit.runner.RunWith;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.NodeList;\n+\n+import com.hazelcast.test.HazelcastParallelClassRunner;\n+import com.hazelcast.test.annotation.QuickTest;\n+\n+@RunWith(HazelcastParallelClassRunner.class)\n+@Category(QuickTest.class)\n+public class DependencyReducedPomIT {\n+\n+    @Test\n+    public void testZeroCompileScopedDeps() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6278a0e0d83994eaef8320c32ad97793e875520b"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE3NDYxOQ==", "bodyText": "@kwart I also see below when we execute mvn deploy\n also see 2 shade executions of sql  module\nINFO] --- maven-shade-plugin:3.2.4:shade (fat-jar) @ hazelcast-sql ---\n[INFO] --- maven-shade-plugin:3.2.4:shade (fat-shaded-jar) @ hazelcast-sql ---\n\ndo we need to do sth for it as well?", "url": "https://github.com/hazelcast/hazelcast/pull/17891#discussion_r530174619", "createdAt": "2020-11-25T08:06:58Z", "author": {"login": "lazerion"}, "path": "hazelcast-all/src/test/java/com/hazelcast/it/DependencyReducedPomIT.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.it;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.FileInputStream;\n+import java.util.Iterator;\n+\n+import javax.xml.namespace.NamespaceContext;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.xpath.XPath;\n+import javax.xml.xpath.XPathConstants;\n+import javax.xml.xpath.XPathFactory;\n+\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.junit.runner.RunWith;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.NodeList;\n+\n+import com.hazelcast.test.HazelcastParallelClassRunner;\n+import com.hazelcast.test.annotation.QuickTest;\n+\n+@RunWith(HazelcastParallelClassRunner.class)\n+@Category(QuickTest.class)\n+public class DependencyReducedPomIT {\n+\n+    @Test\n+    public void testZeroCompileScopedDeps() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE3MzUyOQ=="}, "originalCommit": {"oid": "6278a0e0d83994eaef8320c32ad97793e875520b"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI1NDIxNw==", "bodyText": "I think we need to add similar fail safe to release automation, I will work on it, please let me know if you see that redundant after this test case.\n\nWe should ask @devozerov for an explanation. I think the 2 different shaded artifacts are intentional, but I didn't dig into it to get the reasoning.", "url": "https://github.com/hazelcast/hazelcast/pull/17891#discussion_r530254217", "createdAt": "2020-11-25T10:11:05Z", "author": {"login": "kwart"}, "path": "hazelcast-all/src/test/java/com/hazelcast/it/DependencyReducedPomIT.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.it;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.FileInputStream;\n+import java.util.Iterator;\n+\n+import javax.xml.namespace.NamespaceContext;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.xpath.XPath;\n+import javax.xml.xpath.XPathConstants;\n+import javax.xml.xpath.XPathFactory;\n+\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.junit.runner.RunWith;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.NodeList;\n+\n+import com.hazelcast.test.HazelcastParallelClassRunner;\n+import com.hazelcast.test.annotation.QuickTest;\n+\n+@RunWith(HazelcastParallelClassRunner.class)\n+@Category(QuickTest.class)\n+public class DependencyReducedPomIT {\n+\n+    @Test\n+    public void testZeroCompileScopedDeps() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE3MzUyOQ=="}, "originalCommit": {"oid": "6278a0e0d83994eaef8320c32ad97793e875520b"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgzMjM3MA==", "bodyText": "In the SQL module we have two executions of the shade module:\n\nfat-shaded-jar - the default Jar with all dependencies merged into the hazelcast-sql.jar, this is what we publish\nslim-original-jar (previously fat-jar) produces a JAR that is convenient for the Jet team development process, it is not published (@gierlachg may provide additional details, my explanation could be inaccurate)", "url": "https://github.com/hazelcast/hazelcast/pull/17891#discussion_r530832370", "createdAt": "2020-11-26T07:56:22Z", "author": {"login": "devozerov"}, "path": "hazelcast-all/src/test/java/com/hazelcast/it/DependencyReducedPomIT.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.it;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.FileInputStream;\n+import java.util.Iterator;\n+\n+import javax.xml.namespace.NamespaceContext;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.xpath.XPath;\n+import javax.xml.xpath.XPathConstants;\n+import javax.xml.xpath.XPathFactory;\n+\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.junit.runner.RunWith;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.NodeList;\n+\n+import com.hazelcast.test.HazelcastParallelClassRunner;\n+import com.hazelcast.test.annotation.QuickTest;\n+\n+@RunWith(HazelcastParallelClassRunner.class)\n+@Category(QuickTest.class)\n+public class DependencyReducedPomIT {\n+\n+    @Test\n+    public void testZeroCompileScopedDeps() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE3MzUyOQ=="}, "originalCommit": {"oid": "6278a0e0d83994eaef8320c32ad97793e875520b"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg0MDU3NA==", "bodyText": "Hmm, why it is not published? We rely on it.", "url": "https://github.com/hazelcast/hazelcast/pull/17891#discussion_r530840574", "createdAt": "2020-11-26T08:12:51Z", "author": {"login": "gierlachg"}, "path": "hazelcast-all/src/test/java/com/hazelcast/it/DependencyReducedPomIT.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.it;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.FileInputStream;\n+import java.util.Iterator;\n+\n+import javax.xml.namespace.NamespaceContext;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.xpath.XPath;\n+import javax.xml.xpath.XPathConstants;\n+import javax.xml.xpath.XPathFactory;\n+\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.junit.runner.RunWith;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.NodeList;\n+\n+import com.hazelcast.test.HazelcastParallelClassRunner;\n+import com.hazelcast.test.annotation.QuickTest;\n+\n+@RunWith(HazelcastParallelClassRunner.class)\n+@Category(QuickTest.class)\n+public class DependencyReducedPomIT {\n+\n+    @Test\n+    public void testZeroCompileScopedDeps() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE3MzUyOQ=="}, "originalCommit": {"oid": "6278a0e0d83994eaef8320c32ad97793e875520b"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 105, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}