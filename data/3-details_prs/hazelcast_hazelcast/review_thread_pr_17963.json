{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1OTAyMDMw", "number": 17963, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNzoyMjo0N1rOFD2ajw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwOToyNDoyNlrOFD5LUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NTgxNTgzOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/client/config/ClientFailoverConfig.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNzoyMjo0N1rOIDsLvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNzo0NDoxN1rOIDsvxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc0MDU0Mw==", "bodyText": "@puzpuzpuz First of all, thanks for the pr. Not sure how did I miss Javadoc on a public API.\nIt did not understand what you mean by client element.\nAnd I think we explain much more here. The term connection retries can easily confuse users. Similarly I would replace the same term in the javadoc of getTryCount.\nA suggestion from me:\nSets the count of attempts to connect to a cluster. For each alternative cluster, a client will try to connect to the cluster respecting related ConnectionRetryConfig. When the client can not connect a cluster, it will try to connect tryCount times going over the alternative client configs in a round-robin session.\nThis is triggered at the start and also when the client disconnects from the cluster and can not connect back to it by exhausting attempts described in ConnectionRetryConfig. In that case, the client will continue from where it is left off in ClientConfig lists, and try the next one again in round-robin tryCount times.", "url": "https://github.com/hazelcast/hazelcast/pull/17963#discussion_r540740543", "createdAt": "2020-12-11T07:22:47Z", "author": {"login": "sancar"}, "path": "hazelcast/src/main/java/com/hazelcast/client/config/ClientFailoverConfig.java", "diffHunk": "@@ -79,27 +93,62 @@ public static ClientFailoverConfig load() {\n         }\n     }\n \n+    /**\n+     * Adds the client config to the end of the alternative client configurations list.\n+     *\n+     * @param clientConfig the ClientConfig to add\n+     * @return this for chaining\n+     */\n     public ClientFailoverConfig addClientConfig(ClientConfig clientConfig) {\n         validateClientConfig(clientConfig);\n         clientConfigs.add(clientConfig);\n         return this;\n     }\n \n+    /**\n+     * Sets the count of connection retries by the client to the alternative clusters.\n+     * <p>\n+     * When this value is reached and the client still could not connect to a cluster,\n+     * the client shuts down. Note that this value applies to the alternative clusters\n+     * whose configurations are provided with the client element.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a71951f27bbcc102fdc87ce7cd919f2bede6b725"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc0MjkzOA==", "bodyText": "It did not understand what you mean by client element.\n\nThat's a 1-to-1 copy from our ref manual. See: https://docs.hazelcast.org/docs/latest/manual/html-single/index.html#configuring-without-cname\nI'm going to apply proposed changes, but the same should be done with the ref manual, I guess. cc @Serdaro", "url": "https://github.com/hazelcast/hazelcast/pull/17963#discussion_r540742938", "createdAt": "2020-12-11T07:28:33Z", "author": {"login": "puzpuzpuz"}, "path": "hazelcast/src/main/java/com/hazelcast/client/config/ClientFailoverConfig.java", "diffHunk": "@@ -79,27 +93,62 @@ public static ClientFailoverConfig load() {\n         }\n     }\n \n+    /**\n+     * Adds the client config to the end of the alternative client configurations list.\n+     *\n+     * @param clientConfig the ClientConfig to add\n+     * @return this for chaining\n+     */\n     public ClientFailoverConfig addClientConfig(ClientConfig clientConfig) {\n         validateClientConfig(clientConfig);\n         clientConfigs.add(clientConfig);\n         return this;\n     }\n \n+    /**\n+     * Sets the count of connection retries by the client to the alternative clusters.\n+     * <p>\n+     * When this value is reached and the client still could not connect to a cluster,\n+     * the client shuts down. Note that this value applies to the alternative clusters\n+     * whose configurations are provided with the client element.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc0MDU0Mw=="}, "originalCommit": {"oid": "a71951f27bbcc102fdc87ce7cd919f2bede6b725"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc0NDAyMg==", "bodyText": "Addressed in 98cb759", "url": "https://github.com/hazelcast/hazelcast/pull/17963#discussion_r540744022", "createdAt": "2020-12-11T07:31:13Z", "author": {"login": "puzpuzpuz"}, "path": "hazelcast/src/main/java/com/hazelcast/client/config/ClientFailoverConfig.java", "diffHunk": "@@ -79,27 +93,62 @@ public static ClientFailoverConfig load() {\n         }\n     }\n \n+    /**\n+     * Adds the client config to the end of the alternative client configurations list.\n+     *\n+     * @param clientConfig the ClientConfig to add\n+     * @return this for chaining\n+     */\n     public ClientFailoverConfig addClientConfig(ClientConfig clientConfig) {\n         validateClientConfig(clientConfig);\n         clientConfigs.add(clientConfig);\n         return this;\n     }\n \n+    /**\n+     * Sets the count of connection retries by the client to the alternative clusters.\n+     * <p>\n+     * When this value is reached and the client still could not connect to a cluster,\n+     * the client shuts down. Note that this value applies to the alternative clusters\n+     * whose configurations are provided with the client element.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc0MDU0Mw=="}, "originalCommit": {"oid": "a71951f27bbcc102fdc87ce7cd919f2bede6b725"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc0OTc2NQ==", "bodyText": "I see. the meaning of the client element makes sense since it is talking about the client tag in the XML.\nAfter reading the reference manual, I have realized that tryCount means trying the whole list tryCount times.\nAfter that, I read my suggestion, and not sure if I could make it clear also.", "url": "https://github.com/hazelcast/hazelcast/pull/17963#discussion_r540749765", "createdAt": "2020-12-11T07:44:17Z", "author": {"login": "sancar"}, "path": "hazelcast/src/main/java/com/hazelcast/client/config/ClientFailoverConfig.java", "diffHunk": "@@ -79,27 +93,62 @@ public static ClientFailoverConfig load() {\n         }\n     }\n \n+    /**\n+     * Adds the client config to the end of the alternative client configurations list.\n+     *\n+     * @param clientConfig the ClientConfig to add\n+     * @return this for chaining\n+     */\n     public ClientFailoverConfig addClientConfig(ClientConfig clientConfig) {\n         validateClientConfig(clientConfig);\n         clientConfigs.add(clientConfig);\n         return this;\n     }\n \n+    /**\n+     * Sets the count of connection retries by the client to the alternative clusters.\n+     * <p>\n+     * When this value is reached and the client still could not connect to a cluster,\n+     * the client shuts down. Note that this value applies to the alternative clusters\n+     * whose configurations are provided with the client element.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc0MDU0Mw=="}, "originalCommit": {"oid": "a71951f27bbcc102fdc87ce7cd919f2bede6b725"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjI1MzQ3OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/client/config/ClientFailoverConfig.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwOToyMDo1NlrOIDwBWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDo1NzozMVrOIDzs6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgwMzQxOQ==", "bodyText": "Looking at the implementation, it seems that clusterName also does not have to match", "url": "https://github.com/hazelcast/hazelcast/pull/17963#discussion_r540803419", "createdAt": "2020-12-11T09:20:56Z", "author": {"login": "mdumandag"}, "path": "hazelcast/src/main/java/com/hazelcast/client/config/ClientFailoverConfig.java", "diffHunk": "@@ -31,18 +31,32 @@\n import static com.hazelcast.client.config.ClientConnectionStrategyConfig.ReconnectMode.OFF;\n \n /**\n- * Config class to configure multiple client configs to be used by single client instance\n- * The client will try to connect them in given order.\n- * When the connected cluster fails or the client blacklisted from the cluster via the management center, the client will\n+ * Config class to configure multiple client configs to be used by single client instance.\n+ * The client will try to connect them in given order. When the connected cluster fails\n+ * or the client blacklisted from the cluster via the Management Center, the client will\n  * search for alternative clusters with given configs.\n+ * <p>\n+ * The client configurations must be exactly the same except the following configuration options:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf58f0389c8c153e560c5932366c5efcdc354fb4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg2MjM4MA==", "bodyText": "Yes, you're right. I took the list from the ref manual. cc @Serdaro", "url": "https://github.com/hazelcast/hazelcast/pull/17963#discussion_r540862380", "createdAt": "2020-12-11T10:55:17Z", "author": {"login": "puzpuzpuz"}, "path": "hazelcast/src/main/java/com/hazelcast/client/config/ClientFailoverConfig.java", "diffHunk": "@@ -31,18 +31,32 @@\n import static com.hazelcast.client.config.ClientConnectionStrategyConfig.ReconnectMode.OFF;\n \n /**\n- * Config class to configure multiple client configs to be used by single client instance\n- * The client will try to connect them in given order.\n- * When the connected cluster fails or the client blacklisted from the cluster via the management center, the client will\n+ * Config class to configure multiple client configs to be used by single client instance.\n+ * The client will try to connect them in given order. When the connected cluster fails\n+ * or the client blacklisted from the cluster via the Management Center, the client will\n  * search for alternative clusters with given configs.\n+ * <p>\n+ * The client configurations must be exactly the same except the following configuration options:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgwMzQxOQ=="}, "originalCommit": {"oid": "cf58f0389c8c153e560c5932366c5efcdc354fb4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg2MzcyMw==", "bodyText": "Addressed in ce976c3", "url": "https://github.com/hazelcast/hazelcast/pull/17963#discussion_r540863723", "createdAt": "2020-12-11T10:57:31Z", "author": {"login": "puzpuzpuz"}, "path": "hazelcast/src/main/java/com/hazelcast/client/config/ClientFailoverConfig.java", "diffHunk": "@@ -31,18 +31,32 @@\n import static com.hazelcast.client.config.ClientConnectionStrategyConfig.ReconnectMode.OFF;\n \n /**\n- * Config class to configure multiple client configs to be used by single client instance\n- * The client will try to connect them in given order.\n- * When the connected cluster fails or the client blacklisted from the cluster via the management center, the client will\n+ * Config class to configure multiple client configs to be used by single client instance.\n+ * The client will try to connect them in given order. When the connected cluster fails\n+ * or the client blacklisted from the cluster via the Management Center, the client will\n  * search for alternative clusters with given configs.\n+ * <p>\n+ * The client configurations must be exactly the same except the following configuration options:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgwMzQxOQ=="}, "originalCommit": {"oid": "cf58f0389c8c153e560c5932366c5efcdc354fb4"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjI2ODMyOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/client/config/ClientFailoverConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwOToyNDoyNlrOIDwKFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDo1NzoyNFrOIDzswA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgwNTY1NA==", "bodyText": "Not related to these changes, but while you are on it, could you also fix the line here https://github.com/hazelcast/hazelcast/blob/master/hazelcast/src/main/java/com/hazelcast/client/impl/clientside/FailoverClientConfigSupport.java#L228\nIt should be something like network:outboundPorts instead of network:smartRouting", "url": "https://github.com/hazelcast/hazelcast/pull/17963#discussion_r540805654", "createdAt": "2020-12-11T09:24:26Z", "author": {"login": "mdumandag"}, "path": "hazelcast/src/main/java/com/hazelcast/client/config/ClientFailoverConfig.java", "diffHunk": "@@ -31,18 +31,32 @@\n import static com.hazelcast.client.config.ClientConnectionStrategyConfig.ReconnectMode.OFF;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf58f0389c8c153e560c5932366c5efcdc354fb4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg2MzY4MA==", "bodyText": "Sure. Addressed in ce976c3", "url": "https://github.com/hazelcast/hazelcast/pull/17963#discussion_r540863680", "createdAt": "2020-12-11T10:57:24Z", "author": {"login": "puzpuzpuz"}, "path": "hazelcast/src/main/java/com/hazelcast/client/config/ClientFailoverConfig.java", "diffHunk": "@@ -31,18 +31,32 @@\n import static com.hazelcast.client.config.ClientConnectionStrategyConfig.ReconnectMode.OFF;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgwNTY1NA=="}, "originalCommit": {"oid": "cf58f0389c8c153e560c5932366c5efcdc354fb4"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 16, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}