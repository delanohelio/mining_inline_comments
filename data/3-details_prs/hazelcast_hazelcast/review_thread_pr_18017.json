{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2NTEzNTM2", "number": 18017, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQwNzoyMDoyNVrOFOftlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQwNzoyMDoyNVrOFOftlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNzQzOTU2OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/topic/MessageListener.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQwNzoyMDoyNVrOITSXUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTo1MjoxNVrOITq-YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzA5NDczOQ==", "bodyText": "Will it always be called from the same thread?", "url": "https://github.com/hazelcast/hazelcast/pull/18017#discussion_r557094739", "createdAt": "2021-01-14T07:20:25Z", "author": {"login": "ihsandemir"}, "path": "hazelcast/src/main/java/com/hazelcast/topic/MessageListener.java", "diffHunk": "@@ -20,23 +20,23 @@\n \n /**\n  * Message listener for {@link ITopic}.\n+ * <p>\n+ * A MessageListener will never be called concurrently (provided that it's not registered twice). So there\n+ * is no need to synchronize access to the state it reads or writes. Also there is no need to synchronize", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "908e10269152d51113ddc90db23cc991f4fb8bd8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzEzOTM4NA==", "bodyText": "Not necessarily from the same, but there will be happens-before relation between the previous and next calls.", "url": "https://github.com/hazelcast/hazelcast/pull/18017#discussion_r557139384", "createdAt": "2021-01-14T07:55:49Z", "author": {"login": "viliam-durina"}, "path": "hazelcast/src/main/java/com/hazelcast/topic/MessageListener.java", "diffHunk": "@@ -20,23 +20,23 @@\n \n /**\n  * Message listener for {@link ITopic}.\n+ * <p>\n+ * A MessageListener will never be called concurrently (provided that it's not registered twice). So there\n+ * is no need to synchronize access to the state it reads or writes. Also there is no need to synchronize", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzA5NDczOQ=="}, "originalCommit": {"oid": "908e10269152d51113ddc90db23cc991f4fb8bd8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzI2NDM2Mw==", "bodyText": "Ok, but if can be called from different threads than the shared state needs to be protected, right?", "url": "https://github.com/hazelcast/hazelcast/pull/18017#discussion_r557264363", "createdAt": "2021-01-14T09:43:19Z", "author": {"login": "ihsandemir"}, "path": "hazelcast/src/main/java/com/hazelcast/topic/MessageListener.java", "diffHunk": "@@ -20,23 +20,23 @@\n \n /**\n  * Message listener for {@link ITopic}.\n+ * <p>\n+ * A MessageListener will never be called concurrently (provided that it's not registered twice). So there\n+ * is no need to synchronize access to the state it reads or writes. Also there is no need to synchronize", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzA5NDczOQ=="}, "originalCommit": {"oid": "908e10269152d51113ddc90db23cc991f4fb8bd8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ5Nzk1Mw==", "bodyText": "Nope if the environment ensures h-b relation...\nFor example\nint[] value = {10};\nThread t = new Thread(() -> {value[0] = 20;});\nt.start();\nt.join();\nSystem.out.println(value[0]);\nvalue[0] is accessed from 2 threads in this piece of code, but doesn't need to be synchronized or volatile. Access from 2 threads doesn't imply it's concurrent.", "url": "https://github.com/hazelcast/hazelcast/pull/18017#discussion_r557497953", "createdAt": "2021-01-14T15:52:15Z", "author": {"login": "viliam-durina"}, "path": "hazelcast/src/main/java/com/hazelcast/topic/MessageListener.java", "diffHunk": "@@ -20,23 +20,23 @@\n \n /**\n  * Message listener for {@link ITopic}.\n+ * <p>\n+ * A MessageListener will never be called concurrently (provided that it's not registered twice). So there\n+ * is no need to synchronize access to the state it reads or writes. Also there is no need to synchronize", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzA5NDczOQ=="}, "originalCommit": {"oid": "908e10269152d51113ddc90db23cc991f4fb8bd8"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 61, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}