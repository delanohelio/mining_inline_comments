{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxMTU1MzE4", "number": 17237, "title": "Integrate global HD index into SQL engine", "bodyText": "On the query plan construction step select index for full scans\nPlan creation unit testing", "createdAt": "2020-07-17T14:16:15Z", "url": "https://github.com/hazelcast/hazelcast/pull/17237", "merged": true, "mergeCommit": {"oid": "89bda850443022282321d9dc044270c7b4a16fcd"}, "closed": true, "closedAt": "2020-07-21T05:26:17Z", "author": {"login": "petrpleshachkov"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc109vRABqjM1NTg0NjQyMDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc23Pg5gH2gAyNDUxMTU1MzE4Ojk1ZGM3NGVhMDRhZDk1ZjRjYTE5NTY1NGQ5Y2JiZTMxMWJhOTk5Mzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5b872af7d88af80ddc63e10efd08ba5d2f01446a", "author": {"user": {"login": "petrpleshachkov", "name": null}}, "url": "https://github.com/hazelcast/hazelcast/commit/5b872af7d88af80ddc63e10efd08ba5d2f01446a", "committedDate": "2020-07-17T13:55:17Z", "message": "Integrate global HD index into SQL engine\n\n- On the query plan construction step select index for full scans\n- Plan creation unit testing"}, "afterCommit": {"oid": "a9cebaaaf8d4a988864a5e076e5718adb72b765c", "author": {"user": {"login": "petrpleshachkov", "name": null}}, "url": "https://github.com/hazelcast/hazelcast/commit/a9cebaaaf8d4a988864a5e076e5718adb72b765c", "committedDate": "2020-07-17T14:39:51Z", "message": "Rebase"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a9cebaaaf8d4a988864a5e076e5718adb72b765c", "author": {"user": {"login": "petrpleshachkov", "name": null}}, "url": "https://github.com/hazelcast/hazelcast/commit/a9cebaaaf8d4a988864a5e076e5718adb72b765c", "committedDate": "2020-07-17T14:39:51Z", "message": "Rebase"}, "afterCommit": {"oid": "08e153c72645f91ed3401b276d4794c329fec58e", "author": {"user": {"login": "petrpleshachkov", "name": null}}, "url": "https://github.com/hazelcast/hazelcast/commit/08e153c72645f91ed3401b276d4794c329fec58e", "committedDate": "2020-07-17T14:47:47Z", "message": "Integrate global HD index into SQL engine\n\n-On the query plan construction step select index for full scans\n- Plan creation unit testing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMzMwMDg3", "url": "https://github.com/hazelcast/hazelcast/pull/17237#pullrequestreview-451330087", "createdAt": "2020-07-20T06:36:41Z", "commit": {"oid": "08e153c72645f91ed3401b276d4794c329fec58e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjozNjo0MVrOGz7C2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjozNjo0MVrOGz7C2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5Nzk0Ng==", "bodyText": "What is the reason of this change? It is not needed for compilation in IDE. Is it required by Jenkins?", "url": "https://github.com/hazelcast/hazelcast/pull/17237#discussion_r457097946", "createdAt": "2020-07-20T06:36:41Z", "author": {"login": "devozerov"}, "path": "hazelcast-sql/pom.xml", "diffHunk": "@@ -73,6 +73,20 @@\n                     </execution>\n                 </executions>\n             </plugin>\n+\n+            <plugin>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08e153c72645f91ed3401b276d4794c329fec58e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMzMwNTk5", "url": "https://github.com/hazelcast/hazelcast/pull/17237#pullrequestreview-451330599", "createdAt": "2020-07-20T06:37:46Z", "commit": {"oid": "08e153c72645f91ed3401b276d4794c329fec58e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjozNzo0NlrOGz7FRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjozNzo0NlrOGz7FRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5ODU2NA==", "bodyText": "Do we support HD for replicated maps? I thought no.\nEven if yes - we do not have indexes support for replicated maps, therefore they will never work with HD. No need to pass this flag to ReplicatedMapTable.", "url": "https://github.com/hazelcast/hazelcast/pull/17237#discussion_r457098564", "createdAt": "2020-07-20T06:37:46Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/connector/LocalReplicatedMapConnector.java", "diffHunk": "@@ -78,6 +78,8 @@ public Table createTable(\n \n         long estimatedRowCount = stores.size() * nodeEngine.getPartitionService().getPartitionCount();\n \n+        boolean nativeMemoryEnabled = nodeEngine.getConfig().getNativeMemoryConfig().isEnabled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08e153c72645f91ed3401b276d4794c329fec58e"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMzMxODcx", "url": "https://github.com/hazelcast/hazelcast/pull/17237#pullrequestreview-451331871", "createdAt": "2020-07-20T06:40:35Z", "commit": {"oid": "08e153c72645f91ed3401b276d4794c329fec58e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjo0MDozNVrOGz7LVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjo0MDozNVrOGz7LVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEwMDExNg==", "bodyText": "This flag looks suspicious to me. Even though an instance may have native memory enabled, this doesn't mean that the concrete map uses NATIVE format.", "url": "https://github.com/hazelcast/hazelcast/pull/17237#discussion_r457100116", "createdAt": "2020-07-20T06:40:35Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/connector/LocalPartitionedMapConnector.java", "diffHunk": "@@ -85,6 +85,7 @@ public Table createTable(\n         long estimatedRowCount = estimatePartitionedMapRowCount(nodeEngine, context, mapName);\n         List<MapTableIndex> indexes = container != null ? getPartitionedMapIndexes(container, fields) : emptyList();\n         int distributionFieldOrdinal = container != null ? getPartitionedMapDistributionField(container, context, fields) : -1;\n+        boolean nativeMemoryEnabled = nodeEngine.getConfig().getNativeMemoryConfig().isEnabled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08e153c72645f91ed3401b276d4794c329fec58e"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMzMyODE1", "url": "https://github.com/hazelcast/hazelcast/pull/17237#pullrequestreview-451332815", "createdAt": "2020-07-20T06:42:39Z", "commit": {"oid": "08e153c72645f91ed3401b276d4794c329fec58e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjo0MjozOVrOGz7PsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjo0MjozOVrOGz7PsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEwMTIzMg==", "bodyText": "I think this flag should be in the PartitionedMapTable, because replicated maps do not support indexes, and hence can never be used with HD. Old logic already handles this properly.", "url": "https://github.com/hazelcast/hazelcast/pull/17237#discussion_r457101232", "createdAt": "2020-07-20T06:42:39Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/schema/map/AbstractMapTable.java", "diffHunk": "@@ -37,6 +37,7 @@\n     private final UpsertTargetDescriptor keyUpsertDescriptor;\n     private final UpsertTargetDescriptor valueUpsertDescriptor;\n     private final QueryException exception;\n+    private final boolean nativeMemoryEnabled;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08e153c72645f91ed3401b276d4794c329fec58e"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMzMzMTcx", "url": "https://github.com/hazelcast/hazelcast/pull/17237#pullrequestreview-451333171", "createdAt": "2020-07-20T06:43:23Z", "commit": {"oid": "08e153c72645f91ed3401b276d4794c329fec58e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjo0MzoyNFrOGz7RJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjo0MzoyNFrOGz7RJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEwMTYwNg==", "bodyText": "Same as in other places: this is not needed for replicated maps", "url": "https://github.com/hazelcast/hazelcast/pull/17237#discussion_r457101606", "createdAt": "2020-07-20T06:43:24Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/schema/map/ReplicatedMapTableResolver.java", "diffHunk": "@@ -96,6 +96,8 @@ private ReplicatedMapTable createTable(ReplicatedMapService mapService, String n\n \n                 long estimatedRowCount = stores.size() * nodeEngine.getPartitionService().getPartitionCount();\n \n+                boolean nativeMemoryEnabled = nodeEngine.getConfig().getNativeMemoryConfig().isEnabled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08e153c72645f91ed3401b276d4794c329fec58e"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMzM3MDYy", "url": "https://github.com/hazelcast/hazelcast/pull/17237#pullrequestreview-451337062", "createdAt": "2020-07-20T06:51:26Z", "commit": {"oid": "08e153c72645f91ed3401b276d4794c329fec58e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjo1MToyNlrOGz7jhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjo1MToyNlrOGz7jhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEwNjMwOQ==", "bodyText": "The error message is not very intuitive, because from the user perspective there is no \"scan\", but instead, there is an access to a table. I would change the message to something like this:\nCannot query IMap <name> with InMemoryFormat.NATIVE because it does not have indexes (please add at least one index to query this IMap)", "url": "https://github.com/hazelcast/hazelcast/pull/17237#discussion_r457106309", "createdAt": "2020-07-20T06:51:26Z", "author": {"login": "devozerov"}, "path": "hazelcast-sql/src/main/java/com/hazelcast/sql/impl/calcite/opt/physical/visitor/PlanCreateVisitor.java", "diffHunk": "@@ -277,9 +277,15 @@ private static SqlRowMetadata createRowMetadata(List<String> columnNames, List<Q\n \n     @Override\n     public void onMapScan(MapScanPhysicalRel rel) {\n-        HazelcastTable hazelcastTable = rel.getTableUnwrapped();\n         AbstractMapTable table = rel.getMap();\n \n+        if (table.nativeMemoryEnabled()) {\n+            throw QueryException.error(\"IMap scan with InMemoryFormat.NATIVE is not supported: \" + table.getName()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08e153c72645f91ed3401b276d4794c329fec58e"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMzM4MTA0", "url": "https://github.com/hazelcast/hazelcast/pull/17237#pullrequestreview-451338104", "createdAt": "2020-07-20T06:53:27Z", "commit": {"oid": "08e153c72645f91ed3401b276d4794c329fec58e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjo1MzoyN1rOGz7oLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjo1MzoyN1rOGz7oLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEwNzUwMg==", "bodyText": "I would propose to have two overloads, to avoid complication for non-HD tests (and the majority of tests are non-HD):\npartitionedTable(name, fields, indexes, rowCount)\npartitionedTable(name, fields, indexes, rowCount, nativeMemoryEnabled)", "url": "https://github.com/hazelcast/hazelcast/pull/17237#discussion_r457107502", "createdAt": "2020-07-20T06:53:27Z", "author": {"login": "devozerov"}, "path": "hazelcast-sql/src/test/java/com/hazelcast/sql/impl/calcite/opt/OptimizerTestSupport.java", "diffHunk": "@@ -155,22 +155,24 @@ private static PhysicalRel optimizePhysicalInternal(\n     }\n \n     protected static HazelcastTable partitionedTable(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08e153c72645f91ed3401b276d4794c329fec58e"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMzQwMDg0", "url": "https://github.com/hazelcast/hazelcast/pull/17237#pullrequestreview-451340084", "createdAt": "2020-07-20T06:57:07Z", "commit": {"oid": "08e153c72645f91ed3401b276d4794c329fec58e"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMzQwNzYw", "url": "https://github.com/hazelcast/hazelcast/pull/17237#pullrequestreview-451340760", "createdAt": "2020-07-20T06:58:28Z", "commit": {"oid": "08e153c72645f91ed3401b276d4794c329fec58e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjo1ODoyOFrOGz70jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjo1ODoyOFrOGz70jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzExMDY3MA==", "bodyText": "Same problem as in other places: this IMap is not necessarily HD map.", "url": "https://github.com/hazelcast/hazelcast/pull/17237#discussion_r457110670", "createdAt": "2020-07-20T06:58:28Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/schema/map/PartitionedMapTableResolver.java", "diffHunk": "@@ -130,6 +124,8 @@ private PartitionedMapTable createTable(\n             int distributionFieldOrdinal =\n                 MapTableUtils.getPartitionedMapDistributionField(mapContainer, context, resolved.getFields());\n \n+            boolean nativeMemoryEnabled = context.getNodeEngine().getConfig().getNativeMemoryConfig().isEnabled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08e153c72645f91ed3401b276d4794c329fec58e"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "644dabe5153f3d17bffb1bb7e82f9bd7296a7c97", "author": {"user": {"login": "petrpleshachkov", "name": null}}, "url": "https://github.com/hazelcast/hazelcast/commit/644dabe5153f3d17bffb1bb7e82f9bd7296a7c97", "committedDate": "2020-07-20T19:12:41Z", "message": "Integrate global HD index into SQL engine\n\n-On the query plan construction step select index for full scans\n- Plan creation unit testing"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "08e153c72645f91ed3401b276d4794c329fec58e", "author": {"user": {"login": "petrpleshachkov", "name": null}}, "url": "https://github.com/hazelcast/hazelcast/commit/08e153c72645f91ed3401b276d4794c329fec58e", "committedDate": "2020-07-17T14:47:47Z", "message": "Integrate global HD index into SQL engine\n\n-On the query plan construction step select index for full scans\n- Plan creation unit testing"}, "afterCommit": {"oid": "644dabe5153f3d17bffb1bb7e82f9bd7296a7c97", "author": {"user": {"login": "petrpleshachkov", "name": null}}, "url": "https://github.com/hazelcast/hazelcast/commit/644dabe5153f3d17bffb1bb7e82f9bd7296a7c97", "committedDate": "2020-07-20T19:12:41Z", "message": "Integrate global HD index into SQL engine\n\n-On the query plan construction step select index for full scans\n- Plan creation unit testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95dc74ea04ad95f4ca195654d9cbbe311ba99938", "author": {"user": {"login": "petrpleshachkov", "name": null}}, "url": "https://github.com/hazelcast/hazelcast/commit/95dc74ea04ad95f4ca195654d9cbbe311ba99938", "committedDate": "2020-07-20T19:59:43Z", "message": "Checkstyle"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3577, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}