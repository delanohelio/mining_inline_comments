{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3MzIwMjUw", "number": 17549, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNDoxMzoyNVrOEjnP3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNDoxMzoyNVrOEjnP3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1Nzc4NjUyOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/AbstractSqlResult.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNDoxMzoyNVrOHSD94Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNToxNTozMFrOHSG8Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwMTQwOQ==", "bodyText": "Minor: exception that caused?", "url": "https://github.com/hazelcast/hazelcast/pull/17549#discussion_r488701409", "createdAt": "2020-09-15T14:13:25Z", "author": {"login": "petrpleshachkov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/AbstractSqlResult.java", "diffHunk": "@@ -20,18 +20,24 @@\n import com.hazelcast.sql.SqlRow;\n \n import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n \n public abstract class AbstractSqlResult implements SqlResult {\n \n     public abstract QueryId getQueryId();\n \n-    public abstract void closeOnError(QueryException exception);\n+    /**\n+     * Closes the result, releasing all the resources.\n+     *\n+     * @param exception exception that cause the close operation or {@code null} if the query is closed due to user request", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5150d976f340be29039777c18d2065757b5dd319"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc1MDE3NQ==", "bodyText": "Fixed", "url": "https://github.com/hazelcast/hazelcast/pull/17549#discussion_r488750175", "createdAt": "2020-09-15T15:15:30Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/AbstractSqlResult.java", "diffHunk": "@@ -20,18 +20,24 @@\n import com.hazelcast.sql.SqlRow;\n \n import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n \n public abstract class AbstractSqlResult implements SqlResult {\n \n     public abstract QueryId getQueryId();\n \n-    public abstract void closeOnError(QueryException exception);\n+    /**\n+     * Closes the result, releasing all the resources.\n+     *\n+     * @param exception exception that cause the close operation or {@code null} if the query is closed due to user request", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwMTQwOQ=="}, "originalCommit": {"oid": "5150d976f340be29039777c18d2065757b5dd319"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 228, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}