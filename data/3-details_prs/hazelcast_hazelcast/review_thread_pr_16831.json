{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2MzU0NzYx", "number": 16831, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDo0Nzo0MFrODtJSIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDo0Nzo0MFrODtJSIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjY0NjEwOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/SerializationServiceV1.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDo0Nzo0MFrOF-ZgOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwOTozMToyOFrOF-4YxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3Mzg4Mw==", "bodyText": "Shouldn't this be cd.getClassId() ?", "url": "https://github.com/hazelcast/hazelcast/pull/16831#discussion_r400973883", "createdAt": "2020-03-31T14:47:40Z", "author": {"login": "mdumandag"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/SerializationServiceV1.java", "diffHunk": "@@ -233,33 +233,43 @@ private void registerJavaTypeSerializers() {\n     }\n \n     public void registerClassDefinitions(Collection<ClassDefinition> classDefinitions, boolean checkClassDefErrors) {\n-        final Map<Integer, ClassDefinition> classDefMap = createHashMap(classDefinitions.size());\n+        Map<Integer, Map<Integer, ClassDefinition>> factoryMap = createHashMap(classDefinitions.size());\n         for (ClassDefinition cd : classDefinitions) {\n+            int factoryId = cd.getFactoryId();\n+            Map<Integer, ClassDefinition> classDefMap = factoryMap.computeIfAbsent(factoryId, k -> new HashMap<>());\n             if (classDefMap.containsKey(cd.getClassId())) {\n-                throw new HazelcastSerializationException(\"Duplicate registration found for class-id[\" + cd.getClassId() + \"]!\");\n+                throw new HazelcastSerializationException(\"Duplicate registration found for factory-id : \"\n+                        + factoryId + \", class-id \" + cd.getClassId());\n             }\n-            classDefMap.put(cd.getClassId(), cd);\n+            classDefMap.put(factoryId, cd);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "781ca35b62d3fbca74cfaa9d9f5551d55e83f5f6"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ3OTg3Ng==", "bodyText": "Yes, you are right. Fixing it.", "url": "https://github.com/hazelcast/hazelcast/pull/16831#discussion_r401479876", "createdAt": "2020-04-01T09:31:28Z", "author": {"login": "sancar"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/SerializationServiceV1.java", "diffHunk": "@@ -233,33 +233,43 @@ private void registerJavaTypeSerializers() {\n     }\n \n     public void registerClassDefinitions(Collection<ClassDefinition> classDefinitions, boolean checkClassDefErrors) {\n-        final Map<Integer, ClassDefinition> classDefMap = createHashMap(classDefinitions.size());\n+        Map<Integer, Map<Integer, ClassDefinition>> factoryMap = createHashMap(classDefinitions.size());\n         for (ClassDefinition cd : classDefinitions) {\n+            int factoryId = cd.getFactoryId();\n+            Map<Integer, ClassDefinition> classDefMap = factoryMap.computeIfAbsent(factoryId, k -> new HashMap<>());\n             if (classDefMap.containsKey(cd.getClassId())) {\n-                throw new HazelcastSerializationException(\"Duplicate registration found for class-id[\" + cd.getClassId() + \"]!\");\n+                throw new HazelcastSerializationException(\"Duplicate registration found for factory-id : \"\n+                        + factoryId + \", class-id \" + cd.getClassId());\n             }\n-            classDefMap.put(cd.getClassId(), cd);\n+            classDefMap.put(factoryId, cd);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3Mzg4Mw=="}, "originalCommit": {"oid": "781ca35b62d3fbca74cfaa9d9f5551d55e83f5f6"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 623, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}