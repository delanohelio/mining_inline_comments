{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0MDY1NzEx", "number": 17521, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOToxMDo1OVrOEl_kpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOToxNzowMFrOEn_iFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4Mjc0MzQxOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/map/impl/MapMigrationAwareService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOToxMDo1OVrOHVxDFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTo1MToyNlrOHVyhKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU4NTc0OA==", "bodyText": "Can you initialise the logger in the constructor?", "url": "https://github.com/hazelcast/hazelcast/pull/17521#discussion_r492585748", "createdAt": "2020-09-22T09:10:59Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/map/impl/MapMigrationAwareService.java", "diffHunk": "@@ -323,6 +330,11 @@ private void depopulateIndexes(PartitionMigrationEvent event) {\n \n             Indexes.markPartitionAsUnindexed(event.getPartitionId(), indexesSnapshot);\n         }\n+\n+        ILogger logger = mapServiceContext.getNodeEngine().getLogger(getClass());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1823cb3e24c6a33cdf3e96aa89368fd1b54673fa"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwOTgzMw==", "bodyText": "done", "url": "https://github.com/hazelcast/hazelcast/pull/17521#discussion_r492609833", "createdAt": "2020-09-22T09:51:26Z", "author": {"login": "ahmetmircik"}, "path": "hazelcast/src/main/java/com/hazelcast/map/impl/MapMigrationAwareService.java", "diffHunk": "@@ -323,6 +330,11 @@ private void depopulateIndexes(PartitionMigrationEvent event) {\n \n             Indexes.markPartitionAsUnindexed(event.getPartitionId(), indexesSnapshot);\n         }\n+\n+        ILogger logger = mapServiceContext.getNodeEngine().getLogger(getClass());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU4NTc0OA=="}, "originalCommit": {"oid": "1823cb3e24c6a33cdf3e96aa89368fd1b54673fa"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzcwODM2OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/map/impl/MapServiceContextImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOToxNzowMFrOHY1NvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOTo0MTo0NlrOHY2GtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc5OTc0MA==", "bodyText": "No need for AtomicReference anymore, you can convert ownedPartitions to a volatile field.", "url": "https://github.com/hazelcast/hazelcast/pull/17521#discussion_r495799740", "createdAt": "2020-09-28T09:17:00Z", "author": {"login": "mdogan"}, "path": "hazelcast/src/main/java/com/hazelcast/map/impl/MapServiceContextImpl.java", "diffHunk": "@@ -484,34 +484,23 @@ public RecordStore getExistingRecordStore(int partitionId, String mapName) {\n     }\n \n     @Override\n-    public PartitionIdSet getOwnedPartitions() {\n-        PartitionIdSet partitions = ownedPartitions.get();\n-        if (partitions == null) {\n-            do {\n-                reloadOwnedPartitions();\n-                partitions = ownedPartitions.get();\n-            } while (partitions == null);\n+    public PartitionIdSet getOrInitCachedMemberPartitions() {\n+        PartitionIdSet ownedPartitionIdSet = ownedPartitions.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b0dca5a655474dadacce77ad89ff8d7ff298701"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNDMyNA==", "bodyText": "fixed.", "url": "https://github.com/hazelcast/hazelcast/pull/17521#discussion_r495814324", "createdAt": "2020-09-28T09:41:46Z", "author": {"login": "ahmetmircik"}, "path": "hazelcast/src/main/java/com/hazelcast/map/impl/MapServiceContextImpl.java", "diffHunk": "@@ -484,34 +484,23 @@ public RecordStore getExistingRecordStore(int partitionId, String mapName) {\n     }\n \n     @Override\n-    public PartitionIdSet getOwnedPartitions() {\n-        PartitionIdSet partitions = ownedPartitions.get();\n-        if (partitions == null) {\n-            do {\n-                reloadOwnedPartitions();\n-                partitions = ownedPartitions.get();\n-            } while (partitions == null);\n+    public PartitionIdSet getOrInitCachedMemberPartitions() {\n+        PartitionIdSet ownedPartitionIdSet = ownedPartitions.get();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc5OTc0MA=="}, "originalCommit": {"oid": "9b0dca5a655474dadacce77ad89ff8d7ff298701"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 210, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}