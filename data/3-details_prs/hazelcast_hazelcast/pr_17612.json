{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMzExODMz", "number": 17612, "title": "Check IMap permissions when executing an SQL query", "bodyText": "This is the draft fix for the problem described in https://github.com/hazelcast/hazelcast-enterprise/issues/3795#issuecomment-697579340. It adds a check for IMap READ permission for maps involved in the query execution.\nImplementations details:\n\nThe existing SqlPermission is removed\nWhen the plan is created, a list of required permissions is collected (Plan.permissions). For IMDG these are READ permissions for observed maps. Jet SQL will have its own logic in its SqlPlan implementation\nWhen a query is being executed in the secure context, the collected permissions are checked (SqlSecurityContextImpl, SqlServiceImpl.query0)\nThe SQL security context is created for both a client invocation (SqlExecuteMessageTask.prepareSecurityContext) and an executor invocation (SecureCallableImpl.SqlServiceDelegate)\nThere is a test in the enterprise repo that tests both client and executor invocations (SqlSecurityTest)\n\nEnterprise PR: https://github.com/hazelcast/hazelcast-enterprise/pull/3799", "createdAt": "2020-09-24T09:27:09Z", "url": "https://github.com/hazelcast/hazelcast/pull/17612", "merged": true, "mergeCommit": {"oid": "05927d72bf0f896b5b062e90df3d69761558d07a"}, "closed": true, "closedAt": "2020-09-28T08:06:02Z", "author": {"login": "devozerov"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdL9tWqgH2gAyNDkyMzExODMzOmMyZTQxZDJjYjdjNmVmY2U2M2Y4MzU5ZTVmMjcyZTA1MDE0ZjEyZDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNO-ipAFqTQ5NzI3NTIyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c2e41d2cb7c6efce63f8359e5f272e05014f12d4", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/c2e41d2cb7c6efce63f8359e5f272e05014f12d4", "committedDate": "2020-09-24T09:24:09Z", "message": "SQL security draft"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82b06ff1e4bac37f49cda19f4710672898498a69", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/82b06ff1e4bac37f49cda19f4710672898498a69", "committedDate": "2020-09-25T07:29:44Z", "message": "Optimized"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8246fb3a71095239300fb2399c75473013797b24", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/8246fb3a71095239300fb2399c75473013797b24", "committedDate": "2020-09-25T07:36:11Z", "message": "Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6617958301a103be77b74e61dc27632eb0a28175", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/6617958301a103be77b74e61dc27632eb0a28175", "committedDate": "2020-09-25T07:44:09Z", "message": "Remove sql-permission"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5f4f1190d0484d5af503268d3e4da0b2f8c6112", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/c5f4f1190d0484d5af503268d3e4da0b2f8c6112", "committedDate": "2020-09-25T08:43:37Z", "message": "One more test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2MjI2OTYz", "url": "https://github.com/hazelcast/hazelcast/pull/17612#pullrequestreview-496226963", "createdAt": "2020-09-25T08:45:09Z", "commit": {"oid": "c2e41d2cb7c6efce63f8359e5f272e05014f12d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwODo0NToxMFrOHX6pfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwODo0NToxMFrOHX6pfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg0MDE5MQ==", "bodyText": "Have you considered using a builder pattern?\nI know it's an \"impl\" class, but it would make the initializations more readable.", "url": "https://github.com/hazelcast/hazelcast/pull/17612#discussion_r494840191", "createdAt": "2020-09-25T08:45:10Z", "author": {"login": "kwart"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/plan/Plan.java", "diffHunk": "@@ -77,7 +81,8 @@ public Plan(\n         SqlRowMetadata rowMetadata,\n         QueryParameterMetadata parameterMetadata,\n         PlanCacheKey planKey,\n-        Set<PlanObjectKey> objectIds\n+        Set<PlanObjectKey> objectIds,\n+        List<String> mapNames", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2e41d2cb7c6efce63f8359e5f272e05014f12d4"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7abc5382532e31edad1619e706541de81c172bd9", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/7abc5382532e31edad1619e706541de81c172bd9", "committedDate": "2020-09-25T08:56:20Z", "message": "Checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2Mjk2NDMy", "url": "https://github.com/hazelcast/hazelcast/pull/17612#pullrequestreview-496296432", "createdAt": "2020-09-25T10:22:30Z", "commit": {"oid": "7abc5382532e31edad1619e706541de81c172bd9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMDoyMjozMFrOHX97jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMDoyMjozMFrOHX97jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg5Mzk2Ng==", "bodyText": "Wouldn't it be cleaner to put this class to the EE repo and make it available through some new method in the SecurityContext class? E.g. SecurityContext.createSqlSecurityContext(Subject)", "url": "https://github.com/hazelcast/hazelcast/pull/17612#discussion_r494893966", "createdAt": "2020-09-25T10:22:30Z", "author": {"login": "kwart"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/security/SqlSecurityContextImpl.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.sql.impl.security;\n+\n+import com.hazelcast.security.SecurityContext;\n+\n+import javax.security.auth.Subject;\n+import java.security.Permission;\n+\n+public class SqlSecurityContextImpl implements SqlSecurityContext {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7abc5382532e31edad1619e706541de81c172bd9"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2MzEzMzUx", "url": "https://github.com/hazelcast/hazelcast/pull/17612#pullrequestreview-496313351", "createdAt": "2020-09-25T10:51:01Z", "commit": {"oid": "7abc5382532e31edad1619e706541de81c172bd9"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMDo1MTowMVrOHX-wAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMDo1MTowMVrOHX-wAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDkwNzM5NQ==", "bodyText": "Not used.", "url": "https://github.com/hazelcast/hazelcast/pull/17612#discussion_r494907395", "createdAt": "2020-09-25T10:51:01Z", "author": {"login": "mmedenjak"}, "path": "hazelcast-sql/src/main/java/com/hazelcast/sql/impl/calcite/opt/physical/visitor/PlanCreateVisitor.java", "diffHunk": "@@ -444,4 +428,16 @@ private static PlanNodeSchema getScanSchemaBeforeProject(AbstractMapTable table)\n     private PlanFragmentMapping dataMemberMapping() {\n         return new PlanFragmentMapping(memberIds, true);\n     }\n+\n+    private List<Permission> createPermissions() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7abc5382532e31edad1619e706541de81c172bd9"}, "originalPosition": 119}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7de44d9cbf09bd3696b10d0ae1118c6992d84612", "author": {"user": {"login": "devozerov", "name": "Vladimir Ozerov"}}, "url": "https://github.com/hazelcast/hazelcast/commit/7de44d9cbf09bd3696b10d0ae1118c6992d84612", "committedDate": "2020-09-25T11:48:41Z", "message": "Move SQL security context implementation to enterprise."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NDg1ODk0", "url": "https://github.com/hazelcast/hazelcast/pull/17612#pullrequestreview-496485894", "createdAt": "2020-09-25T14:40:44Z", "commit": {"oid": "7de44d9cbf09bd3696b10d0ae1118c6992d84612"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3Mjc1MjI4", "url": "https://github.com/hazelcast/hazelcast/pull/17612#pullrequestreview-497275228", "createdAt": "2020-09-28T08:05:14Z", "commit": {"oid": "7de44d9cbf09bd3696b10d0ae1118c6992d84612"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3351, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}