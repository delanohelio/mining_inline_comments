{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NzY2NjQy", "number": 16524, "title": "Do not serialize optimize-queries option in MapConfig", "bodyText": "This setting is a derived value and when serializing there is no need to set it in the generated XML. Also fix the wrong conflict detection when both options are set.", "createdAt": "2020-01-22T10:08:03Z", "url": "https://github.com/hazelcast/hazelcast/pull/16524", "merged": true, "mergeCommit": {"oid": "5e0bdbc10a48eb8df1ee5b87acaf1fe3f3260ad9"}, "closed": true, "closedAt": "2020-01-24T10:41:31Z", "author": {"login": "cangencer"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8ywB7AH2gAyMzY1NzY2NjQyOjVkOWZkODI5NGVmOTUyZjFjOTNiN2NlNjFkYjg1NmIxMDkwNTkyNTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9chcjgFqTM0Nzg3MDI1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5d9fd8294ef952f1c93b7ce61db856b109059254", "author": {"user": {"login": "cangencer", "name": "Can Gencer"}}, "url": "https://github.com/hazelcast/hazelcast/commit/5d9fd8294ef952f1c93b7ce61db856b109059254", "committedDate": "2020-01-22T09:58:06Z", "message": "Do not serialize optimize-queries option in MapConfig\n\nThis setting is a derived value and when serializing there\nis no need to set it in the generated XML"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2076302a3a01da62ab339da2f3d00d4eb26d50b0", "author": {"user": {"login": "cangencer", "name": "Can Gencer"}}, "url": "https://github.com/hazelcast/hazelcast/commit/2076302a3a01da62ab339da2f3d00d4eb26d50b0", "committedDate": "2020-01-22T10:06:15Z", "message": "Fix for wrong conflicting state detection when both optimize queries and setCacheDeserializedValues is set"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NjMwNzM5", "url": "https://github.com/hazelcast/hazelcast/pull/16524#pullrequestreview-346630739", "createdAt": "2020-01-22T14:31:36Z", "commit": {"oid": "2076302a3a01da62ab339da2f3d00d4eb26d50b0"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNDozMTozNlrOFgeK8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNDo1MjozMVrOFge8vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU5MzA3Mg==", "bodyText": "Probably not that important but this is just one of possible 4 allowed combinations. I don't think we cover setOptimizeQueries(false) followed by setCacheDeserializedValues(CacheDeserializedValues.INDEX_ONLY), and setCacheDeserializedValues(CacheDeserializedValues.NEVER/INDEX_ONLY) followed by setOptimizeQueries(false).", "url": "https://github.com/hazelcast/hazelcast/pull/16524#discussion_r369593072", "createdAt": "2020-01-22T14:31:36Z", "author": {"login": "vojtechtoman"}, "path": "hazelcast/src/test/java/com/hazelcast/config/MapConfigTest.java", "diffHunk": "@@ -401,6 +401,16 @@ public void givenSetOptimizeQueryIsTrue_whenSetCacheDeserializedValuesToINDEX_ON\n         mapConfig.setCacheDeserializedValues(CacheDeserializedValues.INDEX_ONLY);\n     }\n \n+    @Test\n+    public void givenSetOptimizeQueryIsFalse_whenSetCacheDeserializedValuesToNEVER_thenNoException() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2076302a3a01da62ab339da2f3d00d4eb26d50b0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYwNTgyMA==", "bodyText": "I believe this if can be removed now as it has become just a subset of the following if (I think).", "url": "https://github.com/hazelcast/hazelcast/pull/16524#discussion_r369605820", "createdAt": "2020-01-22T14:52:31Z", "author": {"login": "vojtechtoman"}, "path": "hazelcast/src/main/java/com/hazelcast/config/MapConfig.java", "diffHunk": "@@ -851,17 +851,19 @@ private void validateCacheDeserializedValuesOption(CacheDeserializedValues valid\n         if (optimizeQueryExplicitlyInvoked) {\n             // deprecated {@link #setOptimizeQueries(boolean)} was explicitly invoked\n             // we need to be strict with validation to detect conflicts\n-            boolean optimizeQuerySet = (cacheDeserializedValues == CacheDeserializedValues.ALWAYS);\n-            if (optimizeQuerySet && validatedCacheDeserializedValues == CacheDeserializedValues.NEVER) {\n+            boolean optimizeQueryFlag = (cacheDeserializedValues == CacheDeserializedValues.ALWAYS);\n+            if (!optimizeQueryFlag && validatedCacheDeserializedValues == CacheDeserializedValues.NEVER) {\n+                // settings are compatible\n+                return;\n+            }\n+            if (optimizeQueryFlag && validatedCacheDeserializedValues == CacheDeserializedValues.NEVER) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2076302a3a01da62ab339da2f3d00d4eb26d50b0"}, "originalPosition": 11}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "431fc0c55b227ec76e59dff7bc7f7808dc837662", "author": {"user": {"login": "cangencer", "name": "Can Gencer"}}, "url": "https://github.com/hazelcast/hazelcast/commit/431fc0c55b227ec76e59dff7bc7f7808dc837662", "committedDate": "2020-01-22T16:53:17Z", "message": "add missing cases, cleanup code"}, "afterCommit": {"oid": "371fd7b9eccc04cc31f90143f27f11e2fb18fb16", "author": {"user": {"login": "cangencer", "name": "Can Gencer"}}, "url": "https://github.com/hazelcast/hazelcast/commit/371fd7b9eccc04cc31f90143f27f11e2fb18fb16", "committedDate": "2020-01-22T16:54:37Z", "message": "add missing cases, cleanup code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "371fd7b9eccc04cc31f90143f27f11e2fb18fb16", "author": {"user": {"login": "cangencer", "name": "Can Gencer"}}, "url": "https://github.com/hazelcast/hazelcast/commit/371fd7b9eccc04cc31f90143f27f11e2fb18fb16", "committedDate": "2020-01-22T16:54:37Z", "message": "add missing cases, cleanup code"}, "afterCommit": {"oid": "9778cb7c6183161b159d732b21e4cac67ea42b94", "author": {"user": {"login": "cangencer", "name": "Can Gencer"}}, "url": "https://github.com/hazelcast/hazelcast/commit/9778cb7c6183161b159d732b21e4cac67ea42b94", "committedDate": "2020-01-22T17:13:08Z", "message": "add missing cases, cleanup code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9778cb7c6183161b159d732b21e4cac67ea42b94", "author": {"user": {"login": "cangencer", "name": "Can Gencer"}}, "url": "https://github.com/hazelcast/hazelcast/commit/9778cb7c6183161b159d732b21e4cac67ea42b94", "committedDate": "2020-01-22T17:13:08Z", "message": "add missing cases, cleanup code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MTE2MTg5", "url": "https://github.com/hazelcast/hazelcast/pull/16524#pullrequestreview-347116189", "createdAt": "2020-01-23T08:13:27Z", "commit": {"oid": "9778cb7c6183161b159d732b21e4cac67ea42b94"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwODoxMzoyN1rOFg1oZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwODoxMzoyN1rOFg1oZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk3NzQ0Ng==", "bodyText": "Is this really what we want? INDEX_ONLY is the default, so what makes calling setCacheDeserializedValues(INDEX_ONLY) so significant that it should suddenly trigger an error?", "url": "https://github.com/hazelcast/hazelcast/pull/16524#discussion_r369977446", "createdAt": "2020-01-23T08:13:27Z", "author": {"login": "vojtechtoman"}, "path": "hazelcast/src/main/java/com/hazelcast/config/MapConfig.java", "diffHunk": "@@ -819,16 +819,21 @@ public MapConfig setOptimizeQueries(boolean optimizeQueries) {\n     }\n \n     private void validateSetOptimizeQueriesOption(boolean optimizeQueries) {\n-        if (setCacheDeserializedValuesExplicitlyInvoked) {\n-            if (optimizeQueries && cacheDeserializedValues == CacheDeserializedValues.NEVER) {\n-                throw new ConfigurationException(\"Deprecated option 'optimize-queries' is set to true, \"\n-                        + \"but 'cacheDeserializedValues' is set to NEVER. \"\n-                        + \"These are conflicting options. Please remove the `optimize-queries'\");\n-            } else if (!optimizeQueries && cacheDeserializedValues == CacheDeserializedValues.ALWAYS) {\n-                throw new ConfigurationException(\"Deprecated option 'optimize-queries' is set to false, \"\n-                        + \"but 'cacheDeserializedValues' is set to ALWAYS. \"\n-                        + \"These are conflicting options. Please remove the `optimize-queries'\");\n-            }\n+        if (!setCacheDeserializedValuesExplicitlyInvoked) {\n+            return;\n+        }\n+        if (cacheDeserializedValues == CacheDeserializedValues.INDEX_ONLY) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9778cb7c6183161b159d732b21e4cac67ea42b94"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MTMwNzI3", "url": "https://github.com/hazelcast/hazelcast/pull/16524#pullrequestreview-347130727", "createdAt": "2020-01-23T08:43:36Z", "commit": {"oid": "2246ba35dbcd7145b210d3476cad9f88e3fa1beb"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwODo0MzozNlrOFg2VgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwODo1MjowOVrOFg2kSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk4ODk5Mg==", "bodyText": "typo: \"begin\" - > \"being\"", "url": "https://github.com/hazelcast/hazelcast/pull/16524#discussion_r369988992", "createdAt": "2020-01-23T08:43:36Z", "author": {"login": "vojtechtoman"}, "path": "hazelcast/src/main/java/com/hazelcast/config/MapConfig.java", "diffHunk": "@@ -861,13 +858,13 @@ private void validateCacheDeserializedValuesOption(CacheDeserializedValues valid\n         // we need to be strict with validation to detect conflicts\n         boolean optimizeQueryFlag = (cacheDeserializedValues == CacheDeserializedValues.ALWAYS);\n \n-        if (optimizeQueryFlag && validatedCacheDeserializedValues != CacheDeserializedValues.ALWAYS) {\n+        if (optimizeQueryFlag && newValue != CacheDeserializedValues.ALWAYS) {\n             throw new ConfigurationException(\"Deprecated option 'optimize-queries' is set to `true`, \"\n                     + \"but 'cacheDeserializedValues' is being set to NEVER or INDEX_ONLY.\"\n                     + \" These are conflicting options. Please remove the `optimize-queries'\");\n-        } else if (!optimizeQueryFlag && validatedCacheDeserializedValues != CacheDeserializedValues.NEVER) {\n+        } else if (!optimizeQueryFlag && newValue == CacheDeserializedValues.ALWAYS) {\n             throw new ConfigurationException(\"Deprecated option 'optimize-queries' is set to `false`, \"\n-                    + \"but 'cacheDeserializedValues' is begin set to ALWAYS or INDEX_ONLY. These are conflicting options.\"\n+                    + \"but 'cacheDeserializedValues' is begin set to ALWAYS. These are conflicting options.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2246ba35dbcd7145b210d3476cad9f88e3fa1beb"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk4OTUzMg==", "bodyText": "really minor: for symmetry with validateCacheDeserializedValuesOption, maybe use: if (cacheDeserializedValues != CacheDeserializedValues.ALWAYS)?", "url": "https://github.com/hazelcast/hazelcast/pull/16524#discussion_r369989532", "createdAt": "2020-01-23T08:44:54Z", "author": {"login": "vojtechtoman"}, "path": "hazelcast/src/main/java/com/hazelcast/config/MapConfig.java", "diffHunk": "@@ -822,17 +822,14 @@ private void validateSetOptimizeQueriesOption(boolean optimizeQueries) {\n         if (!setCacheDeserializedValuesExplicitlyInvoked) {\n             return;\n         }\n-        if (cacheDeserializedValues == CacheDeserializedValues.INDEX_ONLY) {\n-            throw new ConfigurationException(\"Deprecated option 'optimize-queries' is being set\"\n-                    + \", but 'cacheDeserializedValues' was set to INDEX_ONLY. \"\n-                    + \"These are conflicting options. Please remove the `optimize-queries'\");\n-        } else if (cacheDeserializedValues == CacheDeserializedValues.NEVER && optimizeQueries) {\n+        if ((cacheDeserializedValues == CacheDeserializedValues.INDEX_ONLY ||\n+                cacheDeserializedValues == CacheDeserializedValues.NEVER) && optimizeQueries) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2246ba35dbcd7145b210d3476cad9f88e3fa1beb"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk5Mjc3OA==", "bodyText": "At the risk of becoming really annoying now: what about adding givenCacheDeserializedValuesSetToNEVER_whenSetOptimizeQueriesToFalse, too?", "url": "https://github.com/hazelcast/hazelcast/pull/16524#discussion_r369992778", "createdAt": "2020-01-23T08:52:09Z", "author": {"login": "vojtechtoman"}, "path": "hazelcast/src/test/java/com/hazelcast/config/MapConfigTest.java", "diffHunk": "@@ -312,8 +312,8 @@ public void givenCacheDeserializedValuesSetToALWAYS_whenSetOptimizeQueriesToFals\n         mapConfig.setOptimizeQueries(false);\n     }\n \n-    @Test(expected = ConfigurationException.class)\n-    public void givenCacheDeserializedValuesSetToINDEX_ONLY_whenSetOptimizeQueriesToFalse_thenThrowConfigurationException() {\n+    @Test\n+    public void givenCacheDeserializedValuesSetToINDEX_ONLY_whenSetOptimizeQueriesToFalse_thenNoException() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2246ba35dbcd7145b210d3476cad9f88e3fa1beb"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2246ba35dbcd7145b210d3476cad9f88e3fa1beb", "author": {"user": {"login": "cangencer", "name": "Can Gencer"}}, "url": "https://github.com/hazelcast/hazelcast/commit/2246ba35dbcd7145b210d3476cad9f88e3fa1beb", "committedDate": "2020-01-23T08:33:23Z", "message": "add better support for INDEX_ONLY"}, "afterCommit": {"oid": "9053b9459cf75a5f62079ba04f45abc2ab08b6d3", "author": {"user": {"login": "cangencer", "name": "Can Gencer"}}, "url": "https://github.com/hazelcast/hazelcast/commit/9053b9459cf75a5f62079ba04f45abc2ab08b6d3", "committedDate": "2020-01-23T08:54:23Z", "message": "add better support for INDEX_ONLY"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9053b9459cf75a5f62079ba04f45abc2ab08b6d3", "author": {"user": {"login": "cangencer", "name": "Can Gencer"}}, "url": "https://github.com/hazelcast/hazelcast/commit/9053b9459cf75a5f62079ba04f45abc2ab08b6d3", "committedDate": "2020-01-23T08:54:23Z", "message": "add better support for INDEX_ONLY"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bfc94db5d1fc6e433ae005e9052c8d744ed147a", "author": {"user": {"login": "cangencer", "name": "Can Gencer"}}, "url": "https://github.com/hazelcast/hazelcast/commit/2bfc94db5d1fc6e433ae005e9052c8d744ed147a", "committedDate": "2020-01-23T08:59:26Z", "message": "Address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MTQ3MTcy", "url": "https://github.com/hazelcast/hazelcast/pull/16524#pullrequestreview-347147172", "createdAt": "2020-01-23T09:13:03Z", "commit": {"oid": "2bfc94db5d1fc6e433ae005e9052c8d744ed147a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3ODcwMjUz", "url": "https://github.com/hazelcast/hazelcast/pull/16524#pullrequestreview-347870253", "createdAt": "2020-01-24T10:38:11Z", "commit": {"oid": "2bfc94db5d1fc6e433ae005e9052c8d744ed147a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3926, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}