{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5MzUzMjU3", "number": 16849, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOToyMjozMVrODvCo0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOTozMToyMlrODvC12g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNjUyODgyOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/client/impl/connection/ClientConnection.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOToyMjozMVrOGBPARg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMDoyNTozN1rOGBRTtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk0NzU5MA==", "bodyText": "I could not find the usage of this method. Is this on enterprise side ?\nDo you have EE side ready for this pr ? Asking to check them together, to make sure this kind of changes.", "url": "https://github.com/hazelcast/hazelcast/pull/16849#discussion_r403947590", "createdAt": "2020-04-06T09:22:31Z", "author": {"login": "sancar"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/connection/ClientConnection.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.client.impl.connection;\n+\n+import com.hazelcast.client.impl.protocol.ClientMessage;\n+import com.hazelcast.client.impl.spi.EventHandler;\n+import com.hazelcast.internal.nio.Connection;\n+\n+import java.util.Map;\n+\n+/**\n+ * The ClientConnection is connection that lives on the client side on behalf of a Java client.\n+ *\n+ * On the server side there will be a {@link com.hazelcast.internal.server.ServerConnection}.\n+ *\n+ * Use this class to add client specific method.\n+ */\n+public interface ClientConnection extends Connection {\n+\n+    /**\n+     * Returns the ClientConnectionManager of this ClientConnection.\n+     *\n+     * @return the ClientConnectionManager.\n+     */\n+    ClientConnectionManager getConnectionManager();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b539d9b47ddf2eb22322234708e773d0a7db3f9c"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk4NTMzMw==", "bodyText": "It seems it isn't used. I'll remove the method.\nI'm working on the EE portion.", "url": "https://github.com/hazelcast/hazelcast/pull/16849#discussion_r403985333", "createdAt": "2020-04-06T10:25:37Z", "author": {"login": "pveentjer"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/connection/ClientConnection.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.client.impl.connection;\n+\n+import com.hazelcast.client.impl.protocol.ClientMessage;\n+import com.hazelcast.client.impl.spi.EventHandler;\n+import com.hazelcast.internal.nio.Connection;\n+\n+import java.util.Map;\n+\n+/**\n+ * The ClientConnection is connection that lives on the client side on behalf of a Java client.\n+ *\n+ * On the server side there will be a {@link com.hazelcast.internal.server.ServerConnection}.\n+ *\n+ * Use this class to add client specific method.\n+ */\n+public interface ClientConnection extends Connection {\n+\n+    /**\n+     * Returns the ClientConnectionManager of this ClientConnection.\n+     *\n+     * @return the ClientConnectionManager.\n+     */\n+    ClientConnectionManager getConnectionManager();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk0NzU5MA=="}, "originalCommit": {"oid": "b539d9b47ddf2eb22322234708e773d0a7db3f9c"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNjU2MjE4OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/client/impl/connection/tcp/TcpClientConnectionManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOTozMToyMlrOGBPVXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMDozODozNFrOGBRxpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk1Mjk5MA==", "bodyText": "This second method is not necessary. The users of getActiveTcpClientConnections can use getActiveConnections instead. I have checked them. ClientConnection interface is enough for them. They don't need need implementation class.", "url": "https://github.com/hazelcast/hazelcast/pull/16849#discussion_r403952990", "createdAt": "2020-04-06T09:31:22Z", "author": {"login": "sancar"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/connection/tcp/TcpClientConnectionManager.java", "diffHunk": "@@ -534,6 +535,10 @@ private void shutdownWithExternalThread() {\n \n     @Override\n     public Collection<ClientConnection> getActiveConnections() {\n+        return (Collection) activeConnections.values();\n+    }\n+\n+    public Collection<TcpClientConnection> getActiveTcpClientConnections() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b539d9b47ddf2eb22322234708e773d0a7db3f9c"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk5Mjk5OA==", "bodyText": "Fixed", "url": "https://github.com/hazelcast/hazelcast/pull/16849#discussion_r403992998", "createdAt": "2020-04-06T10:38:34Z", "author": {"login": "pveentjer"}, "path": "hazelcast/src/main/java/com/hazelcast/client/impl/connection/tcp/TcpClientConnectionManager.java", "diffHunk": "@@ -534,6 +535,10 @@ private void shutdownWithExternalThread() {\n \n     @Override\n     public Collection<ClientConnection> getActiveConnections() {\n+        return (Collection) activeConnections.values();\n+    }\n+\n+    public Collection<TcpClientConnection> getActiveTcpClientConnections() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk1Mjk5MA=="}, "originalCommit": {"oid": "b539d9b47ddf2eb22322234708e773d0a7db3f9c"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 632, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}