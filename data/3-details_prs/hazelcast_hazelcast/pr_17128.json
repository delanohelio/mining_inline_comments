{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5ODA4MTEz", "number": 17128, "title": "Add support for delivering of results of Jet queries to the client", "bodyText": "", "createdAt": "2020-06-25T08:17:20Z", "url": "https://github.com/hazelcast/hazelcast/pull/17128", "merged": true, "mergeCommit": {"oid": "9a34e648156e7e94813ab8bea3e671e77e4a997f"}, "closed": true, "closedAt": "2020-07-07T09:07:19Z", "author": {"login": "viliam-durina"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxTxZFgH2gAyNDM5ODA4MTEzOjFiZTkwOWQ4NGUzMTE4OWQ5NjI5ZDFjYTdjNDNjNzlmMjRmMTcyNGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyfjdYgFqTQ0MzU4NjAyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1be909d84e31189d9629d1ca7c43c79f24f1724b", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/1be909d84e31189d9629d1ca7c43c79f24f1724b", "committedDate": "2020-07-03T13:50:31Z", "message": "Prepare for Jet client integration"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "42053cccef2e4d4ebc4ebea26de28171bf87f09c", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/42053cccef2e4d4ebc4ebea26de28171bf87f09c", "committedDate": "2020-06-25T08:15:51Z", "message": "Add support for delivering of results of Jet queries to the client"}, "afterCommit": {"oid": "1be909d84e31189d9629d1ca7c43c79f24f1724b", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/1be909d84e31189d9629d1ca7c43c79f24f1724b", "committedDate": "2020-07-03T13:50:31Z", "message": "Prepare for Jet client integration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyODUwMTQ2", "url": "https://github.com/hazelcast/hazelcast/pull/17128#pullrequestreview-442850146", "createdAt": "2020-07-06T07:55:01Z", "commit": {"oid": "1be909d84e31189d9629d1ca7c43c79f24f1724b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNzo1NTowMVrOGtMoYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNzo1NTowMVrOGtMoYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA0NjA1MA==", "bodyText": "Isn't System.currentTimeMillis enough here? (though, I do not know any performance difference between nano and millis\nThe last line in this method calls hasNext which is blocking as well. Therefore, the idea of early return doesn't really work in this prototype. Instead, the method should return as soon as the very first call to hasNext returned something", "url": "https://github.com/hazelcast/hazelcast/pull/17128#discussion_r450046050", "createdAt": "2020-07-06T07:55:01Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/client/QueryClientStateRegistry.java", "diffHunk": "@@ -100,14 +102,16 @@ private boolean fetchPage(\n         int cursorBufferSize,\n         InternalSerializationService serializationService\n     ) {\n+        long endTime = System.nanoTime() + SECONDS.toNanos(1);\n         while (iterator.hasNext()) {\n             SqlRow row = iterator.next();\n             Row rowInternal = ((SqlRowImpl) row).getDelegate();\n             Data rowData = serializationService.toData(rowInternal);\n \n             page.add(rowData);\n \n-            if (page.size() == cursorBufferSize) {\n+            // TODO we call nanoTime for each item - use batching\n+            if (page.size() == cursorBufferSize || System.nanoTime() >= endTime) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1be909d84e31189d9629d1ca7c43c79f24f1724b"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyODUwODM0", "url": "https://github.com/hazelcast/hazelcast/pull/17128#pullrequestreview-442850834", "createdAt": "2020-07-06T07:56:03Z", "commit": {"oid": "1be909d84e31189d9629d1ca7c43c79f24f1724b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNzo1NjowM1rOGtMqkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNzo1NjowM1rOGtMqkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA0NjYxMQ==", "bodyText": "Let's avoid Runnable and introduce a separate interface with proper name.", "url": "https://github.com/hazelcast/hazelcast/pull/17128#discussion_r450046611", "createdAt": "2020-07-06T07:56:03Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/exec/root/BlockingRootResultConsumer.java", "diffHunk": "@@ -35,7 +34,7 @@\n     private final InternalIterator iterator = new InternalIterator();\n \n     /** Query context to schedule root execution when the next batch is needed. */\n-    private volatile QueryFragmentContext context;\n+    private volatile Runnable scheduleCallback;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1be909d84e31189d9629d1ca7c43c79f24f1724b"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b710538813f9c327b07680a65cbb479be7a34f72", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/b710538813f9c327b07680a65cbb479be7a34f72", "committedDate": "2020-07-06T12:00:27Z", "message": "Address review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5174f6ba06541d49542f135c5811ebc7a6a0dce", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast/commit/f5174f6ba06541d49542f135c5811ebc7a6a0dce", "committedDate": "2020-07-06T12:41:27Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNTg2MDI1", "url": "https://github.com/hazelcast/hazelcast/pull/17128#pullrequestreview-443586025", "createdAt": "2020-07-07T06:08:05Z", "commit": {"oid": "f5174f6ba06541d49542f135c5811ebc7a6a0dce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3491, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}