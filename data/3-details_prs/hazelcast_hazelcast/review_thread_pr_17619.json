{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyOTM5ODY0", "number": 17619, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODo0MToyOVrOEpvHjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNjo1NjozMFrOEqLp2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMTk5MDUzOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/util/ExceptionUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODo0MToyOVrOHblq2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODo0MToyOVrOHblq2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY5MDc3Ng==", "bodyText": "nit: redundant new line here.", "url": "https://github.com/hazelcast/hazelcast/pull/17619#discussion_r498690776", "createdAt": "2020-10-02T08:41:29Z", "author": {"login": "puzpuzpuz"}, "path": "hazelcast/src/main/java/com/hazelcast/util/ExceptionUtil.java", "diffHunk": "@@ -231,4 +233,53 @@ public static void fixAsyncStackTrace(Throwable asyncCause, StackTraceElement[]\n         System.arraycopy(localSideStackTrace, 1, newStackTrace, remoteStackTrace.length + 2, localSideStackTrace.length - 1);\n         throwable.setStackTrace(newStackTrace);\n     }\n+\n+    /**\n+     * Tries to create the exception with appropriate constructor in the following order.\n+     * In all cases the cause is set(via constructor or via initCause)\n+     * new Throwable(String message, Throwable cause)\n+     * new Throwable(Throwable cause)\n+     * new Throwable(String message)\n+     * new Throwable()\n+     *\n+     * @param exceptionClass class of the exception\n+     * @param message        message to be pass to constructor of the exception\n+     * @param cause          cause to be set to the exception\n+     * @return null if can not find a constructor as described above, otherwise return newly constructed expcetion\n+     */\n+    public static <T extends Throwable> T tryCreateExceptionWithMessageAndCause(Class<? extends Throwable> exceptionClass,\n+                                                                                String message, @Nullable Throwable cause) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0888707cf69c52448644b08d6181ba9c1e80c59d"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjY2NTg2OnYy", "diffSide": "LEFT", "path": "hazelcast-client/src/test/java/com/hazelcast/client/impl/protocol/ClientExceptionFactoryTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNjo1NjozMFrOHcPm8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNzoyMzo1NVrOHcQUNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3NzkwNg==", "bodyText": "why did you remove?", "url": "https://github.com/hazelcast/hazelcast/pull/17619#discussion_r499377906", "createdAt": "2020-10-05T06:56:30Z", "author": {"login": "ihsandemir"}, "path": "hazelcast-client/src/test/java/com/hazelcast/client/impl/protocol/ClientExceptionFactoryTest.java", "diffHunk": "@@ -187,7 +176,6 @@ private boolean stackTraceArrayEquals(StackTraceElement[] stackTrace1, StackTrac\n                 new Object[]{new EntryProcessorException(randomString())},\n                 new Object[]{new ArrayIndexOutOfBoundsException(randomString())},\n                 new Object[]{new ArrayStoreException(randomString())},\n-                new Object[]{new AuthenticationException(randomString())},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca53238d805d2eb0cedf158fe47928f92c173584"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM4OTQ5Mw==", "bodyText": "On 3.12, because we had two different modules, we are throwing StubAuthenticationException on the member and it is recreated as AuthenticationException on the client-side.\nSo this test normally should not be passing. When I refactored the test to a correct state, this issue became apparent, and tests start to fail for AuthenticationException.\nI did not want to modify the test again for the AuthenticationException only.\nNow thinking about it, I can put a special test for AuthenticationException on ClientProtocolErrorCodesTest.", "url": "https://github.com/hazelcast/hazelcast/pull/17619#discussion_r499389493", "createdAt": "2020-10-05T07:23:55Z", "author": {"login": "sancar"}, "path": "hazelcast-client/src/test/java/com/hazelcast/client/impl/protocol/ClientExceptionFactoryTest.java", "diffHunk": "@@ -187,7 +176,6 @@ private boolean stackTraceArrayEquals(StackTraceElement[] stackTrace1, StackTrac\n                 new Object[]{new EntryProcessorException(randomString())},\n                 new Object[]{new ArrayIndexOutOfBoundsException(randomString())},\n                 new Object[]{new ArrayStoreException(randomString())},\n-                new Object[]{new AuthenticationException(randomString())},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3NzkwNg=="}, "originalCommit": {"oid": "ca53238d805d2eb0cedf158fe47928f92c173584"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 265, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}