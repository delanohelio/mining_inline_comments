{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MDgwMjIz", "number": 17331, "title": "Fix WanAddConfigTest#testConfigAddingWithLiteMembersAdded", "bodyText": "WAN config is added as a partition operation. Lite members don't own any\npartitions which is why they don't get the WAN config added. In 3.12.z\nand 4.0.z we applied a best-effort fix where we add the config locally\nin case the member adding the config is a lite member while in 4.1 we\nadd a new operation which adds the config on lite members specifically.\nThis test fails randomly when the member adding the config is a data\nmember and passes when the member adding the config is a lite member.\nSince we cannot introduce new operations in a patch release, the only\noption is to adapt the test. The original version should still be\npassing on 4.1 and onward.\nWe apply an additional fix because the WAN queue migration operation\nwould add dynamically added WAN config even to a promoted lite member\nbut wouldn't initialize it, causing the rest of the migration operation\nto fail.\nFixes: hazelcast/hazelcast-enterprise#3612\nFixes: hazelcast/hazelcast-enterprise#3598\nEE: hazelcast/hazelcast-enterprise#3713\n3.12.z: hazelcast/hazelcast-enterprise#3716\n4.1: #17336, hazelcast/hazelcast-enterprise#3717", "createdAt": "2020-08-11T12:43:09Z", "url": "https://github.com/hazelcast/hazelcast/pull/17331", "merged": true, "mergeCommit": {"oid": "7fd1e69646c6b5842cffb2bae84b4dafa58ed36d"}, "closed": true, "closedAt": "2020-08-12T08:30:26Z", "author": {"login": "mmedenjak"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc92OgjgFqTQ2NTAyODQ2Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-HHbRAFqTQ2NTY5ODgyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MDI4NDYy", "url": "https://github.com/hazelcast/hazelcast/pull/17331#pullrequestreview-465028462", "createdAt": "2020-08-11T12:46:11Z", "commit": {"oid": "65c86a7f6df26cce678fdf19e3b43d771c871e3b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMjo0NjoxMVrOG-2INA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMjo0NjoxMVrOG-2INA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU1MTczMg==", "bodyText": "This is the part which needs to be forward-ported to 4.1, with an adapted test in EE.", "url": "https://github.com/hazelcast/hazelcast/pull/17331#discussion_r468551732", "createdAt": "2020-08-11T12:46:11Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/wan/impl/WanEventContainerReplicationOperation.java", "diffHunk": "@@ -69,7 +69,7 @@ public void run() throws Exception {\n         int partitionId = getPartitionId();\n \n         for (WanReplicationConfig wanReplicationConfig : wanReplicationConfigs) {\n-            service.appendWanReplicationConfig(wanReplicationConfig);\n+            service.addWanReplicationConfigLocally(wanReplicationConfig);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65c86a7f6df26cce678fdf19e3b43d771c871e3b"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2d2ba92fc12b26d57ddefdea6475faca8647f58", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/e2d2ba92fc12b26d57ddefdea6475faca8647f58", "committedDate": "2020-08-11T14:50:20Z", "message": "Fix WanAddConfigTest#testConfigAddingWithLiteMembersAdded\n\nWAN config is added as a partition operation. Lite members don't own any\npartitions which is why they don't get the WAN config added. In 3.12.z\nand 4.0.z we applied a best-effort fix where we add the config locally\nin case the member adding the config is a lite member while in 4.1 we\nadd a new operation which adds the config on lite members specifically.\nThis test fails randomly when the member adding the config is a data\nmember and passes when the member adding the config is a lite member.\n\nSince we cannot introduce new operations in a patch release, the only\noption is to adapt the test. The original version should still be\npassing on 4.1 and onward.\n\nWe apply an additional fix because the WAN queue migration operation\nwould add dynamically added WAN config even to a promoted lite member\nbut wouldn't initialize it, causing the rest of the migration operation\nto fail.\n\nFixes: https://github.com/hazelcast/hazelcast-enterprise/issues/3612\nFixes: https://github.com/hazelcast/hazelcast-enterprise/issues/3598"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65c86a7f6df26cce678fdf19e3b43d771c871e3b", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/65c86a7f6df26cce678fdf19e3b43d771c871e3b", "committedDate": "2020-08-11T12:39:01Z", "message": "Fix WanAddConfigTest#testConfigAddingWithLiteMembersAdded\n\nWAN config is added as a partition operation. Lite members don't own any\npartitions which is why they don't get the WAN config added. In 3.12.z\nand 4.0.z we applied a best-effort fix where we add the config locally\nin case the member adding the config is a lite member while in 4.1 we\nadd a new operation which adds the config on lite members specifically.\nThis test fails randomly when the member adding the config is a data\nmember and passes when the member adding the config is a lite member.\n\nSince we cannot introduce new operations in a patch release, the only\noption is to adapt the test. The original version should still be\npassing on 4.1 and onward.\n\nWe apply an additional fix because the WAN queue migration operation\nwould add dynamically added WAN config even to a promoted lite member\nbut wouldn't initialize it, causing the rest of the migration operation\nto fail.\n\nFixes: https://github.com/hazelcast/hazelcast-enterprise/issues/3612"}, "afterCommit": {"oid": "e2d2ba92fc12b26d57ddefdea6475faca8647f58", "author": {"user": {"login": "mmedenjak", "name": "Matko Medenjak"}}, "url": "https://github.com/hazelcast/hazelcast/commit/e2d2ba92fc12b26d57ddefdea6475faca8647f58", "committedDate": "2020-08-11T14:50:20Z", "message": "Fix WanAddConfigTest#testConfigAddingWithLiteMembersAdded\n\nWAN config is added as a partition operation. Lite members don't own any\npartitions which is why they don't get the WAN config added. In 3.12.z\nand 4.0.z we applied a best-effort fix where we add the config locally\nin case the member adding the config is a lite member while in 4.1 we\nadd a new operation which adds the config on lite members specifically.\nThis test fails randomly when the member adding the config is a data\nmember and passes when the member adding the config is a lite member.\n\nSince we cannot introduce new operations in a patch release, the only\noption is to adapt the test. The original version should still be\npassing on 4.1 and onward.\n\nWe apply an additional fix because the WAN queue migration operation\nwould add dynamically added WAN config even to a promoted lite member\nbut wouldn't initialize it, causing the rest of the migration operation\nto fail.\n\nFixes: https://github.com/hazelcast/hazelcast-enterprise/issues/3612\nFixes: https://github.com/hazelcast/hazelcast-enterprise/issues/3598"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MTQ2MzM2", "url": "https://github.com/hazelcast/hazelcast/pull/17331#pullrequestreview-465146336", "createdAt": "2020-08-11T14:51:14Z", "commit": {"oid": "65c86a7f6df26cce678fdf19e3b43d771c871e3b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1Njk4ODIy", "url": "https://github.com/hazelcast/hazelcast/pull/17331#pullrequestreview-465698822", "createdAt": "2020-08-12T08:26:50Z", "commit": {"oid": "e2d2ba92fc12b26d57ddefdea6475faca8647f58"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3374, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}