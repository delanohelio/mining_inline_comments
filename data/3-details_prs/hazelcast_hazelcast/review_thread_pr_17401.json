{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMDkwODU5", "number": 17401, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMDo1MDozM1rOEcA0AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMDo1MDozM1rOEcA0AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3ODA4ODk2OnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/schema/Table.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMDo1MDozM1rOHGSfXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMjowOTozNVrOHGVCzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM1NjQ0NA==", "bodyText": "I am not sure that objectName should be in the Table class. Having the separate name for the underlying object, and even the presence of this underlying object per se is an implementation detail.\nIt feels like the AbstractMapTable class is a better candidate for this field.", "url": "https://github.com/hazelcast/hazelcast/pull/17401#discussion_r476356444", "createdAt": "2020-08-25T10:50:33Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/schema/Table.java", "diffHunk": "@@ -28,20 +28,23 @@\n public abstract class Table {\n \n     private final String schemaName;\n-    private final String name;\n+    private final String sqlName;\n+    private final String objectName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49099d34d25eda1afe0cff7e2f65585a75200f01"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM4NjIxMQ==", "bodyText": "Every object in IMDG does have it (imap and replicated map). Also every object in Jet does have, though it could have different names (like mapName, topicName etc). I moved it up here so the distinction is more clear.", "url": "https://github.com/hazelcast/hazelcast/pull/17401#discussion_r476386211", "createdAt": "2020-08-25T11:46:35Z", "author": {"login": "viliam-durina"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/schema/Table.java", "diffHunk": "@@ -28,20 +28,23 @@\n public abstract class Table {\n \n     private final String schemaName;\n-    private final String name;\n+    private final String sqlName;\n+    private final String objectName;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM1NjQ0NA=="}, "originalCommit": {"oid": "49099d34d25eda1afe0cff7e2f65585a75200f01"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM4ODU3Nw==", "bodyText": "I still do not get it. This class should contain fields that is common for all tables. objectName is not a common concept across all possible object types that we may have in future. E.g. it is not applicable to a table backed by a file. Also it is not applicable to views.\nI think, objectName should belong to AbstractMapTable.", "url": "https://github.com/hazelcast/hazelcast/pull/17401#discussion_r476388577", "createdAt": "2020-08-25T11:51:03Z", "author": {"login": "devozerov"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/schema/Table.java", "diffHunk": "@@ -28,20 +28,23 @@\n public abstract class Table {\n \n     private final String schemaName;\n-    private final String name;\n+    private final String sqlName;\n+    private final String objectName;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM1NjQ0NA=="}, "originalCommit": {"oid": "49099d34d25eda1afe0cff7e2f65585a75200f01"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM5ODI4Ng==", "bodyText": "\u00af_(\u30c4)_/\u00af", "url": "https://github.com/hazelcast/hazelcast/pull/17401#discussion_r476398286", "createdAt": "2020-08-25T12:09:35Z", "author": {"login": "viliam-durina"}, "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/schema/Table.java", "diffHunk": "@@ -28,20 +28,23 @@\n public abstract class Table {\n \n     private final String schemaName;\n-    private final String name;\n+    private final String sqlName;\n+    private final String objectName;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM1NjQ0NA=="}, "originalCommit": {"oid": "49099d34d25eda1afe0cff7e2f65585a75200f01"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 332, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}