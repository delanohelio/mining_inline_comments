{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4OTM1ODk5", "number": 16681, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMjozMzowNVrODiT2BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMjozMzowNVrODiT2BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MzAzMzAwOnYy", "diffSide": "RIGHT", "path": "hazelcast/src/main/java/com/hazelcast/collection/impl/queue/QueueService.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMjozMzowNVrOFtfC6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNzoxNDoyNFrOGZ2-KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIzODg5MA==", "bodyText": "Can't we initialize this with the number of DSs defined in the static config? Then we can grow on-demand if new ones created dynamically.", "url": "https://github.com/hazelcast/hazelcast/pull/16681#discussion_r383238890", "createdAt": "2020-02-24T12:33:05Z", "author": {"login": "blazember"}, "path": "hazelcast/src/main/java/com/hazelcast/collection/impl/queue/QueueService.java", "diffHunk": "@@ -103,7 +104,7 @@\n     private static final Object NULL_OBJECT = new Object();\n \n     private final ConcurrentMap<String, QueueContainer> containerMap = new ConcurrentHashMap<>();\n-    private final ConcurrentMap<String, LocalQueueStatsImpl> statsMap = new ConcurrentHashMap<>(1000);\n+    private final ConcurrentMap<String, LocalQueueStatsImpl> statsMap = MapUtil.createConcurrentHashMap(10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "967b2bd60a80bb7600a780fd1d277824eb3619f3"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIzOTkyMQ==", "bodyText": "yes, this was also an idea, have to see how (un)intrusive it is to get the config in the constructor and iterate through it.", "url": "https://github.com/hazelcast/hazelcast/pull/16681#discussion_r383239921", "createdAt": "2020-02-24T12:35:27Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/collection/impl/queue/QueueService.java", "diffHunk": "@@ -103,7 +104,7 @@\n     private static final Object NULL_OBJECT = new Object();\n \n     private final ConcurrentMap<String, QueueContainer> containerMap = new ConcurrentHashMap<>();\n-    private final ConcurrentMap<String, LocalQueueStatsImpl> statsMap = new ConcurrentHashMap<>(1000);\n+    private final ConcurrentMap<String, LocalQueueStatsImpl> statsMap = MapUtil.createConcurrentHashMap(10);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIzODg5MA=="}, "originalCommit": {"oid": "967b2bd60a80bb7600a780fd1d277824eb3619f3"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI0MDE2OA==", "bodyText": "wildcard configs and configs based on default are a gotcha but I think it's fine to work with best-effort approach here.", "url": "https://github.com/hazelcast/hazelcast/pull/16681#discussion_r383240168", "createdAt": "2020-02-24T12:36:00Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/collection/impl/queue/QueueService.java", "diffHunk": "@@ -103,7 +104,7 @@\n     private static final Object NULL_OBJECT = new Object();\n \n     private final ConcurrentMap<String, QueueContainer> containerMap = new ConcurrentHashMap<>();\n-    private final ConcurrentMap<String, LocalQueueStatsImpl> statsMap = new ConcurrentHashMap<>(1000);\n+    private final ConcurrentMap<String, LocalQueueStatsImpl> statsMap = MapUtil.createConcurrentHashMap(10);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIzODg5MA=="}, "originalCommit": {"oid": "967b2bd60a80bb7600a780fd1d277824eb3619f3"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc2ODIzMg==", "bodyText": "Addressed this comment, also on other places. The approach is pretty simple, I just take the number of configs, which means wildcard and default also count as one. PTAL", "url": "https://github.com/hazelcast/hazelcast/pull/16681#discussion_r429768232", "createdAt": "2020-05-25T07:14:24Z", "author": {"login": "mmedenjak"}, "path": "hazelcast/src/main/java/com/hazelcast/collection/impl/queue/QueueService.java", "diffHunk": "@@ -103,7 +104,7 @@\n     private static final Object NULL_OBJECT = new Object();\n \n     private final ConcurrentMap<String, QueueContainer> containerMap = new ConcurrentHashMap<>();\n-    private final ConcurrentMap<String, LocalQueueStatsImpl> statsMap = new ConcurrentHashMap<>(1000);\n+    private final ConcurrentMap<String, LocalQueueStatsImpl> statsMap = MapUtil.createConcurrentHashMap(10);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIzODg5MA=="}, "originalCommit": {"oid": "967b2bd60a80bb7600a780fd1d277824eb3619f3"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 705, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}