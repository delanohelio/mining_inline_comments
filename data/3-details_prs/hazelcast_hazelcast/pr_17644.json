{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MzcyODIw", "number": 17644, "title": "Fixed a data loss issue on lite member promotion", "bodyText": "Notify cluster members on lite member promotion to update\nmemberGroupSize. Otherwise, a data member might be not aware of other\npromoted data members, and it may cause backup operations\nnot being issued to other data members.\nCloses #17621", "createdAt": "2020-09-30T09:23:15Z", "url": "https://github.com/hazelcast/hazelcast/pull/17644", "merged": true, "mergeCommit": {"oid": "82bd5e7009d3cf8bcc4a830dc0194e4460daebed"}, "closed": true, "closedAt": "2020-10-09T07:35:24Z", "author": {"login": "petrpleshachkov"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdN5MO2AH2gAyNDk1MzcyODIwOjMzNjJjNzExZGIwZGUxMDU5ODE4N2MzNDcxNjJhYzU5Y2I3Nzk3MDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQlg32gFqTUwNTAzNTU4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3362c711db0de10598187c347162ac59cb779705", "author": {"user": {"login": "petrpleshachkov", "name": null}}, "url": "https://github.com/hazelcast/hazelcast/commit/3362c711db0de10598187c347162ac59cb779705", "committedDate": "2020-09-30T09:16:12Z", "message": "Fixed a data loss issue on lite member promotion\n\nNotify cluster members on lite member promotion to update\nmemberGroupSize. Otherwise, a data member might be not aware of other\npromoted data members, and it may cause backup operations\nnot being issued to other data members.\n\nCloses https://github.com/hazelcast/hazelcast/issues/17621"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MjU2NTg4", "url": "https://github.com/hazelcast/hazelcast/pull/17644#pullrequestreview-499256588", "createdAt": "2020-09-30T09:41:06Z", "commit": {"oid": "3362c711db0de10598187c347162ac59cb779705"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOTo0MTowNlrOHaVjqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOTo0MTowNlrOHaVjqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM3ODIxOQ==", "bodyText": "Shouldn't this be out of else block? What if this is on local member?", "url": "https://github.com/hazelcast/hazelcast/pull/17644#discussion_r497378219", "createdAt": "2020-09-30T09:41:06Z", "author": {"login": "mdogan"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java", "diffHunk": "@@ -367,6 +367,7 @@ private MemberImpl createNewMemberImplIfChanged(MemberInfo newMemberInfo, Member\n                 member = clusterService.promoteAndGetLocalMember();\n             } else {\n                 member = createMember(newMemberInfo, member.getAttributes());\n+                node.partitionService.memberAdded(member);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3362c711db0de10598187c347162ac59cb779705"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "336f25081a7becba81d896423a6a950ddc46daeb", "author": {"user": {"login": "petrpleshachkov", "name": null}}, "url": "https://github.com/hazelcast/hazelcast/commit/336f25081a7becba81d896423a6a950ddc46daeb", "committedDate": "2020-10-05T10:53:34Z", "message": "Update memberGroupSize on every lite membership change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxOTQxMzcx", "url": "https://github.com/hazelcast/hazelcast/pull/17644#pullrequestreview-501941371", "createdAt": "2020-10-05T10:59:41Z", "commit": {"oid": "336f25081a7becba81d896423a6a950ddc46daeb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDo1OTo0MVrOHcX5_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDo1OTo0MVrOHcX5_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUxMzg1Mg==", "bodyText": "Not needed anymore?", "url": "https://github.com/hazelcast/hazelcast/pull/17644#discussion_r499513852", "createdAt": "2020-10-05T10:59:41Z", "author": {"login": "mdogan"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java", "diffHunk": "@@ -368,6 +376,7 @@ private MemberImpl createNewMemberImplIfChanged(MemberInfo newMemberInfo, Member\n             } else {\n                 member = createMember(newMemberInfo, member.getAttributes());\n             }\n+            node.partitionService.memberAdded(member);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "336f25081a7becba81d896423a6a950ddc46daeb"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0509105f07b4a645459cb82b5156481ad884604", "author": {"user": {"login": "petrpleshachkov", "name": null}}, "url": "https://github.com/hazelcast/hazelcast/commit/a0509105f07b4a645459cb82b5156481ad884604", "committedDate": "2020-10-05T11:01:15Z", "message": "Removed unnecessary code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxOTc5MTgy", "url": "https://github.com/hazelcast/hazelcast/pull/17644#pullrequestreview-501979182", "createdAt": "2020-10-05T11:54:42Z", "commit": {"oid": "a0509105f07b4a645459cb82b5156481ad884604"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjMzOTc4", "url": "https://github.com/hazelcast/hazelcast/pull/17644#pullrequestreview-502233978", "createdAt": "2020-10-05T16:39:25Z", "commit": {"oid": "a0509105f07b4a645459cb82b5156481ad884604"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjozOToyNVrOHclKpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjozOToyNVrOHclKpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTczMTEwOA==", "bodyText": "same here.", "url": "https://github.com/hazelcast/hazelcast/pull/17644#discussion_r499731108", "createdAt": "2020-10-05T16:39:25Z", "author": {"login": "ahmetmircik"}, "path": "hazelcast/src/test/java/com/hazelcast/internal/cluster/impl/PromoteLiteMemberTest.java", "diffHunk": "@@ -323,6 +326,86 @@ public void promotion_shouldFail_whenMasterIsSuspected_duringPromotion() throws\n         }\n     }\n \n+    @Test\n+    public void lite_member_promotion_data_loss() throws InterruptedException {\n+        int entryCount = 1000;\n+\n+        TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory();\n+        Config config = new Config().setLiteMember(true);\n+\n+        // start first hazelcast instance as a lite member\n+        HazelcastInstance firstHazelcastInstance = factory.newHazelcastInstance(config);\n+\n+        // start second and third hazelcast instances as a lite member\n+        HazelcastInstance secondHazelcastInstance = factory.newHazelcastInstance(config);\n+        HazelcastInstance thirdHazelcastInstance = factory.newHazelcastInstance(config);\n+\n+        // promote all instances to data members\n+        firstHazelcastInstance.getCluster().promoteLocalLiteMember();\n+        secondHazelcastInstance.getCluster().promoteLocalLiteMember();\n+        thirdHazelcastInstance.getCluster().promoteLocalLiteMember();\n+\n+        // check if cluster is in a good shape\n+        assertTrueEventually(() -> assertTrue(firstHazelcastInstance.getPartitionService().isClusterSafe()));\n+\n+        // insert some dummy data into the testing map\n+        String mapName = randomMapName();\n+        IMap<String, String> testMap = firstHazelcastInstance.getMap(mapName);\n+        for (int i = 0; i < entryCount; ++i) {\n+            testMap.put(\"key\" + i, \"value\" + i);\n+        }\n+\n+        // check all data is correctly inserted\n+        assertEquals(entryCount, testMap.size());\n+\n+        // kill second instance\n+        secondHazelcastInstance.getLifecycleService().terminate();\n+\n+        // backup count for the map is set to 1\n+        // even with 1 node down, no data loss is expected\n+        assertTrueEventually(() -> assertEquals(entryCount, firstHazelcastInstance.getMap(mapName).size()));\n+        assertTrueEventually(() -> assertEquals(entryCount, thirdHazelcastInstance.getMap(mapName).size()));\n+    }\n+\n+    @Test\n+    public void lite_member_promotion_data_loss2() throws InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0509105f07b4a645459cb82b5156481ad884604"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjM0MDA2", "url": "https://github.com/hazelcast/hazelcast/pull/17644#pullrequestreview-502234006", "createdAt": "2020-10-05T16:39:27Z", "commit": {"oid": "a0509105f07b4a645459cb82b5156481ad884604"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjozOToyN1rOHclKtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjozOToyN1rOHclKtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTczMTEyNA==", "bodyText": "can we give a better name to test? Seeing the state tested against and expected behavior in test method name would be helpful for the future readers.", "url": "https://github.com/hazelcast/hazelcast/pull/17644#discussion_r499731124", "createdAt": "2020-10-05T16:39:27Z", "author": {"login": "ahmetmircik"}, "path": "hazelcast/src/test/java/com/hazelcast/internal/cluster/impl/PromoteLiteMemberTest.java", "diffHunk": "@@ -323,6 +326,86 @@ public void promotion_shouldFail_whenMasterIsSuspected_duringPromotion() throws\n         }\n     }\n \n+    @Test\n+    public void lite_member_promotion_data_loss() throws InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0509105f07b4a645459cb82b5156481ad884604"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjY0OTIz", "url": "https://github.com/hazelcast/hazelcast/pull/17644#pullrequestreview-502264923", "createdAt": "2020-10-05T17:20:43Z", "commit": {"oid": "a0509105f07b4a645459cb82b5156481ad884604"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzoyMDo0NFrOHcmmAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzoyMDo0NFrOHcmmAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1NDQ5Nw==", "bodyText": "it is hard to to follow similar named methods maybe we can make updateMemberGroupsSize() method public and can call it here: node.partitionService.getPartitionStateManager().updateMemberGroupsSize()", "url": "https://github.com/hazelcast/hazelcast/pull/17644#discussion_r499754497", "createdAt": "2020-10-05T17:20:44Z", "author": {"login": "ahmetmircik"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java", "diffHunk": "@@ -342,6 +346,10 @@ void updateMembers(MembersView membersView) {\n \n         setMembers(MemberMap.createNew(membersView.getVersion(), members));\n \n+        if (updatedLiteMember) {\n+            updateMembersGroupSize();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0509105f07b4a645459cb82b5156481ad884604"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjY3MzQ0", "url": "https://github.com/hazelcast/hazelcast/pull/17644#pullrequestreview-502267344", "createdAt": "2020-10-05T17:24:00Z", "commit": {"oid": "a0509105f07b4a645459cb82b5156481ad884604"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzoyNDowMVrOHcmtFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzoyNDowMVrOHcmtFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1NjMwOQ==", "bodyText": "can you please add a short comment to the code to explain the meaning of updatedLiteMember?", "url": "https://github.com/hazelcast/hazelcast/pull/17644#discussion_r499756309", "createdAt": "2020-10-05T17:24:01Z", "author": {"login": "ahmetmircik"}, "path": "hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java", "diffHunk": "@@ -305,11 +305,15 @@ void updateMembers(MembersView membersView) {\n \n         MemberImpl[] members = new MemberImpl[membersView.size()];\n         int memberIndex = 0;\n+        boolean updatedLiteMember = false;\n         for (MemberInfo memberInfo : membersView.getMembers()) {\n             Address address = memberInfo.getAddress();\n             MemberImpl member = currentMemberMap.getMember(address);\n \n             if (member != null && member.getUuid().equals(memberInfo.getUuid())) {\n+                if (member.isLiteMember()) {\n+                    updatedLiteMember = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0509105f07b4a645459cb82b5156481ad884604"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ac4040c70f840bae22175794e658ce2993fa203", "author": {"user": {"login": "petrpleshachkov", "name": null}}, "url": "https://github.com/hazelcast/hazelcast/commit/7ac4040c70f840bae22175794e658ce2993fa203", "committedDate": "2020-10-08T10:46:45Z", "message": "Addressed reviewer's comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1MDM1NTgz", "url": "https://github.com/hazelcast/hazelcast/pull/17644#pullrequestreview-505035583", "createdAt": "2020-10-08T18:02:25Z", "commit": {"oid": "7ac4040c70f840bae22175794e658ce2993fa203"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3186, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}