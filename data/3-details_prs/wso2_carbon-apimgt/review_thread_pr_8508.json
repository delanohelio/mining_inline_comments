{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MDI3NDI2", "number": 8508, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMzo1Mjo0NFrOD8uRVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMDoxODo1MFrOELc2CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0OTk5MjU1OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMzo1Mjo0NFrOGV1nMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNzozMTozOVrOGV5qNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU1MTY2Nw==", "bodyText": "Copyright year does not have to be changed for already existing classes", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r425551667", "createdAt": "2020-05-15T03:52:44Z", "author": {"login": "tgtshanika"}, "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIProvider.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n-*  Copyright (c) 2005-2011, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdc381f57c4b1f771fef0e2a94463b5b2eeba782"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTYxNzk3Mg==", "bodyText": "fixed with beadab3", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r425617972", "createdAt": "2020-05-15T07:31:39Z", "author": {"login": "Meruja"}, "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIProvider.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n-*  Copyright (c) 2005-2011, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU1MTY2Nw=="}, "originalCommit": {"oid": "cdc381f57c4b1f771fef0e2a94463b5b2eeba782"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0OTk5NDM5OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMzo1NDowNFrOGV1oVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMzo1NDowNFrOGV1oVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU1MTk1Nw==", "bodyText": "Line length has to be below 120", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r425551957", "createdAt": "2020-05-15T03:54:04Z", "author": {"login": "tgtshanika"}, "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIProvider.java", "diffHunk": "@@ -957,6 +957,17 @@ boolean updateAPIforStateChange(APIIdentifier identifier, APIStatus newStatus,\n      */\n     String addBlockCondition(String conditionType, String conditionValue) throws APIManagementException;\n \n+    /**\n+     *  Add a block condition with condition status\n+     *\n+     * @param conditionType type of the condition (IP, Context .. )\n+     * @param conditionValue value of the condition\n+     * @param conditionStatus status of the condition\n+     * @return UUID of the new Block Condition\n+     * @throws APIManagementException\n+     */\n+    String addBlockCondition(String conditionType, String conditionValue, boolean conditionStatus) throws APIManagementException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdc381f57c4b1f771fef0e2a94463b5b2eeba782"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0OTk5Nzk1OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMzo1NjoxMlrOGV1qYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMzo1NjoxMlrOGV1qYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU1MjQ4Mw==", "bodyText": "Add block condition", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r425552483", "createdAt": "2020-05-15T03:56:12Z", "author": {"login": "tgtshanika"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -6174,6 +6174,34 @@ public String addBlockCondition(String conditionType, String conditionValue) thr\n         return createdBlockConditionsDto.getUUID();\n     }\n \n+    /**\n+     * addBlockCondition with condition status", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdc381f57c4b1f771fef0e2a94463b5b2eeba782"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0OTk5OTE4OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMzo1Njo1M1rOGV1rCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMzo1Njo1M1rOGV1rCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU1MjY1MQ==", "bodyText": "Please maintain 120 line length", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r425552651", "createdAt": "2020-05-15T03:56:53Z", "author": {"login": "tgtshanika"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -6174,6 +6174,34 @@ public String addBlockCondition(String conditionType, String conditionValue) thr\n         return createdBlockConditionsDto.getUUID();\n     }\n \n+    /**\n+     * addBlockCondition with condition status\n+     *\n+     * @param conditionType type of the condition (IP, Context .. )\n+     * @param conditionValue value of the condition\n+     * @param conditionStatus status of the condition\n+     */\n+    public String addBlockCondition(String conditionType, String conditionValue, boolean conditionStatus) throws APIManagementException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdc381f57c4b1f771fef0e2a94463b5b2eeba782"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MDAxNzkyOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNDowOTowNVrOGV11zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNDowOTowNVrOGV11zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU1NTQwNw==", "bodyText": "Add context information to error messages (block condition type, value)", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r425555407", "createdAt": "2020-05-15T04:09:05Z", "author": {"login": "tgtshanika"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java", "diffHunk": "@@ -892,14 +892,11 @@ public Response throttlingBlacklistPost(BlockingConditionDTO body, String conten\n             if (RestApiUtil.isDueToResourceAlreadyExists(e)) {\n                 RestApiUtil.handleResourceAlreadyExistsError(\"A black list item with type: \" + body.getConditionType() + \", value: \" + body.getConditionValue() + \" already exists\", e, log);\n             } else {\n-                String errorMessage =\n-                        \"Error while adding Blocking Condition. Condition type: \" + body.getConditionType() + \", \" +\n-                                \"value: \" + body.getConditionValue();\n+                String errorMessage = \"Error while adding Blocking Condition : \" + e.getMessage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdc381f57c4b1f771fef0e2a94463b5b2eeba782"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MDAxOTgwOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNDoxMDo0MVrOGV13FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNDoxMDo0MVrOGV13FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU1NTczMw==", "bodyText": "Add block condition context info so that someone can correlate the error messages with corresponding block condition.", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r425555733", "createdAt": "2020-05-15T04:10:41Z", "author": {"login": "tgtshanika"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java", "diffHunk": "@@ -892,14 +892,11 @@ public Response throttlingBlacklistPost(BlockingConditionDTO body, String conten\n             if (RestApiUtil.isDueToResourceAlreadyExists(e)) {\n                 RestApiUtil.handleResourceAlreadyExistsError(\"A black list item with type: \" + body.getConditionType() + \", value: \" + body.getConditionValue() + \" already exists\", e, log);\n             } else {\n-                String errorMessage =\n-                        \"Error while adding Blocking Condition. Condition type: \" + body.getConditionType() + \", \" +\n-                                \"value: \" + body.getConditionValue();\n+                String errorMessage = \"Error while adding Blocking Condition : \" + e.getMessage();\n                 RestApiUtil.handleInternalServerError(errorMessage, e, log);\n             }\n         } catch (URISyntaxException | ParseException e) {\n-            String errorMessage =\n-                    \"Error while retrieving Blocking Condition resource location. Condition type: \" + body.getConditionType() + \", value: \" + body.getConditionValue();\n+            String errorMessage = \"Error while retrieving Blocking Condition resource location: \"  + e.getMessage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdc381f57c4b1f771fef0e2a94463b5b2eeba782"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MDM1OTY4OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNzoxMTowMVrOGV5FZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNzoxMTowMVrOGV5FZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTYwODU1MA==", "bodyText": "max line width exceeded", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r425608550", "createdAt": "2020-05-15T07:11:01Z", "author": {"login": "tgtshanika"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java", "diffHunk": "@@ -875,12 +875,12 @@ public Response throttlingBlacklistPost(BlockingConditionDTO body, String conten\n             //  exists in the system\n             String uuid = null;\n             if (APIConstants.BLOCKING_CONDITIONS_API.equals(body.getConditionType()) || APIConstants.BLOCKING_CONDITIONS_APPLICATION.equals(body.getConditionType()) || APIConstants.BLOCKING_CONDITIONS_USER.equals(body.getConditionType())) {\n-                uuid = apiProvider.addBlockCondition(body.getConditionType(), (String) body.getConditionValue());\n+                uuid = apiProvider.addBlockCondition(body.getConditionType(), (String) body.getConditionValue(), body.isConditionStatus());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdc381f57c4b1f771fef0e2a94463b5b2eeba782"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDQxOTcwOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIAdminImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMDoxMjozNlrOGtBQVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNjoxNjozNVrOGteIfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1OTY2OA==", "bodyText": "Shall we add the override annotation to this method to indicate this method overrides the method declared in the APIAdmin.java interface?", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r449859668", "createdAt": "2020-07-05T10:12:36Z", "author": {"login": "hisanhunais"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIAdminImpl.java", "diffHunk": "@@ -311,6 +312,18 @@ public void deleteCategory(String categoryID, String username) throws APIManagem\n         return apiMgtDAO.getAllCategories(tenantId);\n     }\n \n+    public List<APICategory> getAPICategoriesOfTenant(int tenantId) throws APIManagementException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beadab38e2bef37fd638ac87ebea3d2abc1168e9"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzMjc5Ng==", "bodyText": "Fixed with d1a24a8", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r450332796", "createdAt": "2020-07-06T16:16:35Z", "author": {"login": "Meruja"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIAdminImpl.java", "diffHunk": "@@ -311,6 +312,18 @@ public void deleteCategory(String categoryID, String username) throws APIManagem\n         return apiMgtDAO.getAllCategories(tenantId);\n     }\n \n+    public List<APICategory> getAPICategoriesOfTenant(int tenantId) throws APIManagementException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1OTY2OA=="}, "originalCommit": {"oid": "beadab38e2bef37fd638ac87ebea3d2abc1168e9"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDQyMjI3OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIAdmin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMDoxNjoyMlrOGtBRiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNjoxNzoxM1rOGteJ8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1OTk3Ng==", "bodyText": "Shall we add descriptions to the java doc comments?", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r449859976", "createdAt": "2020-07-05T10:16:22Z", "author": {"login": "hisanhunais"}, "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIAdmin.java", "diffHunk": "@@ -175,6 +175,15 @@ void updateMonetizationUsagePublishInfo(MonetizationUsagePublishInfo monetizatio\n      */\n     List<APICategory> getAllAPICategoriesOfTenant(int tenantID) throws APIManagementException;\n \n+    /**\n+     * Returns all api categories of the tenant with number of APIs for each category\n+     *\n+     * @param tenantID\n+     * @return", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beadab38e2bef37fd638ac87ebea3d2abc1168e9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzMzE3MA==", "bodyText": "Need to remove @return as it is a void method\nFixed with d1a24a8", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r450333170", "createdAt": "2020-07-06T16:17:13Z", "author": {"login": "Meruja"}, "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIAdmin.java", "diffHunk": "@@ -175,6 +175,15 @@ void updateMonetizationUsagePublishInfo(MonetizationUsagePublishInfo monetizatio\n      */\n     List<APICategory> getAllAPICategoriesOfTenant(int tenantID) throws APIManagementException;\n \n+    /**\n+     * Returns all api categories of the tenant with number of APIs for each category\n+     *\n+     * @param tenantID\n+     * @return", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1OTk3Ng=="}, "originalCommit": {"oid": "beadab38e2bef37fd638ac87ebea3d2abc1168e9"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDQyMzc3OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMDoxODo1MFrOGtBSUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNjoxNzoyMVrOGteKOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg2MDE3Nw==", "bodyText": "Shall we add the override annotation here to indicate this method overrides the method declared in the APIProvider.java interface?\nShall we also remove the java docs comments since the comments are already available in the method declared in the APIProvider.java interface?", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r449860177", "createdAt": "2020-07-05T10:18:50Z", "author": {"login": "hisanhunais"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -6174,6 +6174,35 @@ public String addBlockCondition(String conditionType, String conditionValue) thr\n         return createdBlockConditionsDto.getUUID();\n     }\n \n+    /**\n+     * Add Block Condition with condition status\n+     *\n+     * @param conditionType type of the condition (IP, Context .. )\n+     * @param conditionValue value of the condition\n+     * @param conditionStatus status of the condition\n+     */\n+    public String addBlockCondition(String conditionType, String conditionValue, boolean conditionStatus)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beadab38e2bef37fd638ac87ebea3d2abc1168e9"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzMzI0MQ==", "bodyText": "Fixed with d1a24a8", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r450333241", "createdAt": "2020-07-06T16:17:21Z", "author": {"login": "Meruja"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -6174,6 +6174,35 @@ public String addBlockCondition(String conditionType, String conditionValue) thr\n         return createdBlockConditionsDto.getUUID();\n     }\n \n+    /**\n+     * Add Block Condition with condition status\n+     *\n+     * @param conditionType type of the condition (IP, Context .. )\n+     * @param conditionValue value of the condition\n+     * @param conditionStatus status of the condition\n+     */\n+    public String addBlockCondition(String conditionType, String conditionValue, boolean conditionStatus)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg2MDE3Nw=="}, "originalCommit": {"oid": "beadab38e2bef37fd638ac87ebea3d2abc1168e9"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3384, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}