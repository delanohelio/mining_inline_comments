{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NjU5NTM4", "number": 8491, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMTozODoxOVrOD7nEdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMzo0Mzo1N1rOD7qDZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODMyNjk1OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/EndpointRegistryImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMTozODoxOVrOGUCe0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMjo1NDozOFrOGUFIlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY2NTM2MA==", "bodyText": "Shall we do this in the REST API level, so that we can throw the exception from there itself? I felt the readability is a bit reduced when we throw it from here and catch it from the parent and then handle the exception again. Also, this supports the single responsibility principle by only focusing on the delete operation.", "url": "https://github.com/wso2/carbon-apimgt/pull/8491#discussion_r423665360", "createdAt": "2020-05-12T11:38:19Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/EndpointRegistryImpl.java", "diffHunk": "@@ -78,6 +78,21 @@ public EndpointRegistryInfo getEndpointRegistryByUUID(String registryId) throws\n         return apiMgtDAO.getEndpointRegistryByUUID(registryId);\n     }\n \n+    /**\n+     * Deletes an Endpoint Registry\n+     *\n+     * @param registryId Registry Identifier(UUID)\n+     * @throws APIManagementException if failed to delete the Endpoint Registry\n+     */\n+    public void deleteEndpointRegistry(String registryId) throws APIManagementException {\n+        EndpointRegistryInfo endpointRegistryInfo = apiMgtDAO.getEndpointRegistryByUUID(registryId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ec56847f87e56b3bac72faabfa6d265f98959e8"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY2NTgyMw==", "bodyText": "if you agree with this approach, you may change the same in other places as well.", "url": "https://github.com/wso2/carbon-apimgt/pull/8491#discussion_r423665823", "createdAt": "2020-05-12T11:39:15Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/EndpointRegistryImpl.java", "diffHunk": "@@ -78,6 +78,21 @@ public EndpointRegistryInfo getEndpointRegistryByUUID(String registryId) throws\n         return apiMgtDAO.getEndpointRegistryByUUID(registryId);\n     }\n \n+    /**\n+     * Deletes an Endpoint Registry\n+     *\n+     * @param registryId Registry Identifier(UUID)\n+     * @throws APIManagementException if failed to delete the Endpoint Registry\n+     */\n+    public void deleteEndpointRegistry(String registryId) throws APIManagementException {\n+        EndpointRegistryInfo endpointRegistryInfo = apiMgtDAO.getEndpointRegistryByUUID(registryId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY2NTM2MA=="}, "originalCommit": {"oid": "9ec56847f87e56b3bac72faabfa6d265f98959e8"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzcwODgyMw==", "bodyText": "Fixed with the commit dd74437", "url": "https://github.com/wso2/carbon-apimgt/pull/8491#discussion_r423708823", "createdAt": "2020-05-12T12:54:38Z", "author": {"login": "ChamodDamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/EndpointRegistryImpl.java", "diffHunk": "@@ -78,6 +78,21 @@ public EndpointRegistryInfo getEndpointRegistryByUUID(String registryId) throws\n         return apiMgtDAO.getEndpointRegistryByUUID(registryId);\n     }\n \n+    /**\n+     * Deletes an Endpoint Registry\n+     *\n+     * @param registryId Registry Identifier(UUID)\n+     * @throws APIManagementException if failed to delete the Endpoint Registry\n+     */\n+    public void deleteEndpointRegistry(String registryId) throws APIManagementException {\n+        EndpointRegistryInfo endpointRegistryInfo = apiMgtDAO.getEndpointRegistryByUUID(registryId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY2NTM2MA=="}, "originalCommit": {"oid": "9ec56847f87e56b3bac72faabfa6d265f98959e8"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODgxNTczOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMzo0Mzo1N1rOGUHSRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMzo1MTo0OVrOGUHqnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc0NDA3MA==", "bodyText": "We don't need this right? since we have 'delete on cascade' ? deleting the registry should delete the entries automatically.", "url": "https://github.com/wso2/carbon-apimgt/pull/8491#discussion_r423744070", "createdAt": "2020-05-12T13:43:57Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -14789,6 +14792,32 @@ public EndpointRegistryInfo getEndpointRegistryByUUID(String registryId) throws\n         return null;\n     }\n \n+    /**\n+     * Deletes an Endpoint Registry\n+     *\n+     * @param registryUUID Registry Identifier(UUID)\n+     * @param registryId Registry Identifier\n+     * @throws APIManagementException if failed to delete the Endpoint Registry\n+     */\n+    public void deleteEndpointRegistry(String registryUUID, int registryId) throws APIManagementException {\n+        String deleteRegQuery = SQLConstants.DELETE_ENDPOINT_REGISTRY_SQL;\n+        String deleteRegEntryQuery = SQLConstants.DELETE_ENDPOINT_REGISTRY_ENTRY_BY_REGISTRY_ID_SQL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6e1f3813d3d253476c07cf3ae7b5e4900f70600"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc0NzgyOA==", "bodyText": "Ah yes. I ll update it", "url": "https://github.com/wso2/carbon-apimgt/pull/8491#discussion_r423747828", "createdAt": "2020-05-12T13:48:47Z", "author": {"login": "ChamodDamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -14789,6 +14792,32 @@ public EndpointRegistryInfo getEndpointRegistryByUUID(String registryId) throws\n         return null;\n     }\n \n+    /**\n+     * Deletes an Endpoint Registry\n+     *\n+     * @param registryUUID Registry Identifier(UUID)\n+     * @param registryId Registry Identifier\n+     * @throws APIManagementException if failed to delete the Endpoint Registry\n+     */\n+    public void deleteEndpointRegistry(String registryUUID, int registryId) throws APIManagementException {\n+        String deleteRegQuery = SQLConstants.DELETE_ENDPOINT_REGISTRY_SQL;\n+        String deleteRegEntryQuery = SQLConstants.DELETE_ENDPOINT_REGISTRY_ENTRY_BY_REGISTRY_ID_SQL;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc0NDA3MA=="}, "originalCommit": {"oid": "a6e1f3813d3d253476c07cf3ae7b5e4900f70600"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc1MDMwMA==", "bodyText": "Fixed in ff8b5f9", "url": "https://github.com/wso2/carbon-apimgt/pull/8491#discussion_r423750300", "createdAt": "2020-05-12T13:51:49Z", "author": {"login": "ChamodDamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -14789,6 +14792,32 @@ public EndpointRegistryInfo getEndpointRegistryByUUID(String registryId) throws\n         return null;\n     }\n \n+    /**\n+     * Deletes an Endpoint Registry\n+     *\n+     * @param registryUUID Registry Identifier(UUID)\n+     * @param registryId Registry Identifier\n+     * @throws APIManagementException if failed to delete the Endpoint Registry\n+     */\n+    public void deleteEndpointRegistry(String registryUUID, int registryId) throws APIManagementException {\n+        String deleteRegQuery = SQLConstants.DELETE_ENDPOINT_REGISTRY_SQL;\n+        String deleteRegEntryQuery = SQLConstants.DELETE_ENDPOINT_REGISTRY_ENTRY_BY_REGISTRY_ID_SQL;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc0NDA3MA=="}, "originalCommit": {"oid": "a6e1f3813d3d253476c07cf3ae7b5e4900f70600"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3523, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}