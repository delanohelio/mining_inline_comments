{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyOTI4NjA4", "number": 8164, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNDo1Mjo0OVrODeVQBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNDo1Mjo0OVrODeVQBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMTMyMDM3OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNDo1Mjo0OVrOFnaMlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNTowMzowOFrOFnaSqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg2Nzk5MA==", "bodyText": "Are you trying to do below?\nscopeRoles = String.join(\",\", mappedRoles);", "url": "https://github.com/wso2/carbon-apimgt/pull/8164#discussion_r376867990", "createdAt": "2020-02-10T04:52:49Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -7225,16 +7281,38 @@ public static JSONObject getTenantDefaultRoles(String tenantDomain) throws APIMa\n     }\n \n     /**\n-     * @param config JSON configuration object with scopes and associated roles\n+     * @param scopesConfig JSON configuration object with scopes and associated roles\n+     * @param roleMappings JSON Configuration object with role mappings\n      * @return Map of scopes which contains scope names and associated role list\n      */\n-    public static Map<String, String> getRESTAPIScopesFromConfig(JSONObject config) {\n+    public static Map<String, String> getRESTAPIScopesFromConfig(JSONObject scopesConfig, JSONObject roleMappings) {\n         Map<String, String> scopes = new HashMap<String, String>();\n-        JSONArray scopesArray = (JSONArray) config.get(\"Scope\");\n+        JSONArray scopesArray = (JSONArray) scopesConfig.get(\"Scope\");\n         for (Object scopeObj : scopesArray) {\n             JSONObject scope = (JSONObject) scopeObj;\n             String scopeName = scope.get(APIConstants.REST_API_SCOPE_NAME).toString();\n             String scopeRoles = scope.get(APIConstants.REST_API_SCOPE_ROLE).toString();\n+            if (roleMappings != null) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"REST API scope role mappings exist. Hence proceeding to swap original scope roles \"\n+                            + \"for mapped scope roles.\");\n+                }\n+                //split role list string read using comma separator\n+                List<String> originalRoles = Arrays.asList(scopeRoles.split(\"\\\\s*,\\\\s*\"));\n+                List<String> mappedRoles = new ArrayList<String>();\n+                for (String role : originalRoles) {\n+                    String mappedRole = (String) roleMappings.get(role);\n+                    if (mappedRole != null) {\n+                        if (log.isDebugEnabled()) {\n+                            log.debug(role + \" was mapped to \" + mappedRole);\n+                        }\n+                        mappedRoles.add(mappedRole);\n+                    } else {\n+                        mappedRoles.add(role);\n+                    }\n+                }\n+                scopeRoles = mappedRoles.toString().replace(\"[\", \"\").replace(\"]\", \"\").replace(\" \", \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9fd7b606b732efdf08fc48c880be3d1b8a8027e"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg2OTU0Ng==", "bodyText": "yes, fixed with 1bffd03", "url": "https://github.com/wso2/carbon-apimgt/pull/8164#discussion_r376869546", "createdAt": "2020-02-10T05:03:08Z", "author": {"login": "msm1992"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -7225,16 +7281,38 @@ public static JSONObject getTenantDefaultRoles(String tenantDomain) throws APIMa\n     }\n \n     /**\n-     * @param config JSON configuration object with scopes and associated roles\n+     * @param scopesConfig JSON configuration object with scopes and associated roles\n+     * @param roleMappings JSON Configuration object with role mappings\n      * @return Map of scopes which contains scope names and associated role list\n      */\n-    public static Map<String, String> getRESTAPIScopesFromConfig(JSONObject config) {\n+    public static Map<String, String> getRESTAPIScopesFromConfig(JSONObject scopesConfig, JSONObject roleMappings) {\n         Map<String, String> scopes = new HashMap<String, String>();\n-        JSONArray scopesArray = (JSONArray) config.get(\"Scope\");\n+        JSONArray scopesArray = (JSONArray) scopesConfig.get(\"Scope\");\n         for (Object scopeObj : scopesArray) {\n             JSONObject scope = (JSONObject) scopeObj;\n             String scopeName = scope.get(APIConstants.REST_API_SCOPE_NAME).toString();\n             String scopeRoles = scope.get(APIConstants.REST_API_SCOPE_ROLE).toString();\n+            if (roleMappings != null) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"REST API scope role mappings exist. Hence proceeding to swap original scope roles \"\n+                            + \"for mapped scope roles.\");\n+                }\n+                //split role list string read using comma separator\n+                List<String> originalRoles = Arrays.asList(scopeRoles.split(\"\\\\s*,\\\\s*\"));\n+                List<String> mappedRoles = new ArrayList<String>();\n+                for (String role : originalRoles) {\n+                    String mappedRole = (String) roleMappings.get(role);\n+                    if (mappedRole != null) {\n+                        if (log.isDebugEnabled()) {\n+                            log.debug(role + \" was mapped to \" + mappedRole);\n+                        }\n+                        mappedRoles.add(mappedRole);\n+                    } else {\n+                        mappedRoles.add(role);\n+                    }\n+                }\n+                scopeRoles = mappedRoles.toString().replace(\"[\", \"\").replace(\"]\", \"\").replace(\" \", \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg2Nzk5MA=="}, "originalCommit": {"oid": "f9fd7b606b732efdf08fc48c880be3d1b8a8027e"}, "originalPosition": 136}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2859, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}