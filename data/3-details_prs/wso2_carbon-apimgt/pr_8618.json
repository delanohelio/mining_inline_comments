{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1OTA0NDQ2", "number": 8618, "title": "Improve definition validation in endpoint registry", "bodyText": "Added a new interface DefinitionValidator\nImplemented parsing logic for different definition types implementing the DefinitionValidator", "createdAt": "2020-06-01T10:55:15Z", "url": "https://github.com/wso2/carbon-apimgt/pull/8618", "merged": true, "mergeCommit": {"oid": "749ee845847f02f32dd924eaaf56ef8de87c9558"}, "closed": true, "closedAt": "2020-06-03T08:38:56Z", "author": {"login": "ChamodDamitha"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnZRSJABqjMzOTg5Njg0MDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdBAPLIAFqTQ3MjI4ODc4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c4274550288178f609363deee99b5cb631915ed2", "author": {"user": {"login": "ChamodDamitha", "name": "Chamod Damitha Samarajeewa"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/c4274550288178f609363deee99b5cb631915ed2", "committedDate": "2020-06-01T03:44:05Z", "message": "Add DefinitionValidationException"}, "afterCommit": {"oid": "885bfc5f2463b9f18bcb1c758a68f4c0fa87dc27", "author": {"user": {"login": "ChamodDamitha", "name": "Chamod Damitha Samarajeewa"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/885bfc5f2463b9f18bcb1c758a68f4c0fa87dc27", "committedDate": "2020-06-02T18:34:34Z", "message": "Add DefinitionValidationException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8899489e1abe6a98572804587cad623e146ef9f3", "author": {"user": {"login": "ChamodDamitha", "name": "Chamod Damitha Samarajeewa"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/8899489e1abe6a98572804587cad623e146ef9f3", "committedDate": "2020-06-02T18:40:00Z", "message": "Improve definition validation in endpoint registry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9af9a71b58b717323533f1604c2b2d5756916e80", "author": {"user": {"login": "ChamodDamitha", "name": "Chamod Damitha Samarajeewa"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/9af9a71b58b717323533f1604c2b2d5756916e80", "committedDate": "2020-06-02T18:40:08Z", "message": "Add DefinitionValidationException"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "885bfc5f2463b9f18bcb1c758a68f4c0fa87dc27", "author": {"user": {"login": "ChamodDamitha", "name": "Chamod Damitha Samarajeewa"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/885bfc5f2463b9f18bcb1c758a68f4c0fa87dc27", "committedDate": "2020-06-02T18:34:34Z", "message": "Add DefinitionValidationException"}, "afterCommit": {"oid": "9af9a71b58b717323533f1604c2b2d5756916e80", "author": {"user": {"login": "ChamodDamitha", "name": "Chamod Damitha Samarajeewa"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/9af9a71b58b717323533f1604c2b2d5756916e80", "committedDate": "2020-06-02T18:40:08Z", "message": "Add DefinitionValidationException"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyOTc1NDcy", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#pullrequestreview-422975472", "createdAt": "2020-06-02T19:04:20Z", "commit": {"oid": "9af9a71b58b717323533f1604c2b2d5756916e80"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxOTowNDoyMFrOGeAGCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxOTowNDoyMFrOGeAGCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDExMjAwOQ==", "bodyText": "Throw the Exceptions from the method signatures.", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r434112009", "createdAt": "2020-06-02T19:04:20Z", "author": {"login": "jaadds"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/endpoint/registry/util/DefinitionValidator.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.apimgt.impl.endpoint.registry.util;\n+\n+import java.net.URL;\n+\n+/**\n+ * An API Definition Validator Interface\n+ */\n+public interface DefinitionValidator {\n+\n+    boolean validate(URL definitionUrl);\n+\n+    boolean validate(byte[] definition);\n+\n+    boolean validate(String definition);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9af9a71b58b717323533f1604c2b2d5756916e80"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyOTc1NjUy", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#pullrequestreview-422975652", "createdAt": "2020-06-02T19:04:37Z", "commit": {"oid": "9af9a71b58b717323533f1604c2b2d5756916e80"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxOTowNDozN1rOGeAGpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxOTowNDozN1rOGeAGpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDExMjE2NQ==", "bodyText": "Let the exception come through the validation.", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r434112165", "createdAt": "2020-06-02T19:04:37Z", "author": {"login": "jaadds"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/endpoint/registry/util/EndpointRegistryUtil.java", "diffHunk": "@@ -32,4 +46,24 @@ public static void raiseResourceAlreadyExistsException(String msg) throws\n         throw new EndpointRegistryResourceAlreadyExistsException(msg);\n     }\n \n+    public static boolean isValidDefinition(URL definitionURL, String definitionType)\n+            throws DefinitionValidationException {\n+        DefinitionValidator definitionValidator = definitionValidatorMap.get(definitionType);\n+        if (definitionValidator != null) {\n+            return definitionValidator.validate(definitionURL);\n+        }\n+        throw new DefinitionValidationException(\"No Definition Validator found for the given definition type: '\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9af9a71b58b717323533f1604c2b2d5756916e80"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyOTc1OTk0", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#pullrequestreview-422975994", "createdAt": "2020-06-02T19:05:04Z", "commit": {"oid": "9af9a71b58b717323533f1604c2b2d5756916e80"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxOTowNTowNFrOGeAHoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxOTowNTowNFrOGeAHoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDExMjQxNg==", "bodyText": "Rather than capturing and logging this, throw a ValidationException.", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r434112416", "createdAt": "2020-06-02T19:05:04Z", "author": {"login": "jaadds"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/endpoint/registry/util/GraphQLDefinitionValidator.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.apimgt.impl.endpoint.registry.util;\n+\n+import graphql.schema.GraphQLSchema;\n+import graphql.schema.idl.SchemaParser;\n+import graphql.schema.idl.TypeDefinitionRegistry;\n+import graphql.schema.idl.UnExecutableSchemaGenerator;\n+import graphql.schema.idl.errors.SchemaProblem;\n+import graphql.schema.validation.SchemaValidationError;\n+import graphql.schema.validation.SchemaValidator;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import java.io.IOException;\n+import java.net.URL;\n+import java.util.Set;\n+\n+/**\n+ * This class provides the functionality of validating GraphQL definitions\n+ */\n+public class GraphQLDefinitionValidator implements DefinitionValidator {\n+    private static final Log log = LogFactory.getLog(GraphQLDefinitionValidator.class);\n+\n+    @Override\n+    public boolean validate(URL definitionUrl) {\n+        boolean isValid = false;\n+        try {\n+            String definitionContent = IOUtils.toString(definitionUrl.openStream());\n+            isValid = validate(definitionContent);\n+        } catch (IOException e) {\n+            log.error(\"Error in reading content in the definition URL: \" + definitionUrl, e);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9af9a71b58b717323533f1604c2b2d5756916e80"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMTk5NTQ3", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#pullrequestreview-423199547", "createdAt": "2020-06-03T03:49:48Z", "commit": {"oid": "9af9a71b58b717323533f1604c2b2d5756916e80"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMzo0OTo0OFrOGeLHJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMzo0OTo0OFrOGeLHJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI5MjUxNw==", "bodyText": "let's add java docs", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r434292517", "createdAt": "2020-06-03T03:49:48Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/endpoint/registry/util/EndpointRegistryUtil.java", "diffHunk": "@@ -32,4 +46,24 @@ public static void raiseResourceAlreadyExistsException(String msg) throws\n         throw new EndpointRegistryResourceAlreadyExistsException(msg);\n     }\n \n+    public static boolean isValidDefinition(URL definitionURL, String definitionType)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9af9a71b58b717323533f1604c2b2d5756916e80"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMTk5NTk3", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#pullrequestreview-423199597", "createdAt": "2020-06-03T03:50:00Z", "commit": {"oid": "9af9a71b58b717323533f1604c2b2d5756916e80"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMzo1MDowMFrOGeLHTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMzo1MDowMFrOGeLHTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI5MjU1OA==", "bodyText": "javadocs here", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r434292558", "createdAt": "2020-06-03T03:50:00Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/endpoint/registry/util/EndpointRegistryUtil.java", "diffHunk": "@@ -32,4 +46,24 @@ public static void raiseResourceAlreadyExistsException(String msg) throws\n         throw new EndpointRegistryResourceAlreadyExistsException(msg);\n     }\n \n+    public static boolean isValidDefinition(URL definitionURL, String definitionType)\n+            throws DefinitionValidationException {\n+        DefinitionValidator definitionValidator = definitionValidatorMap.get(definitionType);\n+        if (definitionValidator != null) {\n+            return definitionValidator.validate(definitionURL);\n+        }\n+        throw new DefinitionValidationException(\"No Definition Validator found for the given definition type: '\"\n+                + definitionType + \"'\");\n+    }\n+\n+    public static boolean isValidDefinition(byte[] definitionContent, String definitionType)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9af9a71b58b717323533f1604c2b2d5756916e80"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMTk5ODI0", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#pullrequestreview-423199824", "createdAt": "2020-06-03T03:50:54Z", "commit": {"oid": "9af9a71b58b717323533f1604c2b2d5756916e80"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMzo1MDo1NFrOGeLILA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMzo1MDo1NFrOGeLILA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI5Mjc4MA==", "bodyText": "shouldn't an exception be thrown in here?", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r434292780", "createdAt": "2020-06-03T03:50:54Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/endpoint/registry/util/GraphQLDefinitionValidator.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.apimgt.impl.endpoint.registry.util;\n+\n+import graphql.schema.GraphQLSchema;\n+import graphql.schema.idl.SchemaParser;\n+import graphql.schema.idl.TypeDefinitionRegistry;\n+import graphql.schema.idl.UnExecutableSchemaGenerator;\n+import graphql.schema.idl.errors.SchemaProblem;\n+import graphql.schema.validation.SchemaValidationError;\n+import graphql.schema.validation.SchemaValidator;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import java.io.IOException;\n+import java.net.URL;\n+import java.util.Set;\n+\n+/**\n+ * This class provides the functionality of validating GraphQL definitions\n+ */\n+public class GraphQLDefinitionValidator implements DefinitionValidator {\n+    private static final Log log = LogFactory.getLog(GraphQLDefinitionValidator.class);\n+\n+    @Override\n+    public boolean validate(URL definitionUrl) {\n+        boolean isValid = false;\n+        try {\n+            String definitionContent = IOUtils.toString(definitionUrl.openStream());\n+            isValid = validate(definitionContent);\n+        } catch (IOException e) {\n+            log.error(\"Error in reading content in the definition URL: \" + definitionUrl, e);\n+        }\n+        return isValid;\n+    }\n+\n+    @Override\n+    public boolean validate(byte[] definition) {\n+        String definitionContent = new String(definition);\n+        return validate(definitionContent);\n+    }\n+\n+    @Override\n+    public boolean validate(String definition) {\n+        boolean isValid = false;\n+        try {\n+            SchemaParser schemaParser = new SchemaParser();\n+            TypeDefinitionRegistry typeRegistry = schemaParser.parse(definition);\n+            GraphQLSchema graphQLSchema = UnExecutableSchemaGenerator.makeUnExecutableSchema(typeRegistry);\n+            SchemaValidator schemaValidation = new SchemaValidator();\n+            Set<SchemaValidationError> validationErrors = schemaValidation.validateSchema(graphQLSchema);\n+            isValid = (validationErrors.toArray().length == 0);\n+        } catch (SchemaProblem e) {\n+            log.error(\"Unable to parse the GraphQL definition\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9af9a71b58b717323533f1604c2b2d5756916e80"}, "originalPosition": 71}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d385b99ae50b2a9215e3d376d6cdd188b5d9138a", "author": {"user": {"login": "ChamodDamitha", "name": "Chamod Damitha Samarajeewa"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/d385b99ae50b2a9215e3d376d6cdd188b5d9138a", "committedDate": "2020-06-03T04:02:59Z", "message": "Handle DefinitionValidationException"}, "afterCommit": {"oid": "169ace7202aa557c7b6710f5bf9e481af4ff99d4", "author": {"user": {"login": "ChamodDamitha", "name": "Chamod Damitha Samarajeewa"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/169ace7202aa557c7b6710f5bf9e481af4ff99d4", "committedDate": "2020-06-03T04:10:35Z", "message": "Handle DefinitionValidationException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3c01ec3425a723761d230d1b822371a58578411", "author": {"user": {"login": "ChamodDamitha", "name": "Chamod Damitha Samarajeewa"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/f3c01ec3425a723761d230d1b822371a58578411", "committedDate": "2020-06-03T04:46:07Z", "message": "Handle DefinitionValidationException"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "169ace7202aa557c7b6710f5bf9e481af4ff99d4", "author": {"user": {"login": "ChamodDamitha", "name": "Chamod Damitha Samarajeewa"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/169ace7202aa557c7b6710f5bf9e481af4ff99d4", "committedDate": "2020-06-03T04:10:35Z", "message": "Handle DefinitionValidationException"}, "afterCommit": {"oid": "f3c01ec3425a723761d230d1b822371a58578411", "author": {"user": {"login": "ChamodDamitha", "name": "Chamod Damitha Samarajeewa"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/f3c01ec3425a723761d230d1b822371a58578411", "committedDate": "2020-06-03T04:46:07Z", "message": "Handle DefinitionValidationException"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMjMzMDEz", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#pullrequestreview-423233013", "createdAt": "2020-06-03T05:43:01Z", "commit": {"oid": "f3c01ec3425a723761d230d1b822371a58578411"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MTc4MzA2", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#pullrequestreview-468178306", "createdAt": "2020-08-17T05:49:09Z", "commit": {"oid": "f3c01ec3425a723761d230d1b822371a58578411"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNTo0OTowOVrOHBaePg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNTo0OTowOVrOHBaePg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI0NDM1MA==", "bodyText": "class comments?", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r471244350", "createdAt": "2020-08-17T05:49:09Z", "author": {"login": "TanyaM"}, "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/endpoint/registry/api/DefinitionValidationException.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.carbon.apimgt.api.endpoint.registry.api;\n+\n+public class DefinitionValidationException extends EndpointRegistryException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3c01ec3425a723761d230d1b822371a58578411"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMjg4Nzg4", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#pullrequestreview-472288788", "createdAt": "2020-08-21T08:07:43Z", "commit": {"oid": "f3c01ec3425a723761d230d1b822371a58578411"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwODowNzo0M1rOHEhR1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwODowNzo0M1rOHEhR1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUwMTU4OQ==", "bodyText": "Do we need these spaces between every line?", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r474501589", "createdAt": "2020-08-21T08:07:43Z", "author": {"login": "chashikajw"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/endpoint/registry/constants/EndpointRegistryConstants.java", "diffHunk": "@@ -69,5 +69,14 @@\n     public static final String DEFAULT_REGISTRY_NAME = \"Default Registry\";\n \n     public static final String SYSTEM_USER_NAME = \"SYSTEM_USER\";\n+\n+    public static final String DEFINITION_TYPE_OAS = \"OAS\";\n+\n+    public static final String DEFINITION_TYPE_WSDL1 = \"WSDL1\";\n+\n+    public static final String DEFINITION_TYPE_WSDL2 = \"WSDL2\";\n+\n+    public static final String DEFINITION_TYPE_GQL_SDL = \"GQL_SDL\";\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3c01ec3425a723761d230d1b822371a58578411"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2684, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}