{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MjA4OTMz", "number": 9146, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOToyMToxOFrOEV9fVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOToyNDo0MFrOEV9jnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDYyOTk5OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/security/jwt/JWTValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOToyMToxOFrOG9BECw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOToyMToxOFrOG9BECw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYzMzczOQ==", "bodyText": "can make 1 string.", "url": "https://github.com/wso2/carbon-apimgt/pull/9146#discussion_r466633739", "createdAt": "2020-08-06T19:21:18Z", "author": {"login": "bhathiya"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/security/jwt/JWTValidator.java", "diffHunk": "@@ -151,7 +151,13 @@ public AuthenticationContext authenticate(SignedJWTInfo signedJWTInfo, MessageCo\n                     log.debug(\"Subscription validation via Key Manager. Status: \"\n                             + apiKeyValidationInfoDTO.isAuthorized());\n                 }\n+                if (!apiKeyValidationInfoDTO.isAuthorized()){\n+                    log.debug(\n+                            \"User is NOT authorized to access the Resource. API Subscription validation \" + \"failed.\");\n+                    throw new APISecurityException(apiKeyValidationInfoDTO.getValidationStatus(),\n+                            \"User is NOT authorized to access the Resource. API Subscription validation \" + \"failed.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c77f2ff833e544825cf1fb6b776cbdbc93c4defc"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDY0MDkzOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.keymgt/src/main/java/org/wso2/carbon/apimgt/keymgt/service/APIKeyValidationService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOToyNDo0MFrOG9BKpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOToyNDo0MFrOG9BKpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYzNTQyOA==", "bodyText": "why a * here?", "url": "https://github.com/wso2/carbon-apimgt/pull/9146#discussion_r466635428", "createdAt": "2020-08-06T19:24:40Z", "author": {"login": "bhathiya"}, "path": "components/apimgt/org.wso2.carbon.apimgt.keymgt/src/main/java/org/wso2/carbon/apimgt/keymgt/service/APIKeyValidationService.java", "diffHunk": "@@ -484,63 +482,32 @@ public APIKeyValidationInfoDTO validateKeyforHandshake(String context, String ve\n         KeyValidationHandler keyValidationHandler =\r\n                 ServiceReferenceHolder.getInstance().getKeyValidationHandler(tenantDomain);\r\n         boolean state = keyValidationHandler.validateToken(validationContext);\r\n-        ApiMgtDAO dao = ApiMgtDAO.getInstance();\r\n         if (state) {\r\n-            info.setAuthorized(true);\r\n-            info.setValidityPeriod(validationContext.getTokenInfo().getValidityPeriod());\r\n-            info.setIssuedTime(validationContext.getTokenInfo().getIssuedTime());\r\n-            info.setKeyManager(validationContext.getValidationInfoDTO().getKeyManager());\r\n-            String def_version = isDefaultVersionInvoked(validationContext.getContext());\r\n-            if (def_version != null) {\r\n-                defaultVersionInvoked = true;\r\n-                version = def_version;\r\n-                context += \"/\" + def_version;\r\n-                validationContext.setVersion(version);\r\n-                validationContext.setContext(context);\r\n-            }\r\n-            info = dao.validateSubscriptionDetails(info, validationContext.getContext(), validationContext.getVersion(),\r\n-                    validationContext.getTokenInfo().getConsumerKey(), info.getKeyManager(),\r\n-                    defaultVersionInvoked);\r\n-\r\n-            if (defaultVersionInvoked) {\r\n-                info.setApiName(info.getApiName() + \"*\" + version);\r\n-            }\r\n-\r\n-            if (APIKeyMgtDataHolder.isJwtGenerationEnabled() &&\r\n-                    validationContext.getValidationInfoDTO().getEndUserName() != null\r\n-                    && !validationContext.isCacheHit()) {\r\n-                Application application = APIUtil.getApplicationByClientId(validationContext.getValidationInfoDTO()\r\n-                        .getConsumerKey());\r\n-                validationContext.getValidationInfoDTO().setApplicationId(String.valueOf(application.getId()));\r\n-                validationContext.getValidationInfoDTO().setApplicationTier(application.getTier());\r\n-                keyValidationHandler.generateConsumerToken(validationContext);\r\n-                info.setEndUserToken(validationContext.getValidationInfoDTO().getEndUserToken());\r\n+            state = keyValidationHandler.validateSubscription(validationContext);\r\n+            if (state) {\r\n+                if (APIConstants.DEFAULT_WEBSOCKET_VERSION.equals(version)) {\r\n+                    version = info.getApiVersion();\r\n+                    defaultVersionInvoked = true;\r\n+                }\r\n+                if (defaultVersionInvoked) {\r\n+                    validationContext.getValidationInfoDTO().setApiName(info.getApiName() + \"*\" + version);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c77f2ff833e544825cf1fb6b776cbdbc93c4defc"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3055, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}