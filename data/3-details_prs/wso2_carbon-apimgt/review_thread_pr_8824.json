{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5MTc5NTk4", "number": 8824, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMzoxOToxMVrOEIXLXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMzozMTo1NVrOEIXglw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjAzODA2OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMzoxOToxMVrOGoRuRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMzoxOToxMVrOGoRuRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg4NjU5OQ==", "bodyText": "same dependency added twice. Remove one.", "url": "https://github.com/wso2/carbon-apimgt/pull/8824#discussion_r444886599", "createdAt": "2020-06-24T13:19:11Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/pom.xml", "diffHunk": "@@ -299,6 +299,14 @@\n             <groupId>org.wso2.orbit.com.amazonaws</groupId>\n             <artifactId>awslambda</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon.apimgt</groupId>\n+            <artifactId>org.wso2.carbon.apimgt.rest.api.util</artifactId>\n+        </dependency>\n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f78bf8d1f15b24a93497afbe6e5af3de7558ae2f"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjA0NjkxOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/graphQL/GraphQLQueryAnalysisHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMzoyMToyM1rOGoRz4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMzoyMToyM1rOGoRz4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg4ODAzMw==", "bodyText": "don't print stacktrace.", "url": "https://github.com/wso2/carbon-apimgt/pull/8824#discussion_r444888033", "createdAt": "2020-06-24T13:21:23Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/graphQL/GraphQLQueryAnalysisHandler.java", "diffHunk": "@@ -201,17 +199,13 @@ private boolean analyseQueryComplexity(MessageContext messageContext, String pay\n                         errorList.clear();\n                         errorList.add(\"maximum query complexity exceeded\");\n                     }\n-\n                     handleFailure(APISecurityConstants.GRAPHQL_QUERY_TOO_COMPLEX, messageContext,\n                             APISecurityConstants.GRAPHQL_QUERY_TOO_COMPLEX_MESSAGE, errorList.toString());\n                     return false;\n                 }\n-                if (log.isDebugEnabled()) {\n-                    log.debug(\"Maximum query complexity was not exceeded\");\n-                }\n                 return true;\n             } catch (Exception e) {\n-                log.error(e.getMessage(), e);\n+                e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f78bf8d1f15b24a93497afbe6e5af3de7558ae2f"}, "originalPosition": 177}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjA4NTcyOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMzozMDoyNFrOGoSMIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMzozMDoyNFrOGoSMIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg5NDI0MQ==", "bodyText": "remove newline", "url": "https://github.com/wso2/carbon-apimgt/pull/8824#discussion_r444894241", "createdAt": "2020-06-24T13:30:24Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -14490,6 +14423,34 @@ public void updateComplexityDetails(APIIdentifier apiIdentifier, GraphqlComplexi\n     }\n \n \n+    /**\n+     * Add or Update complexity details\n+     *\n+     * @param apiIdentifier         APIIdentifier object to retrieve API ID\n+     * @param graphqlComplexityInfo GraphqlComplexityDetails object\n+     * @throws APIManagementException\n+     */\n+    public void addOrUpdateComplexityDetails(APIIdentifier apiIdentifier, GraphqlComplexityInfo graphqlComplexityInfo)\n+            throws APIManagementException {\n+        String getCustomComplexityDetailsQuery = SQLConstants.GET_CUSTOM_COMPLEXITY_DETAILS_SQL;\n+        try (Connection conn = APIMgtDBUtil.getConnection();\n+             PreparedStatement getCustomComplexityDetails = conn.prepareStatement(getCustomComplexityDetailsQuery)) {\n+            int apiId = getAPIID(apiIdentifier, conn);\n+            getCustomComplexityDetails.setInt(1, apiId);\n+            try (ResultSet rs1 = getCustomComplexityDetails.executeQuery()) {\n+                if (rs1.next()) {\n+                    updateComplexityDetails(apiIdentifier, graphqlComplexityInfo);\n+                } else {\n+                    addComplexityDetails(apiIdentifier, graphqlComplexityInfo);\n+                }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f78bf8d1f15b24a93497afbe6e5af3de7558ae2f"}, "originalPosition": 306}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjA5MDA5OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.keymgt/src/test/resources/dbscripts/h2.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMzozMToyNVrOGoSO1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMzozMToyNVrOGoSO1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg5NDkzMw==", "bodyText": "formatting issue", "url": "https://github.com/wso2/carbon-apimgt/pull/8824#discussion_r444894933", "createdAt": "2020-06-24T13:31:25Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.keymgt/src/test/resources/dbscripts/h2.sql", "diffHunk": "@@ -1559,19 +1559,13 @@ CREATE TABLE IF NOT EXISTS AM_POLICY_SUBSCRIPTION (\n             BILLING_CYCLE VARCHAR(15),\n             PRICE_PER_REQUEST VARCHAR(15),\n             CURRENCY VARCHAR(15),\n+\t    MAX_COMPLEXITY INT(11),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f78bf8d1f15b24a93497afbe6e5af3de7558ae2f"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjA5MjM5OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/mappings/throttling/SubscriptionThrottlePolicyMappingUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMzozMTo1NVrOGoSQRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMzozMTo1NVrOGoSQRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg5NTMwMA==", "bodyText": "formatting issue", "url": "https://github.com/wso2/carbon-apimgt/pull/8824#discussion_r444895300", "createdAt": "2020-06-24T13:31:55Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/mappings/throttling/SubscriptionThrottlePolicyMappingUtil.java", "diffHunk": "@@ -123,8 +123,12 @@ public static SubscriptionPolicy fromSubscriptionThrottlePolicyDTOToModel(Subscr\n         subscriptionPolicy.setRateLimitTimeUnit(dto.getRateLimitTimeUnit());\n         subscriptionPolicy.setRateLimitCount(dto.getRateLimitCount());\n         subscriptionPolicy.setStopOnQuotaReach(dto.isStopOnQuotaReach());\n-        subscriptionPolicy.setGraphQLMaxComplexity(dto.getGraphQLMaxComplexity());\n-        subscriptionPolicy.setGraphQLMaxDepth(dto.getGraphQLMaxDepth());\n+        if(dto.getGraphQLMaxComplexity() != null){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f78bf8d1f15b24a93497afbe6e5af3de7558ae2f"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3202, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}