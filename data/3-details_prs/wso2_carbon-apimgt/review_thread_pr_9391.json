{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxMzM3NTIz", "number": 9391, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQwMjozMzoyOVrOFNAOfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOFQwNzoxMDo1NVrOFXtmVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5MTc5NTE4OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/common/SynapsePropertiesHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQwMjozMzoyOVrOIQ-AaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOVQwOTowODoxMVrOIiLX3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDY2NDA0MQ==", "bodyText": "Shall we use StringUtils.isNotEmpty() here, instead of checking null and empty separately?", "url": "https://github.com/wso2/carbon-apimgt/pull/9391#discussion_r554664041", "createdAt": "2021-01-11T02:33:29Z", "author": {"login": "vithu30"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/common/SynapsePropertiesHandler.java", "diffHunk": "@@ -46,6 +55,13 @@ public boolean handleRequest(MessageContext messageContext) {\n         boolean isContentTypeNotSet = false;\n         if (headers != null) {\n             isContentTypeNotSet = headers.get(\"Content-Type\") == null || headers.get(\"Content-Type\").equals(\"\");\n+            if (headers.get(APIMgtGatewayConstants.HOST) != null || !(\"\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e76e35daa37c4844a1203e09afef8b7eda58e061"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjcwODgyOA==", "bodyText": "Fixed by 65d2992", "url": "https://github.com/wso2/carbon-apimgt/pull/9391#discussion_r572708828", "createdAt": "2021-02-09T09:08:11Z", "author": {"login": "hisanhunais"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/common/SynapsePropertiesHandler.java", "diffHunk": "@@ -46,6 +55,13 @@ public boolean handleRequest(MessageContext messageContext) {\n         boolean isContentTypeNotSet = false;\n         if (headers != null) {\n             isContentTypeNotSet = headers.get(\"Content-Type\") == null || headers.get(\"Content-Type\").equals(\"\");\n+            if (headers.get(APIMgtGatewayConstants.HOST) != null || !(\"\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDY2NDA0MQ=="}, "originalCommit": {"oid": "e76e35daa37c4844a1203e09afef8b7eda58e061"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5MTc5Nzc1OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/common/SynapsePropertiesHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQwMjozNToyMVrOIQ-Bvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOVQwOTowODo0OFrOIiLZyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDY2NDM4Mw==", "bodyText": "Shall we change it as constant.equals(variable) instead of variable.equals(constant)?", "url": "https://github.com/wso2/carbon-apimgt/pull/9391#discussion_r554664383", "createdAt": "2021-01-11T02:35:21Z", "author": {"login": "vithu30"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/common/SynapsePropertiesHandler.java", "diffHunk": "@@ -61,6 +77,62 @@ public boolean handleRequest(MessageContext messageContext) {\n     }\n \n     public boolean handleResponse(MessageContext messageContext) {\n+        if (config == null) {\n+            // Retrieve the ISKMReverseProxyEnabled property value from api manager configurations.\n+            // This value indicates whether the IS Authentication endpoint has been reverse proxied through\n+            // the Gateway.\n+            config = ServiceReferenceHolder.getInstance().getApiManagerConfigurationService()\n+                    .getAPIManagerConfiguration();\n+            iskmReverseProxyEnabled = Boolean.parseBoolean(\n+                    config.getFirstProperty(APIConstants.AUTH_MANAGER + APIConstants.IS_KM_REVERSE_PROXY_ENABLED));\n+        }\n+        // Modify location header only if ISKMReverseProxyEnabled property is set to true\n+        if (iskmReverseProxyEnabled) {\n+            // The logic is related if the API context is \"/authorize\", \"/commonauth\" or \"/oidc\" while status code is 302\n+            if (messageContext.getProperty(RESTConstants.REST_API_CONTEXT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e76e35daa37c4844a1203e09afef8b7eda58e061"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjcwOTMyMA==", "bodyText": "Fixed by 6861d44", "url": "https://github.com/wso2/carbon-apimgt/pull/9391#discussion_r572709320", "createdAt": "2021-02-09T09:08:48Z", "author": {"login": "hisanhunais"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/common/SynapsePropertiesHandler.java", "diffHunk": "@@ -61,6 +77,62 @@ public boolean handleRequest(MessageContext messageContext) {\n     }\n \n     public boolean handleResponse(MessageContext messageContext) {\n+        if (config == null) {\n+            // Retrieve the ISKMReverseProxyEnabled property value from api manager configurations.\n+            // This value indicates whether the IS Authentication endpoint has been reverse proxied through\n+            // the Gateway.\n+            config = ServiceReferenceHolder.getInstance().getApiManagerConfigurationService()\n+                    .getAPIManagerConfiguration();\n+            iskmReverseProxyEnabled = Boolean.parseBoolean(\n+                    config.getFirstProperty(APIConstants.AUTH_MANAGER + APIConstants.IS_KM_REVERSE_PROXY_ENABLED));\n+        }\n+        // Modify location header only if ISKMReverseProxyEnabled property is set to true\n+        if (iskmReverseProxyEnabled) {\n+            // The logic is related if the API context is \"/authorize\", \"/commonauth\" or \"/oidc\" while status code is 302\n+            if (messageContext.getProperty(RESTConstants.REST_API_CONTEXT)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDY2NDM4Mw=="}, "originalCommit": {"oid": "e76e35daa37c4844a1203e09afef8b7eda58e061"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYwNDA4NDE3OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/common/SynapsePropertiesHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOFQwNzowOTo1OFrOIhVI5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOVQwOTowODo1NlrOIiLaPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTgyMDI2MA==", "bodyText": "same here.swap the condition check. Eg: APIMgtGatewayConstants.COMMON_AUTH_CONTEXT.equals(messageContext\n.getProperty(RESTConstants.REST_API_CONTEXT))", "url": "https://github.com/wso2/carbon-apimgt/pull/9391#discussion_r571820260", "createdAt": "2021-02-08T07:09:58Z", "author": {"login": "HiranyaKavishani"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/common/SynapsePropertiesHandler.java", "diffHunk": "@@ -61,6 +77,62 @@ public boolean handleRequest(MessageContext messageContext) {\n     }\n \n     public boolean handleResponse(MessageContext messageContext) {\n+        if (config == null) {\n+            // Retrieve the ISKMReverseProxyEnabled property value from api manager configurations.\n+            // This value indicates whether the IS Authentication endpoint has been reverse proxied through\n+            // the Gateway.\n+            config = ServiceReferenceHolder.getInstance().getApiManagerConfigurationService()\n+                    .getAPIManagerConfiguration();\n+            iskmReverseProxyEnabled = Boolean.parseBoolean(\n+                    config.getFirstProperty(APIConstants.AUTH_MANAGER + APIConstants.IS_KM_REVERSE_PROXY_ENABLED));\n+        }\n+        // Modify location header only if ISKMReverseProxyEnabled property is set to true\n+        if (iskmReverseProxyEnabled) {\n+            // The logic is related if the API context is \"/authorize\", \"/commonauth\" or \"/oidc\" while status code is 302\n+            if (messageContext.getProperty(RESTConstants.REST_API_CONTEXT)\n+                    .equals(APIMgtGatewayConstants.AUTHORIZE_CONTEXT) || messageContext\n+                    .getProperty(RESTConstants.REST_API_CONTEXT).equals(APIMgtGatewayConstants.COMMON_AUTH_CONTEXT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e76e35daa37c4844a1203e09afef8b7eda58e061"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjcwOTQzNg==", "bodyText": "Fixed by 6861d44", "url": "https://github.com/wso2/carbon-apimgt/pull/9391#discussion_r572709436", "createdAt": "2021-02-09T09:08:56Z", "author": {"login": "hisanhunais"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/common/SynapsePropertiesHandler.java", "diffHunk": "@@ -61,6 +77,62 @@ public boolean handleRequest(MessageContext messageContext) {\n     }\n \n     public boolean handleResponse(MessageContext messageContext) {\n+        if (config == null) {\n+            // Retrieve the ISKMReverseProxyEnabled property value from api manager configurations.\n+            // This value indicates whether the IS Authentication endpoint has been reverse proxied through\n+            // the Gateway.\n+            config = ServiceReferenceHolder.getInstance().getApiManagerConfigurationService()\n+                    .getAPIManagerConfiguration();\n+            iskmReverseProxyEnabled = Boolean.parseBoolean(\n+                    config.getFirstProperty(APIConstants.AUTH_MANAGER + APIConstants.IS_KM_REVERSE_PROXY_ENABLED));\n+        }\n+        // Modify location header only if ISKMReverseProxyEnabled property is set to true\n+        if (iskmReverseProxyEnabled) {\n+            // The logic is related if the API context is \"/authorize\", \"/commonauth\" or \"/oidc\" while status code is 302\n+            if (messageContext.getProperty(RESTConstants.REST_API_CONTEXT)\n+                    .equals(APIMgtGatewayConstants.AUTHORIZE_CONTEXT) || messageContext\n+                    .getProperty(RESTConstants.REST_API_CONTEXT).equals(APIMgtGatewayConstants.COMMON_AUTH_CONTEXT)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTgyMDI2MA=="}, "originalCommit": {"oid": "e76e35daa37c4844a1203e09afef8b7eda58e061"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYwNDA4NjYwOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/common/SynapsePropertiesHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOFQwNzoxMDo1NVrOIhVKOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOVQwOTowOTowOFrOIiLa1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTgyMDYwMA==", "bodyText": "same here", "url": "https://github.com/wso2/carbon-apimgt/pull/9391#discussion_r571820600", "createdAt": "2021-02-08T07:10:55Z", "author": {"login": "HiranyaKavishani"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/common/SynapsePropertiesHandler.java", "diffHunk": "@@ -61,6 +77,62 @@ public boolean handleRequest(MessageContext messageContext) {\n     }\n \n     public boolean handleResponse(MessageContext messageContext) {\n+        if (config == null) {\n+            // Retrieve the ISKMReverseProxyEnabled property value from api manager configurations.\n+            // This value indicates whether the IS Authentication endpoint has been reverse proxied through\n+            // the Gateway.\n+            config = ServiceReferenceHolder.getInstance().getApiManagerConfigurationService()\n+                    .getAPIManagerConfiguration();\n+            iskmReverseProxyEnabled = Boolean.parseBoolean(\n+                    config.getFirstProperty(APIConstants.AUTH_MANAGER + APIConstants.IS_KM_REVERSE_PROXY_ENABLED));\n+        }\n+        // Modify location header only if ISKMReverseProxyEnabled property is set to true\n+        if (iskmReverseProxyEnabled) {\n+            // The logic is related if the API context is \"/authorize\", \"/commonauth\" or \"/oidc\" while status code is 302\n+            if (messageContext.getProperty(RESTConstants.REST_API_CONTEXT)\n+                    .equals(APIMgtGatewayConstants.AUTHORIZE_CONTEXT) || messageContext\n+                    .getProperty(RESTConstants.REST_API_CONTEXT).equals(APIMgtGatewayConstants.COMMON_AUTH_CONTEXT)\n+                    || messageContext.getProperty(RESTConstants.REST_API_CONTEXT)\n+                    .equals(APIMgtGatewayConstants.OIDC_CONTEXT)) {\n+                if (302 == (Integer) ((Axis2MessageContext) messageContext).getAxis2MessageContext()\n+                        .getProperty(SynapseConstants.HTTP_SC)) {\n+                    // Retrieve the transport headers in the response and identify the location header\n+                    TreeMap<String, String> headers = (TreeMap) ((Axis2MessageContext) messageContext)\n+                            .getAxis2MessageContext().getProperty(APIMgtGatewayConstants.TRANSPORT_HEADERS);\n+                    String locationURI = headers.get(APIMgtGatewayConstants.LOCATION);\n+                    // KM host and port which is included in the location header value\n+                    String kmHost = messageContext.getProperty(\"keyManager.hostname\") + \":\" + messageContext\n+                            .getProperty(\"keyManager.port\");\n+                    String hostHeader = (String) messageContext.getProperty(APIMgtGatewayConstants.HOST_HEADER);\n+\n+                    // This check to change the location header is done to make sure that only location headers of the\n+                    // appropriate endpoints which have been proxied are changed. Without this check condition to change\n+                    // the location header, any endpoint which is having KM host as part of the URL will be redirected\n+                    // which could lead to wrong endpoints.\n+                    if (locationURI.contains(APIMgtGatewayConstants.AUTHENTICATION_ENDPOINT_CONTEXT) || locationURI\n+                            .contains(APIMgtGatewayConstants.OAUTH2_CONTEXT + APIMgtGatewayConstants.AUTHORIZE_CONTEXT)\n+                            || locationURI.contains(APIMgtGatewayConstants.COMMON_AUTH_CONTEXT) || locationURI\n+                            .contains(APIMgtGatewayConstants.LOGIN_CONTEXT) || locationURI\n+                            .contains(APIMgtGatewayConstants.OIDC_CONTEXT)) {\n+                        // Replacing KM host with Gateway host\n+                        locationURI = locationURI.replaceFirst(kmHost, hostHeader);\n+                    }\n+\n+                    ((Axis2MessageContext) messageContext).getAxis2MessageContext()\n+                            .setProperty(\"PRE_LOCATION_HEADER\", locationURI);\n+                    if (messageContext.getProperty(RESTConstants.REST_API_CONTEXT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e76e35daa37c4844a1203e09afef8b7eda58e061"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjcwOTU5MQ==", "bodyText": "Fixed by 6861d44", "url": "https://github.com/wso2/carbon-apimgt/pull/9391#discussion_r572709591", "createdAt": "2021-02-09T09:09:08Z", "author": {"login": "hisanhunais"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/common/SynapsePropertiesHandler.java", "diffHunk": "@@ -61,6 +77,62 @@ public boolean handleRequest(MessageContext messageContext) {\n     }\n \n     public boolean handleResponse(MessageContext messageContext) {\n+        if (config == null) {\n+            // Retrieve the ISKMReverseProxyEnabled property value from api manager configurations.\n+            // This value indicates whether the IS Authentication endpoint has been reverse proxied through\n+            // the Gateway.\n+            config = ServiceReferenceHolder.getInstance().getApiManagerConfigurationService()\n+                    .getAPIManagerConfiguration();\n+            iskmReverseProxyEnabled = Boolean.parseBoolean(\n+                    config.getFirstProperty(APIConstants.AUTH_MANAGER + APIConstants.IS_KM_REVERSE_PROXY_ENABLED));\n+        }\n+        // Modify location header only if ISKMReverseProxyEnabled property is set to true\n+        if (iskmReverseProxyEnabled) {\n+            // The logic is related if the API context is \"/authorize\", \"/commonauth\" or \"/oidc\" while status code is 302\n+            if (messageContext.getProperty(RESTConstants.REST_API_CONTEXT)\n+                    .equals(APIMgtGatewayConstants.AUTHORIZE_CONTEXT) || messageContext\n+                    .getProperty(RESTConstants.REST_API_CONTEXT).equals(APIMgtGatewayConstants.COMMON_AUTH_CONTEXT)\n+                    || messageContext.getProperty(RESTConstants.REST_API_CONTEXT)\n+                    .equals(APIMgtGatewayConstants.OIDC_CONTEXT)) {\n+                if (302 == (Integer) ((Axis2MessageContext) messageContext).getAxis2MessageContext()\n+                        .getProperty(SynapseConstants.HTTP_SC)) {\n+                    // Retrieve the transport headers in the response and identify the location header\n+                    TreeMap<String, String> headers = (TreeMap) ((Axis2MessageContext) messageContext)\n+                            .getAxis2MessageContext().getProperty(APIMgtGatewayConstants.TRANSPORT_HEADERS);\n+                    String locationURI = headers.get(APIMgtGatewayConstants.LOCATION);\n+                    // KM host and port which is included in the location header value\n+                    String kmHost = messageContext.getProperty(\"keyManager.hostname\") + \":\" + messageContext\n+                            .getProperty(\"keyManager.port\");\n+                    String hostHeader = (String) messageContext.getProperty(APIMgtGatewayConstants.HOST_HEADER);\n+\n+                    // This check to change the location header is done to make sure that only location headers of the\n+                    // appropriate endpoints which have been proxied are changed. Without this check condition to change\n+                    // the location header, any endpoint which is having KM host as part of the URL will be redirected\n+                    // which could lead to wrong endpoints.\n+                    if (locationURI.contains(APIMgtGatewayConstants.AUTHENTICATION_ENDPOINT_CONTEXT) || locationURI\n+                            .contains(APIMgtGatewayConstants.OAUTH2_CONTEXT + APIMgtGatewayConstants.AUTHORIZE_CONTEXT)\n+                            || locationURI.contains(APIMgtGatewayConstants.COMMON_AUTH_CONTEXT) || locationURI\n+                            .contains(APIMgtGatewayConstants.LOGIN_CONTEXT) || locationURI\n+                            .contains(APIMgtGatewayConstants.OIDC_CONTEXT)) {\n+                        // Replacing KM host with Gateway host\n+                        locationURI = locationURI.replaceFirst(kmHost, hostHeader);\n+                    }\n+\n+                    ((Axis2MessageContext) messageContext).getAxis2MessageContext()\n+                            .setProperty(\"PRE_LOCATION_HEADER\", locationURI);\n+                    if (messageContext.getProperty(RESTConstants.REST_API_CONTEXT)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTgyMDYwMA=="}, "originalCommit": {"oid": "e76e35daa37c4844a1203e09afef8b7eda58e061"}, "originalPosition": 98}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2941, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}