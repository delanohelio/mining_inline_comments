{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMjg0NTk5", "number": 8576, "title": "Mock response payload generation improved to allow users to specify required response.", "bodyText": "Fixes : wso2/product-apim#7783\nMock Response Payload Generation feature only provides a response related to a single response code (lowest response code).\nThis has been improved to support the response of multiple response code. Allowing users to specify which response code they would like to get the payload from. By supplying : ?responseCode= in cURL users can specify desired response code.", "createdAt": "2020-05-26T15:35:48Z", "url": "https://github.com/wso2/carbon-apimgt/pull/8576", "merged": true, "mergeCommit": {"oid": "1bbd1aba2ed1a4a03d99f9c1228dd0f382e504a2"}, "closed": true, "closedAt": "2020-05-29T08:29:39Z", "author": {"login": "VinulaUthsara"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABci5QujAH2gAyNDIzMjg0NTk5OjYwOWNkNjdhOTE5YjA0NzJmMmE5YWI0NjBiZjMzNGM3YjNjMWFjZGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcl-M9cgFqTQyMDc1MzQwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "609cd67a919b0472f2a9ab460bf334c7b3c1acdd", "author": {"user": {"login": "VinulaUthsara", "name": "Vinula Uthsara "}}, "url": "https://github.com/wso2/carbon-apimgt/commit/609cd67a919b0472f2a9ab460bf334c7b3c1acdd", "committedDate": "2020-05-19T19:02:22Z", "message": "changes in ApisApiserviceImpl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dc528b77fe620f6b4cbc017cfb37cab6f8f2325", "author": {"user": {"login": "VinulaUthsara", "name": "Vinula Uthsara "}}, "url": "https://github.com/wso2/carbon-apimgt/commit/0dc528b77fe620f6b4cbc017cfb37cab6f8f2325", "committedDate": "2020-05-19T19:07:25Z", "message": "removed print statement in getgeneratedmockscripts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ec5cc3c6d0f35fb7b444b0dcf769dfe68fd2efd", "author": {"user": {"login": "VinulaUthsara", "name": "Vinula Uthsara "}}, "url": "https://github.com/wso2/carbon-apimgt/commit/8ec5cc3c6d0f35fb7b444b0dcf769dfe68fd2efd", "committedDate": "2020-05-19T19:08:42Z", "message": "Merge branch 'master' of https://github.com/wso2/carbon-apimgt"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5910aca7bf2080ddd676881aae94af643d5c5aec", "author": {"user": {"login": "VinulaUthsara", "name": "Vinula Uthsara "}}, "url": "https://github.com/wso2/carbon-apimgt/commit/5910aca7bf2080ddd676881aae94af643d5c5aec", "committedDate": "2020-05-24T19:33:43Z", "message": "added responseCode based set response functionality for OAS2Parser and OAS3Parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f8415cdee9330929fc8385ccdcdb68545234012", "author": {"user": {"login": "VinulaUthsara", "name": "Vinula Uthsara "}}, "url": "https://github.com/wso2/carbon-apimgt/commit/6f8415cdee9330929fc8385ccdcdb68545234012", "committedDate": "2020-05-24T20:14:06Z", "message": "fixed adding JSON or XML for generated set response strings in for OAS2Parser and OAS3Parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ef9aa9e6ce169e3c3b60c560cec306d248fa3a8", "author": {"user": {"login": "VinulaUthsara", "name": "Vinula Uthsara "}}, "url": "https://github.com/wso2/carbon-apimgt/commit/7ef9aa9e6ce169e3c3b60c560cec306d248fa3a8", "committedDate": "2020-05-24T21:34:55Z", "message": "only one response code is set as response for mulitple payloads per response code in  OAS2Parser and OAS3Parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "980d908f2f26c4cf1a36b9980c5521b59dce2a54", "author": {"user": {"login": "VinulaUthsara", "name": "Vinula Uthsara "}}, "url": "https://github.com/wso2/carbon-apimgt/commit/980d908f2f26c4cf1a36b9980c5521b59dce2a54", "committedDate": "2020-05-26T10:09:33Z", "message": "code cleaned and commented code lines removed from OAS2Parser and OAS3Parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b771537704591fc3d8db0457bea8afadc1dcab7", "author": {"user": {"login": "VinulaUthsara", "name": "Vinula Uthsara "}}, "url": "https://github.com/wso2/carbon-apimgt/commit/1b771537704591fc3d8db0457bea8afadc1dcab7", "committedDate": "2020-05-26T10:13:11Z", "message": "Merge branch 'master' of https://github.com/wso2/carbon-apimgt"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NDg1NjYy", "url": "https://github.com/wso2/carbon-apimgt/pull/8576#pullrequestreview-418485662", "createdAt": "2020-05-26T16:42:38Z", "commit": {"oid": "1b771537704591fc3d8db0457bea8afadc1dcab7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjo0MjozOFrOGanFng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjo0MjozOFrOGanFng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU1NjU3NA==", "bodyText": "Format the code properly.", "url": "https://github.com/wso2/carbon-apimgt/pull/8576#discussion_r430556574", "createdAt": "2020-05-26T16:42:38Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "diffHunk": "@@ -246,8 +244,50 @@ private String getGeneratedResponseVar(String responseCode, String example, Stri\n      * @return manualCode\n      */\n     private String getGeneratedSetResponse(String responseCode, String type) {\n-        return \"mc.setProperty('CONTENT_TYPE', 'application/\" + type + \"');\\n\" +\n-                \"mc.setPayloadJSON(response\" + responseCode + type + \");\";\n+        return \"  mc.setProperty('CONTENT_TYPE', 'application/\" + type + \"');\\n\" +\n+                \"  mc.setPayload\"+type.toUpperCase()+\"(response\" + responseCode + type + \");\";\n+    }\n+\n+    /**\n+     * Generates IF conditions for setting response code of mock payload\n+     *\n+     * @param responseCode response code of payload\n+     * @param getGeneratedSetResponseString string returned from \"getGeneratedSetResponse\"\n+     * @return if condition with \"getGeneratedSetResponse\" included\n+     */\n+    private String getGeneratedIFsforCodes(String responseCode, String getGeneratedSetResponseString){\n+        return \"if (responseCode == \"+responseCode+\") {\\n\\n\" +\n+                getGeneratedSetResponseString+\n+                \"\\n\\n} else \";\n+    }\n+\n+    /**\n+     * Generates Mock payload and set response for 501 response and null response code\n+     * also includes getGeneratedIFsforCodes string of all included response codes\n+     *\n+     * @param minResponseCode minimum response code\n+     * @param minResponseType type of minimum response code (json/xml)\n+     * @param responseSectionString String of IF conditions of all response codes\n+     * @return response section string with IF conditions and responses\n+     */\n+    private String getGeneratedSetResponseForCodes(int minResponseCode, String minResponseType, String responseSectionString){\n+        return \"\\nvar response501json = {\\n\" +\n+                \"\\\"code\\\" : 501,\" +\n+                \"\\n\\\"description\\\" : \"+\"\\\"Not Implemented\\\"\\n\"+\n+                \"}\\n\\n\" +\n+                \"var responseCode = mc.getProperty('query.param.responseCode');\\n\\n\" +\n+\n+                responseSectionString+\n+\n+                \" if (responseCode == null) {\\n\\n\"+\n+                \"  mc.setProperty('CONTENT_TYPE', 'application/\"+minResponseType+\"');\\n\"+\n+                \"  mc.setPayload\"+minResponseType.toUpperCase()+\"(response\"+minResponseCode+minResponseType+\");\\n\\n\"+\n+                \"} else \"+\n+\n+                \"{\\n\\n\"+\n+                \"  mc.setProperty('CONTENT_TYPE', 'application/json');\\n\" +\n+                \"  mc.setPayloadJSON(response501json);\\n\\n\"+\n+                \"}\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b771537704591fc3d8db0457bea8afadc1dcab7"}, "originalPosition": 120}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3265a26bc1b3199583f6e76f04d46624c5c3d54", "author": {"user": {"login": "VinulaUthsara", "name": "Vinula Uthsara "}}, "url": "https://github.com/wso2/carbon-apimgt/commit/f3265a26bc1b3199583f6e76f04d46624c5c3d54", "committedDate": "2020-05-26T18:39:52Z", "message": "formatting fixed for getGeneratedSetResponseForCodes method in OAS2Parser and OAS3Parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d71d004bb00f5e0dcfe6d68629917fd36a16db4e", "author": {"user": {"login": "VinulaUthsara", "name": "Vinula Uthsara "}}, "url": "https://github.com/wso2/carbon-apimgt/commit/d71d004bb00f5e0dcfe6d68629917fd36a16db4e", "committedDate": "2020-05-27T14:40:42Z", "message": "formatted code for OAS2parser and OAS3parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebdc5d8c669957d439bc5f83ef1c4a201ae07a4d", "author": {"user": {"login": "VinulaUthsara", "name": "Vinula Uthsara "}}, "url": "https://github.com/wso2/carbon-apimgt/commit/ebdc5d8c669957d439bc5f83ef1c4a201ae07a4d", "committedDate": "2020-05-27T14:41:44Z", "message": "Merge branch 'master' of https://github.com/wso2/carbon-apimgt"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3c4086918649517c883590bd697890c915a00eb", "author": {"user": {"login": "VinulaUthsara", "name": "Vinula Uthsara "}}, "url": "https://github.com/wso2/carbon-apimgt/commit/c3c4086918649517c883590bd697890c915a00eb", "committedDate": "2020-05-27T20:23:20Z", "message": "Showing proper response code added for OAS2parser and OAS3parser"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNjgyNzY4", "url": "https://github.com/wso2/carbon-apimgt/pull/8576#pullrequestreview-420682768", "createdAt": "2020-05-29T06:27:20Z", "commit": {"oid": "c3c4086918649517c883590bd697890c915a00eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNjoyNzoyMVrOGcQROg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNjoyNzoyMVrOGcQROg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI3OTg2Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            \"} else \" +\n          \n          \n            \n                            \"{\\n\\n\" +\n          \n          \n            \n                            \"} else {\\n\\n\" +", "url": "https://github.com/wso2/carbon-apimgt/pull/8576#discussion_r432279866", "createdAt": "2020-05-29T06:27:21Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS3Parser.java", "diffHunk": "@@ -291,8 +285,49 @@ private String getGeneratedResponseVar(String responseCode, String example, Stri\n      * @return manualCode\n      */\n     private String getGeneratedSetResponse(String responseCode, String type) {\n-        return \"mc.setProperty('CONTENT_TYPE', 'application/\" + type + \"');\\n\" +\n-                \"mc.setPayloadJSON(response\" + responseCode + type + \");\";\n+        return \"  mc.setProperty('HTTP_SC', \\\"\" + responseCode + \"\\\");\\n\" +\n+                \"  mc.setProperty('CONTENT_TYPE', 'application/\" + type + \"');\\n\" +\n+                \"  mc.setPayload\" + type.toUpperCase() + \"(response\" + responseCode + type + \");\";\n+    }\n+\n+    /**\n+     * Generates IF conditions for setting response code of mock payload\n+     *\n+     * @param responseCode response code of payload\n+     * @param getGeneratedSetResponseString string returned from \"getGeneratedSetResponse\"\n+     * @return if condition with \"getGeneratedSetResponse\" included\n+     */\n+    private String getGeneratedIFsforCodes(String responseCode, String getGeneratedSetResponseString) {\n+        return \"if (responseCode == \" + responseCode + \") {\\n\\n\" +\n+                getGeneratedSetResponseString +\n+                \"\\n\\n} else \";\n+    }\n+\n+    /**\n+     * Generates Mock payload and set response for 501 response and null response code\n+     * also includes getGeneratedIFsforCodes string of all included response codes\n+     *\n+     * @param minResponseCode minimum response code\n+     * @param minResponseType type of minimum response code (json/xml)\n+     * @param responseSectionString String of IF conditions of all response codes\n+     * @return response section string with IF conditions and responses\n+     */\n+    private String getGeneratedSetResponseForCodes(int minResponseCode, String minResponseType, String responseSectionString) {\n+        return \"\\nvar response501json = {\\n\" +\n+                \"\\\"code\\\" : 501,\" +\n+                \"\\n\\\"description\\\" : \" + \"\\\"Not Implemented\\\"\\n\" +\n+                \"}\\n\\n\" +\n+                \"var responseCode = mc.getProperty('query.param.responseCode');\\n\\n\" +\n+                responseSectionString +\n+                \" if (responseCode == null) {\\n\\n\" +\n+                \"  mc.setProperty('HTTP_SC', \\\"\" + minResponseCode + \"\\\");\\n\" +\n+                \"  mc.setProperty('CONTENT_TYPE', 'application/\" + minResponseType + \"');\\n\" +\n+                \"  mc.setPayload\" + minResponseType.toUpperCase() + \"(response\" + minResponseCode + minResponseType + \");\\n\\n\" +\n+                \"} else \" +\n+                \"{\\n\\n\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3c4086918649517c883590bd697890c915a00eb"}, "originalPosition": 171}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNjgzMTM1", "url": "https://github.com/wso2/carbon-apimgt/pull/8576#pullrequestreview-420683135", "createdAt": "2020-05-29T06:28:10Z", "commit": {"oid": "c3c4086918649517c883590bd697890c915a00eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNjoyODoxMFrOGcQSXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNjoyODoxMFrOGcQSXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI4MDE1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        responseSection.append(getGeneratedIFsforCodes(responseEntry, getGeneratedSetResponse(responseEntry, \"json\")));\n          \n          \n            \n                                        responseSection.append(getGeneratedConditionsForResponseCodes(responseEntry, getGeneratedSetResponse(responseEntry, \"json\")));", "url": "https://github.com/wso2/carbon-apimgt/pull/8576#discussion_r432280156", "createdAt": "2020-05-29T06:28:10Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "diffHunk": "@@ -156,21 +157,19 @@ private void setOtherSchemes(List<String> otherSchemes) {\n                         if (applicationJson != null) {\n                             String jsonExample = Json.pretty(applicationJson);\n                             genCode.append(getGeneratedResponseVar(responseEntry, jsonExample, \"json\"));\n-                            if (responseCode == minResponseCode && !setPayloadResponse){\n-                                responseSection.append(getGeneratedSetResponse(responseEntry, \"json\"));\n-                                setPayloadResponse = true;\n-                                if (applicationXml != null) {\n-                                    responseSection.append(\"\\n\\n/*\").append(getGeneratedSetResponse(responseEntry, \"xml\")).append(\"*/\\n\\n\");\n-                                }\n+                            responseSection.append(getGeneratedIFsforCodes(responseEntry, getGeneratedSetResponse(responseEntry, \"json\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3c4086918649517c883590bd697890c915a00eb"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNjgzNjIz", "url": "https://github.com/wso2/carbon-apimgt/pull/8576#pullrequestreview-420683623", "createdAt": "2020-05-29T06:29:17Z", "commit": {"oid": "c3c4086918649517c883590bd697890c915a00eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNjoyOToxN1rOGcQT6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNjoyOToxN1rOGcQT6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI4MDU1Mw==", "bodyText": "Do we need these brackets?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            minResponseType = (\"json\");\n          \n          \n            \n                                            minResponseType = \"json\";", "url": "https://github.com/wso2/carbon-apimgt/pull/8576#discussion_r432280553", "createdAt": "2020-05-29T06:29:17Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "diffHunk": "@@ -156,21 +157,19 @@ private void setOtherSchemes(List<String> otherSchemes) {\n                         if (applicationJson != null) {\n                             String jsonExample = Json.pretty(applicationJson);\n                             genCode.append(getGeneratedResponseVar(responseEntry, jsonExample, \"json\"));\n-                            if (responseCode == minResponseCode && !setPayloadResponse){\n-                                responseSection.append(getGeneratedSetResponse(responseEntry, \"json\"));\n-                                setPayloadResponse = true;\n-                                if (applicationXml != null) {\n-                                    responseSection.append(\"\\n\\n/*\").append(getGeneratedSetResponse(responseEntry, \"xml\")).append(\"*/\\n\\n\");\n-                                }\n+                            responseSection.append(getGeneratedIFsforCodes(responseEntry, getGeneratedSetResponse(responseEntry, \"json\")));\n+                            if (responseCode == minResponseCode) {\n+                                minResponseType = (\"json\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3c4086918649517c883590bd697890c915a00eb"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNjgzNzQx", "url": "https://github.com/wso2/carbon-apimgt/pull/8576#pullrequestreview-420683741", "createdAt": "2020-05-29T06:29:33Z", "commit": {"oid": "c3c4086918649517c883590bd697890c915a00eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNjoyOTozM1rOGcQURA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNjoyOTozM1rOGcQURA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI4MDY0NA==", "bodyText": "Do we need brackets?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                minResponseType = (\"xml\");\n          \n          \n            \n                                                minResponseType = \"xml\";", "url": "https://github.com/wso2/carbon-apimgt/pull/8576#discussion_r432280644", "createdAt": "2020-05-29T06:29:33Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "diffHunk": "@@ -156,21 +157,19 @@ private void setOtherSchemes(List<String> otherSchemes) {\n                         if (applicationJson != null) {\n                             String jsonExample = Json.pretty(applicationJson);\n                             genCode.append(getGeneratedResponseVar(responseEntry, jsonExample, \"json\"));\n-                            if (responseCode == minResponseCode && !setPayloadResponse){\n-                                responseSection.append(getGeneratedSetResponse(responseEntry, \"json\"));\n-                                setPayloadResponse = true;\n-                                if (applicationXml != null) {\n-                                    responseSection.append(\"\\n\\n/*\").append(getGeneratedSetResponse(responseEntry, \"xml\")).append(\"*/\\n\\n\");\n-                                }\n+                            responseSection.append(getGeneratedIFsforCodes(responseEntry, getGeneratedSetResponse(responseEntry, \"json\")));\n+                            if (responseCode == minResponseCode) {\n+                                minResponseType = (\"json\");\n                             }\n+                            setPayloadResponse = true;\n                         }\n                         if (applicationXml != null) {\n                             String xmlExample = applicationXml.toString();\n                             genCode.append(getGeneratedResponseVar(responseEntry, xmlExample, \"xml\"));\n-                            if (responseCode == minResponseCode && !setPayloadResponse){\n+                            if (responseCode == minResponseCode && !setPayloadResponse) {\n                                 if (applicationJson == null) {\n-                                    responseSection.append(getGeneratedSetResponse(responseEntry, \"xml\"));\n-                                    setPayloadResponse = true;\n+                                    responseSection.append(getGeneratedIFsforCodes(responseEntry, getGeneratedSetResponse(responseEntry, \"xml\")));\n+                                    minResponseType = (\"xml\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3c4086918649517c883590bd697890c915a00eb"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNjg0NTM4", "url": "https://github.com/wso2/carbon-apimgt/pull/8576#pullrequestreview-420684538", "createdAt": "2020-05-29T06:31:24Z", "commit": {"oid": "c3c4086918649517c883590bd697890c915a00eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNjozMToyNFrOGcQWrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNjozMToyNFrOGcQWrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI4MTI2MA==", "bodyText": "This line seems to have too much functionality in a single line.. Shall we split it to a couple of lines?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        responseSection.append(getGeneratedIFsforCodes(responseEntry, getGeneratedSetResponse(responseEntry, \"json\")));\n          \n          \n            \n            someMeaningfulName = getGeneratedSetResponse(responseEntry, \"json\")\n          \n          \n            \n            responseSection.append(getGeneratedIFsforCodes(responseEntry, someMeaningfulName));", "url": "https://github.com/wso2/carbon-apimgt/pull/8576#discussion_r432281260", "createdAt": "2020-05-29T06:31:24Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "diffHunk": "@@ -156,21 +157,19 @@ private void setOtherSchemes(List<String> otherSchemes) {\n                         if (applicationJson != null) {\n                             String jsonExample = Json.pretty(applicationJson);\n                             genCode.append(getGeneratedResponseVar(responseEntry, jsonExample, \"json\"));\n-                            if (responseCode == minResponseCode && !setPayloadResponse){\n-                                responseSection.append(getGeneratedSetResponse(responseEntry, \"json\"));\n-                                setPayloadResponse = true;\n-                                if (applicationXml != null) {\n-                                    responseSection.append(\"\\n\\n/*\").append(getGeneratedSetResponse(responseEntry, \"xml\")).append(\"*/\\n\\n\");\n-                                }\n+                            responseSection.append(getGeneratedIFsforCodes(responseEntry, getGeneratedSetResponse(responseEntry, \"json\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3c4086918649517c883590bd697890c915a00eb"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNjg1NDA3", "url": "https://github.com/wso2/carbon-apimgt/pull/8576#pullrequestreview-420685407", "createdAt": "2020-05-29T06:33:24Z", "commit": {"oid": "c3c4086918649517c883590bd697890c915a00eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNjozMzoyNFrOGcQZNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNjozMzoyNFrOGcQZNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI4MTkxMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            \"} else \" +\n          \n          \n            \n                            \"{\\n\\n\" +\n          \n          \n            \n                            \"} else {\\n\\n\" +", "url": "https://github.com/wso2/carbon-apimgt/pull/8576#discussion_r432281910", "createdAt": "2020-05-29T06:33:24Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "diffHunk": "@@ -246,8 +244,49 @@ private String getGeneratedResponseVar(String responseCode, String example, Stri\n      * @return manualCode\n      */\n     private String getGeneratedSetResponse(String responseCode, String type) {\n-        return \"mc.setProperty('CONTENT_TYPE', 'application/\" + type + \"');\\n\" +\n-                \"mc.setPayloadJSON(response\" + responseCode + type + \");\";\n+        return \"  mc.setProperty('HTTP_SC', \\\"\" + responseCode + \"\\\");\\n\" +\n+                \"  mc.setProperty('CONTENT_TYPE', 'application/\" + type + \"');\\n\" +\n+                \"  mc.setPayload\" + type.toUpperCase() + \"(response\" + responseCode + type + \");\";\n+    }\n+\n+    /**\n+     * Generates IF conditions for setting response code of mock payload\n+     *\n+     * @param responseCode response code of payload\n+     * @param getGeneratedSetResponseString string returned from \"getGeneratedSetResponse\"\n+     * @return if condition with \"getGeneratedSetResponse\" included\n+     */\n+    private String getGeneratedIFsforCodes(String responseCode, String getGeneratedSetResponseString) {\n+        return \"if (responseCode == \" + responseCode + \") {\\n\\n\" +\n+                getGeneratedSetResponseString +\n+                \"\\n\\n} else \";\n+    }\n+\n+    /**\n+     * Generates Mock payload and set response for 501 response and null response code\n+     * also includes getGeneratedIFsforCodes string of all included response codes\n+     *\n+     * @param minResponseCode minimum response code\n+     * @param minResponseType type of minimum response code (json/xml)\n+     * @param responseSectionString String of IF conditions of all response codes\n+     * @return response section string with IF conditions and responses\n+     */\n+    private String getGeneratedSetResponseForCodes(int minResponseCode, String minResponseType, String responseSectionString) {\n+        return \"\\nvar response501json = {\\n\" +\n+                \"\\\"code\\\" : 501,\" +\n+                \"\\n\\\"description\\\" : \" + \"\\\"Not Implemented\\\"\\n\" +\n+                \"}\\n\\n\" +\n+                \"var responseCode = mc.getProperty('query.param.responseCode');\\n\\n\" +\n+                responseSectionString +\n+                \" if (responseCode == null) {\\n\\n\" +\n+                \"  mc.setProperty('HTTP_SC', \\\"\" + minResponseCode + \"\\\");\\n\" +\n+                \"  mc.setProperty('CONTENT_TYPE', 'application/\" + minResponseType + \"');\\n\" +\n+                \"  mc.setPayload\" + minResponseType.toUpperCase() + \"(response\" + minResponseCode + minResponseType + \");\\n\\n\" +\n+                \"} else \" +\n+                \"{\\n\\n\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3c4086918649517c883590bd697890c915a00eb"}, "originalPosition": 117}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fea7c42f526d31067c612b4ed9dfbe580428491", "author": {"user": {"login": "VinulaUthsara", "name": "Vinula Uthsara "}}, "url": "https://github.com/wso2/carbon-apimgt/commit/0fea7c42f526d31067c612b4ed9dfbe580428491", "committedDate": "2020-05-29T08:17:44Z", "message": "changed method and string variable names as requested"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNzUzNDA4", "url": "https://github.com/wso2/carbon-apimgt/pull/8576#pullrequestreview-420753408", "createdAt": "2020-05-29T08:29:33Z", "commit": {"oid": "0fea7c42f526d31067c612b4ed9dfbe580428491"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2801, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}