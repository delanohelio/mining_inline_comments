{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyNzgxMjA2", "number": 9314, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwOToyOTo0MlrOEx0O0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNToyNjoxMlrOE0PGsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNjcxNDQyOnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/components/Apis/Details/ApiConsole/ApiConsole.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwOToyOTo0MlrOHoHJxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwOTo1Mjo1NFrOHoIBgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgyMjI3OA==", "bodyText": "Instead of require shall we use imports", "url": "https://github.com/wso2/carbon-apimgt/pull/9314#discussion_r511822278", "createdAt": "2020-10-26T09:29:42Z", "author": {"login": "Krishanx92"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/components/Apis/Details/ApiConsole/ApiConsole.jsx", "diffHunk": "@@ -26,19 +26,29 @@ import Icon from '@material-ui/core/Icon';\n import AuthManager from 'AppData/AuthManager';\n import Paper from '@material-ui/core/Paper';\n import Button from '@material-ui/core/Button';\n-import CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\n+import postmanIcon from '@iconify/icons-simple-icons/postman';\n+import swaggerIcon from '@iconify/icons-simple-icons/swagger';\n+import { Icon as Icons } from '@iconify/react';\n import { ApiContext } from '../ApiContext';\n import Progress from '../../../Shared/Progress';\n import Api from '../../../../data/api';\n import SwaggerUI from './SwaggerUI';\n import TryOutController from './TryOutController';\n import Application from '../../../../data/Application';\n \n+\n+const fileDownload = require('js-file-download');\n+const openapiToPostman = require('openapi-to-postmanv2');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "798a933736881cfd83827b739a7cc1560d64fe50"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgzNjU0Ng==", "bodyText": "Ok.sure. I`ll do it.", "url": "https://github.com/wso2/carbon-apimgt/pull/9314#discussion_r511836546", "createdAt": "2020-10-26T09:52:54Z", "author": {"login": "Tharanidk"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/components/Apis/Details/ApiConsole/ApiConsole.jsx", "diffHunk": "@@ -26,19 +26,29 @@ import Icon from '@material-ui/core/Icon';\n import AuthManager from 'AppData/AuthManager';\n import Paper from '@material-ui/core/Paper';\n import Button from '@material-ui/core/Button';\n-import CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\n+import postmanIcon from '@iconify/icons-simple-icons/postman';\n+import swaggerIcon from '@iconify/icons-simple-icons/swagger';\n+import { Icon as Icons } from '@iconify/react';\n import { ApiContext } from '../ApiContext';\n import Progress from '../../../Shared/Progress';\n import Api from '../../../../data/api';\n import SwaggerUI from './SwaggerUI';\n import TryOutController from './TryOutController';\n import Application from '../../../../data/Application';\n \n+\n+const fileDownload = require('js-file-download');\n+const openapiToPostman = require('openapi-to-postmanv2');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgyMjI3OA=="}, "originalCommit": {"oid": "798a933736881cfd83827b739a7cc1560d64fe50"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjA4ODgxOnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/components/Apis/Details/GraphQLConsole/GraphQLConsole.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNToyNjoxMlrOHr2pqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNTo0MToxMFrOHr228w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc0NjIxOQ==", "bodyText": "Why this is getting from output[0]? any specific reason?", "url": "https://github.com/wso2/carbon-apimgt/pull/9314#discussion_r515746219", "createdAt": "2020-11-02T05:26:12Z", "author": {"login": "Krishanx92"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/components/Apis/Details/GraphQLConsole/GraphQLConsole.jsx", "diffHunk": "@@ -158,6 +162,29 @@ export default function GraphQLConsole() {\n         }\n     }\n \n+    function grapgQLToPostman(graphQL, URL) {\n+        converter.convert({\n+            type: 'string',\n+            data: graphQL,\n+        }, {}, (error, result) => {\n+            if (error) {\n+                console.log(error);\n+            } else {\n+                const urlValue = URL.https;\n+                const results = result;\n+                results.output[0].data.variable[0].value = urlValue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "164ce3b6f4b8f753dea763305da58c7e437e5071"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc0OTYxOQ==", "bodyText": "one reason I used it as [0] is that it is given in the sample code of the library. Another reason is that we cannot get output without [0] or putting any other number.", "url": "https://github.com/wso2/carbon-apimgt/pull/9314#discussion_r515749619", "createdAt": "2020-11-02T05:41:10Z", "author": {"login": "Tharanidk"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/components/Apis/Details/GraphQLConsole/GraphQLConsole.jsx", "diffHunk": "@@ -158,6 +162,29 @@ export default function GraphQLConsole() {\n         }\n     }\n \n+    function grapgQLToPostman(graphQL, URL) {\n+        converter.convert({\n+            type: 'string',\n+            data: graphQL,\n+        }, {}, (error, result) => {\n+            if (error) {\n+                console.log(error);\n+            } else {\n+                const urlValue = URL.https;\n+                const results = result;\n+                results.output[0].data.variable[0].value = urlValue;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc0NjIxOQ=="}, "originalCommit": {"oid": "164ce3b6f4b8f753dea763305da58c7e437e5071"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3049, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}