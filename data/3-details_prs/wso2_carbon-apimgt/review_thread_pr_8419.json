{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MTIzNzE1", "number": 8419, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNTo0MToyN1rODzyuWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjowMjozOFrODzzY2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NjM1MDMyOnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Subscriptions/SubscriptionsTable.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNTo0MToyN1rOGIa5Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMjowMTo1OVrOGJypVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ4MjM4Ng==", "bodyText": "Shall we please avoid hardcoding any color values? , The reason is if we put random nice-looking colors like this, this color will oddly appear only in this page this location so shall we just leave the default color or pick a color from color pallets.\n@chanaka3d @erangatl  WDYT ?", "url": "https://github.com/wso2/carbon-apimgt/pull/8419#discussion_r411482386", "createdAt": "2020-04-20T15:41:27Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Subscriptions/SubscriptionsTable.jsx", "diffHunk": "@@ -122,56 +118,24 @@ const styles = (theme) => ({\n     titleWrapper: {\n         marginBottom: theme.spacing(3),\n     },\n+    typography: {\n+        padding: theme.spacing(2),\n+    },\n+    root: {\n+        flexGrow: 1,\n+    },\n+    InfoToolTip: {\n+        backgroundColor: '#f5f5f9',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5df64bc27212e5609d8a1e8949518045f4623440"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjkyMDE1MQ==", "bodyText": "Removed the hard-coded values. View:", "url": "https://github.com/wso2/carbon-apimgt/pull/8419#discussion_r412920151", "createdAt": "2020-04-22T12:01:59Z", "author": {"login": "vithu30"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Subscriptions/SubscriptionsTable.jsx", "diffHunk": "@@ -122,56 +118,24 @@ const styles = (theme) => ({\n     titleWrapper: {\n         marginBottom: theme.spacing(3),\n     },\n+    typography: {\n+        padding: theme.spacing(2),\n+    },\n+    root: {\n+        flexGrow: 1,\n+    },\n+    InfoToolTip: {\n+        backgroundColor: '#f5f5f9',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ4MjM4Ng=="}, "originalCommit": {"oid": "5df64bc27212e5609d8a1e8949518045f4623440"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NjM1NDE4OnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Subscriptions/SubscriptionsTable.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNTo0MjoxOFrOGIa7lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNTo0MDoxMFrOGIzZow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ4MzAzMA==", "bodyText": "Same applies here pls don't change fontWeight value randomly", "url": "https://github.com/wso2/carbon-apimgt/pull/8419#discussion_r411483030", "createdAt": "2020-04-20T15:42:18Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Subscriptions/SubscriptionsTable.jsx", "diffHunk": "@@ -122,56 +118,24 @@ const styles = (theme) => ({\n     titleWrapper: {\n         marginBottom: theme.spacing(3),\n     },\n+    typography: {\n+        padding: theme.spacing(2),\n+    },\n+    root: {\n+        flexGrow: 1,\n+    },\n+    InfoToolTip: {\n+        backgroundColor: '#f5f5f9',\n+        color: 'rgba(0,0,0,0.87)',\n+        maxWidth: 500,\n+        fontSize: theme.typography.pxToRem(14),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5df64bc27212e5609d8a1e8949518045f4623440"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg4MzkzOQ==", "bodyText": "Changed to fontsize from theme.", "url": "https://github.com/wso2/carbon-apimgt/pull/8419#discussion_r411883939", "createdAt": "2020-04-21T05:40:10Z", "author": {"login": "vithu30"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Subscriptions/SubscriptionsTable.jsx", "diffHunk": "@@ -122,56 +118,24 @@ const styles = (theme) => ({\n     titleWrapper: {\n         marginBottom: theme.spacing(3),\n     },\n+    typography: {\n+        padding: theme.spacing(2),\n+    },\n+    root: {\n+        flexGrow: 1,\n+    },\n+    InfoToolTip: {\n+        backgroundColor: '#f5f5f9',\n+        color: 'rgba(0,0,0,0.87)',\n+        maxWidth: 500,\n+        fontSize: theme.typography.pxToRem(14),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ4MzAzMA=="}, "originalCommit": {"oid": "5df64bc27212e5609d8a1e8949518045f4623440"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NjQ1OTE1OnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/data/api.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjowMjozOFrOGIb7Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNTozNzo0MVrOGIzWBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ5OTM1NQ==", "bodyText": "Please remove the call back usages as below\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                getSubscriberInfo(id, callback = null) {\n          \n          \n            \n                    const promise_subscription = this.client.then(client => {\n          \n          \n            \n                        return client.apis['Subscriber'].get_subscriptions__subscriptionId__subscriber_info(\n          \n          \n            \n                            {\n          \n          \n            \n                                subscriptionId: id,\n          \n          \n            \n                            },\n          \n          \n            \n                            this._requestMetaData(),\n          \n          \n            \n                        );\n          \n          \n            \n                    });\n          \n          \n            \n                    if (callback) {\n          \n          \n            \n                        return promise_subscription.then(callback);\n          \n          \n            \n                    } else {\n          \n          \n            \n                        return promise_subscription;\n          \n          \n            \n                    }\n          \n          \n            \n                }\n          \n          \n            \n                getSubscriberInfo(id) {\n          \n          \n            \n                    const promise_subscription = this.client.then(client => {\n          \n          \n            \n                        return client.apis['Subscriber'].get_subscriptions__subscriptionId__subscriber_info(\n          \n          \n            \n                            {\n          \n          \n            \n                                subscriptionId: id,\n          \n          \n            \n                            },\n          \n          \n            \n                            this._requestMetaData(),\n          \n          \n            \n                        );\n          \n          \n            \n                    });\n          \n          \n            \n                    return promise_subscription;\n          \n          \n            \n                }", "url": "https://github.com/wso2/carbon-apimgt/pull/8419#discussion_r411499355", "createdAt": "2020-04-20T16:02:38Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/data/api.js", "diffHunk": "@@ -1028,6 +1028,27 @@ class API extends Resource {\n         }\n     }\n \n+    /**\n+     * Retrieve subscriber information for a given subscriptionId\n+     * @param {String} id Subscription UUID\n+     * @returns {Promise} With given callback attached to the success chain else API invoke promise.\n+     */\n+    getSubscriberInfo(id, callback = null) {\n+        const promise_subscription = this.client.then(client => {\n+            return client.apis['Subscriber'].get_subscriptions__subscriptionId__subscriber_info(\n+                {\n+                    subscriptionId: id,\n+                },\n+                this._requestMetaData(),\n+            );\n+        });\n+        if (callback) {\n+            return promise_subscription.then(callback);\n+        } else {\n+            return promise_subscription;\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5df64bc27212e5609d8a1e8949518045f4623440"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg4MzAxNA==", "bodyText": "Fixed", "url": "https://github.com/wso2/carbon-apimgt/pull/8419#discussion_r411883014", "createdAt": "2020-04-21T05:37:41Z", "author": {"login": "vithu30"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/data/api.js", "diffHunk": "@@ -1028,6 +1028,27 @@ class API extends Resource {\n         }\n     }\n \n+    /**\n+     * Retrieve subscriber information for a given subscriptionId\n+     * @param {String} id Subscription UUID\n+     * @returns {Promise} With given callback attached to the success chain else API invoke promise.\n+     */\n+    getSubscriberInfo(id, callback = null) {\n+        const promise_subscription = this.client.then(client => {\n+            return client.apis['Subscriber'].get_subscriptions__subscriptionId__subscriber_info(\n+                {\n+                    subscriptionId: id,\n+                },\n+                this._requestMetaData(),\n+            );\n+        });\n+        if (callback) {\n+            return promise_subscription.then(callback);\n+        } else {\n+            return promise_subscription;\n+        }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ5OTM1NQ=="}, "originalCommit": {"oid": "5df64bc27212e5609d8a1e8949518045f4623440"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2737, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}