{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MDgxMzk1", "number": 8485, "title": " Support x-wso2 Swagger extensions that are already supported by Micro Gateway when importing OAS definitions.", "bodyText": "Purpose\nWSO2 Micro gateway currently supports processing several x-wso2 vendor extensions defined at swagger level which contain all the information required to create APIs. Processing these needs to be supported at APIM level in order to allow the same swagger definition to be used to create a complete API on APIM as well as importing a complete API definition as a swagger. This fix will provide support for the mentioned issue.\nGoals\n\n\n\nExtension\nAPI level\nResource Level\n\n\n\n\nx-wso2-basePath\nFixed\n\u00a0\n\n\nx-wso2-production-endpoints\nSupported Already\nNo support from APIM yet\n\n\nx-wso2-sandbox-endpoints\nSupported Already\nNo support from APIM yet\n\n\nx-wso2-endpoints\nSupported Already\nNo support from APIM yet\n\n\nx-wso2-throttling-tier\nFixed\nFixed\n\n\nx-wso2-cors\nFixed\n\u00a0\n\n\nx-wso2-disable-security\n\u00a0\nFixed\n\n\nx-wso2-transports\nFixed\nNo support from APIM yet\n\n\nx-wso2-application-security\nSupported Already\nSupported Already\n\n\nx-wso2-mutual-ssl\nFixed\n\u00a0\n\n\nx-wso2-auth-header\nFixed\n\u00a0\n\n\nx-wso2-response-cache\nFixed\n\u00a0\n\n\ncache-timeout\nFixed\n\u00a0\n\n\n\nFixes wso2/product-apim-tooling#124 and wso2/product-apim#7648\nApproach\nResource level Extensions.\n\n\nAPI Level extensions\n\n\n\n\n\n\nUser stories\n\nImporting external swagger 2 definitions through API CTL.\nImporting external swagger 3 definitions through API CTL.\nImporting external swagger 2 definitions through API publisher UI or using curl commands.\nImporting external swagger 3 definitions through API  publisher UI or using curl commands.\nImporting Swagger definitions with additional properties.\n\nDocumentation\nDoc has Impact\nTest environment\nmacOS Catalina 10.15.4\nJava 1.8_241", "createdAt": "2020-05-11T12:44:33Z", "url": "https://github.com/wso2/carbon-apimgt/pull/8485", "merged": true, "mergeCommit": {"oid": "e9a511061e178da045bd337038b96254e1fa3955"}, "closed": true, "closedAt": "2020-05-18T11:51:07Z", "author": {"login": "Chamindu36"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgO2sOAH2gAyNDE2MDgxMzk1OjA0ZWZhYWZlNjgyYzMwZTk0MmM5OGFmYjM3M2ZiZGEzYjFlYWFiM2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcieSpzAH2gAyNDE2MDgxMzk1OmJjZWRiMTIyZjJmYjg3ZDk2N2M2NmJmN2Y2OGJhM2I4OWUzNTQyMjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "04efaafe682c30e942c98afb373fbda3b1eaab3a", "author": {"user": {"login": "Chamindu36", "name": "Chamindu Udakara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/04efaafe682c30e942c98afb373fbda3b1eaab3a", "committedDate": "2020-05-11T12:30:04Z", "message": "x vendor extensions set when importing through portal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfa9fabd1a42db0666d9abfe486ee1176d13a238", "author": {"user": {"login": "Chamindu36", "name": "Chamindu Udakara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/dfa9fabd1a42db0666d9abfe486ee1176d13a238", "committedDate": "2020-05-11T12:32:05Z", "message": "x vendor extensions set when importing through APICTL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "866725d3891a0c656741e6f35b0d129b4d0552d0", "author": {"user": {"login": "Chamindu36", "name": "Chamindu Udakara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/866725d3891a0c656741e6f35b0d129b4d0552d0", "committedDate": "2020-05-11T12:32:44Z", "message": "set basePath when importing OAS definition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20ecf78573ed36f5d62cf1e7d30224541d36e33b", "author": {"user": {"login": "Chamindu36", "name": "Chamindu Udakara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/20ecf78573ed36f5d62cf1e7d30224541d36e33b", "committedDate": "2020-05-12T10:40:06Z", "message": "Squash parserFiles"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "16d70f160ca3260e654d46a4f3342c9dfc5c42e4", "author": {"user": {"login": "Chamindu36", "name": "Chamindu Udakara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/16d70f160ca3260e654d46a4f3342c9dfc5c42e4", "committedDate": "2020-05-11T19:32:15Z", "message": "Basepath retrieve with {version}"}, "afterCommit": {"oid": "20ecf78573ed36f5d62cf1e7d30224541d36e33b", "author": {"user": {"login": "Chamindu36", "name": "Chamindu Udakara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/20ecf78573ed36f5d62cf1e7d30224541d36e33b", "committedDate": "2020-05-12T10:40:06Z", "message": "Squash parserFiles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "561ce4ad4f7db7d5a7ef6a9e7b7c03533d16949b", "author": {"user": {"login": "Chamindu36", "name": "Chamindu Udakara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/561ce4ad4f7db7d5a7ef6a9e7b7c03533d16949b", "committedDate": "2020-05-13T07:51:49Z", "message": "Removing dependancy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36fe5d1f390e72ba7b33a655110ddfb36b8bd67f", "author": {"user": {"login": "Chamindu36", "name": "Chamindu Udakara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/36fe5d1f390e72ba7b33a655110ddfb36b8bd67f", "committedDate": "2020-05-14T08:41:22Z", "message": "Refactoring some names and NullException handling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMjg1NDU4", "url": "https://github.com/wso2/carbon-apimgt/pull/8485#pullrequestreview-413285458", "createdAt": "2020-05-18T05:46:15Z", "commit": {"oid": "36fe5d1f390e72ba7b33a655110ddfb36b8bd67f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNTo0NjoxNVrOGWoP2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNjoxNDowM1rOGWovtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4MTI3Mg==", "bodyText": "should never catch NPEs. Let's do a pre-check for null without catching an NPE.", "url": "https://github.com/wso2/carbon-apimgt/pull/8485#discussion_r426381272", "createdAt": "2020-05-18T05:46:15Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "diffHunk": "@@ -1193,16 +1194,21 @@ public String getOASDefinitionWithTierContentAwareProperty(String oasDefinition,\n      */\n     private boolean isDefaultGiven(String swaggerContent) throws APIManagementException {\n         Swagger swagger = getSwagger(swaggerContent);\n-        boolean isDefaultIsGiven = true;\n+        boolean isDefaultGiven = true;\n+        try {\n         Map<String, SecuritySchemeDefinition> securityDefinitions = swagger.getSecurityDefinitions();\n         if (securityDefinitions == null) {\n             securityDefinitions = new HashMap<>();\n         }\n         OAuth2Definition checkDefault = (OAuth2Definition) securityDefinitions.get(SWAGGER_SECURITY_SCHEMA_KEY);\n         if (checkDefault == null) {\n-            isDefaultIsGiven = false;\n+            isDefaultGiven = false;\n+        }\n+        return isDefaultGiven;\n+        } catch (NullPointerException e){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36fe5d1f390e72ba7b33a655110ddfb36b8bd67f"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4ODM5MA==", "bodyText": "StringUtils.isBlank checks string is empty and null both.", "url": "https://github.com/wso2/carbon-apimgt/pull/8485#discussion_r426388390", "createdAt": "2020-05-18T06:10:47Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "diffHunk": "@@ -1342,4 +1348,76 @@ public Swagger injectOtherResourceScopesToDefaultScheme(Swagger swagger) throws\n         swagger.setPaths(paths);\n         return swagger;\n     }\n+\n+    /**\n+     * This method returns api that is attched with api extensions related to micro-gw\n+     *\n+     * @param apiDefinition String\n+     * @param api           API\n+     * @param isBasepathExtractedFromSwagger boolean\n+     * @return URITemplate\n+     */\n+    @Override\n+    public API setExtensionsToAPI(String apiDefinition, API api , boolean isBasepathExtractedFromSwagger) throws APIManagementException {\n+        Swagger swagger = getSwagger(apiDefinition);\n+        Map<String, Object> extensions = swagger.getVendorExtensions();\n+        if (extensions == null) {\n+            return api;\n+        }\n+\n+        //Setup Custom auth header for API\n+        String authHeader = OASParserUtil.getAuthorizationHeaderFromSwagger(extensions);\n+        if (authHeader != null) {\n+            api.setAuthorizationHeader(authHeader);\n+        }\n+        //Setup mutualSSL configuration\n+        String mutualSSL = OASParserUtil.getMutualSSLEnabledFromSwagger(extensions);\n+        if (mutualSSL != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36fe5d1f390e72ba7b33a655110ddfb36b8bd67f"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4ODQ2MQ==", "bodyText": "StringUtils.isBlank checks string is empty and null both.", "url": "https://github.com/wso2/carbon-apimgt/pull/8485#discussion_r426388461", "createdAt": "2020-05-18T06:10:59Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "diffHunk": "@@ -1342,4 +1348,76 @@ public Swagger injectOtherResourceScopesToDefaultScheme(Swagger swagger) throws\n         swagger.setPaths(paths);\n         return swagger;\n     }\n+\n+    /**\n+     * This method returns api that is attched with api extensions related to micro-gw\n+     *\n+     * @param apiDefinition String\n+     * @param api           API\n+     * @param isBasepathExtractedFromSwagger boolean\n+     * @return URITemplate\n+     */\n+    @Override\n+    public API setExtensionsToAPI(String apiDefinition, API api , boolean isBasepathExtractedFromSwagger) throws APIManagementException {\n+        Swagger swagger = getSwagger(apiDefinition);\n+        Map<String, Object> extensions = swagger.getVendorExtensions();\n+        if (extensions == null) {\n+            return api;\n+        }\n+\n+        //Setup Custom auth header for API\n+        String authHeader = OASParserUtil.getAuthorizationHeaderFromSwagger(extensions);\n+        if (authHeader != null) {\n+            api.setAuthorizationHeader(authHeader);\n+        }\n+        //Setup mutualSSL configuration\n+        String mutualSSL = OASParserUtil.getMutualSSLEnabledFromSwagger(extensions);\n+        if (mutualSSL != null) {\n+            String securityList = api.getApiSecurity();\n+            if (\"\".equals(securityList)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36fe5d1f390e72ba7b33a655110ddfb36b8bd67f"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4ODUwOA==", "bodyText": "Formatting issue.", "url": "https://github.com/wso2/carbon-apimgt/pull/8485#discussion_r426388508", "createdAt": "2020-05-18T06:11:09Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "diffHunk": "@@ -1342,4 +1348,76 @@ public Swagger injectOtherResourceScopesToDefaultScheme(Swagger swagger) throws\n         swagger.setPaths(paths);\n         return swagger;\n     }\n+\n+    /**\n+     * This method returns api that is attched with api extensions related to micro-gw\n+     *\n+     * @param apiDefinition String\n+     * @param api           API\n+     * @param isBasepathExtractedFromSwagger boolean\n+     * @return URITemplate\n+     */\n+    @Override\n+    public API setExtensionsToAPI(String apiDefinition, API api , boolean isBasepathExtractedFromSwagger) throws APIManagementException {\n+        Swagger swagger = getSwagger(apiDefinition);\n+        Map<String, Object> extensions = swagger.getVendorExtensions();\n+        if (extensions == null) {\n+            return api;\n+        }\n+\n+        //Setup Custom auth header for API\n+        String authHeader = OASParserUtil.getAuthorizationHeaderFromSwagger(extensions);\n+        if (authHeader != null) {\n+            api.setAuthorizationHeader(authHeader);\n+        }\n+        //Setup mutualSSL configuration\n+        String mutualSSL = OASParserUtil.getMutualSSLEnabledFromSwagger(extensions);\n+        if (mutualSSL != null) {\n+            String securityList = api.getApiSecurity();\n+            if (\"\".equals(securityList)) {\n+                securityList = APIConstants.DEFAULT_API_SECURITY_OAUTH2 ;\n+            }\n+            if (APIConstants.OPTIONAL.equals(mutualSSL)) {\n+                securityList = securityList + \",\" + APIConstants.API_SECURITY_MUTUAL_SSL;\n+            }\n+            else if (APIConstants.MANDATORY.equals(mutualSSL)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36fe5d1f390e72ba7b33a655110ddfb36b8bd67f"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4ODk4OA==", "bodyText": "getTrottleTierFromSwagger has a typo", "url": "https://github.com/wso2/carbon-apimgt/pull/8485#discussion_r426388988", "createdAt": "2020-05-18T06:12:40Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "diffHunk": "@@ -1342,4 +1348,76 @@ public Swagger injectOtherResourceScopesToDefaultScheme(Swagger swagger) throws\n         swagger.setPaths(paths);\n         return swagger;\n     }\n+\n+    /**\n+     * This method returns api that is attched with api extensions related to micro-gw\n+     *\n+     * @param apiDefinition String\n+     * @param api           API\n+     * @param isBasepathExtractedFromSwagger boolean\n+     * @return URITemplate\n+     */\n+    @Override\n+    public API setExtensionsToAPI(String apiDefinition, API api , boolean isBasepathExtractedFromSwagger) throws APIManagementException {\n+        Swagger swagger = getSwagger(apiDefinition);\n+        Map<String, Object> extensions = swagger.getVendorExtensions();\n+        if (extensions == null) {\n+            return api;\n+        }\n+\n+        //Setup Custom auth header for API\n+        String authHeader = OASParserUtil.getAuthorizationHeaderFromSwagger(extensions);\n+        if (authHeader != null) {\n+            api.setAuthorizationHeader(authHeader);\n+        }\n+        //Setup mutualSSL configuration\n+        String mutualSSL = OASParserUtil.getMutualSSLEnabledFromSwagger(extensions);\n+        if (mutualSSL != null) {\n+            String securityList = api.getApiSecurity();\n+            if (\"\".equals(securityList)) {\n+                securityList = APIConstants.DEFAULT_API_SECURITY_OAUTH2 ;\n+            }\n+            if (APIConstants.OPTIONAL.equals(mutualSSL)) {\n+                securityList = securityList + \",\" + APIConstants.API_SECURITY_MUTUAL_SSL;\n+            }\n+            else if (APIConstants.MANDATORY.equals(mutualSSL)) {\n+                securityList = securityList + \",\" + APIConstants.API_SECURITY_MUTUAL_SSL_MANDATORY;\n+            }\n+            api.setApiSecurity(securityList);\n+        }\n+        //Setup CORSConfigurations\n+        CORSConfiguration corsConfiguration = OASParserUtil.getCorsConfigFromSwagger(extensions);\n+        if (corsConfiguration != null) {\n+            api.setCorsConfiguration(corsConfiguration);\n+        }\n+        //Setup Response cache enabling\n+        boolean responseCacheEnable = OASParserUtil.getResponseCacheFromSwagger(extensions);\n+        if (responseCacheEnable) {\n+            api.setResponseCache(APIConstants.ENABLED);\n+        }\n+        //Setup cache timeOut\n+        int cacheTimeOut = OASParserUtil.getCacheTimeOutFromSwagger(extensions);\n+        if (cacheTimeOut != 0) {\n+            api.setCacheTimeout(cacheTimeOut);\n+        }\n+        //Setup Transports\n+        String transports = OASParserUtil.getTransportsFromSwagger(extensions);\n+        if (transports != null) {\n+            api.setTransports(transports);\n+        }\n+        //Setup Trottlingtiers\n+        String throttleTier = OASParserUtil.getTrottleTierFromSwagger(extensions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36fe5d1f390e72ba7b33a655110ddfb36b8bd67f"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4OTM1Mw==", "bodyText": "Don't ever catch NPEs. We need to have pre-checks for null before executing a code that does an NPE.", "url": "https://github.com/wso2/carbon-apimgt/pull/8485#discussion_r426389353", "createdAt": "2020-05-18T06:13:46Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS3Parser.java", "diffHunk": "@@ -1259,12 +1260,17 @@ public String getOASDefinitionWithTierContentAwareProperty(String oasDefinition,\n      */\n     private boolean isDefaultGiven(String swaggerContent) throws APIManagementException {\n         OpenAPI openAPI = getOpenAPI(swaggerContent);\n-        boolean isDefaultIsGiven = true;\n-        SecurityScheme checkDefault = openAPI.getComponents().getSecuritySchemes().get(OPENAPI_SECURITY_SCHEMA_KEY);\n-        if (checkDefault == null) {\n-            isDefaultIsGiven = false;\n+        boolean isDefaultGiven = true;\n+        try {\n+            SecurityScheme checkDefault = openAPI.getComponents().getSecuritySchemes().get(OPENAPI_SECURITY_SCHEMA_KEY);\n+            if (checkDefault == null) {\n+                isDefaultGiven = false;\n+            }\n+            return isDefaultGiven;\n+        } catch (NullPointerException e) {\n+            isDefaultGiven = false;\n+            return isDefaultGiven;\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36fe5d1f390e72ba7b33a655110ddfb36b8bd67f"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4OTQzMQ==", "bodyText": "Remove duplicated //", "url": "https://github.com/wso2/carbon-apimgt/pull/8485#discussion_r426389431", "createdAt": "2020-05-18T06:14:03Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS3Parser.java", "diffHunk": "@@ -1456,4 +1462,75 @@ private OpenAPI injectOtherResourceScopesToDefaultScheme(OpenAPI openAPI) throws\n         return openAPI;\n     }\n \n+    /**\n+     * This method returns api that is attched with api extensions related to micro-gw\n+     *\n+     * @param apiDefinition String\n+     * @param api           API\n+     * @param isBasepathExtractedFromSwagger boolean\n+     * @return URITemplate\n+     */\n+    @Override\n+    public API setExtensionsToAPI(String apiDefinition, API api, boolean isBasepathExtractedFromSwagger) throws APIManagementException {\n+        OpenAPI openAPI = getOpenAPI(apiDefinition);\n+        Map<String, Object> extensions = openAPI.getExtensions();\n+        if (extensions == null) {\n+            return api;\n+        }\n+\n+//        //Setup Custom auth header for API", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36fe5d1f390e72ba7b33a655110ddfb36b8bd67f"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3326e1cdfab564cecd7fa544d40dd4399ff46f73", "author": {"user": {"login": "Chamindu36", "name": "Chamindu Udakara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/3326e1cdfab564cecd7fa544d40dd4399ff46f73", "committedDate": "2020-05-18T07:31:59Z", "message": "Fixes after review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNTA1NTU0", "url": "https://github.com/wso2/carbon-apimgt/pull/8485#pullrequestreview-413505554", "createdAt": "2020-05-18T11:29:17Z", "commit": {"oid": "3326e1cdfab564cecd7fa544d40dd4399ff46f73"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMToyOToxN1rOGWzATA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMToyOToxN1rOGWzATA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU1NzUxNg==", "bodyText": "throttleTier", "url": "https://github.com/wso2/carbon-apimgt/pull/8485#discussion_r426557516", "createdAt": "2020-05-18T11:29:17Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OASParserUtil.java", "diffHunk": "@@ -1226,4 +1228,176 @@ public static String preProcess(String swaggerContent) throws APIManagementExcep\n         String swaggerContentUpdated = apiDefinition.processOtherSchemeScopes(swaggerContent);\n         return swaggerContentUpdated;\n     }\n+\n+    /**\n+     * This method returns api that is attched with api extensions related to micro-gw\n+     *\n+     * @param swaggerContent String\n+     * @param api            API\n+     * @return URITemplate\n+     */\n+    public static API setExtensionsToAPI(String swaggerContent, API api, boolean isBasepathExtractedFromSwagger) throws APIManagementException {\n+        APIDefinition apiDefinition = getOASParser(swaggerContent);\n+        api = apiDefinition.setExtensionsToAPI(swaggerContent, api, isBasepathExtractedFromSwagger);\n+        return api;\n+    }\n+\n+    /**\n+     * This method returns extension of trottling tier related to micro-gw\n+     *\n+     * @param extensions Map<String, Object> extensions\n+     * @return String String\n+     * @throws APIManagementException throws if an error occurred\n+     */\n+    public static String getBasePathFromSwagger(Map<String, Object> extensions) throws APIManagementException {\n+        String basepath = null;\n+        ObjectMapper mapper = new ObjectMapper();\n+        if (extensions.containsKey(APIConstants.X_WSO2_BASEPATH)) {\n+            Object object = extensions.get(APIConstants.X_WSO2_BASEPATH).toString();\n+            basepath = mapper.convertValue(object, String.class);\n+        }\n+        return basepath;\n+    }\n+\n+    /**\n+     * This method returns extension of trottling tier related to micro-gw\n+     *\n+     * @param extensions Map<String, Object> extensions\n+     * @return String String\n+     * @throws APIManagementException throws if an error occurred\n+     */\n+    public static String getThrottleTierFromSwagger(Map<String, Object> extensions) throws APIManagementException {\n+        String trottleTier = null;\n+        ObjectMapper mapper = new ObjectMapper();\n+        if (extensions.containsKey(APIConstants.X_WSO2_THROTTLING_TIER)) {\n+            Object object = extensions.get(APIConstants.X_WSO2_THROTTLING_TIER).toString();\n+            trottleTier = mapper.convertValue(object, String.class);\n+        }\n+        return trottleTier;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3326e1cdfab564cecd7fa544d40dd4399ff46f73"}, "originalPosition": 175}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a7860bd40dc6a9c5177833d491889b7cdd14f6f", "author": {"user": {"login": "Chamindu36", "name": "Chamindu Udakara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/8a7860bd40dc6a9c5177833d491889b7cdd14f6f", "committedDate": "2020-05-18T11:31:29Z", "message": "Fixing typos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcedb122f2fb87d967c66bf7f68ba3b89e354227", "author": {"user": {"login": "Chamindu36", "name": "Chamindu Udakara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/bcedb122f2fb87d967c66bf7f68ba3b89e354227", "committedDate": "2020-05-18T11:37:02Z", "message": "Fixing typos."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2845, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}