{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2OTgzNDk1", "number": 8639, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMDo1NDo0N1rOEF4ubg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMDo1NjowNVrOEF4wFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NjA3NzI2OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/RestApiAdminUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMDo1NDo0N1rOGkWBjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOFQwOTo1NDoyNlrOIhatrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc2Mjc2Ng==", "bodyText": "Shall we remove the empty lines", "url": "https://github.com/wso2/carbon-apimgt/pull/8639#discussion_r440762766", "createdAt": "2020-06-16T10:54:47Z", "author": {"login": "vithu30"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/RestApiAdminUtils.java", "diffHunk": "@@ -74,6 +77,38 @@ public static boolean isBlockConditionAccessibleToUser(String user, BlockConditi\n                 .equals(userTenantDomain);\n     }\n \n+    /**\n+     * Validate the required properties of Custom Rule Policy\n+     *\n+     * @param customRuleDTO custom rule object to check\n+     * @param httpMethod    HTTP method of the request\n+     */\n+    public static void validateCustomRuleRequiredProperties(CustomRuleDTO customRuleDTO, String httpMethod)\n+            throws APIManagementException {\n+\n+        String propertyName;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "debbe9d1f4810202f820583fb0161b09913d3a12"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTkxMTU5OQ==", "bodyText": "Fixed with b64a60e", "url": "https://github.com/wso2/carbon-apimgt/pull/8639#discussion_r571911599", "createdAt": "2021-02-08T09:54:26Z", "author": {"login": "hisanhunais"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/RestApiAdminUtils.java", "diffHunk": "@@ -74,6 +77,38 @@ public static boolean isBlockConditionAccessibleToUser(String user, BlockConditi\n                 .equals(userTenantDomain);\n     }\n \n+    /**\n+     * Validate the required properties of Custom Rule Policy\n+     *\n+     * @param customRuleDTO custom rule object to check\n+     * @param httpMethod    HTTP method of the request\n+     */\n+    public static void validateCustomRuleRequiredProperties(CustomRuleDTO customRuleDTO, String httpMethod)\n+            throws APIManagementException {\n+\n+        String propertyName;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc2Mjc2Ng=="}, "originalCommit": {"oid": "debbe9d1f4810202f820583fb0161b09913d3a12"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NjA4MTUxOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/RestApiAdminUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMDo1NjowNVrOGkWENg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMToyODo1N1rOGkXDhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc2MzQ0Ng==", "bodyText": "What is the httpMethod we check here? can this be null or empty?", "url": "https://github.com/wso2/carbon-apimgt/pull/8639#discussion_r440763446", "createdAt": "2020-06-16T10:56:05Z", "author": {"login": "vithu30"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/RestApiAdminUtils.java", "diffHunk": "@@ -74,6 +77,38 @@ public static boolean isBlockConditionAccessibleToUser(String user, BlockConditi\n                 .equals(userTenantDomain);\n     }\n \n+    /**\n+     * Validate the required properties of Custom Rule Policy\n+     *\n+     * @param customRuleDTO custom rule object to check\n+     * @param httpMethod    HTTP method of the request\n+     */\n+    public static void validateCustomRuleRequiredProperties(CustomRuleDTO customRuleDTO, String httpMethod)\n+            throws APIManagementException {\n+\n+        String propertyName;\n+\n+        //policyName property is validated only for POST request\n+        if (httpMethod.equalsIgnoreCase(APIConstants.HTTP_POST)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "debbe9d1f4810202f820583fb0161b09913d3a12"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc3OTY1Mg==", "bodyText": "This validation method will be called by both POST and PUT request. For POST request, if the policyName is blank, we need to throw and exception. But for PUT request, since the policyName value is overridden using the existing policyName value, we need to skip this validation check of policyName.", "url": "https://github.com/wso2/carbon-apimgt/pull/8639#discussion_r440779652", "createdAt": "2020-06-16T11:28:57Z", "author": {"login": "hisanhunais"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/RestApiAdminUtils.java", "diffHunk": "@@ -74,6 +77,38 @@ public static boolean isBlockConditionAccessibleToUser(String user, BlockConditi\n                 .equals(userTenantDomain);\n     }\n \n+    /**\n+     * Validate the required properties of Custom Rule Policy\n+     *\n+     * @param customRuleDTO custom rule object to check\n+     * @param httpMethod    HTTP method of the request\n+     */\n+    public static void validateCustomRuleRequiredProperties(CustomRuleDTO customRuleDTO, String httpMethod)\n+            throws APIManagementException {\n+\n+        String propertyName;\n+\n+        //policyName property is validated only for POST request\n+        if (httpMethod.equalsIgnoreCase(APIConstants.HTTP_POST)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc2MzQ0Ng=="}, "originalCommit": {"oid": "debbe9d1f4810202f820583fb0161b09913d3a12"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3322, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}