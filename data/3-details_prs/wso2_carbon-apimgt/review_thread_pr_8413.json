{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0OTMzNDk1", "number": 8413, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNDo0NzoxM1rOEoW3lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNDo0NzoyN1rOEoW38g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNzUzMTczOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/utils/GatewayUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNDo0NzoxM1rOHZZb_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNzo0NzoyM1rOIOhAbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM5MzIxNA==", "bodyText": "Shall we fix the formatting issue here?", "url": "https://github.com/wso2/carbon-apimgt/pull/8413#discussion_r496393214", "createdAt": "2020-09-29T04:47:13Z", "author": {"login": "npamudika"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/utils/GatewayUtils.java", "diffHunk": "@@ -422,24 +423,38 @@ public static boolean handleThreat(org.apache.synapse.MessageContext messageCont\n         if (pipe != null) {\n             bufferedInputStream = new BufferedInputStream(pipe.getInputStream());\n         }\n+        inputStreamMap = new HashMap<>();\n+        String contentType = axis2MC.getProperty(ThreatProtectorConstants.CONTENT_TYPE).toString();\n+\n         if (bufferedInputStream != null) {\n-            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n-            byte[] buffer = new byte[requestBufferSize];\n-            int length;\n-            while ((length = bufferedInputStream.read(buffer)) > -1) {\n-                byteArrayOutputStream.write(buffer, 0, length);\n+            bufferedInputStream.mark(0);\n+            if (bufferedInputStream.read() != -1){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd2e263248421eabdcfcbb1b16229d4e606da1b8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA5MTc1OA==", "bodyText": "Fixed in the latest Version", "url": "https://github.com/wso2/carbon-apimgt/pull/8413#discussion_r552091758", "createdAt": "2021-01-05T17:47:23Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/utils/GatewayUtils.java", "diffHunk": "@@ -422,24 +423,38 @@ public static boolean handleThreat(org.apache.synapse.MessageContext messageCont\n         if (pipe != null) {\n             bufferedInputStream = new BufferedInputStream(pipe.getInputStream());\n         }\n+        inputStreamMap = new HashMap<>();\n+        String contentType = axis2MC.getProperty(ThreatProtectorConstants.CONTENT_TYPE).toString();\n+\n         if (bufferedInputStream != null) {\n-            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n-            byte[] buffer = new byte[requestBufferSize];\n-            int length;\n-            while ((length = bufferedInputStream.read(buffer)) > -1) {\n-                byteArrayOutputStream.write(buffer, 0, length);\n+            bufferedInputStream.mark(0);\n+            if (bufferedInputStream.read() != -1){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM5MzIxNA=="}, "originalCommit": {"oid": "cd2e263248421eabdcfcbb1b16229d4e606da1b8"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNzUzMjY2OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/utils/GatewayUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNDo0NzoyN1rOHZZctA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNzo0Nzo0OFrOIOhBOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM5MzM5Ng==", "bodyText": "Shall we fix the formatting issue here?", "url": "https://github.com/wso2/carbon-apimgt/pull/8413#discussion_r496393396", "createdAt": "2020-09-29T04:47:27Z", "author": {"login": "npamudika"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/utils/GatewayUtils.java", "diffHunk": "@@ -422,24 +423,38 @@ public static boolean handleThreat(org.apache.synapse.MessageContext messageCont\n         if (pipe != null) {\n             bufferedInputStream = new BufferedInputStream(pipe.getInputStream());\n         }\n+        inputStreamMap = new HashMap<>();\n+        String contentType = axis2MC.getProperty(ThreatProtectorConstants.CONTENT_TYPE).toString();\n+\n         if (bufferedInputStream != null) {\n-            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n-            byte[] buffer = new byte[requestBufferSize];\n-            int length;\n-            while ((length = bufferedInputStream.read(buffer)) > -1) {\n-                byteArrayOutputStream.write(buffer, 0, length);\n+            bufferedInputStream.mark(0);\n+            if (bufferedInputStream.read() != -1){\n+                bufferedInputStream.reset();\n+                ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n+                byte[] buffer = new byte[requestBufferSize];\n+                int length;\n+                while ((length = bufferedInputStream.read(buffer)) > -1) {\n+                    byteArrayOutputStream.write(buffer, 0, length);\n+                }\n+                byteArrayOutputStream.flush();\n+                inputStreamSchema = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());\n+                inputStreamXml = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());\n+                inputStreamOriginal = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());\n+                inputStreamJSON = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());\n+            } else {\n+                String payload;\n+                if (ThreatProtectorConstants.APPLICATION_JSON.equals(contentType)){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd2e263248421eabdcfcbb1b16229d4e606da1b8"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA5MTk2MQ==", "bodyText": "Fixed in the latest Versions", "url": "https://github.com/wso2/carbon-apimgt/pull/8413#discussion_r552091961", "createdAt": "2021-01-05T17:47:48Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/utils/GatewayUtils.java", "diffHunk": "@@ -422,24 +423,38 @@ public static boolean handleThreat(org.apache.synapse.MessageContext messageCont\n         if (pipe != null) {\n             bufferedInputStream = new BufferedInputStream(pipe.getInputStream());\n         }\n+        inputStreamMap = new HashMap<>();\n+        String contentType = axis2MC.getProperty(ThreatProtectorConstants.CONTENT_TYPE).toString();\n+\n         if (bufferedInputStream != null) {\n-            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n-            byte[] buffer = new byte[requestBufferSize];\n-            int length;\n-            while ((length = bufferedInputStream.read(buffer)) > -1) {\n-                byteArrayOutputStream.write(buffer, 0, length);\n+            bufferedInputStream.mark(0);\n+            if (bufferedInputStream.read() != -1){\n+                bufferedInputStream.reset();\n+                ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n+                byte[] buffer = new byte[requestBufferSize];\n+                int length;\n+                while ((length = bufferedInputStream.read(buffer)) > -1) {\n+                    byteArrayOutputStream.write(buffer, 0, length);\n+                }\n+                byteArrayOutputStream.flush();\n+                inputStreamSchema = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());\n+                inputStreamXml = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());\n+                inputStreamOriginal = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());\n+                inputStreamJSON = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());\n+            } else {\n+                String payload;\n+                if (ThreatProtectorConstants.APPLICATION_JSON.equals(contentType)){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM5MzM5Ng=="}, "originalCommit": {"oid": "cd2e263248421eabdcfcbb1b16229d4e606da1b8"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2731, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}