{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNjg3Nzgx", "number": 9240, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQwOTowNjo1MVrOEbMscw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQwOTowNzo0OFrOEbMsvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTU0OTk1OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQwOTowNjo1MVrOHFDwbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMToxOTo0NFrOHFEmaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA2NjQ3OA==", "bodyText": "Assigning newTenantConfScopesArray into mergedTenantConfScopesArray will just keep references.\nAfter adding an element to mergedTenantConfScopesArray, that will also appear in newTenantConfScopesArray.\nShould we take a copy and assign instead?\neg:\nJsonElement newTenantConfScopes = new JsonParser().parse(newScopeRoleJson.toJSONString());", "url": "https://github.com/wso2/carbon-apimgt/pull/9240#discussion_r475066478", "createdAt": "2020-08-22T09:06:51Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -11525,28 +11527,68 @@ public static void updateTenantConfOfRoleScopeMapping(JSONObject newScopeRoleJso\n         } catch (UserStoreException e) {\n             APIUtil.handleException(\"Couldn't read tenant configuration from user-store\", e);\n         }\n-        //Here we are removing RESTAPIScopes from the existing tenant-conf\n-        // Adding new RESTAPIScopes to the existing tenant-conf.\n+        JsonElement existingTenantConfScopes = existingTenantConfObject.get(APIConstants.REST_API_SCOPES_CONFIG);\n+        JsonElement newTenantConfScopes = new JsonParser().parse(newScopeRoleJson.toJSONString());\n+        JsonObject mergedTenantConfScopes = mergeTenantConfScopes(existingTenantConfScopes, newTenantConfScopes);\n+\n+        // Removing the old RESTAPIScopes config from the existing tenant-conf\n         existingTenantConfObject.remove(APIConstants.REST_API_SCOPES_CONFIG);\n-        JsonElement jsonElement = new JsonParser().parse(newScopeRoleJson.toJSONString());\n-        existingTenantConfObject.add(APIConstants.REST_API_SCOPES_CONFIG, jsonElement);\n-        try {\n-            ObjectMapper mapper = new ObjectMapper();\n-            String formattedTenantConf = mapper.writerWithDefaultPrettyPrinter()\n-                    .writeValueAsString(existingTenantConfObject.toString());\n-            APIUtil.updateTenantConf(existingTenantConfObject.toString(), tenantDomain);\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Finalized tenant-conf.json: \" + formattedTenantConf);\n-            }\n-        } catch (JsonProcessingException e) {\n-            throw new APIManagementException(\"Error while formatting tenant-conf.json of tenant\", e);\n+        // Adding the merged RESTAPIScopes config to the tenant-conf\n+        existingTenantConfObject.add(APIConstants.REST_API_SCOPES_CONFIG, mergedTenantConfScopes);\n+\n+        // Prettify the tenant-conf\n+        Gson gson = new GsonBuilder().setPrettyPrinting().create();\n+        String formattedTenantConf = gson.toJson(existingTenantConfObject);\n+\n+        APIUtil.updateTenantConf(formattedTenantConf, tenantDomain);\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Finalized tenant-conf.json: \" + formattedTenantConf);\n         }\n         // Invalidate Cache\n         Caching.getCacheManager(APIConstants.API_MANAGER_CACHE_MANAGER)\n                 .getCache(APIConstants.REST_API_SCOPE_CACHE)\n                 .put(tenantDomain, null);\n     }\n \n+    /**\n+     * Merge the existing and new scope-role mappings (RESTAPIScopes config) in the tenant-conf\n+     *\n+     * @param existingTenantConfScopes Existing (old) scope-role mappings\n+     * @param newTenantConfScopes      Modified (new) scope-role mappings\n+     */\n+    public static JsonObject mergeTenantConfScopes(JsonElement existingTenantConfScopes, JsonElement newTenantConfScopes) {\n+        JsonArray existingTenantConfScopesArray = (JsonArray) existingTenantConfScopes.getAsJsonObject().\n+                get(APIConstants.REST_API_SCOPE);\n+        JsonArray newTenantConfScopesArray = (JsonArray) newTenantConfScopes.getAsJsonObject().\n+                get(APIConstants.REST_API_SCOPE);\n+        JsonArray mergedTenantConfScopesArray = newTenantConfScopesArray;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f1f0eeacc5ae60edf6305664cd3dd34f60af94d"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA4MDI5OQ==", "bodyText": "Fixed via e4ae8e8", "url": "https://github.com/wso2/carbon-apimgt/pull/9240#discussion_r475080299", "createdAt": "2020-08-22T11:19:44Z", "author": {"login": "wasuradananjith"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -11525,28 +11527,68 @@ public static void updateTenantConfOfRoleScopeMapping(JSONObject newScopeRoleJso\n         } catch (UserStoreException e) {\n             APIUtil.handleException(\"Couldn't read tenant configuration from user-store\", e);\n         }\n-        //Here we are removing RESTAPIScopes from the existing tenant-conf\n-        // Adding new RESTAPIScopes to the existing tenant-conf.\n+        JsonElement existingTenantConfScopes = existingTenantConfObject.get(APIConstants.REST_API_SCOPES_CONFIG);\n+        JsonElement newTenantConfScopes = new JsonParser().parse(newScopeRoleJson.toJSONString());\n+        JsonObject mergedTenantConfScopes = mergeTenantConfScopes(existingTenantConfScopes, newTenantConfScopes);\n+\n+        // Removing the old RESTAPIScopes config from the existing tenant-conf\n         existingTenantConfObject.remove(APIConstants.REST_API_SCOPES_CONFIG);\n-        JsonElement jsonElement = new JsonParser().parse(newScopeRoleJson.toJSONString());\n-        existingTenantConfObject.add(APIConstants.REST_API_SCOPES_CONFIG, jsonElement);\n-        try {\n-            ObjectMapper mapper = new ObjectMapper();\n-            String formattedTenantConf = mapper.writerWithDefaultPrettyPrinter()\n-                    .writeValueAsString(existingTenantConfObject.toString());\n-            APIUtil.updateTenantConf(existingTenantConfObject.toString(), tenantDomain);\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Finalized tenant-conf.json: \" + formattedTenantConf);\n-            }\n-        } catch (JsonProcessingException e) {\n-            throw new APIManagementException(\"Error while formatting tenant-conf.json of tenant\", e);\n+        // Adding the merged RESTAPIScopes config to the tenant-conf\n+        existingTenantConfObject.add(APIConstants.REST_API_SCOPES_CONFIG, mergedTenantConfScopes);\n+\n+        // Prettify the tenant-conf\n+        Gson gson = new GsonBuilder().setPrettyPrinting().create();\n+        String formattedTenantConf = gson.toJson(existingTenantConfObject);\n+\n+        APIUtil.updateTenantConf(formattedTenantConf, tenantDomain);\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Finalized tenant-conf.json: \" + formattedTenantConf);\n         }\n         // Invalidate Cache\n         Caching.getCacheManager(APIConstants.API_MANAGER_CACHE_MANAGER)\n                 .getCache(APIConstants.REST_API_SCOPE_CACHE)\n                 .put(tenantDomain, null);\n     }\n \n+    /**\n+     * Merge the existing and new scope-role mappings (RESTAPIScopes config) in the tenant-conf\n+     *\n+     * @param existingTenantConfScopes Existing (old) scope-role mappings\n+     * @param newTenantConfScopes      Modified (new) scope-role mappings\n+     */\n+    public static JsonObject mergeTenantConfScopes(JsonElement existingTenantConfScopes, JsonElement newTenantConfScopes) {\n+        JsonArray existingTenantConfScopesArray = (JsonArray) existingTenantConfScopes.getAsJsonObject().\n+                get(APIConstants.REST_API_SCOPE);\n+        JsonArray newTenantConfScopesArray = (JsonArray) newTenantConfScopes.getAsJsonObject().\n+                get(APIConstants.REST_API_SCOPE);\n+        JsonArray mergedTenantConfScopesArray = newTenantConfScopesArray;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA2NjQ3OA=="}, "originalCommit": {"oid": "2f1f0eeacc5ae60edf6305664cd3dd34f60af94d"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTU1MDY4OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQwOTowNzo0OFrOHFDwwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMToxOTo1N1rOHFEmhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA2NjU2MA==", "bodyText": "See the previous comment regarding this line(11584) and 11575", "url": "https://github.com/wso2/carbon-apimgt/pull/9240#discussion_r475066560", "createdAt": "2020-08-22T09:07:48Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -11525,28 +11527,68 @@ public static void updateTenantConfOfRoleScopeMapping(JSONObject newScopeRoleJso\n         } catch (UserStoreException e) {\n             APIUtil.handleException(\"Couldn't read tenant configuration from user-store\", e);\n         }\n-        //Here we are removing RESTAPIScopes from the existing tenant-conf\n-        // Adding new RESTAPIScopes to the existing tenant-conf.\n+        JsonElement existingTenantConfScopes = existingTenantConfObject.get(APIConstants.REST_API_SCOPES_CONFIG);\n+        JsonElement newTenantConfScopes = new JsonParser().parse(newScopeRoleJson.toJSONString());\n+        JsonObject mergedTenantConfScopes = mergeTenantConfScopes(existingTenantConfScopes, newTenantConfScopes);\n+\n+        // Removing the old RESTAPIScopes config from the existing tenant-conf\n         existingTenantConfObject.remove(APIConstants.REST_API_SCOPES_CONFIG);\n-        JsonElement jsonElement = new JsonParser().parse(newScopeRoleJson.toJSONString());\n-        existingTenantConfObject.add(APIConstants.REST_API_SCOPES_CONFIG, jsonElement);\n-        try {\n-            ObjectMapper mapper = new ObjectMapper();\n-            String formattedTenantConf = mapper.writerWithDefaultPrettyPrinter()\n-                    .writeValueAsString(existingTenantConfObject.toString());\n-            APIUtil.updateTenantConf(existingTenantConfObject.toString(), tenantDomain);\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Finalized tenant-conf.json: \" + formattedTenantConf);\n-            }\n-        } catch (JsonProcessingException e) {\n-            throw new APIManagementException(\"Error while formatting tenant-conf.json of tenant\", e);\n+        // Adding the merged RESTAPIScopes config to the tenant-conf\n+        existingTenantConfObject.add(APIConstants.REST_API_SCOPES_CONFIG, mergedTenantConfScopes);\n+\n+        // Prettify the tenant-conf\n+        Gson gson = new GsonBuilder().setPrettyPrinting().create();\n+        String formattedTenantConf = gson.toJson(existingTenantConfObject);\n+\n+        APIUtil.updateTenantConf(formattedTenantConf, tenantDomain);\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Finalized tenant-conf.json: \" + formattedTenantConf);\n         }\n         // Invalidate Cache\n         Caching.getCacheManager(APIConstants.API_MANAGER_CACHE_MANAGER)\n                 .getCache(APIConstants.REST_API_SCOPE_CACHE)\n                 .put(tenantDomain, null);\n     }\n \n+    /**\n+     * Merge the existing and new scope-role mappings (RESTAPIScopes config) in the tenant-conf\n+     *\n+     * @param existingTenantConfScopes Existing (old) scope-role mappings\n+     * @param newTenantConfScopes      Modified (new) scope-role mappings\n+     */\n+    public static JsonObject mergeTenantConfScopes(JsonElement existingTenantConfScopes, JsonElement newTenantConfScopes) {\n+        JsonArray existingTenantConfScopesArray = (JsonArray) existingTenantConfScopes.getAsJsonObject().\n+                get(APIConstants.REST_API_SCOPE);\n+        JsonArray newTenantConfScopesArray = (JsonArray) newTenantConfScopes.getAsJsonObject().\n+                get(APIConstants.REST_API_SCOPE);\n+        JsonArray mergedTenantConfScopesArray = newTenantConfScopesArray;\n+\n+        // Iterating the existing (old) scope-role mappings\n+        for (int i = 0; i < existingTenantConfScopesArray.size(); i++) {\n+            JsonObject existingScopeRoleMapping = existingTenantConfScopesArray.get(i).getAsJsonObject();\n+            String existingScopeName = existingScopeRoleMapping.get(APIConstants.REST_API_SCOPE_NAME).getAsString();\n+            Boolean isExist = false;\n+            // Iterating the modified (new) scope-role mappings and add the old scope mappings\n+            // if those are not present in the list (merging)\n+            for (int j = 0; j < newTenantConfScopesArray.size(); j++) {\n+                JsonObject newScopeRoleMapping = newTenantConfScopesArray.get(j).getAsJsonObject();\n+                String newScopeName = newScopeRoleMapping.get(APIConstants.REST_API_SCOPE_NAME).getAsString();\n+                if (StringUtils.equals(existingScopeName, newScopeName)) {\n+                    // If a particular mapping is already there, skip it\n+                    isExist = true;\n+                    break;\n+                }\n+            }\n+            // If the particular old mapping does not exist in the new list, add it to the new list\n+            if (!isExist) {\n+                mergedTenantConfScopesArray.add(existingTenantConfScopesArray.get(i));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f1f0eeacc5ae60edf6305664cd3dd34f60af94d"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA4MDMyNQ==", "bodyText": "Fixed via e4ae8e8", "url": "https://github.com/wso2/carbon-apimgt/pull/9240#discussion_r475080325", "createdAt": "2020-08-22T11:19:57Z", "author": {"login": "wasuradananjith"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -11525,28 +11527,68 @@ public static void updateTenantConfOfRoleScopeMapping(JSONObject newScopeRoleJso\n         } catch (UserStoreException e) {\n             APIUtil.handleException(\"Couldn't read tenant configuration from user-store\", e);\n         }\n-        //Here we are removing RESTAPIScopes from the existing tenant-conf\n-        // Adding new RESTAPIScopes to the existing tenant-conf.\n+        JsonElement existingTenantConfScopes = existingTenantConfObject.get(APIConstants.REST_API_SCOPES_CONFIG);\n+        JsonElement newTenantConfScopes = new JsonParser().parse(newScopeRoleJson.toJSONString());\n+        JsonObject mergedTenantConfScopes = mergeTenantConfScopes(existingTenantConfScopes, newTenantConfScopes);\n+\n+        // Removing the old RESTAPIScopes config from the existing tenant-conf\n         existingTenantConfObject.remove(APIConstants.REST_API_SCOPES_CONFIG);\n-        JsonElement jsonElement = new JsonParser().parse(newScopeRoleJson.toJSONString());\n-        existingTenantConfObject.add(APIConstants.REST_API_SCOPES_CONFIG, jsonElement);\n-        try {\n-            ObjectMapper mapper = new ObjectMapper();\n-            String formattedTenantConf = mapper.writerWithDefaultPrettyPrinter()\n-                    .writeValueAsString(existingTenantConfObject.toString());\n-            APIUtil.updateTenantConf(existingTenantConfObject.toString(), tenantDomain);\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Finalized tenant-conf.json: \" + formattedTenantConf);\n-            }\n-        } catch (JsonProcessingException e) {\n-            throw new APIManagementException(\"Error while formatting tenant-conf.json of tenant\", e);\n+        // Adding the merged RESTAPIScopes config to the tenant-conf\n+        existingTenantConfObject.add(APIConstants.REST_API_SCOPES_CONFIG, mergedTenantConfScopes);\n+\n+        // Prettify the tenant-conf\n+        Gson gson = new GsonBuilder().setPrettyPrinting().create();\n+        String formattedTenantConf = gson.toJson(existingTenantConfObject);\n+\n+        APIUtil.updateTenantConf(formattedTenantConf, tenantDomain);\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Finalized tenant-conf.json: \" + formattedTenantConf);\n         }\n         // Invalidate Cache\n         Caching.getCacheManager(APIConstants.API_MANAGER_CACHE_MANAGER)\n                 .getCache(APIConstants.REST_API_SCOPE_CACHE)\n                 .put(tenantDomain, null);\n     }\n \n+    /**\n+     * Merge the existing and new scope-role mappings (RESTAPIScopes config) in the tenant-conf\n+     *\n+     * @param existingTenantConfScopes Existing (old) scope-role mappings\n+     * @param newTenantConfScopes      Modified (new) scope-role mappings\n+     */\n+    public static JsonObject mergeTenantConfScopes(JsonElement existingTenantConfScopes, JsonElement newTenantConfScopes) {\n+        JsonArray existingTenantConfScopesArray = (JsonArray) existingTenantConfScopes.getAsJsonObject().\n+                get(APIConstants.REST_API_SCOPE);\n+        JsonArray newTenantConfScopesArray = (JsonArray) newTenantConfScopes.getAsJsonObject().\n+                get(APIConstants.REST_API_SCOPE);\n+        JsonArray mergedTenantConfScopesArray = newTenantConfScopesArray;\n+\n+        // Iterating the existing (old) scope-role mappings\n+        for (int i = 0; i < existingTenantConfScopesArray.size(); i++) {\n+            JsonObject existingScopeRoleMapping = existingTenantConfScopesArray.get(i).getAsJsonObject();\n+            String existingScopeName = existingScopeRoleMapping.get(APIConstants.REST_API_SCOPE_NAME).getAsString();\n+            Boolean isExist = false;\n+            // Iterating the modified (new) scope-role mappings and add the old scope mappings\n+            // if those are not present in the list (merging)\n+            for (int j = 0; j < newTenantConfScopesArray.size(); j++) {\n+                JsonObject newScopeRoleMapping = newTenantConfScopesArray.get(j).getAsJsonObject();\n+                String newScopeName = newScopeRoleMapping.get(APIConstants.REST_API_SCOPE_NAME).getAsString();\n+                if (StringUtils.equals(existingScopeName, newScopeName)) {\n+                    // If a particular mapping is already there, skip it\n+                    isExist = true;\n+                    break;\n+                }\n+            }\n+            // If the particular old mapping does not exist in the new list, add it to the new list\n+            if (!isExist) {\n+                mergedTenantConfScopesArray.add(existingTenantConfScopesArray.get(i));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA2NjU2MA=="}, "originalCommit": {"oid": "2f1f0eeacc5ae60edf6305664cd3dd34f60af94d"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3015, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}