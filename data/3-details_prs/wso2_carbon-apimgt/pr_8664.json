{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NzY4ODQ1", "number": 8664, "title": "Multiple keymanager support UI", "bodyText": "", "createdAt": "2020-06-04T11:24:57Z", "url": "https://github.com/wso2/carbon-apimgt/pull/8664", "merged": true, "mergeCommit": {"oid": "c864e48ad4037bac57f6aad7fa2d30c427a6d713"}, "closed": true, "closedAt": "2020-06-08T16:44:09Z", "author": {"login": "tharindu1st"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcn8piQABqjM0MDY0Njc3OTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpTQI0AH2gAyNDI3NzY4ODQ1OjUzM2RlOGU4NjcyYjU5NTI4MWM5Y2YzOTI0ZWE0N2MwNDRhMDJmNjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "193482c9d4e0345d8c7248108967a5aa75f6e3a0", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/193482c9d4e0345d8c7248108967a5aa75f6e3a0", "committedDate": "2020-06-04T11:07:06Z", "message": "add key manager creation ui"}, "afterCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c", "committedDate": "2020-06-04T11:48:32Z", "message": "add key manager creation ui"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MzY1NjU2", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#pullrequestreview-424365656", "createdAt": "2020-06-04T11:54:34Z", "commit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMTo1NDozNFrOGfCQuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMjoxMTowOFrOGfCyhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE5NjA4OA==", "bodyText": "Typo : Throttling", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435196088", "createdAt": "2020-06-04T11:54:34Z", "author": {"login": "kavishkafernando"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/ClaimMapping.jsx", "diffHunk": "@@ -0,0 +1,193 @@\n+import React, { useState } from 'react';\n+import TextField from '@material-ui/core/TextField';\n+import { makeStyles } from '@material-ui/core/styles';\n+import Table from '@material-ui/core/Table';\n+import TableBody from '@material-ui/core/TableBody';\n+import TableCell from '@material-ui/core/TableCell';\n+import TableContainer from '@material-ui/core/TableContainer';\n+import TableHead from '@material-ui/core/TableHead';\n+import TableRow from '@material-ui/core/TableRow';\n+import Paper from '@material-ui/core/Paper';\n+import Box from '@material-ui/core/Box';\n+import Grid from '@material-ui/core/Grid';\n+import IconButton from '@material-ui/core/IconButton';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import AddCircleIcon from '@material-ui/icons/AddCircle';\n+import ClearIcon from '@material-ui/icons/Clear';\n+import Alert from 'AppComponents/Shared/Alert';\n+\n+const useStyles = makeStyles((theme) => ({\n+    mandatoryStar: {\n+        color: theme.palette.error.main,\n+        marginLeft: theme.spacing(0.1),\n+    },\n+}));\n+\n+/**\n+ * Trottling Policies dropdown selector used in minimized API Create form", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE5NzA4Ng==", "bodyText": "shall we deconstruct e.target as follows,\nconst { id, value } = e.target", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435197086", "createdAt": "2020-06-04T11:56:32Z", "author": {"login": "kavishkafernando"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/ClaimMapping.jsx", "diffHunk": "@@ -0,0 +1,193 @@\n+import React, { useState } from 'react';\n+import TextField from '@material-ui/core/TextField';\n+import { makeStyles } from '@material-ui/core/styles';\n+import Table from '@material-ui/core/Table';\n+import TableBody from '@material-ui/core/TableBody';\n+import TableCell from '@material-ui/core/TableCell';\n+import TableContainer from '@material-ui/core/TableContainer';\n+import TableHead from '@material-ui/core/TableHead';\n+import TableRow from '@material-ui/core/TableRow';\n+import Paper from '@material-ui/core/Paper';\n+import Box from '@material-ui/core/Box';\n+import Grid from '@material-ui/core/Grid';\n+import IconButton from '@material-ui/core/IconButton';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import AddCircleIcon from '@material-ui/icons/AddCircle';\n+import ClearIcon from '@material-ui/icons/Clear';\n+import Alert from 'AppComponents/Shared/Alert';\n+\n+const useStyles = makeStyles((theme) => ({\n+    mandatoryStar: {\n+        color: theme.palette.error.main,\n+        marginLeft: theme.spacing(0.1),\n+    },\n+}));\n+\n+/**\n+ * Trottling Policies dropdown selector used in minimized API Create form\n+ * @export\n+ * @param {*} props\n+ * @returns {React.Component}\n+ */\n+export default function ClaimMappings(props) {\n+    const classes = useStyles();\n+    const [newRemoteClaim, setRemoteClaim] = useState('');\n+    const [newLocalClaim, setLocalClaim] = useState('');\n+    const { claimMappings, setClaimMapping } = props;\n+    const [validationError, setValidationError] = useState([]);\n+\n+    const onChange = (e) => {\n+        if (e.target.id === 'remoteClaim') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE5NzM1MQ==", "bodyText": "Type: 'Claim is empty'", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435197351", "createdAt": "2020-06-04T11:57:05Z", "author": {"login": "kavishkafernando"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/ClaimMapping.jsx", "diffHunk": "@@ -0,0 +1,193 @@\n+import React, { useState } from 'react';\n+import TextField from '@material-ui/core/TextField';\n+import { makeStyles } from '@material-ui/core/styles';\n+import Table from '@material-ui/core/Table';\n+import TableBody from '@material-ui/core/TableBody';\n+import TableCell from '@material-ui/core/TableCell';\n+import TableContainer from '@material-ui/core/TableContainer';\n+import TableHead from '@material-ui/core/TableHead';\n+import TableRow from '@material-ui/core/TableRow';\n+import Paper from '@material-ui/core/Paper';\n+import Box from '@material-ui/core/Box';\n+import Grid from '@material-ui/core/Grid';\n+import IconButton from '@material-ui/core/IconButton';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import AddCircleIcon from '@material-ui/icons/AddCircle';\n+import ClearIcon from '@material-ui/icons/Clear';\n+import Alert from 'AppComponents/Shared/Alert';\n+\n+const useStyles = makeStyles((theme) => ({\n+    mandatoryStar: {\n+        color: theme.palette.error.main,\n+        marginLeft: theme.spacing(0.1),\n+    },\n+}));\n+\n+/**\n+ * Trottling Policies dropdown selector used in minimized API Create form\n+ * @export\n+ * @param {*} props\n+ * @returns {React.Component}\n+ */\n+export default function ClaimMappings(props) {\n+    const classes = useStyles();\n+    const [newRemoteClaim, setRemoteClaim] = useState('');\n+    const [newLocalClaim, setLocalClaim] = useState('');\n+    const { claimMappings, setClaimMapping } = props;\n+    const [validationError, setValidationError] = useState([]);\n+\n+    const onChange = (e) => {\n+        if (e.target.id === 'remoteClaim') {\n+            setRemoteClaim(e.target.value);\n+        } else if (e.target.id === 'localClaim') {\n+            setLocalClaim(e.target.value);\n+        }\n+    };\n+    const validate = (fieldName, value) => {\n+        let error = '';\n+        if (value === null || value === '') {\n+            error = 'Calim is Empty';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE5Nzc4NQ==", "bodyText": "shall we add i18n here?", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435197785", "createdAt": "2020-06-04T11:57:57Z", "author": {"login": "kavishkafernando"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/ClaimMapping.jsx", "diffHunk": "@@ -0,0 +1,193 @@\n+import React, { useState } from 'react';\n+import TextField from '@material-ui/core/TextField';\n+import { makeStyles } from '@material-ui/core/styles';\n+import Table from '@material-ui/core/Table';\n+import TableBody from '@material-ui/core/TableBody';\n+import TableCell from '@material-ui/core/TableCell';\n+import TableContainer from '@material-ui/core/TableContainer';\n+import TableHead from '@material-ui/core/TableHead';\n+import TableRow from '@material-ui/core/TableRow';\n+import Paper from '@material-ui/core/Paper';\n+import Box from '@material-ui/core/Box';\n+import Grid from '@material-ui/core/Grid';\n+import IconButton from '@material-ui/core/IconButton';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import AddCircleIcon from '@material-ui/icons/AddCircle';\n+import ClearIcon from '@material-ui/icons/Clear';\n+import Alert from 'AppComponents/Shared/Alert';\n+\n+const useStyles = makeStyles((theme) => ({\n+    mandatoryStar: {\n+        color: theme.palette.error.main,\n+        marginLeft: theme.spacing(0.1),\n+    },\n+}));\n+\n+/**\n+ * Trottling Policies dropdown selector used in minimized API Create form\n+ * @export\n+ * @param {*} props\n+ * @returns {React.Component}\n+ */\n+export default function ClaimMappings(props) {\n+    const classes = useStyles();\n+    const [newRemoteClaim, setRemoteClaim] = useState('');\n+    const [newLocalClaim, setLocalClaim] = useState('');\n+    const { claimMappings, setClaimMapping } = props;\n+    const [validationError, setValidationError] = useState([]);\n+\n+    const onChange = (e) => {\n+        if (e.target.id === 'remoteClaim') {\n+            setRemoteClaim(e.target.value);\n+        } else if (e.target.id === 'localClaim') {\n+            setLocalClaim(e.target.value);\n+        }\n+    };\n+    const validate = (fieldName, value) => {\n+        let error = '';\n+        if (value === null || value === '') {\n+            error = 'Calim is Empty';\n+        } else {\n+            error = '';\n+        }\n+        setValidationError({ fieldName: error });\n+        return error;\n+    };\n+\n+    const clearValues = () => {\n+        setLocalClaim(null);\n+        setRemoteClaim(null);\n+    };\n+    const handleAddToList = () => {\n+        const remoteClaimError = validate('remoteClaim', newRemoteClaim);\n+        const localClaimError = validate('localClaim', newLocalClaim);\n+        if (localClaimError !== '' || remoteClaimError !== '') {\n+            Alert.error(remoteClaimError);\n+            clearValues();\n+            return false;\n+        } else {\n+            let exist = false;\n+            claimMappings.map(({ remoteClaim, localClaim }) => {\n+                if (remoteClaim === newRemoteClaim) {\n+                    Alert.error('Claim Mapping Already Exist with local claim ' + localClaim);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE5OTQ4OA==", "bodyText": "Shall we add i18n to all static values?", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435199488", "createdAt": "2020-06-04T12:01:05Z", "author": {"login": "kavishkafernando"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/ClaimMapping.jsx", "diffHunk": "@@ -0,0 +1,193 @@\n+import React, { useState } from 'react';\n+import TextField from '@material-ui/core/TextField';\n+import { makeStyles } from '@material-ui/core/styles';\n+import Table from '@material-ui/core/Table';\n+import TableBody from '@material-ui/core/TableBody';\n+import TableCell from '@material-ui/core/TableCell';\n+import TableContainer from '@material-ui/core/TableContainer';\n+import TableHead from '@material-ui/core/TableHead';\n+import TableRow from '@material-ui/core/TableRow';\n+import Paper from '@material-ui/core/Paper';\n+import Box from '@material-ui/core/Box';\n+import Grid from '@material-ui/core/Grid';\n+import IconButton from '@material-ui/core/IconButton';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import AddCircleIcon from '@material-ui/icons/AddCircle';\n+import ClearIcon from '@material-ui/icons/Clear';\n+import Alert from 'AppComponents/Shared/Alert';\n+\n+const useStyles = makeStyles((theme) => ({\n+    mandatoryStar: {\n+        color: theme.palette.error.main,\n+        marginLeft: theme.spacing(0.1),\n+    },\n+}));\n+\n+/**\n+ * Trottling Policies dropdown selector used in minimized API Create form\n+ * @export\n+ * @param {*} props\n+ * @returns {React.Component}\n+ */\n+export default function ClaimMappings(props) {\n+    const classes = useStyles();\n+    const [newRemoteClaim, setRemoteClaim] = useState('');\n+    const [newLocalClaim, setLocalClaim] = useState('');\n+    const { claimMappings, setClaimMapping } = props;\n+    const [validationError, setValidationError] = useState([]);\n+\n+    const onChange = (e) => {\n+        if (e.target.id === 'remoteClaim') {\n+            setRemoteClaim(e.target.value);\n+        } else if (e.target.id === 'localClaim') {\n+            setLocalClaim(e.target.value);\n+        }\n+    };\n+    const validate = (fieldName, value) => {\n+        let error = '';\n+        if (value === null || value === '') {\n+            error = 'Calim is Empty';\n+        } else {\n+            error = '';\n+        }\n+        setValidationError({ fieldName: error });\n+        return error;\n+    };\n+\n+    const clearValues = () => {\n+        setLocalClaim(null);\n+        setRemoteClaim(null);\n+    };\n+    const handleAddToList = () => {\n+        const remoteClaimError = validate('remoteClaim', newRemoteClaim);\n+        const localClaimError = validate('localClaim', newLocalClaim);\n+        if (localClaimError !== '' || remoteClaimError !== '') {\n+            Alert.error(remoteClaimError);\n+            clearValues();\n+            return false;\n+        } else {\n+            let exist = false;\n+            claimMappings.map(({ remoteClaim, localClaim }) => {\n+                if (remoteClaim === newRemoteClaim) {\n+                    Alert.error('Claim Mapping Already Exist with local claim ' + localClaim);\n+                    exist = true;\n+                }\n+                return false;\n+            });\n+            if (!exist) {\n+                const claimMapping = {\n+                    remoteClaim: newRemoteClaim,\n+                    localClaim: newLocalClaim,\n+                };\n+                claimMappings.push(claimMapping);\n+                setClaimMapping(claimMappings);\n+                clearValues();\n+            }\n+            return true;\n+        }\n+    };\n+    const onDelete = (claimKey) => {\n+        const newMapping = claimMappings.filter(({ remoteClaim }) => remoteClaim !== claimKey);\n+        setClaimMapping(newMapping);\n+    };\n+    return (\n+        <Box mb={3}>\n+            <TableContainer component={Paper}>\n+                <Table className={classes.table} aria-label='simple table'>\n+                    <TableHead>\n+                        <TableRow>\n+                            <TableCell>Remote Claim</TableCell>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE5OTk1NA==", "bodyText": "Add i18n for Textfield labels as well", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435199954", "createdAt": "2020-06-04T12:01:55Z", "author": {"login": "kavishkafernando"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/ClaimMapping.jsx", "diffHunk": "@@ -0,0 +1,193 @@\n+import React, { useState } from 'react';\n+import TextField from '@material-ui/core/TextField';\n+import { makeStyles } from '@material-ui/core/styles';\n+import Table from '@material-ui/core/Table';\n+import TableBody from '@material-ui/core/TableBody';\n+import TableCell from '@material-ui/core/TableCell';\n+import TableContainer from '@material-ui/core/TableContainer';\n+import TableHead from '@material-ui/core/TableHead';\n+import TableRow from '@material-ui/core/TableRow';\n+import Paper from '@material-ui/core/Paper';\n+import Box from '@material-ui/core/Box';\n+import Grid from '@material-ui/core/Grid';\n+import IconButton from '@material-ui/core/IconButton';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import AddCircleIcon from '@material-ui/icons/AddCircle';\n+import ClearIcon from '@material-ui/icons/Clear';\n+import Alert from 'AppComponents/Shared/Alert';\n+\n+const useStyles = makeStyles((theme) => ({\n+    mandatoryStar: {\n+        color: theme.palette.error.main,\n+        marginLeft: theme.spacing(0.1),\n+    },\n+}));\n+\n+/**\n+ * Trottling Policies dropdown selector used in minimized API Create form\n+ * @export\n+ * @param {*} props\n+ * @returns {React.Component}\n+ */\n+export default function ClaimMappings(props) {\n+    const classes = useStyles();\n+    const [newRemoteClaim, setRemoteClaim] = useState('');\n+    const [newLocalClaim, setLocalClaim] = useState('');\n+    const { claimMappings, setClaimMapping } = props;\n+    const [validationError, setValidationError] = useState([]);\n+\n+    const onChange = (e) => {\n+        if (e.target.id === 'remoteClaim') {\n+            setRemoteClaim(e.target.value);\n+        } else if (e.target.id === 'localClaim') {\n+            setLocalClaim(e.target.value);\n+        }\n+    };\n+    const validate = (fieldName, value) => {\n+        let error = '';\n+        if (value === null || value === '') {\n+            error = 'Calim is Empty';\n+        } else {\n+            error = '';\n+        }\n+        setValidationError({ fieldName: error });\n+        return error;\n+    };\n+\n+    const clearValues = () => {\n+        setLocalClaim(null);\n+        setRemoteClaim(null);\n+    };\n+    const handleAddToList = () => {\n+        const remoteClaimError = validate('remoteClaim', newRemoteClaim);\n+        const localClaimError = validate('localClaim', newLocalClaim);\n+        if (localClaimError !== '' || remoteClaimError !== '') {\n+            Alert.error(remoteClaimError);\n+            clearValues();\n+            return false;\n+        } else {\n+            let exist = false;\n+            claimMappings.map(({ remoteClaim, localClaim }) => {\n+                if (remoteClaim === newRemoteClaim) {\n+                    Alert.error('Claim Mapping Already Exist with local claim ' + localClaim);\n+                    exist = true;\n+                }\n+                return false;\n+            });\n+            if (!exist) {\n+                const claimMapping = {\n+                    remoteClaim: newRemoteClaim,\n+                    localClaim: newLocalClaim,\n+                };\n+                claimMappings.push(claimMapping);\n+                setClaimMapping(claimMappings);\n+                clearValues();\n+            }\n+            return true;\n+        }\n+    };\n+    const onDelete = (claimKey) => {\n+        const newMapping = claimMappings.filter(({ remoteClaim }) => remoteClaim !== claimKey);\n+        setClaimMapping(newMapping);\n+    };\n+    return (\n+        <Box mb={3}>\n+            <TableContainer component={Paper}>\n+                <Table className={classes.table} aria-label='simple table'>\n+                    <TableHead>\n+                        <TableRow>\n+                            <TableCell>Remote Claim</TableCell>\n+                            <TableCell align='right'>Local Claim</TableCell>\n+                            <TableCell align='right'>Action</TableCell>\n+                        </TableRow>\n+                    </TableHead>\n+                    <TableBody>\n+                        <TableRow key='Add new'>\n+                            <TableCell component='th' scope='row'>\n+                                <TextField\n+                                    id='remoteClaim'\n+                                    label='Remote Claim'\n+                                    variant='outlined'\n+                                    onChange={onChange}\n+                                    error={validationError.remoteClaim}\n+                                    helperText={validationError.remoteClaim && validationError.remoteClaim}\n+                                    value={newRemoteClaim === null ? '' : newRemoteClaim}\n+                                />\n+                            </TableCell>\n+                            <TableCell align='right'>\n+                                <TextField\n+                                    id='localClaim'\n+                                    label='Local Claim'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwMDQyNg==", "bodyText": "add i18n", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435200426", "createdAt": "2020-06-04T12:02:54Z", "author": {"login": "kavishkafernando"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/ClaimMapping.jsx", "diffHunk": "@@ -0,0 +1,193 @@\n+import React, { useState } from 'react';\n+import TextField from '@material-ui/core/TextField';\n+import { makeStyles } from '@material-ui/core/styles';\n+import Table from '@material-ui/core/Table';\n+import TableBody from '@material-ui/core/TableBody';\n+import TableCell from '@material-ui/core/TableCell';\n+import TableContainer from '@material-ui/core/TableContainer';\n+import TableHead from '@material-ui/core/TableHead';\n+import TableRow from '@material-ui/core/TableRow';\n+import Paper from '@material-ui/core/Paper';\n+import Box from '@material-ui/core/Box';\n+import Grid from '@material-ui/core/Grid';\n+import IconButton from '@material-ui/core/IconButton';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import AddCircleIcon from '@material-ui/icons/AddCircle';\n+import ClearIcon from '@material-ui/icons/Clear';\n+import Alert from 'AppComponents/Shared/Alert';\n+\n+const useStyles = makeStyles((theme) => ({\n+    mandatoryStar: {\n+        color: theme.palette.error.main,\n+        marginLeft: theme.spacing(0.1),\n+    },\n+}));\n+\n+/**\n+ * Trottling Policies dropdown selector used in minimized API Create form\n+ * @export\n+ * @param {*} props\n+ * @returns {React.Component}\n+ */\n+export default function ClaimMappings(props) {\n+    const classes = useStyles();\n+    const [newRemoteClaim, setRemoteClaim] = useState('');\n+    const [newLocalClaim, setLocalClaim] = useState('');\n+    const { claimMappings, setClaimMapping } = props;\n+    const [validationError, setValidationError] = useState([]);\n+\n+    const onChange = (e) => {\n+        if (e.target.id === 'remoteClaim') {\n+            setRemoteClaim(e.target.value);\n+        } else if (e.target.id === 'localClaim') {\n+            setLocalClaim(e.target.value);\n+        }\n+    };\n+    const validate = (fieldName, value) => {\n+        let error = '';\n+        if (value === null || value === '') {\n+            error = 'Calim is Empty';\n+        } else {\n+            error = '';\n+        }\n+        setValidationError({ fieldName: error });\n+        return error;\n+    };\n+\n+    const clearValues = () => {\n+        setLocalClaim(null);\n+        setRemoteClaim(null);\n+    };\n+    const handleAddToList = () => {\n+        const remoteClaimError = validate('remoteClaim', newRemoteClaim);\n+        const localClaimError = validate('localClaim', newLocalClaim);\n+        if (localClaimError !== '' || remoteClaimError !== '') {\n+            Alert.error(remoteClaimError);\n+            clearValues();\n+            return false;\n+        } else {\n+            let exist = false;\n+            claimMappings.map(({ remoteClaim, localClaim }) => {\n+                if (remoteClaim === newRemoteClaim) {\n+                    Alert.error('Claim Mapping Already Exist with local claim ' + localClaim);\n+                    exist = true;\n+                }\n+                return false;\n+            });\n+            if (!exist) {\n+                const claimMapping = {\n+                    remoteClaim: newRemoteClaim,\n+                    localClaim: newLocalClaim,\n+                };\n+                claimMappings.push(claimMapping);\n+                setClaimMapping(claimMappings);\n+                clearValues();\n+            }\n+            return true;\n+        }\n+    };\n+    const onDelete = (claimKey) => {\n+        const newMapping = claimMappings.filter(({ remoteClaim }) => remoteClaim !== claimKey);\n+        setClaimMapping(newMapping);\n+    };\n+    return (\n+        <Box mb={3}>\n+            <TableContainer component={Paper}>\n+                <Table className={classes.table} aria-label='simple table'>\n+                    <TableHead>\n+                        <TableRow>\n+                            <TableCell>Remote Claim</TableCell>\n+                            <TableCell align='right'>Local Claim</TableCell>\n+                            <TableCell align='right'>Action</TableCell>\n+                        </TableRow>\n+                    </TableHead>\n+                    <TableBody>\n+                        <TableRow key='Add new'>\n+                            <TableCell component='th' scope='row'>\n+                                <TextField\n+                                    id='remoteClaim'\n+                                    label='Remote Claim'\n+                                    variant='outlined'\n+                                    onChange={onChange}\n+                                    error={validationError.remoteClaim}\n+                                    helperText={validationError.remoteClaim && validationError.remoteClaim}\n+                                    value={newRemoteClaim === null ? '' : newRemoteClaim}\n+                                />\n+                            </TableCell>\n+                            <TableCell align='right'>\n+                                <TextField\n+                                    id='localClaim'\n+                                    label='Local Claim'\n+                                    value={newLocalClaim === null ? '' : newLocalClaim}\n+                                    onChange={onChange}\n+                                    error={validationError.localClaim}\n+                                    helperText={validationError.localClaim && validationError.localClaim}\n+                                    variant='outlined'\n+                                />\n+                            </TableCell>\n+                            <TableCell>\n+                                <Grid>\n+                                    <Grid item>\n+                                        <IconButton\n+                                            id='delete'\n+                                            aria-label='Remove'\n+                                            onClick={handleAddToList}\n+                                        >\n+                                            <AddCircleIcon />\n+                                        </IconButton>\n+                                    </Grid>\n+                                    <Grid item>\n+                                        <IconButton\n+                                            id='delete'\n+                                            aria-label='Clear'\n+                                            onClick={clearValues}\n+                                        >\n+                                            <ClearIcon />\n+                                        </IconButton>\n+                                    </Grid>\n+                                </Grid>\n+                            </TableCell>\n+                        </TableRow>\n+                        {claimMappings.map(({ remoteClaim, localClaim }) => (\n+                            <TableRow key={localClaim}>\n+                                <TableCell component='th' scope='row'>\n+                                    <TextField\n+                                        id={remoteClaim}\n+                                        defaultValue={remoteClaim}\n+                                        label='Remote Claim'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 157}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwMDcyNg==", "bodyText": "Add i18n", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435200726", "createdAt": "2020-06-04T12:03:26Z", "author": {"login": "kavishkafernando"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/ClaimMapping.jsx", "diffHunk": "@@ -0,0 +1,193 @@\n+import React, { useState } from 'react';\n+import TextField from '@material-ui/core/TextField';\n+import { makeStyles } from '@material-ui/core/styles';\n+import Table from '@material-ui/core/Table';\n+import TableBody from '@material-ui/core/TableBody';\n+import TableCell from '@material-ui/core/TableCell';\n+import TableContainer from '@material-ui/core/TableContainer';\n+import TableHead from '@material-ui/core/TableHead';\n+import TableRow from '@material-ui/core/TableRow';\n+import Paper from '@material-ui/core/Paper';\n+import Box from '@material-ui/core/Box';\n+import Grid from '@material-ui/core/Grid';\n+import IconButton from '@material-ui/core/IconButton';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import AddCircleIcon from '@material-ui/icons/AddCircle';\n+import ClearIcon from '@material-ui/icons/Clear';\n+import Alert from 'AppComponents/Shared/Alert';\n+\n+const useStyles = makeStyles((theme) => ({\n+    mandatoryStar: {\n+        color: theme.palette.error.main,\n+        marginLeft: theme.spacing(0.1),\n+    },\n+}));\n+\n+/**\n+ * Trottling Policies dropdown selector used in minimized API Create form\n+ * @export\n+ * @param {*} props\n+ * @returns {React.Component}\n+ */\n+export default function ClaimMappings(props) {\n+    const classes = useStyles();\n+    const [newRemoteClaim, setRemoteClaim] = useState('');\n+    const [newLocalClaim, setLocalClaim] = useState('');\n+    const { claimMappings, setClaimMapping } = props;\n+    const [validationError, setValidationError] = useState([]);\n+\n+    const onChange = (e) => {\n+        if (e.target.id === 'remoteClaim') {\n+            setRemoteClaim(e.target.value);\n+        } else if (e.target.id === 'localClaim') {\n+            setLocalClaim(e.target.value);\n+        }\n+    };\n+    const validate = (fieldName, value) => {\n+        let error = '';\n+        if (value === null || value === '') {\n+            error = 'Calim is Empty';\n+        } else {\n+            error = '';\n+        }\n+        setValidationError({ fieldName: error });\n+        return error;\n+    };\n+\n+    const clearValues = () => {\n+        setLocalClaim(null);\n+        setRemoteClaim(null);\n+    };\n+    const handleAddToList = () => {\n+        const remoteClaimError = validate('remoteClaim', newRemoteClaim);\n+        const localClaimError = validate('localClaim', newLocalClaim);\n+        if (localClaimError !== '' || remoteClaimError !== '') {\n+            Alert.error(remoteClaimError);\n+            clearValues();\n+            return false;\n+        } else {\n+            let exist = false;\n+            claimMappings.map(({ remoteClaim, localClaim }) => {\n+                if (remoteClaim === newRemoteClaim) {\n+                    Alert.error('Claim Mapping Already Exist with local claim ' + localClaim);\n+                    exist = true;\n+                }\n+                return false;\n+            });\n+            if (!exist) {\n+                const claimMapping = {\n+                    remoteClaim: newRemoteClaim,\n+                    localClaim: newLocalClaim,\n+                };\n+                claimMappings.push(claimMapping);\n+                setClaimMapping(claimMappings);\n+                clearValues();\n+            }\n+            return true;\n+        }\n+    };\n+    const onDelete = (claimKey) => {\n+        const newMapping = claimMappings.filter(({ remoteClaim }) => remoteClaim !== claimKey);\n+        setClaimMapping(newMapping);\n+    };\n+    return (\n+        <Box mb={3}>\n+            <TableContainer component={Paper}>\n+                <Table className={classes.table} aria-label='simple table'>\n+                    <TableHead>\n+                        <TableRow>\n+                            <TableCell>Remote Claim</TableCell>\n+                            <TableCell align='right'>Local Claim</TableCell>\n+                            <TableCell align='right'>Action</TableCell>\n+                        </TableRow>\n+                    </TableHead>\n+                    <TableBody>\n+                        <TableRow key='Add new'>\n+                            <TableCell component='th' scope='row'>\n+                                <TextField\n+                                    id='remoteClaim'\n+                                    label='Remote Claim'\n+                                    variant='outlined'\n+                                    onChange={onChange}\n+                                    error={validationError.remoteClaim}\n+                                    helperText={validationError.remoteClaim && validationError.remoteClaim}\n+                                    value={newRemoteClaim === null ? '' : newRemoteClaim}\n+                                />\n+                            </TableCell>\n+                            <TableCell align='right'>\n+                                <TextField\n+                                    id='localClaim'\n+                                    label='Local Claim'\n+                                    value={newLocalClaim === null ? '' : newLocalClaim}\n+                                    onChange={onChange}\n+                                    error={validationError.localClaim}\n+                                    helperText={validationError.localClaim && validationError.localClaim}\n+                                    variant='outlined'\n+                                />\n+                            </TableCell>\n+                            <TableCell>\n+                                <Grid>\n+                                    <Grid item>\n+                                        <IconButton\n+                                            id='delete'\n+                                            aria-label='Remove'\n+                                            onClick={handleAddToList}\n+                                        >\n+                                            <AddCircleIcon />\n+                                        </IconButton>\n+                                    </Grid>\n+                                    <Grid item>\n+                                        <IconButton\n+                                            id='delete'\n+                                            aria-label='Clear'\n+                                            onClick={clearValues}\n+                                        >\n+                                            <ClearIcon />\n+                                        </IconButton>\n+                                    </Grid>\n+                                </Grid>\n+                            </TableCell>\n+                        </TableRow>\n+                        {claimMappings.map(({ remoteClaim, localClaim }) => (\n+                            <TableRow key={localClaim}>\n+                                <TableCell component='th' scope='row'>\n+                                    <TextField\n+                                        id={remoteClaim}\n+                                        defaultValue={remoteClaim}\n+                                        label='Remote Claim'\n+                                        variant='outlined'\n+                                        disabled\n+                                    />\n+                                </TableCell>\n+                                <TableCell align='right'>\n+                                    <TextField\n+                                        id={localClaim}\n+                                        defaultValue={localClaim}\n+                                        label='Local Claim'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 166}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwMTI5Nw==", "bodyText": "Typoe : Throttling", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435201297", "createdAt": "2020-06-04T12:04:38Z", "author": {"login": "kavishkafernando"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/KeyValidation.jsx", "diffHunk": "@@ -0,0 +1,274 @@\n+import React, { useState } from 'react';\n+import TextField from '@material-ui/core/TextField';\n+import { makeStyles } from '@material-ui/core/styles';\n+import Box from '@material-ui/core/Box';\n+import FormControl from '@material-ui/core/FormControl';\n+import ExpansionPanel from '@material-ui/core/ExpansionPanel';\n+import ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n+import Typography from '@material-ui/core/Typography';\n+import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n+import Select from '@material-ui/core/Select';\n+import MenuItem from '@material-ui/core/MenuItem';\n+import TableContainer from '@material-ui/core/TableContainer';\n+import TableHead from '@material-ui/core/TableHead';\n+import TableRow from '@material-ui/core/TableRow';\n+import Paper from '@material-ui/core/Paper';\n+import Table from '@material-ui/core/Table';\n+import TableCell from '@material-ui/core/TableCell';\n+import TableBody from '@material-ui/core/TableBody';\n+import Grid from '@material-ui/core/Grid';\n+import IconButton from '@material-ui/core/IconButton';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import AddCircleIcon from '@material-ui/icons/AddCircle';\n+import ClearIcon from '@material-ui/icons/Clear';\n+import Alert from 'AppComponents/Shared/Alert';\n+\n+const useStyles = makeStyles((theme) => ({\n+    mandatoryStar: {\n+        color: theme.palette.error.main,\n+        marginLeft: theme.spacing(0.1),\n+    },\n+}));\n+\n+/**\n+ * Trottling Policies dropdown selector used in minimized API Create form", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwMjA4Mw==", "bodyText": "we can deconstruct e.target.name as well", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435202083", "createdAt": "2020-06-04T12:06:05Z", "author": {"login": "kavishkafernando"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/KeyValidation.jsx", "diffHunk": "@@ -0,0 +1,274 @@\n+import React, { useState } from 'react';\n+import TextField from '@material-ui/core/TextField';\n+import { makeStyles } from '@material-ui/core/styles';\n+import Box from '@material-ui/core/Box';\n+import FormControl from '@material-ui/core/FormControl';\n+import ExpansionPanel from '@material-ui/core/ExpansionPanel';\n+import ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n+import Typography from '@material-ui/core/Typography';\n+import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n+import Select from '@material-ui/core/Select';\n+import MenuItem from '@material-ui/core/MenuItem';\n+import TableContainer from '@material-ui/core/TableContainer';\n+import TableHead from '@material-ui/core/TableHead';\n+import TableRow from '@material-ui/core/TableRow';\n+import Paper from '@material-ui/core/Paper';\n+import Table from '@material-ui/core/Table';\n+import TableCell from '@material-ui/core/TableCell';\n+import TableBody from '@material-ui/core/TableBody';\n+import Grid from '@material-ui/core/Grid';\n+import IconButton from '@material-ui/core/IconButton';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import AddCircleIcon from '@material-ui/icons/AddCircle';\n+import ClearIcon from '@material-ui/icons/Clear';\n+import Alert from 'AppComponents/Shared/Alert';\n+\n+const useStyles = makeStyles((theme) => ({\n+    mandatoryStar: {\n+        color: theme.palette.error.main,\n+        marginLeft: theme.spacing(0.1),\n+    },\n+}));\n+\n+/**\n+ * Trottling Policies dropdown selector used in minimized API Create form\n+ * @export\n+ * @param {*} props\n+ * @returns {React.Component}\n+ */\n+export default function KeyValidation(props) {\n+    const classes = useStyles();\n+\n+    const { tokenValidation, setTokenValidation } = props;\n+    const [, setValidationError] = useState([]);\n+    const [jwtValue, setjwtValue] = useState({});\n+    const validate = (fieldName, value) => {\n+        let error = '';\n+        if (value === '') {\n+            error = 'Calim is Empty';\n+        } else {\n+            error = '';\n+        }\n+        setValidationError({ fieldName: error });\n+        return error;\n+    };\n+    const clearValues = () => {\n+        setjwtValue({ claimKey: '', claimValueRegex: '' });\n+    };\n+    const handleAddToList = () => {\n+        const claimKeyError = validate('claimKey', jwtValue.claimKey);\n+        const claimValueError = validate('claimValueRegex', jwtValue.claimValueRegex);\n+        if (claimKeyError !== '' || claimValueError !== '') {\n+            Alert.error(claimValueError);\n+            return false;\n+        } else {\n+            let exist = false;\n+            if (tokenValidation.value && tokenValidation.value.body) {\n+                Object.entries(tokenValidation.value.body).map(([key, val]) => {\n+                    if (key === jwtValue.claimKey) {\n+                        Alert.error(`Claim Mapping Already Exist with ${key}and Value ${val}`);\n+                        exist = true;\n+                        clearValues();\n+                    }\n+                    return false;\n+                });\n+                if (!exist) {\n+                    tokenValidation.value.body[jwtValue.claimKey] = jwtValue.claimValueRegex;\n+                    setTokenValidation(tokenValidation);\n+                }\n+            } else {\n+                const body = {};\n+                body[jwtValue.claimKey] = jwtValue.claimValueRegex;\n+                tokenValidation.value.body = body;\n+                setTokenValidation(tokenValidation);\n+            }\n+            clearValues();\n+            return true;\n+        }\n+    };\n+    const onChange = (e) => {\n+        const { value } = e.target;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwMjM5OQ==", "bodyText": "validationError? Are we not using this variable but only setting a value?", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435202399", "createdAt": "2020-06-04T12:06:45Z", "author": {"login": "kavishkafernando"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/KeyValidation.jsx", "diffHunk": "@@ -0,0 +1,274 @@\n+import React, { useState } from 'react';\n+import TextField from '@material-ui/core/TextField';\n+import { makeStyles } from '@material-ui/core/styles';\n+import Box from '@material-ui/core/Box';\n+import FormControl from '@material-ui/core/FormControl';\n+import ExpansionPanel from '@material-ui/core/ExpansionPanel';\n+import ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n+import Typography from '@material-ui/core/Typography';\n+import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n+import Select from '@material-ui/core/Select';\n+import MenuItem from '@material-ui/core/MenuItem';\n+import TableContainer from '@material-ui/core/TableContainer';\n+import TableHead from '@material-ui/core/TableHead';\n+import TableRow from '@material-ui/core/TableRow';\n+import Paper from '@material-ui/core/Paper';\n+import Table from '@material-ui/core/Table';\n+import TableCell from '@material-ui/core/TableCell';\n+import TableBody from '@material-ui/core/TableBody';\n+import Grid from '@material-ui/core/Grid';\n+import IconButton from '@material-ui/core/IconButton';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import AddCircleIcon from '@material-ui/icons/AddCircle';\n+import ClearIcon from '@material-ui/icons/Clear';\n+import Alert from 'AppComponents/Shared/Alert';\n+\n+const useStyles = makeStyles((theme) => ({\n+    mandatoryStar: {\n+        color: theme.palette.error.main,\n+        marginLeft: theme.spacing(0.1),\n+    },\n+}));\n+\n+/**\n+ * Trottling Policies dropdown selector used in minimized API Create form\n+ * @export\n+ * @param {*} props\n+ * @returns {React.Component}\n+ */\n+export default function KeyValidation(props) {\n+    const classes = useStyles();\n+\n+    const { tokenValidation, setTokenValidation } = props;\n+    const [, setValidationError] = useState([]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwMjYyNQ==", "bodyText": "Add i18n", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435202625", "createdAt": "2020-06-04T12:07:14Z", "author": {"login": "kavishkafernando"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/KeyValidation.jsx", "diffHunk": "@@ -0,0 +1,274 @@\n+import React, { useState } from 'react';\n+import TextField from '@material-ui/core/TextField';\n+import { makeStyles } from '@material-ui/core/styles';\n+import Box from '@material-ui/core/Box';\n+import FormControl from '@material-ui/core/FormControl';\n+import ExpansionPanel from '@material-ui/core/ExpansionPanel';\n+import ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n+import Typography from '@material-ui/core/Typography';\n+import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n+import Select from '@material-ui/core/Select';\n+import MenuItem from '@material-ui/core/MenuItem';\n+import TableContainer from '@material-ui/core/TableContainer';\n+import TableHead from '@material-ui/core/TableHead';\n+import TableRow from '@material-ui/core/TableRow';\n+import Paper from '@material-ui/core/Paper';\n+import Table from '@material-ui/core/Table';\n+import TableCell from '@material-ui/core/TableCell';\n+import TableBody from '@material-ui/core/TableBody';\n+import Grid from '@material-ui/core/Grid';\n+import IconButton from '@material-ui/core/IconButton';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import AddCircleIcon from '@material-ui/icons/AddCircle';\n+import ClearIcon from '@material-ui/icons/Clear';\n+import Alert from 'AppComponents/Shared/Alert';\n+\n+const useStyles = makeStyles((theme) => ({\n+    mandatoryStar: {\n+        color: theme.palette.error.main,\n+        marginLeft: theme.spacing(0.1),\n+    },\n+}));\n+\n+/**\n+ * Trottling Policies dropdown selector used in minimized API Create form\n+ * @export\n+ * @param {*} props\n+ * @returns {React.Component}\n+ */\n+export default function KeyValidation(props) {\n+    const classes = useStyles();\n+\n+    const { tokenValidation, setTokenValidation } = props;\n+    const [, setValidationError] = useState([]);\n+    const [jwtValue, setjwtValue] = useState({});\n+    const validate = (fieldName, value) => {\n+        let error = '';\n+        if (value === '') {\n+            error = 'Calim is Empty';\n+        } else {\n+            error = '';\n+        }\n+        setValidationError({ fieldName: error });\n+        return error;\n+    };\n+    const clearValues = () => {\n+        setjwtValue({ claimKey: '', claimValueRegex: '' });\n+    };\n+    const handleAddToList = () => {\n+        const claimKeyError = validate('claimKey', jwtValue.claimKey);\n+        const claimValueError = validate('claimValueRegex', jwtValue.claimValueRegex);\n+        if (claimKeyError !== '' || claimValueError !== '') {\n+            Alert.error(claimValueError);\n+            return false;\n+        } else {\n+            let exist = false;\n+            if (tokenValidation.value && tokenValidation.value.body) {\n+                Object.entries(tokenValidation.value.body).map(([key, val]) => {\n+                    if (key === jwtValue.claimKey) {\n+                        Alert.error(`Claim Mapping Already Exist with ${key}and Value ${val}`);\n+                        exist = true;\n+                        clearValues();\n+                    }\n+                    return false;\n+                });\n+                if (!exist) {\n+                    tokenValidation.value.body[jwtValue.claimKey] = jwtValue.claimValueRegex;\n+                    setTokenValidation(tokenValidation);\n+                }\n+            } else {\n+                const body = {};\n+                body[jwtValue.claimKey] = jwtValue.claimValueRegex;\n+                tokenValidation.value.body = body;\n+                setTokenValidation(tokenValidation);\n+            }\n+            clearValues();\n+            return true;\n+        }\n+    };\n+    const onChange = (e) => {\n+        const { value } = e.target;\n+        if (e.target.name === 'type') {\n+            tokenValidation.type = value;\n+        } else if (e.target.name === 'value') {\n+            tokenValidation.value = value;\n+        }\n+        if (e.target.value === 'JWT') {\n+            tokenValidation.value = { body: {} };\n+        }\n+        setTokenValidation(tokenValidation);\n+    };\n+    const onCreateJWTmapping = (e) => {\n+        const newjwt = { ...jwtValue };\n+        newjwt[e.target.name] = e.target.value;\n+        setjwtValue(newjwt);\n+    };\n+    const onDelete = (claimKey) => {\n+        const newMapping = { ...tokenValidation.value };\n+        if (newMapping.body) {\n+            delete newMapping.body[claimKey];\n+        }\n+        setTokenValidation(newMapping);\n+    };\n+    const getValueField = (type) => {\n+        if (type === 'REFERENCE') {\n+            return (\n+                <TextField\n+                    autoFocus\n+                    margin='dense'\n+                    name='value'\n+                    label='Value'\n+                    fullWidth\n+                    required\n+                    variant='outlined'\n+                    value={tokenValidation.value}\n+                    onChange={onChange}\n+                />\n+            );\n+        } else if (type === 'JWT') {\n+            return (\n+                <Box mb={3}>\n+                    <TableContainer component={Paper}>\n+                        <Table className={classes.table} aria-label='simple table'>\n+                            <TableHead>\n+                                <TableRow>\n+                                    <TableCell>Claim Key</TableCell>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwMjk2Nw==", "bodyText": "Lets add 18n to all static Table cells and Text fields", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435202967", "createdAt": "2020-06-04T12:07:53Z", "author": {"login": "kavishkafernando"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/KeyValidation.jsx", "diffHunk": "@@ -0,0 +1,274 @@\n+import React, { useState } from 'react';\n+import TextField from '@material-ui/core/TextField';\n+import { makeStyles } from '@material-ui/core/styles';\n+import Box from '@material-ui/core/Box';\n+import FormControl from '@material-ui/core/FormControl';\n+import ExpansionPanel from '@material-ui/core/ExpansionPanel';\n+import ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n+import Typography from '@material-ui/core/Typography';\n+import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n+import Select from '@material-ui/core/Select';\n+import MenuItem from '@material-ui/core/MenuItem';\n+import TableContainer from '@material-ui/core/TableContainer';\n+import TableHead from '@material-ui/core/TableHead';\n+import TableRow from '@material-ui/core/TableRow';\n+import Paper from '@material-ui/core/Paper';\n+import Table from '@material-ui/core/Table';\n+import TableCell from '@material-ui/core/TableCell';\n+import TableBody from '@material-ui/core/TableBody';\n+import Grid from '@material-ui/core/Grid';\n+import IconButton from '@material-ui/core/IconButton';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import AddCircleIcon from '@material-ui/icons/AddCircle';\n+import ClearIcon from '@material-ui/icons/Clear';\n+import Alert from 'AppComponents/Shared/Alert';\n+\n+const useStyles = makeStyles((theme) => ({\n+    mandatoryStar: {\n+        color: theme.palette.error.main,\n+        marginLeft: theme.spacing(0.1),\n+    },\n+}));\n+\n+/**\n+ * Trottling Policies dropdown selector used in minimized API Create form\n+ * @export\n+ * @param {*} props\n+ * @returns {React.Component}\n+ */\n+export default function KeyValidation(props) {\n+    const classes = useStyles();\n+\n+    const { tokenValidation, setTokenValidation } = props;\n+    const [, setValidationError] = useState([]);\n+    const [jwtValue, setjwtValue] = useState({});\n+    const validate = (fieldName, value) => {\n+        let error = '';\n+        if (value === '') {\n+            error = 'Calim is Empty';\n+        } else {\n+            error = '';\n+        }\n+        setValidationError({ fieldName: error });\n+        return error;\n+    };\n+    const clearValues = () => {\n+        setjwtValue({ claimKey: '', claimValueRegex: '' });\n+    };\n+    const handleAddToList = () => {\n+        const claimKeyError = validate('claimKey', jwtValue.claimKey);\n+        const claimValueError = validate('claimValueRegex', jwtValue.claimValueRegex);\n+        if (claimKeyError !== '' || claimValueError !== '') {\n+            Alert.error(claimValueError);\n+            return false;\n+        } else {\n+            let exist = false;\n+            if (tokenValidation.value && tokenValidation.value.body) {\n+                Object.entries(tokenValidation.value.body).map(([key, val]) => {\n+                    if (key === jwtValue.claimKey) {\n+                        Alert.error(`Claim Mapping Already Exist with ${key}and Value ${val}`);\n+                        exist = true;\n+                        clearValues();\n+                    }\n+                    return false;\n+                });\n+                if (!exist) {\n+                    tokenValidation.value.body[jwtValue.claimKey] = jwtValue.claimValueRegex;\n+                    setTokenValidation(tokenValidation);\n+                }\n+            } else {\n+                const body = {};\n+                body[jwtValue.claimKey] = jwtValue.claimValueRegex;\n+                tokenValidation.value.body = body;\n+                setTokenValidation(tokenValidation);\n+            }\n+            clearValues();\n+            return true;\n+        }\n+    };\n+    const onChange = (e) => {\n+        const { value } = e.target;\n+        if (e.target.name === 'type') {\n+            tokenValidation.type = value;\n+        } else if (e.target.name === 'value') {\n+            tokenValidation.value = value;\n+        }\n+        if (e.target.value === 'JWT') {\n+            tokenValidation.value = { body: {} };\n+        }\n+        setTokenValidation(tokenValidation);\n+    };\n+    const onCreateJWTmapping = (e) => {\n+        const newjwt = { ...jwtValue };\n+        newjwt[e.target.name] = e.target.value;\n+        setjwtValue(newjwt);\n+    };\n+    const onDelete = (claimKey) => {\n+        const newMapping = { ...tokenValidation.value };\n+        if (newMapping.body) {\n+            delete newMapping.body[claimKey];\n+        }\n+        setTokenValidation(newMapping);\n+    };\n+    const getValueField = (type) => {\n+        if (type === 'REFERENCE') {\n+            return (\n+                <TextField\n+                    autoFocus\n+                    margin='dense'\n+                    name='value'\n+                    label='Value'\n+                    fullWidth\n+                    required\n+                    variant='outlined'\n+                    value={tokenValidation.value}\n+                    onChange={onChange}\n+                />\n+            );\n+        } else if (type === 'JWT') {\n+            return (\n+                <Box mb={3}>\n+                    <TableContainer component={Paper}>\n+                        <Table className={classes.table} aria-label='simple table'>\n+                            <TableHead>\n+                                <TableRow>\n+                                    <TableCell>Claim Key</TableCell>\n+                                    <TableCell align='right'>Claim Value Regex</TableCell>\n+                                    <TableCell align='right'>Action</TableCell>\n+                                </TableRow>\n+                            </TableHead>\n+                            <TableBody>\n+                                <TableRow key='Add new'>\n+                                    <TableCell component='th' scope='row'>\n+                                        <TextField\n+                                            name='claimKey'\n+                                            label='Claim Key'\n+                                            variant='outlined'\n+                                            onChange={onCreateJWTmapping}\n+                                            value={jwtValue.claimKey}\n+                                        />\n+                                    </TableCell>\n+                                    <TableCell align='right'>\n+                                        <TextField\n+                                            name='claimValueRegex'\n+                                            label='Claim Value Regex'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 154}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwMzI5OQ==", "bodyText": "Add i18n for these as well", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435203299", "createdAt": "2020-06-04T12:08:32Z", "author": {"login": "kavishkafernando"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/KeyValidation.jsx", "diffHunk": "@@ -0,0 +1,274 @@\n+import React, { useState } from 'react';\n+import TextField from '@material-ui/core/TextField';\n+import { makeStyles } from '@material-ui/core/styles';\n+import Box from '@material-ui/core/Box';\n+import FormControl from '@material-ui/core/FormControl';\n+import ExpansionPanel from '@material-ui/core/ExpansionPanel';\n+import ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n+import Typography from '@material-ui/core/Typography';\n+import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n+import Select from '@material-ui/core/Select';\n+import MenuItem from '@material-ui/core/MenuItem';\n+import TableContainer from '@material-ui/core/TableContainer';\n+import TableHead from '@material-ui/core/TableHead';\n+import TableRow from '@material-ui/core/TableRow';\n+import Paper from '@material-ui/core/Paper';\n+import Table from '@material-ui/core/Table';\n+import TableCell from '@material-ui/core/TableCell';\n+import TableBody from '@material-ui/core/TableBody';\n+import Grid from '@material-ui/core/Grid';\n+import IconButton from '@material-ui/core/IconButton';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import AddCircleIcon from '@material-ui/icons/AddCircle';\n+import ClearIcon from '@material-ui/icons/Clear';\n+import Alert from 'AppComponents/Shared/Alert';\n+\n+const useStyles = makeStyles((theme) => ({\n+    mandatoryStar: {\n+        color: theme.palette.error.main,\n+        marginLeft: theme.spacing(0.1),\n+    },\n+}));\n+\n+/**\n+ * Trottling Policies dropdown selector used in minimized API Create form\n+ * @export\n+ * @param {*} props\n+ * @returns {React.Component}\n+ */\n+export default function KeyValidation(props) {\n+    const classes = useStyles();\n+\n+    const { tokenValidation, setTokenValidation } = props;\n+    const [, setValidationError] = useState([]);\n+    const [jwtValue, setjwtValue] = useState({});\n+    const validate = (fieldName, value) => {\n+        let error = '';\n+        if (value === '') {\n+            error = 'Calim is Empty';\n+        } else {\n+            error = '';\n+        }\n+        setValidationError({ fieldName: error });\n+        return error;\n+    };\n+    const clearValues = () => {\n+        setjwtValue({ claimKey: '', claimValueRegex: '' });\n+    };\n+    const handleAddToList = () => {\n+        const claimKeyError = validate('claimKey', jwtValue.claimKey);\n+        const claimValueError = validate('claimValueRegex', jwtValue.claimValueRegex);\n+        if (claimKeyError !== '' || claimValueError !== '') {\n+            Alert.error(claimValueError);\n+            return false;\n+        } else {\n+            let exist = false;\n+            if (tokenValidation.value && tokenValidation.value.body) {\n+                Object.entries(tokenValidation.value.body).map(([key, val]) => {\n+                    if (key === jwtValue.claimKey) {\n+                        Alert.error(`Claim Mapping Already Exist with ${key}and Value ${val}`);\n+                        exist = true;\n+                        clearValues();\n+                    }\n+                    return false;\n+                });\n+                if (!exist) {\n+                    tokenValidation.value.body[jwtValue.claimKey] = jwtValue.claimValueRegex;\n+                    setTokenValidation(tokenValidation);\n+                }\n+            } else {\n+                const body = {};\n+                body[jwtValue.claimKey] = jwtValue.claimValueRegex;\n+                tokenValidation.value.body = body;\n+                setTokenValidation(tokenValidation);\n+            }\n+            clearValues();\n+            return true;\n+        }\n+    };\n+    const onChange = (e) => {\n+        const { value } = e.target;\n+        if (e.target.name === 'type') {\n+            tokenValidation.type = value;\n+        } else if (e.target.name === 'value') {\n+            tokenValidation.value = value;\n+        }\n+        if (e.target.value === 'JWT') {\n+            tokenValidation.value = { body: {} };\n+        }\n+        setTokenValidation(tokenValidation);\n+    };\n+    const onCreateJWTmapping = (e) => {\n+        const newjwt = { ...jwtValue };\n+        newjwt[e.target.name] = e.target.value;\n+        setjwtValue(newjwt);\n+    };\n+    const onDelete = (claimKey) => {\n+        const newMapping = { ...tokenValidation.value };\n+        if (newMapping.body) {\n+            delete newMapping.body[claimKey];\n+        }\n+        setTokenValidation(newMapping);\n+    };\n+    const getValueField = (type) => {\n+        if (type === 'REFERENCE') {\n+            return (\n+                <TextField\n+                    autoFocus\n+                    margin='dense'\n+                    name='value'\n+                    label='Value'\n+                    fullWidth\n+                    required\n+                    variant='outlined'\n+                    value={tokenValidation.value}\n+                    onChange={onChange}\n+                />\n+            );\n+        } else if (type === 'JWT') {\n+            return (\n+                <Box mb={3}>\n+                    <TableContainer component={Paper}>\n+                        <Table className={classes.table} aria-label='simple table'>\n+                            <TableHead>\n+                                <TableRow>\n+                                    <TableCell>Claim Key</TableCell>\n+                                    <TableCell align='right'>Claim Value Regex</TableCell>\n+                                    <TableCell align='right'>Action</TableCell>\n+                                </TableRow>\n+                            </TableHead>\n+                            <TableBody>\n+                                <TableRow key='Add new'>\n+                                    <TableCell component='th' scope='row'>\n+                                        <TextField\n+                                            name='claimKey'\n+                                            label='Claim Key'\n+                                            variant='outlined'\n+                                            onChange={onCreateJWTmapping}\n+                                            value={jwtValue.claimKey}\n+                                        />\n+                                    </TableCell>\n+                                    <TableCell align='right'>\n+                                        <TextField\n+                                            name='claimValueRegex'\n+                                            label='Claim Value Regex'\n+                                            value={jwtValue.claimValueRegex}\n+                                            onChange={onCreateJWTmapping}\n+                                            variant='outlined'\n+                                        />\n+                                    </TableCell>\n+                                    <TableCell>\n+                                        <Grid>\n+                                            <Grid item>\n+                                                <IconButton\n+                                                    id='add'\n+                                                    aria-label='Add'\n+                                                    onClick={handleAddToList}\n+                                                >\n+                                                    <AddCircleIcon />\n+                                                </IconButton>\n+                                            </Grid>\n+                                            <Grid item>\n+                                                <IconButton\n+                                                    id='clear'\n+                                                    aria-label='Clear'\n+                                                    onClick={clearValues}\n+                                                >\n+                                                    <ClearIcon />\n+                                                </IconButton>\n+                                            </Grid>\n+                                        </Grid>\n+                                    </TableCell>\n+                                </TableRow>\n+                                {tokenValidation.value.body\n+                    && Object.entries(tokenValidation.value.body).map(([key, value]) => (\n+                        <TableRow key={key}>\n+                            <TableCell component='th' scope='row'>\n+                                <TextField\n+                                    id={key}\n+                                    defaultValue={key}\n+                                    label='Claim Key'\n+                                    variant='outlined'\n+                                    disabled\n+                                />\n+                            </TableCell>\n+                            <TableCell align='right'>\n+                                <TextField\n+                                    id={value}\n+                                    defaultValue={value}\n+                                    label='Claim value Regex'\n+                                    variant='outlined'\n+                                    disabled\n+                                />\n+                            </TableCell>\n+                            <TableCell align='right'>\n+                                <IconButton\n+                                    id='delete'\n+                                    aria-label='Remove'\n+                                    onClick={() => { onDelete(key); }}\n+                                >\n+                                    <DeleteIcon />\n+                                </IconButton>\n+                            </TableCell>\n+                        </TableRow>\n+                    ))}\n+                            </TableBody>\n+                        </Table>\n+                    </TableContainer>\n+                </Box>\n+            );\n+        } else {\n+            return (\n+                <TextField\n+                    autoFocus\n+                    margin='dense'\n+                    name='value'\n+                    label='Value'\n+                    fullWidth\n+                    required\n+                    variant='outlined'\n+                    value={tokenValidation.value}\n+                    onChange={onChange}\n+                />\n+            );\n+        }\n+    };\n+    return (\n+        <ExpansionPanel>\n+            <ExpansionPanelSummary\n+                expandIcon={<ExpandMoreIcon />}\n+                aria-controls='panel1bh-content'\n+                id='panel1bh-header'\n+            >\n+                <Typography className={classes.heading}>\n+                    Token Validation\n+                    {' '}\n+                    {tokenValidation.id}\n+                </Typography>\n+            </ExpansionPanelSummary>\n+            <Box display='flex' flexDirection='row'>\n+                <FormControl variant='outlined'>\n+                    <Select\n+                        name='type'\n+                        value={tokenValidation.type}\n+                        onChange={onChange}\n+                        classes={{ root: classes.slectRoot }}\n+                    >\n+                        <MenuItem value='REFERENCE'>REFERENCE</MenuItem>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 257}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwMzQxMw==", "bodyText": "Typo : Throttling", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435203413", "createdAt": "2020-06-04T12:08:44Z", "author": {"login": "kavishkafernando"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/KeyValidations.jsx", "diffHunk": "@@ -0,0 +1,32 @@\n+import React from 'react';\n+import sortby from 'lodash.sortby';\n+import KeyValidation from './KeyValidation';\n+\n+\n+/**\n+ * Trottling Policies dropdown selector used in minimized API Create form", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNDIzOQ==", "bodyText": "'It is possible to register an Oauth Provider'", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435204239", "createdAt": "2020-06-04T12:10:14Z", "author": {"login": "kavishkafernando"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/ListKeyManagers.jsx", "diffHunk": "@@ -0,0 +1,147 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import React from 'react';\n+import API from 'AppData/api';\n+import { useIntl, FormattedMessage } from 'react-intl';\n+import Typography from '@material-ui/core/Typography';\n+import ListBase from 'AppComponents/AdminPages/Addons/ListBase';\n+import Delete from 'AppComponents/KeyManagers/DeleteKeyManager';\n+import { Link as RouterLink } from 'react-router-dom';\n+import Button from '@material-ui/core/Button';\n+\n+/**\n+ * API call to get microgateway labels\n+ * @returns {Promise}.\n+ */\n+function apiCall() {\n+    const restApi = new API();\n+    return restApi\n+        .getKeyManagersList()\n+        .then((result) => {\n+            return result.body.list;\n+        })\n+        .catch((error) => {\n+            throw error;\n+        });\n+}\n+\n+/**\n+ * Render a list\n+ * @returns {JSX} Header AppBar components.\n+ */\n+export default function ListKeyManagers() {\n+    const intl = useIntl();\n+    const columProps = [\n+        {\n+            name: 'name',\n+            label: intl.formatMessage({\n+                id: 'AdminPages.KeyManagers.table.header.label.name',\n+                defaultMessage: 'Name',\n+            }),\n+            options: {\n+                customBodyRender: (value, tableMeta) => {\n+                    if (typeof tableMeta.rowData === 'object') {\n+                        const artifactId = tableMeta.rowData[tableMeta.rowData.length - 2];\n+                        return <RouterLink to={`/settings/key-managers/${artifactId}`}>{value}</RouterLink>;\n+                    } else {\n+                        return <div />;\n+                    }\n+                },\n+            },\n+        },\n+        {\n+            name: 'description',\n+            label: intl.formatMessage({\n+                id: 'AdminPages.KeyManagers.table.header.label.description',\n+                defaultMessage: 'Description',\n+            }),\n+            options: {\n+                sort: false,\n+            },\n+        },\n+        {\n+            name: 'type',\n+            label: intl.formatMessage({\n+                id: 'AdminPages.KeyManagers.table.header.label.type',\n+                defaultMessage: 'Type',\n+            }),\n+            options: {\n+                sort: false,\n+            },\n+        },\n+        { name: 'id', options: { display: false } },\n+    ];\n+    const addButtonProps = {\n+        triggerButtonText: intl.formatMessage({\n+            id: 'AdminPages.KeyManagers.List.addButtonProps.triggerButtonText',\n+            defaultMessage: 'Add KeyManager',\n+        }),\n+        /* This title is what as the title of the popup dialog box */\n+        title: intl.formatMessage({\n+            id: 'AdminPages.KeyManagers.List.addButtonProps.title',\n+            defaultMessage: 'Add KeyManager',\n+        }),\n+    };\n+    const pageProps = {\n+        pageStyle: 'half',\n+        title: intl.formatMessage({\n+            id: 'AdminPages.KeyManagers.List.title',\n+            defaultMessage: 'Key Managers',\n+        }),\n+    };\n+    const addButtonOverride = (\n+        <RouterLink to='/settings/key-managers/create'>\n+            <Button variant='contained' color='primary' size='small'>\n+                <FormattedMessage\n+                    id='AdminPages.KeyManagers.List.addButtonProps.triggerButtonText'\n+                    defaultMessage='Add KeyManager'\n+                />\n+            </Button>\n+        </RouterLink>\n+    );\n+    const emptyBoxProps = {\n+        content: (\n+            <Typography variant='body2' color='textSecondary' component='p'>\n+                <FormattedMessage\n+                    id='AdminPages.KeyManagers.List.empty.content.keymanagers'\n+                    defaultMessage='It is possible to register Oauth Provider.'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNDQwMA==", "bodyText": "Type: Throttling", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435204400", "createdAt": "2020-06-04T12:10:31Z", "author": {"login": "kavishkafernando"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/SelectKeyManager.jsx", "diffHunk": "@@ -0,0 +1,84 @@\n+import React, { useState, useEffect } from 'react';\n+import PropTypes from 'prop-types';\n+import TextField from '@material-ui/core/TextField';\n+import MenuItem from '@material-ui/core/MenuItem';\n+import ListItemText from '@material-ui/core/ListItemText';\n+import CircularProgress from '@material-ui/core/CircularProgress';\n+import { FormattedMessage } from 'react-intl';\n+import API from 'AppData/api';\n+import { makeStyles } from '@material-ui/core/styles';\n+import { useAppContext } from 'AppComponents/Shared/AppContext';\n+\n+const useStyles = makeStyles((theme) => ({\n+    mandatoryStar: {\n+        color: theme.palette.error.main,\n+        marginLeft: theme.spacing(0.1),\n+    },\n+}));\n+\n+/**\n+ * Trottling Policies dropdown selector used in minimized API Create form", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNDc0Mg==", "bodyText": "Shall we add a method comment to this?", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435204742", "createdAt": "2020-06-04T12:11:08Z", "author": {"login": "kavishkafernando"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/data/api.js", "diffHunk": "@@ -583,6 +583,57 @@ class API extends Resource {\n             }),\n         );\n     }\n+    getKeyManagersList() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NDA4NzA4", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#pullrequestreview-424408708", "createdAt": "2020-06-04T12:52:54Z", "commit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMjo1Mjo1NFrOGfEQpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMjo1Mjo1NFrOGfEQpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIyODgzOA==", "bodyText": "In the component prop , we can just pass the component variable, no need to wrap it with a function(lambda)", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435228838", "createdAt": "2020-06-04T12:52:54Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/Base/RouteMenuMapping.jsx", "diffHunk": "@@ -106,6 +107,15 @@ const RouteMenuMapping = (intl) => [\n         component: () => <MicrogatewayLabels />,\n         icon: <PhonelinkSetupIcon />,\n     },\n+    {\n+        id: intl.formatMessage({\n+            id: 'Base.RouteMenuMapping.keymanagers',\n+            defaultMessage: 'KeyManagers',\n+        }),\n+        path: '/settings/key-managers',\n+        component: () => <KeyManagers />,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NDExNjE2", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#pullrequestreview-424411616", "createdAt": "2020-06-04T12:56:28Z", "commit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMjo1NjoyOVrOGfEZfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMjo1NjoyOVrOGfEZfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIzMTEwMw==", "bodyText": "I think here we are looking for at least one exist?\nIf so we can use for of loop to iterate the claimMappings and break on first exist", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435231103", "createdAt": "2020-06-04T12:56:29Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/ClaimMapping.jsx", "diffHunk": "@@ -0,0 +1,193 @@\n+import React, { useState } from 'react';\n+import TextField from '@material-ui/core/TextField';\n+import { makeStyles } from '@material-ui/core/styles';\n+import Table from '@material-ui/core/Table';\n+import TableBody from '@material-ui/core/TableBody';\n+import TableCell from '@material-ui/core/TableCell';\n+import TableContainer from '@material-ui/core/TableContainer';\n+import TableHead from '@material-ui/core/TableHead';\n+import TableRow from '@material-ui/core/TableRow';\n+import Paper from '@material-ui/core/Paper';\n+import Box from '@material-ui/core/Box';\n+import Grid from '@material-ui/core/Grid';\n+import IconButton from '@material-ui/core/IconButton';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import AddCircleIcon from '@material-ui/icons/AddCircle';\n+import ClearIcon from '@material-ui/icons/Clear';\n+import Alert from 'AppComponents/Shared/Alert';\n+\n+const useStyles = makeStyles((theme) => ({\n+    mandatoryStar: {\n+        color: theme.palette.error.main,\n+        marginLeft: theme.spacing(0.1),\n+    },\n+}));\n+\n+/**\n+ * Trottling Policies dropdown selector used in minimized API Create form\n+ * @export\n+ * @param {*} props\n+ * @returns {React.Component}\n+ */\n+export default function ClaimMappings(props) {\n+    const classes = useStyles();\n+    const [newRemoteClaim, setRemoteClaim] = useState('');\n+    const [newLocalClaim, setLocalClaim] = useState('');\n+    const { claimMappings, setClaimMapping } = props;\n+    const [validationError, setValidationError] = useState([]);\n+\n+    const onChange = (e) => {\n+        if (e.target.id === 'remoteClaim') {\n+            setRemoteClaim(e.target.value);\n+        } else if (e.target.id === 'localClaim') {\n+            setLocalClaim(e.target.value);\n+        }\n+    };\n+    const validate = (fieldName, value) => {\n+        let error = '';\n+        if (value === null || value === '') {\n+            error = 'Calim is Empty';\n+        } else {\n+            error = '';\n+        }\n+        setValidationError({ fieldName: error });\n+        return error;\n+    };\n+\n+    const clearValues = () => {\n+        setLocalClaim(null);\n+        setRemoteClaim(null);\n+    };\n+    const handleAddToList = () => {\n+        const remoteClaimError = validate('remoteClaim', newRemoteClaim);\n+        const localClaimError = validate('localClaim', newLocalClaim);\n+        if (localClaimError !== '' || remoteClaimError !== '') {\n+            Alert.error(remoteClaimError);\n+            clearValues();\n+            return false;\n+        } else {\n+            let exist = false;\n+            claimMappings.map(({ remoteClaim, localClaim }) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NDkzNjM4", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#pullrequestreview-424493638", "createdAt": "2020-06-04T14:14:19Z", "commit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDoxNDoxOVrOGfIERw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDoxNDoxOVrOGfIERw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI5MTIwNw==", "bodyText": "updateList should be chained to the then callbacks instead of calling in the finally", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435291207", "createdAt": "2020-06-04T14:14:19Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/DeleteKeyManager.jsx", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import React from 'react';\n+import API from 'AppData/api';\n+import PropTypes from 'prop-types';\n+import { FormattedMessage } from 'react-intl';\n+import DialogContentText from '@material-ui/core/DialogContentText';\n+import DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n+import FormDialogBase from 'AppComponents/AdminPages/Addons/FormDialogBase';\n+\n+/**\n+ * Render delete dialog box.\n+ * @param {JSON} props component props.\n+ * @returns {JSX} Loading animation.\n+ */\n+function Delete({ updateList, dataRow }) {\n+    const { id } = dataRow;\n+\n+    const formSaveCallback = () => {\n+        // todo: don't create a new promise\n+        const promiseAPICall = new Promise((resolve, reject) => {\n+            const restApi = new API();\n+            restApi\n+                .deleteKeyManager(id)\n+                .then(() => {\n+                    resolve(\n+                        <FormattedMessage\n+                            id='AdminPages.KeyManagers.Delete.form.delete.successful'\n+                            defaultMessage='KeyManager deleted successfully'\n+                        />,\n+                    );\n+                })\n+                .catch((error) => {\n+                    reject(error.response.body.description);\n+                })\n+                .finally(() => {\n+                    updateList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NDk0NTk0", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#pullrequestreview-424494594", "createdAt": "2020-06-04T14:15:13Z", "commit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDoxNToxNFrOGfIHAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDoxNToxNFrOGfIHAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI5MTkwNQ==", "bodyText": "Please destructure the type as well\ni:e\nlet { value, type } = e.currentTarget;", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435291905", "createdAt": "2020-06-04T14:15:14Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/KeyManagerConfiguration.jsx", "diffHunk": "@@ -0,0 +1,141 @@\n+import React from 'react';\n+import TextField from '@material-ui/core/TextField';\n+import Checkbox from '@material-ui/core/Checkbox';\n+import FormControlLabel from '@material-ui/core/FormControlLabel';\n+import Box from '@material-ui/core/Box';\n+import FormLabel from '@material-ui/core/FormLabel';\n+import FormControl from '@material-ui/core/FormControl';\n+import FormGroup from '@material-ui/core/FormGroup';\n+import Radio from '@material-ui/core/Radio';\n+import RadioGroup from '@material-ui/core/RadioGroup';\n+\n+\n+/**\n+ * Trottling Policies dropdown selector used in minimized API Create form\n+ * @export\n+ * @param {*} props\n+ * @returns {React.Component}\n+ */\n+export default function KeyManagerConfiguration(props) {\n+    const { keymanagerConnectorConfigurations, additionalProperties, setAdditionalProperties } = props;\n+    const onChange = (e) => {\n+        let { value } = e.target;\n+        if (e.target.type === 'checkbox') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0OTY2NTk3", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#pullrequestreview-424966597", "createdAt": "2020-06-05T03:04:00Z", "commit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzowNDowMFrOGfe4ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzowNDowMFrOGfe4ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY2NTA4Mg==", "bodyText": "Is this helper text correct here ? API Product ?", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r435665082", "createdAt": "2020-06-05T03:04:00Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/KeyManagers/SelectKeyManager.jsx", "diffHunk": "@@ -0,0 +1,84 @@\n+import React, { useState, useEffect } from 'react';\n+import PropTypes from 'prop-types';\n+import TextField from '@material-ui/core/TextField';\n+import MenuItem from '@material-ui/core/MenuItem';\n+import ListItemText from '@material-ui/core/ListItemText';\n+import CircularProgress from '@material-ui/core/CircularProgress';\n+import { FormattedMessage } from 'react-intl';\n+import API from 'AppData/api';\n+import { makeStyles } from '@material-ui/core/styles';\n+import { useAppContext } from 'AppComponents/Shared/AppContext';\n+\n+const useStyles = makeStyles((theme) => ({\n+    mandatoryStar: {\n+        color: theme.palette.error.main,\n+        marginLeft: theme.spacing(0.1),\n+    },\n+}));\n+\n+/**\n+ * Trottling Policies dropdown selector used in minimized API Create form\n+ * @export\n+ * @param {*} props\n+ * @returns {React.Component}\n+ */\n+export default function SelectKeyManager(props) {\n+    const {\n+        onChange, keyManager: keyManager\n+    } = props;\n+    const { settings } = useAppContext();\n+    const classes = useStyles();\n+    const handleValidateAndChange = ({ target: { value, name } }) => {\n+        validate('policies', value);\n+        onChange({ target: { name, value } });\n+    };\n+    if (!settings.keyManagerConfiguration) {\n+        return <CircularProgress />;\n+    } else {\n+        return (\n+            <TextField\n+                fullWidth\n+                select\n+                label={(\n+                    <>\n+                        <FormattedMessage\n+                            id='Apis.Create.Components.SelectPolicies.business.plans'\n+                            defaultMessage='Business plan(s)'\n+                        />\n+                        {(<sup className={classes.mandatoryStar}>*</sup>)}\n+                    </>\n+                )}\n+                value={keyManager}\n+                name='keyManager'\n+                onChange={handleValidateAndChange}\n+                SelectProps={{\n+                    multiple,\n+                    renderValue: (selected) => (Array.isArray(selected) ? selected.join(', ') : selected),\n+                }}\n+                helperText={isAPIProduct ? helperText + 'API Product' : helperText + 'API'}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c"}, "originalPosition": 58}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/b5f643aa2c78358b3f2bad8ba6dc5ba135aaab7c", "committedDate": "2020-06-04T11:48:32Z", "message": "add key manager creation ui"}, "afterCommit": {"oid": "27c052b03c1856a94a1ba0e48ee905f8d6867603", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/27c052b03c1856a94a1ba0e48ee905f8d6867603", "committedDate": "2020-06-06T07:51:53Z", "message": "add key manager creation ui"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bcee5f7a9adbe2cb5178b43a95410773261032f5", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/bcee5f7a9adbe2cb5178b43a95410773261032f5", "committedDate": "2020-06-07T05:46:58Z", "message": "add reviewed changes"}, "afterCommit": {"oid": "11b028b1fc31a2b6f564e4e50b1bae3a25710468", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/11b028b1fc31a2b6f564e4e50b1bae3a25710468", "committedDate": "2020-06-07T07:11:36Z", "message": "add reviewed changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "11b028b1fc31a2b6f564e4e50b1bae3a25710468", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/11b028b1fc31a2b6f564e4e50b1bae3a25710468", "committedDate": "2020-06-07T07:11:36Z", "message": "add reviewed changes"}, "afterCommit": {"oid": "c93e837464101b6dca612144d8b490f35fac7fff", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/c93e837464101b6dca612144d8b490f35fac7fff", "committedDate": "2020-06-07T08:17:26Z", "message": "add reviewed changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c93e837464101b6dca612144d8b490f35fac7fff", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/c93e837464101b6dca612144d8b490f35fac7fff", "committedDate": "2020-06-07T08:17:26Z", "message": "add reviewed changes"}, "afterCommit": {"oid": "3c4a79932ba788d7196961800a04de8a8d5d9fbb", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/3c4a79932ba788d7196961800a04de8a8d5d9fbb", "committedDate": "2020-06-07T08:26:02Z", "message": "add reviewed changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1Nzk4NDMw", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#pullrequestreview-425798430", "createdAt": "2020-06-07T08:26:42Z", "commit": {"oid": "c93e837464101b6dca612144d8b490f35fac7fff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QwODoyNzowM1rOGgIASA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QwODoyNzowM1rOGgIASA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMzODc2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    component: () => <KeyManagers />,\n          \n          \n            \n                    component: KeyManagers,", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#discussion_r436338760", "createdAt": "2020-06-07T08:27:03Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/Base/RouteMenuMapping.jsx", "diffHunk": "@@ -106,6 +107,15 @@ const RouteMenuMapping = (intl) => [\n         component: () => <MicrogatewayLabels />,\n         icon: <PhonelinkSetupIcon />,\n     },\n+    {\n+        id: intl.formatMessage({\n+            id: 'Base.RouteMenuMapping.keymanagers',\n+            defaultMessage: 'KeyManagers',\n+        }),\n+        path: '/settings/key-managers',\n+        component: () => <KeyManagers />,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c4a79932ba788d7196961800a04de8a8d5d9fbb"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3c4a79932ba788d7196961800a04de8a8d5d9fbb", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/3c4a79932ba788d7196961800a04de8a8d5d9fbb", "committedDate": "2020-06-07T08:26:02Z", "message": "add reviewed changes"}, "afterCommit": {"oid": "ba53faad13f5a9bdea08426f15fc87af31e6cfdc", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/ba53faad13f5a9bdea08426f15fc87af31e6cfdc", "committedDate": "2020-06-07T08:45:52Z", "message": "add reviewed changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba53faad13f5a9bdea08426f15fc87af31e6cfdc", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/ba53faad13f5a9bdea08426f15fc87af31e6cfdc", "committedDate": "2020-06-07T08:45:52Z", "message": "add reviewed changes"}, "afterCommit": {"oid": "21ef26820abe8eacfc67dbb6e1632fe9a60ae027", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/21ef26820abe8eacfc67dbb6e1632fe9a60ae027", "committedDate": "2020-06-08T10:31:53Z", "message": "add reviewed changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b248c25c746198849c83c651fb34e5fa02226bc6", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/b248c25c746198849c83c651fb34e5fa02226bc6", "committedDate": "2020-06-08T10:34:07Z", "message": "add key manager creation ui"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63cc9631c3ed1ef80a4c411f07f158f495ff7412", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/63cc9631c3ed1ef80a4c411f07f158f495ff7412", "committedDate": "2020-06-08T10:34:07Z", "message": "add reviewed changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "21ef26820abe8eacfc67dbb6e1632fe9a60ae027", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/21ef26820abe8eacfc67dbb6e1632fe9a60ae027", "committedDate": "2020-06-08T10:31:53Z", "message": "add reviewed changes"}, "afterCommit": {"oid": "63cc9631c3ed1ef80a4c411f07f158f495ff7412", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/63cc9631c3ed1ef80a4c411f07f158f495ff7412", "committedDate": "2020-06-08T10:34:07Z", "message": "add reviewed changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MTE5NTgy", "url": "https://github.com/wso2/carbon-apimgt/pull/8664#pullrequestreview-426119582", "createdAt": "2020-06-08T10:57:12Z", "commit": {"oid": "63cc9631c3ed1ef80a4c411f07f158f495ff7412"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "533de8e8672b595281c9cf3924ea47c044a02f65", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/533de8e8672b595281c9cf3924ea47c044a02f65", "committedDate": "2020-06-08T16:42:48Z", "message": "fix issues according to restapi changes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2707, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}