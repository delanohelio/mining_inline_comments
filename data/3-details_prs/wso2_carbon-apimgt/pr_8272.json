{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxODQ0MDgx", "number": 8272, "title": "Swagger 2 and OAS 3 parameter edit and Ref rendering support", "bodyText": "This PR introduces parameter Edit support and fixing issues in Resource components.\n\nAdd parameter edit support for OAS 3.0 and 2.0\nAdd i18\nFix Resource rendering issues when Spec has $refs in parameters.\n\nFixes wso2/product-apim#7494", "createdAt": "2020-02-29T12:30:56Z", "url": "https://github.com/wso2/carbon-apimgt/pull/8272", "merged": true, "mergeCommit": {"oid": "93288369de2b0ff0144dab68771522f2e5b70343"}, "closed": true, "closedAt": "2020-03-04T14:49:10Z", "author": {"login": "menakaj"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJ-zcHAH2gAyMzgxODQ0MDgxOjc1YzU1YTU4YmI2ODU0MzdhNWI3ZmE0ZWFkOTBhODg2ZWU2YjUwMzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKa2smAFqTM2OTAwMDQxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "75c55a58bb685437a5b7fa4ead90a886ee6b5038", "author": {"user": {"login": "menakaj", "name": "Menaka Jayawardena"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/75c55a58bb685437a5b7fa4ead90a886ee6b5038", "committedDate": "2020-03-03T09:21:42Z", "message": "Refactor Add parameter component."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "955785c981246cc75a8e4e577501e5a33d5d62ff", "author": {"user": {"login": "menakaj", "name": "Menaka Jayawardena"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/955785c981246cc75a8e4e577501e5a33d5d62ff", "committedDate": "2020-03-03T09:21:42Z", "message": "Add Edit Parameter action for OAS 2.0 and 3.x\n\n* Enable Parameter Edit.\n* Fix issues in Parameter Add operation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af04bf54fbaf4172bf411a7bbaff7b382c89ba12", "author": {"user": {"login": "menakaj", "name": "Menaka Jayawardena"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/af04bf54fbaf4172bf411a7bbaff7b382c89ba12", "committedDate": "2020-03-03T09:21:42Z", "message": "Add i18n for Resource Components."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ce2c37fde2c4fb717c71ce172d61a19e868cd2d", "author": {"user": {"login": "menakaj", "name": "Menaka Jayawardena"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/3ce2c37fde2c4fb717c71ce172d61a19e868cd2d", "committedDate": "2020-03-03T09:22:56Z", "message": "Add support for Refs in parameters."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3OTMzMzYw", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#pullrequestreview-367933360", "createdAt": "2020-03-03T12:23:07Z", "commit": {"oid": "3ce2c37fde2c4fb717c71ce172d61a19e868cd2d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3OTk3MTg1", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#pullrequestreview-367997185", "createdAt": "2020-03-03T13:56:55Z", "commit": {"oid": "3ce2c37fde2c4fb717c71ce172d61a19e868cd2d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMzo1Njo1NVrOFxGtXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMzo1Njo1NVrOFxGtXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAzNDQ2Mw==", "bodyText": "Why we put passed errors into an array ?", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#discussion_r387034463", "createdAt": "2020-03-03T13:56:55Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Resources/Resources.jsx", "diffHunk": "@@ -228,18 +250,28 @@ export default function Resources(props) {\n     );\n     /**\n      *\n-     *\n-     * @param {*} response\n-     * @returns\n+     * @param {*} rawSpec The original swagger content.\n+     * @returns {null}\n      */\n     function resolveAndUpdateSpec(rawSpec) {\n-        // return Swagger.resolve({ spec: rawSpec, allowMetaPatches: false }).then(({ spec, errors }) => {\n-        //     const value = spec;\n-        //     delete value.$$normalized;\n-        //     operationsDispatcher({ action: 'init', data: value.paths });\n-        //     setOpenAPISpec(value);\n-        //     setSpecErrors(errors);\n-        // });\n+        /*\n+         * Deep copying the spec.\n+         * Otherwise it will resolved to the original parameter passed (rawSpec) to the validate method.\n+         * We will not alter the provided spec.\n+         */\n+        const specCopy = cloneDeep(rawSpec);\n+        /*\n+        * Used SwaggerParser.validate() because we can get the errors as well.\n+        */\n+        SwaggerParser.validate(specCopy, (err, result) => {\n+            setResolvedSpec(() => {\n+                const errors = err ? [err] : [];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ce2c37fde2c4fb717c71ce172d61a19e868cd2d"}, "originalPosition": 85}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3OTk4NjU1", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#pullrequestreview-367998655", "createdAt": "2020-03-03T13:58:45Z", "commit": {"oid": "3ce2c37fde2c4fb717c71ce172d61a19e868cd2d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMzo1ODo0NVrOFxGyIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMzo1ODo0NVrOFxGyIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAzNTY4MA==", "bodyText": "Shall we check whether react-intl library provides a hook to inject these into props, AFAIR back then they discussed to provide a react hook instead of this HOC", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#discussion_r387035680", "createdAt": "2020-03-03T13:58:45Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Resources/components/AddOperation.jsx", "diffHunk": "@@ -319,4 +328,4 @@ AddOperation.propTypes = {\n     operationsDispatcher: PropTypes.func.isRequired,\n };\n \n-export default React.memo(AddOperation);\n+export default React.memo(injectIntl(AddOperation));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ce2c37fde2c4fb717c71ce172d61a19e868cd2d"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1", "author": {"user": {"login": "menakaj", "name": "Menaka Jayawardena"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/d62db219d1ca80d6d81986e375db039236ef5da1", "committedDate": "2020-03-04T06:39:49Z", "message": "Remove injectIntl and use 'useIntl'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4OTc5NjU4", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#pullrequestreview-368979658", "createdAt": "2020-03-04T17:32:29Z", "commit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzozMjoyOVrOFx2yHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzozMjoyOVrOFx2yHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgyMjEwOA==", "bodyText": "@menakaj Why we need a util function for this conditional ternary operator ? is it to get away with eslint warning ?", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#discussion_r387822108", "createdAt": "2020-03-04T17:32:29Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Resources/components/operationComponents/parameterUtils.js", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied. See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+/**\n+ * Defining the supported data types by the OAS spec versions.\n+ *\n+ * 2.0 : https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#dataTypeFormat\n+ * 3.x :https://swagger.io/docs/specification/data-models/data-types/\n+ * */\n+const supportedDataTypes = {\n+    '2.0': {\n+        body: ['integer', 'number', 'string', 'boolean', 'object'],\n+        formData: ['integer', 'number', 'string', 'boolean', 'file'],\n+        query: ['integer', 'number', 'string', 'boolean'],\n+        path: ['integer', 'number', 'string', 'boolean'],\n+        header: ['integer', 'number', 'string', 'boolean'],\n+    },\n+    '3.x': {\n+        body: ['integer', 'number', 'string', 'boolean', 'object'],\n+        query: ['integer', 'number', 'string', 'boolean'],\n+        path: ['integer', 'number', 'string', 'boolean'],\n+        header: ['integer', 'number', 'string', 'boolean'],\n+        cookie: ['integer', 'number', 'string', 'boolean'],\n+    },\n+};\n+\n+/**\n+ * Util method for checking conditions.\n+ *\n+ * @param {boolean} condition : The condition to be checked\n+ * @param {any} matched : The value to be returned if the condition is true\n+ * @param {any} otherwise : The value to be returned if the condition is false.\n+ * @return {object} If true -> matched, false -> otherwise\n+ * */\n+export function iff(condition, matched, otherwise) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4OTg0MTY1", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#pullrequestreview-368984165", "createdAt": "2020-03-04T17:38:55Z", "commit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzozODo1NVrOFx3AEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzozODo1NVrOFx3AEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgyNTY4Mg==", "bodyText": "Why we check for nextParameter.schema in here and if it's not available directly assign value to nextParameter[action] ? is it because of a difference in Swagger/OAS spec versions", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#discussion_r387825682", "createdAt": "2020-03-04T17:38:55Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Resources/components/operationComponents/EditParameter.jsx", "diffHunk": "@@ -72,13 +77,21 @@ export default function EditParameter(props) {\n      */\n     function parameterActionReducer(currentParameter, paramAction) {\n         const { action, value } = paramAction;\n-        const nextParameter = { ...currentParameter, schema: { ...currentParameter.schema } };\n+        const nextParameter = currentParameter.schema\n+            ? { ...currentParameter, schema: { ...currentParameter.schema } } : { ...currentParameter };\n         switch (action) {\n             case 'description':\n             case 'required':\n                 nextParameter[action] = value;\n                 break;\n-\n+            case 'type':\n+            case 'format':\n+                if (nextParameter.schema) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4OTg1NzA0", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#pullrequestreview-368985704", "createdAt": "2020-03-04T17:41:06Z", "commit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzo0MTowN1rOFx3EvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzo0MTowN1rOFx3EvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgyNjg3Nw==", "bodyText": "When do we get parameter properties outside a schema", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#discussion_r387826877", "createdAt": "2020-03-04T17:41:07Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Resources/components/operationComponents/EditParameter.jsx", "diffHunk": "@@ -181,22 +216,50 @@ export default function EditParameter(props) {\n                                     },\n                                 }}\n                             >\n-                                {['number', 'integer'].map((dataType) => (\n+                                {getSupportedDataTypes(version, parameter.in).map((dataType) => (\n                                     <MenuItem value={dataType} dense>\n                                         {capitalizeFirstLetter(dataType)}\n                                     </MenuItem>\n                                 ))}\n                             </Select>\n-                            <FormHelperText>Select schema type</FormHelperText>\n+                            <FormHelperText>\n+                                <FormattedMessage\n+                                    id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n+                                    + 'select.schema.data.type'}\n+                                    defaultMessage='Select the Schema Type'\n+                                />\n+                            </FormHelperText>\n                         </FormControl>\n                     </Grid>\n                     <Grid item md={6}>\n-                        <FormControl fullWidth margin='dense' variant='outlined' className={classes.formControl}>\n-                            <InputLabel htmlFor='edit-parameter-format'>Format</InputLabel>\n+                        <FormControl\n+                            fullWidth\n+                            margin='dense'\n+                            variant='outlined'\n+                            className={classes.formControl}\n+                            disabled={parameter.schema\n+                                ? iff(\n+                                    parameter.schema.type === 'boolean' || parameter.schema.type === 'object',\n+                                    true,\n+                                    false,\n+                                )\n+                                : iff(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "originalPosition": 161}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4OTg5MDEw", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#pullrequestreview-368989010", "createdAt": "2020-03-04T17:45:54Z", "commit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzo0NTo1NVrOFx3OyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzo0NTo1NVrOFx3OyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgyOTQ0OA==", "bodyText": "Can we rely on index here , will it be always the same in the raw definition param array index and parsed definition params array index ? what if we find by param name ?", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#discussion_r387829448", "createdAt": "2020-03-04T17:45:55Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Resources/components/operationComponents/ListParameters.jsx", "diffHunk": "@@ -64,106 +67,158 @@ export default function ListParameters(props) {\n                     verb={verb}\n                     editingParameter={editingParameter}\n                     setEditingParameter={setEditingParameter}\n+                    version={specVersion}\n                 />\n             )}\n             <Table className={classes.table} aria-label='parameters list'>\n                 <TableHead>\n                     <TableRow>\n-                        <TableCell>Name</TableCell>\n-                        <TableCell align='left'>Parameter Type</TableCell>\n-                        <TableCell align='left'>Data Type</TableCell>\n-                        <TableCell align='left'>Required</TableCell>\n-                        {!disableUpdate && <TableCell align='left'>Actions</TableCell>}\n+                        <TableCell align='left'>\n+                            <FormattedMessage\n+                                id='Apis.Details.Resources.components.operationComponents.ListParameter.parameter.type'\n+                                defaultMessage='Parameter Type'\n+                            />\n+                        </TableCell>\n+                        <TableCell>\n+                            <FormattedMessage\n+                                id='Apis.Details.Resources.components.operationComponents.ListParameter.parameter.name'\n+                                defaultMessage='Name'\n+                            />\n+                        </TableCell>\n+                        <TableCell align='left'>\n+                            <FormattedMessage\n+                                id='Apis.Details.Resources.components.operationComponents.ListParameter.data.type'\n+                                defaultMessage='Data Type'\n+                            />\n+                        </TableCell>\n+                        <TableCell align='left'>\n+                            <FormattedMessage\n+                                id='Apis.Details.Resources.components.operationComponents.ListParameter.required'\n+                                defaultMessage='Required'\n+                            />\n+                        </TableCell>\n+                        {!disableUpdate && (\n+                            <TableCell align='left'>\n+                                <FormattedMessage\n+                                    id='Apis.Details.Resources.components.operationComponents.ListParameter.actions'\n+                                    defaultMessage='Actions'\n+                                />\n+                            </TableCell>\n+                        )}\n                     </TableRow>\n                 </TableHead>\n                 <TableBody>\n                     {operation.parameters\n-                        && operation.parameters.map((parameter) => (\n-                            <TableRow key={parameter.name}>\n-                                <TableCell align='left'>{parameter.name}</TableCell>\n-                                <TableCell align='left'>{capitalizeFirstLetter(parameter.in)}</TableCell>\n-                                <TableCell align='left'>\n-                                    {capitalizeFirstLetter(parameter.schema ? parameter.schema.type : parameter.type)}\n-                                </TableCell>\n-                                <TableCell align='left'>{parameter.required ? 'Yes' : 'No'}</TableCell>\n-                                {!disableUpdate && (\n+                        && operation.parameters.map((parameter, index) => {\n+                            const isRefParam = isRef(parameter);\n+                            const paramCopy = isRefParam\n+                                ? resolvedSpec.paths[target][verb].parameters[index] : parameter;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4OTkzNDQ0", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#pullrequestreview-368993444", "createdAt": "2020-03-04T17:52:23Z", "commit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzo1MjoyM1rOFx3cfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzo1MjoyM1rOFx3cfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgzMjk1OA==", "bodyText": "I think we are repeating the same thing here, Shall we resolve the requestBody content in prior to the return statement and pass the content array to RequestBody component so that repetitive work like\n<RequestBody\n                                        contentType={contentType}\n                                        content={content}\n                                        operation={operation}\n                                        disableUpdate={disableUpdate}\n                                        hideParameterEdit={hideParameterEdit}\n                                        operationsDispatcher={operationsDispatcher}\n                                        target={target}\n                                        verb={verb}\n                                    />\n\nand\nrequestBody.content).map(\n                            ([contentType, content]) => {\n\ncan be avoided ,\nafter getting the requestBody content either from a $ref or inline , the content structure is same", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#discussion_r387832958", "createdAt": "2020-03-04T17:52:23Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Resources/components/operationComponents/ListParameters.jsx", "diffHunk": "@@ -64,106 +67,158 @@ export default function ListParameters(props) {\n                     verb={verb}\n                     editingParameter={editingParameter}\n                     setEditingParameter={setEditingParameter}\n+                    version={specVersion}\n                 />\n             )}\n             <Table className={classes.table} aria-label='parameters list'>\n                 <TableHead>\n                     <TableRow>\n-                        <TableCell>Name</TableCell>\n-                        <TableCell align='left'>Parameter Type</TableCell>\n-                        <TableCell align='left'>Data Type</TableCell>\n-                        <TableCell align='left'>Required</TableCell>\n-                        {!disableUpdate && <TableCell align='left'>Actions</TableCell>}\n+                        <TableCell align='left'>\n+                            <FormattedMessage\n+                                id='Apis.Details.Resources.components.operationComponents.ListParameter.parameter.type'\n+                                defaultMessage='Parameter Type'\n+                            />\n+                        </TableCell>\n+                        <TableCell>\n+                            <FormattedMessage\n+                                id='Apis.Details.Resources.components.operationComponents.ListParameter.parameter.name'\n+                                defaultMessage='Name'\n+                            />\n+                        </TableCell>\n+                        <TableCell align='left'>\n+                            <FormattedMessage\n+                                id='Apis.Details.Resources.components.operationComponents.ListParameter.data.type'\n+                                defaultMessage='Data Type'\n+                            />\n+                        </TableCell>\n+                        <TableCell align='left'>\n+                            <FormattedMessage\n+                                id='Apis.Details.Resources.components.operationComponents.ListParameter.required'\n+                                defaultMessage='Required'\n+                            />\n+                        </TableCell>\n+                        {!disableUpdate && (\n+                            <TableCell align='left'>\n+                                <FormattedMessage\n+                                    id='Apis.Details.Resources.components.operationComponents.ListParameter.actions'\n+                                    defaultMessage='Actions'\n+                                />\n+                            </TableCell>\n+                        )}\n                     </TableRow>\n                 </TableHead>\n                 <TableBody>\n                     {operation.parameters\n-                        && operation.parameters.map((parameter) => (\n-                            <TableRow key={parameter.name}>\n-                                <TableCell align='left'>{parameter.name}</TableCell>\n-                                <TableCell align='left'>{capitalizeFirstLetter(parameter.in)}</TableCell>\n-                                <TableCell align='left'>\n-                                    {capitalizeFirstLetter(parameter.schema ? parameter.schema.type : parameter.type)}\n-                                </TableCell>\n-                                <TableCell align='left'>{parameter.required ? 'Yes' : 'No'}</TableCell>\n-                                {!disableUpdate && (\n+                        && operation.parameters.map((parameter, index) => {\n+                            const isRefParam = isRef(parameter);\n+                            const paramCopy = isRefParam\n+                                ? resolvedSpec.paths[target][verb].parameters[index] : parameter;\n+                            return (\n+                                <TableRow key={paramCopy.name}>\n+                                    <TableCell align='left'>{capitalizeFirstLetter(paramCopy.in)}</TableCell>\n+                                    <TableCell align='left'>{paramCopy.name}</TableCell>\n                                     <TableCell align='left'>\n-                                        {!hideParameterEdit && (\n-                                            <Tooltip title='Edit'>\n+                                        {capitalizeFirstLetter(paramCopy.schema\n+                                            ? paramCopy.schema.type : paramCopy.type)}\n+                                    </TableCell>\n+                                    <TableCell align='left'>\n+                                        {paramCopy.required\n+                                            ? (\n+                                                <FormattedMessage\n+                                                    id={'Apis.Details.Resources.components.operationComponents'\n+                                                + '.ListParameter.yes'}\n+                                                    defaultMessage='Yes'\n+                                                />\n+                                            )\n+                                            : (\n+                                                <FormattedMessage\n+                                                    id={'Apis.Details.Resources.components.operationComponents'\n+                                                + '.ListParameter.no'}\n+                                                    defaultMessage='No'\n+                                                />\n+                                            )}\n+                                    </TableCell>\n+                                    {!disableUpdate && (\n+                                        <TableCell align='left'>\n+                                            {!isRefParam && (\n+                                                <Tooltip title={(\n+                                                    <FormattedMessage\n+                                                        id={'Apis.Details.Resources.components.operationComponents.'\n+                                                    + 'ListParameter.edit'}\n+                                                        defaultMessage='Edit'\n+                                                    />\n+                                                )}\n+                                                >\n+                                                    <IconButton\n+                                                        onClick={() => setEditingParameter(parameter)}\n+                                                        fontSize='small'\n+                                                    >\n+                                                        <EditIcon fontSize='small' />\n+                                                    </IconButton>\n+                                                </Tooltip>\n+                                            )}\n+                                            <Tooltip title={(\n+                                                <FormattedMessage\n+                                                    id={'Apis.Details.Resources.components.operationComponents'\n+                                                + '.ListParameter.delete'}\n+                                                    defaultMessage='Delete'\n+                                                />\n+                                            )}\n+                                            >\n                                                 <IconButton\n-                                                    onClick={() => setEditingParameter(parameter)}\n+                                                    disabled={disableUpdate}\n+                                                    onClick={() => operationsDispatcher({\n+                                                        action: 'deleteParameter',\n+                                                        data: { target, verb, value: paramCopy },\n+                                                    })}\n                                                     fontSize='small'\n                                                 >\n-                                                    <EditIcon fontSize='small' />\n-                                                </IconButton>\n-                                            </Tooltip>\n-                                        )}\n-                                        <Tooltip title='Delete'>\n-                                            <IconButton\n-                                                disabled={disableUpdate}\n-                                                onClick={() => operationsDispatcher({\n-                                                    action: 'deleteParameter',\n-                                                    data: { target, verb, value: parameter },\n-                                                })}\n-                                                fontSize='small'\n-                                            >\n-                                                <DeleteIcon fontSize='small' />\n-                                            </IconButton>\n-                                        </Tooltip>\n-                                    </TableCell>\n-                                )}\n-                            </TableRow>\n-                        ))}\n-                    {operation.requestBody\n-                        && Object.entries(operation.requestBody.content).map(([contentType, content]) => (\n-                            <TableRow key={contentType}>\n-                                <TableCell>{contentType}</TableCell>\n-                                <TableCell align='left'>Body</TableCell>\n-                                <TableCell align='left'>{content.schema.type}</TableCell>\n-                                <TableCell align='left'>{content.required ? 'Yes' : 'No'}</TableCell>\n-                                {!disableUpdate && (\n-                                    <TableCell align='left'>\n-                                        {!hideParameterEdit && (\n-                                            <Tooltip title='Edit'>\n-                                                <IconButton onClick={() => {}} fontSize='small'>\n-                                                    <EditIcon fontSize='small' />\n+                                                    <DeleteIcon fontSize='small' />\n                                                 </IconButton>\n                                             </Tooltip>\n-                                        )}\n-                                        <Tooltip title='Delete'>\n-                                            <IconButton\n-                                                disabled={disableUpdate}\n-                                                onClick={() => {\n-                                                    operationsDispatcher({\n-                                                        action: 'requestBody',\n-                                                        data: {\n-                                                            target,\n-                                                            verb,\n-                                                            value: {\n-                                                                description: '',\n-                                                                required: false,\n-                                                                content: {},\n-                                                            },\n-                                                        },\n-                                                    });\n-                                                }}\n-                                                fontSize='small'\n-                                            >\n-                                                <DeleteIcon fontSize='small' />\n-                                            </IconButton>\n-                                        </Tooltip>\n-                                    </TableCell>\n-                                )}\n-                            </TableRow>\n-                        ))}\n+                                        </TableCell>\n+                                    )}\n+                                </TableRow>\n+                            );\n+                        })}\n+                    {operation.requestBody && (isRef(operation.requestBody)\n+                        ? Object.entries(resolvedSpec.paths[target][verb].requestBody.content).map(\n+                            ([contentType, content]) => {\n+                                return (\n+                                    <RequestBody\n+                                        contentType={contentType}\n+                                        content={content}\n+                                        operation={operation}\n+                                        disableUpdate={disableUpdate}\n+                                        hideParameterEdit={hideParameterEdit}\n+                                        operationsDispatcher={operationsDispatcher}\n+                                        target={target}\n+                                        verb={verb}\n+                                    />\n+                                );\n+                            },\n+                        ) : Object.entries(operation.requestBody.content).map(([contentType, content]) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "originalPosition": 230}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4OTk0Mjc2", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#pullrequestreview-368994276", "createdAt": "2020-03-04T17:53:38Z", "commit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzo1MzozOFrOFx3fGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzo1MzozOFrOFx3fGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgzMzYyNw==", "bodyText": "We could get content array in here and do the mapping, otherwise, it looks like this component is just used to reduce the # of lines in its parent \ud83d\ude03", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#discussion_r387833627", "createdAt": "2020-03-04T17:53:38Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Resources/components/operationComponents/RequestBody.jsx", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied. See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+import React from 'react';\n+import PropTypes from 'prop-types';\n+import { FormattedMessage } from 'react-intl';\n+import TableCell from '@material-ui/core/TableCell';\n+import Tooltip from '@material-ui/core/Tooltip';\n+import IconButton from '@material-ui/core/IconButton';\n+import EditIcon from '@material-ui/icons/Edit';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import TableRow from '@material-ui/core/TableRow';\n+\n+/**\n+ * Component to render the Request b\n+ *\n+ * */\n+function RequestBody(props) {\n+    const {\n+        contentType, content, operation, disableUpdate, hideParameterEdit, operationsDispatcher, target, verb,\n+    } = props;\n+    return (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4OTk2MDM5", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#pullrequestreview-368996039", "createdAt": "2020-03-04T17:56:09Z", "commit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzo1NjowOVrOFx3kmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzo1NjowOVrOFx3kmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgzNTAzNQ==", "bodyText": "IMO , since parameters always come under an operation, (unless referred) it's better to keep one util file (operations.utils). to keep the util methods, or even one util file for the entire resource page, otherwise future deves will get confused where to put what and where to look for what? WDYT ?", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#discussion_r387835035", "createdAt": "2020-03-04T17:56:09Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Resources/components/operationComponents/parameterUtils.js", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied. See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+/**\n+ * Defining the supported data types by the OAS spec versions.\n+ *\n+ * 2.0 : https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#dataTypeFormat\n+ * 3.x :https://swagger.io/docs/specification/data-models/data-types/\n+ * */\n+const supportedDataTypes = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4OTk3OTA2", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#pullrequestreview-368997906", "createdAt": "2020-03-04T17:58:45Z", "commit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzo1ODo0NVrOFx3qOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzo1ODo0NVrOFx3qOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgzNjQ3NA==", "bodyText": "are these datatypes case sensitive ?", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#discussion_r387836474", "createdAt": "2020-03-04T17:58:45Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Resources/components/operationComponents/parameterUtils.js", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied. See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+/**\n+ * Defining the supported data types by the OAS spec versions.\n+ *\n+ * 2.0 : https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#dataTypeFormat\n+ * 3.x :https://swagger.io/docs/specification/data-models/data-types/\n+ * */\n+const supportedDataTypes = {\n+    '2.0': {\n+        body: ['integer', 'number', 'string', 'boolean', 'object'],\n+        formData: ['integer', 'number', 'string', 'boolean', 'file'],\n+        query: ['integer', 'number', 'string', 'boolean'],\n+        path: ['integer', 'number', 'string', 'boolean'],\n+        header: ['integer', 'number', 'string', 'boolean'],\n+    },\n+    '3.x': {\n+        body: ['integer', 'number', 'string', 'boolean', 'object'],\n+        query: ['integer', 'number', 'string', 'boolean'],\n+        path: ['integer', 'number', 'string', 'boolean'],\n+        header: ['integer', 'number', 'string', 'boolean'],\n+        cookie: ['integer', 'number', 'string', 'boolean'],\n+    },\n+};\n+\n+/**\n+ * Util method for checking conditions.\n+ *\n+ * @param {boolean} condition : The condition to be checked\n+ * @param {any} matched : The value to be returned if the condition is true\n+ * @param {any} otherwise : The value to be returned if the condition is false.\n+ * @return {object} If true -> matched, false -> otherwise\n+ * */\n+export function iff(condition, matched, otherwise) {\n+    return condition ? matched : otherwise;\n+}\n+\n+/**\n+ * Method to get the supported data types for the given parameter type.\n+ *\n+ * @param {string} specVersion : The OAS version\n+ * @param {string} paramType : The parameter type.\n+ * @return {array} The list of supported parameters.\n+ * */\n+export function getSupportedDataTypes(specVersion, paramType) {\n+    return paramType ? supportedDataTypes[specVersion === '2.0' ? '2.0' : '3.x'][paramType] : [];\n+}\n+\n+/**\n+ * Get the supported data formats by each data type.\n+ *\n+ * @param {string} dataType: THe data type.\n+ * @return {array} The list of supported data formats.\n+ * */\n+export function getDataFormats(dataType) {\n+    switch (dataType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4OTk5ODI3", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#pullrequestreview-368999827", "createdAt": "2020-03-04T18:01:40Z", "commit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODowMTo0MFrOFx3wTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODowMTo0MFrOFx3wTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgzODAzMA==", "bodyText": "it is not good to update block scope local variable from a lambda function, why do we need to loop through the object keys ?\nif it's an object then for sure it's not a $ref ?", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#discussion_r387838030", "createdAt": "2020-03-04T18:01:40Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Resources/operationUtils.js", "diffHunk": "@@ -200,6 +200,24 @@ function isSelectAll(selectedOperations, operations) {\n     }\n     return true;\n }\n+\n+/**\n+ * Check whether the provided object is a Ref object.\n+ *\n+ * @param {object} content : The object that needs to be checked.\n+ * @return {boolean} true if Ref, false otherwise.\n+ * */\n+function isRef(content) {\n+    let isReference = false;\n+    if (typeof content === 'object') {\n+        Object.keys(content).map((name) => {\n+            isReference = name === '$ref';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDAwMDE0", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#pullrequestreview-369000014", "createdAt": "2020-03-04T18:01:58Z", "commit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODowMTo1OFrOFx3w6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODowMTo1OFrOFx3w6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgzODE4Nw==", "bodyText": "no use of this return statement ?\nreturn name;", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#discussion_r387838187", "createdAt": "2020-03-04T18:01:58Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Resources/operationUtils.js", "diffHunk": "@@ -200,6 +200,24 @@ function isSelectAll(selectedOperations, operations) {\n     }\n     return true;\n }\n+\n+/**\n+ * Check whether the provided object is a Ref object.\n+ *\n+ * @param {object} content : The object that needs to be checked.\n+ * @return {boolean} true if Ref, false otherwise.\n+ * */\n+function isRef(content) {\n+    let isReference = false;\n+    if (typeof content === 'object') {\n+        Object.keys(content).map((name) => {\n+            isReference = name === '$ref';\n+            return name;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDAwNDEx", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#pullrequestreview-369000411", "createdAt": "2020-03-04T18:02:36Z", "commit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODowMjozNlrOFx3yBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODowMjozNlrOFx3yBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgzODQ2OQ==", "bodyText": "can't we just check the passed value to $ref ?", "url": "https://github.com/wso2/carbon-apimgt/pull/8272#discussion_r387838469", "createdAt": "2020-03-04T18:02:36Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Resources/operationUtils.js", "diffHunk": "@@ -200,6 +200,24 @@ function isSelectAll(selectedOperations, operations) {\n     }\n     return true;\n }\n+\n+/**\n+ * Check whether the provided object is a Ref object.\n+ *\n+ * @param {object} content : The object that needs to be checked.\n+ * @return {boolean} true if Ref, false otherwise.\n+ * */\n+function isRef(content) {\n+    let isReference = false;\n+    if (typeof content === 'object') {\n+        Object.keys(content).map((name) => {\n+            isReference = name === '$ref';\n+            return name;\n+        });\n+    }\n+    return isReference;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62db219d1ca80d6d81986e375db039236ef5da1"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2941, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}