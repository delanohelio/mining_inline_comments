{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMwNTcwODk3", "number": 8673, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNzoxNDoyMlrOEDUzFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNzoxNDoyMlrOEDUzFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTIxOTQxOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.keymgt/src/main/java/org/wso2/carbon/apimgt/keymgt/model/impl/SubscriptionDataStoreImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNzoxNDoyMlrOGgRrdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNzozMTozMVrOGgSIdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ5NzI2OA==", "bodyText": "I think we only need getter methods for this case. Also we could add a single method to check whether everything is initialized (result of all the boolean values) instead of having separate getter methods.", "url": "https://github.com/wso2/carbon-apimgt/pull/8673#discussion_r436497268", "createdAt": "2020-06-08T07:14:22Z", "author": {"login": "chamilaadhi"}, "path": "components/apimgt/org.wso2.carbon.apimgt.keymgt/src/main/java/org/wso2/carbon/apimgt/keymgt/model/impl/SubscriptionDataStoreImpl.java", "diffHunk": "@@ -250,4 +273,64 @@ public void run() {\n             }\n         }\n     }\n+\n+    public boolean isApisInitialized() {\n+\n+        return apisInitialized;\n+    }\n+\n+    public void setApisInitialized(boolean apisInitialized) {\n+\n+        this.apisInitialized = apisInitialized;\n+    }\n+\n+    public boolean isApplicationsInitialized() {\n+\n+        return applicationsInitialized;\n+    }\n+\n+    public void setApplicationsInitialized(boolean applicationsInitialized) {\n+\n+        this.applicationsInitialized = applicationsInitialized;\n+    }\n+\n+    public boolean isSubscriptionsInitialized() {\n+\n+        return subscriptionsInitialized;\n+    }\n+\n+    public void setSubscriptionsInitialized(boolean subscriptionsInitialized) {\n+\n+        this.subscriptionsInitialized = subscriptionsInitialized;\n+    }\n+\n+    public boolean isApplicationKeysInitialized() {\n+\n+        return applicationKeysInitialized;\n+    }\n+\n+    public void setApplicationKeysInitialized(boolean applicationKeysInitialized) {\n+\n+        this.applicationKeysInitialized = applicationKeysInitialized;\n+    }\n+\n+    public boolean isApplicationPoliciesInitialized() {\n+\n+        return applicationPoliciesInitialized;\n+    }\n+\n+    public void setApplicationPoliciesInitialized(boolean applicationPoliciesInitialized) {\n+\n+        this.applicationPoliciesInitialized = applicationPoliciesInitialized;\n+    }\n+\n+    public boolean isSubscriptionPoliciesInitialized() {\n+\n+        return subscriptionPoliciesInitialized;\n+    }\n+\n+    public void setSubscriptionPoliciesInitialized(boolean subscriptionPoliciesInitialized) {\n+\n+        this.subscriptionPoliciesInitialized = subscriptionPoliciesInitialized;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e40f260d46ecc57d17fdf5e294df6dbdb944ad4"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ5OTkwMA==", "bodyText": "+1", "url": "https://github.com/wso2/carbon-apimgt/pull/8673#discussion_r436499900", "createdAt": "2020-06-08T07:20:46Z", "author": {"login": "isharac"}, "path": "components/apimgt/org.wso2.carbon.apimgt.keymgt/src/main/java/org/wso2/carbon/apimgt/keymgt/model/impl/SubscriptionDataStoreImpl.java", "diffHunk": "@@ -250,4 +273,64 @@ public void run() {\n             }\n         }\n     }\n+\n+    public boolean isApisInitialized() {\n+\n+        return apisInitialized;\n+    }\n+\n+    public void setApisInitialized(boolean apisInitialized) {\n+\n+        this.apisInitialized = apisInitialized;\n+    }\n+\n+    public boolean isApplicationsInitialized() {\n+\n+        return applicationsInitialized;\n+    }\n+\n+    public void setApplicationsInitialized(boolean applicationsInitialized) {\n+\n+        this.applicationsInitialized = applicationsInitialized;\n+    }\n+\n+    public boolean isSubscriptionsInitialized() {\n+\n+        return subscriptionsInitialized;\n+    }\n+\n+    public void setSubscriptionsInitialized(boolean subscriptionsInitialized) {\n+\n+        this.subscriptionsInitialized = subscriptionsInitialized;\n+    }\n+\n+    public boolean isApplicationKeysInitialized() {\n+\n+        return applicationKeysInitialized;\n+    }\n+\n+    public void setApplicationKeysInitialized(boolean applicationKeysInitialized) {\n+\n+        this.applicationKeysInitialized = applicationKeysInitialized;\n+    }\n+\n+    public boolean isApplicationPoliciesInitialized() {\n+\n+        return applicationPoliciesInitialized;\n+    }\n+\n+    public void setApplicationPoliciesInitialized(boolean applicationPoliciesInitialized) {\n+\n+        this.applicationPoliciesInitialized = applicationPoliciesInitialized;\n+    }\n+\n+    public boolean isSubscriptionPoliciesInitialized() {\n+\n+        return subscriptionPoliciesInitialized;\n+    }\n+\n+    public void setSubscriptionPoliciesInitialized(boolean subscriptionPoliciesInitialized) {\n+\n+        this.subscriptionPoliciesInitialized = subscriptionPoliciesInitialized;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ5NzI2OA=="}, "originalCommit": {"oid": "9e40f260d46ecc57d17fdf5e294df6dbdb944ad4"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUwNDY5NA==", "bodyText": "fixed with 41eb399", "url": "https://github.com/wso2/carbon-apimgt/pull/8673#discussion_r436504694", "createdAt": "2020-06-08T07:31:31Z", "author": {"login": "isharac"}, "path": "components/apimgt/org.wso2.carbon.apimgt.keymgt/src/main/java/org/wso2/carbon/apimgt/keymgt/model/impl/SubscriptionDataStoreImpl.java", "diffHunk": "@@ -250,4 +273,64 @@ public void run() {\n             }\n         }\n     }\n+\n+    public boolean isApisInitialized() {\n+\n+        return apisInitialized;\n+    }\n+\n+    public void setApisInitialized(boolean apisInitialized) {\n+\n+        this.apisInitialized = apisInitialized;\n+    }\n+\n+    public boolean isApplicationsInitialized() {\n+\n+        return applicationsInitialized;\n+    }\n+\n+    public void setApplicationsInitialized(boolean applicationsInitialized) {\n+\n+        this.applicationsInitialized = applicationsInitialized;\n+    }\n+\n+    public boolean isSubscriptionsInitialized() {\n+\n+        return subscriptionsInitialized;\n+    }\n+\n+    public void setSubscriptionsInitialized(boolean subscriptionsInitialized) {\n+\n+        this.subscriptionsInitialized = subscriptionsInitialized;\n+    }\n+\n+    public boolean isApplicationKeysInitialized() {\n+\n+        return applicationKeysInitialized;\n+    }\n+\n+    public void setApplicationKeysInitialized(boolean applicationKeysInitialized) {\n+\n+        this.applicationKeysInitialized = applicationKeysInitialized;\n+    }\n+\n+    public boolean isApplicationPoliciesInitialized() {\n+\n+        return applicationPoliciesInitialized;\n+    }\n+\n+    public void setApplicationPoliciesInitialized(boolean applicationPoliciesInitialized) {\n+\n+        this.applicationPoliciesInitialized = applicationPoliciesInitialized;\n+    }\n+\n+    public boolean isSubscriptionPoliciesInitialized() {\n+\n+        return subscriptionPoliciesInitialized;\n+    }\n+\n+    public void setSubscriptionPoliciesInitialized(boolean subscriptionPoliciesInitialized) {\n+\n+        this.subscriptionPoliciesInitialized = subscriptionPoliciesInitialized;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ5NzI2OA=="}, "originalCommit": {"oid": "9e40f260d46ecc57d17fdf5e294df6dbdb944ad4"}, "originalPosition": 147}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3343, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}