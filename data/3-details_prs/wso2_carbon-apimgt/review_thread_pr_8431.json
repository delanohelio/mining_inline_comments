{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4OTM1NTkz", "number": 8431, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwOTowMjoyNFrOELmhLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNjozODoxNlrOEOi_AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNjAwODc2OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwOTowMjoyNFrOGtO6gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNjoxNDoyNVrOGteC3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA4MzQ1Ng==", "bodyText": "Remove empty line", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r450083456", "createdAt": "2020-07-06T09:02:24Z", "author": {"login": "rmsamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -2196,6 +2196,44 @@ private static boolean isWSDL2Resource(byte[] wsdl) throws APIManagementExceptio\n         return wsdlContent.indexOf(wsdl2NameSpace) > 0;\n     }\n \n+    /**\n+     * Get the External IDP host name when UIs use an external IDP for SSO or other purpose\n+     * By default this is equal to $ref{server.base_path} (i:e https://localhost:9443)\n+     *\n+     * @return Origin string of the external IDP\n+     */\n+\n+    public static String getExternalIDPOrigin() throws APIManagementException {\n+\n+        APIManagerConfiguration config = ServiceReferenceHolder.getInstance().\n+                getAPIManagerConfigurationService().getAPIManagerConfiguration();\n+        String idpEndpoint = config.getFirstProperty(APIConstants.IDENTITY_PROVIDER_SERVER_URL);\n+        if (idpEndpoint == null) {\n+            return getServerURL();\n+        } else {\n+            return idpEndpoint;\n+        }\n+    }\n+\n+    /**\n+     * Get the check session URL to load in the session management iframe\n+     *\n+     * @return URL to be used in iframe source for the check session with IDP\n+     */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "327935da157afd232d14aac4278a793f3f4cd045"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzMTM1OQ==", "bodyText": "Fixed with 6578fa6", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r450331359", "createdAt": "2020-07-06T16:14:25Z", "author": {"login": "Meruja"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -2196,6 +2196,44 @@ private static boolean isWSDL2Resource(byte[] wsdl) throws APIManagementExceptio\n         return wsdlContent.indexOf(wsdl2NameSpace) > 0;\n     }\n \n+    /**\n+     * Get the External IDP host name when UIs use an external IDP for SSO or other purpose\n+     * By default this is equal to $ref{server.base_path} (i:e https://localhost:9443)\n+     *\n+     * @return Origin string of the external IDP\n+     */\n+\n+    public static String getExternalIDPOrigin() throws APIManagementException {\n+\n+        APIManagerConfiguration config = ServiceReferenceHolder.getInstance().\n+                getAPIManagerConfigurationService().getAPIManagerConfiguration();\n+        String idpEndpoint = config.getFirstProperty(APIConstants.IDENTITY_PROVIDER_SERVER_URL);\n+        if (idpEndpoint == null) {\n+            return getServerURL();\n+        } else {\n+            return idpEndpoint;\n+        }\n+    }\n+\n+    /**\n+     * Get the check session URL to load in the session management iframe\n+     *\n+     * @return URL to be used in iframe source for the check session with IDP\n+     */\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA4MzQ1Ng=="}, "originalCommit": {"oid": "327935da157afd232d14aac4278a793f3f4cd045"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNjA4MTQ4OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwOToyMjo0NVrOGtPnRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNjoxNDozMFrOGteDJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA5NDkxOA==", "bodyText": "Can we use a constant for \"/oidc/checksession\"", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r450094918", "createdAt": "2020-07-06T09:22:45Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -2196,6 +2196,44 @@ private static boolean isWSDL2Resource(byte[] wsdl) throws APIManagementExceptio\n         return wsdlContent.indexOf(wsdl2NameSpace) > 0;\n     }\n \n+    /**\n+     * Get the External IDP host name when UIs use an external IDP for SSO or other purpose\n+     * By default this is equal to $ref{server.base_path} (i:e https://localhost:9443)\n+     *\n+     * @return Origin string of the external IDP\n+     */\n+\n+    public static String getExternalIDPOrigin() throws APIManagementException {\n+\n+        APIManagerConfiguration config = ServiceReferenceHolder.getInstance().\n+                getAPIManagerConfigurationService().getAPIManagerConfiguration();\n+        String idpEndpoint = config.getFirstProperty(APIConstants.IDENTITY_PROVIDER_SERVER_URL);\n+        if (idpEndpoint == null) {\n+            return getServerURL();\n+        } else {\n+            return idpEndpoint;\n+        }\n+    }\n+\n+    /**\n+     * Get the check session URL to load in the session management iframe\n+     *\n+     * @return URL to be used in iframe source for the check session with IDP\n+     */\n+\n+    public static String getExternalIDPCheckSessionEndpoint() throws APIManagementException {\n+\n+        APIManagerConfiguration config = ServiceReferenceHolder.getInstance().\n+                getAPIManagerConfigurationService().getAPIManagerConfiguration();\n+        String oidcCheckSessionEndpoint = config.getFirstProperty(\n+                APIConstants.IDENTITY_PROVIDER_OIDC_CHECK_SESSION_ENDPOINT);\n+        if (oidcCheckSessionEndpoint == null) {\n+            return getServerURL() + \"/oidc/checksession\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "327935da157afd232d14aac4278a793f3f4cd045"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzMTQyOA==", "bodyText": "Fixed with 6578fa6 & 847da4e", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r450331428", "createdAt": "2020-07-06T16:14:30Z", "author": {"login": "Meruja"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -2196,6 +2196,44 @@ private static boolean isWSDL2Resource(byte[] wsdl) throws APIManagementExceptio\n         return wsdlContent.indexOf(wsdl2NameSpace) > 0;\n     }\n \n+    /**\n+     * Get the External IDP host name when UIs use an external IDP for SSO or other purpose\n+     * By default this is equal to $ref{server.base_path} (i:e https://localhost:9443)\n+     *\n+     * @return Origin string of the external IDP\n+     */\n+\n+    public static String getExternalIDPOrigin() throws APIManagementException {\n+\n+        APIManagerConfiguration config = ServiceReferenceHolder.getInstance().\n+                getAPIManagerConfigurationService().getAPIManagerConfiguration();\n+        String idpEndpoint = config.getFirstProperty(APIConstants.IDENTITY_PROVIDER_SERVER_URL);\n+        if (idpEndpoint == null) {\n+            return getServerURL();\n+        } else {\n+            return idpEndpoint;\n+        }\n+    }\n+\n+    /**\n+     * Get the check session URL to load in the session management iframe\n+     *\n+     * @return URL to be used in iframe source for the check session with IDP\n+     */\n+\n+    public static String getExternalIDPCheckSessionEndpoint() throws APIManagementException {\n+\n+        APIManagerConfiguration config = ServiceReferenceHolder.getInstance().\n+                getAPIManagerConfigurationService().getAPIManagerConfiguration();\n+        String oidcCheckSessionEndpoint = config.getFirstProperty(\n+                APIConstants.IDENTITY_PROVIDER_OIDC_CHECK_SESSION_ENDPOINT);\n+        if (oidcCheckSessionEndpoint == null) {\n+            return getServerURL() + \"/oidc/checksession\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA5NDkxOA=="}, "originalCommit": {"oid": "327935da157afd232d14aac4278a793f3f4cd045"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjg4NDgyOnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/services/utils.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNjozNzozMFrOGxwQ5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNToxNjowOVrOGz4qWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgyNDE2NA==", "bodyText": "Formatting issue", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r454824164", "createdAt": "2020-07-15T06:37:30Z", "author": {"login": "mushthaq33"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/services/utils.js", "diffHunk": "@@ -30,3 +30,11 @@ var getLoopbackOrigin = function() {\n     var origin = 'https://' + app.origin.host + \":\" + mgtTransportPort;\n     return origin; // Unless there is a port offset this is https://localhost:9443\n };\n+\n+function getIDPOrigin(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "327935da157afd232d14aac4278a793f3f4cd045"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA1ODkwNA==", "bodyText": "Fixed with a8a6b41", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r457058904", "createdAt": "2020-07-20T05:16:09Z", "author": {"login": "Meruja"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/services/utils.js", "diffHunk": "@@ -30,3 +30,11 @@ var getLoopbackOrigin = function() {\n     var origin = 'https://' + app.origin.host + \":\" + mgtTransportPort;\n     return origin; // Unless there is a port offset this is https://localhost:9443\n };\n+\n+function getIDPOrigin(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgyNDE2NA=="}, "originalCommit": {"oid": "327935da157afd232d14aac4278a793f3f4cd045"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjg4NTc2OnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/services/utils.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNjozNzo0NVrOGxwRZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNToxNjoyMlrOGz4qvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgyNDI5NQ==", "bodyText": "Formatting issue", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r454824295", "createdAt": "2020-07-15T06:37:45Z", "author": {"login": "mushthaq33"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/services/utils.js", "diffHunk": "@@ -30,3 +30,11 @@ var getLoopbackOrigin = function() {\n     var origin = 'https://' + app.origin.host + \":\" + mgtTransportPort;\n     return origin; // Unless there is a port offset this is https://localhost:9443\n };\n+\n+function getIDPOrigin(){\n+    return utils.getExternalIDPOrigin();\n+}\n+\n+function getIDPCheckSessionEndpoint(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "327935da157afd232d14aac4278a793f3f4cd045"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA1OTAwNw==", "bodyText": "Fixed with a8a6b41", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r457059007", "createdAt": "2020-07-20T05:16:22Z", "author": {"login": "Meruja"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/services/utils.js", "diffHunk": "@@ -30,3 +30,11 @@ var getLoopbackOrigin = function() {\n     var origin = 'https://' + app.origin.host + \":\" + mgtTransportPort;\n     return origin; // Unless there is a port offset this is https://localhost:9443\n };\n+\n+function getIDPOrigin(){\n+    return utils.getExternalIDPOrigin();\n+}\n+\n+function getIDPCheckSessionEndpoint(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgyNDI5NQ=="}, "originalCommit": {"oid": "327935da157afd232d14aac4278a793f3f4cd045"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjg4NjQ0OnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/utils.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNjozODowM1rOGxwR1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNToxNjoyN1rOGz4q6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgyNDQwNQ==", "bodyText": "Formatting issue", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r454824405", "createdAt": "2020-07-15T06:38:03Z", "author": {"login": "mushthaq33"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/utils.js", "diffHunk": "@@ -28,6 +28,14 @@ var getLoopbackOrigin = function() {\n     return origin;\n };\n \n+function getIDPOrigin(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "327935da157afd232d14aac4278a793f3f4cd045"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA1OTA1MA==", "bodyText": "Fixed with a8a6b41", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r457059050", "createdAt": "2020-07-20T05:16:27Z", "author": {"login": "Meruja"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/utils.js", "diffHunk": "@@ -28,6 +28,14 @@ var getLoopbackOrigin = function() {\n     return origin;\n };\n \n+function getIDPOrigin(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgyNDQwNQ=="}, "originalCommit": {"oid": "327935da157afd232d14aac4278a793f3f4cd045"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjg4NzA1OnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/utils.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNjozODoxNlrOGxwSLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNToxNjozMlrOGz4rEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgyNDQ5NQ==", "bodyText": "Formatting issue", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r454824495", "createdAt": "2020-07-15T06:38:16Z", "author": {"login": "mushthaq33"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/utils.js", "diffHunk": "@@ -28,6 +28,14 @@ var getLoopbackOrigin = function() {\n     return origin;\n };\n \n+function getIDPOrigin(){\n+    return utils.getExternalIDPOrigin();\n+}\n+\n+function getIDPCheckSessionEndpoint(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "327935da157afd232d14aac4278a793f3f4cd045"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA1OTA4OA==", "bodyText": "Fixed with a8a6b41", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r457059088", "createdAt": "2020-07-20T05:16:32Z", "author": {"login": "Meruja"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/utils.js", "diffHunk": "@@ -28,6 +28,14 @@ var getLoopbackOrigin = function() {\n     return origin;\n };\n \n+function getIDPOrigin(){\n+    return utils.getExternalIDPOrigin();\n+}\n+\n+function getIDPCheckSessionEndpoint(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgyNDQ5NQ=="}, "originalCommit": {"oid": "327935da157afd232d14aac4278a793f3f4cd045"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2752, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}