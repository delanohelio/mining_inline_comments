{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNzk2NzMx", "number": 8154, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzoyMjoyN1rODe5GxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzoyNjo0OVrODe5NMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzE5NDkzOnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/package.json", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzoyMjoyN1rOFoR-4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNTowMDoxMlrOFoh0Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4MTk4NQ==", "bodyText": "Why we need this library? can't we use document.cookies directly", "url": "https://github.com/wso2/carbon-apimgt/pull/8154#discussion_r377781985", "createdAt": "2020-02-11T17:22:27Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/package.json", "diffHunk": "@@ -32,6 +32,7 @@\n         \"draftjs-to-html\": \"^0.8.4\",\n         \"file-loader\": \"^0.11.2\",\n         \"html-to-draftjs\": \"^1.4.0\",\n+        \"js-cookie\": \"^2.2.1\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "946ecfff0944296af9922c72154f23328641df15"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzNjg3MQ==", "bodyText": "There is a method in ./Utils getCookie() method which return the relevant cookie by using document.cookies, but since it append the environment name to the given name. I'll create a separate method which returns the cookie and use that instead of above library", "url": "https://github.com/wso2/carbon-apimgt/pull/8154#discussion_r378036871", "createdAt": "2020-02-12T04:35:52Z", "author": {"login": "CrowleyRajapakse"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/package.json", "diffHunk": "@@ -32,6 +32,7 @@\n         \"draftjs-to-html\": \"^0.8.4\",\n         \"file-loader\": \"^0.11.2\",\n         \"html-to-draftjs\": \"^1.4.0\",\n+        \"js-cookie\": \"^2.2.1\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4MTk4NQ=="}, "originalCommit": {"oid": "946ecfff0944296af9922c72154f23328641df15"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA0MTQyMw==", "bodyText": "removed the library and resolved the issue", "url": "https://github.com/wso2/carbon-apimgt/pull/8154#discussion_r378041423", "createdAt": "2020-02-12T05:00:12Z", "author": {"login": "CrowleyRajapakse"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/package.json", "diffHunk": "@@ -32,6 +32,7 @@\n         \"draftjs-to-html\": \"^0.8.4\",\n         \"file-loader\": \"^0.11.2\",\n         \"html-to-draftjs\": \"^1.4.0\",\n+        \"js-cookie\": \"^2.2.1\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4MTk4NQ=="}, "originalCommit": {"oid": "946ecfff0944296af9922c72154f23328641df15"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzE5NjgyOnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/package.json", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzoyMjo1N1rOFoSACQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwNTo1Mzo1NFrOFpHyVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4MjI4MQ==", "bodyText": "Why we need a library for adding an iframe to react app?", "url": "https://github.com/wso2/carbon-apimgt/pull/8154#discussion_r377782281", "createdAt": "2020-02-11T17:22:57Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/package.json", "diffHunk": "@@ -52,6 +53,7 @@\n         \"react-dom\": \"^16.10.2\",\n         \"react-draft-wysiwyg\": \"^1.13.2\",\n         \"react-dropzone\": \"^v10.1.7\",\n+        \"react-iframe\": \"^1.8.0\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "946ecfff0944296af9922c72154f23328641df15"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzNzYwMw==", "bodyText": "Otherwise we have to write a separate component to handle the iframe logic. This library seems to handle all that.", "url": "https://github.com/wso2/carbon-apimgt/pull/8154#discussion_r378037603", "createdAt": "2020-02-12T04:39:37Z", "author": {"login": "CrowleyRajapakse"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/package.json", "diffHunk": "@@ -52,6 +53,7 @@\n         \"react-dom\": \"^16.10.2\",\n         \"react-draft-wysiwyg\": \"^1.13.2\",\n         \"react-dropzone\": \"^v10.1.7\",\n+        \"react-iframe\": \"^1.8.0\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4MjI4MQ=="}, "originalCommit": {"oid": "946ecfff0944296af9922c72154f23328641df15"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY2MzUxMQ==", "bodyText": "removed the react-iframe library", "url": "https://github.com/wso2/carbon-apimgt/pull/8154#discussion_r378663511", "createdAt": "2020-02-13T05:53:54Z", "author": {"login": "CrowleyRajapakse"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/package.json", "diffHunk": "@@ -52,6 +53,7 @@\n         \"react-dom\": \"^16.10.2\",\n         \"react-draft-wysiwyg\": \"^1.13.2\",\n         \"react-dropzone\": \"^v10.1.7\",\n+        \"react-iframe\": \"^1.8.0\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4MjI4MQ=="}, "originalCommit": {"oid": "946ecfff0944296af9922c72154f23328641df15"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzIxMTM5OnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/ProtectedApp.jsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzoyNjo0OVrOFoSJJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNDo1NTo0MlrOFohw6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4NDYxNA==", "bodyText": "I think these should be accessed via the User interface", "url": "https://github.com/wso2/carbon-apimgt/pull/8154#discussion_r377784614", "createdAt": "2020-02-11T17:26:49Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/ProtectedApp.jsx", "diffHunk": "@@ -63,8 +67,13 @@ export default class Protected extends Component {\n         super(props);\n         this.state = {\n             settings: null,\n+            clientId: Cookies.get(User.CONST.PUBLISHER_CLIENT_ID),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "946ecfff0944296af9922c72154f23328641df15"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc5ODQ1NA==", "bodyText": "for example User.getClientID otherwise managing, especially clearing these cookie stores would be hard,", "url": "https://github.com/wso2/carbon-apimgt/pull/8154#discussion_r377798454", "createdAt": "2020-02-11T17:52:47Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/ProtectedApp.jsx", "diffHunk": "@@ -63,8 +67,13 @@ export default class Protected extends Component {\n         super(props);\n         this.state = {\n             settings: null,\n+            clientId: Cookies.get(User.CONST.PUBLISHER_CLIENT_ID),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4NDYxNA=="}, "originalCommit": {"oid": "946ecfff0944296af9922c72154f23328641df15"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA0MDU1Mg==", "bodyText": "These cookies are created in the login_callback.jag and stored indefinitely in the browser, CLIENT_ID cookie value doesn't change often but session_state cookie will be changed after every logout/login. So these cookies are managed by the login and logout process. I've now changed the retrieval of cookies as follows,\n  clientId: Utils.getCookieWithoutEnvironment(User.CONST.PUBLISHER_CLIENT_ID), sessionStateCookie:Utils.getCookieWithoutEnvironment(User.CONST.PUBLISHER_SESSION_STATE),", "url": "https://github.com/wso2/carbon-apimgt/pull/8154#discussion_r378040552", "createdAt": "2020-02-12T04:55:42Z", "author": {"login": "CrowleyRajapakse"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/ProtectedApp.jsx", "diffHunk": "@@ -63,8 +67,13 @@ export default class Protected extends Component {\n         super(props);\n         this.state = {\n             settings: null,\n+            clientId: Cookies.get(User.CONST.PUBLISHER_CLIENT_ID),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4NDYxNA=="}, "originalCommit": {"oid": "946ecfff0944296af9922c72154f23328641df15"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2848, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}