{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0OTMzNDk1", "number": 8413, "title": "Message Fix Fix Mediation Policies (xml_validator) failing with Global Mediation Extensions with FULL log", "bodyText": "Fixes #8411", "createdAt": "2020-04-17T05:43:26Z", "url": "https://github.com/wso2/carbon-apimgt/pull/8413", "merged": true, "mergeCommit": {"oid": "a8e03bb30df2b8a4a343ed4f743488df0dd7ff3f"}, "closed": true, "closedAt": "2020-04-17T05:59:29Z", "author": {"login": "Sarangan0219"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYamiCgH2gAyNDA0OTMzNDk1OmNkMmUyNjMyNDg0MjFlYWJkY2ZjYmIxYjE2MjI5ZDRlNjA2ZGExYjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNgv0xgFqTQ5ODA5MjMwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cd2e263248421eabdcfcbb1b16229d4e606da1b8", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/cd2e263248421eabdcfcbb1b16229d4e606da1b8", "committedDate": "2020-04-17T05:39:53Z", "message": "fix null inputstream when log full"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MTc5NzYy", "url": "https://github.com/wso2/carbon-apimgt/pull/8413#pullrequestreview-395179762", "createdAt": "2020-04-17T05:59:22Z", "commit": {"oid": "cd2e263248421eabdcfcbb1b16229d4e606da1b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MDkyMjQx", "url": "https://github.com/wso2/carbon-apimgt/pull/8413#pullrequestreview-498092241", "createdAt": "2020-09-29T04:47:12Z", "commit": {"oid": "cd2e263248421eabdcfcbb1b16229d4e606da1b8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNDo0NzoxM1rOHZZb_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNDo0NzoxM1rOHZZb_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM5MzIxNA==", "bodyText": "Shall we fix the formatting issue here?", "url": "https://github.com/wso2/carbon-apimgt/pull/8413#discussion_r496393214", "createdAt": "2020-09-29T04:47:13Z", "author": {"login": "npamudika"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/utils/GatewayUtils.java", "diffHunk": "@@ -422,24 +423,38 @@ public static boolean handleThreat(org.apache.synapse.MessageContext messageCont\n         if (pipe != null) {\n             bufferedInputStream = new BufferedInputStream(pipe.getInputStream());\n         }\n+        inputStreamMap = new HashMap<>();\n+        String contentType = axis2MC.getProperty(ThreatProtectorConstants.CONTENT_TYPE).toString();\n+\n         if (bufferedInputStream != null) {\n-            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n-            byte[] buffer = new byte[requestBufferSize];\n-            int length;\n-            while ((length = bufferedInputStream.read(buffer)) > -1) {\n-                byteArrayOutputStream.write(buffer, 0, length);\n+            bufferedInputStream.mark(0);\n+            if (bufferedInputStream.read() != -1){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd2e263248421eabdcfcbb1b16229d4e606da1b8"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MDkyMzAy", "url": "https://github.com/wso2/carbon-apimgt/pull/8413#pullrequestreview-498092302", "createdAt": "2020-09-29T04:47:27Z", "commit": {"oid": "cd2e263248421eabdcfcbb1b16229d4e606da1b8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNDo0NzoyN1rOHZZctA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNDo0NzoyN1rOHZZctA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM5MzM5Ng==", "bodyText": "Shall we fix the formatting issue here?", "url": "https://github.com/wso2/carbon-apimgt/pull/8413#discussion_r496393396", "createdAt": "2020-09-29T04:47:27Z", "author": {"login": "npamudika"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/utils/GatewayUtils.java", "diffHunk": "@@ -422,24 +423,38 @@ public static boolean handleThreat(org.apache.synapse.MessageContext messageCont\n         if (pipe != null) {\n             bufferedInputStream = new BufferedInputStream(pipe.getInputStream());\n         }\n+        inputStreamMap = new HashMap<>();\n+        String contentType = axis2MC.getProperty(ThreatProtectorConstants.CONTENT_TYPE).toString();\n+\n         if (bufferedInputStream != null) {\n-            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n-            byte[] buffer = new byte[requestBufferSize];\n-            int length;\n-            while ((length = bufferedInputStream.read(buffer)) > -1) {\n-                byteArrayOutputStream.write(buffer, 0, length);\n+            bufferedInputStream.mark(0);\n+            if (bufferedInputStream.read() != -1){\n+                bufferedInputStream.reset();\n+                ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n+                byte[] buffer = new byte[requestBufferSize];\n+                int length;\n+                while ((length = bufferedInputStream.read(buffer)) > -1) {\n+                    byteArrayOutputStream.write(buffer, 0, length);\n+                }\n+                byteArrayOutputStream.flush();\n+                inputStreamSchema = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());\n+                inputStreamXml = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());\n+                inputStreamOriginal = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());\n+                inputStreamJSON = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());\n+            } else {\n+                String payload;\n+                if (ThreatProtectorConstants.APPLICATION_JSON.equals(contentType)){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd2e263248421eabdcfcbb1b16229d4e606da1b8"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2894, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}