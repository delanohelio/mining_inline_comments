{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMTc0MTE2", "number": 8276, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNToyMzowOVrODkJbfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNToyMzowOVrODkJbfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MjI5ODIyOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.keymgt/src/main/java/org/wso2/carbon/apimgt/keymgt/token/ExtendedJWTBearerGrantHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNToyMzowOVrOFwT5sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNToyNzoxN1rOFwT8kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIwMjAzMw==", "bodyText": "120 character limit exceeds. Please fix in other places as well.", "url": "https://github.com/wso2/carbon-apimgt/pull/8276#discussion_r386202033", "createdAt": "2020-03-02T05:23:09Z", "author": {"login": "menakaj"}, "path": "components/apimgt/org.wso2.carbon.apimgt.keymgt/src/main/java/org/wso2/carbon/apimgt/keymgt/token/ExtendedJWTBearerGrantHandler.java", "diffHunk": "@@ -107,6 +119,26 @@\n         return ScopesIssuer.getInstance().setScopes(tokReqMsgCtx);\n     }\n \n+    private IdentityProvider getResidentIDPForIssuer(String tenantDomain, String jwtIssuer) throws IdentityOAuth2Exception {\n+        String issuer = \"\";\n+\n+        IdentityProvider residentIdentityProvider;\n+        try {\n+            residentIdentityProvider = IdentityProviderManager.getInstance().getResidentIdP(tenantDomain);\n+        } catch (IdentityProviderManagementException var7) {\n+            String errorMsg = String.format(\"Error while getting Resident Identity Provider of '%s' tenant.\", tenantDomain);\n+            throw new IdentityOAuth2Exception(errorMsg, var7);\n+        }\n+\n+        FederatedAuthenticatorConfig[] fedAuthnConfigs = residentIdentityProvider.getFederatedAuthenticatorConfigs();\n+        FederatedAuthenticatorConfig oauthAuthenticatorConfig = IdentityApplicationManagementUtil.getFederatedAuthenticator(fedAuthnConfigs, \"openidconnect\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ca6819057dffc2477e9d01d1385fa3a58e7170"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIwMjc3MA==", "bodyText": "resolved", "url": "https://github.com/wso2/carbon-apimgt/pull/8276#discussion_r386202770", "createdAt": "2020-03-02T05:27:17Z", "author": {"login": "CrowleyRajapakse"}, "path": "components/apimgt/org.wso2.carbon.apimgt.keymgt/src/main/java/org/wso2/carbon/apimgt/keymgt/token/ExtendedJWTBearerGrantHandler.java", "diffHunk": "@@ -107,6 +119,26 @@\n         return ScopesIssuer.getInstance().setScopes(tokReqMsgCtx);\n     }\n \n+    private IdentityProvider getResidentIDPForIssuer(String tenantDomain, String jwtIssuer) throws IdentityOAuth2Exception {\n+        String issuer = \"\";\n+\n+        IdentityProvider residentIdentityProvider;\n+        try {\n+            residentIdentityProvider = IdentityProviderManager.getInstance().getResidentIdP(tenantDomain);\n+        } catch (IdentityProviderManagementException var7) {\n+            String errorMsg = String.format(\"Error while getting Resident Identity Provider of '%s' tenant.\", tenantDomain);\n+            throw new IdentityOAuth2Exception(errorMsg, var7);\n+        }\n+\n+        FederatedAuthenticatorConfig[] fedAuthnConfigs = residentIdentityProvider.getFederatedAuthenticatorConfigs();\n+        FederatedAuthenticatorConfig oauthAuthenticatorConfig = IdentityApplicationManagementUtil.getFederatedAuthenticator(fedAuthnConfigs, \"openidconnect\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIwMjAzMw=="}, "originalCommit": {"oid": "c2ca6819057dffc2477e9d01d1385fa3a58e7170"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2803, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}