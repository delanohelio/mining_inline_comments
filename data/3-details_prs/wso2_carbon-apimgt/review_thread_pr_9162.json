{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NzE1MDU4", "number": 9162, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMTo0NTowMVrOEXluww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMTo1MDozN1rOEXl1Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTcwODgzOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMTo0NTowMVrOG_dkRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMjo0MTowMFrOG_ffNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE5Nzg5Mw==", "bodyText": "StringUtils.isnotempty", "url": "https://github.com/wso2/carbon-apimgt/pull/9162#discussion_r469197893", "createdAt": "2020-08-12T11:45:01Z", "author": {"login": "tharindu1st"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java", "diffHunk": "@@ -71,7 +72,7 @@ public boolean deployAPI(String apiId, String gatewayLabel) throws  ArtifactSync\n                 try {\n                     String gatewayRuntimeArtifact = artifactRetriever.retrieveArtifact(apiId, gatewayLabel,\n                             APIConstants.GatewayArtifactSynchronizer.GATEWAY_INSTRUCTION_PUBLISH);\n-                    if (gatewayRuntimeArtifact != null) {\n+                    if (!StringUtils.isEmpty(gatewayRuntimeArtifact)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2db26d21d670ee9ff7ae5ec990864f34ff7d02cb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIyOTM2NQ==", "bodyText": "Fixed f1fefa5", "url": "https://github.com/wso2/carbon-apimgt/pull/9162#discussion_r469229365", "createdAt": "2020-08-12T12:41:00Z", "author": {"login": "1akshitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java", "diffHunk": "@@ -71,7 +72,7 @@ public boolean deployAPI(String apiId, String gatewayLabel) throws  ArtifactSync\n                 try {\n                     String gatewayRuntimeArtifact = artifactRetriever.retrieveArtifact(apiId, gatewayLabel,\n                             APIConstants.GatewayArtifactSynchronizer.GATEWAY_INSTRUCTION_PUBLISH);\n-                    if (gatewayRuntimeArtifact != null) {\n+                    if (!StringUtils.isEmpty(gatewayRuntimeArtifact)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE5Nzg5Mw=="}, "originalCommit": {"oid": "2db26d21d670ee9ff7ae5ec990864f34ff7d02cb"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTcxMDc1OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMTo0NTozOFrOG_dlcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMjo0MTozMlrOG_fgdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE5ODE5NQ==", "bodyText": "fix variable naming and same goes here", "url": "https://github.com/wso2/carbon-apimgt/pull/9162#discussion_r469198195", "createdAt": "2020-08-12T11:45:38Z", "author": {"login": "tharindu1st"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java", "diffHunk": "@@ -120,19 +121,20 @@ public boolean deployAllAPIsAtGatewayStartup (Set<String> assignedGatewayLabels)\n                         for (String APIruntimeArtifact :gatewayRuntimeArtifacts){\n                             GatewayAPIDTO gatewayAPIDTO = null;\n                             try {\n-                                if (APIruntimeArtifact != null) {\n+                                if (!StringUtils.isEmpty(APIruntimeArtifact)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2db26d21d670ee9ff7ae5ec990864f34ff7d02cb"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIyOTY4Nw==", "bodyText": "Fixed f1fefa5", "url": "https://github.com/wso2/carbon-apimgt/pull/9162#discussion_r469229687", "createdAt": "2020-08-12T12:41:32Z", "author": {"login": "1akshitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java", "diffHunk": "@@ -120,19 +121,20 @@ public boolean deployAllAPIsAtGatewayStartup (Set<String> assignedGatewayLabels)\n                         for (String APIruntimeArtifact :gatewayRuntimeArtifacts){\n                             GatewayAPIDTO gatewayAPIDTO = null;\n                             try {\n-                                if (APIruntimeArtifact != null) {\n+                                if (!StringUtils.isEmpty(APIruntimeArtifact)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE5ODE5NQ=="}, "originalCommit": {"oid": "2db26d21d670ee9ff7ae5ec990864f34ff7d02cb"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTcyMzY1OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/gatewayartifactsynchronizer/DBRetriever.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMTo1MDowMFrOG_dthQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMTo1MzoyOVrOG_dz3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIwMDI2MQ==", "bodyText": "JSONArrray", "url": "https://github.com/wso2/carbon-apimgt/pull/9162#discussion_r469200261", "createdAt": "2020-08-12T11:50:00Z", "author": {"login": "tharindu1st"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/gatewayartifactsynchronizer/DBRetriever.java", "diffHunk": "@@ -143,9 +148,26 @@ public String retrieveArtifact(String APIId, String gatewayLabel, String gateway\n                 throw new ArtifactSynchronizerException(\"HTTP response is empty\");\n             }\n             Map <String, String> apiAttribute = new HashMap<>();\n+\n             JSONObject artifactObject = new JSONObject(responseString);\n-            String apiId = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.API_ID);\n-            String label = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.LABEL);\n+            String label = null;\n+            String apiId = null;\n+            try {\n+                apiId = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.API_ID);\n+                String labelsStr = artifactObject.get(APIConstants.GatewayArtifactSynchronizer.LABELS).toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2db26d21d670ee9ff7ae5ec990864f34ff7d02cb"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIwMTg4Nw==", "bodyText": "Converting the JSONArray to set to get the intercept of two sets.", "url": "https://github.com/wso2/carbon-apimgt/pull/9162#discussion_r469201887", "createdAt": "2020-08-12T11:53:29Z", "author": {"login": "1akshitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/gatewayartifactsynchronizer/DBRetriever.java", "diffHunk": "@@ -143,9 +148,26 @@ public String retrieveArtifact(String APIId, String gatewayLabel, String gateway\n                 throw new ArtifactSynchronizerException(\"HTTP response is empty\");\n             }\n             Map <String, String> apiAttribute = new HashMap<>();\n+\n             JSONObject artifactObject = new JSONObject(responseString);\n-            String apiId = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.API_ID);\n-            String label = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.LABEL);\n+            String label = null;\n+            String apiId = null;\n+            try {\n+                apiId = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.API_ID);\n+                String labelsStr = artifactObject.get(APIConstants.GatewayArtifactSynchronizer.LABELS).toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIwMDI2MQ=="}, "originalCommit": {"oid": "2db26d21d670ee9ff7ae5ec990864f34ff7d02cb"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTcyNTQ3OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/gatewayartifactsynchronizer/DBRetriever.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMTo1MDozN1rOG_dumA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMjo0MTo0NFrOG_fg3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIwMDUzNg==", "bodyText": "can't we catch specific exception", "url": "https://github.com/wso2/carbon-apimgt/pull/9162#discussion_r469200536", "createdAt": "2020-08-12T11:50:37Z", "author": {"login": "tharindu1st"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/gatewayartifactsynchronizer/DBRetriever.java", "diffHunk": "@@ -143,9 +148,26 @@ public String retrieveArtifact(String APIId, String gatewayLabel, String gateway\n                 throw new ArtifactSynchronizerException(\"HTTP response is empty\");\n             }\n             Map <String, String> apiAttribute = new HashMap<>();\n+\n             JSONObject artifactObject = new JSONObject(responseString);\n-            String apiId = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.API_ID);\n-            String label = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.LABEL);\n+            String label = null;\n+            String apiId = null;\n+            try {\n+                apiId = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.API_ID);\n+                String labelsStr = artifactObject.get(APIConstants.GatewayArtifactSynchronizer.LABELS).toString();\n+\n+                Set<String> labelsSet = new Gson().fromJson(labelsStr, new TypeToken<HashSet<String>>(){}.getType());\n+                Set<String> gatewaySubscribedLabel = gatewayArtifactSynchronizerProperties.getGatewayLabels();\n+                if (!labelsSet.isEmpty() || !gatewaySubscribedLabel.isEmpty()){\n+                    labelsSet.retainAll(gatewaySubscribedLabel);\n+                    if (!labelsSet.isEmpty()){\n+                        label = labelsSet.iterator().next();\n+                    }\n+                }\n+            } catch (Exception e ){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2db26d21d670ee9ff7ae5ec990864f34ff7d02cb"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIyOTc5MQ==", "bodyText": "Fixed f1fefa5", "url": "https://github.com/wso2/carbon-apimgt/pull/9162#discussion_r469229791", "createdAt": "2020-08-12T12:41:44Z", "author": {"login": "1akshitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/gatewayartifactsynchronizer/DBRetriever.java", "diffHunk": "@@ -143,9 +148,26 @@ public String retrieveArtifact(String APIId, String gatewayLabel, String gateway\n                 throw new ArtifactSynchronizerException(\"HTTP response is empty\");\n             }\n             Map <String, String> apiAttribute = new HashMap<>();\n+\n             JSONObject artifactObject = new JSONObject(responseString);\n-            String apiId = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.API_ID);\n-            String label = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.LABEL);\n+            String label = null;\n+            String apiId = null;\n+            try {\n+                apiId = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.API_ID);\n+                String labelsStr = artifactObject.get(APIConstants.GatewayArtifactSynchronizer.LABELS).toString();\n+\n+                Set<String> labelsSet = new Gson().fromJson(labelsStr, new TypeToken<HashSet<String>>(){}.getType());\n+                Set<String> gatewaySubscribedLabel = gatewayArtifactSynchronizerProperties.getGatewayLabels();\n+                if (!labelsSet.isEmpty() || !gatewaySubscribedLabel.isEmpty()){\n+                    labelsSet.retainAll(gatewaySubscribedLabel);\n+                    if (!labelsSet.isEmpty()){\n+                        label = labelsSet.iterator().next();\n+                    }\n+                }\n+            } catch (Exception e ){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIwMDUzNg=="}, "originalCommit": {"oid": "2db26d21d670ee9ff7ae5ec990864f34ff7d02cb"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3069, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}