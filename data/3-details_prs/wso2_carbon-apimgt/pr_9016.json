{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NjUyNjA3", "number": 9016, "title": "Configure the ability to add event waiting time in gateway", "bodyText": "Purpose\nRelated to wso2/product-apim#8246\nApproach\n\nThis PR adds a new config of event_waiting_time. Gateway will wait for the time specified in this config after receiving an event. This is to ensure that DB retrieval is not ahead of DB updates thereby avoiding inconsistencies.\nResolves issues in data_retrieval_mode config.\nResolves issues in deployment_retry_duration config.", "createdAt": "2020-07-21T17:44:12Z", "url": "https://github.com/wso2/carbon-apimgt/pull/9016", "merged": true, "mergeCommit": {"oid": "fe47f7857e2c7fa9ae7a1fcb152fe54bb6402e03"}, "closed": true, "closedAt": "2020-07-22T17:19:47Z", "author": {"login": "Sarangan0219"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3Jn-2AH2gAyNDU0NjUyNjA3OjJhOWRiZGMwMzRmYjM5MDBhNDliZTkwZjUzMGFhNmE4N2MyZGFhODE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdobJFfAFqTU1NjYxNDY5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2a9dbdc034fb3900a49be90f530aa6a87c2daa81", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/2a9dbdc034fb3900a49be90f530aa6a87c2daa81", "committedDate": "2020-07-21T17:24:44Z", "message": "Adding event waiting time config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8527c2a75748030c8bc767fece1edd411c31248d", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/8527c2a75748030c8bc767fece1edd411c31248d", "committedDate": "2020-07-22T07:05:54Z", "message": "Resolve typos in configs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d404668c3c8f8833721536e301404a4dccddf7c5", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/d404668c3c8f8833721536e301404a4dccddf7c5", "committedDate": "2020-07-22T07:14:10Z", "message": "using a scheduler for retrival"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea85ae9ada4fa3072b56a52f091a1808916a5834", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/ea85ae9ada4fa3072b56a52f091a1808916a5834", "committedDate": "2020-07-22T07:34:04Z", "message": "Update the default waiting time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47d790b739bb69f607230509a18f052222948de5", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/47d790b739bb69f607230509a18f052222948de5", "committedDate": "2020-07-22T07:42:23Z", "message": "Refractor methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMjczNjg1", "url": "https://github.com/wso2/carbon-apimgt/pull/9016#pullrequestreview-453273685", "createdAt": "2020-07-22T12:36:37Z", "commit": {"oid": "47d790b739bb69f607230509a18f052222948de5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMzQwMTI2", "url": "https://github.com/wso2/carbon-apimgt/pull/9016#pullrequestreview-453340126", "createdAt": "2020-07-22T13:53:49Z", "commit": {"oid": "47d790b739bb69f607230509a18f052222948de5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMzo1Mzo1MFrOG1jfiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMzo1Mzo1MFrOG1jfiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgwOTIyNw==", "bodyText": "I think putting it this way would make each and every event handled in a different thread. And be started with a delay. Can we only start a task when an API is need to be deployed.", "url": "https://github.com/wso2/carbon-apimgt/pull/9016#discussion_r458809227", "createdAt": "2020-07-22T13:53:50Z", "author": {"login": "jaadds"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayJMSMessageListener.java", "diffHunk": "@@ -81,9 +84,18 @@ public void onMessage(Message message) {\n                              * timestamp - system time of the event published\n                              * event - event data\n                              */\n-                            handleNotificationMessage((String) map.get(APIConstants.EVENT_TYPE),\n-                                    (Long) map.get(APIConstants.EVENT_TIMESTAMP),\n-                                    (String) map.get(APIConstants.EVENT_PAYLOAD));\n+\n+                            ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);\n+                            final Runnable task = new Runnable() {\n+                                @Override\n+                                public void run() {\n+                                    handleNotificationMessage((String) map.get(APIConstants.EVENT_TYPE),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47d790b739bb69f607230509a18f052222948de5"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67da6203b4479b5838882a8416f61db2eb3af7fe", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/67da6203b4479b5838882a8416f61db2eb3af7fe", "committedDate": "2020-07-22T15:02:15Z", "message": "Refractor code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa5f3d322b17eb81e215ad275adf9caff43984f3", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/aa5f3d322b17eb81e215ad275adf9caff43984f3", "committedDate": "2020-07-22T16:17:08Z", "message": "Spawn new threads for deploy and undeploy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTA5ODI4", "url": "https://github.com/wso2/carbon-apimgt/pull/9016#pullrequestreview-453509828", "createdAt": "2020-07-22T16:57:02Z", "commit": {"oid": "aa5f3d322b17eb81e215ad275adf9caff43984f3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjo1NzowMlrOG1roXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjo1NzowMlrOG1roXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk0MjU1OA==", "bodyText": "Make this a constant.", "url": "https://github.com/wso2/carbon-apimgt/pull/9016#discussion_r458942558", "createdAt": "2020-07-22T16:57:02Z", "author": {"login": "jaadds"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayJMSMessageListener.java", "diffHunk": "@@ -55,6 +58,7 @@\n     private InMemoryAPIDeployer inMemoryApiDeployer = new InMemoryAPIDeployer();\n     GatewayArtifactSynchronizerProperties gatewayArtifactSynchronizerProperties = ServiceReferenceHolder\n             .getInstance().getAPIManagerConfiguration().getGatewayArtifactSynchronizerProperties();\n+    ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa5f3d322b17eb81e215ad275adf9caff43984f3"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "804a25d93996ba4970ca022d2b9238d9648ca53a", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/804a25d93996ba4970ca022d2b9238d9648ca53a", "committedDate": "2020-07-22T16:57:22Z", "message": "resolve merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e8ba5419c5fc20d7981d5a593400c8ceecf9d2b", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/5e8ba5419c5fc20d7981d5a593400c8ceecf9d2b", "committedDate": "2020-07-22T16:59:06Z", "message": "refractor code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTEzMjk4", "url": "https://github.com/wso2/carbon-apimgt/pull/9016#pullrequestreview-453513298", "createdAt": "2020-07-22T17:01:32Z", "commit": {"oid": "aa5f3d322b17eb81e215ad275adf9caff43984f3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzowMTozMlrOG1rzWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzowMTozMlrOG1rzWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk0NTM2OA==", "bodyText": "As a practice give a name to Threads in the thread pool. So use the override of newScheduledThreadPool which accepts a ThreadFactory, and use it to give a name.", "url": "https://github.com/wso2/carbon-apimgt/pull/9016#discussion_r458945368", "createdAt": "2020-07-22T17:01:32Z", "author": {"login": "jaadds"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayJMSMessageListener.java", "diffHunk": "@@ -55,6 +58,7 @@\n     private InMemoryAPIDeployer inMemoryApiDeployer = new InMemoryAPIDeployer();\n     GatewayArtifactSynchronizerProperties gatewayArtifactSynchronizerProperties = ServiceReferenceHolder\n             .getInstance().getAPIManagerConfiguration().getGatewayArtifactSynchronizerProperties();\n+    ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa5f3d322b17eb81e215ad275adf9caff43984f3"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTE0NzE1", "url": "https://github.com/wso2/carbon-apimgt/pull/9016#pullrequestreview-453514715", "createdAt": "2020-07-22T17:03:23Z", "commit": {"oid": "aa5f3d322b17eb81e215ad275adf9caff43984f3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzowMzoyM1rOG1r3nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzowMzoyM1rOG1r3nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk0NjQ2MQ==", "bodyText": "Log the exception here.", "url": "https://github.com/wso2/carbon-apimgt/pull/9016#discussion_r458946461", "createdAt": "2020-07-22T17:03:23Z", "author": {"login": "jaadds"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/gatewayartifactsynchronizer/DBRetriever.java", "diffHunk": "@@ -60,6 +64,11 @@ public void init() throws ArtifactSynchronizerException {\n     public String retrieveArtifact(String APIId, String gatewayLabel, String gatewayInstruction)\n             throws ArtifactSynchronizerException {\n         CloseableHttpResponse httpResponse = null;\n+        try {\n+            Thread.sleep(gatewayArtifactSynchronizerProperties.getEventWaitingTime());\n+        } catch (InterruptedException e) {\n+            // Ignore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa5f3d322b17eb81e215ad275adf9caff43984f3"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTE2NDQx", "url": "https://github.com/wso2/carbon-apimgt/pull/9016#pullrequestreview-453516441", "createdAt": "2020-07-22T17:05:41Z", "commit": {"oid": "aa5f3d322b17eb81e215ad275adf9caff43984f3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzowNTo0MVrOG1r9Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzowNTo0MVrOG1r9Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk0Nzg1MA==", "bodyText": "Add a meaningful debug log correlating EventId, APIName and other useful details in the event.", "url": "https://github.com/wso2/carbon-apimgt/pull/9016#discussion_r458947850", "createdAt": "2020-07-22T17:05:41Z", "author": {"login": "jaadds"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayJMSMessageListener.java", "diffHunk": "@@ -111,12 +114,24 @@ private void handleNotificationMessage(String eventType, long timestamp, String\n             gatewayEvent.getGatewayLabels().retainAll(gatewayArtifactSynchronizerProperties.getGatewayLabels());\n             if (!gatewayEvent.getGatewayLabels().isEmpty()) {\n                 String gatewayLabel = gatewayEvent.getGatewayLabels().iterator().next();\n+                Runnable task = null;\n                 if (APIConstants.EventType.DEPLOY_API_IN_GATEWAY.name().equals(eventType)) {\n-                    inMemoryApiDeployer.deployAPI(gatewayEvent.getApiId(), gatewayLabel);\n+                    task = new Runnable() {\n+                        @Override\n+                        public void run() {\n+                            inMemoryApiDeployer.deployAPI(gatewayEvent.getApiId(), gatewayLabel);\n+                        }\n+                    };\n                 } else if (APIConstants.EventType.REMOVE_API_FROM_GATEWAY.name().equals(eventType)) {\n-                    inMemoryApiDeployer.unDeployAPI(gatewayEvent.getApiId(), gatewayLabel);\n-                }\n+                    task = new Runnable() {\n+                        @Override\n+                        public void run() {\n+                            inMemoryApiDeployer.unDeployAPI(gatewayEvent.getApiId(), gatewayLabel);\n+                        }\n+                    };\n                 }\n+                scheduler.schedule(task, 1, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa5f3d322b17eb81e215ad275adf9caff43984f3"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb95666b85e9ca2fe650f54b212bcdce5d06008f", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/bb95666b85e9ca2fe650f54b212bcdce5d06008f", "committedDate": "2020-07-22T17:09:49Z", "message": "address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTI1MTMx", "url": "https://github.com/wso2/carbon-apimgt/pull/9016#pullrequestreview-453525131", "createdAt": "2020-07-22T17:17:05Z", "commit": {"oid": "bb95666b85e9ca2fe650f54b212bcdce5d06008f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NjE0Njk5", "url": "https://github.com/wso2/carbon-apimgt/pull/9016#pullrequestreview-556614699", "createdAt": "2020-12-21T19:31:33Z", "commit": {"oid": "bb95666b85e9ca2fe650f54b212bcdce5d06008f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxOTozMTozM1rOIJjhpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxOTozMTozM1rOIJjhpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg5MDE0OA==", "bodyText": "Don't we have to include context information in the error log? ie: API id", "url": "https://github.com/wso2/carbon-apimgt/pull/9016#discussion_r546890148", "createdAt": "2020-12-21T19:31:33Z", "author": {"login": "tgtshanika"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayJMSMessageListener.java", "diffHunk": "@@ -111,24 +114,39 @@ private void handleNotificationMessage(String eventType, long timestamp, String\n         if ((APIConstants.EventType.DEPLOY_API_IN_GATEWAY.name().equals(eventType)\n                 || APIConstants.EventType.REMOVE_API_FROM_GATEWAY.name().equals(eventType))\n                 && gatewayArtifactSynchronizerProperties.isRetrieveFromStorageEnabled()) {\n-            DeployAPIInGatewayEvent gatewayEvent = new Gson().fromJson(new String(eventDecoded),\n-                    DeployAPIInGatewayEvent.class);\n+            DeployAPIInGatewayEvent gatewayEvent = new Gson().fromJson(new String(eventDecoded), DeployAPIInGatewayEvent.class);\n             gatewayEvent.getGatewayLabels().retainAll(gatewayArtifactSynchronizerProperties.getGatewayLabels());\n             if (!gatewayEvent.getGatewayLabels().isEmpty()) {\n                 String gatewayLabel = gatewayEvent.getGatewayLabels().iterator().next();\n-                try {\n-                    if (APIConstants.EventType.DEPLOY_API_IN_GATEWAY.name().equals(eventType)) {\n-                        inMemoryApiDeployer.deployAPI(gatewayEvent.getApiId(), gatewayLabel);\n-                        if (debugEnabled) {\n-                            log.debug(gatewayEvent.getEventId() + \" processed and deployed in gateway\");\n+                Runnable task = null;\n+                if (APIConstants.EventType.DEPLOY_API_IN_GATEWAY.name().equals(eventType)) {\n+                    task = new Runnable() {\n+\n+                        @Override public void run() {\n+                            try {\n+                                inMemoryApiDeployer.deployAPI(gatewayEvent.getApiId(), gatewayLabel);\n+                            } catch (ArtifactSynchronizerException e) {\n+                                log.error(\"Error in deploying artifacts\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb95666b85e9ca2fe650f54b212bcdce5d06008f"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2592, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}