{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxODkyNDE3", "number": 9261, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNTo0ODoyNFrOE-gRoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNTo0ODoyNFrOE-gRoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzOTc1OTY5OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ScopesDAO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNTo0ODoyNFrOH7sr_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNTo0ODoyNFrOH7sr_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM2MDE4OQ==", "bodyText": "formatting issue\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        }finally {\n          \n          \n            \n                        } finally {", "url": "https://github.com/wso2/carbon-apimgt/pull/9261#discussion_r532360189", "createdAt": "2020-11-30T05:48:24Z", "author": {"login": "dushaniw"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ScopesDAO.java", "diffHunk": "@@ -60,34 +60,51 @@ public boolean addScopes(Set<Scope> scopeSet, int tenantId) throws APIManagement\n         }\n         try (Connection connection = APIMgtDBUtil.getConnection()) {\n             connection.setAutoCommit(false);\n+            PreparedStatement addScopeStatement = null;\n+            PreparedStatement addScopeBindingStatement = null;\n             try {\n+                addScopeStatement = connection.prepareStatement(SQLConstants.INSERT_SCOPE_SQL);\n+                addScopeBindingStatement = connection.prepareStatement(SQLConstants.ADD_SCOPE_MAPPING);\n                 for (Scope scope : scopeSet) {\n                     if (!isScopeExist(connection, scope.getKey(), tenantId)) {\n-                        try (PreparedStatement preparedStatement = connection\n-                                .prepareStatement(SQLConstants.INSERT_SCOPE_SQL)) {\n-                            preparedStatement.setString(1, scope.getKey());\n-                            preparedStatement.setString(2, scope.getName());\n-                            preparedStatement.setString(3, scope.getDescription());\n-                            preparedStatement.setInt(4, tenantId);\n-                            preparedStatement.setString(5, APIConstants.DEFAULT_SCOPE_TYPE);\n-                            preparedStatement.executeUpdate();\n-                            addScopeBindings(connection, scope, tenantId);\n-                        }\n+                        addScopeStatement.setString(1, scope.getKey());\n+                        addScopeStatement.setString(2, scope.getName());\n+                        addScopeStatement.setString(3, scope.getDescription());\n+                        addScopeStatement.setInt(4, tenantId);\n+                        addScopeStatement.setString(5, APIConstants.DEFAULT_SCOPE_TYPE);\n+                        addScopeStatement.addBatch();\n+                        addScopeBindingsToBatch(addScopeBindingStatement, scope, tenantId);\n                     }\n                 }\n+                addScopeStatement.executeBatch();\n+                addScopeBindingStatement.executeBatch();\n                 connection.commit();\n                 return true;\n             } catch (SQLException e) {\n-                log.error(\"Error while saving scopes into db\", e);\n                 connection.rollback();\n                 throw new APIManagementException(\"Error while saving scopes into db\", e, ExceptionCodes.INTERNAL_ERROR);\n+            }finally {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2885a099a8922c2fa5e45a06c6bf16dc32705a6"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3035, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}