{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1ODQzOTYy", "number": 9366, "title": "Fixing inconsistencies when importing/exporting APIs/API Products/Applications with Throttling Policies using the API Controller", "bodyText": "Purpose\nFixes: wso2/product-apim-tooling#329\nGoals\nEliminate the inconsistencies when adding throttling policies when importing an API/API Product/Application.\nApproach\nThe changes have been done related to the three (3) main throttling policies.\n\nAdvanced Throttling Policies\n\nModifications related to API/Product Level Throttling Policies\n\nWhen we try to import an API/API Product with an Advanced Throttling Policy which is not currently available in the API Manager, an error was not displayed earlier. But with this PR, now you will receive an error and the import will be failed.\n\n\nModifications related to Resource Level Throttling Policies\n\nNo changes needed to be done.\n\n\n\n\nApplication-level Throttling Tiers/Policies\n\nWhen we try to import an Application, even if the Application-level Throttling Tier/Policy was not available in the API Manager instance, the application was imported to that instance, which was wrong. But with this PR, now you will receive an error if you try to do that and the import will be failed.\n\n\nSubscription-level Throttling Tiers/Policies\n\nWhen we export an API/API Product with a Subscription-level Throttling Tier/Policy using the API Controller, the throttling policy details were included in the api.yaml file inside the exported directory as an array. But with this PR, the throttling policy names will be exported as an array instead of all the details of tiers.\nWhen we try to import an API/API Product, if any of the Subscription-level Throttling Tiers/Policies were not available in the API Manager, the API Manager ignored it and imported the API/API Product with the existing Subscription-level Throttling Tiers/Policies. But with this PR, now you will receive an error if you are trying to import an API/API Product with the Subscription-level Throttling Tiers/Policies if any of those are not available in the API Manager instance and the import will be failed.\n\n\n\nRefer [1] to understand more about the approach.\nUser stories\nRefer the points in the approach to understand the use cases.\nTest environment\n\nJDK 1.8.0_251\nUbuntu 20.04.1 LTS\n\n[1] http://wso2-oxygen-tank.10903.n7.nabble.com/APIM-Support-to-Import-Export-Throttling-Policies-Using-the-API-Controller-td162176.html", "createdAt": "2020-11-05T07:01:10Z", "url": "https://github.com/wso2/carbon-apimgt/pull/9366", "merged": true, "mergeCommit": {"oid": "7495f3ac4ab8a61b2e9b2fb35f912978a232a8c0"}, "closed": true, "closedAt": "2020-11-06T11:50:16Z", "author": {"login": "wasuradananjith"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZFx7SAH2gAyNTE1ODQzOTYyOjUwYzc4OGQ3OTY5MDE2N2VkOWIyNTU0YzVkOTI5NDY5ZGU4MDVlYmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd02RGfgFqTU3OTA5ODkzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "50c788d79690167ed9b2554c5d929469de805ebf", "author": {"user": {"login": "wasuradananjith", "name": "Wasura Wattearachchi"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/50c788d79690167ed9b2554c5d929469de805ebf", "committedDate": "2020-11-04T04:09:24Z", "message": "Fix Advanced Throttling Policy importing issues with API Resources"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24ed14d176caeb48767ffca874b6ddaddee4c21d", "author": {"user": {"login": "wasuradananjith", "name": "Wasura Wattearachchi"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/24ed14d176caeb48767ffca874b6ddaddee4c21d", "committedDate": "2020-11-04T04:09:24Z", "message": "Fix API Level Advanced Throttling Policy importing issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7827948c611a3d761d7fb5df3378f39a8286e935", "author": {"user": {"login": "wasuradananjith", "name": "Wasura Wattearachchi"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/7827948c611a3d761d7fb5df3378f39a8286e935", "committedDate": "2020-11-04T13:51:28Z", "message": "Fix Subscription Level Throttling Policy issues for APIs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ccfb0e7aba5b2a816c531a30a7fb88300f84b23", "author": {"user": {"login": "wasuradananjith", "name": "Wasura Wattearachchi"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/0ccfb0e7aba5b2a816c531a30a7fb88300f84b23", "committedDate": "2020-11-05T03:34:25Z", "message": "Fix Subscription Level and Product Level Throttling Policy issues for API Products"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODY1OTky", "url": "https://github.com/wso2/carbon-apimgt/pull/9366#pullrequestreview-524865992", "createdAt": "2020-11-06T05:29:21Z", "commit": {"oid": "7fffc6f6b35cdbdbceb4e8859390c2452beb334a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b233042c5d4522c8018234472d72cfdbf6d0a093", "author": {"user": {"login": "wasuradananjith", "name": "Wasura Wattearachchi"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/b233042c5d4522c8018234472d72cfdbf6d0a093", "committedDate": "2020-11-06T07:55:05Z", "message": "Fix Application Level Throttling Policy issues"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7fffc6f6b35cdbdbceb4e8859390c2452beb334a", "author": {"user": {"login": "wasuradananjith", "name": "Wasura Wattearachchi"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/7fffc6f6b35cdbdbceb4e8859390c2452beb334a", "committedDate": "2020-11-05T05:13:12Z", "message": "Fix Application Level Throttling Policy issues"}, "afterCommit": {"oid": "b233042c5d4522c8018234472d72cfdbf6d0a093", "author": {"user": {"login": "wasuradananjith", "name": "Wasura Wattearachchi"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/b233042c5d4522c8018234472d72cfdbf6d0a093", "committedDate": "2020-11-06T07:55:05Z", "message": "Fix Application Level Throttling Policy issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5MDk4MDEy", "url": "https://github.com/wso2/carbon-apimgt/pull/9366#pullrequestreview-579098012", "createdAt": "2021-01-29T09:53:44Z", "commit": {"oid": "b233042c5d4522c8018234472d72cfdbf6d0a093"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwOTo1Mzo0NVrOIccyzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwOTo1Mzo0NVrOIccyzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjcwMjc5OA==", "bodyText": "No exception is thrown in this method. Please correct the java docs.", "url": "https://github.com/wso2/carbon-apimgt/pull/9366#discussion_r566702798", "createdAt": "2021-01-29T09:53:45Z", "author": {"login": "npamudika"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/importexport/utils/APIAndAPIProductCommonUtil.java", "diffHunk": "@@ -639,4 +647,74 @@ public static void addClientCertificates(String pathToArchive, APIProvider apiPr\n             throw new APIImportExportException(errorMessage, e);\n         }\n     }\n+\n+    /**\n+     * Get the subscription level policy names of an API/API Product\n+     *\n+     * @param apiTypeWrapper API or API Product to be exported\n+     * @throws APIImportExportException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b233042c5d4522c8018234472d72cfdbf6d0a093"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5MDk4OTM2", "url": "https://github.com/wso2/carbon-apimgt/pull/9366#pullrequestreview-579098936", "createdAt": "2021-01-29T09:54:51Z", "commit": {"oid": "b233042c5d4522c8018234472d72cfdbf6d0a093"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwOTo1NDo1MVrOIcc1XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwOTo1NDo1MVrOIcc1XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjcwMzQ1Mg==", "bodyText": "APIManagementException is thrown, replace the APIImportExportException with it in the java docs.", "url": "https://github.com/wso2/carbon-apimgt/pull/9366#discussion_r566703452", "createdAt": "2021-01-29T09:54:51Z", "author": {"login": "npamudika"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/importexport/utils/APIAndAPIProductCommonUtil.java", "diffHunk": "@@ -639,4 +647,74 @@ public static void addClientCertificates(String pathToArchive, APIProvider apiPr\n             throw new APIImportExportException(errorMessage, e);\n         }\n     }\n+\n+    /**\n+     * Get the subscription level policy names of an API/API Product\n+     *\n+     * @param apiTypeWrapper API or API Product to be exported\n+     * @throws APIImportExportException\n+     */\n+    public static Set<String> getAvailableTierNames(ApiTypeWrapper apiTypeWrapper) {\n+        Set<String> tiers = new LinkedHashSet<String>();\n+        Set<Tier> tiersFromApi;\n+        if (!apiTypeWrapper.isAPIProduct()) {\n+            tiersFromApi = apiTypeWrapper.getApi().getAvailableTiers();\n+        } else {\n+            tiersFromApi = apiTypeWrapper.getApiProduct().getAvailableTiers();\n+        }\n+        for (Tier tier : tiersFromApi) {\n+            tiers.add(tier.getName());\n+        }\n+        return tiers;\n+    }\n+\n+    /**\n+     * Set the subscription level tiers of an API/API Product by validating with the tiers available in the environment\n+     *\n+     * @param apiJsonContent JSON content of API or API Product to be imported\n+     * @param apiProvider    API Provider\n+     * @throws APIImportExportException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b233042c5d4522c8018234472d72cfdbf6d0a093"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3085, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}