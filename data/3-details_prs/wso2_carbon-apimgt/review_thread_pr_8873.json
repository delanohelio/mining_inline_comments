{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMDY4NTYx", "number": 8873, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNjowODoxOFrOEJ8dZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwMzo1MDowMVrOENrGdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODYzMjA1OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNjowODoxOFrOGqtDRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTozMTozMlrOGreVag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzMTQ5NA==", "bodyText": "Remove additional line", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r447431494", "createdAt": "2020-06-30T06:08:18Z", "author": {"login": "HiranyaKavishani"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzODk1NA==", "bodyText": "Fixed with bb70f77", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r448238954", "createdAt": "2020-07-01T09:31:32Z", "author": {"login": "Meruja"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzMTQ5NA=="}, "originalCommit": {"oid": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODYzODMxOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNjoxMDo1N1rOGqtG1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTozMToyOFrOGreVTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzMjQwNw==", "bodyText": "Why return null here?", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r447432407", "createdAt": "2020-06-30T06:10:57Z", "author": {"login": "HiranyaKavishani"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+\n+            JSONObject responseJson = new JSONObject();\n+            JSONArray scopeJson = new JSONArray();\n+\n+            for(int i = 0; i < body.getList().size(); i++) {\n+                JSONObject scopeRoleJson = new JSONObject();\n+                scopeRoleJson.put(\"Name\", body.getList().get(i).getName());\n+                scopeRoleJson.put(\"Roles\", body.getList().get(i).getRoles());\n+                scopeJson.put(scopeRoleJson);\n+            }\n+\n+            responseJson.put(\"Scope\", scopeJson);\n+            //Here we are removing RESTAPIScopes from the existing tenant-conf\n+            // Adding new RESTAPIScopes to the existing tenant-conf.\n+            existingTenantConfObject.remove(\"RESTAPIScopes\");\n+            Gson gson = new Gson();\n+            existingTenantConfObject.add(\"RESTAPIScopes\",\n+                    gson.fromJson(responseJson.toString(), JsonElement.class));\n+            APIUtil.updateTenantConf(existingTenantConfObject.toString(),tenantDomain);\n+            Map<String, String> scopeRoleMapping = APIUtil.getRESTAPIScopesForTenant(MultitenantUtils\n+                    .getTenantDomain(RestApiUtil.getLoggedInUsername()));\n+            ScopeListDTO scopeListDTO = SystemScopesMappingUtil.fromScopeListToScopeListDTO(scopeRoleMapping);\n+            return Response.ok().entity(scopeListDTO).build();\n+        } catch (APIManagementException e) {\n+            String errorMessage = \"Error when updating the list of scopes-role mapping.\";\n+            RestApiUtil.handleInternalServerError(errorMessage, e, log);\n+        }\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzODkyNg==", "bodyText": "Fixed with bb70f77", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r448238926", "createdAt": "2020-07-01T09:31:28Z", "author": {"login": "Meruja"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+\n+            JSONObject responseJson = new JSONObject();\n+            JSONArray scopeJson = new JSONArray();\n+\n+            for(int i = 0; i < body.getList().size(); i++) {\n+                JSONObject scopeRoleJson = new JSONObject();\n+                scopeRoleJson.put(\"Name\", body.getList().get(i).getName());\n+                scopeRoleJson.put(\"Roles\", body.getList().get(i).getRoles());\n+                scopeJson.put(scopeRoleJson);\n+            }\n+\n+            responseJson.put(\"Scope\", scopeJson);\n+            //Here we are removing RESTAPIScopes from the existing tenant-conf\n+            // Adding new RESTAPIScopes to the existing tenant-conf.\n+            existingTenantConfObject.remove(\"RESTAPIScopes\");\n+            Gson gson = new Gson();\n+            existingTenantConfObject.add(\"RESTAPIScopes\",\n+                    gson.fromJson(responseJson.toString(), JsonElement.class));\n+            APIUtil.updateTenantConf(existingTenantConfObject.toString(),tenantDomain);\n+            Map<String, String> scopeRoleMapping = APIUtil.getRESTAPIScopesForTenant(MultitenantUtils\n+                    .getTenantDomain(RestApiUtil.getLoggedInUsername()));\n+            ScopeListDTO scopeListDTO = SystemScopesMappingUtil.fromScopeListToScopeListDTO(scopeRoleMapping);\n+            return Response.ok().entity(scopeListDTO).build();\n+        } catch (APIManagementException e) {\n+            String errorMessage = \"Error when updating the list of scopes-role mapping.\";\n+            RestApiUtil.handleInternalServerError(errorMessage, e, log);\n+        }\n+        return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzMjQwNw=="}, "originalCommit": {"oid": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODY0NDUwOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNjoxMzoxNlrOGqtKUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTozMToyM1rOGreVIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzMzI5OA==", "bodyText": "Use a For-each loop", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r447433298", "createdAt": "2020-06-30T06:13:16Z", "author": {"login": "HiranyaKavishani"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+\n+            JSONObject responseJson = new JSONObject();\n+            JSONArray scopeJson = new JSONArray();\n+\n+            for(int i = 0; i < body.getList().size(); i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzODg4MQ==", "bodyText": "Fixed with bb70f77", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r448238881", "createdAt": "2020-07-01T09:31:23Z", "author": {"login": "Meruja"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+\n+            JSONObject responseJson = new JSONObject();\n+            JSONArray scopeJson = new JSONArray();\n+\n+            for(int i = 0; i < body.getList().size(); i++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzMzI5OA=="}, "originalCommit": {"oid": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODY3MDI4OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNjoyMjozNFrOGqtZCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTozMToxOVrOGreU8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzNzA2Ng==", "bodyText": "Can't we do this without using gson library?", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r447437066", "createdAt": "2020-06-30T06:22:34Z", "author": {"login": "HiranyaKavishani"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+\n+            JSONObject responseJson = new JSONObject();\n+            JSONArray scopeJson = new JSONArray();\n+\n+            for(int i = 0; i < body.getList().size(); i++) {\n+                JSONObject scopeRoleJson = new JSONObject();\n+                scopeRoleJson.put(\"Name\", body.getList().get(i).getName());\n+                scopeRoleJson.put(\"Roles\", body.getList().get(i).getRoles());\n+                scopeJson.put(scopeRoleJson);\n+            }\n+\n+            responseJson.put(\"Scope\", scopeJson);\n+            //Here we are removing RESTAPIScopes from the existing tenant-conf\n+            // Adding new RESTAPIScopes to the existing tenant-conf.\n+            existingTenantConfObject.remove(\"RESTAPIScopes\");\n+            Gson gson = new Gson();\n+            existingTenantConfObject.add(\"RESTAPIScopes\",\n+                    gson.fromJson(responseJson.toString(), JsonElement.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU3MjU3Nw==", "bodyText": "@Meruja have a look at \n  \n    \n      carbon-apimgt/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java\n    \n    \n        Lines 7386 to 7391\n      in\n      0f32011\n    \n    \n    \n    \n\n        \n          \n           } \n        \n\n        \n          \n           String content = new String((byte[]) resource.getContent(), Charset.defaultCharset()); \n        \n\n        \n          \n           JSONParser parser = new JSONParser(); \n        \n\n        \n          \n           JSONObject tenantConfig = (JSONObject) parser.parse(content); \n        \n\n        \n          \n           tenantConfigCache.put(cacheName, tenantConfig); \n        \n\n        \n          \n           return tenantConfig;", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r447572577", "createdAt": "2020-06-30T10:14:30Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+\n+            JSONObject responseJson = new JSONObject();\n+            JSONArray scopeJson = new JSONArray();\n+\n+            for(int i = 0; i < body.getList().size(); i++) {\n+                JSONObject scopeRoleJson = new JSONObject();\n+                scopeRoleJson.put(\"Name\", body.getList().get(i).getName());\n+                scopeRoleJson.put(\"Roles\", body.getList().get(i).getRoles());\n+                scopeJson.put(scopeRoleJson);\n+            }\n+\n+            responseJson.put(\"Scope\", scopeJson);\n+            //Here we are removing RESTAPIScopes from the existing tenant-conf\n+            // Adding new RESTAPIScopes to the existing tenant-conf.\n+            existingTenantConfObject.remove(\"RESTAPIScopes\");\n+            Gson gson = new Gson();\n+            existingTenantConfObject.add(\"RESTAPIScopes\",\n+                    gson.fromJson(responseJson.toString(), JsonElement.class));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzNzA2Ng=="}, "originalCommit": {"oid": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzODgzMg==", "bodyText": "Fixed with bb70f77", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r448238832", "createdAt": "2020-07-01T09:31:19Z", "author": {"login": "Meruja"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+\n+            JSONObject responseJson = new JSONObject();\n+            JSONArray scopeJson = new JSONArray();\n+\n+            for(int i = 0; i < body.getList().size(); i++) {\n+                JSONObject scopeRoleJson = new JSONObject();\n+                scopeRoleJson.put(\"Name\", body.getList().get(i).getName());\n+                scopeRoleJson.put(\"Roles\", body.getList().get(i).getRoles());\n+                scopeJson.put(scopeRoleJson);\n+            }\n+\n+            responseJson.put(\"Scope\", scopeJson);\n+            //Here we are removing RESTAPIScopes from the existing tenant-conf\n+            // Adding new RESTAPIScopes to the existing tenant-conf.\n+            existingTenantConfObject.remove(\"RESTAPIScopes\");\n+            Gson gson = new Gson();\n+            existingTenantConfObject.add(\"RESTAPIScopes\",\n+                    gson.fromJson(responseJson.toString(), JsonElement.class));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzNzA2Ng=="}, "originalCommit": {"oid": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTQ4NjQxOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMDowMTo1OFrOGq1OyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTozMToxMlrOGreUtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU2NTUxMg==", "bodyText": "We don't need to catch APIManagementException from the REST API layer. Throw it from the method", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r447565512", "createdAt": "2020-06-30T10:01:58Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+\n+            JSONObject responseJson = new JSONObject();\n+            JSONArray scopeJson = new JSONArray();\n+\n+            for(int i = 0; i < body.getList().size(); i++) {\n+                JSONObject scopeRoleJson = new JSONObject();\n+                scopeRoleJson.put(\"Name\", body.getList().get(i).getName());\n+                scopeRoleJson.put(\"Roles\", body.getList().get(i).getRoles());\n+                scopeJson.put(scopeRoleJson);\n+            }\n+\n+            responseJson.put(\"Scope\", scopeJson);\n+            //Here we are removing RESTAPIScopes from the existing tenant-conf\n+            // Adding new RESTAPIScopes to the existing tenant-conf.\n+            existingTenantConfObject.remove(\"RESTAPIScopes\");\n+            Gson gson = new Gson();\n+            existingTenantConfObject.add(\"RESTAPIScopes\",\n+                    gson.fromJson(responseJson.toString(), JsonElement.class));\n+            APIUtil.updateTenantConf(existingTenantConfObject.toString(),tenantDomain);\n+            Map<String, String> scopeRoleMapping = APIUtil.getRESTAPIScopesForTenant(MultitenantUtils\n+                    .getTenantDomain(RestApiUtil.getLoggedInUsername()));\n+            ScopeListDTO scopeListDTO = SystemScopesMappingUtil.fromScopeListToScopeListDTO(scopeRoleMapping);\n+            return Response.ok().entity(scopeListDTO).build();\n+        } catch (APIManagementException e) {\n+            String errorMessage = \"Error when updating the list of scopes-role mapping.\";\n+            RestApiUtil.handleInternalServerError(errorMessage, e, log);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzODc3NQ==", "bodyText": "Fixed with bb70f77", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r448238775", "createdAt": "2020-07-01T09:31:12Z", "author": {"login": "Meruja"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+\n+            JSONObject responseJson = new JSONObject();\n+            JSONArray scopeJson = new JSONArray();\n+\n+            for(int i = 0; i < body.getList().size(); i++) {\n+                JSONObject scopeRoleJson = new JSONObject();\n+                scopeRoleJson.put(\"Name\", body.getList().get(i).getName());\n+                scopeRoleJson.put(\"Roles\", body.getList().get(i).getRoles());\n+                scopeJson.put(scopeRoleJson);\n+            }\n+\n+            responseJson.put(\"Scope\", scopeJson);\n+            //Here we are removing RESTAPIScopes from the existing tenant-conf\n+            // Adding new RESTAPIScopes to the existing tenant-conf.\n+            existingTenantConfObject.remove(\"RESTAPIScopes\");\n+            Gson gson = new Gson();\n+            existingTenantConfObject.add(\"RESTAPIScopes\",\n+                    gson.fromJson(responseJson.toString(), JsonElement.class));\n+            APIUtil.updateTenantConf(existingTenantConfObject.toString(),tenantDomain);\n+            Map<String, String> scopeRoleMapping = APIUtil.getRESTAPIScopesForTenant(MultitenantUtils\n+                    .getTenantDomain(RestApiUtil.getLoggedInUsername()));\n+            ScopeListDTO scopeListDTO = SystemScopesMappingUtil.fromScopeListToScopeListDTO(scopeRoleMapping);\n+            return Response.ok().entity(scopeListDTO).build();\n+        } catch (APIManagementException e) {\n+            String errorMessage = \"Error when updating the list of scopes-role mapping.\";\n+            RestApiUtil.handleInternalServerError(errorMessage, e, log);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU2NTUxMg=="}, "originalCommit": {"oid": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTQ4OTE2OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMDowMjo0NlrOGq1QiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTozMTowNVrOGreUhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU2NTk2MQ==", "bodyText": "Formatting issue", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r447565961", "createdAt": "2020-06-30T10:02:46Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzODcyNQ==", "bodyText": "Fixed with bb70f77", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r448238725", "createdAt": "2020-07-01T09:31:05Z", "author": {"login": "Meruja"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU2NTk2MQ=="}, "originalCommit": {"oid": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTUxNzA2OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMDoxMDo1M1rOGq1ieQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTozMTowMVrOGreUaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU3MDU1Mw==", "bodyText": "Can you create a new class SystemScopeMappingUtils and move this logic there and use it from the REST API Layer. This is the typical flow we follow. We should not merge REST API and business logics and include in the same method", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r447570553", "createdAt": "2020-06-30T10:10:53Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+\n+            JSONObject responseJson = new JSONObject();\n+            JSONArray scopeJson = new JSONArray();\n+\n+            for(int i = 0; i < body.getList().size(); i++) {\n+                JSONObject scopeRoleJson = new JSONObject();\n+                scopeRoleJson.put(\"Name\", body.getList().get(i).getName());\n+                scopeRoleJson.put(\"Roles\", body.getList().get(i).getRoles());\n+                scopeJson.put(scopeRoleJson);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzODY5Nw==", "bodyText": "Fixed with bb70f77", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r448238697", "createdAt": "2020-07-01T09:31:01Z", "author": {"login": "Meruja"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+\n+            JSONObject responseJson = new JSONObject();\n+            JSONArray scopeJson = new JSONArray();\n+\n+            for(int i = 0; i < body.getList().size(); i++) {\n+                JSONObject scopeRoleJson = new JSONObject();\n+                scopeRoleJson.put(\"Name\", body.getList().get(i).getName());\n+                scopeRoleJson.put(\"Roles\", body.getList().get(i).getRoles());\n+                scopeJson.put(scopeRoleJson);\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU3MDU1Mw=="}, "originalCommit": {"oid": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTUzMjkyOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMDoxNToxNFrOGq1sGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTozMDo1M1rOGreUGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU3MzAxNg==", "bodyText": "When updating the tenant conf in the registry, make sure to update with a formatted version.", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r447573016", "createdAt": "2020-06-30T10:15:14Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+\n+            JSONObject responseJson = new JSONObject();\n+            JSONArray scopeJson = new JSONArray();\n+\n+            for(int i = 0; i < body.getList().size(); i++) {\n+                JSONObject scopeRoleJson = new JSONObject();\n+                scopeRoleJson.put(\"Name\", body.getList().get(i).getName());\n+                scopeRoleJson.put(\"Roles\", body.getList().get(i).getRoles());\n+                scopeJson.put(scopeRoleJson);\n+            }\n+\n+            responseJson.put(\"Scope\", scopeJson);\n+            //Here we are removing RESTAPIScopes from the existing tenant-conf\n+            // Adding new RESTAPIScopes to the existing tenant-conf.\n+            existingTenantConfObject.remove(\"RESTAPIScopes\");\n+            Gson gson = new Gson();\n+            existingTenantConfObject.add(\"RESTAPIScopes\",\n+                    gson.fromJson(responseJson.toString(), JsonElement.class));\n+            APIUtil.updateTenantConf(existingTenantConfObject.toString(),tenantDomain);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU3Mzk0MA==", "bodyText": "carbon-apimgt/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java\n    \n    \n        Lines 4319 to 4325\n      in\n      0f32011\n    \n    \n    \n    \n\n        \n          \n           } \n        \n\n        \n          \n           try { \n        \n\n        \n          \n               ObjectMapper mapper = new ObjectMapper(); \n        \n\n        \n          \n               String formattedTenantConf = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(tenantConf); \n        \n\n        \n          \n               if (log.isDebugEnabled()) { \n        \n\n        \n          \n                   log.debug(\"Finalized tenant-conf.json: \" + formattedTenantConf); \n        \n\n        \n          \n               }", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r447573940", "createdAt": "2020-06-30T10:16:50Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+\n+            JSONObject responseJson = new JSONObject();\n+            JSONArray scopeJson = new JSONArray();\n+\n+            for(int i = 0; i < body.getList().size(); i++) {\n+                JSONObject scopeRoleJson = new JSONObject();\n+                scopeRoleJson.put(\"Name\", body.getList().get(i).getName());\n+                scopeRoleJson.put(\"Roles\", body.getList().get(i).getRoles());\n+                scopeJson.put(scopeRoleJson);\n+            }\n+\n+            responseJson.put(\"Scope\", scopeJson);\n+            //Here we are removing RESTAPIScopes from the existing tenant-conf\n+            // Adding new RESTAPIScopes to the existing tenant-conf.\n+            existingTenantConfObject.remove(\"RESTAPIScopes\");\n+            Gson gson = new Gson();\n+            existingTenantConfObject.add(\"RESTAPIScopes\",\n+                    gson.fromJson(responseJson.toString(), JsonElement.class));\n+            APIUtil.updateTenantConf(existingTenantConfObject.toString(),tenantDomain);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU3MzAxNg=="}, "originalCommit": {"oid": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzODYxNg==", "bodyText": "Fixed with bb70f77", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r448238616", "createdAt": "2020-07-01T09:30:53Z", "author": {"login": "Meruja"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+\n+            JSONObject responseJson = new JSONObject();\n+            JSONArray scopeJson = new JSONArray();\n+\n+            for(int i = 0; i < body.getList().size(); i++) {\n+                JSONObject scopeRoleJson = new JSONObject();\n+                scopeRoleJson.put(\"Name\", body.getList().get(i).getName());\n+                scopeRoleJson.put(\"Roles\", body.getList().get(i).getRoles());\n+                scopeJson.put(scopeRoleJson);\n+            }\n+\n+            responseJson.put(\"Scope\", scopeJson);\n+            //Here we are removing RESTAPIScopes from the existing tenant-conf\n+            // Adding new RESTAPIScopes to the existing tenant-conf.\n+            existingTenantConfObject.remove(\"RESTAPIScopes\");\n+            Gson gson = new Gson();\n+            existingTenantConfObject.add(\"RESTAPIScopes\",\n+                    gson.fromJson(responseJson.toString(), JsonElement.class));\n+            APIUtil.updateTenantConf(existingTenantConfObject.toString(),tenantDomain);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU3MzAxNg=="}, "originalCommit": {"oid": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjkwMTk4OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDoxOTowOVrOGu3y_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDoxOTowOVrOGu3y_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgwMTg1NA==", "bodyText": "Let's not omit 'e' please. Shall we include it in the thrown APIManagementException?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new APIManagementException(\"Error while formatting tenant-conf.json of tenant \");\n          \n          \n            \n                        throw new APIManagementException(\"Error while formatting tenant-conf.json of tenant\", e);", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r451801854", "createdAt": "2020-07-08T20:19:09Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +85,44 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext)\n+            throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+            existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        JSONObject responseJson = SystemScopesMappingUtil.createJsonObjectOfScopeMapping(body);\n+        //Here we are removing RESTAPIScopes from the existing tenant-conf\n+        // Adding new RESTAPIScopes to the existing tenant-conf.\n+        existingTenantConfObject.remove(APIConstants.REST_API_SCOPES_CONFIG);\n+        JsonElement jsonElement = new JsonParser().parse(responseJson.toJSONString());\n+        existingTenantConfObject.add(APIConstants.REST_API_SCOPES_CONFIG, jsonElement);\n+        try {\n+            ObjectMapper mapper = new ObjectMapper();\n+            String formattedTenantConf = mapper.writerWithDefaultPrettyPrinter()\n+                    .writeValueAsString(existingTenantConfObject.toString());\n+            APIUtil.updateTenantConf(existingTenantConfObject.toString(), tenantDomain);\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Finalized tenant-conf.json: \" + formattedTenantConf);\n+            }\n+        } catch (JsonProcessingException e) {\n+            throw new APIManagementException(\"Error while formatting tenant-conf.json of tenant \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb70f77436644437fd4b9c5bc9bb61b39453e8ed"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjkwODA0OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDoyMTowNVrOGu32tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwMzozOTo1MVrOGwac_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgwMjgwNg==", "bodyText": "This is too much business logic into the REST API layer. Shall we think of splitting this into core methods and calling them from here and reduce the number of lines in here?", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r451802806", "createdAt": "2020-07-08T20:21:05Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +85,44 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb70f77436644437fd4b9c5bc9bb61b39453e8ed"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxODIzOQ==", "bodyText": "Fixed with b7898df", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r453418239", "createdAt": "2020-07-13T03:39:51Z", "author": {"login": "Meruja"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +85,44 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgwMjgwNg=="}, "originalCommit": {"oid": "bb70f77436644437fd4b9c5bc9bb61b39453e8ed"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzY4MTM5OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwMzoxNDo0M1rOGwaI6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwMzozOTozMVrOGwacwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxMzA5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void editTenantConfOfRoleScopeMapping(JSONObject responseJson, String username)\n          \n          \n            \n                public void updateTenantConfScopeRoleMapping(JSONObject newScopeRoleJson, String username)", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r453413099", "createdAt": "2020-07-13T03:14:43Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -8890,4 +8893,42 @@ private JSONObject getSecurityAuditConfigurationProperties(String tenantDomain)\n         }\n         return removedReusedResources;\n     }\n+\n+    @Override\n+    public void editTenantConfOfRoleScopeMapping(JSONObject responseJson, String username)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7a380e28a58e5361d16cff9129b80e4a51fae2b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxMzIxNg==", "bodyText": "Let's move this method to APIUtil.java as a static method", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r453413216", "createdAt": "2020-07-13T03:15:09Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -8890,4 +8893,42 @@ private JSONObject getSecurityAuditConfigurationProperties(String tenantDomain)\n         }\n         return removedReusedResources;\n     }\n+\n+    @Override\n+    public void editTenantConfOfRoleScopeMapping(JSONObject responseJson, String username)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxMzA5OQ=="}, "originalCommit": {"oid": "a7a380e28a58e5361d16cff9129b80e4a51fae2b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxODE3OA==", "bodyText": "Fixed with b7898df", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r453418178", "createdAt": "2020-07-13T03:39:31Z", "author": {"login": "Meruja"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -8890,4 +8893,42 @@ private JSONObject getSecurityAuditConfigurationProperties(String tenantDomain)\n         }\n         return removedReusedResources;\n     }\n+\n+    @Override\n+    public void editTenantConfOfRoleScopeMapping(JSONObject responseJson, String username)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxMzA5OQ=="}, "originalCommit": {"oid": "a7a380e28a58e5361d16cff9129b80e4a51fae2b"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzczMDY3OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwMzo0OTozOVrOGwalJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDowNjo1OFrOGwazLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMDMyNA==", "bodyText": "Remove imports", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r453420324", "createdAt": "2020-07-13T03:49:39Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -21,6 +21,9 @@\n import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.google.gson.Gson;\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29b3575f99639d4cd2ad8e9d5f10336a2dade6c3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMzkxOQ==", "bodyText": "Done with 5d65d65", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r453423919", "createdAt": "2020-07-13T04:06:58Z", "author": {"login": "Meruja"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -21,6 +21,9 @@\n import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.google.gson.Gson;\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMDMyNA=="}, "originalCommit": {"oid": "29b3575f99639d4cd2ad8e9d5f10336a2dade6c3"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzczMTExOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwMzo1MDowMVrOGwalZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDowNjo1MlrOGwazFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMDM5MA==", "bodyText": "Remove import", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r453420390", "createdAt": "2020-07-13T03:50:01Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -17,14 +32,14 @@\n import org.wso2.carbon.apimgt.rest.api.admin.v1.dto.ScopeSettingsDTO;\n import org.wso2.carbon.apimgt.rest.api.admin.v1.utils.mappings.SystemScopesMappingUtil;\n import org.wso2.carbon.apimgt.rest.api.util.utils.RestApiUtil;\n+import org.wso2.carbon.registry.core.exceptions.RegistryException;\n+import org.wso2.carbon.user.api.UserStoreException;\n import org.wso2.carbon.utils.multitenancy.MultitenantUtils;\n \n import java.util.Base64;\n-import java.util.List;\n-\n-import java.io.InputStream;\n import java.util.Map;\n \n+import javax.cache.Caching;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29b3575f99639d4cd2ad8e9d5f10336a2dade6c3"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMzg5NQ==", "bodyText": "Done with 5d65d65", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r453423895", "createdAt": "2020-07-13T04:06:52Z", "author": {"login": "Meruja"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -17,14 +32,14 @@\n import org.wso2.carbon.apimgt.rest.api.admin.v1.dto.ScopeSettingsDTO;\n import org.wso2.carbon.apimgt.rest.api.admin.v1.utils.mappings.SystemScopesMappingUtil;\n import org.wso2.carbon.apimgt.rest.api.util.utils.RestApiUtil;\n+import org.wso2.carbon.registry.core.exceptions.RegistryException;\n+import org.wso2.carbon.user.api.UserStoreException;\n import org.wso2.carbon.utils.multitenancy.MultitenantUtils;\n \n import java.util.Base64;\n-import java.util.List;\n-\n-import java.io.InputStream;\n import java.util.Map;\n \n+import javax.cache.Caching;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMDM5MA=="}, "originalCommit": {"oid": "29b3575f99639d4cd2ad8e9d5f10336a2dade6c3"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3228, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}