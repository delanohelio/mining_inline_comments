{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwMjQxMTEw", "number": 9454, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNToyOTo1N1rOE_dQ1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODowNzozMlrOFCg7oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTc1MTg5OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/resources/store-api.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNToyOTo1N1rOH9LCvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzozOTo0NFrOH9N7xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNjExMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                FullName:\n          \n          \n            \n                CommenterInfo:", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r533906110", "createdAt": "2020-12-02T05:29:57Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/resources/store-api.yaml", "diffHunk": "@@ -4590,6 +4593,18 @@ components:\n             example: admin\n           apiUUID:\n             type: string\n+    FullName:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4c5eeb073ec6ec48f293a53a7e0dcb4e2755504"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk1MzQ3OQ==", "bodyText": "219471b", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r533953479", "createdAt": "2020-12-02T07:39:44Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/resources/store-api.yaml", "diffHunk": "@@ -4590,6 +4593,18 @@ components:\n             example: admin\n           apiUUID:\n             type: string\n+    FullName:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNjExMA=="}, "originalCommit": {"oid": "a4c5eeb073ec6ec48f293a53a7e0dcb4e2755504"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTc1MjI3OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/resources/store-api.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNTozMDowOFrOH9LC8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzozOTo1M1rOH9N7_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNjE2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    commenterInformation:\n          \n          \n            \n                    commenterInfo:", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r533906160", "createdAt": "2020-12-02T05:30:08Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/resources/store-api.yaml", "diffHunk": "@@ -4025,6 +4026,8 @@ components:\n           type: string\n           readOnly: true\n           example: admin\n+        commenterInformation:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4c5eeb073ec6ec48f293a53a7e0dcb4e2755504"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk1MzUzNQ==", "bodyText": "219471b", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r533953535", "createdAt": "2020-12-02T07:39:53Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/resources/store-api.yaml", "diffHunk": "@@ -4025,6 +4026,8 @@ components:\n           type: string\n           readOnly: true\n           example: admin\n+        commenterInformation:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNjE2MA=="}, "originalCommit": {"oid": "a4c5eeb073ec6ec48f293a53a7e0dcb4e2755504"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTc1NTMxOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/resources/store-api.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNTozMTozM1rOH9LEkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzozOTo1N1rOH9N8Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNjU3OQ==", "bodyText": "shall we rename it as includeCommenterInfo", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r533906579", "createdAt": "2020-12-02T05:31:33Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/resources/store-api.yaml", "diffHunk": "@@ -845,6 +845,7 @@ paths:\n       - $ref: '#/components/parameters/requestedTenant'\n       - $ref: '#/components/parameters/limit'\n       - $ref: '#/components/parameters/offset'\n+      - $ref: '#/components/parameters/commenterInfo'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4c5eeb073ec6ec48f293a53a7e0dcb4e2755504"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk1MzU3MQ==", "bodyText": "219471b", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r533953571", "createdAt": "2020-12-02T07:39:57Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/resources/store-api.yaml", "diffHunk": "@@ -845,6 +845,7 @@ paths:\n       - $ref: '#/components/parameters/requestedTenant'\n       - $ref: '#/components/parameters/limit'\n       - $ref: '#/components/parameters/offset'\n+      - $ref: '#/components/parameters/commenterInfo'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNjU3OQ=="}, "originalCommit": {"oid": "a4c5eeb073ec6ec48f293a53a7e0dcb4e2755504"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTc1Nzg0OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNTozMjo1NFrOH9LF9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzo0MTo0OFrOH9N_iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNjkzNQ==", "bodyText": "This is only a formatting fix right?", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r533906935", "createdAt": "2020-12-02T05:32:54Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -2390,16 +2390,38 @@ public String getSubscriber(String subscriptionId) throws APIManagementException\n         Map<String, String> claimMap = new HashMap<>();\n         try {\n             tenantId = getTenantId(tenantDomain);\n-        SortedMap<String, String> subscriberClaims =\n-                APIUtil.getClaims(subscriber, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);\n-        APIManagerConfiguration configuration = getAPIManagerConfiguration();\n-        String configuredClaims = configuration\n-                .getFirstProperty(APIConstants.API_PUBLISHER_SUBSCRIBER_CLAIMS);\n-        if (subscriberClaims != null) {\n-            for (String claimURI : configuredClaims.split(\",\")) {\n-                claimMap.put(claimURI, subscriberClaims.get(claimURI));\n+            SortedMap<String, String> subscriberClaims =\n+                    APIUtil.getClaims(subscriber, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);\n+            APIManagerConfiguration configuration = getAPIManagerConfiguration();\n+            String configuredClaims = configuration\n+                    .getFirstProperty(APIConstants.API_PUBLISHER_SUBSCRIBER_CLAIMS);\n+            if (subscriberClaims != null) {\n+                for (String claimURI : configuredClaims.split(\",\")) {\n+                    claimMap.put(claimURI, subscriberClaims.get(claimURI));\n+                }\n             }\n+        } catch (UserStoreException e) {\n+            throw new APIManagementException(\"Error while retrieving tenant id for tenant domain \"\n+                    + tenantDomain, e);\n         }\n+        return claimMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4c5eeb073ec6ec48f293a53a7e0dcb4e2755504"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk1NDQ0MQ==", "bodyText": "Yes", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r533954441", "createdAt": "2020-12-02T07:41:48Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -2390,16 +2390,38 @@ public String getSubscriber(String subscriptionId) throws APIManagementException\n         Map<String, String> claimMap = new HashMap<>();\n         try {\n             tenantId = getTenantId(tenantDomain);\n-        SortedMap<String, String> subscriberClaims =\n-                APIUtil.getClaims(subscriber, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);\n-        APIManagerConfiguration configuration = getAPIManagerConfiguration();\n-        String configuredClaims = configuration\n-                .getFirstProperty(APIConstants.API_PUBLISHER_SUBSCRIBER_CLAIMS);\n-        if (subscriberClaims != null) {\n-            for (String claimURI : configuredClaims.split(\",\")) {\n-                claimMap.put(claimURI, subscriberClaims.get(claimURI));\n+            SortedMap<String, String> subscriberClaims =\n+                    APIUtil.getClaims(subscriber, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);\n+            APIManagerConfiguration configuration = getAPIManagerConfiguration();\n+            String configuredClaims = configuration\n+                    .getFirstProperty(APIConstants.API_PUBLISHER_SUBSCRIBER_CLAIMS);\n+            if (subscriberClaims != null) {\n+                for (String claimURI : configuredClaims.split(\",\")) {\n+                    claimMap.put(claimURI, subscriberClaims.get(claimURI));\n+                }\n             }\n+        } catch (UserStoreException e) {\n+            throw new APIManagementException(\"Error while retrieving tenant id for tenant domain \"\n+                    + tenantDomain, e);\n         }\n+        return claimMap;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNjkzNQ=="}, "originalCommit": {"oid": "a4c5eeb073ec6ec48f293a53a7e0dcb4e2755504"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTc2MTcxOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNTozNDoyOVrOH9LIAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNToxNDozMFrOH_BK3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNzQ1Nw==", "bodyText": "I feel this method doesn't look right to have in APIProviderImpl.\nShall we move this method to APIUtil itself?", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r533907457", "createdAt": "2020-12-02T05:34:29Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -2390,16 +2390,38 @@ public String getSubscriber(String subscriptionId) throws APIManagementException\n         Map<String, String> claimMap = new HashMap<>();\n         try {\n             tenantId = getTenantId(tenantDomain);\n-        SortedMap<String, String> subscriberClaims =\n-                APIUtil.getClaims(subscriber, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);\n-        APIManagerConfiguration configuration = getAPIManagerConfiguration();\n-        String configuredClaims = configuration\n-                .getFirstProperty(APIConstants.API_PUBLISHER_SUBSCRIBER_CLAIMS);\n-        if (subscriberClaims != null) {\n-            for (String claimURI : configuredClaims.split(\",\")) {\n-                claimMap.put(claimURI, subscriberClaims.get(claimURI));\n+            SortedMap<String, String> subscriberClaims =\n+                    APIUtil.getClaims(subscriber, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);\n+            APIManagerConfiguration configuration = getAPIManagerConfiguration();\n+            String configuredClaims = configuration\n+                    .getFirstProperty(APIConstants.API_PUBLISHER_SUBSCRIBER_CLAIMS);\n+            if (subscriberClaims != null) {\n+                for (String claimURI : configuredClaims.split(\",\")) {\n+                    claimMap.put(claimURI, subscriberClaims.get(claimURI));\n+                }\n             }\n+        } catch (UserStoreException e) {\n+            throw new APIManagementException(\"Error while retrieving tenant id for tenant domain \"\n+                    + tenantDomain, e);\n         }\n+        return claimMap;\n+    }\n+\n+    /**\n+     * Returns the claims of a User\n+     *\n+     * @param userName The name of the user\n+     * @return The looked up claims of the user\n+     * @throws APIManagementException if failed to get user\n+     */\n+    @Override\n+    public Map<String, String> getLoggedInUserClaims(String userName) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(userName);\n+        int tenantId = 0;\n+        Map<String, String> claimMap;\n+        try {\n+            tenantId = getTenantId(tenantDomain);\n+            claimMap = APIUtil.getClaims(userName, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4c5eeb073ec6ec48f293a53a7e0dcb4e2755504"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxMTg0MQ==", "bodyText": "Ideal way to is to have these types of method in a separate Util class.. like APIMUserMgtUtils. please check with others as well.", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r533911841", "createdAt": "2020-12-02T05:47:25Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -2390,16 +2390,38 @@ public String getSubscriber(String subscriptionId) throws APIManagementException\n         Map<String, String> claimMap = new HashMap<>();\n         try {\n             tenantId = getTenantId(tenantDomain);\n-        SortedMap<String, String> subscriberClaims =\n-                APIUtil.getClaims(subscriber, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);\n-        APIManagerConfiguration configuration = getAPIManagerConfiguration();\n-        String configuredClaims = configuration\n-                .getFirstProperty(APIConstants.API_PUBLISHER_SUBSCRIBER_CLAIMS);\n-        if (subscriberClaims != null) {\n-            for (String claimURI : configuredClaims.split(\",\")) {\n-                claimMap.put(claimURI, subscriberClaims.get(claimURI));\n+            SortedMap<String, String> subscriberClaims =\n+                    APIUtil.getClaims(subscriber, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);\n+            APIManagerConfiguration configuration = getAPIManagerConfiguration();\n+            String configuredClaims = configuration\n+                    .getFirstProperty(APIConstants.API_PUBLISHER_SUBSCRIBER_CLAIMS);\n+            if (subscriberClaims != null) {\n+                for (String claimURI : configuredClaims.split(\",\")) {\n+                    claimMap.put(claimURI, subscriberClaims.get(claimURI));\n+                }\n             }\n+        } catch (UserStoreException e) {\n+            throw new APIManagementException(\"Error while retrieving tenant id for tenant domain \"\n+                    + tenantDomain, e);\n         }\n+        return claimMap;\n+    }\n+\n+    /**\n+     * Returns the claims of a User\n+     *\n+     * @param userName The name of the user\n+     * @return The looked up claims of the user\n+     * @throws APIManagementException if failed to get user\n+     */\n+    @Override\n+    public Map<String, String> getLoggedInUserClaims(String userName) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(userName);\n+        int tenantId = 0;\n+        Map<String, String> claimMap;\n+        try {\n+            tenantId = getTenantId(tenantDomain);\n+            claimMap = APIUtil.getClaims(userName, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNzQ1Nw=="}, "originalCommit": {"oid": "a4c5eeb073ec6ec48f293a53a7e0dcb4e2755504"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMwNTIyNg==", "bodyText": "In the APIUtil class, we have the base claims retriever method(getClaims()). The use cases which are using that method should come from the APIProviderImpl or APIConsumerImpl nah?", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r534305226", "createdAt": "2020-12-02T16:28:19Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -2390,16 +2390,38 @@ public String getSubscriber(String subscriptionId) throws APIManagementException\n         Map<String, String> claimMap = new HashMap<>();\n         try {\n             tenantId = getTenantId(tenantDomain);\n-        SortedMap<String, String> subscriberClaims =\n-                APIUtil.getClaims(subscriber, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);\n-        APIManagerConfiguration configuration = getAPIManagerConfiguration();\n-        String configuredClaims = configuration\n-                .getFirstProperty(APIConstants.API_PUBLISHER_SUBSCRIBER_CLAIMS);\n-        if (subscriberClaims != null) {\n-            for (String claimURI : configuredClaims.split(\",\")) {\n-                claimMap.put(claimURI, subscriberClaims.get(claimURI));\n+            SortedMap<String, String> subscriberClaims =\n+                    APIUtil.getClaims(subscriber, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);\n+            APIManagerConfiguration configuration = getAPIManagerConfiguration();\n+            String configuredClaims = configuration\n+                    .getFirstProperty(APIConstants.API_PUBLISHER_SUBSCRIBER_CLAIMS);\n+            if (subscriberClaims != null) {\n+                for (String claimURI : configuredClaims.split(\",\")) {\n+                    claimMap.put(claimURI, subscriberClaims.get(claimURI));\n+                }\n             }\n+        } catch (UserStoreException e) {\n+            throw new APIManagementException(\"Error while retrieving tenant id for tenant domain \"\n+                    + tenantDomain, e);\n         }\n+        return claimMap;\n+    }\n+\n+    /**\n+     * Returns the claims of a User\n+     *\n+     * @param userName The name of the user\n+     * @return The looked up claims of the user\n+     * @throws APIManagementException if failed to get user\n+     */\n+    @Override\n+    public Map<String, String> getLoggedInUserClaims(String userName) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(userName);\n+        int tenantId = 0;\n+        Map<String, String> claimMap;\n+        try {\n+            tenantId = getTenantId(tenantDomain);\n+            claimMap = APIUtil.getClaims(userName, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNzQ1Nw=="}, "originalCommit": {"oid": "a4c5eeb073ec6ec48f293a53a7e0dcb4e2755504"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDk3MTQ5MQ==", "bodyText": "It is not necessary. APIProvider and APIConsumer classes are actually APIM Domain specific..\nAPIProvider -> publisher operations\nAPIConsumer -> devportal operations\nRetrieving user information is actually bit general and not specific to above two. So it is okay to have it in a Util class itself.", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r534971491", "createdAt": "2020-12-03T09:03:39Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -2390,16 +2390,38 @@ public String getSubscriber(String subscriptionId) throws APIManagementException\n         Map<String, String> claimMap = new HashMap<>();\n         try {\n             tenantId = getTenantId(tenantDomain);\n-        SortedMap<String, String> subscriberClaims =\n-                APIUtil.getClaims(subscriber, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);\n-        APIManagerConfiguration configuration = getAPIManagerConfiguration();\n-        String configuredClaims = configuration\n-                .getFirstProperty(APIConstants.API_PUBLISHER_SUBSCRIBER_CLAIMS);\n-        if (subscriberClaims != null) {\n-            for (String claimURI : configuredClaims.split(\",\")) {\n-                claimMap.put(claimURI, subscriberClaims.get(claimURI));\n+            SortedMap<String, String> subscriberClaims =\n+                    APIUtil.getClaims(subscriber, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);\n+            APIManagerConfiguration configuration = getAPIManagerConfiguration();\n+            String configuredClaims = configuration\n+                    .getFirstProperty(APIConstants.API_PUBLISHER_SUBSCRIBER_CLAIMS);\n+            if (subscriberClaims != null) {\n+                for (String claimURI : configuredClaims.split(\",\")) {\n+                    claimMap.put(claimURI, subscriberClaims.get(claimURI));\n+                }\n             }\n+        } catch (UserStoreException e) {\n+            throw new APIManagementException(\"Error while retrieving tenant id for tenant domain \"\n+                    + tenantDomain, e);\n         }\n+        return claimMap;\n+    }\n+\n+    /**\n+     * Returns the claims of a User\n+     *\n+     * @param userName The name of the user\n+     * @return The looked up claims of the user\n+     * @throws APIManagementException if failed to get user\n+     */\n+    @Override\n+    public Map<String, String> getLoggedInUserClaims(String userName) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(userName);\n+        int tenantId = 0;\n+        Map<String, String> claimMap;\n+        try {\n+            tenantId = getTenantId(tenantDomain);\n+            claimMap = APIUtil.getClaims(userName, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNzQ1Nw=="}, "originalCommit": {"oid": "a4c5eeb073ec6ec48f293a53a7e0dcb4e2755504"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg0MTUwMg==", "bodyText": "According to our offline discussion created a new class APIRealmUtil to address this. Later we will port all user and role related methods from APIUtil class to this newly created class.\n9dce063", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r535841502", "createdAt": "2020-12-04T05:14:30Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -2390,16 +2390,38 @@ public String getSubscriber(String subscriptionId) throws APIManagementException\n         Map<String, String> claimMap = new HashMap<>();\n         try {\n             tenantId = getTenantId(tenantDomain);\n-        SortedMap<String, String> subscriberClaims =\n-                APIUtil.getClaims(subscriber, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);\n-        APIManagerConfiguration configuration = getAPIManagerConfiguration();\n-        String configuredClaims = configuration\n-                .getFirstProperty(APIConstants.API_PUBLISHER_SUBSCRIBER_CLAIMS);\n-        if (subscriberClaims != null) {\n-            for (String claimURI : configuredClaims.split(\",\")) {\n-                claimMap.put(claimURI, subscriberClaims.get(claimURI));\n+            SortedMap<String, String> subscriberClaims =\n+                    APIUtil.getClaims(subscriber, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);\n+            APIManagerConfiguration configuration = getAPIManagerConfiguration();\n+            String configuredClaims = configuration\n+                    .getFirstProperty(APIConstants.API_PUBLISHER_SUBSCRIBER_CLAIMS);\n+            if (subscriberClaims != null) {\n+                for (String claimURI : configuredClaims.split(\",\")) {\n+                    claimMap.put(claimURI, subscriberClaims.get(claimURI));\n+                }\n             }\n+        } catch (UserStoreException e) {\n+            throw new APIManagementException(\"Error while retrieving tenant id for tenant domain \"\n+                    + tenantDomain, e);\n         }\n+        return claimMap;\n+    }\n+\n+    /**\n+     * Returns the claims of a User\n+     *\n+     * @param userName The name of the user\n+     * @return The looked up claims of the user\n+     * @throws APIManagementException if failed to get user\n+     */\n+    @Override\n+    public Map<String, String> getLoggedInUserClaims(String userName) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(userName);\n+        int tenantId = 0;\n+        Map<String, String> claimMap;\n+        try {\n+            tenantId = getTenantId(tenantDomain);\n+            claimMap = APIUtil.getClaims(userName, tenantId, ClaimsRetriever.DEFAULT_DIALECT_URI);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNzQ1Nw=="}, "originalCommit": {"oid": "a4c5eeb073ec6ec48f293a53a7e0dcb4e2755504"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTgxODkwOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIRealmUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzoxMDo1M1rOIBaTyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNTozODo0MVrOIBkEdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MDUzOQ==", "bodyText": "Please add license header", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538350539", "createdAt": "2020-12-08T13:10:53Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIRealmUtils.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.wso2.carbon.apimgt.impl.utils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37a27c833ab39d90fbe9713afc21544f8331c3cf"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUxMDQ1NA==", "bodyText": "866313d", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538510454", "createdAt": "2020-12-08T15:38:41Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIRealmUtils.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.wso2.carbon.apimgt.impl.utils;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MDUzOQ=="}, "originalCommit": {"oid": "37a27c833ab39d90fbe9713afc21544f8331c3cf"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTgxOTY2OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/test/java/org/wso2/carbon/apimgt/impl/utils/APIRealmUtilTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzoxMTowMlrOIBaUUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNTozODozOFrOIBkEKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MDY3NA==", "bodyText": "License header", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538350674", "createdAt": "2020-12-08T13:11:02Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/test/java/org/wso2/carbon/apimgt/impl/utils/APIRealmUtilTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package org.wso2.carbon.apimgt.impl.utils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37a27c833ab39d90fbe9713afc21544f8331c3cf"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUxMDM3OQ==", "bodyText": "866313d", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538510379", "createdAt": "2020-12-08T15:38:38Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/test/java/org/wso2/carbon/apimgt/impl/utils/APIRealmUtilTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package org.wso2.carbon.apimgt.impl.utils;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MDY3NA=="}, "originalCommit": {"oid": "37a27c833ab39d90fbe9713afc21544f8331c3cf"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTgyMzA3OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/resources/store-api.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzoxMTozOFrOIBaWiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNTozODozNVrOIBkD5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MTI0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LastName:\n          \n          \n            \n                    lastName:", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538351240", "createdAt": "2020-12-08T13:11:38Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/resources/store-api.yaml", "diffHunk": "@@ -4590,6 +4594,18 @@ components:\n             example: admin\n           apiUUID:\n             type: string\n+    CommenterInfo:\n+      type: object\n+      properties:\n+        firstName:\n+          type: string\n+          example: John\n+        LastName:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37a27c833ab39d90fbe9713afc21544f8331c3cf"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUxMDMwOA==", "bodyText": "866313d", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538510308", "createdAt": "2020-12-08T15:38:35Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/resources/store-api.yaml", "diffHunk": "@@ -4590,6 +4594,18 @@ components:\n             example: admin\n           apiUUID:\n             type: string\n+    CommenterInfo:\n+      type: object\n+      properties:\n+        firstName:\n+          type: string\n+          example: John\n+        LastName:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MTI0MA=="}, "originalCommit": {"oid": "37a27c833ab39d90fbe9713afc21544f8331c3cf"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTgyNjM2OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/store/v1/mappings/CommentMappingUtil.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzoxMjowN1rOIBaYcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMzo0NToyNVrOICA8ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MTcyOQ==", "bodyText": "Format the code", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538351729", "createdAt": "2020-12-08T13:12:07Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/store/v1/mappings/CommentMappingUtil.java", "diffHunk": "@@ -48,6 +53,43 @@ public static CommentDTO fromCommentToDTO(Comment comment) throws APIManagementE\n         return commentDTO;\n     }\n \n+    /**\n+     * Converts a Comment object into corresponding REST API CommentDTO object with User Info\n+     *\n+     * @param comment comment object\n+     * @return CommentDTO\n+     */\n+    public static CommentDTO fromCommentToDTOWithUserInfo(Comment comment, Map<String,\n+            Map<String, String>> userClaimsMap)  throws APIManagementException {\n+        CommentDTO commentDTO = fromCommentToDTO(comment);\n+        if (userClaimsMap.get(comment.getUser()) != null) {\n+            Map userClaims = userClaimsMap.get(comment.getUser());\n+            CommenterInfoDTO commenterInfoDTO = new CommenterInfoDTO();\n+            commenterInfoDTO.setFullName((String) userClaims.get(APIConstants.FULL_NAME));\n+            commenterInfoDTO.setFirstName((String) userClaims.get(APIConstants.FIRST_NAME));\n+            commenterInfoDTO.setLastName((String) userClaims.get(APIConstants.LAST_NAME));\n+            commentDTO.setCommenterInfo(commenterInfoDTO);\n+        }\n+        return  commentDTO;\n+    }\n+\n+    /**\n+     * Retrieve userClaims from UserStore and save it in a cache map.\n+     *\n+     * @param username        commenter username\n+     * @param userClaimsMap   cache map with user deatils\n+     * @return Map<String, Map<String, String>>\n+     */\n+    public static  Map<String, Map<String, String>> retrieveUserClaims(String username,\n+                                                                       Map<String, Map<String, String>> userClaimsMap)\n+            throws APIManagementException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37a27c833ab39d90fbe9713afc21544f8331c3cf"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUxNTQ4Ng==", "bodyText": "We can't include Map<String, Map<String, String>> userClaimsMap in line 83. It is exceeding the number of characters limit", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538515486", "createdAt": "2020-12-08T15:43:03Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/store/v1/mappings/CommentMappingUtil.java", "diffHunk": "@@ -48,6 +53,43 @@ public static CommentDTO fromCommentToDTO(Comment comment) throws APIManagementE\n         return commentDTO;\n     }\n \n+    /**\n+     * Converts a Comment object into corresponding REST API CommentDTO object with User Info\n+     *\n+     * @param comment comment object\n+     * @return CommentDTO\n+     */\n+    public static CommentDTO fromCommentToDTOWithUserInfo(Comment comment, Map<String,\n+            Map<String, String>> userClaimsMap)  throws APIManagementException {\n+        CommentDTO commentDTO = fromCommentToDTO(comment);\n+        if (userClaimsMap.get(comment.getUser()) != null) {\n+            Map userClaims = userClaimsMap.get(comment.getUser());\n+            CommenterInfoDTO commenterInfoDTO = new CommenterInfoDTO();\n+            commenterInfoDTO.setFullName((String) userClaims.get(APIConstants.FULL_NAME));\n+            commenterInfoDTO.setFirstName((String) userClaims.get(APIConstants.FIRST_NAME));\n+            commenterInfoDTO.setLastName((String) userClaims.get(APIConstants.LAST_NAME));\n+            commentDTO.setCommenterInfo(commenterInfoDTO);\n+        }\n+        return  commentDTO;\n+    }\n+\n+    /**\n+     * Retrieve userClaims from UserStore and save it in a cache map.\n+     *\n+     * @param username        commenter username\n+     * @param userClaimsMap   cache map with user deatils\n+     * @return Map<String, Map<String, String>>\n+     */\n+    public static  Map<String, Map<String, String>> retrieveUserClaims(String username,\n+                                                                       Map<String, Map<String, String>> userClaimsMap)\n+            throws APIManagementException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MTcyOQ=="}, "originalCommit": {"oid": "37a27c833ab39d90fbe9713afc21544f8331c3cf"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY2NTM4NA==", "bodyText": "can we merge 85 and 84 to a single line?", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538665384", "createdAt": "2020-12-08T17:57:09Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/store/v1/mappings/CommentMappingUtil.java", "diffHunk": "@@ -48,6 +53,43 @@ public static CommentDTO fromCommentToDTO(Comment comment) throws APIManagementE\n         return commentDTO;\n     }\n \n+    /**\n+     * Converts a Comment object into corresponding REST API CommentDTO object with User Info\n+     *\n+     * @param comment comment object\n+     * @return CommentDTO\n+     */\n+    public static CommentDTO fromCommentToDTOWithUserInfo(Comment comment, Map<String,\n+            Map<String, String>> userClaimsMap)  throws APIManagementException {\n+        CommentDTO commentDTO = fromCommentToDTO(comment);\n+        if (userClaimsMap.get(comment.getUser()) != null) {\n+            Map userClaims = userClaimsMap.get(comment.getUser());\n+            CommenterInfoDTO commenterInfoDTO = new CommenterInfoDTO();\n+            commenterInfoDTO.setFullName((String) userClaims.get(APIConstants.FULL_NAME));\n+            commenterInfoDTO.setFirstName((String) userClaims.get(APIConstants.FIRST_NAME));\n+            commenterInfoDTO.setLastName((String) userClaims.get(APIConstants.LAST_NAME));\n+            commentDTO.setCommenterInfo(commenterInfoDTO);\n+        }\n+        return  commentDTO;\n+    }\n+\n+    /**\n+     * Retrieve userClaims from UserStore and save it in a cache map.\n+     *\n+     * @param username        commenter username\n+     * @param userClaimsMap   cache map with user deatils\n+     * @return Map<String, Map<String, String>>\n+     */\n+    public static  Map<String, Map<String, String>> retrieveUserClaims(String username,\n+                                                                       Map<String, Map<String, String>> userClaimsMap)\n+            throws APIManagementException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MTcyOQ=="}, "originalCommit": {"oid": "37a27c833ab39d90fbe9713afc21544f8331c3cf"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4MzUyNQ==", "bodyText": "dbe6f84", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538983525", "createdAt": "2020-12-09T03:45:25Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/store/v1/mappings/CommentMappingUtil.java", "diffHunk": "@@ -48,6 +53,43 @@ public static CommentDTO fromCommentToDTO(Comment comment) throws APIManagementE\n         return commentDTO;\n     }\n \n+    /**\n+     * Converts a Comment object into corresponding REST API CommentDTO object with User Info\n+     *\n+     * @param comment comment object\n+     * @return CommentDTO\n+     */\n+    public static CommentDTO fromCommentToDTOWithUserInfo(Comment comment, Map<String,\n+            Map<String, String>> userClaimsMap)  throws APIManagementException {\n+        CommentDTO commentDTO = fromCommentToDTO(comment);\n+        if (userClaimsMap.get(comment.getUser()) != null) {\n+            Map userClaims = userClaimsMap.get(comment.getUser());\n+            CommenterInfoDTO commenterInfoDTO = new CommenterInfoDTO();\n+            commenterInfoDTO.setFullName((String) userClaims.get(APIConstants.FULL_NAME));\n+            commenterInfoDTO.setFirstName((String) userClaims.get(APIConstants.FIRST_NAME));\n+            commenterInfoDTO.setLastName((String) userClaims.get(APIConstants.LAST_NAME));\n+            commentDTO.setCommenterInfo(commenterInfoDTO);\n+        }\n+        return  commentDTO;\n+    }\n+\n+    /**\n+     * Retrieve userClaims from UserStore and save it in a cache map.\n+     *\n+     * @param username        commenter username\n+     * @param userClaimsMap   cache map with user deatils\n+     * @return Map<String, Map<String, String>>\n+     */\n+    public static  Map<String, Map<String, String>> retrieveUserClaims(String username,\n+                                                                       Map<String, Map<String, String>> userClaimsMap)\n+            throws APIManagementException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MTcyOQ=="}, "originalCommit": {"oid": "37a27c833ab39d90fbe9713afc21544f8331c3cf"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTgyOTc0OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/store/v1/impl/ApisApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzoxMjozOFrOIBaaog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNTozODozMFrOIBkDgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MjI5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                CommentMappingUtil.retrieveUserClaims(comment.getUser(),userClaimsMap);\n          \n          \n            \n                                CommentMappingUtil.retrieveUserClaims(comment.getUser(), userClaimsMap);", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538352290", "createdAt": "2020-12-08T13:12:38Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/store/v1/impl/ApisApiServiceImpl.java", "diffHunk": "@@ -333,7 +333,14 @@ public Response getCommentOfAPI(String commentId, String apiId, String xWSO2Tena\n             Comment comment = apiConsumer.getComment(identifier, commentId);\n \n             if (comment != null) {\n-                CommentDTO commentDTO = CommentMappingUtil.fromCommentToDTO(comment);\n+                CommentDTO commentDTO;\n+                if (includeCommenterInfo) {\n+                    Map<String, Map<String, String>> userClaimsMap = new HashMap<>();\n+                    CommentMappingUtil.retrieveUserClaims(comment.getUser(),userClaimsMap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37a27c833ab39d90fbe9713afc21544f8331c3cf"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUxMDIxMA==", "bodyText": "866313d", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538510210", "createdAt": "2020-12-08T15:38:30Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/store/v1/impl/ApisApiServiceImpl.java", "diffHunk": "@@ -333,7 +333,14 @@ public Response getCommentOfAPI(String commentId, String apiId, String xWSO2Tena\n             Comment comment = apiConsumer.getComment(identifier, commentId);\n \n             if (comment != null) {\n-                CommentDTO commentDTO = CommentMappingUtil.fromCommentToDTO(comment);\n+                CommentDTO commentDTO;\n+                if (includeCommenterInfo) {\n+                    Map<String, Map<String, String>> userClaimsMap = new HashMap<>();\n+                    CommentMappingUtil.retrieveUserClaims(comment.getUser(),userClaimsMap);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MjI5MA=="}, "originalCommit": {"oid": "37a27c833ab39d90fbe9713afc21544f8331c3cf"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTgzMTMwOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/store/v1/impl/ApisApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzoxMjo1NlrOIBabtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNTozODoyNlrOIBkDKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MjU2Ng==", "bodyText": "Do not use * import", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538352566", "createdAt": "2020-12-08T13:12:56Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/store/v1/impl/ApisApiServiceImpl.java", "diffHunk": "@@ -44,17 +44,16 @@\n import org.wso2.carbon.apimgt.impl.APIConstants;\n import org.wso2.carbon.apimgt.impl.definitions.GraphQLSchemaDefinition;\n import org.wso2.carbon.apimgt.impl.dto.Environment;\n+import org.wso2.carbon.apimgt.impl.token.ClaimsRetriever;\n+import org.wso2.carbon.apimgt.impl.utils.APIRealmUtils;\n import org.wso2.carbon.apimgt.impl.utils.APIUtil;\n import org.wso2.carbon.apimgt.rest.api.store.v1.ApisApiService;\n \n \n import java.io.File;\n import java.net.URI;\n import java.net.URISyntaxException;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37a27c833ab39d90fbe9713afc21544f8331c3cf"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUxMDEyMw==", "bodyText": "866313d", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538510123", "createdAt": "2020-12-08T15:38:26Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/store/v1/impl/ApisApiServiceImpl.java", "diffHunk": "@@ -44,17 +44,16 @@\n import org.wso2.carbon.apimgt.impl.APIConstants;\n import org.wso2.carbon.apimgt.impl.definitions.GraphQLSchemaDefinition;\n import org.wso2.carbon.apimgt.impl.dto.Environment;\n+import org.wso2.carbon.apimgt.impl.token.ClaimsRetriever;\n+import org.wso2.carbon.apimgt.impl.utils.APIRealmUtils;\n import org.wso2.carbon.apimgt.impl.utils.APIUtil;\n import org.wso2.carbon.apimgt.rest.api.store.v1.ApisApiService;\n \n \n import java.io.File;\n import java.net.URI;\n import java.net.URISyntaxException;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MjU2Ng=="}, "originalCommit": {"oid": "37a27c833ab39d90fbe9713afc21544f8331c3cf"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MTgxMDI0OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/store/v1/impl/ApisApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODowNzozMlrOIBuLrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMzo0NToyMFrOICA8UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3NjE0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                Map<String, Map<String, String>> userClaimsMap = new HashMap<>();\n          \n          \n            \n                                CommentMappingUtil.retrieveUserClaims(comment.getUser(), userClaimsMap);\n          \n          \n            \n                                Map<String, Map<String, String>> userClaimsMap = CommentMappingUtil.retrieveUserClaims(comment.getUser(), new HashMap<>());\n          \n      \n    \n    \n  \n\nWill this be more readable?", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538676142", "createdAt": "2020-12-08T18:07:32Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/store/v1/impl/ApisApiServiceImpl.java", "diffHunk": "@@ -333,7 +334,14 @@ public Response getCommentOfAPI(String commentId, String apiId, String xWSO2Tena\n             Comment comment = apiConsumer.getComment(identifier, commentId);\n \n             if (comment != null) {\n-                CommentDTO commentDTO = CommentMappingUtil.fromCommentToDTO(comment);\n+                CommentDTO commentDTO;\n+                if (includeCommenterInfo) {\n+                    Map<String, Map<String, String>> userClaimsMap = new HashMap<>();\n+                    CommentMappingUtil.retrieveUserClaims(comment.getUser(), userClaimsMap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "866313d7b897152f88b7c3225827d8df4587365a"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4MzUwNA==", "bodyText": "dbe6f84", "url": "https://github.com/wso2/carbon-apimgt/pull/9454#discussion_r538983504", "createdAt": "2020-12-09T03:45:20Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/store/v1/impl/ApisApiServiceImpl.java", "diffHunk": "@@ -333,7 +334,14 @@ public Response getCommentOfAPI(String commentId, String apiId, String xWSO2Tena\n             Comment comment = apiConsumer.getComment(identifier, commentId);\n \n             if (comment != null) {\n-                CommentDTO commentDTO = CommentMappingUtil.fromCommentToDTO(comment);\n+                CommentDTO commentDTO;\n+                if (includeCommenterInfo) {\n+                    Map<String, Map<String, String>> userClaimsMap = new HashMap<>();\n+                    CommentMappingUtil.retrieveUserClaims(comment.getUser(), userClaimsMap);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3NjE0Mg=="}, "originalCommit": {"oid": "866313d7b897152f88b7c3225827d8df4587365a"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2968, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}