{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMjkyNjQw", "number": 8283, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwOTo0Nzo1MFrODklFkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwOTo0Nzo1MFrODklFkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjgyOTYwOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwOTo0Nzo1MFrOFw-wjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMzozNjowMVrOFxF7vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkwNDIwNw==", "bodyText": "JsonObject can be null", "url": "https://github.com/wso2/carbon-apimgt/pull/8283#discussion_r386904207", "createdAt": "2020-03-03T09:47:50Z", "author": {"login": "tharindu1st"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -9158,6 +9158,55 @@ public static JSONObject executeQueryOnStreamProcessor(String appName, String qu\n \n     }\n \n+    /**\n+     * Implemented to get the API usage count for monetization.\n+     *\n+     * @param from : the start timestamp of the query.\n+     * @param to   : the end timestamp of the query.\n+     * @return JSON Object.\n+     */\n+    public static JSONObject getUsageCountForMonetization(long from, long to)\n+            throws APIManagementException {\n+\n+        JSONObject jsonObject = null;\n+        String granularity = null;\n+        APIManagerConfiguration configuration = ServiceReferenceHolder.getInstance().getAPIManagerConfigurationService()\n+                .getAPIManagerConfiguration();\n+        granularity = configuration.getFirstProperty(\n+                APIConstants.Monetization.USAGE_PUBLISHER_GRANULARITY);\n+        if (StringUtils.isEmpty(granularity)) {\n+            //set the default granularity to days, if it is not set in configuration\n+            granularity = APIConstants.Monetization.USAGE_PUBLISH_DEFAULT_GRANULARITY;\n+        }\n+        StringBuilder query = new StringBuilder(\n+                \"from \" + APIConstants.Monetization.MONETIZATION_USAGE_RECORD_AGG\n+                        + \" within \" + from\n+                        + \"L, \" + to + \"L per '\" + granularity\n+                        + \"' select \"\n+                        + APIConstants.Analytics.API_NAME + \", \"\n+                        + APIConstants.Analytics.API_VERSION + \", \"\n+                        + APIConstants.Analytics.API_CREATOR + \", \"\n+                        + APIConstants.Analytics.API_CREATOR_TENANT_DOMAIN + \", \"\n+                        + APIConstants.Analytics.APPLICATION_ID + \", \"\n+                        + \"sum (requestCount) as requestCount \"\n+                        + \"group by \"\n+                        + APIConstants.Analytics.API_NAME + \", \"\n+                        + APIConstants.Analytics.API_VERSION + \", \"\n+                        + APIConstants.Analytics.API_CREATOR + \", \"\n+                        + APIConstants.Analytics.API_CREATOR_TENANT_DOMAIN + \", \"\n+                        + APIConstants.Analytics.APPLICATION_ID\n+        );\n+        try {\n+            jsonObject = APIUtil.executeQueryOnStreamProcessor(\n+                    APIConstants.Monetization.MONETIZATION_USAGE_RECORD_APP,\n+                    query.toString());\n+        } catch (APIManagementException ex) {\n+            String msg = \"Unable to Retrieve monetization usage records\";\n+            handleException(msg, ex);\n+        }\n+        return jsonObject;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5848af5112c579fc3d5b6bedcf1c2871e2c829b4"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAyMTc1Ng==", "bodyText": "fixed in a129c3e", "url": "https://github.com/wso2/carbon-apimgt/pull/8283#discussion_r387021756", "createdAt": "2020-03-03T13:36:01Z", "author": {"login": "shilmyhasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -9158,6 +9158,55 @@ public static JSONObject executeQueryOnStreamProcessor(String appName, String qu\n \n     }\n \n+    /**\n+     * Implemented to get the API usage count for monetization.\n+     *\n+     * @param from : the start timestamp of the query.\n+     * @param to   : the end timestamp of the query.\n+     * @return JSON Object.\n+     */\n+    public static JSONObject getUsageCountForMonetization(long from, long to)\n+            throws APIManagementException {\n+\n+        JSONObject jsonObject = null;\n+        String granularity = null;\n+        APIManagerConfiguration configuration = ServiceReferenceHolder.getInstance().getAPIManagerConfigurationService()\n+                .getAPIManagerConfiguration();\n+        granularity = configuration.getFirstProperty(\n+                APIConstants.Monetization.USAGE_PUBLISHER_GRANULARITY);\n+        if (StringUtils.isEmpty(granularity)) {\n+            //set the default granularity to days, if it is not set in configuration\n+            granularity = APIConstants.Monetization.USAGE_PUBLISH_DEFAULT_GRANULARITY;\n+        }\n+        StringBuilder query = new StringBuilder(\n+                \"from \" + APIConstants.Monetization.MONETIZATION_USAGE_RECORD_AGG\n+                        + \" within \" + from\n+                        + \"L, \" + to + \"L per '\" + granularity\n+                        + \"' select \"\n+                        + APIConstants.Analytics.API_NAME + \", \"\n+                        + APIConstants.Analytics.API_VERSION + \", \"\n+                        + APIConstants.Analytics.API_CREATOR + \", \"\n+                        + APIConstants.Analytics.API_CREATOR_TENANT_DOMAIN + \", \"\n+                        + APIConstants.Analytics.APPLICATION_ID + \", \"\n+                        + \"sum (requestCount) as requestCount \"\n+                        + \"group by \"\n+                        + APIConstants.Analytics.API_NAME + \", \"\n+                        + APIConstants.Analytics.API_VERSION + \", \"\n+                        + APIConstants.Analytics.API_CREATOR + \", \"\n+                        + APIConstants.Analytics.API_CREATOR_TENANT_DOMAIN + \", \"\n+                        + APIConstants.Analytics.APPLICATION_ID\n+        );\n+        try {\n+            jsonObject = APIUtil.executeQueryOnStreamProcessor(\n+                    APIConstants.Monetization.MONETIZATION_USAGE_RECORD_APP,\n+                    query.toString());\n+        } catch (APIManagementException ex) {\n+            String msg = \"Unable to Retrieve monetization usage records\";\n+            handleException(msg, ex);\n+        }\n+        return jsonObject;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkwNDIwNw=="}, "originalCommit": {"oid": "5848af5112c579fc3d5b6bedcf1c2871e2c829b4"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2809, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}