{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4OTA4NDA5", "number": 8243, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNDowOTo1OFrODi7-_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNDowOTo1OFrODi7-_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTYwOTU2OnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/LifeCycle/LifeCycleHistory.jsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNDowOTo1OFrOFudtTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNjo1ODoyMFrOFugCBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI2NTU1MA==", "bodyText": "@Sarangan0219 Shall we use Array.prototype.reverse() the method here, I think we get the lc history array in reverse order and re-reversing it before rendering would fix this issue", "url": "https://github.com/wso2/carbon-apimgt/pull/8243#discussion_r384265550", "createdAt": "2020-02-26T04:09:58Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/LifeCycle/LifeCycleHistory.jsx", "diffHunk": "@@ -64,7 +64,8 @@ const LifeCycleHistory = (props) => {\n                     </TableRow>\n                 </TableHead>\n                 <TableBody>\n-                    {props.lcHistory.map((entry) => entry.previousState && (\n+                    {props.lcHistory.sort((a, b) => moment(b.updatedTime)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fb25b9a522761de6551aeb22618f3ac663d08b3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI3MTkxMw==", "bodyText": "it is less time complex compared to sorting https://github.com/trekhleb/javascript-algorithms#Sorting\nhttps://www.geeksforgeeks.org/time-complexities-of-all-sorting-algorithms/\n\ud83d\ude03", "url": "https://github.com/wso2/carbon-apimgt/pull/8243#discussion_r384271913", "createdAt": "2020-02-26T04:42:29Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/LifeCycle/LifeCycleHistory.jsx", "diffHunk": "@@ -64,7 +64,8 @@ const LifeCycleHistory = (props) => {\n                     </TableRow>\n                 </TableHead>\n                 <TableBody>\n-                    {props.lcHistory.map((entry) => entry.previousState && (\n+                    {props.lcHistory.sort((a, b) => moment(b.updatedTime)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI2NTU1MA=="}, "originalCommit": {"oid": "0fb25b9a522761de6551aeb22618f3ac663d08b3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwMzYyMw==", "bodyText": "3815fdc\n\nWe don't need to re reverse before rendering. lchistory is behaving like a queue in getting the inputs .Thus reversing at the start and rendering is enough to get the desired behaviour.", "url": "https://github.com/wso2/carbon-apimgt/pull/8243#discussion_r384303623", "createdAt": "2020-02-26T06:58:20Z", "author": {"login": "Sarangan0219"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/LifeCycle/LifeCycleHistory.jsx", "diffHunk": "@@ -64,7 +64,8 @@ const LifeCycleHistory = (props) => {\n                     </TableRow>\n                 </TableHead>\n                 <TableBody>\n-                    {props.lcHistory.map((entry) => entry.previousState && (\n+                    {props.lcHistory.sort((a, b) => moment(b.updatedTime)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI2NTU1MA=="}, "originalCommit": {"oid": "0fb25b9a522761de6551aeb22618f3ac663d08b3"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2769, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}