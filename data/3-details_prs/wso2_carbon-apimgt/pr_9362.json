{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NTA5Mzgx", "number": 9362, "title": "Provide Markdown Editor to Add/Edit Description", "bodyText": "Purpose\nProvide a markdown editor to add/edit the description in the publisher portal.\nRelated Issue: wso2/product-apim#9272\nApproach\n\n\nRemoved the Description TextField in the Design Configurations UI page and added a link button to Add/Edit Description.\n\n\n\nAdded functionality to open up a Markdown Editor to add/edit the description when the link button is clicked.\n\n\n\nTest Environment\nJDK 1.8.0_241\nUbuntu 20.04.1 LTS", "createdAt": "2020-11-03T06:16:01Z", "url": "https://github.com/wso2/carbon-apimgt/pull/9362", "merged": true, "mergeCommit": {"oid": "0f23cdf7996678f27db31a70c7fd09c4cfdfd66a"}, "closed": true, "closedAt": "2021-01-07T05:35:57Z", "author": {"login": "hisanhunais"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddIJlggFqTUzMTUzMDUxNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtNnZ5AFqTU2MTk0NDg0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNTMwNTE3", "url": "https://github.com/wso2/carbon-apimgt/pull/9362#pullrequestreview-531530517", "createdAt": "2020-11-16T17:10:44Z", "commit": {"oid": "bdd1281c32ff8622ecde54e45df5f446b522ceb5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzoxMDo0NFrOH0I2Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzoxMDo0NFrOH0I2Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQzMjk0Mg==", "bodyText": "@hisanhunais It seems like this is a copy of this component\nCan't we reuse it here ?", "url": "https://github.com/wso2/carbon-apimgt/pull/9362#discussion_r524432942", "createdAt": "2020-11-16T17:10:44Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Configuration/components/MarkdownEditor.jsx", "diffHunk": "@@ -0,0 +1,184 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdd1281c32ff8622ecde54e45df5f446b522ceb5"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNTMxOTI4", "url": "https://github.com/wso2/carbon-apimgt/pull/9362#pullrequestreview-531531928", "createdAt": "2020-11-16T17:12:20Z", "commit": {"oid": "bdd1281c32ff8622ecde54e45df5f446b522ceb5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzoxMjoyMFrOH0I8gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzoxMjoyMFrOH0I8gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQzNDU2Mg==", "bodyText": "You might have taken this from an existing component, but this injects and higher-order components are a bit old with newer react hooks, Shall we replace injectIntl and withRouter , withStyles with their respective hooks", "url": "https://github.com/wso2/carbon-apimgt/pull/9362#discussion_r524434562", "createdAt": "2020-11-16T17:12:20Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/Configuration/components/MarkdownEditor.jsx", "diffHunk": "@@ -0,0 +1,184 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import React, { useState, Suspense, lazy } from 'react';\n+import { withRouter } from 'react-router-dom';\n+import Link from '@material-ui/core/Link';\n+import { FormattedMessage, injectIntl } from 'react-intl';\n+import PropTypes from 'prop-types';\n+import { withStyles } from '@material-ui/core/styles';\n+import Button from '@material-ui/core/Button';\n+import Dialog from '@material-ui/core/Dialog';\n+import IconButton from '@material-ui/core/IconButton';\n+import Typography from '@material-ui/core/Typography';\n+import Slide from '@material-ui/core/Slide';\n+import Icon from '@material-ui/core/Icon';\n+import Paper from '@material-ui/core/Paper';\n+import Grid from '@material-ui/core/Grid';\n+import CircularProgress from '@material-ui/core/CircularProgress';\n+import { isRestricted } from 'AppData/AuthManager';\n+import { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n+\n+const MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"MDMonacoEditor\" */));\n+const ReactMarkdown = lazy(() => import('react-markdown' /* webpackChunkName: \"MDReactMarkdown\" */));\n+\n+const styles = {\n+    flex: {\n+        flex: 1,\n+    },\n+    popupHeader: {\n+        display: 'flex',\n+        flexDirection: 'row',\n+        alignItems: 'center',\n+    },\n+    splitWrapper: {\n+        padding: 0,\n+    },\n+    description: {\n+        alignItems: 'center',\n+        display: 'flex',\n+    },\n+    markdownViewWrapper: {\n+        height: '100vh',\n+        overflowY: 'auto',\n+    },\n+    button: {\n+        height: 30,\n+        marginLeft: 30,\n+    },\n+};\n+\n+function Transition(props) {\n+    return <Slide direction='up' {...props} />;\n+}\n+\n+function MarkdownEditor(props) {\n+    const { api, configDispatcher } = props;\n+    const [open, setOpen] = useState(false);\n+    const [description, setDescription] = useState(null);\n+    const [apiFromContext] = useAPI();\n+    const [isUpdating, setIsUpdating] = useState(false);\n+\n+    const toggleOpen = () => {\n+        if (!open) setDescription(description || api.description);\n+        setOpen(!open);\n+    };\n+    const changeDescription = (newDescription) => {\n+        setDescription(newDescription);\n+    };\n+    const updateDescription = () => {\n+        setIsUpdating(true);\n+        configDispatcher({ action: 'description', value: description });\n+        toggleOpen();\n+        setIsUpdating(false);\n+    };\n+    const editorDidMount = (editor) => {\n+        editor.focus();\n+    };\n+\n+    const { classes } = props;\n+    return (\n+        <div>\n+            <Link onClick={toggleOpen}>\n+                <Button\n+                    color='primary'\n+                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n+                >\n+                    {api.description ? (\n+                        <FormattedMessage\n+                            id='Apis.Details.Configuration.components.MarkdownEditor.edit.description.button'\n+                            defaultMessage='Edit Description'\n+                        />\n+                    ) : (\n+                        <FormattedMessage\n+                            id='Apis.Details.Configuration.components.MarkdownEditor.add.description.button'\n+                            defaultMessage='Add Description'\n+                        />\n+                    )}\n+                </Button>\n+            </Link>\n+            <Dialog fullScreen open={open} onClose={toggleOpen} TransitionComponent={Transition}>\n+                <Paper square className={classes.popupHeader}>\n+                    <IconButton color='inherit' onClick={toggleOpen} aria-label='Close'>\n+                        <Icon>close</Icon>\n+                    </IconButton>\n+                    <Typography variant='h4' className={classes.description}>\n+                        <FormattedMessage\n+                            id='Apis.Details.Documents.MarkdownEditor.edit.content.of'\n+                            defaultMessage='Edit Description of '\n+                        />\n+                        {api.name}\n+                    </Typography>\n+                    <Button\n+                        className={classes.button}\n+                        variant='contained'\n+                        disabled={isUpdating}\n+                        color='primary'\n+                        onClick={updateDescription}\n+                    >\n+                        <FormattedMessage\n+                            id='Apis.Details.Documents.MarkdownEditor.update.content.button'\n+                            defaultMessage='Update Description'\n+                        />\n+                        {isUpdating && <CircularProgress size={24} />}\n+                    </Button>\n+                    <Button className={classes.button} onClick={toggleOpen}>\n+                        <FormattedMessage\n+                            id='Apis.Details.Documents.MarkdownEditor.cancel.button'\n+                            defaultMessage='Cancel'\n+                        />\n+                    </Button>\n+                </Paper>\n+                <div className={classes.splitWrapper}>\n+                    <Grid container spacing={7}>\n+                        <Grid item xs={6}>\n+                            <Suspense fallback={<CircularProgress />}>\n+                                <MonacoEditor\n+                                    width='100%'\n+                                    height='100vh'\n+                                    language='markdown'\n+                                    theme='vs-dark'\n+                                    value={description}\n+                                    options={{ selectOnLineNumbers: true }}\n+                                    onChange={changeDescription}\n+                                    editorDidMount={editorDidMount}\n+                                />\n+                            </Suspense>\n+                        </Grid>\n+                        <Grid item xs={6}>\n+                            <div className={classes.markdownViewWrapper}>\n+                                <Suspense fallback={<CircularProgress />}>\n+                                    <ReactMarkdown escapeHtml={false} source={description} />\n+                                </Suspense>\n+                            </div>\n+                        </Grid>\n+                    </Grid>\n+                </div>\n+            </Dialog>\n+        </div>\n+    );\n+}\n+\n+MarkdownEditor.propTypes = {\n+    api: PropTypes.shape({}).isRequired,\n+    configDispatcher: PropTypes.func.isRequired,\n+    classes: PropTypes.shape({}).isRequired,\n+    intl: PropTypes.shape({}).isRequired,\n+};\n+\n+export default injectIntl(withRouter(withStyles(styles)(MarkdownEditor)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdd1281c32ff8622ecde54e45df5f446b522ceb5"}, "originalPosition": 184}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d95857acbbfb01ec110788de6cd310a59b4d757b", "author": {"user": {"login": "hisanhunais", "name": null}}, "url": "https://github.com/wso2/carbon-apimgt/commit/d95857acbbfb01ec110788de6cd310a59b4d757b", "committedDate": "2021-01-04T06:42:08Z", "message": "Add markdown editor support for API description"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f66e3a9a634e8447abebfb0698f063af3abb7f6b", "author": {"user": {"login": "hisanhunais", "name": null}}, "url": "https://github.com/wso2/carbon-apimgt/commit/f66e3a9a634e8447abebfb0698f063af3abb7f6b", "committedDate": "2021-01-05T06:44:32Z", "message": "Replace withStyles with makeStyles react hook"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f1638a6f4dc871c241019c8ab8db4e1eec0f900", "author": {"user": {"login": "hisanhunais", "name": null}}, "url": "https://github.com/wso2/carbon-apimgt/commit/0f1638a6f4dc871c241019c8ab8db4e1eec0f900", "committedDate": "2021-01-05T08:53:43Z", "message": "Add Markdown view for API description"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bdd1281c32ff8622ecde54e45df5f446b522ceb5", "author": {"user": {"login": "hisanhunais", "name": null}}, "url": "https://github.com/wso2/carbon-apimgt/commit/bdd1281c32ff8622ecde54e45df5f446b522ceb5", "committedDate": "2020-11-03T05:25:27Z", "message": "Add markdown editor support for API description"}, "afterCommit": {"oid": "0f1638a6f4dc871c241019c8ab8db4e1eec0f900", "author": {"user": {"login": "hisanhunais", "name": null}}, "url": "https://github.com/wso2/carbon-apimgt/commit/0f1638a6f4dc871c241019c8ab8db4e1eec0f900", "committedDate": "2021-01-05T08:53:43Z", "message": "Add Markdown view for API description"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxOTQ0ODQ5", "url": "https://github.com/wso2/carbon-apimgt/pull/9362#pullrequestreview-561944849", "createdAt": "2021-01-05T16:35:38Z", "commit": {"oid": "0f1638a6f4dc871c241019c8ab8db4e1eec0f900"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3083, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}