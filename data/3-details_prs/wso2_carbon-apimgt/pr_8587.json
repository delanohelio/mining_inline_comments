{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNzkzOTk0", "number": 8587, "title": "Add Condition Status to Blacklist Policies", "bodyText": "Add Condition Status to Blacklist Policies", "createdAt": "2020-05-27T11:42:07Z", "url": "https://github.com/wso2/carbon-apimgt/pull/8587", "merged": true, "mergeCommit": {"oid": "3d2878ea8edf7a4f003fff4d991e29a7a68cbb39"}, "closed": true, "closedAt": "2020-05-28T07:46:20Z", "author": {"login": "kavishkafernando"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclXtw6gH2gAyNDIzNzkzOTk0OmNmZjBjYTIyNTVhMGVjNGMxMWY0ZTAzMTlmYjdhOTc2N2I5MzkyMjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcln0PHAFqTQxOTgwODY2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223", "author": {"user": {"login": "kavishkafernando", "name": "Kavishka Fernando"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/cff0ca2255a0ec4c11f4e0319fb7a9767b939223", "committedDate": "2020-05-27T11:39:05Z", "message": "Add Condition Status to Blacklist Policies"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MTI5NTU2", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#pullrequestreview-419129556", "createdAt": "2020-05-27T12:12:58Z", "commit": {"oid": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjoxMjo1OFrOGbGY3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjoxMjo1OFrOGbGY3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2OTQwNw==", "bodyText": "Why we define this policyList  variable outside the promise lambda function? I think it's better to move it inside the lambda function scope and refer it", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431069407", "createdAt": "2020-05-27T12:12:58Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin_new/source/src/app/components/Throttling/Blacklist/List.jsx", "diffHunk": "@@ -95,6 +98,77 @@ export default function ListBlacklistThrottlingPolicies() {\n         }),\n     };\n \n+    /**\n+ * Mock API call\n+ * @returns {Promise}.\n+ */\n+    function apiCall() {\n+        let policyList;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MTMwMDIy", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#pullrequestreview-419130022", "createdAt": "2020-05-27T12:13:36Z", "commit": {"oid": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjoxMzozNlrOGbGaMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjoxMzozNlrOGbGaMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2OTc0NA==", "bodyText": "Same as above , no need to declare the variable outside the lambda function scope right ? incrementId", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431069744", "createdAt": "2020-05-27T12:13:36Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin_new/source/src/app/components/Throttling/Blacklist/List.jsx", "diffHunk": "@@ -95,6 +98,77 @@ export default function ListBlacklistThrottlingPolicies() {\n         }),\n     };\n \n+    /**\n+ * Mock API call\n+ * @returns {Promise}.\n+ */\n+    function apiCall() {\n+        let policyList;\n+        let incrementId = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MTMzNjIw", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#pullrequestreview-419133620", "createdAt": "2020-05-27T12:18:37Z", "commit": {"oid": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjoxODozN1rOGbGlXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjoxODozN1rOGbGlXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA3MjYwNg==", "bodyText": "Why we use Object constructor here ?\nThis will convert null or undefined values to objects ?\nThe Object constructor creates an object wrapper for the given value.\n\nIf the value is null or undefined, it will create and return an empty object.\nOtherwise, it will return an object of a Type that corresponds to the given value.\nIf the value is an object already, it will return the value.", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431072606", "createdAt": "2020-05-27T12:18:37Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin_new/source/src/app/components/Throttling/Blacklist/List.jsx", "diffHunk": "@@ -95,6 +98,77 @@ export default function ListBlacklistThrottlingPolicies() {\n         }),\n     };\n \n+    /**\n+ * Mock API call\n+ * @returns {Promise}.\n+ */\n+    function apiCall() {\n+        let policyList;\n+        let incrementId = 0;\n+        return new Promise(((resolve, reject) => {\n+            restApi.blacklistPoliciesGet().then((result) => {\n+                policyList = result.body.list;\n+                const blacklistPolicies = policyList.map((obj) => {\n+                    let array = [];\n+                    incrementId++;\n+                    if (obj.conditionValue === Object(obj.conditionValue)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MTM1OTAw", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#pullrequestreview-419135900", "createdAt": "2020-05-27T12:21:43Z", "commit": {"oid": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjoyMTo0M1rOGbGscA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjoyMTo0M1rOGbGscA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA3NDQxNg==", "bodyText": "This is no-op , What is the purpose of these 2 lines? Object.keys", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431074416", "createdAt": "2020-05-27T12:21:43Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin_new/source/src/app/components/Throttling/Blacklist/List.jsx", "diffHunk": "@@ -95,6 +98,77 @@ export default function ListBlacklistThrottlingPolicies() {\n         }),\n     };\n \n+    /**\n+ * Mock API call\n+ * @returns {Promise}.\n+ */\n+    function apiCall() {\n+        let policyList;\n+        let incrementId = 0;\n+        return new Promise(((resolve, reject) => {\n+            restApi.blacklistPoliciesGet().then((result) => {\n+                policyList = result.body.list;\n+                const blacklistPolicies = policyList.map((obj) => {\n+                    let array = [];\n+                    incrementId++;\n+                    if (obj.conditionValue === Object(obj.conditionValue)) {\n+                        Object.keys(obj.conditionValue);\n+                        Object.values(obj.conditionValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MTQyMzg0", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#pullrequestreview-419142384", "createdAt": "2020-05-27T12:30:10Z", "commit": {"oid": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjozMDoxMFrOGbG_Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjozMDoxMFrOGbG_Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA3OTE5OQ==", "bodyText": "Do we need to create a new Promise here?, Is this because of that Alert message issue ?", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431079199", "createdAt": "2020-05-27T12:30:10Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin_new/source/src/app/components/Throttling/Blacklist/List.jsx", "diffHunk": "@@ -95,6 +98,77 @@ export default function ListBlacklistThrottlingPolicies() {\n         }),\n     };\n \n+    /**\n+ * Mock API call\n+ * @returns {Promise}.\n+ */\n+    function apiCall() {\n+        let policyList;\n+        let incrementId = 0;\n+        return new Promise(((resolve, reject) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MTQzNTE2", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#pullrequestreview-419143516", "createdAt": "2020-05-27T12:31:35Z", "commit": {"oid": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjozMTozNVrOGbHCSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjozMTozNVrOGbHCSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4MDAxMQ==", "bodyText": "If you only return the res.conditionStatus what is the purpose of setting other res properties in above if condition ?", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431080011", "createdAt": "2020-05-27T12:31:35Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin_new/source/src/app/components/Throttling/Blacklist/List.jsx", "diffHunk": "@@ -95,6 +98,77 @@ export default function ListBlacklistThrottlingPolicies() {\n         }),\n     };\n \n+    /**\n+ * Mock API call\n+ * @returns {Promise}.\n+ */\n+    function apiCall() {\n+        let policyList;\n+        let incrementId = 0;\n+        return new Promise(((resolve, reject) => {\n+            restApi.blacklistPoliciesGet().then((result) => {\n+                policyList = result.body.list;\n+                const blacklistPolicies = policyList.map((obj) => {\n+                    let array = [];\n+                    incrementId++;\n+                    if (obj.conditionValue === Object(obj.conditionValue)) {\n+                        Object.keys(obj.conditionValue);\n+                        Object.values(obj.conditionValue);\n+                        array = Object.entries(obj.conditionValue);\n+                    } else {\n+                        array.push(obj.conditionValue);\n+                    }\n+                    return {\n+                        conditionId: incrementId,\n+                        conditionUUID: obj.conditionId,\n+                        conditionType: obj.conditionType,\n+                        conditionValue: array,\n+                        conditionStatus: obj.conditionStatus,\n+                    };\n+                });\n+                setBlacklistPolicyList(blacklistPolicies);\n+                resolve(blacklistPolicies);\n+            }).catch((error) => {\n+                reject(error);\n+            });\n+        }));\n+    }\n+\n+    const handleConditionStatus = (conditionUUID, event) => {\n+        let editedConditionId;\n+        let editedConditionStatus;\n+        const blacklistPolicyListNew = cloneDeep(blacklistPolicyList);\n+        blacklistPolicyListNew.map((res) => {\n+            if (res.conditionUUID === conditionUUID) {\n+                res.conditionStatus = event.target.checked;\n+                editedConditionId = conditionUUID;\n+                editedConditionStatus = event.target.checked;\n+            }\n+            return res.conditionStatus;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MTQ2Mzg2", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#pullrequestreview-419146386", "createdAt": "2020-05-27T12:35:04Z", "commit": {"oid": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjozNTowNFrOGbHKoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjozNTowNFrOGbHKoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4MjE0NA==", "bodyText": "I think, If you want to change the elements in the blacklistPolicyListNew  using the event data, It's better to return modified element in the map and use the return value from the map and set it to state, by that way you might not need to cloneDeep it beforehand", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431082144", "createdAt": "2020-05-27T12:35:04Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin_new/source/src/app/components/Throttling/Blacklist/List.jsx", "diffHunk": "@@ -95,6 +98,77 @@ export default function ListBlacklistThrottlingPolicies() {\n         }),\n     };\n \n+    /**\n+ * Mock API call\n+ * @returns {Promise}.\n+ */\n+    function apiCall() {\n+        let policyList;\n+        let incrementId = 0;\n+        return new Promise(((resolve, reject) => {\n+            restApi.blacklistPoliciesGet().then((result) => {\n+                policyList = result.body.list;\n+                const blacklistPolicies = policyList.map((obj) => {\n+                    let array = [];\n+                    incrementId++;\n+                    if (obj.conditionValue === Object(obj.conditionValue)) {\n+                        Object.keys(obj.conditionValue);\n+                        Object.values(obj.conditionValue);\n+                        array = Object.entries(obj.conditionValue);\n+                    } else {\n+                        array.push(obj.conditionValue);\n+                    }\n+                    return {\n+                        conditionId: incrementId,\n+                        conditionUUID: obj.conditionId,\n+                        conditionType: obj.conditionType,\n+                        conditionValue: array,\n+                        conditionStatus: obj.conditionStatus,\n+                    };\n+                });\n+                setBlacklistPolicyList(blacklistPolicies);\n+                resolve(blacklistPolicies);\n+            }).catch((error) => {\n+                reject(error);\n+            });\n+        }));\n+    }\n+\n+    const handleConditionStatus = (conditionUUID, event) => {\n+        let editedConditionId;\n+        let editedConditionStatus;\n+        const blacklistPolicyListNew = cloneDeep(blacklistPolicyList);\n+        blacklistPolicyListNew.map((res) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MTQ3NjU5", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#pullrequestreview-419147659", "createdAt": "2020-05-27T12:36:35Z", "commit": {"oid": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b554e8337119f5651ab8e837f9fc2327d3288801", "author": {"user": {"login": "kavishkafernando", "name": "Kavishka Fernando"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/b554e8337119f5651ab8e837f9fc2327d3288801", "committedDate": "2020-05-27T12:48:57Z", "message": "Fix variable issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "645581c8a3b682d6d2392bc04c91782500058619", "author": {"user": {"login": "kavishkafernando", "name": "Kavishka Fernando"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/645581c8a3b682d6d2392bc04c91782500058619", "committedDate": "2020-05-27T14:41:47Z", "message": "change Switch name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddbed194cd342fa368d595a9fbde8889dd803ab8", "author": {"user": {"login": "kavishkafernando", "name": "Kavishka Fernando"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/ddbed194cd342fa368d595a9fbde8889dd803ab8", "committedDate": "2020-05-28T04:23:50Z", "message": "Remove unnecessary code line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77e53a09363218abf84e454992de67200ea98fe5", "author": {"user": {"login": "kavishkafernando", "name": "Kavishka Fernando"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/77e53a09363218abf84e454992de67200ea98fe5", "committedDate": "2020-05-28T06:04:44Z", "message": "Use event components for api call"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0b7e46816c4849ef381ec5aefa78d2afa220758", "author": {"user": {"login": "kavishkafernando", "name": "Kavishka Fernando"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/a0b7e46816c4849ef381ec5aefa78d2afa220758", "committedDate": "2020-05-28T06:10:41Z", "message": "Remove unnecessary new promise"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5ODA4NjYy", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#pullrequestreview-419808662", "createdAt": "2020-05-28T06:24:38Z", "commit": {"oid": "a0b7e46816c4849ef381ec5aefa78d2afa220758"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2802, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}