{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2ODA3NjQx", "number": 8494, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNDo1NDo0NlrOD76IsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNDo1NzowM1rOD76KGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTQ1MDcyOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.endpoint.registry/src/main/java/org/wso2/carbon/apimgt/rest/api/endpoint/registry/impl/RegistriesApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNDo1NDo0NlrOGUhYwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNDo1ODo0NVrOGUhcfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3MTcxNA==", "bodyText": "Shall we return the updated Registry object in response.", "url": "https://github.com/wso2/carbon-apimgt/pull/8494#discussion_r424171714", "createdAt": "2020-05-13T04:54:46Z", "author": {"login": "vithu30"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.endpoint.registry/src/main/java/org/wso2/carbon/apimgt/rest/api/endpoint/registry/impl/RegistriesApiServiceImpl.java", "diffHunk": "@@ -164,7 +164,23 @@ public Response createRegistryEntry(String registryId, RegistryEntryDTO registry\n     @Override\n     public Response updateRegistry(String registryId, RegistryDTO body, MessageContext messageContext) {\n \n-        return Response.ok().entity(body).build();\n+        String tenantDomain = RestApiUtil.getLoggedInUserTenantDomain();\n+        String user = RestApiUtil.getLoggedInUsername();\n+        EndpointRegistry registryProvider = new EndpointRegistryImpl();\n+        EndpointRegistryInfo registryToUpdate = EndpointRegistryMappingUtils.fromDTOtoEndpointRegistry(body, user);\n+        try {\n+            EndpointRegistryInfo endpointRegistry =\n+                    registryProvider.getEndpointRegistryByUUID(registryId, tenantDomain);\n+            if (endpointRegistry == null) {\n+                RestApiUtil.handleResourceNotFoundError(\"Endpoint registry with the id: \" + registryId +\n+                        \" is not found\", log);\n+            }\n+            registryProvider.updateEndpointRegistry(registryId, registryToUpdate);\n+        } catch (APIManagementException e) {\n+            RestApiUtil.handleInternalServerError(\"Error while updating the endpoint registry \" +\n+                    \"with id: \" + registryId, e, log);\n+        }\n+        return Response.ok().entity(\"Successfully updated the endpoint registry\").build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffc5529b3748a9b92f7f719e1496b69e59e98002"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3MjY3MQ==", "bodyText": "ack. missed it", "url": "https://github.com/wso2/carbon-apimgt/pull/8494#discussion_r424172671", "createdAt": "2020-05-13T04:58:45Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.endpoint.registry/src/main/java/org/wso2/carbon/apimgt/rest/api/endpoint/registry/impl/RegistriesApiServiceImpl.java", "diffHunk": "@@ -164,7 +164,23 @@ public Response createRegistryEntry(String registryId, RegistryEntryDTO registry\n     @Override\n     public Response updateRegistry(String registryId, RegistryDTO body, MessageContext messageContext) {\n \n-        return Response.ok().entity(body).build();\n+        String tenantDomain = RestApiUtil.getLoggedInUserTenantDomain();\n+        String user = RestApiUtil.getLoggedInUsername();\n+        EndpointRegistry registryProvider = new EndpointRegistryImpl();\n+        EndpointRegistryInfo registryToUpdate = EndpointRegistryMappingUtils.fromDTOtoEndpointRegistry(body, user);\n+        try {\n+            EndpointRegistryInfo endpointRegistry =\n+                    registryProvider.getEndpointRegistryByUUID(registryId, tenantDomain);\n+            if (endpointRegistry == null) {\n+                RestApiUtil.handleResourceNotFoundError(\"Endpoint registry with the id: \" + registryId +\n+                        \" is not found\", log);\n+            }\n+            registryProvider.updateEndpointRegistry(registryId, registryToUpdate);\n+        } catch (APIManagementException e) {\n+            RestApiUtil.handleInternalServerError(\"Error while updating the endpoint registry \" +\n+                    \"with id: \" + registryId, e, log);\n+        }\n+        return Response.ok().entity(\"Successfully updated the endpoint registry\").build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3MTcxNA=="}, "originalCommit": {"oid": "ffc5529b3748a9b92f7f719e1496b69e59e98002"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTQ1NDMzOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNDo1NzowM1rOGUha7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNDo1OTozMFrOGUhdJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3MjI2OQ==", "bodyText": "We don't need to generate uuid when updating the Registry. Shall we remove it?", "url": "https://github.com/wso2/carbon-apimgt/pull/8494#discussion_r424172269", "createdAt": "2020-05-13T04:57:03Z", "author": {"login": "vithu30"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -14757,6 +14757,37 @@ public String addEndpointRegistry(EndpointRegistryInfo endpointRegistry, int ten\n         return uuid;\n     }\n \n+    /**\n+     * Update an existing endpoint registry.\n+     *\n+     * @param registryId uuid of the endpoint registry\n+     * @param endpointRegistry EndpointRegistryInfo object with updated details\n+     * @return uuid of the updated endpoint registry\n+     * @throws APIManagementException if unable to update the endpoint registry\n+     */\n+    public String updateEndpointRegistry(String registryId, EndpointRegistryInfo endpointRegistry) throws\n+            APIManagementException {\n+\n+        String query = SQLConstants.UPDATE_ENDPOINT_REGISTRY_SQL;\n+        String uuid = UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffc5529b3748a9b92f7f719e1496b69e59e98002"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3MjgzOA==", "bodyText": "ack", "url": "https://github.com/wso2/carbon-apimgt/pull/8494#discussion_r424172838", "createdAt": "2020-05-13T04:59:30Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -14757,6 +14757,37 @@ public String addEndpointRegistry(EndpointRegistryInfo endpointRegistry, int ten\n         return uuid;\n     }\n \n+    /**\n+     * Update an existing endpoint registry.\n+     *\n+     * @param registryId uuid of the endpoint registry\n+     * @param endpointRegistry EndpointRegistryInfo object with updated details\n+     * @return uuid of the updated endpoint registry\n+     * @throws APIManagementException if unable to update the endpoint registry\n+     */\n+    public String updateEndpointRegistry(String registryId, EndpointRegistryInfo endpointRegistry) throws\n+            APIManagementException {\n+\n+        String query = SQLConstants.UPDATE_ENDPOINT_REGISTRY_SQL;\n+        String uuid = UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3MjI2OQ=="}, "originalCommit": {"oid": "ffc5529b3748a9b92f7f719e1496b69e59e98002"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3530, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}