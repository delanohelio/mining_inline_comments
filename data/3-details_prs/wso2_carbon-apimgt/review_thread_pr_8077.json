{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNDM2NjU3", "number": 8077, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNDo0MDo1MFrODXuzjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMDozNToxOVrODXzS9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjEwNzAwOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIAdminImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNDo0MDo1MFrOFdMCAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNjoxNjo0NFrOFdNDsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE1MDE0Ng==", "bodyText": "extra space", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366150146", "createdAt": "2020-01-14T04:40:50Z", "author": {"login": "ruks"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIAdminImpl.java", "diffHunk": "@@ -280,4 +287,70 @@ public void addBotDataEmailConfiguration(String email) throws APIManagementExcep\n     public void deleteBotDataEmailList(String uuid) throws APIManagementException, SQLException {\n         apiMgtDAO.deleteBotDataEmailList(uuid);\n     }\n+\n+    public APICategory addCategory(APICategory category, String userName) throws APIManagementException {\n+        int tenantID = APIUtil.getTenantId(userName);\n+        if (isCategoryNameExists(category.getName(), null, tenantID)) {\n+            APIUtil.handleException(\"Category with name '\" + category.getName() + \"' already exists\");\n+        }\n+        return apiMgtDAO.addCategory(tenantID, category);\n+    }\n+\n+    public void updateCategory(APICategory apiCategory) throws APIManagementException {\n+        apiMgtDAO.updateCategory(apiCategory);\n+    }\n+\n+    public void deleteCategory(String categoryID, String username) throws APIManagementException {\n+        APICategory category = getAPICategoryByID(categoryID);\n+        int attchedAPICount = isCategoryAttached(category, username);\n+        if ( attchedAPICount > 0) {\n+            APIUtil.handleException(\"Unable to delete the category. It is attached to API(s)\");\n+        }\n+        apiMgtDAO.deleteCategory(categoryID);\n+    }\n+\n+    public List<APICategory> getAllAPICategoriesOfTenant(int tenantId) throws APIManagementException {\n+        return apiMgtDAO.getAllCategories(tenantId);\n+    }\n+\n+    public List<APICategory> getAllAPICategoriesOfTenantForAdminListing(String username) throws APIManagementException{\n+        int tenantID = APIUtil.getTenantId(username);\n+        List<APICategory> categories = getAllAPICategoriesOfTenant(tenantID);\n+        if (categories.size() > 0) {\n+            for (APICategory category : categories) {\n+                int length = isCategoryAttached(category, username);\n+                category.setNumberOfAPIs(length);\n+            }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "112a10e0698934b9abd70839432b998009efb292"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE2Njk2Mw==", "bodyText": "fixed in e646d5a", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366166963", "createdAt": "2020-01-14T06:16:44Z", "author": {"login": "msm1992"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIAdminImpl.java", "diffHunk": "@@ -280,4 +287,70 @@ public void addBotDataEmailConfiguration(String email) throws APIManagementExcep\n     public void deleteBotDataEmailList(String uuid) throws APIManagementException, SQLException {\n         apiMgtDAO.deleteBotDataEmailList(uuid);\n     }\n+\n+    public APICategory addCategory(APICategory category, String userName) throws APIManagementException {\n+        int tenantID = APIUtil.getTenantId(userName);\n+        if (isCategoryNameExists(category.getName(), null, tenantID)) {\n+            APIUtil.handleException(\"Category with name '\" + category.getName() + \"' already exists\");\n+        }\n+        return apiMgtDAO.addCategory(tenantID, category);\n+    }\n+\n+    public void updateCategory(APICategory apiCategory) throws APIManagementException {\n+        apiMgtDAO.updateCategory(apiCategory);\n+    }\n+\n+    public void deleteCategory(String categoryID, String username) throws APIManagementException {\n+        APICategory category = getAPICategoryByID(categoryID);\n+        int attchedAPICount = isCategoryAttached(category, username);\n+        if ( attchedAPICount > 0) {\n+            APIUtil.handleException(\"Unable to delete the category. It is attached to API(s)\");\n+        }\n+        apiMgtDAO.deleteCategory(categoryID);\n+    }\n+\n+    public List<APICategory> getAllAPICategoriesOfTenant(int tenantId) throws APIManagementException {\n+        return apiMgtDAO.getAllCategories(tenantId);\n+    }\n+\n+    public List<APICategory> getAllAPICategoriesOfTenantForAdminListing(String username) throws APIManagementException{\n+        int tenantID = APIUtil.getTenantId(username);\n+        List<APICategory> categories = getAllAPICategoriesOfTenant(tenantID);\n+        if (categories.size() > 0) {\n+            for (APICategory category : categories) {\n+                int length = isCategoryAttached(category, username);\n+                category.setNumberOfAPIs(length);\n+            }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE1MDE0Ng=="}, "originalCommit": {"oid": "112a10e0698934b9abd70839432b998009efb292"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjEwNzg1OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIAdminImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNDo0MTozOVrOFdMCgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNjoxNjo1NFrOFdND2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE1MDI3NA==", "bodyText": "no need both logging and throwing exception", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366150274", "createdAt": "2020-01-14T04:41:39Z", "author": {"login": "ruks"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIAdminImpl.java", "diffHunk": "@@ -280,4 +287,70 @@ public void addBotDataEmailConfiguration(String email) throws APIManagementExcep\n     public void deleteBotDataEmailList(String uuid) throws APIManagementException, SQLException {\n         apiMgtDAO.deleteBotDataEmailList(uuid);\n     }\n+\n+    public APICategory addCategory(APICategory category, String userName) throws APIManagementException {\n+        int tenantID = APIUtil.getTenantId(userName);\n+        if (isCategoryNameExists(category.getName(), null, tenantID)) {\n+            APIUtil.handleException(\"Category with name '\" + category.getName() + \"' already exists\");\n+        }\n+        return apiMgtDAO.addCategory(tenantID, category);\n+    }\n+\n+    public void updateCategory(APICategory apiCategory) throws APIManagementException {\n+        apiMgtDAO.updateCategory(apiCategory);\n+    }\n+\n+    public void deleteCategory(String categoryID, String username) throws APIManagementException {\n+        APICategory category = getAPICategoryByID(categoryID);\n+        int attchedAPICount = isCategoryAttached(category, username);\n+        if ( attchedAPICount > 0) {\n+            APIUtil.handleException(\"Unable to delete the category. It is attached to API(s)\");\n+        }\n+        apiMgtDAO.deleteCategory(categoryID);\n+    }\n+\n+    public List<APICategory> getAllAPICategoriesOfTenant(int tenantId) throws APIManagementException {\n+        return apiMgtDAO.getAllCategories(tenantId);\n+    }\n+\n+    public List<APICategory> getAllAPICategoriesOfTenantForAdminListing(String username) throws APIManagementException{\n+        int tenantID = APIUtil.getTenantId(username);\n+        List<APICategory> categories = getAllAPICategoriesOfTenant(tenantID);\n+        if (categories.size() > 0) {\n+            for (APICategory category : categories) {\n+                int length = isCategoryAttached(category, username);\n+                category.setNumberOfAPIs(length);\n+            }\n+\n+        }\n+        return categories;\n+    }\n+\n+    public boolean isCategoryNameExists(String categoryName, String uuid, int tenantID) throws APIManagementException {\n+        return ApiMgtDAO.getInstance().isAPICategoryNameExists(categoryName, uuid, tenantID);\n+    }\n+\n+    public APICategory getAPICategoryByID(String apiCategoryId) throws APIManagementException {\n+        APICategory apiCategory = ApiMgtDAO.getInstance().getAPICategoryByID(apiCategoryId);\n+        if (apiCategory != null) {\n+            return apiCategory;\n+        }else {\n+            String msg = \"Failed to get APICategory. API category corresponding to UUID \" + apiCategoryId\n+                    + \" does not exist\";\n+            log.error(msg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "112a10e0698934b9abd70839432b998009efb292"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE2NzAwMA==", "bodyText": "fixed in e646d5a", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366167000", "createdAt": "2020-01-14T06:16:54Z", "author": {"login": "msm1992"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIAdminImpl.java", "diffHunk": "@@ -280,4 +287,70 @@ public void addBotDataEmailConfiguration(String email) throws APIManagementExcep\n     public void deleteBotDataEmailList(String uuid) throws APIManagementException, SQLException {\n         apiMgtDAO.deleteBotDataEmailList(uuid);\n     }\n+\n+    public APICategory addCategory(APICategory category, String userName) throws APIManagementException {\n+        int tenantID = APIUtil.getTenantId(userName);\n+        if (isCategoryNameExists(category.getName(), null, tenantID)) {\n+            APIUtil.handleException(\"Category with name '\" + category.getName() + \"' already exists\");\n+        }\n+        return apiMgtDAO.addCategory(tenantID, category);\n+    }\n+\n+    public void updateCategory(APICategory apiCategory) throws APIManagementException {\n+        apiMgtDAO.updateCategory(apiCategory);\n+    }\n+\n+    public void deleteCategory(String categoryID, String username) throws APIManagementException {\n+        APICategory category = getAPICategoryByID(categoryID);\n+        int attchedAPICount = isCategoryAttached(category, username);\n+        if ( attchedAPICount > 0) {\n+            APIUtil.handleException(\"Unable to delete the category. It is attached to API(s)\");\n+        }\n+        apiMgtDAO.deleteCategory(categoryID);\n+    }\n+\n+    public List<APICategory> getAllAPICategoriesOfTenant(int tenantId) throws APIManagementException {\n+        return apiMgtDAO.getAllCategories(tenantId);\n+    }\n+\n+    public List<APICategory> getAllAPICategoriesOfTenantForAdminListing(String username) throws APIManagementException{\n+        int tenantID = APIUtil.getTenantId(username);\n+        List<APICategory> categories = getAllAPICategoriesOfTenant(tenantID);\n+        if (categories.size() > 0) {\n+            for (APICategory category : categories) {\n+                int length = isCategoryAttached(category, username);\n+                category.setNumberOfAPIs(length);\n+            }\n+\n+        }\n+        return categories;\n+    }\n+\n+    public boolean isCategoryNameExists(String categoryName, String uuid, int tenantID) throws APIManagementException {\n+        return ApiMgtDAO.getInstance().isAPICategoryNameExists(categoryName, uuid, tenantID);\n+    }\n+\n+    public APICategory getAPICategoryByID(String apiCategoryId) throws APIManagementException {\n+        APICategory apiCategory = ApiMgtDAO.getInstance().getAPICategoryByID(apiCategoryId);\n+        if (apiCategory != null) {\n+            return apiCategory;\n+        }else {\n+            String msg = \"Failed to get APICategory. API category corresponding to UUID \" + apiCategoryId\n+                    + \" does not exist\";\n+            log.error(msg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE1MDI3NA=="}, "originalCommit": {"oid": "112a10e0698934b9abd70839432b998009efb292"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjEwOTI3OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNDo0MzowMFrOFdMDWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNjoxNzowM1rOFdND-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE1MDQ5MA==", "bodyText": "extra spaces in this method", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366150490", "createdAt": "2020-01-14T04:43:00Z", "author": {"login": "ruks"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -14321,4 +14322,167 @@ public void removeExpiredJWTs() throws APIManagementException {\n             handleException(\"Error while deleting expired JWTs from revoke table.\", e);\n         }\n     }\n+\n+    /**\n+     * Adds an API category\n+     *\n+     * @param tenantID     Logged in user's tenant ID\n+     * @param category     Category\n+     * @return Category\n+     */\n+    public APICategory addCategory(int tenantID, APICategory category) throws APIManagementException {\n+        String uuid = UUID.randomUUID().toString();\n+        category.setId(uuid);\n+        try (Connection connection = APIMgtDBUtil.getConnection();\n+            PreparedStatement statement = connection.prepareStatement(SQLConstants.ADD_CATEGORY_SQL)) {\n+            statement.setString(1, uuid);\n+            statement.setString(2, category.getName());\n+            statement.setString(3, category.getDescription());\n+            statement.setInt(4, tenantID);\n+            statement.executeUpdate();\n+        } catch (SQLException e) {\n+            handleException(\"Failed to add Category: \" + uuid, e);\n+        }\n+        return category;\n+    }\n+\n+    /**\n+     * Update API Category\n+     *\n+     * @param apiCategory API category object with updated details\n+     * @throws APIManagementException\n+     */\n+    public void updateCategory(APICategory apiCategory) throws APIManagementException {\n+        try (Connection connection = APIMgtDBUtil.getConnection();\n+                PreparedStatement statement = connection.prepareStatement(SQLConstants.UPDATE_API_CATEGORY)) {\n+            statement.setString(1, apiCategory.getDescription());\n+            statement.setString(2, apiCategory.getName());\n+            statement.setString(3, apiCategory.getId());\n+            statement.execute();\n+        } catch (SQLException e) {\n+            handleException(\"Failed to update API Category : \" + apiCategory.getName() + \" of tenant \" +\n+                    APIUtil.getTenantDomainFromTenantId(apiCategory.getTenantID()), e);\n+        }\n+    }\n+\n+    /**\n+     * Get all available API categories of the tenant\n+     *\n+     * @param tenantID\n+     * @return API Categories List\n+     */\n+    public List<APICategory> getAllCategories(int tenantID) throws APIManagementException {\n+        List<APICategory> categoriesList = new ArrayList<>();\n+        try (Connection connection = APIMgtDBUtil.getConnection();\n+            PreparedStatement statement = connection.prepareStatement(SQLConstants.GET_CATEGORIES_BY_TENANT_ID_SQL)) {\n+            statement.setInt(1, tenantID);\n+\n+            ResultSet rs = statement.executeQuery();\n+            while(rs.next()) {\n+                String id = rs.getString(\"UUID\");\n+                String name = rs.getString(\"NAME\");\n+                String description = rs.getString(\"DESCRIPTION\");\n+\n+                APICategory category = new APICategory();\n+                category.setId(id);\n+                category.setName(name);\n+                category.setDescription(description);\n+                category.setTenantID(tenantID);\n+\n+                categoriesList.add(category);\n+            }\n+        } catch (SQLException e) {\n+            handleException(\"Failed to retrieve API categories for tenant \" + tenantID, e);\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "112a10e0698934b9abd70839432b998009efb292"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE2NzAzMw==", "bodyText": "fixed in e646d5a", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366167033", "createdAt": "2020-01-14T06:17:03Z", "author": {"login": "msm1992"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -14321,4 +14322,167 @@ public void removeExpiredJWTs() throws APIManagementException {\n             handleException(\"Error while deleting expired JWTs from revoke table.\", e);\n         }\n     }\n+\n+    /**\n+     * Adds an API category\n+     *\n+     * @param tenantID     Logged in user's tenant ID\n+     * @param category     Category\n+     * @return Category\n+     */\n+    public APICategory addCategory(int tenantID, APICategory category) throws APIManagementException {\n+        String uuid = UUID.randomUUID().toString();\n+        category.setId(uuid);\n+        try (Connection connection = APIMgtDBUtil.getConnection();\n+            PreparedStatement statement = connection.prepareStatement(SQLConstants.ADD_CATEGORY_SQL)) {\n+            statement.setString(1, uuid);\n+            statement.setString(2, category.getName());\n+            statement.setString(3, category.getDescription());\n+            statement.setInt(4, tenantID);\n+            statement.executeUpdate();\n+        } catch (SQLException e) {\n+            handleException(\"Failed to add Category: \" + uuid, e);\n+        }\n+        return category;\n+    }\n+\n+    /**\n+     * Update API Category\n+     *\n+     * @param apiCategory API category object with updated details\n+     * @throws APIManagementException\n+     */\n+    public void updateCategory(APICategory apiCategory) throws APIManagementException {\n+        try (Connection connection = APIMgtDBUtil.getConnection();\n+                PreparedStatement statement = connection.prepareStatement(SQLConstants.UPDATE_API_CATEGORY)) {\n+            statement.setString(1, apiCategory.getDescription());\n+            statement.setString(2, apiCategory.getName());\n+            statement.setString(3, apiCategory.getId());\n+            statement.execute();\n+        } catch (SQLException e) {\n+            handleException(\"Failed to update API Category : \" + apiCategory.getName() + \" of tenant \" +\n+                    APIUtil.getTenantDomainFromTenantId(apiCategory.getTenantID()), e);\n+        }\n+    }\n+\n+    /**\n+     * Get all available API categories of the tenant\n+     *\n+     * @param tenantID\n+     * @return API Categories List\n+     */\n+    public List<APICategory> getAllCategories(int tenantID) throws APIManagementException {\n+        List<APICategory> categoriesList = new ArrayList<>();\n+        try (Connection connection = APIMgtDBUtil.getConnection();\n+            PreparedStatement statement = connection.prepareStatement(SQLConstants.GET_CATEGORIES_BY_TENANT_ID_SQL)) {\n+            statement.setInt(1, tenantID);\n+\n+            ResultSet rs = statement.executeQuery();\n+            while(rs.next()) {\n+                String id = rs.getString(\"UUID\");\n+                String name = rs.getString(\"NAME\");\n+                String description = rs.getString(\"DESCRIPTION\");\n+\n+                APICategory category = new APICategory();\n+                category.setId(id);\n+                category.setName(name);\n+                category.setDescription(description);\n+                category.setTenantID(tenantID);\n+\n+                categoriesList.add(category);\n+            }\n+        } catch (SQLException e) {\n+            handleException(\"Failed to retrieve API categories for tenant \" + tenantID, e);\n+        }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE1MDQ5MA=="}, "originalCommit": {"oid": "112a10e0698934b9abd70839432b998009efb292"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjQ5MTcyOnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin/site/blocks/api-category/api-category-add/ajax/api-category-edit.jag", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwODo0MDo1MFrOFdPnLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOToyNzo1MFrOFdQ4Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIwODgxMg==", "bodyText": "Formatting issue", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366208812", "createdAt": "2020-01-14T08:40:50Z", "author": {"login": "mushthaq33"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin/site/blocks/api-category/api-category-add/ajax/api-category-edit.jag", "diffHunk": "@@ -0,0 +1,74 @@\n+<%\n+include(\"/jagg/jagg.jag\");\n+\n+(function () {\n+    response.contentType = \"application/json; charset=UTF-8\";\n+    var mod, result, obj, permissionResult,\n+    action = request.getParameter(\"action\"),\n+    uuid = request.getParameter(\"uuid\"),\n+    site = require(\"/site/conf/site.json\"),\n+    msg = require(\"/site/conf/ui-messages.jag\");\n+\n+    if(uuid == null){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e646d5a8cbf82d6fb2ba2cd090e252a4dfaca540"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIyOTUxOQ==", "bodyText": "fixed in c6c0ee0", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366229519", "createdAt": "2020-01-14T09:27:50Z", "author": {"login": "msm1992"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin/site/blocks/api-category/api-category-add/ajax/api-category-edit.jag", "diffHunk": "@@ -0,0 +1,74 @@\n+<%\n+include(\"/jagg/jagg.jag\");\n+\n+(function () {\n+    response.contentType = \"application/json; charset=UTF-8\";\n+    var mod, result, obj, permissionResult,\n+    action = request.getParameter(\"action\"),\n+    uuid = request.getParameter(\"uuid\"),\n+    site = require(\"/site/conf/site.json\"),\n+    msg = require(\"/site/conf/ui-messages.jag\");\n+\n+    if(uuid == null){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIwODgxMg=="}, "originalCommit": {"oid": "e646d5a8cbf82d6fb2ba2cd090e252a4dfaca540"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjQ5MjI2OnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin/site/blocks/api-category/api-category-add/ajax/api-category-edit.jag", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwODo0MTowMlrOFdPndw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOToyNzo0M1rOFdQ3zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIwODg4Nw==", "bodyText": "Formatting issue", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366208887", "createdAt": "2020-01-14T08:41:02Z", "author": {"login": "mushthaq33"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin/site/blocks/api-category/api-category-add/ajax/api-category-edit.jag", "diffHunk": "@@ -0,0 +1,74 @@\n+<%\n+include(\"/jagg/jagg.jag\");\n+\n+(function () {\n+    response.contentType = \"application/json; charset=UTF-8\";\n+    var mod, result, obj, permissionResult,\n+    action = request.getParameter(\"action\"),\n+    uuid = request.getParameter(\"uuid\"),\n+    site = require(\"/site/conf/site.json\"),\n+    msg = require(\"/site/conf/ui-messages.jag\");\n+\n+    if(uuid == null){\n+        uuid = -1;\n+    }\n+    if(jagg.getUser() == null){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e646d5a8cbf82d6fb2ba2cd090e252a4dfaca540"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIyOTQ1Mg==", "bodyText": "fixed in c6c0ee0", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366229452", "createdAt": "2020-01-14T09:27:43Z", "author": {"login": "msm1992"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin/site/blocks/api-category/api-category-add/ajax/api-category-edit.jag", "diffHunk": "@@ -0,0 +1,74 @@\n+<%\n+include(\"/jagg/jagg.jag\");\n+\n+(function () {\n+    response.contentType = \"application/json; charset=UTF-8\";\n+    var mod, result, obj, permissionResult,\n+    action = request.getParameter(\"action\"),\n+    uuid = request.getParameter(\"uuid\"),\n+    site = require(\"/site/conf/site.json\"),\n+    msg = require(\"/site/conf/ui-messages.jag\");\n+\n+    if(uuid == null){\n+        uuid = -1;\n+    }\n+    if(jagg.getUser() == null){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIwODg4Nw=="}, "originalCommit": {"oid": "e646d5a8cbf82d6fb2ba2cd090e252a4dfaca540"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjQ5MjgwOnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin/site/blocks/api-category/api-category-list/ajax/api-category-list.jag", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwODo0MToxM1rOFdPnyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOToyNzozNlrOFdQ3gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIwODk2OQ==", "bodyText": "Formatting issue", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366208969", "createdAt": "2020-01-14T08:41:13Z", "author": {"login": "mushthaq33"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin/site/blocks/api-category/api-category-list/ajax/api-category-list.jag", "diffHunk": "@@ -0,0 +1,36 @@\n+<%\n+include(\"/jagg/jagg.jag\");\n+\n+(function () {\n+    response.contentType = \"application/json; charset=UTF-8\";\n+    var mod, result, obj,\n+    action = request.getParameter(\"action\"),\n+    site = require(\"/site/conf/site.json\"),\n+    msg = require(\"/site/conf/ui-messages.jag\");\n+    if(jagg.getUser() == null){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e646d5a8cbf82d6fb2ba2cd090e252a4dfaca540"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIyOTM3OA==", "bodyText": "fixed in c6c0ee0", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366229378", "createdAt": "2020-01-14T09:27:36Z", "author": {"login": "msm1992"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin/site/blocks/api-category/api-category-list/ajax/api-category-list.jag", "diffHunk": "@@ -0,0 +1,36 @@\n+<%\n+include(\"/jagg/jagg.jag\");\n+\n+(function () {\n+    response.contentType = \"application/json; charset=UTF-8\";\n+    var mod, result, obj,\n+    action = request.getParameter(\"action\"),\n+    site = require(\"/site/conf/site.json\"),\n+    msg = require(\"/site/conf/ui-messages.jag\");\n+    if(jagg.getUser() == null){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIwODk2OQ=="}, "originalCommit": {"oid": "e646d5a8cbf82d6fb2ba2cd090e252a4dfaca540"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjQ5NDE0OnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin/site/themes/wso2/templates/api-category/api-category-add/template.jag", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwODo0MTo0NlrOFdPonQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOToyNzoyOFrOFdQ3Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIwOTE4MQ==", "bodyText": "Formatting issue. There are other places as well. Please fix them all.", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366209181", "createdAt": "2020-01-14T08:41:46Z", "author": {"login": "mushthaq33"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin/site/themes/wso2/templates/api-category/api-category-add/template.jag", "diffHunk": "@@ -0,0 +1,97 @@\n+<% jagg.template(\"api-category/api-category-add\", function(inputs, outputs, jagg) { %>\n+\n+    <%\n+    var uuid = request.getParameter(\"uuid\");\n+    var action = request.getParameter(\"action\");\n+    var pageTitle = i18n.localize(\"Add API Category\");\n+    var nameFieldDisableStatus = \"\";\n+\n+    if(action == null){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e646d5a8cbf82d6fb2ba2cd090e252a4dfaca540"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIyOTMyMw==", "bodyText": "fixed in c6c0ee0", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366229323", "createdAt": "2020-01-14T09:27:28Z", "author": {"login": "msm1992"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin/site/themes/wso2/templates/api-category/api-category-add/template.jag", "diffHunk": "@@ -0,0 +1,97 @@\n+<% jagg.template(\"api-category/api-category-add\", function(inputs, outputs, jagg) { %>\n+\n+    <%\n+    var uuid = request.getParameter(\"uuid\");\n+    var action = request.getParameter(\"action\");\n+    var pageTitle = i18n.localize(\"Add API Category\");\n+    var nameFieldDisableStatus = \"\";\n+\n+    if(action == null){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIwOTE4MQ=="}, "originalCommit": {"oid": "e646d5a8cbf82d6fb2ba2cd090e252a4dfaca540"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjY4OTQwOnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin/modules/api-category/api-category-add.jag", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOTo0OTowMFrOFdRhLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMDo1NDo0NlrOFdTg4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI0MDA0Ng==", "bodyText": "Formatting issue", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366240046", "createdAt": "2020-01-14T09:49:00Z", "author": {"login": "mushthaq33"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin/modules/api-category/api-category-add.jag", "diffHunk": "@@ -0,0 +1,69 @@\n+<%\n+var log = new Log();\n+var addAPICategory = function (action, uuid, categoryName, description) {\n+    try {\n+        var username = jagg.getUser().username;\n+        var APIAdminImpl = Packages.org.wso2.carbon.apimgt.impl.APIAdminImpl;\n+        var apiAdmin = new APIAdminImpl();\n+\n+        var APICategory = Packages.org.wso2.carbon.apimgt.api.model.APICategory;\n+        var category = new APICategory();\n+\n+        category.setId(uuid);\n+        category.setName(categoryName);\n+        category.setDescription(description);\n+\n+        if (action == \"categoryAction\") {\n+            var category = constructCategoryObject(uuid, categoryName, description);\n+            apiAdmin.addCategory(category, username);\n+        } else if (action == \"update\") {\n+            var category = constructCategoryObject(uuid, categoryName, description);\n+            apiAdmin.updateCategory(category);\n+        }\n+        return {\n+            error: false\n+        };\n+    } catch (ex) {\n+        var errorMessage = \"Error occurred while saving API Category (Cause:\" + ex.message + \")\";\n+        log.error(errorMessage);\n+        return {\n+            error: true,\n+            message: errorMessage\n+        };\n+    }\n+};\n+\n+var isCategoryNameExists = function(categoryName, uuid, tenantId) {\n+    try {\n+        var exists;\n+        var APIAdminImpl = Packages.org.wso2.carbon.apimgt.impl.APIAdminImpl;\n+        var apiAdmin = new APIAdminImpl();\n+\n+        exists = apiAdmin.isCategoryNameExists(categoryName, uuid, tenantId);\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"isAPICategoryNameExists exist for : \" + categoryName + \" : \" + exists);\n+        }\n+        return {\n+            error:false,\n+            exist:exists\n+        };\n+    } catch (e) {\n+        log.error(e.message);\n+        return {\n+            error:e\n+        };\n+    }\n+}\n+\n+var constructCategoryObject  = function(categoryId, categoryName, description){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dda94e83243cdd801e9cf1a1dc4ce3ade4d00ad"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI3MjczOQ==", "bodyText": "fixed", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366272739", "createdAt": "2020-01-14T10:54:46Z", "author": {"login": "msm1992"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin/modules/api-category/api-category-add.jag", "diffHunk": "@@ -0,0 +1,69 @@\n+<%\n+var log = new Log();\n+var addAPICategory = function (action, uuid, categoryName, description) {\n+    try {\n+        var username = jagg.getUser().username;\n+        var APIAdminImpl = Packages.org.wso2.carbon.apimgt.impl.APIAdminImpl;\n+        var apiAdmin = new APIAdminImpl();\n+\n+        var APICategory = Packages.org.wso2.carbon.apimgt.api.model.APICategory;\n+        var category = new APICategory();\n+\n+        category.setId(uuid);\n+        category.setName(categoryName);\n+        category.setDescription(description);\n+\n+        if (action == \"categoryAction\") {\n+            var category = constructCategoryObject(uuid, categoryName, description);\n+            apiAdmin.addCategory(category, username);\n+        } else if (action == \"update\") {\n+            var category = constructCategoryObject(uuid, categoryName, description);\n+            apiAdmin.updateCategory(category);\n+        }\n+        return {\n+            error: false\n+        };\n+    } catch (ex) {\n+        var errorMessage = \"Error occurred while saving API Category (Cause:\" + ex.message + \")\";\n+        log.error(errorMessage);\n+        return {\n+            error: true,\n+            message: errorMessage\n+        };\n+    }\n+};\n+\n+var isCategoryNameExists = function(categoryName, uuid, tenantId) {\n+    try {\n+        var exists;\n+        var APIAdminImpl = Packages.org.wso2.carbon.apimgt.impl.APIAdminImpl;\n+        var apiAdmin = new APIAdminImpl();\n+\n+        exists = apiAdmin.isCategoryNameExists(categoryName, uuid, tenantId);\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"isAPICategoryNameExists exist for : \" + categoryName + \" : \" + exists);\n+        }\n+        return {\n+            error:false,\n+            exist:exists\n+        };\n+    } catch (e) {\n+        log.error(e.message);\n+        return {\n+            error:e\n+        };\n+    }\n+}\n+\n+var constructCategoryObject  = function(categoryId, categoryName, description){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI0MDA0Ng=="}, "originalCommit": {"oid": "3dda94e83243cdd801e9cf1a1dc4ce3ade4d00ad"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjY4OTY5OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/impl/ApiCategoriesApiServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOTo0OTowOFrOFdRhYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMDo1NDo1MlrOFdThIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI0MDA5OQ==", "bodyText": "Formatting issue", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366240099", "createdAt": "2020-01-14T09:49:08Z", "author": {"login": "mushthaq33"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/impl/ApiCategoriesApiServiceImpl.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ */\n+\n+package org.wso2.carbon.apimgt.rest.api.admin.impl;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.apimgt.api.APIAdmin;\n+import org.wso2.carbon.apimgt.api.APIManagementException;\n+import org.wso2.carbon.apimgt.api.model.APICategory;\n+import org.wso2.carbon.apimgt.impl.APIAdminImpl;\n+import org.wso2.carbon.apimgt.impl.utils.APIUtil;\n+import org.wso2.carbon.apimgt.rest.api.admin.ApiCategoriesApiService;\n+import org.wso2.carbon.apimgt.rest.api.admin.dto.APICategoryDTO;\n+import org.wso2.carbon.apimgt.rest.api.admin.dto.APICategoryListDTO;\n+import org.wso2.carbon.apimgt.rest.api.admin.utils.mappings.APICategoryMappingUtil;\n+import org.wso2.carbon.apimgt.rest.api.util.RestApiConstants;\n+import org.wso2.carbon.apimgt.rest.api.util.utils.RestApiUtil;\n+import org.wso2.carbon.utils.multitenancy.MultitenantUtils;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.List;\n+import javax.ws.rs.core.Response;\n+\n+public class ApiCategoriesApiServiceImpl extends ApiCategoriesApiService {\n+    private static final Log log = LogFactory.getLog(ApiCategoriesApiServiceImpl.class);\n+\n+    public Response apiCategoriesGet(){\n+        try {\n+            APIAdmin apiAdmin = new APIAdminImpl();\n+            String tenantDomain = RestApiUtil.getLoggedInUserTenantDomain();\n+            int tenantID = APIUtil.getTenantIdFromTenantDomain(tenantDomain);\n+            List<APICategory> categoryList = apiAdmin.getAllAPICategoriesOfTenant(tenantID);\n+            APICategoryListDTO categoryListDTO =\n+                    APICategoryMappingUtil.fromCategoryListToCategoryListDTO(categoryList);\n+            return Response.ok().entity(categoryListDTO).build();\n+        } catch (APIManagementException e) {\n+            String errorMessage = \"Error while retrieving API categories\";\n+            RestApiUtil.handleInternalServerError(errorMessage, e, log);\n+        }\n+        return null;\n+    }\n+\n+    public Response apiCategoriesPost(APICategoryDTO body){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dda94e83243cdd801e9cf1a1dc4ce3ade4d00ad"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI3MjgwMQ==", "bodyText": "fixed", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366272801", "createdAt": "2020-01-14T10:54:52Z", "author": {"login": "msm1992"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/impl/ApiCategoriesApiServiceImpl.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ */\n+\n+package org.wso2.carbon.apimgt.rest.api.admin.impl;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.apimgt.api.APIAdmin;\n+import org.wso2.carbon.apimgt.api.APIManagementException;\n+import org.wso2.carbon.apimgt.api.model.APICategory;\n+import org.wso2.carbon.apimgt.impl.APIAdminImpl;\n+import org.wso2.carbon.apimgt.impl.utils.APIUtil;\n+import org.wso2.carbon.apimgt.rest.api.admin.ApiCategoriesApiService;\n+import org.wso2.carbon.apimgt.rest.api.admin.dto.APICategoryDTO;\n+import org.wso2.carbon.apimgt.rest.api.admin.dto.APICategoryListDTO;\n+import org.wso2.carbon.apimgt.rest.api.admin.utils.mappings.APICategoryMappingUtil;\n+import org.wso2.carbon.apimgt.rest.api.util.RestApiConstants;\n+import org.wso2.carbon.apimgt.rest.api.util.utils.RestApiUtil;\n+import org.wso2.carbon.utils.multitenancy.MultitenantUtils;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.List;\n+import javax.ws.rs.core.Response;\n+\n+public class ApiCategoriesApiServiceImpl extends ApiCategoriesApiService {\n+    private static final Log log = LogFactory.getLog(ApiCategoriesApiServiceImpl.class);\n+\n+    public Response apiCategoriesGet(){\n+        try {\n+            APIAdmin apiAdmin = new APIAdminImpl();\n+            String tenantDomain = RestApiUtil.getLoggedInUserTenantDomain();\n+            int tenantID = APIUtil.getTenantIdFromTenantDomain(tenantDomain);\n+            List<APICategory> categoryList = apiAdmin.getAllAPICategoriesOfTenant(tenantID);\n+            APICategoryListDTO categoryListDTO =\n+                    APICategoryMappingUtil.fromCategoryListToCategoryListDTO(categoryList);\n+            return Response.ok().entity(categoryListDTO).build();\n+        } catch (APIManagementException e) {\n+            String errorMessage = \"Error while retrieving API categories\";\n+            RestApiUtil.handleInternalServerError(errorMessage, e, log);\n+        }\n+        return null;\n+    }\n+\n+    public Response apiCategoriesPost(APICategoryDTO body){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI0MDA5OQ=="}, "originalCommit": {"oid": "3dda94e83243cdd801e9cf1a1dc4ce3ade4d00ad"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjY5MDExOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/impl/ApiCategoriesApiServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOTo0OToxNVrOFdRhog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMDo1NTowMFrOFdThcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI0MDE2Mg==", "bodyText": "Formatting issue", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366240162", "createdAt": "2020-01-14T09:49:15Z", "author": {"login": "mushthaq33"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/impl/ApiCategoriesApiServiceImpl.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ */\n+\n+package org.wso2.carbon.apimgt.rest.api.admin.impl;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.apimgt.api.APIAdmin;\n+import org.wso2.carbon.apimgt.api.APIManagementException;\n+import org.wso2.carbon.apimgt.api.model.APICategory;\n+import org.wso2.carbon.apimgt.impl.APIAdminImpl;\n+import org.wso2.carbon.apimgt.impl.utils.APIUtil;\n+import org.wso2.carbon.apimgt.rest.api.admin.ApiCategoriesApiService;\n+import org.wso2.carbon.apimgt.rest.api.admin.dto.APICategoryDTO;\n+import org.wso2.carbon.apimgt.rest.api.admin.dto.APICategoryListDTO;\n+import org.wso2.carbon.apimgt.rest.api.admin.utils.mappings.APICategoryMappingUtil;\n+import org.wso2.carbon.apimgt.rest.api.util.RestApiConstants;\n+import org.wso2.carbon.apimgt.rest.api.util.utils.RestApiUtil;\n+import org.wso2.carbon.utils.multitenancy.MultitenantUtils;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.List;\n+import javax.ws.rs.core.Response;\n+\n+public class ApiCategoriesApiServiceImpl extends ApiCategoriesApiService {\n+    private static final Log log = LogFactory.getLog(ApiCategoriesApiServiceImpl.class);\n+\n+    public Response apiCategoriesGet(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dda94e83243cdd801e9cf1a1dc4ce3ade4d00ad"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI3Mjg4MA==", "bodyText": "fixed", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366272880", "createdAt": "2020-01-14T10:55:00Z", "author": {"login": "msm1992"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/impl/ApiCategoriesApiServiceImpl.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ */\n+\n+package org.wso2.carbon.apimgt.rest.api.admin.impl;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.apimgt.api.APIAdmin;\n+import org.wso2.carbon.apimgt.api.APIManagementException;\n+import org.wso2.carbon.apimgt.api.model.APICategory;\n+import org.wso2.carbon.apimgt.impl.APIAdminImpl;\n+import org.wso2.carbon.apimgt.impl.utils.APIUtil;\n+import org.wso2.carbon.apimgt.rest.api.admin.ApiCategoriesApiService;\n+import org.wso2.carbon.apimgt.rest.api.admin.dto.APICategoryDTO;\n+import org.wso2.carbon.apimgt.rest.api.admin.dto.APICategoryListDTO;\n+import org.wso2.carbon.apimgt.rest.api.admin.utils.mappings.APICategoryMappingUtil;\n+import org.wso2.carbon.apimgt.rest.api.util.RestApiConstants;\n+import org.wso2.carbon.apimgt.rest.api.util.utils.RestApiUtil;\n+import org.wso2.carbon.utils.multitenancy.MultitenantUtils;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.List;\n+import javax.ws.rs.core.Response;\n+\n+public class ApiCategoriesApiServiceImpl extends ApiCategoriesApiService {\n+    private static final Log log = LogFactory.getLog(ApiCategoriesApiServiceImpl.class);\n+\n+    public Response apiCategoriesGet(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI0MDE2Mg=="}, "originalCommit": {"oid": "3dda94e83243cdd801e9cf1a1dc4ce3ade4d00ad"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjY5NDU0OnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin/site/themes/wso2/templates/api-category/api-category-list/js/manage.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOTo1MDozOVrOFdRkXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMDo1NTowNlrOFdThnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI0MDg2Mg==", "bodyText": "Formatting issue", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366240862", "createdAt": "2020-01-14T09:50:39Z", "author": {"login": "mushthaq33"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin/site/themes/wso2/templates/api-category/api-category-list/js/manage.js", "diffHunk": "@@ -0,0 +1,23 @@\n+var deleteAPICategory = function (uuid) {\n+    $(\"#messageModal div.modal-footer\").html(\"\");\n+    jagg.message({\n+        content:i18n.t('Are you sure you want to delete this API Category?'),\n+        title:i18n.t('Confirm Deletion'),\n+        type:'confirm',\n+        anotherDialog:true,\n+        okCallback:function(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dda94e83243cdd801e9cf1a1dc4ce3ade4d00ad"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI3MjkyNw==", "bodyText": "fixed", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366272927", "createdAt": "2020-01-14T10:55:06Z", "author": {"login": "msm1992"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin/site/themes/wso2/templates/api-category/api-category-list/js/manage.js", "diffHunk": "@@ -0,0 +1,23 @@\n+var deleteAPICategory = function (uuid) {\n+    $(\"#messageModal div.modal-footer\").html(\"\");\n+    jagg.message({\n+        content:i18n.t('Are you sure you want to delete this API Category?'),\n+        title:i18n.t('Confirm Deletion'),\n+        type:'confirm',\n+        anotherDialog:true,\n+        okCallback:function(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI0MDg2Mg=="}, "originalCommit": {"oid": "3dda94e83243cdd801e9cf1a1dc4ce3ade4d00ad"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2Mjg0Mjc2OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIAdminImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMDozNToxOVrOFdS9Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMDo1NzoxNVrOFdTltQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI2MzU4Nw==", "bodyText": "There is an additional space", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366263587", "createdAt": "2020-01-14T10:35:19Z", "author": {"login": "mushthaq33"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIAdminImpl.java", "diffHunk": "@@ -280,4 +287,68 @@ public void addBotDataEmailConfiguration(String email) throws APIManagementExcep\n     public void deleteBotDataEmailList(String uuid) throws APIManagementException, SQLException {\n         apiMgtDAO.deleteBotDataEmailList(uuid);\n     }\n+\n+    public APICategory addCategory(APICategory category, String userName) throws APIManagementException {\n+        int tenantID = APIUtil.getTenantId(userName);\n+        if (isCategoryNameExists(category.getName(), null, tenantID)) {\n+            APIUtil.handleException(\"Category with name '\" + category.getName() + \"' already exists\");\n+        }\n+        return apiMgtDAO.addCategory(tenantID, category);\n+    }\n+\n+    public void updateCategory(APICategory apiCategory) throws APIManagementException {\n+        apiMgtDAO.updateCategory(apiCategory);\n+    }\n+\n+    public void deleteCategory(String categoryID, String username) throws APIManagementException {\n+        APICategory category = getAPICategoryByID(categoryID);\n+        int attchedAPICount = isCategoryAttached(category, username);\n+        if ( attchedAPICount > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97cf5d4612b07a004822eb67bf9600b230a8f492"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI3Mzk3Mw==", "bodyText": "fixed", "url": "https://github.com/wso2/carbon-apimgt/pull/8077#discussion_r366273973", "createdAt": "2020-01-14T10:57:15Z", "author": {"login": "msm1992"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIAdminImpl.java", "diffHunk": "@@ -280,4 +287,68 @@ public void addBotDataEmailConfiguration(String email) throws APIManagementExcep\n     public void deleteBotDataEmailList(String uuid) throws APIManagementException, SQLException {\n         apiMgtDAO.deleteBotDataEmailList(uuid);\n     }\n+\n+    public APICategory addCategory(APICategory category, String userName) throws APIManagementException {\n+        int tenantID = APIUtil.getTenantId(userName);\n+        if (isCategoryNameExists(category.getName(), null, tenantID)) {\n+            APIUtil.handleException(\"Category with name '\" + category.getName() + \"' already exists\");\n+        }\n+        return apiMgtDAO.addCategory(tenantID, category);\n+    }\n+\n+    public void updateCategory(APICategory apiCategory) throws APIManagementException {\n+        apiMgtDAO.updateCategory(apiCategory);\n+    }\n+\n+    public void deleteCategory(String categoryID, String username) throws APIManagementException {\n+        APICategory category = getAPICategoryByID(categoryID);\n+        int attchedAPICount = isCategoryAttached(category, username);\n+        if ( attchedAPICount > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI2MzU4Nw=="}, "originalCommit": {"oid": "97cf5d4612b07a004822eb67bf9600b230a8f492"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2903, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}