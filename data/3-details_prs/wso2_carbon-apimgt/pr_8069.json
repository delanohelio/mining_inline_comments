{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNzk3NDM5", "number": 8069, "title": "Fix caches already existing when initializing issue", "bodyText": "Issue\nfixes wso2/product-apim#7211\nMethodology\nadding a check for already existing caches and if the cache is already existing returning the existing cache.", "createdAt": "2020-01-09T06:40:08Z", "url": "https://github.com/wso2/carbon-apimgt/pull/8069", "merged": true, "mergeCommit": {"oid": "a96f332ba52376bbcb5fc9361622404bea17af9f"}, "closed": true, "closedAt": "2020-01-09T08:25:15Z", "author": {"login": "CrowleyRajapakse"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4kFQsgH2gAyMzYwNzk3NDM5OmY2ZTI1Zjk1ZGJjMmJkOGNjOWE1OGZkMWZjZDVlYmY4MDhmN2EyZjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHsdUeAFqTM2MzkwMzg1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f6e25f95dbc2bd8cc9a58fd1fcd5ebf808f7a2f1", "author": {"user": {"login": "CrowleyRajapakse", "name": "Crowley Rajapakse"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/f6e25f95dbc2bd8cc9a58fd1fcd5ebf808f7a2f1", "committedDate": "2020-01-09T06:37:01Z", "message": "Fix caches already existing when initializing issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMzUwOTIw", "url": "https://github.com/wso2/carbon-apimgt/pull/8069#pullrequestreview-340350920", "createdAt": "2020-01-09T08:25:10Z", "commit": {"oid": "f6e25f95dbc2bd8cc9a58fd1fcd5ebf808f7a2f1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNTY5MDMy", "url": "https://github.com/wso2/carbon-apimgt/pull/8069#pullrequestreview-353569032", "createdAt": "2020-02-05T09:26:34Z", "commit": {"oid": "f6e25f95dbc2bd8cc9a58fd1fcd5ebf808f7a2f1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOToyNjozNFrOFlw1-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOToyNjozNFrOFlw1-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE0MTg4Mg==", "bodyText": "Formatting issue", "url": "https://github.com/wso2/carbon-apimgt/pull/8069#discussion_r375141882", "createdAt": "2020-02-05T09:26:34Z", "author": {"login": "mushthaq33"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -8202,9 +8202,16 @@ public static String getAnalyticsServerPassword() {\n      * @param accessExp        - Value of the ACCESSED Expiry Type\n      * @return - The cache object\n      */\n-    public static Cache getCache(final String cacheManagerName, final String cacheName, final long modifiedExp,\n+    public synchronized static Cache getCache(final String cacheManagerName, final String cacheName, final long modifiedExp,\n                                  final long accessExp) {\n \n+        Iterable<Cache<?, ?>> availableCaches = Caching.getCacheManager(cacheManagerName).getCaches();\n+        for (Cache cache:availableCaches) {\n+            if(cache.getName().equalsIgnoreCase(getCacheName(cacheName))){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6e25f95dbc2bd8cc9a58fd1fcd5ebf808f7a2f1"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNTY5MTc5", "url": "https://github.com/wso2/carbon-apimgt/pull/8069#pullrequestreview-353569179", "createdAt": "2020-02-05T09:26:47Z", "commit": {"oid": "f6e25f95dbc2bd8cc9a58fd1fcd5ebf808f7a2f1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOToyNjo0N1rOFlw2ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOToyNjo0N1rOFlw2ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE0MjAxMQ==", "bodyText": "Formatting issue", "url": "https://github.com/wso2/carbon-apimgt/pull/8069#discussion_r375142011", "createdAt": "2020-02-05T09:26:47Z", "author": {"login": "mushthaq33"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -8202,9 +8202,16 @@ public static String getAnalyticsServerPassword() {\n      * @param accessExp        - Value of the ACCESSED Expiry Type\n      * @return - The cache object\n      */\n-    public static Cache getCache(final String cacheManagerName, final String cacheName, final long modifiedExp,\n+    public synchronized static Cache getCache(final String cacheManagerName, final String cacheName, final long modifiedExp,\n                                  final long accessExp) {\n \n+        Iterable<Cache<?, ?>> availableCaches = Caching.getCacheManager(cacheManagerName).getCaches();\n+        for (Cache cache:availableCaches) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6e25f95dbc2bd8cc9a58fd1fcd5ebf808f7a2f1"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MjI3MjY0", "url": "https://github.com/wso2/carbon-apimgt/pull/8069#pullrequestreview-354227264", "createdAt": "2020-02-06T06:40:41Z", "commit": {"oid": "f6e25f95dbc2bd8cc9a58fd1fcd5ebf808f7a2f1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNjo0MDo0MVrOFmQmyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNjo0MDo0MVrOFmQmyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY2MjI4Mg==", "bodyText": "use braces to improve readability\nreturn (Boolean.parseBoolean(ServerConfiguration.getInstance().getFirstProperty(\"Cache.ForceLocalCache\"))\n&& !cacheName.startsWith(\"$local$.\")) ? \"$local$.\" + cacheName : cacheName;", "url": "https://github.com/wso2/carbon-apimgt/pull/8069#discussion_r375662282", "createdAt": "2020-02-06T06:40:41Z", "author": {"login": "isharac"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -8224,6 +8231,11 @@ public static Cache getCache(final String cacheManagerName, final String cacheNa\n         return Caching.getCacheManager(cacheManagerName).getCache(cacheName);\n     }\n \n+    private static String getCacheName(String cacheName) {\n+        return Boolean.parseBoolean(ServerConfiguration.getInstance().getFirstProperty(\"Cache.ForceLocalCache\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6e25f95dbc2bd8cc9a58fd1fcd5ebf808f7a2f1"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzOTAzODUy", "url": "https://github.com/wso2/carbon-apimgt/pull/8069#pullrequestreview-363903852", "createdAt": "2020-02-25T06:51:24Z", "commit": {"oid": "f6e25f95dbc2bd8cc9a58fd1fcd5ebf808f7a2f1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNjo1MToyNFrOFt6apQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNjo1MToyNFrOFt6apQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY4NzMzMw==", "bodyText": "Do we need to synchronize this at the method level? If this method is abundantly used, then having the method synchronized would produce unnecessary contentions. If that's the case can we only wrap the object creation with a sync block?", "url": "https://github.com/wso2/carbon-apimgt/pull/8069#discussion_r383687333", "createdAt": "2020-02-25T06:51:24Z", "author": {"login": "jaadds"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -8202,9 +8202,16 @@ public static String getAnalyticsServerPassword() {\n      * @param accessExp        - Value of the ACCESSED Expiry Type\n      * @return - The cache object\n      */\n-    public static Cache getCache(final String cacheManagerName, final String cacheName, final long modifiedExp,\n+    public synchronized static Cache getCache(final String cacheManagerName, final String cacheName, final long modifiedExp,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6e25f95dbc2bd8cc9a58fd1fcd5ebf808f7a2f1"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3013, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}