{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxODAzNDI2", "number": 8155, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNjoyMjo1MVrOD2gbvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNjoyMjo1MVrOD2gbvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NDgxMDg1OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/impl/TenantInfoApiServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNjoyMjo1MVrOGMSoiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMzo0OTowOVrOGfvQQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU0MTM4NQ==", "bodyText": "better to log the error logs", "url": "https://github.com/wso2/carbon-apimgt/pull/8155#discussion_r415541385", "createdAt": "2020-04-27T06:22:51Z", "author": {"login": "ruks"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/impl/TenantInfoApiServiceImpl.java", "diffHunk": "@@ -16,31 +16,44 @@\n  */\n package org.wso2.carbon.apimgt.rest.api.admin.impl;\n \n+import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n import org.wso2.carbon.apimgt.api.APIManagementException;\n import org.wso2.carbon.apimgt.impl.utils.APIUtil;\n import org.wso2.carbon.apimgt.rest.api.admin.TenantInfoApiService;\n import org.wso2.carbon.apimgt.rest.api.admin.dto.TenantInfoDTO;\n import org.wso2.carbon.apimgt.rest.api.util.utils.RestApiUtil;\n+import org.wso2.carbon.utils.multitenancy.MultitenantUtils;\n \n import javax.ws.rs.core.Response;\n+import java.util.Base64;\n \n public class TenantInfoApiServiceImpl extends TenantInfoApiService {\n     Log log = LogFactory.getLog(TenantInfoApiServiceImpl.class);\n \n     @Override\n     public Response getTenantInfoByUsername(String username){\n         TenantInfoDTO tenantInfoDTO = new TenantInfoDTO();\n+        String decodedUserName;\n         try {\n-            if (!APIUtil.isUserExist(username)) {\n-                RestApiUtil.handleBadRequest(\"Requested User does not exist\", log);\n+            if (StringUtils.isEmpty(username)) {\n+                RestApiUtil.handleBadRequest(\"User Name should not be empty\", log);\n             }\n-            int tenantId = APIUtil.getTenantId(username);\n-            String tenantDomain = APIUtil.getTenantDomainFromTenantId(tenantId);\n+            try {\n+                decodedUserName = new String(Base64.getDecoder().decode(username));\n+            } catch (IllegalArgumentException e) {\n+                log.warn(\"Could not decode the username. Using original username\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86583bb0b3aeb54ec0793eb6a15cd17f951b767e"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkzMzI1MQ==", "bodyText": "Fixed with 59acdeb", "url": "https://github.com/wso2/carbon-apimgt/pull/8155#discussion_r435933251", "createdAt": "2020-06-05T13:49:09Z", "author": {"login": "RAVEENSR"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/impl/TenantInfoApiServiceImpl.java", "diffHunk": "@@ -16,31 +16,44 @@\n  */\n package org.wso2.carbon.apimgt.rest.api.admin.impl;\n \n+import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n import org.wso2.carbon.apimgt.api.APIManagementException;\n import org.wso2.carbon.apimgt.impl.utils.APIUtil;\n import org.wso2.carbon.apimgt.rest.api.admin.TenantInfoApiService;\n import org.wso2.carbon.apimgt.rest.api.admin.dto.TenantInfoDTO;\n import org.wso2.carbon.apimgt.rest.api.util.utils.RestApiUtil;\n+import org.wso2.carbon.utils.multitenancy.MultitenantUtils;\n \n import javax.ws.rs.core.Response;\n+import java.util.Base64;\n \n public class TenantInfoApiServiceImpl extends TenantInfoApiService {\n     Log log = LogFactory.getLog(TenantInfoApiServiceImpl.class);\n \n     @Override\n     public Response getTenantInfoByUsername(String username){\n         TenantInfoDTO tenantInfoDTO = new TenantInfoDTO();\n+        String decodedUserName;\n         try {\n-            if (!APIUtil.isUserExist(username)) {\n-                RestApiUtil.handleBadRequest(\"Requested User does not exist\", log);\n+            if (StringUtils.isEmpty(username)) {\n+                RestApiUtil.handleBadRequest(\"User Name should not be empty\", log);\n             }\n-            int tenantId = APIUtil.getTenantId(username);\n-            String tenantDomain = APIUtil.getTenantDomainFromTenantId(tenantId);\n+            try {\n+                decodedUserName = new String(Base64.getDecoder().decode(username));\n+            } catch (IllegalArgumentException e) {\n+                log.warn(\"Could not decode the username. Using original username\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU0MTM4NQ=="}, "originalCommit": {"oid": "86583bb0b3aeb54ec0793eb6a15cd17f951b767e"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2850, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}