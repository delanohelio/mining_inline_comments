{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNjMwMTY3", "number": 8082, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMzo0NjowOVrODYgd4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMzo1Nzo0NFrODYgsxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDI0MzU0OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/internal/APIManagerComponent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMzo0NjowOVrOFeZz4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMzo0NjowOVrOFeZz4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQyNDQ4Mw==", "bodyText": "Let's avoid wild card imports and import the required classes only.", "url": "https://github.com/wso2/carbon-apimgt/pull/8082#discussion_r367424483", "createdAt": "2020-01-16T13:46:09Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/internal/APIManagerComponent.java", "diffHunk": "@@ -25,22 +25,12 @@\n import org.osgi.framework.BundleContext;\n import org.osgi.framework.ServiceRegistration;\n import org.osgi.service.component.ComponentContext;\n-import org.osgi.service.component.annotations.Activate;\n-import org.osgi.service.component.annotations.Component;\n-import org.osgi.service.component.annotations.Deactivate;\n-import org.osgi.service.component.annotations.Reference;\n-import org.osgi.service.component.annotations.ReferenceCardinality;\n-import org.osgi.service.component.annotations.ReferencePolicy;\n+import org.osgi.service.component.annotations.*;\n import org.wso2.carbon.CarbonConstants;\n import org.wso2.carbon.apimgt.api.APIManagementException;\n import org.wso2.carbon.apimgt.api.APIManagerDatabaseException;\n-import org.wso2.carbon.apimgt.impl.APIConstants;\n-import org.wso2.carbon.apimgt.impl.APIManagerAnalyticsConfiguration;\n-import org.wso2.carbon.apimgt.impl.APIManagerConfiguration;\n-import org.wso2.carbon.apimgt.impl.APIManagerConfigurationService;\n-import org.wso2.carbon.apimgt.impl.APIManagerConfigurationServiceImpl;\n-import org.wso2.carbon.apimgt.impl.APIManagerFactory;\n-import org.wso2.carbon.apimgt.impl.PasswordResolverFactory;\n+import org.wso2.carbon.apimgt.api.APIMgtInternalException;\n+import org.wso2.carbon.apimgt.impl.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1d906ad2ed4bee8cecc18c91ed5b19faf3780d2"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDI4MTY0OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/store/v1/mappings/SettingsMappingUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMzo1Nzo0NFrOFeaLPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMzo1Nzo0NFrOFeaLPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQzMDQ2MQ==", "bodyText": "It doesn't have to be Boolean right? we can use primitive boolean type to avoid autoboxing performance hit.", "url": "https://github.com/wso2/carbon-apimgt/pull/8082#discussion_r367430461", "createdAt": "2020-01-16T13:57:44Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.store.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/store/v1/mappings/SettingsMappingUtil.java", "diffHunk": "@@ -40,13 +40,14 @@\n \n     private static final Log log = LogFactory.getLog(SettingsMappingUtil.class);\n \n-    public SettingsDTO fromSettingstoDTO(Boolean isUserAvailable, Boolean moneatizationEnabled) throws APIManagementException {\n+    public SettingsDTO fromSettingstoDTO(Boolean isUserAvailable, Boolean moneatizationEnabled, Boolean recommendationEnabled) throws APIManagementException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1d906ad2ed4bee8cecc18c91ed5b19faf3780d2"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2906, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}