{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MTcyMzky", "number": 8764, "title": "add feign jars as bundles and removing apikeymanager subscriber service", "bodyText": "", "createdAt": "2020-06-16T12:11:19Z", "url": "https://github.com/wso2/carbon-apimgt/pull/8764", "merged": true, "mergeCommit": {"oid": "2701927005b0ea4510647e4071ac1aa643daa78b"}, "closed": true, "closedAt": "2020-06-19T07:33:47Z", "author": {"login": "tharindu1st"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcr0T9AgFqTQzMTQ0NTY2MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcst95QgBqjM0NjEzMDg0Njc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNDQ1NjYw", "url": "https://github.com/wso2/carbon-apimgt/pull/8764#pullrequestreview-431445660", "createdAt": "2020-06-16T12:21:41Z", "commit": {"oid": "0e4b679ae3c4d871e2028c2749d11a3631f56570"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0e4b679ae3c4d871e2028c2749d11a3631f56570", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/0e4b679ae3c4d871e2028c2749d11a3631f56570", "committedDate": "2020-06-16T12:10:19Z", "message": "add feign jars as bundles"}, "afterCommit": {"oid": "815de6f460727cc71b9054aeab3ce71f4792c2f0", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/815de6f460727cc71b9054aeab3ce71f4792c2f0", "committedDate": "2020-06-17T04:48:17Z", "message": "refactor scope client to feign"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMDc1MDAw", "url": "https://github.com/wso2/carbon-apimgt/pull/8764#pullrequestreview-432075000", "createdAt": "2020-06-17T05:46:23Z", "commit": {"oid": "815de6f460727cc71b9054aeab3ce71f4792c2f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo0NjoyM1rOGk2c3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo0NjoyM1rOGk2c3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5NDA0NA==", "bodyText": "we could use constants in the APIConstant class. AUTHORIZATION_HEADER_DEFAULT, AUTHORIZATION_BEARER are there", "url": "https://github.com/wso2/carbon-apimgt/pull/8764#discussion_r441294044", "createdAt": "2020-06-17T05:46:23Z", "author": {"login": "chamilaadhi"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/kmclient/model/BearerInterceptor.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package org.wso2.carbon.apimgt.impl.kmclient.model;\n+\n+import feign.RequestInterceptor;\n+import feign.RequestTemplate;\n+import org.wso2.carbon.apimgt.impl.APIConstants;\n+import org.wso2.carbon.apimgt.impl.recommendationmgt.AccessTokenGenerator;\n+\n+public class BearerInterceptor implements RequestInterceptor {\n+\n+    private AccessTokenGenerator accessTokenGenerator;\n+\n+    public BearerInterceptor(AccessTokenGenerator accessTokenGenerator) {\n+\n+        this.accessTokenGenerator = accessTokenGenerator;\n+    }\n+\n+    @Override\n+    public void apply(RequestTemplate requestTemplate) {\n+\n+        String accessToken = accessTokenGenerator.getAccessToken(APIConstants.KEY_MANAGER_OAUTH2_REST_API_MGT_SCOPES);\n+        requestTemplate.header(\"Authorization\", \"Bearer \" + accessToken);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "815de6f460727cc71b9054aeab3ce71f4792c2f0"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMDc3NjAy", "url": "https://github.com/wso2/carbon-apimgt/pull/8764#pullrequestreview-432077602", "createdAt": "2020-06-17T05:52:41Z", "commit": {"oid": "815de6f460727cc71b9054aeab3ce71f4792c2f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo1Mjo0MVrOGk2k0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo1Mjo0MVrOGk2k0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5NjA4Mg==", "bodyText": "I think having the version hardcorded in the URL could cause some maintenance issues. (will have to change this every release)", "url": "https://github.com/wso2/carbon-apimgt/pull/8764#discussion_r441296082", "createdAt": "2020-06-17T05:52:41Z", "author": {"login": "chamilaadhi"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/AMDefaultKeyManagerImpl.java", "diffHunk": "@@ -515,86 +445,94 @@ private OAuthApplicationInfo buildDTOFromClientInfo(ClientInfo appResponse,\n         return oAuthApplicationInfo;\n     }\n \n-    /**\n-     * This method initialize the HTTP Client and Connection Manager to call services in KeyManager.\n-     *\n-     * @throws APIManagementException if an error occurs while initializing HttpClient\n-     */\n-    protected void initializeHttpClient() throws APIManagementException {\n-\n-        try {\n-            String authServerURL = (String) configuration.getParameter(APIConstants.AUTHSERVER_URL);\n-            java.net.URL keyManagerURL = new java.net.URL(authServerURL);\n-            int keyManagerPort = keyManagerURL.getPort();\n-            String keyManagerProtocol = keyManagerURL.getProtocol();\n-            this.kmHttpClient = (CloseableHttpClient) APIUtil.getHttpClient(keyManagerPort, keyManagerProtocol);\n-        } catch (MalformedURLException e) {\n-            throw new APIManagementException(\"Error while initializing HttpClient due to malformed URL\", e);\n-        }\n-    }\n-\n     @Override\n     public void loadConfiguration(KeyManagerConfiguration configuration) throws APIManagementException {\n+\n         this.configuration = configuration;\n-        //Initialize a Http Client and Connection Manager using the ServerURL of KM\n-        initializeHttpClient();\n \n         String consumerKey = (String) configuration.getParameter(APIConstants.KEY_MANAGER_CONSUMER_KEY);\n         String consumerSecret = (String) configuration.getParameter(APIConstants.KEY_MANAGER_CONSUMER_SECRET);\n         String keyManagerServiceUrl = (String) configuration.getParameter(APIConstants.AUTHSERVER_URL);\n-        String tokenEndpoint = keyManagerServiceUrl.split(\"/\" + APIConstants.SERVICES_URL_RELATIVE_PATH)[0].concat(\n-                \"/oauth2/token\");\n-        String revokeEndpoint = keyManagerServiceUrl.split(\"/\" + APIConstants.SERVICES_URL_RELATIVE_PATH)[0].concat(\n-                \"/oauth2/revoke\");\n-        accessTokenGenerator = new AccessTokenGenerator(tokenEndpoint,revokeEndpoint,consumerKey,consumerSecret);\n \n-        try {\n-            java.net.URL keyManagerServicesURL = new java.net.URL(keyManagerServiceUrl);\n-            int keyManagerPort = keyManagerServicesURL.getPort();\n-            String keyManagerProtocol = keyManagerServicesURL.getProtocol();\n-            String keyManagerHost = keyManagerServicesURL.getHost();\n-            String keyManagerURL = keyManagerProtocol.concat(\"://\").concat(keyManagerHost);\n-            if (keyManagerPort != 0) {\n-                keyManagerURL = keyManagerURL.concat(\":\").concat(Integer.toString(keyManagerPort));\n-            }\n-            String authEndpoint = tokenEndpoint.replace(\"/token\", \"\");\n-            revokeEndpoint = revokeEndpoint.replace(\"/revoke\", \"\");\n-\n-            dcrClient = Feign.builder()\n-                    .client(new OkHttpClient())\n-                    .encoder(new GsonEncoder())\n-                    .decoder(new GsonDecoder())\n-                    .logger(new Slf4jLogger())\n-                    .errorDecoder(new KMClientErrorDecoder())\n-                    .target(DCRClient.class, keyManagerURL);\n-            authClient = Feign.builder()\n-                    .client(new OkHttpClient())\n-                    .encoder(new GsonEncoder())\n-                    .decoder(new GsonDecoder())\n-                    .logger(new Slf4jLogger())\n-                    .errorDecoder(new KMClientErrorDecoder()    )\n-                    .encoder(new FormEncoder())\n-                    .target(AuthClient.class, authEndpoint);\n-            revokeClient = Feign.builder()\n-                    .client(new OkHttpClient())\n-                    .encoder(new GsonEncoder())\n-                    .decoder(new GsonDecoder())\n-                    .logger(new Slf4jLogger())\n-                    .errorDecoder(new KMClientErrorDecoder()    )\n-                    .encoder(new FormEncoder())\n-                    .target(AuthClient.class, revokeEndpoint);\n-            introspectionClient = Feign.builder()\n-                    .client(new OkHttpClient())\n-                    .encoder(new GsonEncoder())\n-                    .decoder(new GsonDecoder())\n-                    .logger(new Slf4jLogger())\n-                    .errorDecoder(new KMClientErrorDecoder())\n-                    .encoder(new FormEncoder())\n-                    .target(IntrospectionClient.class, keyManagerURL.concat(\"/oauth2/introspect\"));\n-\n-        } catch (MalformedURLException e) {\n-            log.error(\"Error in parsing the Key Validator URL provided: \" + keyManagerServiceUrl, e);\n+        String dcrEndpoint;\n+        if (configuration.getParameter(APIConstants.KeyManager.CLIENT_REGISTRATION_ENDPOINT) != null) {\n+            dcrEndpoint = (String) configuration.getParameter(APIConstants.KeyManager.CLIENT_REGISTRATION_ENDPOINT);\n+        } else {\n+            dcrEndpoint = keyManagerServiceUrl.split(\"/\" + APIConstants.SERVICES_URL_RELATIVE_PATH)[0]\n+                    .concat(getTenantAwareContext().trim()).concat(\"/api/identity/oauth2/dcr/v1.1/register\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "815de6f460727cc71b9054aeab3ce71f4792c2f0"}, "originalPosition": 307}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e77aee47a9436792d62ee296382d46f2d0eb315a", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/e77aee47a9436792d62ee296382d46f2d0eb315a", "committedDate": "2020-06-18T07:48:58Z", "message": "add feign jars as bundles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b63683986196c48bb1dac8c8f9457938354c88f2", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/b63683986196c48bb1dac8c8f9457938354c88f2", "committedDate": "2020-06-18T07:49:47Z", "message": "refactor scope client to feign"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "815de6f460727cc71b9054aeab3ce71f4792c2f0", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/815de6f460727cc71b9054aeab3ce71f4792c2f0", "committedDate": "2020-06-17T04:48:17Z", "message": "refactor scope client to feign"}, "afterCommit": {"oid": "b63683986196c48bb1dac8c8f9457938354c88f2", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/b63683986196c48bb1dac8c8f9457938354c88f2", "committedDate": "2020-06-18T07:49:47Z", "message": "refactor scope client to feign"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ab5991bd4b8e608870bebee7699b4182ba47e63e", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/ab5991bd4b8e608870bebee7699b4182ba47e63e", "committedDate": "2020-06-18T18:22:55Z", "message": "fix tenantcy in introspection endpoint"}, "afterCommit": {"oid": "20698321e81574fcf733b60ec92b780d3c7bd040", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/20698321e81574fcf733b60ec92b780d3c7bd040", "committedDate": "2020-06-19T04:06:37Z", "message": "fix tenantcy in introspection endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72ffa02e5b4e44fc72ca097b0fc1a3287c7be4cb", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/72ffa02e5b4e44fc72ca097b0fc1a3287c7be4cb", "committedDate": "2020-06-19T07:31:43Z", "message": "fix tenantcy in introspection endpoint"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "20698321e81574fcf733b60ec92b780d3c7bd040", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/20698321e81574fcf733b60ec92b780d3c7bd040", "committedDate": "2020-06-19T04:06:37Z", "message": "fix tenantcy in introspection endpoint"}, "afterCommit": {"oid": "72ffa02e5b4e44fc72ca097b0fc1a3287c7be4cb", "author": {"user": {"login": "tharindu1st", "name": "Tharindu Dasun Dharmarathna"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/72ffa02e5b4e44fc72ca097b0fc1a3287c7be4cb", "committedDate": "2020-06-19T07:31:43Z", "message": "fix tenantcy in introspection endpoint"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2658, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}