{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyODI3MDg2", "number": 8705, "title": "Adding Artifact synchroniser feature ", "bodyText": "Adding a new feature to WSO2 API manager 3.2.0. With this feature, we are adding an alternative method to NFS to share gateway runtime artifacts.\nRelated issue: wso2/product-apim#8246", "createdAt": "2020-06-11T04:14:03Z", "url": "https://github.com/wso2/carbon-apimgt/pull/8705", "merged": true, "mergeCommit": {"oid": "c53a4e1e06da5dc4937e7119d2e1166751ac6a1c"}, "closed": true, "closedAt": "2020-06-11T12:32:46Z", "author": {"login": "1akshitha"}, "timelineItems": {"totalCount": 98, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqJXo4AFqTQyODU4ODE2NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdojNaaAFqTU1NjgxODMxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NTg4MTY0", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#pullrequestreview-428588164", "createdAt": "2020-06-11T04:42:05Z", "commit": {"oid": "c36324a3c2472accfa6373e978630a996bd9b44a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNDo0MjowNVrOGiOTjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNDo0Mjo1OVrOGiOUVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUzOTE0OQ==", "bodyText": "add serializableID here", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#discussion_r438539149", "createdAt": "2020-06-11T04:42:05Z", "author": {"login": "tharindu1st"}, "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/gateway/GatewayAPIDTO.java", "diffHunk": "@@ -20,10 +20,12 @@\n \n package org.wso2.carbon.apimgt.api.gateway;\n \n+import java.io.Serializable;\n+\n /**\n  * This Contains the API Related data to deploy in Gateway.\n  */\n-public class GatewayAPIDTO {\n+public class GatewayAPIDTO implements Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c36324a3c2472accfa6373e978630a996bd9b44a"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUzOTIzNQ==", "bodyText": "do we need the gateway label inside this", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#discussion_r438539235", "createdAt": "2020-06-11T04:42:27Z", "author": {"login": "tharindu1st"}, "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/gateway/GatewayAPIDTO.java", "diffHunk": "@@ -43,6 +45,7 @@\n     private String[] endpointEntriesToBeRemove;\n     private CredentialDto[] credentialsToBeAdd ;\n     private String[] credentialsToBeRemove;\n+    private String gatewayLabel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c36324a3c2472accfa6373e978630a996bd9b44a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUzOTM0OA==", "bodyText": "Licence header missing", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#discussion_r438539348", "createdAt": "2020-06-11T04:42:59Z", "author": {"login": "tharindu1st"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java", "diffHunk": "@@ -0,0 +1,159 @@\n+package org.wso2.carbon.apimgt.gateway;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c36324a3c2472accfa6373e978630a996bd9b44a"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NzUxNDYx", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#pullrequestreview-428751461", "createdAt": "2020-06-11T09:39:18Z", "commit": {"oid": "5e62769ade21b2544c56949a6d50909d2b06b3de"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOTozOToxOFrOGiV-tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOTo1NDowMVrOGiWeDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY2NDg4NA==", "bodyText": "while(it.hasnext())", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#discussion_r438664884", "createdAt": "2020-06-11T09:39:18Z", "author": {"login": "tharindu1st"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java", "diffHunk": "@@ -0,0 +1,159 @@\n+package org.wso2.carbon.apimgt.gateway;\n+\n+import com.google.gson.Gson;\n+import org.apache.axis2.AxisFault;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.apimgt.api.gateway.GatewayAPIDTO;\n+import org.wso2.carbon.apimgt.gateway.service.APIGatewayAdmin;\n+import org.wso2.carbon.apimgt.impl.APIConstants;\n+import org.wso2.carbon.apimgt.impl.dto.GatewayArtifactSynchronizerProperties;\n+import org.wso2.carbon.apimgt.impl.gatewayartifactsynchronizer.ArtifactRetriever;\n+import org.wso2.carbon.apimgt.impl.gatewayartifactsynchronizer.exception.ArtifactSynchronizerException;\n+import org.wso2.carbon.apimgt.gateway.internal.ServiceReferenceHolder;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * This class contains the methods used to retrieve artifacts from a storage and deploy and undeploy the API in gateway\n+ */\n+public class InMemoryAPIDeployer {\n+\n+    private static Log log = LogFactory.getLog(InMemoryAPIDeployer.class);\n+    APIGatewayAdmin apiGatewayAdmin;\n+    ArtifactRetriever artifactRetriever;\n+    GatewayArtifactSynchronizerProperties gatewayArtifactSynchronizerProperties;\n+\n+    public InMemoryAPIDeployer() {\n+\n+        this.artifactRetriever = ServiceReferenceHolder.getInstance().getArtifactRetriever();\n+        this.apiGatewayAdmin = new APIGatewayAdmin();\n+        this.gatewayArtifactSynchronizerProperties = ServiceReferenceHolder\n+                .getInstance().getAPIManagerConfiguration().getGatewayArtifactSynchronizerProperties();\n+    }\n+\n+    /**\n+     * Deploy an API in the gateway using the deployAPI method in gateway admin\n+     *\n+     * @param apiId        - UUID of the API\n+     * @param gatewayLabel - Label of the Gateway\n+     * @return True if API artifact retrieved from the storage and successfully deployed without any error. else false\n+     */\n+    public boolean deployAPI(String apiId, String gatewayLabel) {\n+\n+        if (gatewayArtifactSynchronizerProperties.isRetrieveFromStorageEnabled() &&\n+                gatewayArtifactSynchronizerProperties.getGatewayLabels().contains(gatewayLabel)) {\n+            if (artifactRetriever != null) {\n+                try {\n+                    String gatewayRuntimeArtifact = artifactRetriever.retrieveArtifact(apiId, gatewayLabel,\n+                            APIConstants.GatewayArtifactSynchronizer.GATEWAY_INSTRUCTION_PUBLISH);\n+                    GatewayAPIDTO gatewayAPIDTO = new Gson().fromJson(gatewayRuntimeArtifact, GatewayAPIDTO.class);\n+                    apiGatewayAdmin.deployAPI(gatewayAPIDTO);\n+                    return true;\n+                } catch (AxisFault | ArtifactSynchronizerException e) {\n+                    log.error(\"Error deploying \" + apiId + \" in Gateway\", e);\n+                }\n+            } else {\n+                log.error(\"Artifact retriever not found\");\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Deploy an API in the gateway using the deployAPI method in gateway admin\n+     *\n+     * @param assignedGatewayLabels - The labels which the gateway subscribed to\n+     * @return True if all API artifacts retrieved from the storage and successfully deployed without any error. else\n+     * false\n+     */\n+    public boolean deployAllAPIsAtGatewayStartup (Set<String> assignedGatewayLabels) {\n+\n+        if (gatewayArtifactSynchronizerProperties.isRetrieveFromStorageEnabled()) {\n+            if (artifactRetriever != null) {\n+                try {\n+                    for (Iterator<String> it = assignedGatewayLabels.iterator(); it.hasNext();) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e62769ade21b2544c56949a6d50909d2b06b3de"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY2NTE5MA==", "bodyText": "null check for gatewayRuntimeArtifacts", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#discussion_r438665190", "createdAt": "2020-06-11T09:39:50Z", "author": {"login": "tharindu1st"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java", "diffHunk": "@@ -0,0 +1,159 @@\n+package org.wso2.carbon.apimgt.gateway;\n+\n+import com.google.gson.Gson;\n+import org.apache.axis2.AxisFault;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.apimgt.api.gateway.GatewayAPIDTO;\n+import org.wso2.carbon.apimgt.gateway.service.APIGatewayAdmin;\n+import org.wso2.carbon.apimgt.impl.APIConstants;\n+import org.wso2.carbon.apimgt.impl.dto.GatewayArtifactSynchronizerProperties;\n+import org.wso2.carbon.apimgt.impl.gatewayartifactsynchronizer.ArtifactRetriever;\n+import org.wso2.carbon.apimgt.impl.gatewayartifactsynchronizer.exception.ArtifactSynchronizerException;\n+import org.wso2.carbon.apimgt.gateway.internal.ServiceReferenceHolder;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * This class contains the methods used to retrieve artifacts from a storage and deploy and undeploy the API in gateway\n+ */\n+public class InMemoryAPIDeployer {\n+\n+    private static Log log = LogFactory.getLog(InMemoryAPIDeployer.class);\n+    APIGatewayAdmin apiGatewayAdmin;\n+    ArtifactRetriever artifactRetriever;\n+    GatewayArtifactSynchronizerProperties gatewayArtifactSynchronizerProperties;\n+\n+    public InMemoryAPIDeployer() {\n+\n+        this.artifactRetriever = ServiceReferenceHolder.getInstance().getArtifactRetriever();\n+        this.apiGatewayAdmin = new APIGatewayAdmin();\n+        this.gatewayArtifactSynchronizerProperties = ServiceReferenceHolder\n+                .getInstance().getAPIManagerConfiguration().getGatewayArtifactSynchronizerProperties();\n+    }\n+\n+    /**\n+     * Deploy an API in the gateway using the deployAPI method in gateway admin\n+     *\n+     * @param apiId        - UUID of the API\n+     * @param gatewayLabel - Label of the Gateway\n+     * @return True if API artifact retrieved from the storage and successfully deployed without any error. else false\n+     */\n+    public boolean deployAPI(String apiId, String gatewayLabel) {\n+\n+        if (gatewayArtifactSynchronizerProperties.isRetrieveFromStorageEnabled() &&\n+                gatewayArtifactSynchronizerProperties.getGatewayLabels().contains(gatewayLabel)) {\n+            if (artifactRetriever != null) {\n+                try {\n+                    String gatewayRuntimeArtifact = artifactRetriever.retrieveArtifact(apiId, gatewayLabel,\n+                            APIConstants.GatewayArtifactSynchronizer.GATEWAY_INSTRUCTION_PUBLISH);\n+                    GatewayAPIDTO gatewayAPIDTO = new Gson().fromJson(gatewayRuntimeArtifact, GatewayAPIDTO.class);\n+                    apiGatewayAdmin.deployAPI(gatewayAPIDTO);\n+                    return true;\n+                } catch (AxisFault | ArtifactSynchronizerException e) {\n+                    log.error(\"Error deploying \" + apiId + \" in Gateway\", e);\n+                }\n+            } else {\n+                log.error(\"Artifact retriever not found\");\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Deploy an API in the gateway using the deployAPI method in gateway admin\n+     *\n+     * @param assignedGatewayLabels - The labels which the gateway subscribed to\n+     * @return True if all API artifacts retrieved from the storage and successfully deployed without any error. else\n+     * false\n+     */\n+    public boolean deployAllAPIsAtGatewayStartup (Set<String> assignedGatewayLabels) {\n+\n+        if (gatewayArtifactSynchronizerProperties.isRetrieveFromStorageEnabled()) {\n+            if (artifactRetriever != null) {\n+                try {\n+                    for (Iterator<String> it = assignedGatewayLabels.iterator(); it.hasNext();) {\n+                        String label = it.next();\n+                        List<String> gatewayRuntimeArtifacts = ServiceReferenceHolder\n+                                .getInstance().getArtifactRetriever().retrieveAllArtifacts(label);\n+                        for (String APIruntimeArtifact :gatewayRuntimeArtifacts){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e62769ade21b2544c56949a6d50909d2b06b3de"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY3MjUyNA==", "bodyText": "For undeploy, Do we need to retrieve any info", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#discussion_r438672524", "createdAt": "2020-06-11T09:53:20Z", "author": {"login": "tharindu1st"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java", "diffHunk": "@@ -0,0 +1,159 @@\n+package org.wso2.carbon.apimgt.gateway;\n+\n+import com.google.gson.Gson;\n+import org.apache.axis2.AxisFault;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.apimgt.api.gateway.GatewayAPIDTO;\n+import org.wso2.carbon.apimgt.gateway.service.APIGatewayAdmin;\n+import org.wso2.carbon.apimgt.impl.APIConstants;\n+import org.wso2.carbon.apimgt.impl.dto.GatewayArtifactSynchronizerProperties;\n+import org.wso2.carbon.apimgt.impl.gatewayartifactsynchronizer.ArtifactRetriever;\n+import org.wso2.carbon.apimgt.impl.gatewayartifactsynchronizer.exception.ArtifactSynchronizerException;\n+import org.wso2.carbon.apimgt.gateway.internal.ServiceReferenceHolder;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * This class contains the methods used to retrieve artifacts from a storage and deploy and undeploy the API in gateway\n+ */\n+public class InMemoryAPIDeployer {\n+\n+    private static Log log = LogFactory.getLog(InMemoryAPIDeployer.class);\n+    APIGatewayAdmin apiGatewayAdmin;\n+    ArtifactRetriever artifactRetriever;\n+    GatewayArtifactSynchronizerProperties gatewayArtifactSynchronizerProperties;\n+\n+    public InMemoryAPIDeployer() {\n+\n+        this.artifactRetriever = ServiceReferenceHolder.getInstance().getArtifactRetriever();\n+        this.apiGatewayAdmin = new APIGatewayAdmin();\n+        this.gatewayArtifactSynchronizerProperties = ServiceReferenceHolder\n+                .getInstance().getAPIManagerConfiguration().getGatewayArtifactSynchronizerProperties();\n+    }\n+\n+    /**\n+     * Deploy an API in the gateway using the deployAPI method in gateway admin\n+     *\n+     * @param apiId        - UUID of the API\n+     * @param gatewayLabel - Label of the Gateway\n+     * @return True if API artifact retrieved from the storage and successfully deployed without any error. else false\n+     */\n+    public boolean deployAPI(String apiId, String gatewayLabel) {\n+\n+        if (gatewayArtifactSynchronizerProperties.isRetrieveFromStorageEnabled() &&\n+                gatewayArtifactSynchronizerProperties.getGatewayLabels().contains(gatewayLabel)) {\n+            if (artifactRetriever != null) {\n+                try {\n+                    String gatewayRuntimeArtifact = artifactRetriever.retrieveArtifact(apiId, gatewayLabel,\n+                            APIConstants.GatewayArtifactSynchronizer.GATEWAY_INSTRUCTION_PUBLISH);\n+                    GatewayAPIDTO gatewayAPIDTO = new Gson().fromJson(gatewayRuntimeArtifact, GatewayAPIDTO.class);\n+                    apiGatewayAdmin.deployAPI(gatewayAPIDTO);\n+                    return true;\n+                } catch (AxisFault | ArtifactSynchronizerException e) {\n+                    log.error(\"Error deploying \" + apiId + \" in Gateway\", e);\n+                }\n+            } else {\n+                log.error(\"Artifact retriever not found\");\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Deploy an API in the gateway using the deployAPI method in gateway admin\n+     *\n+     * @param assignedGatewayLabels - The labels which the gateway subscribed to\n+     * @return True if all API artifacts retrieved from the storage and successfully deployed without any error. else\n+     * false\n+     */\n+    public boolean deployAllAPIsAtGatewayStartup (Set<String> assignedGatewayLabels) {\n+\n+        if (gatewayArtifactSynchronizerProperties.isRetrieveFromStorageEnabled()) {\n+            if (artifactRetriever != null) {\n+                try {\n+                    for (Iterator<String> it = assignedGatewayLabels.iterator(); it.hasNext();) {\n+                        String label = it.next();\n+                        List<String> gatewayRuntimeArtifacts = ServiceReferenceHolder\n+                                .getInstance().getArtifactRetriever().retrieveAllArtifacts(label);\n+                        for (String APIruntimeArtifact :gatewayRuntimeArtifacts){\n+                            GatewayAPIDTO gatewayAPIDTO = null;\n+                            try {\n+                                gatewayAPIDTO = new Gson().fromJson(APIruntimeArtifact, GatewayAPIDTO.class);\n+                                log.info(\"Deploying synapse artifacts of \" + gatewayAPIDTO.getName());\n+                                apiGatewayAdmin.deployAPI(gatewayAPIDTO);\n+                            } catch (AxisFault axisFault) {\n+                                log.error(\"Error in deploying\" + gatewayAPIDTO.getName()+ \" to the Gateway \");\n+                                continue;\n+                            }\n+                        }\n+                    }\n+                    return true;\n+                } catch (ArtifactSynchronizerException e ) {\n+                    log.error(\"Error  deploying APIs to the Gateway \" + e );\n+                }\n+            } else {\n+                log.error(\"Artifact retriever not found\");\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * UnDeploy an API in the gateway using the uneployAPI method in gateway admin\n+     *\n+     * @param apiId        - UUID of the API\n+     * @param gatewayLabel - Label of the Gateway\n+     * @return True if API artifact retrieved from the storage and successfully undeployed without any error. else false\n+     */\n+    public boolean unDeployAPI(String apiId, String gatewayLabel) {\n+\n+        if (gatewayArtifactSynchronizerProperties.isRetrieveFromStorageEnabled() &&\n+                gatewayArtifactSynchronizerProperties.getGatewayLabels().contains(gatewayLabel)) {\n+            if (artifactRetriever != null) {\n+                try {\n+                    String gatewayRuntimeArtifact = artifactRetriever", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e62769ade21b2544c56949a6d50909d2b06b3de"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY3MjkxMA==", "bodyText": "null check", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#discussion_r438672910", "createdAt": "2020-06-11T09:54:01Z", "author": {"login": "tharindu1st"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java", "diffHunk": "@@ -0,0 +1,159 @@\n+package org.wso2.carbon.apimgt.gateway;\n+\n+import com.google.gson.Gson;\n+import org.apache.axis2.AxisFault;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.apimgt.api.gateway.GatewayAPIDTO;\n+import org.wso2.carbon.apimgt.gateway.service.APIGatewayAdmin;\n+import org.wso2.carbon.apimgt.impl.APIConstants;\n+import org.wso2.carbon.apimgt.impl.dto.GatewayArtifactSynchronizerProperties;\n+import org.wso2.carbon.apimgt.impl.gatewayartifactsynchronizer.ArtifactRetriever;\n+import org.wso2.carbon.apimgt.impl.gatewayartifactsynchronizer.exception.ArtifactSynchronizerException;\n+import org.wso2.carbon.apimgt.gateway.internal.ServiceReferenceHolder;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * This class contains the methods used to retrieve artifacts from a storage and deploy and undeploy the API in gateway\n+ */\n+public class InMemoryAPIDeployer {\n+\n+    private static Log log = LogFactory.getLog(InMemoryAPIDeployer.class);\n+    APIGatewayAdmin apiGatewayAdmin;\n+    ArtifactRetriever artifactRetriever;\n+    GatewayArtifactSynchronizerProperties gatewayArtifactSynchronizerProperties;\n+\n+    public InMemoryAPIDeployer() {\n+\n+        this.artifactRetriever = ServiceReferenceHolder.getInstance().getArtifactRetriever();\n+        this.apiGatewayAdmin = new APIGatewayAdmin();\n+        this.gatewayArtifactSynchronizerProperties = ServiceReferenceHolder\n+                .getInstance().getAPIManagerConfiguration().getGatewayArtifactSynchronizerProperties();\n+    }\n+\n+    /**\n+     * Deploy an API in the gateway using the deployAPI method in gateway admin\n+     *\n+     * @param apiId        - UUID of the API\n+     * @param gatewayLabel - Label of the Gateway\n+     * @return True if API artifact retrieved from the storage and successfully deployed without any error. else false\n+     */\n+    public boolean deployAPI(String apiId, String gatewayLabel) {\n+\n+        if (gatewayArtifactSynchronizerProperties.isRetrieveFromStorageEnabled() &&\n+                gatewayArtifactSynchronizerProperties.getGatewayLabels().contains(gatewayLabel)) {\n+            if (artifactRetriever != null) {\n+                try {\n+                    String gatewayRuntimeArtifact = artifactRetriever.retrieveArtifact(apiId, gatewayLabel,\n+                            APIConstants.GatewayArtifactSynchronizer.GATEWAY_INSTRUCTION_PUBLISH);\n+                    GatewayAPIDTO gatewayAPIDTO = new Gson().fromJson(gatewayRuntimeArtifact, GatewayAPIDTO.class);\n+                    apiGatewayAdmin.deployAPI(gatewayAPIDTO);\n+                    return true;\n+                } catch (AxisFault | ArtifactSynchronizerException e) {\n+                    log.error(\"Error deploying \" + apiId + \" in Gateway\", e);\n+                }\n+            } else {\n+                log.error(\"Artifact retriever not found\");\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Deploy an API in the gateway using the deployAPI method in gateway admin\n+     *\n+     * @param assignedGatewayLabels - The labels which the gateway subscribed to\n+     * @return True if all API artifacts retrieved from the storage and successfully deployed without any error. else\n+     * false\n+     */\n+    public boolean deployAllAPIsAtGatewayStartup (Set<String> assignedGatewayLabels) {\n+\n+        if (gatewayArtifactSynchronizerProperties.isRetrieveFromStorageEnabled()) {\n+            if (artifactRetriever != null) {\n+                try {\n+                    for (Iterator<String> it = assignedGatewayLabels.iterator(); it.hasNext();) {\n+                        String label = it.next();\n+                        List<String> gatewayRuntimeArtifacts = ServiceReferenceHolder\n+                                .getInstance().getArtifactRetriever().retrieveAllArtifacts(label);\n+                        for (String APIruntimeArtifact :gatewayRuntimeArtifacts){\n+                            GatewayAPIDTO gatewayAPIDTO = null;\n+                            try {\n+                                gatewayAPIDTO = new Gson().fromJson(APIruntimeArtifact, GatewayAPIDTO.class);\n+                                log.info(\"Deploying synapse artifacts of \" + gatewayAPIDTO.getName());\n+                                apiGatewayAdmin.deployAPI(gatewayAPIDTO);\n+                            } catch (AxisFault axisFault) {\n+                                log.error(\"Error in deploying\" + gatewayAPIDTO.getName()+ \" to the Gateway \");\n+                                continue;\n+                            }\n+                        }\n+                    }\n+                    return true;\n+                } catch (ArtifactSynchronizerException e ) {\n+                    log.error(\"Error  deploying APIs to the Gateway \" + e );\n+                }\n+            } else {\n+                log.error(\"Artifact retriever not found\");\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * UnDeploy an API in the gateway using the uneployAPI method in gateway admin\n+     *\n+     * @param apiId        - UUID of the API\n+     * @param gatewayLabel - Label of the Gateway\n+     * @return True if API artifact retrieved from the storage and successfully undeployed without any error. else false\n+     */\n+    public boolean unDeployAPI(String apiId, String gatewayLabel) {\n+\n+        if (gatewayArtifactSynchronizerProperties.isRetrieveFromStorageEnabled() &&\n+                gatewayArtifactSynchronizerProperties.getGatewayLabels().contains(gatewayLabel)) {\n+            if (artifactRetriever != null) {\n+                try {\n+                    String gatewayRuntimeArtifact = artifactRetriever\n+                            .retrieveArtifact(apiId, gatewayLabel,\n+                                    APIConstants.GatewayArtifactSynchronizer.GATEWAY_INSTRUCTION_REMOVE);\n+                    GatewayAPIDTO gatewayAPIDTO = new Gson().fromJson(gatewayRuntimeArtifact, GatewayAPIDTO.class);\n+                    apiGatewayAdmin.unDeployAPI(gatewayAPIDTO);\n+                    return true;\n+                } catch (AxisFault | ArtifactSynchronizerException e) {\n+                    log.error(\"Error undeploying \" + apiId + \" in Gateway\", e);\n+                }\n+            } else {\n+                log.error(\"Artifact retriever not found\");\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Retrieve artifacts from the storage\n+     *\n+     * @param apiId        - UUID of the API\n+     * @param gatewayLabel - Label of the Gateway\n+     * @return DTO Object that contains the information and artifacts of the API for the given label\n+     */\n+    public GatewayAPIDTO getAPIArtifact(String apiId, String gatewayLabel) {\n+\n+        GatewayAPIDTO gatewayAPIDTO = null;\n+        if (gatewayArtifactSynchronizerProperties.getGatewayLabels().contains(gatewayLabel)) {\n+            if (artifactRetriever != null) {\n+                try {\n+                    String gatewayRuntimeArtifact = artifactRetriever.retrieveArtifact(apiId, gatewayLabel,\n+                            APIConstants.GatewayArtifactSynchronizer.GATEWAY_INSTRUCTION_PUBLISH);\n+                    gatewayAPIDTO = new Gson().fromJson(gatewayRuntimeArtifact, GatewayAPIDTO.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e62769ade21b2544c56949a6d50909d2b06b3de"}, "originalPosition": 148}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6f18102009e8ecc677b9bd24262d6da0a5f91b2", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/d6f18102009e8ecc677b9bd24262d6da0a5f91b2", "committedDate": "2020-06-11T11:00:42Z", "message": "Add interfaces and default implementation for artifact synchronizer\n\nGateway artifact synchronizer will have two base extensions to\npublish artifacts and to retrieve artifacts. Default implementation is\nto publish and retrieve from a database."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4e2aac6cea245338051b7a78f8dc1d43fd570a3", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/e4e2aac6cea245338051b7a78f8dc1d43fd570a3", "committedDate": "2020-06-11T11:00:42Z", "message": "Serialized the classes to store as a blob"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab230bfdfc0d3bc3ca04fbe6acba87b0abbc9dbf", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/ab230bfdfc0d3bc3ca04fbe6acba87b0abbc9dbf", "committedDate": "2020-06-11T11:00:42Z", "message": "Added configurations for gateway artifact synchronizer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbd081f232dc8ae337f60f24abe3832816cf4212", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/fbd081f232dc8ae337f60f24abe3832816cf4212", "committedDate": "2020-06-11T11:00:42Z", "message": "Implemented the db publisher and retriever for gateway artifact synchronizer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40c0abed7d6d9ad66e424093b57723259e77bb8e", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/40c0abed7d6d9ad66e424093b57723259e77bb8e", "committedDate": "2020-06-11T11:00:42Z", "message": "Exposed default implementation of synchronizer as a service to allow additional extensions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71d6e399579fbe69faac76667e8859844240c961", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/71d6e399579fbe69faac76667e8859844240c961", "committedDate": "2020-06-11T11:00:42Z", "message": "Added a new rest API to gateway to mannually deply APIs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e7199395749908b302b3fe67ea057e56223c696", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/8e7199395749908b302b3fe67ea057e56223c696", "committedDate": "2020-06-11T11:00:42Z", "message": "Changed the API deployment steps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0b9225e438ef17f29d634a542c4697deb2793d2", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/e0b9225e438ef17f29d634a542c4697deb2793d2", "committedDate": "2020-06-11T11:00:42Z", "message": "Added a new config to read gateway label"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c2d6ffbf63aef1b86f0ad44fd4c6befb22be1e2", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/3c2d6ffbf63aef1b86f0ad44fd4c6befb22be1e2", "committedDate": "2020-06-11T11:00:42Z", "message": "Read label from additional properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1ff985bb7508dbc14cdbc1aa37d496eccfde1e6", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/e1ff985bb7508dbc14cdbc1aa37d496eccfde1e6", "committedDate": "2020-06-11T11:00:42Z", "message": "Minor fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f80f6ec5084c7522667bd07ef50dc39eecef5c8b", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/f80f6ec5084c7522667bd07ef50dc39eecef5c8b", "committedDate": "2020-06-11T11:00:42Z", "message": "Bumped gateway rest API version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ad31925420e529796486bedcc30674390efc575", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/2ad31925420e529796486bedcc30674390efc575", "committedDate": "2020-06-11T11:00:42Z", "message": "Minor changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd92a970f22e4aa8409abae36fd3c1729ea08c1a", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/fd92a970f22e4aa8409abae36fd3c1729ea08c1a", "committedDate": "2020-06-11T11:00:42Z", "message": "Updated the interfaces with more functionalities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0429cc4fbda9649dc1bd68ae7a6def7373076847", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/0429cc4fbda9649dc1bd68ae7a6def7373076847", "committedDate": "2020-06-11T11:00:42Z", "message": "Added event notifier to publish and receive Gateway Publish event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3821892f676195dc7bb305229d0b9a06ecce9d93", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/3821892f676195dc7bb305229d0b9a06ecce9d93", "committedDate": "2020-06-11T11:00:42Z", "message": "Exceptions for Gateway Artifact synchronizer publisher and retriever extensions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "153387abded97189ea48e1ebd41731edf450ecca", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/153387abded97189ea48e1ebd41731edf450ecca", "committedDate": "2020-06-11T11:00:43Z", "message": "Implemented update and delete in publisher extension"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b550b2b9b25dcfd6b32c47a0588cd42182cd218", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/1b550b2b9b25dcfd6b32c47a0588cd42182cd218", "committedDate": "2020-06-11T11:00:43Z", "message": "Added support to filter APIs by gateway Label"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30a18a39c99a55ef9cf01db195254e894f26a9e9", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/30a18a39c99a55ef9cf01db195254e894f26a9e9", "committedDate": "2020-06-11T11:00:43Z", "message": "Added support to update API and delete API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10db48f3608a7174fd867c5f884fa90b60e185f3", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/10db48f3608a7174fd867c5f884fa90b60e185f3", "committedDate": "2020-06-11T11:00:43Z", "message": "Moved the deployAPI methods to gateway component"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "905e5720bb4e0f76bf8efd543bdf38908e8106d9", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/905e5720bb4e0f76bf8efd543bdf38908e8106d9", "committedDate": "2020-06-11T11:00:43Z", "message": "Added a new method to get the extension type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "928740efe30788404407b27b878019695626318f", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/928740efe30788404407b27b878019695626318f", "committedDate": "2020-06-11T11:00:43Z", "message": "Added a new configuration to specify the synchronizer type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f89c2af711ebbed2d5e425d7fbeb0ffa6662cd3", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/7f89c2af711ebbed2d5e425d7fbeb0ffa6662cd3", "committedDate": "2020-06-11T11:00:43Z", "message": "Added support to subscribe to more then one label for a gateway"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0694cd2ffdd85d5445606583f3f23754a5d37ebb", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/0694cd2ffdd85d5445606583f3f23754a5d37ebb", "committedDate": "2020-06-11T11:00:43Z", "message": "Changed DB Schema"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "729320d4119afa8e39619c9d089c599f3d94f4fc", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/729320d4119afa8e39619c9d089c599f3d94f4fc", "committedDate": "2020-06-11T11:00:43Z", "message": "Added the config mapping of artifact synchronizer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e20f692c0fcabb5c66818a275aa71a8730ca9c4a", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/e20f692c0fcabb5c66818a275aa71a8730ca9c4a", "committedDate": "2020-06-11T11:02:23Z", "message": "Added support to publish to Gateways defined with labels"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d3e63f2deb9dfab43424adea5028e2421a234f9", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/6d3e63f2deb9dfab43424adea5028e2421a234f9", "committedDate": "2020-06-11T11:02:23Z", "message": "Added support to remove APIs from gateways defined by labels"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09f32377f8fa7904d12ad68d439e94d12a991dcc", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/09f32377f8fa7904d12ad68d439e94d12a991dcc", "committedDate": "2020-06-11T11:02:23Z", "message": "Removed unnecessory envrionement name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b61c189d296c56cc1e9f75fb61a6292a54b6074e", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/b61c189d296c56cc1e9f75fb61a6292a54b6074e", "committedDate": "2020-06-11T11:02:23Z", "message": "Added support to update labeled environements from publisher"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "578850aa17ba64ebac7c4d41de94b0e93080022a", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/578850aa17ba64ebac7c4d41de94b0e93080022a", "committedDate": "2020-06-11T11:02:23Z", "message": "Restructured DB operations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e9b04945ec5a12590a60fd95b319d5d5e8e687b", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/0e9b04945ec5a12590a60fd95b319d5d5e8e687b", "committedDate": "2020-06-11T11:02:23Z", "message": "Added default label to all the gateways"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4b91dda92af0036c5412822f4d459e5ea269e45", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/e4b91dda92af0036c5412822f4d459e5ea269e45", "committedDate": "2020-06-11T11:02:23Z", "message": "Optimized the db operations and added a new field as DTO status"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5cba1b17e4cada2d888aa0f1feb8c8bc001cad4", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/e5cba1b17e4cada2d888aa0f1feb8c8bc001cad4", "committedDate": "2020-06-11T11:02:23Z", "message": "Bumped gateway rest api component version to apimgt version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ae7d4d40d7680ae2c390be20f04e2236e9f5297", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/4ae7d4d40d7680ae2c390be20f04e2236e9f5297", "committedDate": "2020-06-11T11:02:23Z", "message": "Added gateway rest api feature"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1881f227986d8d78e885a7488a3318d98490d14", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/a1881f227986d8d78e885a7488a3318d98490d14", "committedDate": "2020-06-11T11:02:23Z", "message": "Added artifact synchronizer tables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e5fa5789ada5a0f822beb156d966b2766b7dafd", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/8e5fa5789ada5a0f822beb156d966b2766b7dafd", "committedDate": "2020-06-11T11:02:23Z", "message": "Added gateway artifact pulling logic to jms listener\n\nOnce a new event received the gateway lable, it will pull all the artifacts\nrelated to that label from the storage and deploy in the gateway. Same thing\nwith the removing apis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05a133724e2563e5f482bb25e193dccde3fad2c0", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/05a133724e2563e5f482bb25e193dccde3fad2c0", "committedDate": "2020-06-11T11:02:23Z", "message": "Adding labels to the API object"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bdba0922dbb2664c5f8de402f4eb0e7a35e7acd", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/3bdba0922dbb2664c5f8de402f4eb0e7a35e7acd", "committedDate": "2020-06-11T11:02:23Z", "message": "Added a missing import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f38e57f81a60926ad14a015f3c12322c4374a66f", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/f38e57f81a60926ad14a015f3c12322c4374a66f", "committedDate": "2020-06-11T11:02:23Z", "message": "Added gateway rest api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e46def6e1a8dc03422c103cd2dd271adb1f3ba3b", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/e46def6e1a8dc03422c103cd2dd271adb1f3ba3b", "committedDate": "2020-06-11T11:02:23Z", "message": "Removed deleting the artifacts from storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b62f4f934e566477dbca89cd1387b0fbf3b43359", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/b62f4f934e566477dbca89cd1387b0fbf3b43359", "committedDate": "2020-06-11T11:02:23Z", "message": "Added a new method to check whether the api is published in any of the gateways"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11ee2e720e991c93089bedb1aad1de4bf82a392f", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/11ee2e720e991c93089bedb1aad1de4bf82a392f", "committedDate": "2020-06-11T11:02:23Z", "message": "Added support to sync API Products with artifact synchronizer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa15923d66fac0145c922580e2f1c72d02916539", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/fa15923d66fac0145c922580e2f1c72d02916539", "committedDate": "2020-06-11T11:02:23Z", "message": "Changed the Default artifact synchronizers to only deploy if they are selected from config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d451b768c40089990dbc1b9a18aeb7abe908135", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/1d451b768c40089990dbc1b9a18aeb7abe908135", "committedDate": "2020-06-11T11:02:24Z", "message": "Added a new resource to gateway rest api to undeploy apis from  gateway"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2031c3f79e299d578b8846c1a5dbd7a062b952e2", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/2031c3f79e299d578b8846c1a5dbd7a062b952e2", "committedDate": "2020-06-11T11:02:24Z", "message": "Added few resources to gateway Reset API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efe511233bd3cbcb6ecf4975a82c7f410b5c0f82", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/efe511233bd3cbcb6ecf4975a82c7f410b5c0f82", "committedDate": "2020-06-11T11:02:24Z", "message": "Removed unused imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NzY0MDMz", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#pullrequestreview-428764033", "createdAt": "2020-06-11T09:56:57Z", "commit": {"oid": "5e62769ade21b2544c56949a6d50909d2b06b3de"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOTo1Njo1N1rOGiWkGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDowMDoxNlrOGiWrKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY3NDQ1OQ==", "bodyText": "setArtifactRetriever ->addArtifactRetriever", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#discussion_r438674459", "createdAt": "2020-06-11T09:56:57Z", "author": {"login": "tharindu1st"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/internal/APIHandlerServiceComponent.java", "diffHunk": "@@ -396,5 +406,36 @@ protected void unsetGatewayJWTGenerator(AbstractAPIMgtGatewayJWTGenerator gatewa\n         ServiceReferenceHolder.getInstance().getApiMgtGatewayJWTGenerator()\n                 .remove(gatewayJWTGenerator.getClass().getName());\n     }\n+\n+    @Reference(\n+            name = \"gateway.artifact.retriever\",\n+            service = ArtifactRetriever.class,\n+            cardinality = ReferenceCardinality.MULTIPLE,\n+            policy = ReferencePolicy.DYNAMIC,\n+            unbind = \"unsetArtifactRetriever\")\n+    protected void setArtifactRetriever(ArtifactRetriever artifactRetriever) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e62769ade21b2544c56949a6d50909d2b06b3de"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY3NDk2Mw==", "bodyText": "unsetArtifactRetriever -> removeArtifactRetriever", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#discussion_r438674963", "createdAt": "2020-06-11T09:57:54Z", "author": {"login": "tharindu1st"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/internal/APIHandlerServiceComponent.java", "diffHunk": "@@ -396,5 +406,36 @@ protected void unsetGatewayJWTGenerator(AbstractAPIMgtGatewayJWTGenerator gatewa\n         ServiceReferenceHolder.getInstance().getApiMgtGatewayJWTGenerator()\n                 .remove(gatewayJWTGenerator.getClass().getName());\n     }\n+\n+    @Reference(\n+            name = \"gateway.artifact.retriever\",\n+            service = ArtifactRetriever.class,\n+            cardinality = ReferenceCardinality.MULTIPLE,\n+            policy = ReferencePolicy.DYNAMIC,\n+            unbind = \"unsetArtifactRetriever\")\n+    protected void setArtifactRetriever(ArtifactRetriever artifactRetriever) {\n+\n+        GatewayArtifactSynchronizerProperties gatewayArtifactSynchronizerProperties =\n+                ServiceReferenceHolder.getInstance().getAPIManagerConfiguration()\n+                        .getGatewayArtifactSynchronizerProperties();\n+\n+        if (gatewayArtifactSynchronizerProperties.isRetrieveFromStorageEnabled()\n+                && gatewayArtifactSynchronizerProperties.getRetrieverName().equals(artifactRetriever.getName())) {\n+            ServiceReferenceHolder.getInstance().setArtifactRetriever(artifactRetriever);\n+\n+            try {\n+                ServiceReferenceHolder.getInstance().getArtifactRetriever().init();\n+            } catch (Exception e) {\n+                log.error(\"Error connecting with the Artifact retriever\");\n+                unsetArtifactRetriever(null);\n+            }\n+        }\n+    }\n+\n+    protected void unsetArtifactRetriever(ArtifactRetriever artifactRetriever) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e62769ade21b2544c56949a6d50909d2b06b3de"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY3NTM0Ng==", "bodyText": "move this into serverstartupfinalizer class", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#discussion_r438675346", "createdAt": "2020-06-11T09:58:36Z", "author": {"login": "tharindu1st"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/internal/APIHandlerServiceComponent.java", "diffHunk": "@@ -95,6 +98,13 @@ protected void activate(ComponentContext context) {\n             APIManagerConfiguration apiManagerConfiguration =\n                     ServiceReferenceHolder.getInstance().getAPIManagerConfiguration();\n             String gatewayType = apiManagerConfiguration.getFirstProperty(APIConstants.API_GATEWAY_TYPE);\n+            GatewayArtifactSynchronizerProperties gatewayArtifactSynchronizerProperties =\n+                    ServiceReferenceHolder.getInstance()\n+                            .getAPIManagerConfiguration().getGatewayArtifactSynchronizerProperties();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e62769ade21b2544c56949a6d50909d2b06b3de"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY3NjI2NQ==", "bodyText": "check where log.debug done", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#discussion_r438676265", "createdAt": "2020-06-11T10:00:16Z", "author": {"login": "tharindu1st"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIGatewayManager.java", "diffHunk": "@@ -56,23 +61,23 @@\n \n import javax.xml.namespace.QName;\n import javax.xml.stream.XMLStreamException;\n+\n import java.util.*;\n \n public class APIGatewayManager {\n \n-\tprivate static final Log log = LogFactory.getLog(APIGatewayManager.class);\n-\n-\tprivate static APIGatewayManager instance;\n+    private static final Log log = LogFactory.getLog(APIGatewayManager.class);\n+    private boolean debugEnabled = log.isDebugEnabled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e62769ade21b2544c56949a6d50909d2b06b3de"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf4ab081f4b27bb2e2751e10dbbd5a8e2347e7a9", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/bf4ab081f4b27bb2e2751e10dbbd5a8e2347e7a9", "committedDate": "2020-06-11T11:04:51Z", "message": "Formatted the code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff28a15b702b366c6e73cb828317ee0cd40494d3", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/ff28a15b702b366c6e73cb828317ee0cd40494d3", "committedDate": "2020-06-11T11:04:51Z", "message": "Updated the interface to reduce the complexity and increase readability"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8220100a7947dc2da69e41f4dfc2e265a45a410c", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/8220100a7947dc2da69e41f4dfc2e265a45a410c", "committedDate": "2020-06-11T11:04:52Z", "message": "Improved with comments, meaningful variable names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0106b29c82e45cc4b486764aec9d720780ddebe", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/b0106b29c82e45cc4b486764aec9d720780ddebe", "committedDate": "2020-06-11T11:04:52Z", "message": "Added new configurations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "670179614b01867305f09f29cdbdb1452bb47129", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/670179614b01867305f09f29cdbdb1452bb47129", "committedDate": "2020-06-11T11:04:52Z", "message": "Changed DB column names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bb1e548172ce9d19e1c7d9b9c64465f82db0021", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/7bb1e548172ce9d19e1c7d9b9c64465f82db0021", "committedDate": "2020-06-11T11:04:52Z", "message": "Added a check for the gateway instruction when retrieving artifact"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d5244889ecf84684f7f2c900886857f624cc758", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/7d5244889ecf84684f7f2c900886857f624cc758", "committedDate": "2020-06-11T11:04:52Z", "message": "Changed variable names for better meaning"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94a0801e26ab22f622cf440cad7a6e6a896095a3", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/94a0801e26ab22f622cf440cad7a6e6a896095a3", "committedDate": "2020-06-11T11:04:52Z", "message": "Added a chack for nullity in artifact saver object"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d6666d7a3e7b6eafb614da638401876f1f84c77", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/0d6666d7a3e7b6eafb614da638401876f1f84c77", "committedDate": "2020-06-11T11:04:52Z", "message": "Added a new config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6383363e86f907118804e12368398b9861529e99", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/6383363e86f907118804e12368398b9861529e99", "committedDate": "2020-06-11T11:04:52Z", "message": "Changed configurations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a25c6e2a9ffdd42acbdb4c5e8004799cf200e86", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/3a25c6e2a9ffdd42acbdb4c5e8004799cf200e86", "committedDate": "2020-06-11T11:04:52Z", "message": "Fix error in config mapping"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03ac898d6f5bc97ff117386a103073cb39fdab76", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/03ac898d6f5bc97ff117386a103073cb39fdab76", "committedDate": "2020-06-11T11:04:52Z", "message": "Remove decoding the byte stream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "418ad6e1a9e363d65ff896906e0c8479f1ba12e7", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/418ad6e1a9e363d65ff896906e0c8479f1ba12e7", "committedDate": "2020-06-11T11:04:52Z", "message": "Switched publish and remove gateways order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae308b20c4132cc03bfefd4afe1812e8dea87a8c", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/ae308b20c4132cc03bfefd4afe1812e8dea87a8c", "committedDate": "2020-06-11T11:04:52Z", "message": "Updated gatewayExist check to work with labels"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9a85d7cac9219e967db29a44a87bf054fba5471", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/c9a85d7cac9219e967db29a44a87bf054fba5471", "committedDate": "2020-06-11T11:04:52Z", "message": "Fixes for Artifact synchronizer\n\n1.Removed GatewayAPIDTO from the interface\n2.Removed unnecessary methods in the interface and optimised db operations.\n3.Changed event notifications to send only one event with all the labels of the API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "523ccfe728c87f61cdb7b73e250e57b5042726f5", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/523ccfe728c87f61cdb7b73e250e57b5042726f5", "committedDate": "2020-06-11T11:04:52Z", "message": "Changed the version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59b6388bd9b98a8b6a4dfac2a172f688febb917e", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/59b6388bd9b98a8b6a4dfac2a172f688febb917e", "committedDate": "2020-06-11T11:04:52Z", "message": "Adding a new method to retrieve all api artifacts for a gateway"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6c765a9223d6299ba14fed4fbe4681b5c8a0c7e", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/d6c765a9223d6299ba14fed4fbe4681b5c8a0c7e", "committedDate": "2020-06-11T11:04:52Z", "message": "Add database entries for retrieving"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15d07ef04f63ca9ff5e82afebd014f3c43bf472e", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/15d07ef04f63ca9ff5e82afebd014f3c43bf472e", "committedDate": "2020-06-11T11:04:52Z", "message": "Add server startup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fc115988ffe96c38028af0e8ea9cca4c002a6f4", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/0fc115988ffe96c38028af0e8ea9cca4c002a6f4", "committedDate": "2020-06-11T11:04:53Z", "message": "fix test cases of publishingToGateway"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab6bd2efc3850e87fb93781a3f167b35d30bbb4b", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/ab6bd2efc3850e87fb93781a3f167b35d30bbb4b", "committedDate": "2020-06-11T11:04:53Z", "message": "Correct DB opeartion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08c1481d3cb79e9e760681de349644360be9f10d", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/08c1481d3cb79e9e760681de349644360be9f10d", "committedDate": "2020-06-11T11:04:53Z", "message": "Add method descriptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "864254a4b28348d88853dae918e5d91d14f69baf", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/864254a4b28348d88853dae918e5d91d14f69baf", "committedDate": "2020-06-11T11:04:53Z", "message": "Remove loggings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b87691087d7808a2ccc9a624d531b3f0b81bec9f", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/b87691087d7808a2ccc9a624d531b3f0b81bec9f", "committedDate": "2020-06-11T11:04:53Z", "message": "Rename method parameter in description"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48ee8e7d4c1e2ba3e72fb1a6c332146f242de599", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/48ee8e7d4c1e2ba3e72fb1a6c332146f242de599", "committedDate": "2020-06-11T11:04:53Z", "message": "fix test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a4602c813b1977161f5c814ba7862f57ef09096", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/6a4602c813b1977161f5c814ba7862f57ef09096", "committedDate": "2020-06-11T11:04:53Z", "message": "remove white spaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a901edd0a6ecc4c681ea0b95a00319324592328", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/3a901edd0a6ecc4c681ea0b95a00319324592328", "committedDate": "2020-06-11T11:04:53Z", "message": "Fix APIManagerComponent test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb8f08b923ae5bfee2a8f7bbad42b1094013abb1", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/cb8f08b923ae5bfee2a8f7bbad42b1094013abb1", "committedDate": "2020-06-11T11:04:53Z", "message": "fix test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e101782e5f2cf8144fb4425c458540c70a0611f1", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/e101782e5f2cf8144fb4425c458540c70a0611f1", "committedDate": "2020-06-11T11:04:53Z", "message": "fix test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfe6799365d65a9031c18380de74b5b00f039461", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/dfe6799365d65a9031c18380de74b5b00f039461", "committedDate": "2020-06-11T11:04:53Z", "message": "check validation for the availability of published gateway labels"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28fd1c82a9bdfd63858e0ca11eb79c1fb517b765", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/28fd1c82a9bdfd63858e0ca11eb79c1fb517b765", "committedDate": "2020-06-11T11:04:53Z", "message": "check validation for the availability of removed gateway labels"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42640c6c5922f67b801c3f3e813201f6b6cebd72", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/42640c6c5922f67b801c3f3e813201f6b6cebd72", "committedDate": "2020-06-11T11:04:53Z", "message": "resolve review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1d4047e613150cc092ebe298d600c5078608d45", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/e1d4047e613150cc092ebe298d600c5078608d45", "committedDate": "2020-06-11T11:10:03Z", "message": "Added license header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6195cbef3380ca4e1f0145e3a32c85ba9bb005f1", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/6195cbef3380ca4e1f0145e3a32c85ba9bb005f1", "committedDate": "2020-06-11T11:11:00Z", "message": "Added missing import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "329e8a00128db7f8438ae77e8c53a8fa83395afe", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/329e8a00128db7f8438ae77e8c53a8fa83395afe", "committedDate": "2020-06-11T11:11:09Z", "message": "Removed gatewayLabel from DTO"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7da40b64520947ff0ae61b2496f0ca7d106f5ef6", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/7da40b64520947ff0ae61b2496f0ca7d106f5ef6", "committedDate": "2020-06-11T11:27:14Z", "message": "Addressed review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "531553920fc17d9cc1ef611fe7807d37279cb438", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/531553920fc17d9cc1ef611fe7807d37279cb438", "committedDate": "2020-06-11T11:27:33Z", "message": "Bumped version"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5e62769ade21b2544c56949a6d50909d2b06b3de", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/5e62769ade21b2544c56949a6d50909d2b06b3de", "committedDate": "2020-06-11T08:35:37Z", "message": "Merge pull request #4 from Sarangan0219/artifact-testing\n\nFix APIManagerComponent And APIProviderImpl test case"}, "afterCommit": {"oid": "531553920fc17d9cc1ef611fe7807d37279cb438", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/531553920fc17d9cc1ef611fe7807d37279cb438", "committedDate": "2020-06-11T11:27:33Z", "message": "Bumped version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea9363b58e2c1fc461b898294bd6c4ba8a5b1392", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/ea9363b58e2c1fc461b898294bd6c4ba8a5b1392", "committedDate": "2020-06-11T11:37:29Z", "message": "Changed osgi service methods to add and remove retriever and saver"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bf26e46826318a05870f51553f515f056436768", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/6bf26e46826318a05870f51553f515f056436768", "committedDate": "2020-06-11T11:55:22Z", "message": "address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cde7b54e13cbebc3908a4211c2c596bd0d29929", "author": {"user": {"login": "1akshitha", "name": "Lakshitha Gunasekara"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/1cde7b54e13cbebc3908a4211c2c596bd0d29929", "committedDate": "2020-06-11T12:29:06Z", "message": "Merge pull request #5 from Sarangan0219/artifact-alpha\n\naddress review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4ODYxMjgy", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#pullrequestreview-428861282", "createdAt": "2020-06-11T12:32:00Z", "commit": {"oid": "1cde7b54e13cbebc3908a4211c2c596bd0d29929"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2ODEzNjY2", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#pullrequestreview-556813666", "createdAt": "2020-12-22T04:37:03Z", "commit": {"oid": "59b6388bd9b98a8b6a4dfac2a172f688febb917e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDozNzowNFrOIJuGKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDozNzowNFrOIJuGKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA2MzMzNw==", "bodyText": "We don't use '-' (dash) as a separator", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#discussion_r547063337", "createdAt": "2020-12-22T04:37:04Z", "author": {"login": "rmsamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/gatewayartifactsynchronizer/ArtifactRetriever.java", "diffHunk": "@@ -26,6 +28,16 @@\n     String retrieveArtifact(String APIId, String gatewayLabel, String gatewayInstruction)\n             throws ArtifactSynchronizerException;\n \n+    /**\n+     * This method is used to retrieve data from the storage\n+     *\n+     * @param gatewayLabel       - Label subscribed by the gateway", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b6388bd9b98a8b6a4dfac2a172f688febb917e"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2ODEzODU0", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#pullrequestreview-556813854", "createdAt": "2020-12-22T04:37:43Z", "commit": {"oid": "59b6388bd9b98a8b6a4dfac2a172f688febb917e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDozNzo0NFrOIJuGuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDozNzo0NFrOIJuGuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA2MzQ4MA==", "bodyText": "No need of using log.isDebugEnabled() if no string concatenation takes place", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#discussion_r547063480", "createdAt": "2020-12-22T04:37:44Z", "author": {"login": "rmsamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/gatewayartifactsynchronizer/DBRetriever.java", "diffHunk": "@@ -40,6 +42,25 @@ public String retrieveArtifact(String APIId, String gatewayLabel, String gateway\n         return gatewayRuntimeArtifacts;\n     }\n \n+    @Override\n+    public List<String> retrieveAllArtifacts(String label) throws ArtifactSynchronizerException {\n+        List<String> gatewayRuntimeArtifactsArray = new ArrayList<>();\n+        try {\n+            List<ByteArrayInputStream> baip = apiMgtDAO.getAllGatewayPublishedAPIArtifacts(label);\n+            for (ByteArrayInputStream byteStream :baip){\n+                byte[] bytes = ByteStreams.toByteArray(byteStream);\n+                String  gatewayRuntimeArtifacts = new String(bytes);\n+                gatewayRuntimeArtifactsArray.add(gatewayRuntimeArtifacts);\n+            }\n+            if (log.isDebugEnabled()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b6388bd9b98a8b6a4dfac2a172f688febb917e"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2ODE0MjEx", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#pullrequestreview-556814211", "createdAt": "2020-12-22T04:39:09Z", "commit": {"oid": "d6c765a9223d6299ba14fed4fbe4681b5c8a0c7e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDozOTowOVrOIJuIEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDozOTowOVrOIJuIEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA2MzgyNw==", "bodyText": "Add java doc comments for methods", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#discussion_r547063827", "createdAt": "2020-12-22T04:39:09Z", "author": {"login": "rmsamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -15527,6 +15527,26 @@ public ByteArrayInputStream getGatewayPublishedAPIArtifacts(String APIId, String\n         return baip;\n     }\n \n+    public List<ByteArrayInputStream> getAllGatewayPublishedAPIArtifacts(String label) throws APIManagementException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c765a9223d6299ba14fed4fbe4681b5c8a0c7e"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2ODE0NjE5", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#pullrequestreview-556814619", "createdAt": "2020-12-22T04:40:47Z", "commit": {"oid": "15d07ef04f63ca9ff5e82afebd014f3c43bf472e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDo0MDo0OFrOIJuJTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDo0MDo0OFrOIJuJTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA2NDE0MA==", "bodyText": "Need space after \"deploying\". i.e. \"deploying \"", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#discussion_r547064140", "createdAt": "2020-12-22T04:40:48Z", "author": {"login": "rmsamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java", "diffHunk": "@@ -58,6 +62,37 @@ public boolean deployAPI(String apiId, String gatewayLabel) {\n         return false;\n     }\n \n+    public boolean deployAllAPIsAtGatewayStartup (Set<String> assignedGatewayLabels) {\n+\n+        if (gatewayArtifactSynchronizerProperties.isRetrieveFromStorageEnabled()) {\n+            if (artifactRetriever != null) {\n+                try {\n+                    for (Iterator<String> it = assignedGatewayLabels.iterator(); it.hasNext();) {\n+                        String label = it.next();\n+                        List<String> gatewayRuntimeArtifacts = ServiceReferenceHolder\n+                                .getInstance().getArtifactRetriever().retrieveAllArtifacts(label);\n+                        for (String APIruntimeArtifact :gatewayRuntimeArtifacts){\n+                            GatewayAPIDTO gatewayAPIDTO = null;\n+                            try {\n+                                gatewayAPIDTO = new Gson().fromJson(APIruntimeArtifact, GatewayAPIDTO.class);\n+                                apiGatewayAdmin.deployAPI(gatewayAPIDTO);\n+                            } catch (AxisFault axisFault) {\n+                                log.error(\"Error in deploying\" + gatewayAPIDTO.getName()+ \" to the Gateway \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15d07ef04f63ca9ff5e82afebd014f3c43bf472e"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2ODE1MDU4", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#pullrequestreview-556815058", "createdAt": "2020-12-22T04:42:35Z", "commit": {"oid": "15d07ef04f63ca9ff5e82afebd014f3c43bf472e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDo0MjozNVrOIJuLEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDo0MjozNVrOIJuLEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA2NDU5Mg==", "bodyText": "The error stack trace is swallowed here. Don't we need to log it, since we do not throw the error?", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#discussion_r547064592", "createdAt": "2020-12-22T04:42:35Z", "author": {"login": "rmsamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java", "diffHunk": "@@ -58,6 +62,37 @@ public boolean deployAPI(String apiId, String gatewayLabel) {\n         return false;\n     }\n \n+    public boolean deployAllAPIsAtGatewayStartup (Set<String> assignedGatewayLabels) {\n+\n+        if (gatewayArtifactSynchronizerProperties.isRetrieveFromStorageEnabled()) {\n+            if (artifactRetriever != null) {\n+                try {\n+                    for (Iterator<String> it = assignedGatewayLabels.iterator(); it.hasNext();) {\n+                        String label = it.next();\n+                        List<String> gatewayRuntimeArtifacts = ServiceReferenceHolder\n+                                .getInstance().getArtifactRetriever().retrieveAllArtifacts(label);\n+                        for (String APIruntimeArtifact :gatewayRuntimeArtifacts){\n+                            GatewayAPIDTO gatewayAPIDTO = null;\n+                            try {\n+                                gatewayAPIDTO = new Gson().fromJson(APIruntimeArtifact, GatewayAPIDTO.class);\n+                                apiGatewayAdmin.deployAPI(gatewayAPIDTO);\n+                            } catch (AxisFault axisFault) {\n+                                log.error(\"Error in deploying\" + gatewayAPIDTO.getName()+ \" to the Gateway \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15d07ef04f63ca9ff5e82afebd014f3c43bf472e"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2ODE3Nzgy", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#pullrequestreview-556817782", "createdAt": "2020-12-22T04:53:34Z", "commit": {"oid": "b87691087d7808a2ccc9a624d531b3f0b81bec9f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDo1MzozNFrOIJuU0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDo1MzozNFrOIJuU0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA2NzA5MA==", "bodyText": "Adding a - (dash) is not correct. This will duplicate dash when the java doc is auto rendered ad displayed in the IDE when hovered on method call.", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#discussion_r547067090", "createdAt": "2020-12-22T04:53:34Z", "author": {"login": "rmsamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -15530,7 +15530,7 @@ public ByteArrayInputStream getGatewayPublishedAPIArtifacts(String APIId, String\n     /**\n      * Retrieve the list of blobs of the APIs for a given label\n      *\n-     * @param gatewayLabel - Gateway label of the API\n+     * @param label - Gateway label of the API", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b87691087d7808a2ccc9a624d531b3f0b81bec9f"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2ODE4MTI1", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#pullrequestreview-556818125", "createdAt": "2020-12-22T04:54:48Z", "commit": {"oid": "48ee8e7d4c1e2ba3e72fb1a6c332146f242de599"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDo1NDo0OFrOIJuWHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDo1NDo0OFrOIJuWHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA2NzQyMA==", "bodyText": "Additional space at the end after prodEnvironmentName ?", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#discussion_r547067420", "createdAt": "2020-12-22T04:54:48Z", "author": {"login": "rmsamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/test/java/org/wso2/carbon/apimgt/impl/APIGatewayManagerTest.java", "diffHunk": "@@ -617,7 +624,7 @@ public void testRemovingRESTAPIWithOutSequenceFromGateway() throws AxisFault {\n         Map<String, String> failedEnvironmentsMap = gatewayManager\n                 .publishToGateway(api, apiTemplateBuilder, tenantDomain);\n         Assert.assertEquals(failedEnvironmentsMap.size(), 1);\n-        Assert.assertTrue(failedEnvironmentsMap.keySet().contains(prodEnvironmentName));\n+        Assert.assertTrue(failedEnvironmentsMap.keySet().contains(prodEnvironmentName ));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48ee8e7d4c1e2ba3e72fb1a6c332146f242de599"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2ODE4MzE0", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#pullrequestreview-556818314", "createdAt": "2020-12-22T04:55:31Z", "commit": {"oid": "dfe6799365d65a9031c18380de74b5b00f039461"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDo1NTozMlrOIJuWxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDo1NTozMlrOIJuWxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA2NzU4OQ==", "bodyText": "Remove additional new lines", "url": "https://github.com/wso2/carbon-apimgt/pull/8705#discussion_r547067589", "createdAt": "2020-12-22T04:55:32Z", "author": {"login": "rmsamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -1406,7 +1406,13 @@ public void updateAPI(API api) throws APIManagementException, FaultGatewaysExcep\n \n                             //updated api contain what environments want to add\n                             Set<String> environmentsToPublish = new HashSet<String>(apiPublished.getEnvironments());\n-                            List<Label> labelsToPublish = new ArrayList<>(apiPublished.getGatewayLabels());\n+                            List<Label> labelsToPublish;\n+                            if (apiPublished.getGatewayLabels() != null ){\n+                                labelsToPublish = new ArrayList<>(apiPublished.getGatewayLabels());\n+                            } else {\n+                                labelsToPublish = new ArrayList<>();\n+                            }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe6799365d65a9031c18380de74b5b00f039461"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2727, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}