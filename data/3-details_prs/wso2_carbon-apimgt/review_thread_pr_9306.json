{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5ODYxOTEz", "number": 9306, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwOToyMjozMlrOEr-LDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwOToyMjozMlrOEr-LDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NTQyODYxOnYy", "diffSide": "LEFT", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/LifeCycle/Policies.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwOToyMjozMlrOHfCC6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNToyNToxNVrOHfOmjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMwMTQxNw==", "bodyText": "@chanaka3d I think this file is in use ?", "url": "https://github.com/wso2/carbon-apimgt/pull/9306#discussion_r502301417", "createdAt": "2020-10-09T09:22:32Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/LifeCycle/Policies.jsx", "diffHunk": "@@ -1,167 +0,0 @@\n-/*\n- * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n- *\n- * WSO2 Inc. licenses this file to you under the Apache License,\n- * Version 2.0 (the \"License\"); you may not use this file except\n- * in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied. See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-\n-import React, { Component } from 'react';\n-import Input from '@material-ui/core/Input';\n-import InputLabel from '@material-ui/core/InputLabel';\n-import MenuItem from '@material-ui/core/MenuItem';\n-import FormControl from '@material-ui/core/FormControl';\n-import FormHelperText from '@material-ui/core/FormHelperText';\n-import Select from '@material-ui/core/Select';\n-import { FormattedMessage } from 'react-intl';\n-import { withStyles } from '@material-ui/core/styles';\n-import PropTypes from 'prop-types';\n-import Alert from 'AppComponents/Shared/Alert';\n-\n-import API from 'AppData/api';\n-\n-const styles = () => ({\n-    FormControl: {\n-        padding: 0,\n-        width: '100%',\n-        marginTop: 0,\n-    },\n-});\n-\n-/**\n- *\n- *\n- * @export\n- * @class Policies\n- * @extends {Component}\n- */\n-class Policies extends Component {\n-    constructor() {\n-        super();\n-        this.state = {\n-            loading: false,\n-            selectedPolicies: [],\n-        };\n-        this.handleChange = this.handleChange.bind(this);\n-        this.changeTiers = this.changeTiers.bind(this);\n-        this.api = new API();\n-    }\n-\n-    handleChange(e) {\n-        this.setState({\n-            selectedPolicies: e.target.value,\n-        });\n-        if (this.props.handlePolicies) {\n-            this.props.handlePolicies(e.target.value);\n-        }\n-    }\n-\n-    changeTiers() {\n-        this.setState({\n-            loading: true,\n-        });\n-        const { api: { id: apiUUID } } = this.props;\n-        const promisedApi = this.api.get(apiUUID);\n-        promisedApi.then((response) => {\n-            const apiData = JSON.parse(response.data);\n-            apiData.policies = this.state.selectedPolicies;\n-            const promisedUpdate = this.api.update(apiData);\n-            promisedUpdate.then(() => {\n-                this.setState({\n-                    loading: false,\n-                });\n-                Alert.info('Lifecycle state updated successfully');\n-            });\n-        });\n-    }\n-\n-    /**\n-     *\n-     *\n-     * @returns\n-     * @memberof Policies\n-     */\n-    render() {\n-        const {\n-            handleInputChange, api, policies, isAPIProduct, classes,\n-        } = this.props;\n-        const { loading } = this.state;\n-        if (loading) {\n-            return 'Loading . . .';\n-        }\n-        return (\n-            <>\n-                <FormControl className={classes.FormControl}>\n-                    <InputLabel htmlFor='policy-selector'>\n-                        <FormattedMessage\n-                            id='Apis.Details.LifeCycle.Policies.business.plans'\n-                            defaultMessage='Business Plans'\n-                        />\n-                    </InputLabel>\n-                    <Select\n-                        error={api.policies && api.policies.length === 0}\n-                        fullWidth\n-                        margin='none'\n-                        multiple\n-                        name='policies'\n-                        value={api.policies || []}\n-                        onChange={handleInputChange}\n-                        input={<Input id='policy-selector' />}\n-                        MenuProps={{\n-                            PaperProps: {\n-                                style: {\n-                                    width: 200,\n-                                },\n-                            },\n-                        }}\n-                    >\n-                        {policies.map((policy) => (\n-                            <MenuItem\n-                                key={policy.name}\n-                                value={policy.name}\n-                                style={{\n-                                    fontWeight: policies.indexOf(policy.name) !== -1 ? '500' : '400',\n-                                }}\n-                            >\n-                                {policy.name}\n-                            </MenuItem>\n-                        ))}\n-                    </Select>\n-                    <FormHelperText>\n-                        {isAPIProduct\n-                            ? (\n-                                <FormattedMessage\n-                                    id='Apis.Details.LifeCycle.Policies.select.plan.api.product'\n-                                    defaultMessage='Select a plan for the API product.'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6b9d905ea5f5a6c5263c3a83c3611dd5582d671"}, "originalPosition": 145}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUwNzE1MQ==", "bodyText": "This file is refered from source/src/app/components/Apis/Create/Default/APICreateDefault.test.jsx.\nIt seems we have to restore this file.", "url": "https://github.com/wso2/carbon-apimgt/pull/9306#discussion_r502507151", "createdAt": "2020-10-09T15:25:15Z", "author": {"login": "chanaka3d"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/LifeCycle/Policies.jsx", "diffHunk": "@@ -1,167 +0,0 @@\n-/*\n- * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n- *\n- * WSO2 Inc. licenses this file to you under the Apache License,\n- * Version 2.0 (the \"License\"); you may not use this file except\n- * in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied. See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-\n-import React, { Component } from 'react';\n-import Input from '@material-ui/core/Input';\n-import InputLabel from '@material-ui/core/InputLabel';\n-import MenuItem from '@material-ui/core/MenuItem';\n-import FormControl from '@material-ui/core/FormControl';\n-import FormHelperText from '@material-ui/core/FormHelperText';\n-import Select from '@material-ui/core/Select';\n-import { FormattedMessage } from 'react-intl';\n-import { withStyles } from '@material-ui/core/styles';\n-import PropTypes from 'prop-types';\n-import Alert from 'AppComponents/Shared/Alert';\n-\n-import API from 'AppData/api';\n-\n-const styles = () => ({\n-    FormControl: {\n-        padding: 0,\n-        width: '100%',\n-        marginTop: 0,\n-    },\n-});\n-\n-/**\n- *\n- *\n- * @export\n- * @class Policies\n- * @extends {Component}\n- */\n-class Policies extends Component {\n-    constructor() {\n-        super();\n-        this.state = {\n-            loading: false,\n-            selectedPolicies: [],\n-        };\n-        this.handleChange = this.handleChange.bind(this);\n-        this.changeTiers = this.changeTiers.bind(this);\n-        this.api = new API();\n-    }\n-\n-    handleChange(e) {\n-        this.setState({\n-            selectedPolicies: e.target.value,\n-        });\n-        if (this.props.handlePolicies) {\n-            this.props.handlePolicies(e.target.value);\n-        }\n-    }\n-\n-    changeTiers() {\n-        this.setState({\n-            loading: true,\n-        });\n-        const { api: { id: apiUUID } } = this.props;\n-        const promisedApi = this.api.get(apiUUID);\n-        promisedApi.then((response) => {\n-            const apiData = JSON.parse(response.data);\n-            apiData.policies = this.state.selectedPolicies;\n-            const promisedUpdate = this.api.update(apiData);\n-            promisedUpdate.then(() => {\n-                this.setState({\n-                    loading: false,\n-                });\n-                Alert.info('Lifecycle state updated successfully');\n-            });\n-        });\n-    }\n-\n-    /**\n-     *\n-     *\n-     * @returns\n-     * @memberof Policies\n-     */\n-    render() {\n-        const {\n-            handleInputChange, api, policies, isAPIProduct, classes,\n-        } = this.props;\n-        const { loading } = this.state;\n-        if (loading) {\n-            return 'Loading . . .';\n-        }\n-        return (\n-            <>\n-                <FormControl className={classes.FormControl}>\n-                    <InputLabel htmlFor='policy-selector'>\n-                        <FormattedMessage\n-                            id='Apis.Details.LifeCycle.Policies.business.plans'\n-                            defaultMessage='Business Plans'\n-                        />\n-                    </InputLabel>\n-                    <Select\n-                        error={api.policies && api.policies.length === 0}\n-                        fullWidth\n-                        margin='none'\n-                        multiple\n-                        name='policies'\n-                        value={api.policies || []}\n-                        onChange={handleInputChange}\n-                        input={<Input id='policy-selector' />}\n-                        MenuProps={{\n-                            PaperProps: {\n-                                style: {\n-                                    width: 200,\n-                                },\n-                            },\n-                        }}\n-                    >\n-                        {policies.map((policy) => (\n-                            <MenuItem\n-                                key={policy.name}\n-                                value={policy.name}\n-                                style={{\n-                                    fontWeight: policies.indexOf(policy.name) !== -1 ? '500' : '400',\n-                                }}\n-                            >\n-                                {policy.name}\n-                            </MenuItem>\n-                        ))}\n-                    </Select>\n-                    <FormHelperText>\n-                        {isAPIProduct\n-                            ? (\n-                                <FormattedMessage\n-                                    id='Apis.Details.LifeCycle.Policies.select.plan.api.product'\n-                                    defaultMessage='Select a plan for the API product.'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMwMTQxNw=="}, "originalCommit": {"oid": "e6b9d905ea5f5a6c5263c3a83c3611dd5582d671"}, "originalPosition": 145}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3044, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}