{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4OTc3NDU2", "number": 8132, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTowMjowNFrODcK_FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDoyMzoxMlrODcMULw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODY2NzA5OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.util/src/main/java/org/wso2/carbon/apimgt/rest/api/util/impl/ExportApiUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTowMjowNFrOFkFACw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOToxMDo1OVrOFkFNPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3NDk4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        RestApiUtil.handleBadRequest(\"None of 'name', 'version' or 'provider' should not be null\", log);\n          \n          \n            \n                        RestApiUtil.handleBadRequest(\"'name', 'version' or 'provider' should not be null\", log);", "url": "https://github.com/wso2/carbon-apimgt/pull/8132#discussion_r373374987", "createdAt": "2020-01-31T09:02:04Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.util/src/main/java/org/wso2/carbon/apimgt/rest/api/util/impl/ExportApiUtil.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.carbon.apimgt.rest.api.util.impl;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.apimgt.api.APIManagementException;\n+import org.wso2.carbon.apimgt.api.APIProvider;\n+import org.wso2.carbon.apimgt.api.model.APIIdentifier;\n+import org.wso2.carbon.apimgt.impl.importexport.APIImportExportException;\n+import org.wso2.carbon.apimgt.impl.importexport.ExportFormat;\n+import org.wso2.carbon.apimgt.impl.importexport.utils.APIExportUtil;\n+import org.wso2.carbon.apimgt.impl.utils.APIUtil;\n+import org.wso2.carbon.apimgt.rest.api.util.RestApiConstants;\n+import org.wso2.carbon.apimgt.rest.api.util.utils.RestApiUtil;\n+import org.wso2.carbon.utils.multitenancy.MultitenantUtils;\n+\n+import javax.ws.rs.core.Response;\n+import java.io.File;\n+\n+public class ExportApiUtil {\n+    private static final Log log = LogFactory.getLog(ExportApiUtil.class);\n+    private static final String APPLICATION_EXPORT_DIR_PREFIX = \"exported-app-archives-\";\n+    private static final String DEFAULT_APPLICATION_EXPORT_DIR = \"exported-application\";\n+    private static final String PRODUCTION = \"PRODUCTION\";\n+    private static final String SANDBOX = \"SANDBOX\";\n+\n+    /**\n+     * Exports an API from API Manager for a given API ID. Meta information, API icon, documentation, WSDL\n+     * and sequences are exported. This service generates a zipped archive which contains all the above mentioned\n+     * resources for a given API.\n+     *\n+     * @param name           Name of the API that needs to be exported\n+     * @param version        Version of the API that needs to be exported\n+     * @param providerName   Provider name of the API that needs to be exported\n+     * @param format         Format of output documents. Can be YAML or JSON\n+     * @param preserveStatus Preserve API status on export\n+     * @return Zipped file containing exported API\n+     */\n+\n+    public Response exportApiByParams(String name, String version, String providerName, String format, Boolean preserveStatus) {\n+        ExportFormat exportFormat;\n+        String userName;\n+        APIIdentifier apiIdentifier;\n+        APIProvider apiProvider;\n+        String apiDomain;\n+        String apiRequesterDomain;\n+        File file;\n+        //If not specified status is preserved by default\n+        boolean isStatusPreserved = preserveStatus == null || preserveStatus;\n+\n+        if (name == null || version == null || providerName == null) {\n+            RestApiUtil.handleBadRequest(\"None of 'name', 'version' or 'provider' should not be null\", log);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27ddf2a5412106d415666878af1f98a805ba40c8"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3ODM2Ng==", "bodyText": "Done", "url": "https://github.com/wso2/carbon-apimgt/pull/8132#discussion_r373378366", "createdAt": "2020-01-31T09:10:59Z", "author": {"login": "VimukthiMayadunne"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.util/src/main/java/org/wso2/carbon/apimgt/rest/api/util/impl/ExportApiUtil.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.carbon.apimgt.rest.api.util.impl;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.apimgt.api.APIManagementException;\n+import org.wso2.carbon.apimgt.api.APIProvider;\n+import org.wso2.carbon.apimgt.api.model.APIIdentifier;\n+import org.wso2.carbon.apimgt.impl.importexport.APIImportExportException;\n+import org.wso2.carbon.apimgt.impl.importexport.ExportFormat;\n+import org.wso2.carbon.apimgt.impl.importexport.utils.APIExportUtil;\n+import org.wso2.carbon.apimgt.impl.utils.APIUtil;\n+import org.wso2.carbon.apimgt.rest.api.util.RestApiConstants;\n+import org.wso2.carbon.apimgt.rest.api.util.utils.RestApiUtil;\n+import org.wso2.carbon.utils.multitenancy.MultitenantUtils;\n+\n+import javax.ws.rs.core.Response;\n+import java.io.File;\n+\n+public class ExportApiUtil {\n+    private static final Log log = LogFactory.getLog(ExportApiUtil.class);\n+    private static final String APPLICATION_EXPORT_DIR_PREFIX = \"exported-app-archives-\";\n+    private static final String DEFAULT_APPLICATION_EXPORT_DIR = \"exported-application\";\n+    private static final String PRODUCTION = \"PRODUCTION\";\n+    private static final String SANDBOX = \"SANDBOX\";\n+\n+    /**\n+     * Exports an API from API Manager for a given API ID. Meta information, API icon, documentation, WSDL\n+     * and sequences are exported. This service generates a zipped archive which contains all the above mentioned\n+     * resources for a given API.\n+     *\n+     * @param name           Name of the API that needs to be exported\n+     * @param version        Version of the API that needs to be exported\n+     * @param providerName   Provider name of the API that needs to be exported\n+     * @param format         Format of output documents. Can be YAML or JSON\n+     * @param preserveStatus Preserve API status on export\n+     * @return Zipped file containing exported API\n+     */\n+\n+    public Response exportApiByParams(String name, String version, String providerName, String format, Boolean preserveStatus) {\n+        ExportFormat exportFormat;\n+        String userName;\n+        APIIdentifier apiIdentifier;\n+        APIProvider apiProvider;\n+        String apiDomain;\n+        String apiRequesterDomain;\n+        File file;\n+        //If not specified status is preserved by default\n+        boolean isStatusPreserved = preserveStatus == null || preserveStatus;\n+\n+        if (name == null || version == null || providerName == null) {\n+            RestApiUtil.handleBadRequest(\"None of 'name', 'version' or 'provider' should not be null\", log);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3NDk4Nw=="}, "originalCommit": {"oid": "27ddf2a5412106d415666878af1f98a805ba40c8"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODY2OTA3OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.util/src/main/java/org/wso2/carbon/apimgt/rest/api/util/impl/ExportApiUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTowMzowNFrOFkFBbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOToxMDo1NFrOFkFNGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3NTM0MA==", "bodyText": "Remove unused constants", "url": "https://github.com/wso2/carbon-apimgt/pull/8132#discussion_r373375340", "createdAt": "2020-01-31T09:03:04Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.util/src/main/java/org/wso2/carbon/apimgt/rest/api/util/impl/ExportApiUtil.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.carbon.apimgt.rest.api.util.impl;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.apimgt.api.APIManagementException;\n+import org.wso2.carbon.apimgt.api.APIProvider;\n+import org.wso2.carbon.apimgt.api.model.APIIdentifier;\n+import org.wso2.carbon.apimgt.impl.importexport.APIImportExportException;\n+import org.wso2.carbon.apimgt.impl.importexport.ExportFormat;\n+import org.wso2.carbon.apimgt.impl.importexport.utils.APIExportUtil;\n+import org.wso2.carbon.apimgt.impl.utils.APIUtil;\n+import org.wso2.carbon.apimgt.rest.api.util.RestApiConstants;\n+import org.wso2.carbon.apimgt.rest.api.util.utils.RestApiUtil;\n+import org.wso2.carbon.utils.multitenancy.MultitenantUtils;\n+\n+import javax.ws.rs.core.Response;\n+import java.io.File;\n+\n+public class ExportApiUtil {\n+    private static final Log log = LogFactory.getLog(ExportApiUtil.class);\n+    private static final String APPLICATION_EXPORT_DIR_PREFIX = \"exported-app-archives-\";\n+    private static final String DEFAULT_APPLICATION_EXPORT_DIR = \"exported-application\";\n+    private static final String PRODUCTION = \"PRODUCTION\";\n+    private static final String SANDBOX = \"SANDBOX\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27ddf2a5412106d415666878af1f98a805ba40c8"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3ODMyOA==", "bodyText": "Done", "url": "https://github.com/wso2/carbon-apimgt/pull/8132#discussion_r373378328", "createdAt": "2020-01-31T09:10:54Z", "author": {"login": "VimukthiMayadunne"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.util/src/main/java/org/wso2/carbon/apimgt/rest/api/util/impl/ExportApiUtil.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.carbon.apimgt.rest.api.util.impl;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.apimgt.api.APIManagementException;\n+import org.wso2.carbon.apimgt.api.APIProvider;\n+import org.wso2.carbon.apimgt.api.model.APIIdentifier;\n+import org.wso2.carbon.apimgt.impl.importexport.APIImportExportException;\n+import org.wso2.carbon.apimgt.impl.importexport.ExportFormat;\n+import org.wso2.carbon.apimgt.impl.importexport.utils.APIExportUtil;\n+import org.wso2.carbon.apimgt.impl.utils.APIUtil;\n+import org.wso2.carbon.apimgt.rest.api.util.RestApiConstants;\n+import org.wso2.carbon.apimgt.rest.api.util.utils.RestApiUtil;\n+import org.wso2.carbon.utils.multitenancy.MultitenantUtils;\n+\n+import javax.ws.rs.core.Response;\n+import java.io.File;\n+\n+public class ExportApiUtil {\n+    private static final Log log = LogFactory.getLog(ExportApiUtil.class);\n+    private static final String APPLICATION_EXPORT_DIR_PREFIX = \"exported-app-archives-\";\n+    private static final String DEFAULT_APPLICATION_EXPORT_DIR = \"exported-application\";\n+    private static final String PRODUCTION = \"PRODUCTION\";\n+    private static final String SANDBOX = \"SANDBOX\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3NTM0MA=="}, "originalCommit": {"oid": "27ddf2a5412106d415666878af1f98a805ba40c8"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODY3MjAwOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/resources/publisher-api.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTowNDoxNlrOFkFDPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOToxMjoyNFrOFkFPhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3NTgwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    - APIs (Individual)\n          \n          \n            \n                    - Import Export", "url": "https://github.com/wso2/carbon-apimgt/pull/8132#discussion_r373375806", "createdAt": "2020-01-31T09:04:16Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/resources/publisher-api.yaml", "diffHunk": "@@ -3569,6 +3569,94 @@ paths:\n           schema:\n             $ref: '#/definitions/Error'\n \n+  ######################################################\n+  # Export Resource API\n+  ######################################################\n+  '/apis/export':\n+    #--------------------------------------------------------\n+    # Get an API as a Zip File\n+    #--------------------------------------------------------\n+    get:\n+      security:\n+        - OAuth2Security:\n+            - apim:api_publish\n+            - apim:api_create\n+      produces:\n+        - application/zip\n+      x-wso2-curl: \"curl -k -H \\\"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\\\" -X GET https://localhost:9443/api/am/publisher/v1/export/api?name=PizzaShackAPI&version=1.0.0&providerName=admin > exportAPI.zip\"\n+      x-wso2-request: |\n+        GET https://localhost:9443/api/am/publisher/v1/export/api?name=SampleAPI&version=1.0.0&providerName=admin\n+        Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n+      x-wso2-response: \"HTTP/1.1 200 OK\\n Connection: keep-alive\\n  Content-Disposition: attachment; filename=\\\"exported-api.zip\\\"\\n  Content-Type: application/zip\"\n+      summary: Export an API\n+      description: |\n+        This operation can be used to export the details of a particular API as a zip file.\n+      parameters:\n+        - in: query\n+          name: apiId\n+          required: false\n+          type: string\n+          description: UUID of the API\n+        - name: name\n+          in: query\n+          description: |\n+            API Name\n+          required: false\n+          type: string\n+        - name: version\n+          in: query\n+          description: |\n+            Version of the API\n+          required: false\n+          type: string\n+        - name: providerName\n+          in: query\n+          description: |\n+            Provider name of the API\n+          required: false\n+          type: string\n+        - name: format\n+          in: query\n+          description: |\n+            Format of output documents. Can be YAML or JSON.\n+          type: string\n+          enum:\n+            - JSON\n+            - YAML\n+          required: false\n+        - name: preserveStatus\n+          in: query\n+          description: |\n+            Preserve API Status on export\n+          required: false\n+          type: boolean\n+      tags:\n+        - APIs (Individual)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27ddf2a5412106d415666878af1f98a805ba40c8"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3ODk1MQ==", "bodyText": "Done", "url": "https://github.com/wso2/carbon-apimgt/pull/8132#discussion_r373378951", "createdAt": "2020-01-31T09:12:24Z", "author": {"login": "VimukthiMayadunne"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/resources/publisher-api.yaml", "diffHunk": "@@ -3569,6 +3569,94 @@ paths:\n           schema:\n             $ref: '#/definitions/Error'\n \n+  ######################################################\n+  # Export Resource API\n+  ######################################################\n+  '/apis/export':\n+    #--------------------------------------------------------\n+    # Get an API as a Zip File\n+    #--------------------------------------------------------\n+    get:\n+      security:\n+        - OAuth2Security:\n+            - apim:api_publish\n+            - apim:api_create\n+      produces:\n+        - application/zip\n+      x-wso2-curl: \"curl -k -H \\\"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\\\" -X GET https://localhost:9443/api/am/publisher/v1/export/api?name=PizzaShackAPI&version=1.0.0&providerName=admin > exportAPI.zip\"\n+      x-wso2-request: |\n+        GET https://localhost:9443/api/am/publisher/v1/export/api?name=SampleAPI&version=1.0.0&providerName=admin\n+        Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n+      x-wso2-response: \"HTTP/1.1 200 OK\\n Connection: keep-alive\\n  Content-Disposition: attachment; filename=\\\"exported-api.zip\\\"\\n  Content-Type: application/zip\"\n+      summary: Export an API\n+      description: |\n+        This operation can be used to export the details of a particular API as a zip file.\n+      parameters:\n+        - in: query\n+          name: apiId\n+          required: false\n+          type: string\n+          description: UUID of the API\n+        - name: name\n+          in: query\n+          description: |\n+            API Name\n+          required: false\n+          type: string\n+        - name: version\n+          in: query\n+          description: |\n+            Version of the API\n+          required: false\n+          type: string\n+        - name: providerName\n+          in: query\n+          description: |\n+            Provider name of the API\n+          required: false\n+          type: string\n+        - name: format\n+          in: query\n+          description: |\n+            Format of output documents. Can be YAML or JSON.\n+          type: string\n+          enum:\n+            - JSON\n+            - YAML\n+          required: false\n+        - name: preserveStatus\n+          in: query\n+          description: |\n+            Preserve API Status on export\n+          required: false\n+          type: boolean\n+      tags:\n+        - APIs (Individual)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3NTgwNg=="}, "originalCommit": {"oid": "27ddf2a5412106d415666878af1f98a805ba40c8"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODY3OTY0OnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/components/APIDetailsTopMenu.jsx", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTowNzo0MVrOFkFIFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo0NjozOFrOFkGH1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3NzA0NA==", "bodyText": "Can we remove async here?", "url": "https://github.com/wso2/carbon-apimgt/pull/8132#discussion_r373377044", "createdAt": "2020-01-31T09:07:41Z", "author": {"login": "malinthaprasan"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/components/APIDetailsTopMenu.jsx", "diffHunk": "@@ -59,13 +66,52 @@ const styles = (theme) => ({\n         textOverflow: 'ellipsis',\n         whiteSpace: 'nowrap',\n     },\n+    downloadApi: {\n+        display: 'flex',\n+        flexDirection: 'column',\n+        textAlign: 'center',\n+        justifyContent: 'center',\n+        cursor: 'pointer',\n+        height: 70,\n+        color: theme.palette.getContrastText(theme.palette.background.paper),\n+    },\n+    downloadApiFlex: {\n+        display: 'flex',\n+        flexDirection: 'column',\n+    },\n });\n \n+\n const APIDetailsTopMenu = (props) => {\n     const {\n         classes, theme, api, isAPIProduct, imageUpdate,\n     } = props;\n     const isVisibleInStore = ['PROTOTYPED', 'PUBLISHED'].includes(api.lifeCycleStatus);\n+    /**\n+ * The component for advanced endpoint configurations.\n+ * @param {string} name The name of the\n+ * @param {string} version Version of the API\n+ * @param {string} provider Provider of the API\n+ * @param {string} format Weather to recive files in YALM of JSON format\n+ * @returns {zip} Zpi file containing the API directory.\n+ */\n+    async function exportAPI() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27ddf2a5412106d415666878af1f98a805ba40c8"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3Nzg3OA==", "bodyText": "if it removed it will push a null object to  Utils.forceDownload function", "url": "https://github.com/wso2/carbon-apimgt/pull/8132#discussion_r373377878", "createdAt": "2020-01-31T09:09:48Z", "author": {"login": "VimukthiMayadunne"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/components/APIDetailsTopMenu.jsx", "diffHunk": "@@ -59,13 +66,52 @@ const styles = (theme) => ({\n         textOverflow: 'ellipsis',\n         whiteSpace: 'nowrap',\n     },\n+    downloadApi: {\n+        display: 'flex',\n+        flexDirection: 'column',\n+        textAlign: 'center',\n+        justifyContent: 'center',\n+        cursor: 'pointer',\n+        height: 70,\n+        color: theme.palette.getContrastText(theme.palette.background.paper),\n+    },\n+    downloadApiFlex: {\n+        display: 'flex',\n+        flexDirection: 'column',\n+    },\n });\n \n+\n const APIDetailsTopMenu = (props) => {\n     const {\n         classes, theme, api, isAPIProduct, imageUpdate,\n     } = props;\n     const isVisibleInStore = ['PROTOTYPED', 'PUBLISHED'].includes(api.lifeCycleStatus);\n+    /**\n+ * The component for advanced endpoint configurations.\n+ * @param {string} name The name of the\n+ * @param {string} version Version of the API\n+ * @param {string} provider Provider of the API\n+ * @param {string} format Weather to recive files in YALM of JSON format\n+ * @returns {zip} Zpi file containing the API directory.\n+ */\n+    async function exportAPI() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3NzA0NA=="}, "originalCommit": {"oid": "27ddf2a5412106d415666878af1f98a805ba40c8"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM4MDA0Ng==", "bodyText": "We don't use async usually. There should be a way to do it without using async.", "url": "https://github.com/wso2/carbon-apimgt/pull/8132#discussion_r373380046", "createdAt": "2020-01-31T09:15:03Z", "author": {"login": "malinthaprasan"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/components/APIDetailsTopMenu.jsx", "diffHunk": "@@ -59,13 +66,52 @@ const styles = (theme) => ({\n         textOverflow: 'ellipsis',\n         whiteSpace: 'nowrap',\n     },\n+    downloadApi: {\n+        display: 'flex',\n+        flexDirection: 'column',\n+        textAlign: 'center',\n+        justifyContent: 'center',\n+        cursor: 'pointer',\n+        height: 70,\n+        color: theme.palette.getContrastText(theme.palette.background.paper),\n+    },\n+    downloadApiFlex: {\n+        display: 'flex',\n+        flexDirection: 'column',\n+    },\n });\n \n+\n const APIDetailsTopMenu = (props) => {\n     const {\n         classes, theme, api, isAPIProduct, imageUpdate,\n     } = props;\n     const isVisibleInStore = ['PROTOTYPED', 'PUBLISHED'].includes(api.lifeCycleStatus);\n+    /**\n+ * The component for advanced endpoint configurations.\n+ * @param {string} name The name of the\n+ * @param {string} version Version of the API\n+ * @param {string} provider Provider of the API\n+ * @param {string} format Weather to recive files in YALM of JSON format\n+ * @returns {zip} Zpi file containing the API directory.\n+ */\n+    async function exportAPI() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3NzA0NA=="}, "originalCommit": {"oid": "27ddf2a5412106d415666878af1f98a805ba40c8"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM4MDM3OQ==", "bodyText": "Check WSDL.jsx -> handleDownloadWSDLZip() and its usage", "url": "https://github.com/wso2/carbon-apimgt/pull/8132#discussion_r373380379", "createdAt": "2020-01-31T09:15:48Z", "author": {"login": "malinthaprasan"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/components/APIDetailsTopMenu.jsx", "diffHunk": "@@ -59,13 +66,52 @@ const styles = (theme) => ({\n         textOverflow: 'ellipsis',\n         whiteSpace: 'nowrap',\n     },\n+    downloadApi: {\n+        display: 'flex',\n+        flexDirection: 'column',\n+        textAlign: 'center',\n+        justifyContent: 'center',\n+        cursor: 'pointer',\n+        height: 70,\n+        color: theme.palette.getContrastText(theme.palette.background.paper),\n+    },\n+    downloadApiFlex: {\n+        display: 'flex',\n+        flexDirection: 'column',\n+    },\n });\n \n+\n const APIDetailsTopMenu = (props) => {\n     const {\n         classes, theme, api, isAPIProduct, imageUpdate,\n     } = props;\n     const isVisibleInStore = ['PROTOTYPED', 'PUBLISHED'].includes(api.lifeCycleStatus);\n+    /**\n+ * The component for advanced endpoint configurations.\n+ * @param {string} name The name of the\n+ * @param {string} version Version of the API\n+ * @param {string} provider Provider of the API\n+ * @param {string} format Weather to recive files in YALM of JSON format\n+ * @returns {zip} Zpi file containing the API directory.\n+ */\n+    async function exportAPI() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3NzA0NA=="}, "originalCommit": {"oid": "27ddf2a5412106d415666878af1f98a805ba40c8"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5MzM2NA==", "bodyText": "Done", "url": "https://github.com/wso2/carbon-apimgt/pull/8132#discussion_r373393364", "createdAt": "2020-01-31T09:46:38Z", "author": {"login": "VimukthiMayadunne"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/components/APIDetailsTopMenu.jsx", "diffHunk": "@@ -59,13 +66,52 @@ const styles = (theme) => ({\n         textOverflow: 'ellipsis',\n         whiteSpace: 'nowrap',\n     },\n+    downloadApi: {\n+        display: 'flex',\n+        flexDirection: 'column',\n+        textAlign: 'center',\n+        justifyContent: 'center',\n+        cursor: 'pointer',\n+        height: 70,\n+        color: theme.palette.getContrastText(theme.palette.background.paper),\n+    },\n+    downloadApiFlex: {\n+        display: 'flex',\n+        flexDirection: 'column',\n+    },\n });\n \n+\n const APIDetailsTopMenu = (props) => {\n     const {\n         classes, theme, api, isAPIProduct, imageUpdate,\n     } = props;\n     const isVisibleInStore = ['PROTOTYPED', 'PUBLISHED'].includes(api.lifeCycleStatus);\n+    /**\n+ * The component for advanced endpoint configurations.\n+ * @param {string} name The name of the\n+ * @param {string} version Version of the API\n+ * @param {string} provider Provider of the API\n+ * @param {string} format Weather to recive files in YALM of JSON format\n+ * @returns {zip} Zpi file containing the API directory.\n+ */\n+    async function exportAPI() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3NzA0NA=="}, "originalCommit": {"oid": "27ddf2a5412106d415666878af1f98a805ba40c8"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODg3MzkyOnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/components/APIDetailsTopMenu.jsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDoxOToxNFrOFkG-2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDoxOToxNFrOFkG-2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwNzQ1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                Download API\n          \n          \n            \n                            <FormattedMessage\n          \n          \n            \n                                id='Apis.Details.APIDetailsTopMenu.download.api'\n          \n          \n            \n                                defaultMessage='Download API'\n          \n          \n            \n                            />", "url": "https://github.com/wso2/carbon-apimgt/pull/8132#discussion_r373407451", "createdAt": "2020-01-31T10:19:14Z", "author": {"login": "malinthaprasan"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/components/APIDetailsTopMenu.jsx", "diffHunk": "@@ -135,7 +180,26 @@ const APIDetailsTopMenu = (props) => {\n                     </Typography>\n                 </a>\n             )}\n+            {/* Page error banner */}\n+            {/* end of Page error banner */}\n             {isAPIProduct ? null : <CreateNewVersionButton buttonClass={classes.viewInStoreLauncher} api={api} />}\n+            {(isDownlodable) && <VerticalDivider height={70} />}\n+            <div className={classes.downloadApi}>\n+                {(isDownlodable) && (\n+                    <a\n+                        onClick={exportAPI}\n+                        onKeyDown='null'\n+                        className={classes.downloadApiFlex}\n+                    >\n+                        <div>\n+                            <CloudDownloadRounded />\n+                        </div>\n+                        <Typography variant='caption' align='left'>\n+                    Download API", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4cf3893d9090895e23a637f7f4f085bda6d955b"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODg4NDk1OnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/components/APIDetailsTopMenu.jsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDoyMzoxMlrOFkHFVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDoyMzoxMlrOFkHFVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwOTEwOQ==", "bodyText": "typo: downloding -> downloading\nAlso, we need to use internationalization.\nCheck GeneralConfiguration.jsx.\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.error',\n                        defaultMessage: 'Something went wrong while adding the certificate.',\n                    }));\n\ninclude intl in props,\nuse injectIntl like below:\nexport default injectIntl(withStyles(styles)(GeneralConfiguration));", "url": "https://github.com/wso2/carbon-apimgt/pull/8132#discussion_r373409109", "createdAt": "2020-01-31T10:23:12Z", "author": {"login": "malinthaprasan"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Apis/Details/components/APIDetailsTopMenu.jsx", "diffHunk": "@@ -59,13 +66,51 @@ const styles = (theme) => ({\n         textOverflow: 'ellipsis',\n         whiteSpace: 'nowrap',\n     },\n+    downloadApi: {\n+        display: 'flex',\n+        flexDirection: 'column',\n+        textAlign: 'center',\n+        justifyContent: 'center',\n+        cursor: 'pointer',\n+        height: 70,\n+        color: theme.palette.getContrastText(theme.palette.background.paper),\n+    },\n+    downloadApiFlex: {\n+        display: 'flex',\n+        flexDirection: 'column',\n+    },\n });\n \n+\n const APIDetailsTopMenu = (props) => {\n     const {\n         classes, theme, api, isAPIProduct, imageUpdate,\n     } = props;\n     const isVisibleInStore = ['PROTOTYPED', 'PUBLISHED'].includes(api.lifeCycleStatus);\n+    /**\n+ * The component for advanced endpoint configurations.\n+ * @param {string} name The name of the\n+ * @param {string} version Version of the API\n+ * @param {string} provider Provider of the API\n+ * @param {string} format Weather to recive files in YALM of JSON format\n+ * @returns {zip} Zpi file containing the API directory.\n+ */\n+    function exportAPI() {\n+        const restApi = new API();\n+        return restApi.exportApi(api.id).then((zipFile) => {\n+            return Utils.forceDownload(zipFile);\n+        }).catch((error) => {\n+            if (error.response) {\n+                Alert.error(error.response.body.description);\n+            } else {\n+                const message = 'Something went wrong while downloding the API';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4cf3893d9090895e23a637f7f4f085bda6d955b"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2837, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}