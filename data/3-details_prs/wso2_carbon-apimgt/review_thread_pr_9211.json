{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwMzYwNjI1", "number": 9211, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTowMjo1M1rOEaTjSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwNjo0NDoyMVrOFLKaOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDE4NzYxOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTowMjo1M1rOHDptaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNToyOTo0OVrOHDqscQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU5MTE0NQ==", "bodyText": "Lets use try with resources statement for creating Connection, PreparedStatement and ResultSet objects so that they will be auto closed on exit, without the need to manage them manually.", "url": "https://github.com/wso2/carbon-apimgt/pull/9211#discussion_r473591145", "createdAt": "2020-08-20T05:02:53Z", "author": {"login": "uvindra"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -10517,49 +10517,118 @@ private void addAPIPolicy(APIPolicy policy, Connection conn) throws SQLException\n     /**\n      * Update a API level throttling policy to database.\n      * <p>\n-     * policy will be inserted with that policy Id.\n+     * If condition group already exists for the policy, that condition Group will be deleted and condition Group will\n+     * be inserted to the database with old POLICY_ID.\n      * </p>\n      *\n      * @param policy policy object defining the throttle policy\n-     * @throws SQLException\n+     * @throws APIManagementException\n      */\n-    private void updateAPIPolicy(APIPolicy policy, Connection conn) throws SQLException {\n-        ResultSet resultSet = null;\n-        PreparedStatement policyStatement = null;\n-        String addQuery = SQLConstants.ThrottleSQLConstants.INSERT_API_POLICY_WITH_ID_SQL;\n-        int policyId = policy.getPolicyId();\n-\n+    public APIPolicy updateAPIPolicy(APIPolicy policy) throws APIManagementException {\n+        Connection connection = null;\n+        PreparedStatement updateStatement = null;\n+        PreparedStatement deleteStatement = null ;\n+        PreparedStatement selectStatement = null;\n+        String updateQuery;\n+        int policyId = 0;\n         try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "527d760a98cb02cd90164e39397df5bd0996a44c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYwNzI4MQ==", "bodyText": "Fixed cea946a", "url": "https://github.com/wso2/carbon-apimgt/pull/9211#discussion_r473607281", "createdAt": "2020-08-20T05:29:49Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -10517,49 +10517,118 @@ private void addAPIPolicy(APIPolicy policy, Connection conn) throws SQLException\n     /**\n      * Update a API level throttling policy to database.\n      * <p>\n-     * policy will be inserted with that policy Id.\n+     * If condition group already exists for the policy, that condition Group will be deleted and condition Group will\n+     * be inserted to the database with old POLICY_ID.\n      * </p>\n      *\n      * @param policy policy object defining the throttle policy\n-     * @throws SQLException\n+     * @throws APIManagementException\n      */\n-    private void updateAPIPolicy(APIPolicy policy, Connection conn) throws SQLException {\n-        ResultSet resultSet = null;\n-        PreparedStatement policyStatement = null;\n-        String addQuery = SQLConstants.ThrottleSQLConstants.INSERT_API_POLICY_WITH_ID_SQL;\n-        int policyId = policy.getPolicyId();\n-\n+    public APIPolicy updateAPIPolicy(APIPolicy policy) throws APIManagementException {\n+        Connection connection = null;\n+        PreparedStatement updateStatement = null;\n+        PreparedStatement deleteStatement = null ;\n+        PreparedStatement selectStatement = null;\n+        String updateQuery;\n+        int policyId = 0;\n         try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU5MTE0NQ=="}, "originalCommit": {"oid": "527d760a98cb02cd90164e39397df5bd0996a44c"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDU4Nzk5OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjo0MTozNVrOHDtogA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjo0OTo1M1rOHDuBFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY1NTQyNA==", "bodyText": "move Prepared statements to the places using with try resource", "url": "https://github.com/wso2/carbon-apimgt/pull/9211#discussion_r473655424", "createdAt": "2020-08-20T06:41:35Z", "author": {"login": "tharindu1st"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -10517,49 +10517,105 @@ private void addAPIPolicy(APIPolicy policy, Connection conn) throws SQLException\n     /**\n      * Update a API level throttling policy to database.\n      * <p>\n-     * policy will be inserted with that policy Id.\n+     * If condition group already exists for the policy, that condition Group will be deleted and condition Group will\n+     * be inserted to the database with old POLICY_ID.\n      * </p>\n      *\n      * @param policy policy object defining the throttle policy\n-     * @throws SQLException\n+     * @throws APIManagementException\n      */\n-    private void updateAPIPolicy(APIPolicy policy, Connection conn) throws SQLException {\n-        ResultSet resultSet = null;\n-        PreparedStatement policyStatement = null;\n-        String addQuery = SQLConstants.ThrottleSQLConstants.INSERT_API_POLICY_WITH_ID_SQL;\n-        int policyId = policy.getPolicyId();\n+    public APIPolicy updateAPIPolicy(APIPolicy policy) throws APIManagementException {\n+        PreparedStatement updateStatement = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e37cabc6b88b47586e44dd06001f42a8a9fac298"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY2MTcxOA==", "bodyText": "ac69c0f", "url": "https://github.com/wso2/carbon-apimgt/pull/9211#discussion_r473661718", "createdAt": "2020-08-20T06:49:53Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -10517,49 +10517,105 @@ private void addAPIPolicy(APIPolicy policy, Connection conn) throws SQLException\n     /**\n      * Update a API level throttling policy to database.\n      * <p>\n-     * policy will be inserted with that policy Id.\n+     * If condition group already exists for the policy, that condition Group will be deleted and condition Group will\n+     * be inserted to the database with old POLICY_ID.\n      * </p>\n      *\n      * @param policy policy object defining the throttle policy\n-     * @throws SQLException\n+     * @throws APIManagementException\n      */\n-    private void updateAPIPolicy(APIPolicy policy, Connection conn) throws SQLException {\n-        ResultSet resultSet = null;\n-        PreparedStatement policyStatement = null;\n-        String addQuery = SQLConstants.ThrottleSQLConstants.INSERT_API_POLICY_WITH_ID_SQL;\n-        int policyId = policy.getPolicyId();\n+    public APIPolicy updateAPIPolicy(APIPolicy policy) throws APIManagementException {\n+        PreparedStatement updateStatement = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY1NTQyNA=="}, "originalCommit": {"oid": "e37cabc6b88b47586e44dd06001f42a8a9fac298"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjQ4NDUzOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwNjo0MDoyMVrOIOLvcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwNzoyNTowN1rOIOMlWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc0MzM0NQ==", "bodyText": "Shall we fix the spaces here?\nselectStatement .setString(", "url": "https://github.com/wso2/carbon-apimgt/pull/9211#discussion_r551743345", "createdAt": "2021-01-05T06:40:21Z", "author": {"login": "tharikaGitHub"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -10517,49 +10517,104 @@ private void addAPIPolicy(APIPolicy policy, Connection conn) throws SQLException\n     /**\n      * Update a API level throttling policy to database.\n      * <p>\n-     * policy will be inserted with that policy Id.\n+     * If condition group already exists for the policy, that condition Group will be deleted and condition Group will\n+     * be inserted to the database with old POLICY_ID.\n      * </p>\n      *\n      * @param policy policy object defining the throttle policy\n-     * @throws SQLException\n+     * @throws APIManagementException\n      */\n-    private void updateAPIPolicy(APIPolicy policy, Connection conn) throws SQLException {\n-        ResultSet resultSet = null;\n-        PreparedStatement policyStatement = null;\n-        String addQuery = SQLConstants.ThrottleSQLConstants.INSERT_API_POLICY_WITH_ID_SQL;\n-        int policyId = policy.getPolicyId();\n-\n-        try {\n-            Statement st = conn.createStatement();\n-            String driverName = conn.getMetaData().getDriverName();\n-            if (driverName.contains(\"MS SQL\") || driverName.contains(\"Microsoft\")) {\n-                st.executeUpdate(\"SET IDENTITY_INSERT AM_API_THROTTLE_POLICY ON\");\n+    public APIPolicy updateAPIPolicy(APIPolicy policy) throws APIManagementException {\n+        String updateQuery;\n+        int policyId = 0;\n+        String selectQuery;\n+        if (policy != null) {\n+            if (!StringUtils.isBlank(policy.getPolicyName()) && policy.getTenantId() != -1) {\n+                selectQuery = SQLConstants.ThrottleSQLConstants.GET_API_POLICY_ID_SQL;\n+                updateQuery = SQLConstants.ThrottleSQLConstants.UPDATE_API_POLICY_SQL;\n+            } else if (!StringUtils.isBlank(policy.getUUID())) {\n+                selectQuery = SQLConstants.ThrottleSQLConstants.GET_API_POLICY_ID_BY_UUID_SQL;\n+                updateQuery = ThrottleSQLConstants.UPDATE_API_POLICY_BY_UUID_SQL;\n+            } else {\n+                String errorMsg = \"Policy object doesn't contain mandatory parameters. At least UUID or Name,Tenant Id\"\n+                                + \" should be provided. Name: \" + policy.getPolicyName()\n+                                + \", Tenant Id: \" + policy.getTenantId() + \", UUID: \" + policy.getUUID();\n+                log.error(errorMsg);\n+                throw new APIManagementException(errorMsg);\n             }\n-            String dbProductName = conn.getMetaData().getDatabaseProductName();\n-            policyStatement = conn.prepareStatement(addQuery,\n-                    new String[]{DBUtils.getConvertedAutoGeneratedColumnName(dbProductName, \"POLICY_ID\")});\n-            setCommonParametersForPolicy(policyStatement, policy);\n-            policyStatement.setString(12, policy.getUserLevel());\n-            policyStatement.setBoolean(10, true);\n-            policyStatement.setInt(13, policyId);\n-            int updatedRawCount = policyStatement.executeUpdate();\n+        } else {\n+            String errorMsg = \"Provided Policy to update is null\";\n+            log.error(errorMsg);\n+            throw new APIManagementException(errorMsg);\n+        }\n \n-            if (driverName.contains(\"MS SQL\") || driverName.contains(\"Microsoft\")) {\n-                st.executeUpdate(\"SET IDENTITY_INSERT AM_API_THROTTLE_POLICY OFF\");\n-            }\n+        try (Connection connection = APIMgtDBUtil.getConnection()) {\n+            connection.setAutoCommit(false);\n+            try ( PreparedStatement selectStatement = connection.prepareStatement(selectQuery);\n+                  PreparedStatement deleteStatement = connection.prepareStatement(SQLConstants\n+                          .ThrottleSQLConstants.DELETE_CONDITION_GROUP_SQL);\n+                  PreparedStatement updateStatement = connection.prepareStatement(updateQuery)) {\n+                if (selectQuery.equals(SQLConstants.ThrottleSQLConstants.GET_API_POLICY_ID_SQL)) {\n+                    selectStatement .setString(1, policy.getPolicyName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9798d20e92d815ceb26391aff89a027114313fb2"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1NzE0NA==", "bodyText": "Fixed 2809e66", "url": "https://github.com/wso2/carbon-apimgt/pull/9211#discussion_r551757144", "createdAt": "2021-01-05T07:25:07Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -10517,49 +10517,104 @@ private void addAPIPolicy(APIPolicy policy, Connection conn) throws SQLException\n     /**\n      * Update a API level throttling policy to database.\n      * <p>\n-     * policy will be inserted with that policy Id.\n+     * If condition group already exists for the policy, that condition Group will be deleted and condition Group will\n+     * be inserted to the database with old POLICY_ID.\n      * </p>\n      *\n      * @param policy policy object defining the throttle policy\n-     * @throws SQLException\n+     * @throws APIManagementException\n      */\n-    private void updateAPIPolicy(APIPolicy policy, Connection conn) throws SQLException {\n-        ResultSet resultSet = null;\n-        PreparedStatement policyStatement = null;\n-        String addQuery = SQLConstants.ThrottleSQLConstants.INSERT_API_POLICY_WITH_ID_SQL;\n-        int policyId = policy.getPolicyId();\n-\n-        try {\n-            Statement st = conn.createStatement();\n-            String driverName = conn.getMetaData().getDriverName();\n-            if (driverName.contains(\"MS SQL\") || driverName.contains(\"Microsoft\")) {\n-                st.executeUpdate(\"SET IDENTITY_INSERT AM_API_THROTTLE_POLICY ON\");\n+    public APIPolicy updateAPIPolicy(APIPolicy policy) throws APIManagementException {\n+        String updateQuery;\n+        int policyId = 0;\n+        String selectQuery;\n+        if (policy != null) {\n+            if (!StringUtils.isBlank(policy.getPolicyName()) && policy.getTenantId() != -1) {\n+                selectQuery = SQLConstants.ThrottleSQLConstants.GET_API_POLICY_ID_SQL;\n+                updateQuery = SQLConstants.ThrottleSQLConstants.UPDATE_API_POLICY_SQL;\n+            } else if (!StringUtils.isBlank(policy.getUUID())) {\n+                selectQuery = SQLConstants.ThrottleSQLConstants.GET_API_POLICY_ID_BY_UUID_SQL;\n+                updateQuery = ThrottleSQLConstants.UPDATE_API_POLICY_BY_UUID_SQL;\n+            } else {\n+                String errorMsg = \"Policy object doesn't contain mandatory parameters. At least UUID or Name,Tenant Id\"\n+                                + \" should be provided. Name: \" + policy.getPolicyName()\n+                                + \", Tenant Id: \" + policy.getTenantId() + \", UUID: \" + policy.getUUID();\n+                log.error(errorMsg);\n+                throw new APIManagementException(errorMsg);\n             }\n-            String dbProductName = conn.getMetaData().getDatabaseProductName();\n-            policyStatement = conn.prepareStatement(addQuery,\n-                    new String[]{DBUtils.getConvertedAutoGeneratedColumnName(dbProductName, \"POLICY_ID\")});\n-            setCommonParametersForPolicy(policyStatement, policy);\n-            policyStatement.setString(12, policy.getUserLevel());\n-            policyStatement.setBoolean(10, true);\n-            policyStatement.setInt(13, policyId);\n-            int updatedRawCount = policyStatement.executeUpdate();\n+        } else {\n+            String errorMsg = \"Provided Policy to update is null\";\n+            log.error(errorMsg);\n+            throw new APIManagementException(errorMsg);\n+        }\n \n-            if (driverName.contains(\"MS SQL\") || driverName.contains(\"Microsoft\")) {\n-                st.executeUpdate(\"SET IDENTITY_INSERT AM_API_THROTTLE_POLICY OFF\");\n-            }\n+        try (Connection connection = APIMgtDBUtil.getConnection()) {\n+            connection.setAutoCommit(false);\n+            try ( PreparedStatement selectStatement = connection.prepareStatement(selectQuery);\n+                  PreparedStatement deleteStatement = connection.prepareStatement(SQLConstants\n+                          .ThrottleSQLConstants.DELETE_CONDITION_GROUP_SQL);\n+                  PreparedStatement updateStatement = connection.prepareStatement(updateQuery)) {\n+                if (selectQuery.equals(SQLConstants.ThrottleSQLConstants.GET_API_POLICY_ID_SQL)) {\n+                    selectStatement .setString(1, policy.getPolicyName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc0MzM0NQ=="}, "originalCommit": {"oid": "9798d20e92d815ceb26391aff89a027114313fb2"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjQ4ODkwOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/constants/SQLConstants.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwNjo0Mjo0NVrOIOLyAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwNzoyNToxOFrOIOMlmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc0NDAwMg==", "bodyText": "These string concatenations are unnecessary. We can create a single string out of this.", "url": "https://github.com/wso2/carbon-apimgt/pull/9211#discussion_r551744002", "createdAt": "2021-01-05T06:42:45Z", "author": {"login": "tharikaGitHub"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/constants/SQLConstants.java", "diffHunk": "@@ -3183,9 +3183,26 @@\n \t\t\t\t+ \" DEFAULT_QUOTA, DEFAULT_QUOTA_UNIT, DEFAULT_UNIT_TIME, DEFAULT_TIME_UNIT, \\n\"\n \t\t\t\t+ \" IS_DEPLOYED, UUID, APPLICABLE_LEVEL, POLICY_ID) \\n\" + \"VALUES (?,?,?,?,?, ?,?,?,?,? ,?,?,?)\";\n \n-\t\tpublic static final String UPDATE_POLICY_SQL = \"UPDATE AM_API_THROTTLE_POLICY \" + \"SET \" + \"NAME = ?,\" + \"DISPLAY_NAME = ?,\"\n-\t\t\t\t+ \" TYPE = ?,\" + \"TENANT_ID = ?,\" + \"APPLICABLE_LEVEL = ? ,\" + \"DESCRIPTION = ? ,\"\n-\t\t\t\t+ \" DEFAULT_QUOTA_TYPE = ? ,\" + \"DEFAULT_QUOTA = ?,\" + \"DEFAULT_UNIT_TIME = ? \" + \" WHERE POLICY_ID = ?\";\n+\n+        public static final String UPDATE_API_POLICY_BY_UUID_SQL = \"UPDATE AM_API_THROTTLE_POLICY \" + \"SET \"\n+                + \"DISPLAY_NAME = ?,\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9798d20e92d815ceb26391aff89a027114313fb2"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1NzIxMQ==", "bodyText": "Fixed 2809e66", "url": "https://github.com/wso2/carbon-apimgt/pull/9211#discussion_r551757211", "createdAt": "2021-01-05T07:25:18Z", "author": {"login": "Sarangan0219"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/constants/SQLConstants.java", "diffHunk": "@@ -3183,9 +3183,26 @@\n \t\t\t\t+ \" DEFAULT_QUOTA, DEFAULT_QUOTA_UNIT, DEFAULT_UNIT_TIME, DEFAULT_TIME_UNIT, \\n\"\n \t\t\t\t+ \" IS_DEPLOYED, UUID, APPLICABLE_LEVEL, POLICY_ID) \\n\" + \"VALUES (?,?,?,?,?, ?,?,?,?,? ,?,?,?)\";\n \n-\t\tpublic static final String UPDATE_POLICY_SQL = \"UPDATE AM_API_THROTTLE_POLICY \" + \"SET \" + \"NAME = ?,\" + \"DISPLAY_NAME = ?,\"\n-\t\t\t\t+ \" TYPE = ?,\" + \"TENANT_ID = ?,\" + \"APPLICABLE_LEVEL = ? ,\" + \"DESCRIPTION = ? ,\"\n-\t\t\t\t+ \" DEFAULT_QUOTA_TYPE = ? ,\" + \"DEFAULT_QUOTA = ?,\" + \"DEFAULT_UNIT_TIME = ? \" + \" WHERE POLICY_ID = ?\";\n+\n+        public static final String UPDATE_API_POLICY_BY_UUID_SQL = \"UPDATE AM_API_THROTTLE_POLICY \" + \"SET \"\n+                + \"DISPLAY_NAME = ?,\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc0NDAwMg=="}, "originalCommit": {"oid": "9798d20e92d815ceb26391aff89a027114313fb2"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjQ5MjEwOnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/Throttling/Advanced/AddEdit.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwNjo0NDoyMVrOIOLz2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwNzoyNToyM1rOIOMlsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc0NDQ3Mw==", "bodyText": "The case check for 'description' field can be removed entirely.", "url": "https://github.com/wso2/carbon-apimgt/pull/9211#discussion_r551744473", "createdAt": "2021-01-05T06:44:21Z", "author": {"login": "tharikaGitHub"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/Throttling/Advanced/AddEdit.jsx", "diffHunk": "@@ -163,6 +163,7 @@ function AddEdit(props) {\n                 }\n                 break;\n             case 'description':\n+                break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9798d20e92d815ceb26391aff89a027114313fb2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1NzIzNA==", "bodyText": "Fixed 2809e66", "url": "https://github.com/wso2/carbon-apimgt/pull/9211#discussion_r551757234", "createdAt": "2021-01-05T07:25:23Z", "author": {"login": "Sarangan0219"}, "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/Throttling/Advanced/AddEdit.jsx", "diffHunk": "@@ -163,6 +163,7 @@ function AddEdit(props) {\n                 }\n                 break;\n             case 'description':\n+                break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc0NDQ3Mw=="}, "originalCommit": {"oid": "9798d20e92d815ceb26391aff89a027114313fb2"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3089, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}