{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzOTYzNTAz", "number": 8083, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNTozMToxNFrODYt_Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNjowNTozN1rODYuOlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MjQ1ODgyOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/common/APIMgtLatencySynapseHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNTozMToxNFrOFevOQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNTozMToxNFrOFevOQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc3NTI5OQ==", "bodyText": "While this will work in most of the cases, wouldn't it cause a problem when an OSGI module unloads/re-loads? Can we trigger the action of building tracer from setTracingService method on ServiceComponent?", "url": "https://github.com/wso2/carbon-apimgt/pull/8083#discussion_r367775299", "createdAt": "2020-01-17T05:31:14Z", "author": {"login": "jaadds"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/common/APIMgtLatencySynapseHandler.java", "diffHunk": "@@ -34,14 +34,18 @@\n \n     private TracingTracer tracer;\n \n-    public APIMgtLatencySynapseHandler() {\n-        tracer = ServiceReferenceHolder.getInstance().getTracingService()\n-                .buildTracer(APIMgtGatewayConstants.SERVICE_NAME);\n-    }\n-\n     @Override\n     public boolean handleRequestInFlow(MessageContext messageContext) {\n+\n         if (Util.tracingEnabled()) {\n+            if (tracer == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01b05701f25fe1553946fa7fff0e6754c68644dc"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MjQ5NTMxOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/security/jwt/JWTValidator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNjowMzowMFrOFevkZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNzo1Mzo0MFrOFexHQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc4MDk2Ng==", "bodyText": "If GatewayTokenCaching is enabled, do we proceed with generating the endUserToken without checking whether it is enabled or not?", "url": "https://github.com/wso2/carbon-apimgt/pull/8083#discussion_r367780966", "createdAt": "2020-01-17T06:03:00Z", "author": {"login": "jaadds"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/security/jwt/JWTValidator.java", "diffHunk": "@@ -261,6 +282,33 @@ else if (RevokedJWTDataHolder.isJWTTokenSignatureExistsInRevokedMap(tokenSignatu\n                 \"Invalid JWT token. Signature verification failed.\");\n     }\n \n+    private String generateAndRetrieveJWTToken(String tokenSignature, JWTInfoDto jwtInfoDto)\n+            throws APISecurityException {\n+        String endUserToken;\n+        if (isGatewayTokenCacheEnabled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01b05701f25fe1553946fa7fff0e6754c68644dc"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgwNjI3Mg==", "bodyText": "@jaadds  at the method usage we check before it.", "url": "https://github.com/wso2/carbon-apimgt/pull/8083#discussion_r367806272", "createdAt": "2020-01-17T07:53:40Z", "author": {"login": "tharindu1st"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/security/jwt/JWTValidator.java", "diffHunk": "@@ -261,6 +282,33 @@ else if (RevokedJWTDataHolder.isJWTTokenSignatureExistsInRevokedMap(tokenSignatu\n                 \"Invalid JWT token. Signature verification failed.\");\n     }\n \n+    private String generateAndRetrieveJWTToken(String tokenSignature, JWTInfoDto jwtInfoDto)\n+            throws APISecurityException {\n+        String endUserToken;\n+        if (isGatewayTokenCacheEnabled) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc4MDk2Ng=="}, "originalCommit": {"oid": "01b05701f25fe1553946fa7fff0e6754c68644dc"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MjQ5ODEzOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/security/jwt/JWTValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNjowNTozN1rOFevmMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNjowNTozN1rOFevmMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc4MTQyNg==", "bodyText": "How about giving a specific message indicating that the error occurred while generating the JWT?", "url": "https://github.com/wso2/carbon-apimgt/pull/8083#discussion_r367781426", "createdAt": "2020-01-17T06:05:37Z", "author": {"login": "jaadds"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/security/jwt/JWTValidator.java", "diffHunk": "@@ -261,6 +282,33 @@ else if (RevokedJWTDataHolder.isJWTTokenSignatureExistsInRevokedMap(tokenSignatu\n                 \"Invalid JWT token. Signature verification failed.\");\n     }\n \n+    private String generateAndRetrieveJWTToken(String tokenSignature, JWTInfoDto jwtInfoDto)\n+            throws APISecurityException {\n+        String endUserToken;\n+        if (isGatewayTokenCacheEnabled) {\n+            Object token = getGatewayJWTTokenCache().get(tokenSignature);\n+            if (token != null){\n+                endUserToken = (String) token;\n+            }else{\n+                try {\n+                    endUserToken = apiMgtGatewayJWTGenerator.generateToken(jwtInfoDto);\n+                    getGatewayJWTTokenCache().put(tokenSignature,endUserToken);\n+                } catch (APIManagementException e) {\n+                    throw new APISecurityException(APISecurityConstants.API_AUTH_GENERAL_ERROR,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01b05701f25fe1553946fa7fff0e6754c68644dc"}, "originalPosition": 108}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2907, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}