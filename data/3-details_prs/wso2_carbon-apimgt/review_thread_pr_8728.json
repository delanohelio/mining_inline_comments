{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMDMyMjU5", "number": 8728, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjoxODo0MlrOEEqFhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjozNDozNVrOEEqY2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzE5MzAwOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjoxODo0MlrOGian9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjo1OToxN1rOGib8fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0MDk4MA==", "bodyText": "change naming in description", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438740980", "createdAt": "2020-06-11T12:18:42Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -10825,29 +10825,49 @@ public static KeyManagerConnectorConfiguration getKeyManagerConnectorConfigurati\n \n     /**\n      * Extract Endpoint Registry Entry information\n-     * @param endpointConfig\n-     * @return Map\n+     *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b825f9bfae0835aeaf55f63be4f2add86705b61d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2MjYyMg==", "bodyText": "Fixed in 216e08f", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438762622", "createdAt": "2020-06-11T12:59:17Z", "author": {"login": "ChamodDamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -10825,29 +10825,49 @@ public static KeyManagerConnectorConfiguration getKeyManagerConnectorConfigurati\n \n     /**\n      * Extract Endpoint Registry Entry information\n-     * @param endpointConfig\n-     * @return Map\n+     *", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0MDk4MA=="}, "originalCommit": {"oid": "b825f9bfae0835aeaf55f63be4f2add86705b61d"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzIwOTM4OnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.core.feature/src/main/resources/sql/h2.sql", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjoyNDowOFrOGiaycQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjo1OTo1MlrOGib9yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0MzY2NQ==", "bodyText": "create to uppercase?", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438743665", "createdAt": "2020-06-11T12:24:08Z", "author": {"login": "fazlan-nazeem"}, "path": "features/apimgt/org.wso2.carbon.apimgt.core.feature/src/main/resources/sql/h2.sql", "diffHunk": "@@ -1876,11 +1876,12 @@ CREATE TABLE IF NOT EXISTS SERVICE_CATALOG_ENTRY (\n   FOREIGN KEY (CATALOG_ID) REFERENCES SERVICE_CATALOG (ID) ON DELETE CASCADE\n );\n \n-CREATE TABLE IF NOT EXISTS AM_API_ENDPOINT_REG_ENTRY_MAPPING (\n+create TABLE IF NOT EXISTS AM_API_SERVICE_CATALOG_ENTRY_MAPPING (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b825f9bfae0835aeaf55f63be4f2add86705b61d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2Mjk1Mg==", "bodyText": "Fixed in 216e08f", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438762952", "createdAt": "2020-06-11T12:59:52Z", "author": {"login": "ChamodDamitha"}, "path": "features/apimgt/org.wso2.carbon.apimgt.core.feature/src/main/resources/sql/h2.sql", "diffHunk": "@@ -1876,11 +1876,12 @@ CREATE TABLE IF NOT EXISTS SERVICE_CATALOG_ENTRY (\n   FOREIGN KEY (CATALOG_ID) REFERENCES SERVICE_CATALOG (ID) ON DELETE CASCADE\n );\n \n-CREATE TABLE IF NOT EXISTS AM_API_ENDPOINT_REG_ENTRY_MAPPING (\n+create TABLE IF NOT EXISTS AM_API_SERVICE_CATALOG_ENTRY_MAPPING (", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0MzY2NQ=="}, "originalCommit": {"oid": "b825f9bfae0835aeaf55f63be4f2add86705b61d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzIyMTEwOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/publisher/v1/impl/ApisApiServiceImpl.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjoyNzo0MlrOGia5lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjo1OTo1N1rOGib-AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0NTQ5Mg==", "bodyText": "since \"validCatalogEndpoints\" is used repetitively, shall we add it to a constant field?", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438745492", "createdAt": "2020-06-11T12:27:42Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/publisher/v1/impl/ApisApiServiceImpl.java", "diffHunk": "@@ -4319,21 +4299,64 @@ public static ApiEndpointValidationResponseDTO sendHttpHEADRequest(String urlVal\n         return apiEndpointValidationResponseDTO;\n     }\n \n-    private boolean validateServiceCatalogEntries(LinkedHashMap endpointConfig) {\n-        Object productionCatalogEntry = null;\n-        Object sandboxCatalogEntry = null;\n-        LinkedHashMap productionEps = (LinkedHashMap) endpointConfig.get(\"production_endpoints\");\n-        LinkedHashMap sandboxEps = (LinkedHashMap) endpointConfig.get(\"sandbox_endpoints\");\n-        if (productionEps == null && sandboxEps == null) {\n+    private void validateServiceCatalogEntries(LinkedHashMap endpointConfig) {\n+\n+        Map<String, Boolean> productionEndpointStatus =\n+                validateServiceCatalogEndpoint(endpointConfig, APIConstants.API_DATA_PRODUCTION_ENDPOINTS);\n+        Map<String, Boolean> sandboxEndpointStatus =\n+                validateServiceCatalogEndpoint(endpointConfig, APIConstants.API_DATA_SANDBOX_ENDPOINTS);\n+        Map<String, Boolean> productionFailoverStatus =\n+                validateServiceCatalogEndpoint(endpointConfig, APIConstants.ENDPOINT_PRODUCTION_FAILOVERS);\n+        Map<String, Boolean> sandboxFailoverStatus =\n+                validateServiceCatalogEndpoint(endpointConfig, APIConstants.ENDPOINT_SANDBOX_FAILOVERS);\n+\n+        if (!productionEndpointStatus.get(\"hasEndpoints\") && !sandboxEndpointStatus.get(\"hasEndpoints\")) {\n             RestApiUtil.handleBadRequest(\"At least one endpoint from Production Endpoint or \" +\n                     \"Sandbox Endpoint must be defined.\", log);\n         }\n-        if (productionEps != null) {\n-            productionCatalogEntry = productionEps.get(\"id\");\n+        if (!(productionEndpointStatus.get(\"validCatalogEndpoints\") &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b825f9bfae0835aeaf55f63be4f2add86705b61d"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0NjAzOA==", "bodyText": "inside the method?", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438746038", "createdAt": "2020-06-11T12:28:51Z", "author": {"login": "ChamodDamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/publisher/v1/impl/ApisApiServiceImpl.java", "diffHunk": "@@ -4319,21 +4299,64 @@ public static ApiEndpointValidationResponseDTO sendHttpHEADRequest(String urlVal\n         return apiEndpointValidationResponseDTO;\n     }\n \n-    private boolean validateServiceCatalogEntries(LinkedHashMap endpointConfig) {\n-        Object productionCatalogEntry = null;\n-        Object sandboxCatalogEntry = null;\n-        LinkedHashMap productionEps = (LinkedHashMap) endpointConfig.get(\"production_endpoints\");\n-        LinkedHashMap sandboxEps = (LinkedHashMap) endpointConfig.get(\"sandbox_endpoints\");\n-        if (productionEps == null && sandboxEps == null) {\n+    private void validateServiceCatalogEntries(LinkedHashMap endpointConfig) {\n+\n+        Map<String, Boolean> productionEndpointStatus =\n+                validateServiceCatalogEndpoint(endpointConfig, APIConstants.API_DATA_PRODUCTION_ENDPOINTS);\n+        Map<String, Boolean> sandboxEndpointStatus =\n+                validateServiceCatalogEndpoint(endpointConfig, APIConstants.API_DATA_SANDBOX_ENDPOINTS);\n+        Map<String, Boolean> productionFailoverStatus =\n+                validateServiceCatalogEndpoint(endpointConfig, APIConstants.ENDPOINT_PRODUCTION_FAILOVERS);\n+        Map<String, Boolean> sandboxFailoverStatus =\n+                validateServiceCatalogEndpoint(endpointConfig, APIConstants.ENDPOINT_SANDBOX_FAILOVERS);\n+\n+        if (!productionEndpointStatus.get(\"hasEndpoints\") && !sandboxEndpointStatus.get(\"hasEndpoints\")) {\n             RestApiUtil.handleBadRequest(\"At least one endpoint from Production Endpoint or \" +\n                     \"Sandbox Endpoint must be defined.\", log);\n         }\n-        if (productionEps != null) {\n-            productionCatalogEntry = productionEps.get(\"id\");\n+        if (!(productionEndpointStatus.get(\"validCatalogEndpoints\") &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0NTQ5Mg=="}, "originalCommit": {"oid": "b825f9bfae0835aeaf55f63be4f2add86705b61d"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0NzcwNg==", "bodyText": "to a constant class", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438747706", "createdAt": "2020-06-11T12:32:17Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/publisher/v1/impl/ApisApiServiceImpl.java", "diffHunk": "@@ -4319,21 +4299,64 @@ public static ApiEndpointValidationResponseDTO sendHttpHEADRequest(String urlVal\n         return apiEndpointValidationResponseDTO;\n     }\n \n-    private boolean validateServiceCatalogEntries(LinkedHashMap endpointConfig) {\n-        Object productionCatalogEntry = null;\n-        Object sandboxCatalogEntry = null;\n-        LinkedHashMap productionEps = (LinkedHashMap) endpointConfig.get(\"production_endpoints\");\n-        LinkedHashMap sandboxEps = (LinkedHashMap) endpointConfig.get(\"sandbox_endpoints\");\n-        if (productionEps == null && sandboxEps == null) {\n+    private void validateServiceCatalogEntries(LinkedHashMap endpointConfig) {\n+\n+        Map<String, Boolean> productionEndpointStatus =\n+                validateServiceCatalogEndpoint(endpointConfig, APIConstants.API_DATA_PRODUCTION_ENDPOINTS);\n+        Map<String, Boolean> sandboxEndpointStatus =\n+                validateServiceCatalogEndpoint(endpointConfig, APIConstants.API_DATA_SANDBOX_ENDPOINTS);\n+        Map<String, Boolean> productionFailoverStatus =\n+                validateServiceCatalogEndpoint(endpointConfig, APIConstants.ENDPOINT_PRODUCTION_FAILOVERS);\n+        Map<String, Boolean> sandboxFailoverStatus =\n+                validateServiceCatalogEndpoint(endpointConfig, APIConstants.ENDPOINT_SANDBOX_FAILOVERS);\n+\n+        if (!productionEndpointStatus.get(\"hasEndpoints\") && !sandboxEndpointStatus.get(\"hasEndpoints\")) {\n             RestApiUtil.handleBadRequest(\"At least one endpoint from Production Endpoint or \" +\n                     \"Sandbox Endpoint must be defined.\", log);\n         }\n-        if (productionEps != null) {\n-            productionCatalogEntry = productionEps.get(\"id\");\n+        if (!(productionEndpointStatus.get(\"validCatalogEndpoints\") &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0NTQ5Mg=="}, "originalCommit": {"oid": "b825f9bfae0835aeaf55f63be4f2add86705b61d"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2MzAwOA==", "bodyText": "Fixed in 216e08f", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438763008", "createdAt": "2020-06-11T12:59:57Z", "author": {"login": "ChamodDamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/publisher/v1/impl/ApisApiServiceImpl.java", "diffHunk": "@@ -4319,21 +4299,64 @@ public static ApiEndpointValidationResponseDTO sendHttpHEADRequest(String urlVal\n         return apiEndpointValidationResponseDTO;\n     }\n \n-    private boolean validateServiceCatalogEntries(LinkedHashMap endpointConfig) {\n-        Object productionCatalogEntry = null;\n-        Object sandboxCatalogEntry = null;\n-        LinkedHashMap productionEps = (LinkedHashMap) endpointConfig.get(\"production_endpoints\");\n-        LinkedHashMap sandboxEps = (LinkedHashMap) endpointConfig.get(\"sandbox_endpoints\");\n-        if (productionEps == null && sandboxEps == null) {\n+    private void validateServiceCatalogEntries(LinkedHashMap endpointConfig) {\n+\n+        Map<String, Boolean> productionEndpointStatus =\n+                validateServiceCatalogEndpoint(endpointConfig, APIConstants.API_DATA_PRODUCTION_ENDPOINTS);\n+        Map<String, Boolean> sandboxEndpointStatus =\n+                validateServiceCatalogEndpoint(endpointConfig, APIConstants.API_DATA_SANDBOX_ENDPOINTS);\n+        Map<String, Boolean> productionFailoverStatus =\n+                validateServiceCatalogEndpoint(endpointConfig, APIConstants.ENDPOINT_PRODUCTION_FAILOVERS);\n+        Map<String, Boolean> sandboxFailoverStatus =\n+                validateServiceCatalogEndpoint(endpointConfig, APIConstants.ENDPOINT_SANDBOX_FAILOVERS);\n+\n+        if (!productionEndpointStatus.get(\"hasEndpoints\") && !sandboxEndpointStatus.get(\"hasEndpoints\")) {\n             RestApiUtil.handleBadRequest(\"At least one endpoint from Production Endpoint or \" +\n                     \"Sandbox Endpoint must be defined.\", log);\n         }\n-        if (productionEps != null) {\n-            productionCatalogEntry = productionEps.get(\"id\");\n+        if (!(productionEndpointStatus.get(\"validCatalogEndpoints\") &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0NTQ5Mg=="}, "originalCommit": {"oid": "b825f9bfae0835aeaf55f63be4f2add86705b61d"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzIyOTI4OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjozMDozNVrOGia_Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzowMDowNFrOGib-OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0Njg4Nw==", "bodyText": "change variable naming here?", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438746887", "createdAt": "2020-06-11T12:30:35Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -881,9 +880,9 @@ private void addAPI(API api, int tenantId) throws APIManagementException {\n         int apiId = apiMgtDAO.addAPI(api, tenantId);\n         addLocalScopes(api.getId(), tenantId, api.getUriTemplates());\n         addURITemplates(apiId, api, tenantId);\n-        Map endpointRegistryEntries = APIUtil.extractEndpointRegistryEntries(api.getEndpointConfig());\n-        if (endpointRegistryEntries != null) {\n-            apiMgtDAO.addAPIRegistryEntryMappings(apiId, endpointRegistryEntries, null);\n+        HashSet<String> endpointRegistryEntries = APIUtil.extractEndpointRegistryEntries(api.getEndpointConfig());\n+        if (!endpointRegistryEntries.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b825f9bfae0835aeaf55f63be4f2add86705b61d"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2MzA2NA==", "bodyText": "Fixed in 216e08f", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438763064", "createdAt": "2020-06-11T13:00:04Z", "author": {"login": "ChamodDamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -881,9 +880,9 @@ private void addAPI(API api, int tenantId) throws APIManagementException {\n         int apiId = apiMgtDAO.addAPI(api, tenantId);\n         addLocalScopes(api.getId(), tenantId, api.getUriTemplates());\n         addURITemplates(apiId, api, tenantId);\n-        Map endpointRegistryEntries = APIUtil.extractEndpointRegistryEntries(api.getEndpointConfig());\n-        if (endpointRegistryEntries != null) {\n-            apiMgtDAO.addAPIRegistryEntryMappings(apiId, endpointRegistryEntries, null);\n+        HashSet<String> endpointRegistryEntries = APIUtil.extractEndpointRegistryEntries(api.getEndpointConfig());\n+        if (!endpointRegistryEntries.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0Njg4Nw=="}, "originalCommit": {"oid": "b825f9bfae0835aeaf55f63be4f2add86705b61d"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzI0MjUwOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjozNDozNVrOGibHJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzowMjowMlrOGicCkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0ODk2Ng==", "bodyText": "Update Javadocs, The set contains failover and sandbox endpoint Ids, right?", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438748966", "createdAt": "2020-06-11T12:34:35Z", "author": {"login": "vithu30"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -14928,28 +14928,30 @@ public void addAPIRegistryEntryMappings(int apiId, Map endpointRegistryEntries,\n     }\n \n     /**\n-     * @param apiId                   ID of the API created using the Endpoint Registry Entry\n-     * @param endpointRegistryEntries Map contains production and sandbox endpoint ID\n-     * @throws APIManagementException\n+     * @param apiId                   ID of the API created using the Service Catalog Entry\n+     * @param endpointRegistryEntries HashSet contains production and sandbox endpoint IDs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b825f9bfae0835aeaf55f63be4f2add86705b61d"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2MzI3NA==", "bodyText": "Fixed in 216e08f", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438763274", "createdAt": "2020-06-11T13:00:24Z", "author": {"login": "ChamodDamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -14928,28 +14928,30 @@ public void addAPIRegistryEntryMappings(int apiId, Map endpointRegistryEntries,\n     }\n \n     /**\n-     * @param apiId                   ID of the API created using the Endpoint Registry Entry\n-     * @param endpointRegistryEntries Map contains production and sandbox endpoint ID\n-     * @throws APIManagementException\n+     * @param apiId                   ID of the API created using the Service Catalog Entry\n+     * @param endpointRegistryEntries HashSet contains production and sandbox endpoint IDs", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0ODk2Ng=="}, "originalCommit": {"oid": "b825f9bfae0835aeaf55f63be4f2add86705b61d"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2NDE3OA==", "bodyText": "Set can contain production/sandbox IDs of Load-balanced/Failover/Normal endpoints", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438764178", "createdAt": "2020-06-11T13:02:02Z", "author": {"login": "ChamodDamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -14928,28 +14928,30 @@ public void addAPIRegistryEntryMappings(int apiId, Map endpointRegistryEntries,\n     }\n \n     /**\n-     * @param apiId                   ID of the API created using the Endpoint Registry Entry\n-     * @param endpointRegistryEntries Map contains production and sandbox endpoint ID\n-     * @throws APIManagementException\n+     * @param apiId                   ID of the API created using the Service Catalog Entry\n+     * @param endpointRegistryEntries HashSet contains production and sandbox endpoint IDs", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0ODk2Ng=="}, "originalCommit": {"oid": "b825f9bfae0835aeaf55f63be4f2add86705b61d"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3254, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}