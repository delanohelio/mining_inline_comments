{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxMzM3NTIz", "number": 9391, "title": "Add ISKM Reverse Proxy Support", "bodyText": "Purpose\nFront Porting wso2-support/carbon-apimgt#2274\nApproach\n\n\nA new configurations has been introduced for IS-KM Reverse Proxy which is disabled by default. To enable the support, the following should be added to the /repository/conf/deployment.toml\n[apim.auth_manager]\niskm_reverseproxy_enabled = true\n\n\nWhen this configurations is enabled, the code will check whether the API context is \"/authorize\", \"/commonauth\" or \"/oidc\" while status code is 302 and if so, modify the location header value by replacing the Key Manager host with the Gateway host.\n\n\nThis modification is done only if the location header contains \"/authenticationendpoint\", \"/oauth2/authorize\", \"/commonauth\", \"/logincontext\"or \"/oidc\".\n\n\nRelated PRs\n\nIS Related PRs\n\nwso2/carbon-identity-framework#3039\nwso2/identity-apps#1124\n\n\n3.1.0 PR\n\nwso2-support/carbon-apimgt#2274\n\n\n2.6.0 PR\n\nwso2-support/carbon-apimgt#2271\n\n\n\nTest Environment\n\nJDK 1.8.0_241\nUbuntu 20.04 LTS\n\nRelated Issue: wso2/product-apim#8758", "createdAt": "2020-11-16T03:49:47Z", "url": "https://github.com/wso2/carbon-apimgt/pull/9391", "merged": true, "mergeCommit": {"oid": "ba79f22f9da743e5e62ccbacd70a5c2c8ed459b5"}, "closed": true, "closedAt": "2020-11-17T05:20:51Z", "author": {"login": "hisanhunais"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdb0kNKAH2gAyNTIxMzM3NTIzOmI4NjgxNjdmNDJjN2ViMWM1ZDI1YWE4Y2U3NDAyMDg3ZDI3YmI3Zjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd4B6nBgFqTU4NTIwNzIzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b868167f42c7eb1c5d25aa8ce7402087d27bb7f9", "author": {"user": {"login": "hisanhunais", "name": null}}, "url": "https://github.com/wso2/carbon-apimgt/commit/b868167f42c7eb1c5d25aa8ce7402087d27bb7f9", "committedDate": "2020-11-12T15:47:48Z", "message": "Introduce ISKMReverseProxyEnabled property to api-manager.xml.j2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e76e35daa37c4844a1203e09afef8b7eda58e061", "author": {"user": {"login": "hisanhunais", "name": null}}, "url": "https://github.com/wso2/carbon-apimgt/commit/e76e35daa37c4844a1203e09afef8b7eda58e061", "committedDate": "2020-11-12T15:47:49Z", "message": "Add iskm reverse proxy support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMDIzNTIy", "url": "https://github.com/wso2/carbon-apimgt/pull/9391#pullrequestreview-532023522", "createdAt": "2020-11-17T05:02:54Z", "commit": {"oid": "e76e35daa37c4844a1203e09afef8b7eda58e061"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0OTUwNDQ0", "url": "https://github.com/wso2/carbon-apimgt/pull/9391#pullrequestreview-564950444", "createdAt": "2021-01-11T02:33:28Z", "commit": {"oid": "e76e35daa37c4844a1203e09afef8b7eda58e061"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQwMjozMzoyOVrOIQ-AaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQwMjozMzoyOVrOIQ-AaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDY2NDA0MQ==", "bodyText": "Shall we use StringUtils.isNotEmpty() here, instead of checking null and empty separately?", "url": "https://github.com/wso2/carbon-apimgt/pull/9391#discussion_r554664041", "createdAt": "2021-01-11T02:33:29Z", "author": {"login": "vithu30"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/common/SynapsePropertiesHandler.java", "diffHunk": "@@ -46,6 +55,13 @@ public boolean handleRequest(MessageContext messageContext) {\n         boolean isContentTypeNotSet = false;\n         if (headers != null) {\n             isContentTypeNotSet = headers.get(\"Content-Type\") == null || headers.get(\"Content-Type\").equals(\"\");\n+            if (headers.get(APIMgtGatewayConstants.HOST) != null || !(\"\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e76e35daa37c4844a1203e09afef8b7eda58e061"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0OTUzMjM4", "url": "https://github.com/wso2/carbon-apimgt/pull/9391#pullrequestreview-564953238", "createdAt": "2021-01-11T02:35:21Z", "commit": {"oid": "e76e35daa37c4844a1203e09afef8b7eda58e061"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQwMjozNToyMVrOIQ-Bvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQwMjozNToyMVrOIQ-Bvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDY2NDM4Mw==", "bodyText": "Shall we change it as constant.equals(variable) instead of variable.equals(constant)?", "url": "https://github.com/wso2/carbon-apimgt/pull/9391#discussion_r554664383", "createdAt": "2021-01-11T02:35:21Z", "author": {"login": "vithu30"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/common/SynapsePropertiesHandler.java", "diffHunk": "@@ -61,6 +77,62 @@ public boolean handleRequest(MessageContext messageContext) {\n     }\n \n     public boolean handleResponse(MessageContext messageContext) {\n+        if (config == null) {\n+            // Retrieve the ISKMReverseProxyEnabled property value from api manager configurations.\n+            // This value indicates whether the IS Authentication endpoint has been reverse proxied through\n+            // the Gateway.\n+            config = ServiceReferenceHolder.getInstance().getApiManagerConfigurationService()\n+                    .getAPIManagerConfiguration();\n+            iskmReverseProxyEnabled = Boolean.parseBoolean(\n+                    config.getFirstProperty(APIConstants.AUTH_MANAGER + APIConstants.IS_KM_REVERSE_PROXY_ENABLED));\n+        }\n+        // Modify location header only if ISKMReverseProxyEnabled property is set to true\n+        if (iskmReverseProxyEnabled) {\n+            // The logic is related if the API context is \"/authorize\", \"/commonauth\" or \"/oidc\" while status code is 302\n+            if (messageContext.getProperty(RESTConstants.REST_API_CONTEXT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e76e35daa37c4844a1203e09afef8b7eda58e061"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1MjA2ODI5", "url": "https://github.com/wso2/carbon-apimgt/pull/9391#pullrequestreview-585206829", "createdAt": "2021-02-08T07:09:58Z", "commit": {"oid": "e76e35daa37c4844a1203e09afef8b7eda58e061"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOFQwNzowOTo1OFrOIhVI5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOFQwNzowOTo1OFrOIhVI5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTgyMDI2MA==", "bodyText": "same here.swap the condition check. Eg: APIMgtGatewayConstants.COMMON_AUTH_CONTEXT.equals(messageContext\n.getProperty(RESTConstants.REST_API_CONTEXT))", "url": "https://github.com/wso2/carbon-apimgt/pull/9391#discussion_r571820260", "createdAt": "2021-02-08T07:09:58Z", "author": {"login": "HiranyaKavishani"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/common/SynapsePropertiesHandler.java", "diffHunk": "@@ -61,6 +77,62 @@ public boolean handleRequest(MessageContext messageContext) {\n     }\n \n     public boolean handleResponse(MessageContext messageContext) {\n+        if (config == null) {\n+            // Retrieve the ISKMReverseProxyEnabled property value from api manager configurations.\n+            // This value indicates whether the IS Authentication endpoint has been reverse proxied through\n+            // the Gateway.\n+            config = ServiceReferenceHolder.getInstance().getApiManagerConfigurationService()\n+                    .getAPIManagerConfiguration();\n+            iskmReverseProxyEnabled = Boolean.parseBoolean(\n+                    config.getFirstProperty(APIConstants.AUTH_MANAGER + APIConstants.IS_KM_REVERSE_PROXY_ENABLED));\n+        }\n+        // Modify location header only if ISKMReverseProxyEnabled property is set to true\n+        if (iskmReverseProxyEnabled) {\n+            // The logic is related if the API context is \"/authorize\", \"/commonauth\" or \"/oidc\" while status code is 302\n+            if (messageContext.getProperty(RESTConstants.REST_API_CONTEXT)\n+                    .equals(APIMgtGatewayConstants.AUTHORIZE_CONTEXT) || messageContext\n+                    .getProperty(RESTConstants.REST_API_CONTEXT).equals(APIMgtGatewayConstants.COMMON_AUTH_CONTEXT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e76e35daa37c4844a1203e09afef8b7eda58e061"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1MjA3MjMx", "url": "https://github.com/wso2/carbon-apimgt/pull/9391#pullrequestreview-585207231", "createdAt": "2021-02-08T07:10:55Z", "commit": {"oid": "e76e35daa37c4844a1203e09afef8b7eda58e061"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOFQwNzoxMDo1NVrOIhVKOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOFQwNzoxMDo1NVrOIhVKOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTgyMDYwMA==", "bodyText": "same here", "url": "https://github.com/wso2/carbon-apimgt/pull/9391#discussion_r571820600", "createdAt": "2021-02-08T07:10:55Z", "author": {"login": "HiranyaKavishani"}, "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/common/SynapsePropertiesHandler.java", "diffHunk": "@@ -61,6 +77,62 @@ public boolean handleRequest(MessageContext messageContext) {\n     }\n \n     public boolean handleResponse(MessageContext messageContext) {\n+        if (config == null) {\n+            // Retrieve the ISKMReverseProxyEnabled property value from api manager configurations.\n+            // This value indicates whether the IS Authentication endpoint has been reverse proxied through\n+            // the Gateway.\n+            config = ServiceReferenceHolder.getInstance().getApiManagerConfigurationService()\n+                    .getAPIManagerConfiguration();\n+            iskmReverseProxyEnabled = Boolean.parseBoolean(\n+                    config.getFirstProperty(APIConstants.AUTH_MANAGER + APIConstants.IS_KM_REVERSE_PROXY_ENABLED));\n+        }\n+        // Modify location header only if ISKMReverseProxyEnabled property is set to true\n+        if (iskmReverseProxyEnabled) {\n+            // The logic is related if the API context is \"/authorize\", \"/commonauth\" or \"/oidc\" while status code is 302\n+            if (messageContext.getProperty(RESTConstants.REST_API_CONTEXT)\n+                    .equals(APIMgtGatewayConstants.AUTHORIZE_CONTEXT) || messageContext\n+                    .getProperty(RESTConstants.REST_API_CONTEXT).equals(APIMgtGatewayConstants.COMMON_AUTH_CONTEXT)\n+                    || messageContext.getProperty(RESTConstants.REST_API_CONTEXT)\n+                    .equals(APIMgtGatewayConstants.OIDC_CONTEXT)) {\n+                if (302 == (Integer) ((Axis2MessageContext) messageContext).getAxis2MessageContext()\n+                        .getProperty(SynapseConstants.HTTP_SC)) {\n+                    // Retrieve the transport headers in the response and identify the location header\n+                    TreeMap<String, String> headers = (TreeMap) ((Axis2MessageContext) messageContext)\n+                            .getAxis2MessageContext().getProperty(APIMgtGatewayConstants.TRANSPORT_HEADERS);\n+                    String locationURI = headers.get(APIMgtGatewayConstants.LOCATION);\n+                    // KM host and port which is included in the location header value\n+                    String kmHost = messageContext.getProperty(\"keyManager.hostname\") + \":\" + messageContext\n+                            .getProperty(\"keyManager.port\");\n+                    String hostHeader = (String) messageContext.getProperty(APIMgtGatewayConstants.HOST_HEADER);\n+\n+                    // This check to change the location header is done to make sure that only location headers of the\n+                    // appropriate endpoints which have been proxied are changed. Without this check condition to change\n+                    // the location header, any endpoint which is having KM host as part of the URL will be redirected\n+                    // which could lead to wrong endpoints.\n+                    if (locationURI.contains(APIMgtGatewayConstants.AUTHENTICATION_ENDPOINT_CONTEXT) || locationURI\n+                            .contains(APIMgtGatewayConstants.OAUTH2_CONTEXT + APIMgtGatewayConstants.AUTHORIZE_CONTEXT)\n+                            || locationURI.contains(APIMgtGatewayConstants.COMMON_AUTH_CONTEXT) || locationURI\n+                            .contains(APIMgtGatewayConstants.LOGIN_CONTEXT) || locationURI\n+                            .contains(APIMgtGatewayConstants.OIDC_CONTEXT)) {\n+                        // Replacing KM host with Gateway host\n+                        locationURI = locationURI.replaceFirst(kmHost, hostHeader);\n+                    }\n+\n+                    ((Axis2MessageContext) messageContext).getAxis2MessageContext()\n+                            .setProperty(\"PRE_LOCATION_HEADER\", locationURI);\n+                    if (messageContext.getProperty(RESTConstants.REST_API_CONTEXT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e76e35daa37c4844a1203e09afef8b7eda58e061"}, "originalPosition": 98}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3051, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}