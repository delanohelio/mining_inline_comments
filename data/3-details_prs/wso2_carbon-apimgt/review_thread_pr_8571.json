{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNzQyNTY3", "number": 8571, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzoxNjo1NFrOD_YZHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNzo1NjowMlrOD_j_9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Nzg2NTI3OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/EndpointRegistryImpl.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzoxNjo1NFrOGaA0yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzozMjozM1rOGaBRVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkyOTY3NQ==", "bodyText": "When creating new version, don't we need to check whether the {name, version} combination already exists.", "url": "https://github.com/wso2/carbon-apimgt/pull/8571#discussion_r429929675", "createdAt": "2020-05-25T13:16:54Z", "author": {"login": "vithu30"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/EndpointRegistryImpl.java", "diffHunk": "@@ -234,4 +236,23 @@ public void updateEndpointRegistry(String registryId, String registryName, Endpo\n \n     }\n \n+    /**\n+     * Creates a new version of an Endpoint Registry Entry\n+     *\n+     * @param entryId       Registry Entry Identifier(UUID)\n+     * @param registryEntry EndpointRegistryEntry\n+     * @param version       New version of the Registry Entry\n+     * @return entryID UUID of the created Registry Entry\n+     * @throws APIManagementException if failed to delete the Endpoint Registry Entry\n+     */\n+    public String createNewEntryVersion(String entryId, EndpointRegistryEntry registryEntry, String version)\n+            throws APIManagementException {\n+        registryEntry.setVersion(version);\n+        if (apiMgtDAO.isRegistryEntryNameExists(registryEntry)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c5da1a068df22ed505777e3e9d879a7b4d6e5e8"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkzMDUxNQ==", "bodyText": "isRegistryEntryNameExists method is now altered to do that. Shall we rename this method then to isRegistryEntryNameVersionExists ?", "url": "https://github.com/wso2/carbon-apimgt/pull/8571#discussion_r429930515", "createdAt": "2020-05-25T13:18:48Z", "author": {"login": "ChamodDamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/EndpointRegistryImpl.java", "diffHunk": "@@ -234,4 +236,23 @@ public void updateEndpointRegistry(String registryId, String registryName, Endpo\n \n     }\n \n+    /**\n+     * Creates a new version of an Endpoint Registry Entry\n+     *\n+     * @param entryId       Registry Entry Identifier(UUID)\n+     * @param registryEntry EndpointRegistryEntry\n+     * @param version       New version of the Registry Entry\n+     * @return entryID UUID of the created Registry Entry\n+     * @throws APIManagementException if failed to delete the Endpoint Registry Entry\n+     */\n+    public String createNewEntryVersion(String entryId, EndpointRegistryEntry registryEntry, String version)\n+            throws APIManagementException {\n+        registryEntry.setVersion(version);\n+        if (apiMgtDAO.isRegistryEntryNameExists(registryEntry)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkyOTY3NQ=="}, "originalCommit": {"oid": "5c5da1a068df22ed505777e3e9d879a7b4d6e5e8"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkzMzQxMA==", "bodyText": "Ah right that does not work. we need two methods. Otherwise addRegistryEntry resource can be used to create versions too. Will fix that", "url": "https://github.com/wso2/carbon-apimgt/pull/8571#discussion_r429933410", "createdAt": "2020-05-25T13:25:05Z", "author": {"login": "ChamodDamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/EndpointRegistryImpl.java", "diffHunk": "@@ -234,4 +236,23 @@ public void updateEndpointRegistry(String registryId, String registryName, Endpo\n \n     }\n \n+    /**\n+     * Creates a new version of an Endpoint Registry Entry\n+     *\n+     * @param entryId       Registry Entry Identifier(UUID)\n+     * @param registryEntry EndpointRegistryEntry\n+     * @param version       New version of the Registry Entry\n+     * @return entryID UUID of the created Registry Entry\n+     * @throws APIManagementException if failed to delete the Endpoint Registry Entry\n+     */\n+    public String createNewEntryVersion(String entryId, EndpointRegistryEntry registryEntry, String version)\n+            throws APIManagementException {\n+        registryEntry.setVersion(version);\n+        if (apiMgtDAO.isRegistryEntryNameExists(registryEntry)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkyOTY3NQ=="}, "originalCommit": {"oid": "5c5da1a068df22ed505777e3e9d879a7b4d6e5e8"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkzNjk4Mg==", "bodyText": "Fixed", "url": "https://github.com/wso2/carbon-apimgt/pull/8571#discussion_r429936982", "createdAt": "2020-05-25T13:32:33Z", "author": {"login": "ChamodDamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/EndpointRegistryImpl.java", "diffHunk": "@@ -234,4 +236,23 @@ public void updateEndpointRegistry(String registryId, String registryName, Endpo\n \n     }\n \n+    /**\n+     * Creates a new version of an Endpoint Registry Entry\n+     *\n+     * @param entryId       Registry Entry Identifier(UUID)\n+     * @param registryEntry EndpointRegistryEntry\n+     * @param version       New version of the Registry Entry\n+     * @return entryID UUID of the created Registry Entry\n+     * @throws APIManagementException if failed to delete the Endpoint Registry Entry\n+     */\n+    public String createNewEntryVersion(String entryId, EndpointRegistryEntry registryEntry, String version)\n+            throws APIManagementException {\n+        registryEntry.setVersion(version);\n+        if (apiMgtDAO.isRegistryEntryNameExists(registryEntry)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkyOTY3NQ=="}, "originalCommit": {"oid": "5c5da1a068df22ed505777e3e9d879a7b4d6e5e8"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTczNzkzOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/EndpointRegistry.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNzo0Nzo1OVrOGaSe7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOToyNDoyOFrOGaV96A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIxODk4OA==", "bodyText": "Seems the length exceeded. Shall we move it to new line?", "url": "https://github.com/wso2/carbon-apimgt/pull/8571#discussion_r430218988", "createdAt": "2020-05-26T07:47:59Z", "author": {"login": "vithu30"}, "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/EndpointRegistry.java", "diffHunk": "@@ -73,22 +73,25 @@ EndpointRegistryInfo getEndpointRegistryByUUID(String registryId, String tenantD\n     /**\n      * Returns all entries belong to a given endpoint registry\n      *\n-     * @param sortBy     Name of the sorting field\n-     * @param sortOrder  Order of sorting (asc or desc)\n-     * @param limit      Limit\n-     * @param offset     Offset\n-     * @param registryId UUID of the endpoint registry\n-     * @param serviceType The endpoint service type\n-     * @param definitionType Then endpoint definition type\n-     * @param entryName The registry entry name\n+     * @param sortBy          Name of the sorting field\n+     * @param sortOrder       Order of sorting (asc or desc)\n+     * @param limit           Limit\n+     * @param offset          Offset\n+     * @param registryId      UUID of the endpoint registry\n+     * @param serviceType     The endpoint service type\n+     * @param definitionType  Then endpoint definition type\n+     * @param entryName       The registry entry name\n      * @param serviceCategory The service category\n+     * @param version         The version of registry entry\n+     * @param exactNameMatch  Whether to perform exact search on name\n      * @return A list of EndpointRegistryEntry objects\n      * @throws APIManagementException if failed to get entries of an Endpoint Registry\n      */\n     List<EndpointRegistryEntry> getEndpointRegistryEntries(String sortBy, String sortOrder, int limit,\n                                                            int offset, String registryId, String serviceType,\n                                                            String definitionType, String entryName,\n-                                                           String serviceCategory) throws APIManagementException;\n+                                                           String serviceCategory, String version, boolean exactNameMatch)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a72e7d62b3b36c7ec4b0297f8c0f9997b413d6a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI3NjA3Mg==", "bodyText": "Fixed in 87488e4", "url": "https://github.com/wso2/carbon-apimgt/pull/8571#discussion_r430276072", "createdAt": "2020-05-26T09:24:28Z", "author": {"login": "ChamodDamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/EndpointRegistry.java", "diffHunk": "@@ -73,22 +73,25 @@ EndpointRegistryInfo getEndpointRegistryByUUID(String registryId, String tenantD\n     /**\n      * Returns all entries belong to a given endpoint registry\n      *\n-     * @param sortBy     Name of the sorting field\n-     * @param sortOrder  Order of sorting (asc or desc)\n-     * @param limit      Limit\n-     * @param offset     Offset\n-     * @param registryId UUID of the endpoint registry\n-     * @param serviceType The endpoint service type\n-     * @param definitionType Then endpoint definition type\n-     * @param entryName The registry entry name\n+     * @param sortBy          Name of the sorting field\n+     * @param sortOrder       Order of sorting (asc or desc)\n+     * @param limit           Limit\n+     * @param offset          Offset\n+     * @param registryId      UUID of the endpoint registry\n+     * @param serviceType     The endpoint service type\n+     * @param definitionType  Then endpoint definition type\n+     * @param entryName       The registry entry name\n      * @param serviceCategory The service category\n+     * @param version         The version of registry entry\n+     * @param exactNameMatch  Whether to perform exact search on name\n      * @return A list of EndpointRegistryEntry objects\n      * @throws APIManagementException if failed to get entries of an Endpoint Registry\n      */\n     List<EndpointRegistryEntry> getEndpointRegistryEntries(String sortBy, String sortOrder, int limit,\n                                                            int offset, String registryId, String serviceType,\n                                                            String definitionType, String entryName,\n-                                                           String serviceCategory) throws APIManagementException;\n+                                                           String serviceCategory, String version, boolean exactNameMatch)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIxODk4OA=="}, "originalCommit": {"oid": "5a72e7d62b3b36c7ec4b0297f8c0f9997b413d6a"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTc2Njk1OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/EndpointRegistryImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNzo1NjowMlrOGaSxEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOToyNDoyMVrOGaV9kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIyMzYzMw==", "bodyText": "Can't we set the version to EndpointRegistryEntry object  in API impl class?", "url": "https://github.com/wso2/carbon-apimgt/pull/8571#discussion_r430223633", "createdAt": "2020-05-26T07:56:02Z", "author": {"login": "vithu30"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/EndpointRegistryImpl.java", "diffHunk": "@@ -234,4 +236,23 @@ public void updateEndpointRegistry(String registryId, String registryName, Endpo\n \n     }\n \n+    /**\n+     * Creates a new version of an Endpoint Registry Entry\n+     *\n+     * @param entryId       Registry Entry Identifier(UUID)\n+     * @param registryEntry EndpointRegistryEntry\n+     * @param version       New version of the Registry Entry\n+     * @return entryID UUID of the created Registry Entry\n+     * @throws APIManagementException if failed to delete the Endpoint Registry Entry\n+     */\n+    public String createNewEntryVersion(String entryId, EndpointRegistryEntry registryEntry, String version)\n+            throws APIManagementException {\n+        registryEntry.setVersion(version);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a72e7d62b3b36c7ec4b0297f8c0f9997b413d6a"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI3NTk4Ng==", "bodyText": "Fixed in 87488e4", "url": "https://github.com/wso2/carbon-apimgt/pull/8571#discussion_r430275986", "createdAt": "2020-05-26T09:24:21Z", "author": {"login": "ChamodDamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/EndpointRegistryImpl.java", "diffHunk": "@@ -234,4 +236,23 @@ public void updateEndpointRegistry(String registryId, String registryName, Endpo\n \n     }\n \n+    /**\n+     * Creates a new version of an Endpoint Registry Entry\n+     *\n+     * @param entryId       Registry Entry Identifier(UUID)\n+     * @param registryEntry EndpointRegistryEntry\n+     * @param version       New version of the Registry Entry\n+     * @return entryID UUID of the created Registry Entry\n+     * @throws APIManagementException if failed to delete the Endpoint Registry Entry\n+     */\n+    public String createNewEntryVersion(String entryId, EndpointRegistryEntry registryEntry, String version)\n+            throws APIManagementException {\n+        registryEntry.setVersion(version);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIyMzYzMw=="}, "originalCommit": {"oid": "5a72e7d62b3b36c7ec4b0297f8c0f9997b413d6a"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3458, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}