{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5ODg5Njkw", "number": 9203, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNDoyNjoyNFrOEZxRZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNDoyODoyM1rOEZxURg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NDU3MTI1OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS3Parser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNDoyNjoyNFrOHCx2aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNDozNjoxN1rOHCyNbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY3NTk0Nw==", "bodyText": "Shall we add a comment on what we are doing here. ie: Populating the default security scheme.", "url": "https://github.com/wso2/carbon-apimgt/pull/9203#discussion_r472675947", "createdAt": "2020-08-19T04:26:24Z", "author": {"login": "tgtshanika"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS3Parser.java", "diffHunk": "@@ -1458,6 +1460,14 @@ private OpenAPI injectOtherScopesToDefaultScheme(OpenAPI openAPI) throws APIMana\n             if (defaultScheme == null) {\n                 SecurityScheme newDefault = new SecurityScheme();\n                 newDefault.setType(SecurityScheme.Type.OAUTH2);\n+                OAuthFlows newDefaultFlows = new OAuthFlows();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4c8ab9cf33e9a6a3b8645e73e0ea58e7cd11e39"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY4MTgzOQ==", "bodyText": "fixed with 0d3ff9c", "url": "https://github.com/wso2/carbon-apimgt/pull/9203#discussion_r472681839", "createdAt": "2020-08-19T04:36:17Z", "author": {"login": "RakhithaRR"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS3Parser.java", "diffHunk": "@@ -1458,6 +1460,14 @@ private OpenAPI injectOtherScopesToDefaultScheme(OpenAPI openAPI) throws APIMana\n             if (defaultScheme == null) {\n                 SecurityScheme newDefault = new SecurityScheme();\n                 newDefault.setType(SecurityScheme.Type.OAUTH2);\n+                OAuthFlows newDefaultFlows = new OAuthFlows();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY3NTk0Nw=="}, "originalCommit": {"oid": "a4c8ab9cf33e9a6a3b8645e73e0ea58e7cd11e39"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NDU3ODYyOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS3Parser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNDoyODoyM1rOHCx7Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNDozMTo0MVrOHCyDAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY3NzIwNg==", "bodyText": "Check the same flow with Swagger 2 API definition and fix it in OAS2Parser, if the same issue is there.", "url": "https://github.com/wso2/carbon-apimgt/pull/9203#discussion_r472677206", "createdAt": "2020-08-19T04:28:23Z", "author": {"login": "tgtshanika"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS3Parser.java", "diffHunk": "@@ -1458,6 +1460,14 @@ private OpenAPI injectOtherScopesToDefaultScheme(OpenAPI openAPI) throws APIMana\n             if (defaultScheme == null) {\n                 SecurityScheme newDefault = new SecurityScheme();\n                 newDefault.setType(SecurityScheme.Type.OAUTH2);\n+                OAuthFlows newDefaultFlows = new OAuthFlows();\n+                OAuthFlow newDefaultFlow = new OAuthFlow();\n+                newDefaultFlow.setAuthorizationUrl(\"https://test.com\");\n+                Scopes newDefaultScopes = new Scopes();\n+                newDefaultFlow.setScopes(newDefaultScopes);\n+                newDefaultFlows.setImplicit(newDefaultFlow);\n+                newDefault.setFlows(newDefaultFlows);\n+\n                 securitySchemes.put(OPENAPI_SECURITY_SCHEMA_KEY, newDefault);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4c8ab9cf33e9a6a3b8645e73e0ea58e7cd11e39"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY3OTE2OA==", "bodyText": "Default security is populated in v2 parser. So, this issue is not there.", "url": "https://github.com/wso2/carbon-apimgt/pull/9203#discussion_r472679168", "createdAt": "2020-08-19T04:31:41Z", "author": {"login": "RakhithaRR"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS3Parser.java", "diffHunk": "@@ -1458,6 +1460,14 @@ private OpenAPI injectOtherScopesToDefaultScheme(OpenAPI openAPI) throws APIMana\n             if (defaultScheme == null) {\n                 SecurityScheme newDefault = new SecurityScheme();\n                 newDefault.setType(SecurityScheme.Type.OAUTH2);\n+                OAuthFlows newDefaultFlows = new OAuthFlows();\n+                OAuthFlow newDefaultFlow = new OAuthFlow();\n+                newDefaultFlow.setAuthorizationUrl(\"https://test.com\");\n+                Scopes newDefaultScopes = new Scopes();\n+                newDefaultFlow.setScopes(newDefaultScopes);\n+                newDefaultFlows.setImplicit(newDefaultFlow);\n+                newDefault.setFlows(newDefaultFlows);\n+\n                 securitySchemes.put(OPENAPI_SECURITY_SCHEMA_KEY, newDefault);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY3NzIwNg=="}, "originalCommit": {"oid": "a4c8ab9cf33e9a6a3b8645e73e0ea58e7cd11e39"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3084, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}