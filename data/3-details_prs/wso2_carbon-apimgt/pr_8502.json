{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MzQ1MzQ5", "number": 8502, "title": "Add UpdateEndpointRegistryEntry and DeleteEndpointRegistryEntry resources", "bodyText": "", "createdAt": "2020-05-13T12:58:54Z", "url": "https://github.com/wso2/carbon-apimgt/pull/8502", "merged": true, "mergeCommit": {"oid": "93354214360f1fdb3a0979b5094a2f82c730d2dc"}, "closed": true, "closedAt": "2020-05-13T17:06:48Z", "author": {"login": "ChamodDamitha"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcg4YiwgH2gAyNDE3MzQ1MzQ5OmYzYTQ1NTY2NmNiMjFlMjZjNDA2NWQxNDUyZTQ1YTAyYzIzOWViZmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc21qj9gFqTQ1MTg0MjUzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f3a455666cb21e26c4065d1452e45a02c239ebff", "author": {"user": {"login": "ChamodDamitha", "name": "Chamod Damitha Samarajeewa"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/f3a455666cb21e26c4065d1452e45a02c239ebff", "committedDate": "2020-05-13T12:53:09Z", "message": "Add updateRegistryEntry resource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwOTQzNzg3", "url": "https://github.com/wso2/carbon-apimgt/pull/8502#pullrequestreview-410943787", "createdAt": "2020-05-13T13:49:40Z", "commit": {"oid": "7e3fd6e7b5f9ba3703da20917802cbe063f53834"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMzo0OTo0MVrOGUyjKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMzo0OTo0MVrOGUyjKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ1MjkwNg==", "bodyText": "can any null pointers occur here when we don't upload a file?", "url": "https://github.com/wso2/carbon-apimgt/pull/8502#discussion_r424452906", "createdAt": "2020-05-13T13:49:41Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.endpoint.registry/src/main/java/org/wso2/carbon/apimgt/rest/api/endpoint/registry/impl/RegistriesApiServiceImpl.java", "diffHunk": "@@ -254,13 +254,68 @@ public Response getRegistryEntryByUuid(String registryId, String entryId, Messag\n     @Override\n     public Response updateRegistryEntry(String registryId, String entryId, RegistryEntryDTO registryEntry, InputStream\n             definitionFileInputStream, Attachment definitionFileDetail, MessageContext messageContext) {\n+        String tenantDomain = RestApiUtil.getLoggedInUserTenantDomain();\n+        String user = RestApiUtil.getLoggedInUsername();\n+        EndpointRegistry registryProvider = new EndpointRegistryImpl();\n+        EndpointRegistryEntry updatedEntry = null;\n+\n+        try {\n+            EndpointRegistryInfo endpointRegistry =\n+                    registryProvider.getEndpointRegistryByUUID(registryId, tenantDomain);\n+            if (endpointRegistry == null) {\n+                RestApiUtil.handleResourceNotFoundError(\"Endpoint registry with the id: \" + registryId +\n+                        \" is not found\", log);\n+            }\n+            EndpointRegistryEntry endpointRegistryEntry =\n+                    registryProvider.getEndpointRegistryEntryByUUID(registryId, entryId);\n+            if (endpointRegistryEntry == null) {\n+                RestApiUtil.handleResourceNotFoundError(\"Endpoint registry entry with the id: \" + entryId +\n+                        \" is not found\", log);\n+            }\n \n-        return Response.ok().entity(registryEntry).build();\n+            ResourceFile definitionFile = new ResourceFile(definitionFileInputStream, definitionFileDetail", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e3fd6e7b5f9ba3703da20917802cbe063f53834"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5051f7e1b455e07f7bccfda06af9c3c29a35693", "author": {"user": {"login": "ChamodDamitha", "name": "Chamod Damitha Samarajeewa"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/e5051f7e1b455e07f7bccfda06af9c3c29a35693", "committedDate": "2020-05-13T15:26:18Z", "message": "Add deleteEndpointRegistryEntry resource"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7e3fd6e7b5f9ba3703da20917802cbe063f53834", "author": {"user": {"login": "ChamodDamitha", "name": "Chamod Damitha Samarajeewa"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/7e3fd6e7b5f9ba3703da20917802cbe063f53834", "committedDate": "2020-05-13T12:57:18Z", "message": "Add deleteEndpointRegistryEntry resource"}, "afterCommit": {"oid": "e5051f7e1b455e07f7bccfda06af9c3c29a35693", "author": {"user": {"login": "ChamodDamitha", "name": "Chamod Damitha Samarajeewa"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/e5051f7e1b455e07f7bccfda06af9c3c29a35693", "committedDate": "2020-05-13T15:26:18Z", "message": "Add deleteEndpointRegistryEntry resource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMTI4NTU5", "url": "https://github.com/wso2/carbon-apimgt/pull/8502#pullrequestreview-411128559", "createdAt": "2020-05-13T17:06:37Z", "commit": {"oid": "e5051f7e1b455e07f7bccfda06af9c3c29a35693"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxODQxNzUw", "url": "https://github.com/wso2/carbon-apimgt/pull/8502#pullrequestreview-451841750", "createdAt": "2020-07-20T18:08:19Z", "commit": {"oid": "e5051f7e1b455e07f7bccfda06af9c3c29a35693"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxODowODoxOVrOG0Zi7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxODowODoxOVrOG0Zi7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU5NzY3OA==", "bodyText": "shouldn't we catch the exception in executeUpdate and rollback the connection explicitly.\nSee https://stackoverflow.com/questions/3160756/in-jdbc-when-autocommit-is-false-and-no-explicit-savepoints-have-been-set-is-i", "url": "https://github.com/wso2/carbon-apimgt/pull/8502#discussion_r457597678", "createdAt": "2020-07-20T18:08:19Z", "author": {"login": "dushaniw"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -15012,6 +15012,53 @@ public String addEndpointRegistryEntry(EndpointRegistryEntry registryEntry) thro\n         return uuid;\n     }\n \n+    /**\n+     * Updates Registry Entry\n+     *\n+     * @param registryEntry EndpointRegistryEntry\n+     * @throws APIManagementException if failed to update EndpointRegistryEntry\n+     */\n+    public void updateEndpointRegistryEntry(EndpointRegistryEntry registryEntry) throws APIManagementException {\n+        String query = SQLConstants.UPDATE_ENDPOINT_REGISTRY_ENTRY_SQL;\n+        try (Connection connection = APIMgtDBUtil.getConnection();\n+             PreparedStatement ps = connection.prepareStatement(query)) {\n+            connection.setAutoCommit(false);\n+            ps.setString(1, registryEntry.getName());\n+            ps.setString(2, registryEntry.getServiceURL());\n+            ps.setString(3, registryEntry.getDefinitionType());\n+            ps.setString(4, registryEntry.getDefinitionURL());\n+            ps.setString(5, registryEntry.getMetaData());\n+            ps.setString(6, registryEntry.getServiceType());\n+            ps.setBlob(7, registryEntry.getEndpointDefinition().getContent());\n+            ps.setString(8, registryEntry.getEntryId());\n+            ps.executeUpdate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5051f7e1b455e07f7bccfda06af9c3c29a35693"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxODQyNTM4", "url": "https://github.com/wso2/carbon-apimgt/pull/8502#pullrequestreview-451842538", "createdAt": "2020-07-20T18:09:27Z", "commit": {"oid": "e5051f7e1b455e07f7bccfda06af9c3c29a35693"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxODowOToyN1rOG0ZloQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxODowOToyN1rOG0ZloQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU5ODM2OQ==", "bodyText": "same here, IMO we should rollback the connection if statement.execute fails", "url": "https://github.com/wso2/carbon-apimgt/pull/8502#discussion_r457598369", "createdAt": "2020-07-20T18:09:27Z", "author": {"login": "dushaniw"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -15012,6 +15012,53 @@ public String addEndpointRegistryEntry(EndpointRegistryEntry registryEntry) thro\n         return uuid;\n     }\n \n+    /**\n+     * Updates Registry Entry\n+     *\n+     * @param registryEntry EndpointRegistryEntry\n+     * @throws APIManagementException if failed to update EndpointRegistryEntry\n+     */\n+    public void updateEndpointRegistryEntry(EndpointRegistryEntry registryEntry) throws APIManagementException {\n+        String query = SQLConstants.UPDATE_ENDPOINT_REGISTRY_ENTRY_SQL;\n+        try (Connection connection = APIMgtDBUtil.getConnection();\n+             PreparedStatement ps = connection.prepareStatement(query)) {\n+            connection.setAutoCommit(false);\n+            ps.setString(1, registryEntry.getName());\n+            ps.setString(2, registryEntry.getServiceURL());\n+            ps.setString(3, registryEntry.getDefinitionType());\n+            ps.setString(4, registryEntry.getDefinitionURL());\n+            ps.setString(5, registryEntry.getMetaData());\n+            ps.setString(6, registryEntry.getServiceType());\n+            ps.setBlob(7, registryEntry.getEndpointDefinition().getContent());\n+            ps.setString(8, registryEntry.getEntryId());\n+            ps.executeUpdate();\n+            connection.commit();\n+        } catch (SQLException e) {\n+            handleException(\"Error while updating endpoint registry entry with id: \" + registryEntry.getEntryId(), e);\n+        }\n+    }\n+\n+    /**\n+     * Deletes an Endpoint Registry Entry\n+     *\n+     * @param entryId Registry Entry Identifier(UUID)\n+     * @throws APIManagementException if failed to delete the Endpoint Registry Entry\n+     */\n+    public void deleteEndpointRegistryEntry(String entryId) throws APIManagementException {\n+        String query = SQLConstants.DELETE_ENDPOINT_REGISTRY_ENTRY_SQL;\n+\n+        try (Connection connection = APIMgtDBUtil.getConnection();\n+             PreparedStatement statement = connection.prepareStatement(query)\n+        ) {\n+            connection.setAutoCommit(false);\n+            statement.setString(1, entryId);\n+            statement.execute();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5051f7e1b455e07f7bccfda06af9c3c29a35693"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2734, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}