{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NTcwMDc3", "number": 8516, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo0NzowM1rOD8225g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNDoxNDo1MFrOD9PCxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTM5OTQyOnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin_new/source/src/app/components/AdminPages/Addons/InputListBase.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo0NzowM1rOGWDXvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNTo1NTo0MVrOGWoadw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc3NzA4NQ==", "bodyText": "Why we need to define a variable here ?", "url": "https://github.com/wso2/carbon-apimgt/pull/8516#discussion_r425777085", "createdAt": "2020-05-15T12:47:03Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin_new/source/src/app/components/AdminPages/Addons/InputListBase.jsx", "diffHunk": "@@ -0,0 +1,106 @@\n+import React, { useEffect, useState } from 'react';\n+import PropTypes from 'prop-types';\n+import { createMuiTheme } from '@material-ui/core/styles';\n+import Grid from '@material-ui/core/Grid';\n+import TextField from '@material-ui/core/TextField';\n+import Button from '@material-ui/core/Button';\n+import Box from '@material-ui/core/Box';\n+\n+let id;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64581005799a1c61e0df02c8afde0d7dfe79dc37"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4Mzk5MQ==", "bodyText": "Fixed with commit: c285a00", "url": "https://github.com/wso2/carbon-apimgt/pull/8516#discussion_r426383991", "createdAt": "2020-05-18T05:55:41Z", "author": {"login": "chathuranga95"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin_new/source/src/app/components/AdminPages/Addons/InputListBase.jsx", "diffHunk": "@@ -0,0 +1,106 @@\n+import React, { useEffect, useState } from 'react';\n+import PropTypes from 'prop-types';\n+import { createMuiTheme } from '@material-ui/core/styles';\n+import Grid from '@material-ui/core/Grid';\n+import TextField from '@material-ui/core/TextField';\n+import Button from '@material-ui/core/Button';\n+import Box from '@material-ui/core/Box';\n+\n+let id;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc3NzA4NQ=="}, "originalCommit": {"oid": "64581005799a1c61e0df02c8afde0d7dfe79dc37"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTQwMjkzOnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin_new/source/src/app/components/AdminPages/Addons/InputListBase.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo0Nzo1NlrOGWDZww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNTo1NjowNlrOGWoa_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc3NzYwMw==", "bodyText": "Please destructure the event values before use", "url": "https://github.com/wso2/carbon-apimgt/pull/8516#discussion_r425777603", "createdAt": "2020-05-15T12:47:56Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin_new/source/src/app/components/AdminPages/Addons/InputListBase.jsx", "diffHunk": "@@ -0,0 +1,106 @@\n+import React, { useEffect, useState } from 'react';\n+import PropTypes from 'prop-types';\n+import { createMuiTheme } from '@material-ui/core/styles';\n+import Grid from '@material-ui/core/Grid';\n+import TextField from '@material-ui/core/TextField';\n+import Button from '@material-ui/core/Button';\n+import Box from '@material-ui/core/Box';\n+\n+let id;\n+\n+const theme = createMuiTheme();\n+theme.spacing(2);\n+\n+const InputList = (props) => {\n+    const {\n+        onInputListChange, initialList, inputLabelPrefix, helperText, addButtonLabel,\n+    } = props;\n+    const [userInputItems, setUserInputItems] = useState([]);\n+\n+    const handleInput = (e) => {\n+        let tempItems = userInputItems.filter((item) => item.key !== e.target.name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64581005799a1c61e0df02c8afde0d7dfe79dc37"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4NDEyNA==", "bodyText": "Fixed with commit: c285a00", "url": "https://github.com/wso2/carbon-apimgt/pull/8516#discussion_r426384124", "createdAt": "2020-05-18T05:56:06Z", "author": {"login": "chathuranga95"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin_new/source/src/app/components/AdminPages/Addons/InputListBase.jsx", "diffHunk": "@@ -0,0 +1,106 @@\n+import React, { useEffect, useState } from 'react';\n+import PropTypes from 'prop-types';\n+import { createMuiTheme } from '@material-ui/core/styles';\n+import Grid from '@material-ui/core/Grid';\n+import TextField from '@material-ui/core/TextField';\n+import Button from '@material-ui/core/Button';\n+import Box from '@material-ui/core/Box';\n+\n+let id;\n+\n+const theme = createMuiTheme();\n+theme.spacing(2);\n+\n+const InputList = (props) => {\n+    const {\n+        onInputListChange, initialList, inputLabelPrefix, helperText, addButtonLabel,\n+    } = props;\n+    const [userInputItems, setUserInputItems] = useState([]);\n+\n+    const handleInput = (e) => {\n+        let tempItems = userInputItems.filter((item) => item.key !== e.target.name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc3NzYwMw=="}, "originalCommit": {"oid": "64581005799a1c61e0df02c8afde0d7dfe79dc37"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTQwODg2OnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin_new/source/src/app/components/AdminPages/Addons/InputListBase.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo0OTo0NVrOGWDdnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwMzozNjozMFrOGWmkkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc3ODU5MQ==", "bodyText": "Have we ignored eslint check in this file ? , AFAIR this is an eslint rule violation", "url": "https://github.com/wso2/carbon-apimgt/pull/8516#discussion_r425778591", "createdAt": "2020-05-15T12:49:45Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin_new/source/src/app/components/AdminPages/Addons/InputListBase.jsx", "diffHunk": "@@ -0,0 +1,106 @@\n+import React, { useEffect, useState } from 'react';\n+import PropTypes from 'prop-types';\n+import { createMuiTheme } from '@material-ui/core/styles';\n+import Grid from '@material-ui/core/Grid';\n+import TextField from '@material-ui/core/TextField';\n+import Button from '@material-ui/core/Button';\n+import Box from '@material-ui/core/Box';\n+\n+let id;\n+\n+const theme = createMuiTheme();\n+theme.spacing(2);\n+\n+const InputList = (props) => {\n+    const {\n+        onInputListChange, initialList, inputLabelPrefix, helperText, addButtonLabel,\n+    } = props;\n+    const [userInputItems, setUserInputItems] = useState([]);\n+\n+    const handleInput = (e) => {\n+        let tempItems = userInputItems.filter((item) => item.key !== e.target.name);\n+        tempItems = [...tempItems, { key: '' + e.target.name, value: e.target.value }];\n+        tempItems.sort((a, b) => {\n+            return a.key - b.key;\n+        });\n+        setUserInputItems(tempItems);\n+    };\n+\n+    const handleDelete = (deletingKey) => {\n+        const tempItems = userInputItems.filter((item) => (item.key !== deletingKey));\n+        setUserInputItems(tempItems);\n+    };\n+\n+    useEffect(() => {\n+        const nonEmptyItems = [];\n+        for (let i = 0; i < userInputItems.length; i++) {\n+            if (userInputItems[i].value && userInputItems[i].value.trim() !== '') {\n+                nonEmptyItems.push(userInputItems[i].value.trim());\n+            }\n+        }\n+        onInputListChange(nonEmptyItems);\n+    }, [userInputItems]);\n+\n+    useEffect(() => {\n+        id = 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64581005799a1c61e0df02c8afde0d7dfe79dc37"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM1MzgxMQ==", "bodyText": "eslint check is enabled for this file.", "url": "https://github.com/wso2/carbon-apimgt/pull/8516#discussion_r426353811", "createdAt": "2020-05-18T03:36:30Z", "author": {"login": "chathuranga95"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin_new/source/src/app/components/AdminPages/Addons/InputListBase.jsx", "diffHunk": "@@ -0,0 +1,106 @@\n+import React, { useEffect, useState } from 'react';\n+import PropTypes from 'prop-types';\n+import { createMuiTheme } from '@material-ui/core/styles';\n+import Grid from '@material-ui/core/Grid';\n+import TextField from '@material-ui/core/TextField';\n+import Button from '@material-ui/core/Button';\n+import Box from '@material-ui/core/Box';\n+\n+let id;\n+\n+const theme = createMuiTheme();\n+theme.spacing(2);\n+\n+const InputList = (props) => {\n+    const {\n+        onInputListChange, initialList, inputLabelPrefix, helperText, addButtonLabel,\n+    } = props;\n+    const [userInputItems, setUserInputItems] = useState([]);\n+\n+    const handleInput = (e) => {\n+        let tempItems = userInputItems.filter((item) => item.key !== e.target.name);\n+        tempItems = [...tempItems, { key: '' + e.target.name, value: e.target.value }];\n+        tempItems.sort((a, b) => {\n+            return a.key - b.key;\n+        });\n+        setUserInputItems(tempItems);\n+    };\n+\n+    const handleDelete = (deletingKey) => {\n+        const tempItems = userInputItems.filter((item) => (item.key !== deletingKey));\n+        setUserInputItems(tempItems);\n+    };\n+\n+    useEffect(() => {\n+        const nonEmptyItems = [];\n+        for (let i = 0; i < userInputItems.length; i++) {\n+            if (userInputItems[i].value && userInputItems[i].value.trim() !== '') {\n+                nonEmptyItems.push(userInputItems[i].value.trim());\n+            }\n+        }\n+        onInputListChange(nonEmptyItems);\n+    }, [userInputItems]);\n+\n+    useEffect(() => {\n+        id = 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc3ODU5MQ=="}, "originalCommit": {"oid": "64581005799a1c61e0df02c8afde0d7dfe79dc37"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NTM2MDI5OnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin_new/source/src/app/components/AdminPages/Addons/InputListBase.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNDoxMzoxNVrOGWm_yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNTo1NzowMVrOGWob-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM2MDc3OA==", "bodyText": "Add i18n", "url": "https://github.com/wso2/carbon-apimgt/pull/8516#discussion_r426360778", "createdAt": "2020-05-18T04:13:15Z", "author": {"login": "menakaj"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin_new/source/src/app/components/AdminPages/Addons/InputListBase.jsx", "diffHunk": "@@ -0,0 +1,106 @@\n+import React, { useEffect, useState } from 'react';\n+import PropTypes from 'prop-types';\n+import { createMuiTheme } from '@material-ui/core/styles';\n+import Grid from '@material-ui/core/Grid';\n+import TextField from '@material-ui/core/TextField';\n+import Button from '@material-ui/core/Button';\n+import Box from '@material-ui/core/Box';\n+\n+let id;\n+\n+const theme = createMuiTheme();\n+theme.spacing(2);\n+\n+const InputList = (props) => {\n+    const {\n+        onInputListChange, initialList, inputLabelPrefix, helperText, addButtonLabel,\n+    } = props;\n+    const [userInputItems, setUserInputItems] = useState([]);\n+\n+    const handleInput = (e) => {\n+        let tempItems = userInputItems.filter((item) => item.key !== e.target.name);\n+        tempItems = [...tempItems, { key: '' + e.target.name, value: e.target.value }];\n+        tempItems.sort((a, b) => {\n+            return a.key - b.key;\n+        });\n+        setUserInputItems(tempItems);\n+    };\n+\n+    const handleDelete = (deletingKey) => {\n+        const tempItems = userInputItems.filter((item) => (item.key !== deletingKey));\n+        setUserInputItems(tempItems);\n+    };\n+\n+    useEffect(() => {\n+        const nonEmptyItems = [];\n+        for (let i = 0; i < userInputItems.length; i++) {\n+            if (userInputItems[i].value && userInputItems[i].value.trim() !== '') {\n+                nonEmptyItems.push(userInputItems[i].value.trim());\n+            }\n+        }\n+        onInputListChange(nonEmptyItems);\n+    }, [userInputItems]);\n+\n+    useEffect(() => {\n+        id = 1;\n+        if (initialList) {\n+            setUserInputItems(initialList.map((item) => {\n+                return { key: '' + id++, value: item };\n+            }));\n+        } else {\n+            setUserInputItems([{ key: '1', value: '' }]);\n+        }\n+    }, []);\n+\n+    const onAddInputField = () => {\n+        const newUserItemList = [...userInputItems, { key: '' + id++, value: '' }];\n+        setUserInputItems(newUserItemList);\n+    };\n+\n+    let labelCounter = 1;\n+    return (\n+        <div>\n+            {userInputItems.map((item) => {\n+                return (\n+                    <Grid container xs={12} direction='row' spacing={0}>\n+                        <TextField\n+                            margin='dense'\n+                            name={item.key}\n+                            onChange={handleInput}\n+                            label={inputLabelPrefix + ' ' + labelCounter++}\n+                            value={item.value}\n+                            helperText={helperText}\n+                            variant='outlined'\n+                        />\n+                        <Box mt={1}>\n+                            <Button\n+                                color='primary'\n+                                onClick={() => handleDelete(item.key)}\n+                            >\n+                                    Remove", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9926a12868decf1ce65d96c948279d3be67971d"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4NDM3Ng==", "bodyText": "Fixed with commit: b0610c2", "url": "https://github.com/wso2/carbon-apimgt/pull/8516#discussion_r426384376", "createdAt": "2020-05-18T05:57:01Z", "author": {"login": "chathuranga95"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin_new/source/src/app/components/AdminPages/Addons/InputListBase.jsx", "diffHunk": "@@ -0,0 +1,106 @@\n+import React, { useEffect, useState } from 'react';\n+import PropTypes from 'prop-types';\n+import { createMuiTheme } from '@material-ui/core/styles';\n+import Grid from '@material-ui/core/Grid';\n+import TextField from '@material-ui/core/TextField';\n+import Button from '@material-ui/core/Button';\n+import Box from '@material-ui/core/Box';\n+\n+let id;\n+\n+const theme = createMuiTheme();\n+theme.spacing(2);\n+\n+const InputList = (props) => {\n+    const {\n+        onInputListChange, initialList, inputLabelPrefix, helperText, addButtonLabel,\n+    } = props;\n+    const [userInputItems, setUserInputItems] = useState([]);\n+\n+    const handleInput = (e) => {\n+        let tempItems = userInputItems.filter((item) => item.key !== e.target.name);\n+        tempItems = [...tempItems, { key: '' + e.target.name, value: e.target.value }];\n+        tempItems.sort((a, b) => {\n+            return a.key - b.key;\n+        });\n+        setUserInputItems(tempItems);\n+    };\n+\n+    const handleDelete = (deletingKey) => {\n+        const tempItems = userInputItems.filter((item) => (item.key !== deletingKey));\n+        setUserInputItems(tempItems);\n+    };\n+\n+    useEffect(() => {\n+        const nonEmptyItems = [];\n+        for (let i = 0; i < userInputItems.length; i++) {\n+            if (userInputItems[i].value && userInputItems[i].value.trim() !== '') {\n+                nonEmptyItems.push(userInputItems[i].value.trim());\n+            }\n+        }\n+        onInputListChange(nonEmptyItems);\n+    }, [userInputItems]);\n+\n+    useEffect(() => {\n+        id = 1;\n+        if (initialList) {\n+            setUserInputItems(initialList.map((item) => {\n+                return { key: '' + id++, value: item };\n+            }));\n+        } else {\n+            setUserInputItems([{ key: '1', value: '' }]);\n+        }\n+    }, []);\n+\n+    const onAddInputField = () => {\n+        const newUserItemList = [...userInputItems, { key: '' + id++, value: '' }];\n+        setUserInputItems(newUserItemList);\n+    };\n+\n+    let labelCounter = 1;\n+    return (\n+        <div>\n+            {userInputItems.map((item) => {\n+                return (\n+                    <Grid container xs={12} direction='row' spacing={0}>\n+                        <TextField\n+                            margin='dense'\n+                            name={item.key}\n+                            onChange={handleInput}\n+                            label={inputLabelPrefix + ' ' + labelCounter++}\n+                            value={item.value}\n+                            helperText={helperText}\n+                            variant='outlined'\n+                        />\n+                        <Box mt={1}>\n+                            <Button\n+                                color='primary'\n+                                onClick={() => handleDelete(item.key)}\n+                            >\n+                                    Remove", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM2MDc3OA=="}, "originalCommit": {"oid": "e9926a12868decf1ce65d96c948279d3be67971d"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NTM2MTA4OnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin_new/source/src/app/components/MicrogatewayLabels/AddEditMGLabel.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNDoxNDowM1rOGWnAQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNTo1NjoyOFrOGWobXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM2MDg5Nw==", "bodyText": "Remove unnecessary empty lines", "url": "https://github.com/wso2/carbon-apimgt/pull/8516#discussion_r426360897", "createdAt": "2020-05-18T04:14:03Z", "author": {"login": "menakaj"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin_new/source/src/app/components/MicrogatewayLabels/AddEditMGLabel.jsx", "diffHunk": "@@ -0,0 +1,283 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import React, { useReducer, useEffect } from 'react';\n+import API from 'AppData/api';\n+import PropTypes from 'prop-types';\n+import TextField from '@material-ui/core/TextField';\n+import DialogContentText from '@material-ui/core/DialogContentText';\n+import { FormattedMessage } from 'react-intl';\n+import FormControl from '@material-ui/core/FormControl';\n+import { makeStyles } from '@material-ui/core/styles';\n+import FormDialogBase from 'AppComponents/AdminPages/Addons/FormDialogBase';\n+import Alert from 'AppComponents/Shared/Alert';\n+import ListInput from 'AppComponents/AdminPages/Addons/InputListBase';\n+\n+const useStyles = makeStyles((theme) => ({\n+    error: {\n+        color: theme.palette.error.dark,\n+    },\n+    addEditFormControl: {\n+        minHeight: theme.spacing(40),\n+        maxHeight: theme.spacing(40),\n+        minWidth: theme.spacing(55),\n+    },\n+}));\n+\n+let initialState = {\n+    name: '',\n+    description: '',\n+    hosts: [],\n+};\n+\n+/**\n+ * Reducer\n+ * @param {JSON} state State\n+ * @returns {Promise}.\n+ */\n+function reducer(state, { field, value }) {\n+    return {\n+        ...state,\n+        [field]: value,\n+    };\n+}\n+\n+/**\n+ * Render a pop-up dialog to add/edit an Microgateway label\n+ * @param {JSON} props .\n+ * @returns {JSX}.\n+ */\n+function AddEditMGLabel(props) {\n+    const {\n+        updateList, dataRow, icon, triggerButtonText, title,\n+    } = props;\n+    const classes = useStyles();\n+    let id = null;\n+    // If the dataRow is there ( form is in edit mode ) else it's a new creation\n+    useEffect(() => {\n+        initialState = {\n+            name: '',\n+            description: '',\n+            hosts: [],\n+        };\n+    }, [title]);\n+\n+    if (dataRow) {\n+        // eslint-disable-next-line react/prop-types\n+        const { name: originalName, description: originalDescription, accessUrls: originalHosts } = dataRow;\n+        id = dataRow.id;\n+\n+        initialState = {\n+            name: originalName,\n+            description: originalDescription,\n+            hosts: originalHosts,\n+        };\n+    }\n+\n+    const [state, dispatch] = useReducer(reducer, initialState);\n+    const { name, description, hosts } = state;\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9926a12868decf1ce65d96c948279d3be67971d"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4NDIyMg==", "bodyText": "Fixed with commit: c285a00", "url": "https://github.com/wso2/carbon-apimgt/pull/8516#discussion_r426384222", "createdAt": "2020-05-18T05:56:28Z", "author": {"login": "chathuranga95"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin_new/source/src/app/components/MicrogatewayLabels/AddEditMGLabel.jsx", "diffHunk": "@@ -0,0 +1,283 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import React, { useReducer, useEffect } from 'react';\n+import API from 'AppData/api';\n+import PropTypes from 'prop-types';\n+import TextField from '@material-ui/core/TextField';\n+import DialogContentText from '@material-ui/core/DialogContentText';\n+import { FormattedMessage } from 'react-intl';\n+import FormControl from '@material-ui/core/FormControl';\n+import { makeStyles } from '@material-ui/core/styles';\n+import FormDialogBase from 'AppComponents/AdminPages/Addons/FormDialogBase';\n+import Alert from 'AppComponents/Shared/Alert';\n+import ListInput from 'AppComponents/AdminPages/Addons/InputListBase';\n+\n+const useStyles = makeStyles((theme) => ({\n+    error: {\n+        color: theme.palette.error.dark,\n+    },\n+    addEditFormControl: {\n+        minHeight: theme.spacing(40),\n+        maxHeight: theme.spacing(40),\n+        minWidth: theme.spacing(55),\n+    },\n+}));\n+\n+let initialState = {\n+    name: '',\n+    description: '',\n+    hosts: [],\n+};\n+\n+/**\n+ * Reducer\n+ * @param {JSON} state State\n+ * @returns {Promise}.\n+ */\n+function reducer(state, { field, value }) {\n+    return {\n+        ...state,\n+        [field]: value,\n+    };\n+}\n+\n+/**\n+ * Render a pop-up dialog to add/edit an Microgateway label\n+ * @param {JSON} props .\n+ * @returns {JSX}.\n+ */\n+function AddEditMGLabel(props) {\n+    const {\n+        updateList, dataRow, icon, triggerButtonText, title,\n+    } = props;\n+    const classes = useStyles();\n+    let id = null;\n+    // If the dataRow is there ( form is in edit mode ) else it's a new creation\n+    useEffect(() => {\n+        initialState = {\n+            name: '',\n+            description: '',\n+            hosts: [],\n+        };\n+    }, [title]);\n+\n+    if (dataRow) {\n+        // eslint-disable-next-line react/prop-types\n+        const { name: originalName, description: originalDescription, accessUrls: originalHosts } = dataRow;\n+        id = dataRow.id;\n+\n+        initialState = {\n+            name: originalName,\n+            description: originalDescription,\n+            hosts: originalHosts,\n+        };\n+    }\n+\n+    const [state, dispatch] = useReducer(reducer, initialState);\n+    const { name, description, hosts } = state;\n+\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM2MDg5Nw=="}, "originalCommit": {"oid": "e9926a12868decf1ce65d96c948279d3be67971d"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NTM2MTk2OnYy", "diffSide": "RIGHT", "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin_new/source/src/app/components/MicrogatewayLabels/DeleteMGLabel.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNDoxNDo1MFrOGWnA1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNTo1Njo1NVrOGWob0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM2MTA0NQ==", "bodyText": "Add i18n", "url": "https://github.com/wso2/carbon-apimgt/pull/8516#discussion_r426361045", "createdAt": "2020-05-18T04:14:50Z", "author": {"login": "menakaj"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin_new/source/src/app/components/MicrogatewayLabels/DeleteMGLabel.jsx", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import React from 'react';\n+import API from 'AppData/api';\n+import PropTypes from 'prop-types';\n+import { FormattedMessage } from 'react-intl';\n+import DialogContentText from '@material-ui/core/DialogContentText';\n+import DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n+import FormDialogBase from 'AppComponents/AdminPages/Addons/FormDialogBase';\n+\n+/**\n+ * Render delete dialog box.\n+ * @param {JSON} props component props.\n+ * @returns {JSX} Loading animation.\n+ */\n+function Delete({ updateList, dataRow }) {\n+    const { id } = dataRow;\n+\n+    const formSaveCallback = () => {\n+        const promiseAPICall = new Promise((resolve, reject) => {\n+            const restApi = new API();\n+            restApi\n+                .deleteMicrogatewayLabel(id)\n+                .then(() => {\n+                    resolve(\n+                        <FormattedMessage\n+                            id='AdminPages.Microgateways.Delete.form.delete.successful'\n+                            defaultMessage='Microgateway Label deleted successfully'\n+                        />,\n+                    );\n+                })\n+                .catch((error) => {\n+                    reject(error.response.body.description);\n+                })\n+                .finally(() => {\n+                    updateList();\n+                });\n+        });\n+\n+        return promiseAPICall;\n+    };\n+\n+    return (\n+        <FormDialogBase\n+            title='Delete Microgateway Label?'\n+            saveButtonText='Delete'\n+            icon={<DeleteForeverIcon />}\n+            formSaveCallback={formSaveCallback}\n+        >\n+            <DialogContentText>Are you sure you want to delete this Microgateway Label?</DialogContentText>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9926a12868decf1ce65d96c948279d3be67971d"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4NDMzNg==", "bodyText": "Fixed with commit: b0610c2", "url": "https://github.com/wso2/carbon-apimgt/pull/8516#discussion_r426384336", "createdAt": "2020-05-18T05:56:55Z", "author": {"login": "chathuranga95"}, "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin_new/source/src/app/components/MicrogatewayLabels/DeleteMGLabel.jsx", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import React from 'react';\n+import API from 'AppData/api';\n+import PropTypes from 'prop-types';\n+import { FormattedMessage } from 'react-intl';\n+import DialogContentText from '@material-ui/core/DialogContentText';\n+import DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n+import FormDialogBase from 'AppComponents/AdminPages/Addons/FormDialogBase';\n+\n+/**\n+ * Render delete dialog box.\n+ * @param {JSON} props component props.\n+ * @returns {JSX} Loading animation.\n+ */\n+function Delete({ updateList, dataRow }) {\n+    const { id } = dataRow;\n+\n+    const formSaveCallback = () => {\n+        const promiseAPICall = new Promise((resolve, reject) => {\n+            const restApi = new API();\n+            restApi\n+                .deleteMicrogatewayLabel(id)\n+                .then(() => {\n+                    resolve(\n+                        <FormattedMessage\n+                            id='AdminPages.Microgateways.Delete.form.delete.successful'\n+                            defaultMessage='Microgateway Label deleted successfully'\n+                        />,\n+                    );\n+                })\n+                .catch((error) => {\n+                    reject(error.response.body.description);\n+                })\n+                .finally(() => {\n+                    updateList();\n+                });\n+        });\n+\n+        return promiseAPICall;\n+    };\n+\n+    return (\n+        <FormDialogBase\n+            title='Delete Microgateway Label?'\n+            saveButtonText='Delete'\n+            icon={<DeleteForeverIcon />}\n+            formSaveCallback={formSaveCallback}\n+        >\n+            <DialogContentText>Are you sure you want to delete this Microgateway Label?</DialogContentText>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM2MTA0NQ=="}, "originalCommit": {"oid": "e9926a12868decf1ce65d96c948279d3be67971d"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3400, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}