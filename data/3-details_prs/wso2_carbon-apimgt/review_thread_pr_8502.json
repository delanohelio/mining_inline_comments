{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MzQ1MzQ5", "number": 8502, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMzo0OTo0MFrOD8EzGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxODowOToyN1rOEQUJpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzE5NzY5OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.endpoint.registry/src/main/java/org/wso2/carbon/apimgt/rest/api/endpoint/registry/impl/RegistriesApiServiceImpl.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMzo0OTo0MVrOGUyjKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNToyNzowNFrOGU3H7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ1MjkwNg==", "bodyText": "can any null pointers occur here when we don't upload a file?", "url": "https://github.com/wso2/carbon-apimgt/pull/8502#discussion_r424452906", "createdAt": "2020-05-13T13:49:41Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.endpoint.registry/src/main/java/org/wso2/carbon/apimgt/rest/api/endpoint/registry/impl/RegistriesApiServiceImpl.java", "diffHunk": "@@ -254,13 +254,68 @@ public Response getRegistryEntryByUuid(String registryId, String entryId, Messag\n     @Override\n     public Response updateRegistryEntry(String registryId, String entryId, RegistryEntryDTO registryEntry, InputStream\n             definitionFileInputStream, Attachment definitionFileDetail, MessageContext messageContext) {\n+        String tenantDomain = RestApiUtil.getLoggedInUserTenantDomain();\n+        String user = RestApiUtil.getLoggedInUsername();\n+        EndpointRegistry registryProvider = new EndpointRegistryImpl();\n+        EndpointRegistryEntry updatedEntry = null;\n+\n+        try {\n+            EndpointRegistryInfo endpointRegistry =\n+                    registryProvider.getEndpointRegistryByUUID(registryId, tenantDomain);\n+            if (endpointRegistry == null) {\n+                RestApiUtil.handleResourceNotFoundError(\"Endpoint registry with the id: \" + registryId +\n+                        \" is not found\", log);\n+            }\n+            EndpointRegistryEntry endpointRegistryEntry =\n+                    registryProvider.getEndpointRegistryEntryByUUID(registryId, entryId);\n+            if (endpointRegistryEntry == null) {\n+                RestApiUtil.handleResourceNotFoundError(\"Endpoint registry entry with the id: \" + entryId +\n+                        \" is not found\", log);\n+            }\n \n-        return Response.ok().entity(registryEntry).build();\n+            ResourceFile definitionFile = new ResourceFile(definitionFileInputStream, definitionFileDetail", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e3fd6e7b5f9ba3703da20917802cbe063f53834"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2MjU2Nw==", "bodyText": "yeah it occurs. I will fix it. If there is no file attached, still we should update the other details right?", "url": "https://github.com/wso2/carbon-apimgt/pull/8502#discussion_r424462567", "createdAt": "2020-05-13T14:02:18Z", "author": {"login": "ChamodDamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.endpoint.registry/src/main/java/org/wso2/carbon/apimgt/rest/api/endpoint/registry/impl/RegistriesApiServiceImpl.java", "diffHunk": "@@ -254,13 +254,68 @@ public Response getRegistryEntryByUuid(String registryId, String entryId, Messag\n     @Override\n     public Response updateRegistryEntry(String registryId, String entryId, RegistryEntryDTO registryEntry, InputStream\n             definitionFileInputStream, Attachment definitionFileDetail, MessageContext messageContext) {\n+        String tenantDomain = RestApiUtil.getLoggedInUserTenantDomain();\n+        String user = RestApiUtil.getLoggedInUsername();\n+        EndpointRegistry registryProvider = new EndpointRegistryImpl();\n+        EndpointRegistryEntry updatedEntry = null;\n+\n+        try {\n+            EndpointRegistryInfo endpointRegistry =\n+                    registryProvider.getEndpointRegistryByUUID(registryId, tenantDomain);\n+            if (endpointRegistry == null) {\n+                RestApiUtil.handleResourceNotFoundError(\"Endpoint registry with the id: \" + registryId +\n+                        \" is not found\", log);\n+            }\n+            EndpointRegistryEntry endpointRegistryEntry =\n+                    registryProvider.getEndpointRegistryEntryByUUID(registryId, entryId);\n+            if (endpointRegistryEntry == null) {\n+                RestApiUtil.handleResourceNotFoundError(\"Endpoint registry entry with the id: \" + entryId +\n+                        \" is not found\", log);\n+            }\n \n-        return Response.ok().entity(registryEntry).build();\n+            ResourceFile definitionFile = new ResourceFile(definitionFileInputStream, definitionFileDetail", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ1MjkwNg=="}, "originalCommit": {"oid": "7e3fd6e7b5f9ba3703da20917802cbe063f53834"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ3MTcyMg==", "bodyText": "yeah, let's keep the existing blob in the DB as it is and update the rest in that case.", "url": "https://github.com/wso2/carbon-apimgt/pull/8502#discussion_r424471722", "createdAt": "2020-05-13T14:14:42Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.endpoint.registry/src/main/java/org/wso2/carbon/apimgt/rest/api/endpoint/registry/impl/RegistriesApiServiceImpl.java", "diffHunk": "@@ -254,13 +254,68 @@ public Response getRegistryEntryByUuid(String registryId, String entryId, Messag\n     @Override\n     public Response updateRegistryEntry(String registryId, String entryId, RegistryEntryDTO registryEntry, InputStream\n             definitionFileInputStream, Attachment definitionFileDetail, MessageContext messageContext) {\n+        String tenantDomain = RestApiUtil.getLoggedInUserTenantDomain();\n+        String user = RestApiUtil.getLoggedInUsername();\n+        EndpointRegistry registryProvider = new EndpointRegistryImpl();\n+        EndpointRegistryEntry updatedEntry = null;\n+\n+        try {\n+            EndpointRegistryInfo endpointRegistry =\n+                    registryProvider.getEndpointRegistryByUUID(registryId, tenantDomain);\n+            if (endpointRegistry == null) {\n+                RestApiUtil.handleResourceNotFoundError(\"Endpoint registry with the id: \" + registryId +\n+                        \" is not found\", log);\n+            }\n+            EndpointRegistryEntry endpointRegistryEntry =\n+                    registryProvider.getEndpointRegistryEntryByUUID(registryId, entryId);\n+            if (endpointRegistryEntry == null) {\n+                RestApiUtil.handleResourceNotFoundError(\"Endpoint registry entry with the id: \" + entryId +\n+                        \" is not found\", log);\n+            }\n \n-        return Response.ok().entity(registryEntry).build();\n+            ResourceFile definitionFile = new ResourceFile(definitionFileInputStream, definitionFileDetail", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ1MjkwNg=="}, "originalCommit": {"oid": "7e3fd6e7b5f9ba3703da20917802cbe063f53834"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ3MzA0MQ==", "bodyText": "we should also think of the use case where the user wants to remove the blob from the DB and update. in that sense, we should set an empty blob if no file is attached.", "url": "https://github.com/wso2/carbon-apimgt/pull/8502#discussion_r424473041", "createdAt": "2020-05-13T14:16:23Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.endpoint.registry/src/main/java/org/wso2/carbon/apimgt/rest/api/endpoint/registry/impl/RegistriesApiServiceImpl.java", "diffHunk": "@@ -254,13 +254,68 @@ public Response getRegistryEntryByUuid(String registryId, String entryId, Messag\n     @Override\n     public Response updateRegistryEntry(String registryId, String entryId, RegistryEntryDTO registryEntry, InputStream\n             definitionFileInputStream, Attachment definitionFileDetail, MessageContext messageContext) {\n+        String tenantDomain = RestApiUtil.getLoggedInUserTenantDomain();\n+        String user = RestApiUtil.getLoggedInUsername();\n+        EndpointRegistry registryProvider = new EndpointRegistryImpl();\n+        EndpointRegistryEntry updatedEntry = null;\n+\n+        try {\n+            EndpointRegistryInfo endpointRegistry =\n+                    registryProvider.getEndpointRegistryByUUID(registryId, tenantDomain);\n+            if (endpointRegistry == null) {\n+                RestApiUtil.handleResourceNotFoundError(\"Endpoint registry with the id: \" + registryId +\n+                        \" is not found\", log);\n+            }\n+            EndpointRegistryEntry endpointRegistryEntry =\n+                    registryProvider.getEndpointRegistryEntryByUUID(registryId, entryId);\n+            if (endpointRegistryEntry == null) {\n+                RestApiUtil.handleResourceNotFoundError(\"Endpoint registry entry with the id: \" + entryId +\n+                        \" is not found\", log);\n+            }\n \n-        return Response.ok().entity(registryEntry).build();\n+            ResourceFile definitionFile = new ResourceFile(definitionFileInputStream, definitionFileDetail", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ1MjkwNg=="}, "originalCommit": {"oid": "7e3fd6e7b5f9ba3703da20917802cbe063f53834"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ3Mzk2MA==", "bodyText": "since there would be no way to achieve the above if we don't update the blob, let's go ahead and set an empty blob if no file is attached. wdyt", "url": "https://github.com/wso2/carbon-apimgt/pull/8502#discussion_r424473960", "createdAt": "2020-05-13T14:17:36Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.endpoint.registry/src/main/java/org/wso2/carbon/apimgt/rest/api/endpoint/registry/impl/RegistriesApiServiceImpl.java", "diffHunk": "@@ -254,13 +254,68 @@ public Response getRegistryEntryByUuid(String registryId, String entryId, Messag\n     @Override\n     public Response updateRegistryEntry(String registryId, String entryId, RegistryEntryDTO registryEntry, InputStream\n             definitionFileInputStream, Attachment definitionFileDetail, MessageContext messageContext) {\n+        String tenantDomain = RestApiUtil.getLoggedInUserTenantDomain();\n+        String user = RestApiUtil.getLoggedInUsername();\n+        EndpointRegistry registryProvider = new EndpointRegistryImpl();\n+        EndpointRegistryEntry updatedEntry = null;\n+\n+        try {\n+            EndpointRegistryInfo endpointRegistry =\n+                    registryProvider.getEndpointRegistryByUUID(registryId, tenantDomain);\n+            if (endpointRegistry == null) {\n+                RestApiUtil.handleResourceNotFoundError(\"Endpoint registry with the id: \" + registryId +\n+                        \" is not found\", log);\n+            }\n+            EndpointRegistryEntry endpointRegistryEntry =\n+                    registryProvider.getEndpointRegistryEntryByUUID(registryId, entryId);\n+            if (endpointRegistryEntry == null) {\n+                RestApiUtil.handleResourceNotFoundError(\"Endpoint registry entry with the id: \" + entryId +\n+                        \" is not found\", log);\n+            }\n \n-        return Response.ok().entity(registryEntry).build();\n+            ResourceFile definitionFile = new ResourceFile(definitionFileInputStream, definitionFileDetail", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ1MjkwNg=="}, "originalCommit": {"oid": "7e3fd6e7b5f9ba3703da20917802cbe063f53834"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUyNzg1NA==", "bodyText": "Fixed", "url": "https://github.com/wso2/carbon-apimgt/pull/8502#discussion_r424527854", "createdAt": "2020-05-13T15:27:04Z", "author": {"login": "ChamodDamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.endpoint.registry/src/main/java/org/wso2/carbon/apimgt/rest/api/endpoint/registry/impl/RegistriesApiServiceImpl.java", "diffHunk": "@@ -254,13 +254,68 @@ public Response getRegistryEntryByUuid(String registryId, String entryId, Messag\n     @Override\n     public Response updateRegistryEntry(String registryId, String entryId, RegistryEntryDTO registryEntry, InputStream\n             definitionFileInputStream, Attachment definitionFileDetail, MessageContext messageContext) {\n+        String tenantDomain = RestApiUtil.getLoggedInUserTenantDomain();\n+        String user = RestApiUtil.getLoggedInUsername();\n+        EndpointRegistry registryProvider = new EndpointRegistryImpl();\n+        EndpointRegistryEntry updatedEntry = null;\n+\n+        try {\n+            EndpointRegistryInfo endpointRegistry =\n+                    registryProvider.getEndpointRegistryByUUID(registryId, tenantDomain);\n+            if (endpointRegistry == null) {\n+                RestApiUtil.handleResourceNotFoundError(\"Endpoint registry with the id: \" + registryId +\n+                        \" is not found\", log);\n+            }\n+            EndpointRegistryEntry endpointRegistryEntry =\n+                    registryProvider.getEndpointRegistryEntryByUUID(registryId, entryId);\n+            if (endpointRegistryEntry == null) {\n+                RestApiUtil.handleResourceNotFoundError(\"Endpoint registry entry with the id: \" + entryId +\n+                        \" is not found\", log);\n+            }\n \n-        return Response.ok().entity(registryEntry).build();\n+            ResourceFile definitionFile = new ResourceFile(definitionFileInputStream, definitionFileDetail", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ1MjkwNg=="}, "originalCommit": {"oid": "7e3fd6e7b5f9ba3703da20917802cbe063f53834"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NTQyMzMyOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxODowODoxOVrOG0Zi7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwODo0MTozN1rOHIw7SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU5NzY3OA==", "bodyText": "shouldn't we catch the exception in executeUpdate and rollback the connection explicitly.\nSee https://stackoverflow.com/questions/3160756/in-jdbc-when-autocommit-is-false-and-no-explicit-savepoints-have-been-set-is-i", "url": "https://github.com/wso2/carbon-apimgt/pull/8502#discussion_r457597678", "createdAt": "2020-07-20T18:08:19Z", "author": {"login": "dushaniw"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -15012,6 +15012,53 @@ public String addEndpointRegistryEntry(EndpointRegistryEntry registryEntry) thro\n         return uuid;\n     }\n \n+    /**\n+     * Updates Registry Entry\n+     *\n+     * @param registryEntry EndpointRegistryEntry\n+     * @throws APIManagementException if failed to update EndpointRegistryEntry\n+     */\n+    public void updateEndpointRegistryEntry(EndpointRegistryEntry registryEntry) throws APIManagementException {\n+        String query = SQLConstants.UPDATE_ENDPOINT_REGISTRY_ENTRY_SQL;\n+        try (Connection connection = APIMgtDBUtil.getConnection();\n+             PreparedStatement ps = connection.prepareStatement(query)) {\n+            connection.setAutoCommit(false);\n+            ps.setString(1, registryEntry.getName());\n+            ps.setString(2, registryEntry.getServiceURL());\n+            ps.setString(3, registryEntry.getDefinitionType());\n+            ps.setString(4, registryEntry.getDefinitionURL());\n+            ps.setString(5, registryEntry.getMetaData());\n+            ps.setString(6, registryEntry.getServiceType());\n+            ps.setBlob(7, registryEntry.getEndpointDefinition().getContent());\n+            ps.setString(8, registryEntry.getEntryId());\n+            ps.executeUpdate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5051f7e1b455e07f7bccfda06af9c3c29a35693"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk1MjI2NQ==", "bodyText": "Fixed in https://github.com/wso2-enterprise/service-catalog/pull/73", "url": "https://github.com/wso2/carbon-apimgt/pull/8502#discussion_r478952265", "createdAt": "2020-08-28T08:41:37Z", "author": {"login": "ChamodDamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -15012,6 +15012,53 @@ public String addEndpointRegistryEntry(EndpointRegistryEntry registryEntry) thro\n         return uuid;\n     }\n \n+    /**\n+     * Updates Registry Entry\n+     *\n+     * @param registryEntry EndpointRegistryEntry\n+     * @throws APIManagementException if failed to update EndpointRegistryEntry\n+     */\n+    public void updateEndpointRegistryEntry(EndpointRegistryEntry registryEntry) throws APIManagementException {\n+        String query = SQLConstants.UPDATE_ENDPOINT_REGISTRY_ENTRY_SQL;\n+        try (Connection connection = APIMgtDBUtil.getConnection();\n+             PreparedStatement ps = connection.prepareStatement(query)) {\n+            connection.setAutoCommit(false);\n+            ps.setString(1, registryEntry.getName());\n+            ps.setString(2, registryEntry.getServiceURL());\n+            ps.setString(3, registryEntry.getDefinitionType());\n+            ps.setString(4, registryEntry.getDefinitionURL());\n+            ps.setString(5, registryEntry.getMetaData());\n+            ps.setString(6, registryEntry.getServiceType());\n+            ps.setBlob(7, registryEntry.getEndpointDefinition().getContent());\n+            ps.setString(8, registryEntry.getEntryId());\n+            ps.executeUpdate();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU5NzY3OA=="}, "originalCommit": {"oid": "e5051f7e1b455e07f7bccfda06af9c3c29a35693"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NTQyODIwOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxODowOToyN1rOG0ZloQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwODo0MTo0MlrOHIw7pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU5ODM2OQ==", "bodyText": "same here, IMO we should rollback the connection if statement.execute fails", "url": "https://github.com/wso2/carbon-apimgt/pull/8502#discussion_r457598369", "createdAt": "2020-07-20T18:09:27Z", "author": {"login": "dushaniw"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -15012,6 +15012,53 @@ public String addEndpointRegistryEntry(EndpointRegistryEntry registryEntry) thro\n         return uuid;\n     }\n \n+    /**\n+     * Updates Registry Entry\n+     *\n+     * @param registryEntry EndpointRegistryEntry\n+     * @throws APIManagementException if failed to update EndpointRegistryEntry\n+     */\n+    public void updateEndpointRegistryEntry(EndpointRegistryEntry registryEntry) throws APIManagementException {\n+        String query = SQLConstants.UPDATE_ENDPOINT_REGISTRY_ENTRY_SQL;\n+        try (Connection connection = APIMgtDBUtil.getConnection();\n+             PreparedStatement ps = connection.prepareStatement(query)) {\n+            connection.setAutoCommit(false);\n+            ps.setString(1, registryEntry.getName());\n+            ps.setString(2, registryEntry.getServiceURL());\n+            ps.setString(3, registryEntry.getDefinitionType());\n+            ps.setString(4, registryEntry.getDefinitionURL());\n+            ps.setString(5, registryEntry.getMetaData());\n+            ps.setString(6, registryEntry.getServiceType());\n+            ps.setBlob(7, registryEntry.getEndpointDefinition().getContent());\n+            ps.setString(8, registryEntry.getEntryId());\n+            ps.executeUpdate();\n+            connection.commit();\n+        } catch (SQLException e) {\n+            handleException(\"Error while updating endpoint registry entry with id: \" + registryEntry.getEntryId(), e);\n+        }\n+    }\n+\n+    /**\n+     * Deletes an Endpoint Registry Entry\n+     *\n+     * @param entryId Registry Entry Identifier(UUID)\n+     * @throws APIManagementException if failed to delete the Endpoint Registry Entry\n+     */\n+    public void deleteEndpointRegistryEntry(String entryId) throws APIManagementException {\n+        String query = SQLConstants.DELETE_ENDPOINT_REGISTRY_ENTRY_SQL;\n+\n+        try (Connection connection = APIMgtDBUtil.getConnection();\n+             PreparedStatement statement = connection.prepareStatement(query)\n+        ) {\n+            connection.setAutoCommit(false);\n+            statement.setString(1, entryId);\n+            statement.execute();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5051f7e1b455e07f7bccfda06af9c3c29a35693"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk1MjM1Nw==", "bodyText": "Fixed in https://github.com/wso2-enterprise/service-catalog/pull/73", "url": "https://github.com/wso2/carbon-apimgt/pull/8502#discussion_r478952357", "createdAt": "2020-08-28T08:41:42Z", "author": {"login": "ChamodDamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -15012,6 +15012,53 @@ public String addEndpointRegistryEntry(EndpointRegistryEntry registryEntry) thro\n         return uuid;\n     }\n \n+    /**\n+     * Updates Registry Entry\n+     *\n+     * @param registryEntry EndpointRegistryEntry\n+     * @throws APIManagementException if failed to update EndpointRegistryEntry\n+     */\n+    public void updateEndpointRegistryEntry(EndpointRegistryEntry registryEntry) throws APIManagementException {\n+        String query = SQLConstants.UPDATE_ENDPOINT_REGISTRY_ENTRY_SQL;\n+        try (Connection connection = APIMgtDBUtil.getConnection();\n+             PreparedStatement ps = connection.prepareStatement(query)) {\n+            connection.setAutoCommit(false);\n+            ps.setString(1, registryEntry.getName());\n+            ps.setString(2, registryEntry.getServiceURL());\n+            ps.setString(3, registryEntry.getDefinitionType());\n+            ps.setString(4, registryEntry.getDefinitionURL());\n+            ps.setString(5, registryEntry.getMetaData());\n+            ps.setString(6, registryEntry.getServiceType());\n+            ps.setBlob(7, registryEntry.getEndpointDefinition().getContent());\n+            ps.setString(8, registryEntry.getEntryId());\n+            ps.executeUpdate();\n+            connection.commit();\n+        } catch (SQLException e) {\n+            handleException(\"Error while updating endpoint registry entry with id: \" + registryEntry.getEntryId(), e);\n+        }\n+    }\n+\n+    /**\n+     * Deletes an Endpoint Registry Entry\n+     *\n+     * @param entryId Registry Entry Identifier(UUID)\n+     * @throws APIManagementException if failed to delete the Endpoint Registry Entry\n+     */\n+    public void deleteEndpointRegistryEntry(String entryId) throws APIManagementException {\n+        String query = SQLConstants.DELETE_ENDPOINT_REGISTRY_ENTRY_SQL;\n+\n+        try (Connection connection = APIMgtDBUtil.getConnection();\n+             PreparedStatement statement = connection.prepareStatement(query)\n+        ) {\n+            connection.setAutoCommit(false);\n+            statement.setString(1, entryId);\n+            statement.execute();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU5ODM2OQ=="}, "originalCommit": {"oid": "e5051f7e1b455e07f7bccfda06af9c3c29a35693"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3377, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}