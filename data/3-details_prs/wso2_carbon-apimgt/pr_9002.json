{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyMDM0Mjk1", "number": 9002, "title": "Add Unit tests for artifact synchronizer Feature", "bodyText": "Related to wso2/product-apim#8246", "createdAt": "2020-07-18T17:07:32Z", "url": "https://github.com/wso2/carbon-apimgt/pull/9002", "merged": true, "mergeCommit": {"oid": "6075c91c3987fc45858e62d2ae7ab97ed0717bf2"}, "closed": true, "closedAt": "2020-08-03T16:46:26Z", "author": {"login": "Sarangan0219"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0wVqfgH2gAyNDUyMDM0Mjk1OjU5ZDE0NmQ3YjM3OGYwZmI0NGUzZjJhYjMyOTFkYWQ2MjhlM2YxYWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNgw5IgFqTQ5ODA5MjY2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "59d146d7b378f0fb44e3f2ab3291dad628e3f1aa", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/59d146d7b378f0fb44e3f2ab3291dad628e3f1aa", "committedDate": "2020-07-14T06:49:15Z", "message": "create gatewayArtifactsMgtDao tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d52f681a7c651efd6b6a0c5bb325268210308509", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/d52f681a7c651efd6b6a0c5bb325268210308509", "committedDate": "2020-07-14T11:05:30Z", "message": "edit dao tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9dcedb8d657e5c1715d0ed401916cc9d22df99f0", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/9dcedb8d657e5c1715d0ed401916cc9d22df99f0", "committedDate": "2020-07-14T15:34:21Z", "message": "Merge remote-tracking branch 'upstream/master' into unit-test-as"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fad99affd9f8e87f09abd4fe36553af1922c74dc", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/fad99affd9f8e87f09abd4fe36553af1922c74dc", "committedDate": "2020-07-14T16:44:04Z", "message": "refine testcases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e0b23cec7f91ff2b5466357b09b2f3aa37579d5", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/0e0b23cec7f91ff2b5466357b09b2f3aa37579d5", "committedDate": "2020-07-14T17:21:39Z", "message": "optimize test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5d34351d64c35f88551b0b02604e4478e164c84", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/a5d34351d64c35f88551b0b02604e4478e164c84", "committedDate": "2020-07-14T17:37:15Z", "message": "combine test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a727e608556797785f3ad5a8f6a15a047c86cf56", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/a727e608556797785f3ad5a8f6a15a047c86cf56", "committedDate": "2020-07-15T03:26:40Z", "message": "combine testcases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14f8b24828c1ed336d08367b1c9179b5654fd98e", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/14f8b24828c1ed336d08367b1c9179b5654fd98e", "committedDate": "2020-07-15T04:47:54Z", "message": "Adding gateway managertests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93c8a0d468e8b10bcc0d1be867f9ec4d49ed7124", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/93c8a0d468e8b10bcc0d1be867f9ec4d49ed7124", "committedDate": "2020-07-15T05:38:26Z", "message": "edit gatewaymanager tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a512abb8d96ef26ad02e08e4322e543a4809c461", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/a512abb8d96ef26ad02e08e4322e543a4809c461", "committedDate": "2020-07-16T11:19:14Z", "message": "Refractor code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0ff086dcfd86c48b81e5da401f609052484712c", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/a0ff086dcfd86c48b81e5da401f609052484712c", "committedDate": "2020-07-21T11:23:52Z", "message": "remove testcases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyOTg4ODc4", "url": "https://github.com/wso2/carbon-apimgt/pull/9002#pullrequestreview-452988878", "createdAt": "2020-07-22T04:39:22Z", "commit": {"oid": "a0ff086dcfd86c48b81e5da401f609052484712c"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDozOToyMlrOG1Sb0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDo1NjowNVrOG1Sr5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyOTc0Ng==", "bodyText": "All exceptions should be thrown in this scenario", "url": "https://github.com/wso2/carbon-apimgt/pull/9002#discussion_r458529746", "createdAt": "2020-07-22T04:39:22Z", "author": {"login": "uvindra"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/test/java/org/wso2/carbon/apimgt/impl/dao/test/GatewayArtifactsMgtDAOTest.java", "diffHunk": "@@ -0,0 +1,149 @@\n+package org.wso2.carbon.apimgt.impl.dao.test;\n+\n+import org.apache.axiom.om.OMElement;\n+import org.apache.axiom.om.impl.builder.StAXOMBuilder;\n+import org.apache.commons.dbcp.BasicDataSource;\n+import org.apache.commons.io.FileUtils;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.powermock.api.mockito.PowerMockito;\n+import org.powermock.core.classloader.annotations.PrepareForTest;\n+import org.powermock.modules.junit4.PowerMockRunner;\n+import org.wso2.carbon.apimgt.api.APIManagementException;\n+import org.wso2.carbon.apimgt.impl.APIConstants;\n+import org.wso2.carbon.apimgt.impl.APIManagerConfiguration;\n+import org.wso2.carbon.apimgt.impl.APIManagerConfigurationServiceImpl;\n+import org.wso2.carbon.apimgt.impl.dao.GatewayArtifactsMgtDAO;\n+import org.wso2.carbon.apimgt.impl.dao.constants.SQLConstants;\n+import org.wso2.carbon.apimgt.impl.factory.KeyManagerHolder;\n+import org.wso2.carbon.apimgt.impl.internal.ServiceReferenceHolder;\n+import org.wso2.carbon.apimgt.impl.utils.GatewayArtifactsMgtDBUtil;\n+import org.wso2.carbon.base.MultitenantConstants;\n+import javax.naming.Context;\n+import javax.naming.InitialContext;\n+import javax.naming.NamingException;\n+import javax.xml.namespace.QName;\n+import javax.xml.stream.XMLStreamException;\n+import java.io.ByteArrayInputStream;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.List;\n+\n+@RunWith(PowerMockRunner.class)\n+public class GatewayArtifactsMgtDAOTest {\n+    public static GatewayArtifactsMgtDAO gatewayArtifactsMgtDAO;\n+    String apiUUID = \"1236233\";\n+    String apiName = \"testAddGatewayPublishedAPIDetails\";\n+    String version = \"1.0.0\";\n+    String label = \"Production and Sandbox\";\n+    ByteArrayInputStream anyInputStream = new ByteArrayInputStream(\"test data\".getBytes());\n+\n+    @Before\n+    public void setUp() throws Exception {\n+        String dbConfigPath = System.getProperty(\"APIManagerDBConfigurationPath\");\n+        APIManagerConfiguration config = new APIManagerConfiguration();\n+        initializeDatabase(dbConfigPath);\n+        config.load(dbConfigPath);\n+        ServiceReferenceHolder.getInstance().setAPIManagerConfigurationService(new APIManagerConfigurationServiceImpl\n+                (config));\n+        ServiceReferenceHolder.getInstance().getAPIManagerConfigurationService().getAPIManagerConfiguration().getGatewayArtifactSynchronizerProperties().\n+                setArtifactSynchronizerDataSource(\"java:/comp/env/jdbc/WSO2AM_DB\");\n+        GatewayArtifactsMgtDBUtil.initialize();\n+        gatewayArtifactsMgtDAO = GatewayArtifactsMgtDAO.getInstance();\n+    }\n+\n+\n+    private static void initializeDatabase(String configFilePath) {\n+\n+        InputStream in;\n+        try {\n+            in = FileUtils.openInputStream(new File(configFilePath));\n+            StAXOMBuilder builder = new StAXOMBuilder(in);\n+            String dataSource = builder.getDocumentElement().getFirstChildWithName(new QName(\"DataSourceName\")).\n+                    getText();\n+            OMElement databaseElement = builder.getDocumentElement().getFirstChildWithName(new QName(\"Database\"));\n+            String databaseURL = databaseElement.getFirstChildWithName(new QName(\"URL\")).getText();\n+            String databaseUser = databaseElement.getFirstChildWithName(new QName(\"Username\")).getText();\n+            String databasePass = databaseElement.getFirstChildWithName(new QName(\"Password\")).getText();\n+            String databaseDriver = databaseElement.getFirstChildWithName(new QName(\"Driver\")).getText();\n+\n+            BasicDataSource basicDataSource = new BasicDataSource();\n+            basicDataSource.setDriverClassName(databaseDriver);\n+            basicDataSource.setUrl(databaseURL);\n+            basicDataSource.setUsername(databaseUser);\n+            basicDataSource.setPassword(databasePass);\n+\n+            // Create initial context\n+            System.setProperty(Context.INITIAL_CONTEXT_FACTORY,\n+                    \"org.apache.naming.java.javaURLContextFactory\");\n+            System.setProperty(Context.URL_PKG_PREFIXES,\n+                    \"org.apache.naming\");\n+            try {\n+                InitialContext.doLookup(\"java:/comp/env/jdbc/WSO2AM_DB\");\n+            } catch (NamingException e) {\n+                InitialContext ic = new InitialContext();\n+                ic.createSubcontext(\"java:\");\n+                ic.createSubcontext(\"java:/comp\");\n+                ic.createSubcontext(\"java:/comp/env\");\n+                ic.createSubcontext(\"java:/comp/env/jdbc\");\n+\n+                ic.bind(\"java:/comp/env/jdbc/WSO2AM_DB\", basicDataSource);\n+            }\n+        } catch (XMLStreamException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0ff086dcfd86c48b81e5da401f609052484712c"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUzMjEyNA==", "bodyText": "It would be preferential to have an integration test for covering the overall scenario since this a DB specific logic. This will allow this scenario to be covered correctly when run in Test grid with different DBs configured.", "url": "https://github.com/wso2/carbon-apimgt/pull/9002#discussion_r458532124", "createdAt": "2020-07-22T04:48:54Z", "author": {"login": "uvindra"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/test/java/org/wso2/carbon/apimgt/impl/dao/test/GatewayArtifactsMgtDAOTest.java", "diffHunk": "@@ -0,0 +1,149 @@\n+package org.wso2.carbon.apimgt.impl.dao.test;\n+\n+import org.apache.axiom.om.OMElement;\n+import org.apache.axiom.om.impl.builder.StAXOMBuilder;\n+import org.apache.commons.dbcp.BasicDataSource;\n+import org.apache.commons.io.FileUtils;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.powermock.api.mockito.PowerMockito;\n+import org.powermock.core.classloader.annotations.PrepareForTest;\n+import org.powermock.modules.junit4.PowerMockRunner;\n+import org.wso2.carbon.apimgt.api.APIManagementException;\n+import org.wso2.carbon.apimgt.impl.APIConstants;\n+import org.wso2.carbon.apimgt.impl.APIManagerConfiguration;\n+import org.wso2.carbon.apimgt.impl.APIManagerConfigurationServiceImpl;\n+import org.wso2.carbon.apimgt.impl.dao.GatewayArtifactsMgtDAO;\n+import org.wso2.carbon.apimgt.impl.dao.constants.SQLConstants;\n+import org.wso2.carbon.apimgt.impl.factory.KeyManagerHolder;\n+import org.wso2.carbon.apimgt.impl.internal.ServiceReferenceHolder;\n+import org.wso2.carbon.apimgt.impl.utils.GatewayArtifactsMgtDBUtil;\n+import org.wso2.carbon.base.MultitenantConstants;\n+import javax.naming.Context;\n+import javax.naming.InitialContext;\n+import javax.naming.NamingException;\n+import javax.xml.namespace.QName;\n+import javax.xml.stream.XMLStreamException;\n+import java.io.ByteArrayInputStream;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.List;\n+\n+@RunWith(PowerMockRunner.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0ff086dcfd86c48b81e5da401f609052484712c"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUzMzgwNA==", "bodyText": "Even though the function signature has been changed to return a boolean, no action is being done by checking the return type at call time.", "url": "https://github.com/wso2/carbon-apimgt/pull/9002#discussion_r458533804", "createdAt": "2020-07-22T04:55:52Z", "author": {"login": "uvindra"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/GatewayArtifactsMgtDAO.java", "diffHunk": "@@ -49,9 +49,10 @@ public static GatewayArtifactsMgtDAO getInstance() {\n      * @param tenantDomain - Tenant domain of the API\n      * @throws APIManagementException if an error occurs\n      */\n-    public void addGatewayPublishedAPIDetails(String APIId, String APIName, String version, String tenantDomain)\n+    public boolean addGatewayPublishedAPIDetails(String APIId, String APIName, String version, String tenantDomain)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0ff086dcfd86c48b81e5da401f609052484712c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUzMzg2MQ==", "bodyText": "Even though the function signature has been changed to return a boolean, no action is being done by checking the return type at call time.", "url": "https://github.com/wso2/carbon-apimgt/pull/9002#discussion_r458533861", "createdAt": "2020-07-22T04:56:05Z", "author": {"login": "uvindra"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/GatewayArtifactsMgtDAO.java", "diffHunk": "@@ -77,23 +79,25 @@ public void addGatewayPublishedAPIDetails(String APIId, String APIName, String v\n      * @param streamLength - Length of the stream\n      * @throws APIManagementException if an error occurs\n      */\n-    public void addGatewayPublishedAPIArtifacts(String APIId, String gatewayLabel, ByteArrayInputStream bais,\n+    public boolean addGatewayPublishedAPIArtifacts(String APIId, String gatewayLabel, ByteArrayInputStream bais,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0ff086dcfd86c48b81e5da401f609052484712c"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca3a99296eb9ea796869ee228c7e76f0e38123a7", "author": {"user": {"login": "Sarangan0219", "name": "Sarangan"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/ca3a99296eb9ea796869ee228c7e76f0e38123a7", "committedDate": "2020-07-24T03:45:43Z", "message": "throw errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMTc2MDQ3", "url": "https://github.com/wso2/carbon-apimgt/pull/9002#pullrequestreview-460176047", "createdAt": "2020-08-03T16:39:54Z", "commit": {"oid": "ca3a99296eb9ea796869ee228c7e76f0e38123a7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MDkyNjY2", "url": "https://github.com/wso2/carbon-apimgt/pull/9002#pullrequestreview-498092666", "createdAt": "2020-09-29T04:48:36Z", "commit": {"oid": "ca3a99296eb9ea796869ee228c7e76f0e38123a7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNDo0ODozNlrOHZZfWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNDo0ODozNlrOHZZfWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM5NDA3Mg==", "bodyText": "Missing licence headers", "url": "https://github.com/wso2/carbon-apimgt/pull/9002#discussion_r496394072", "createdAt": "2020-09-29T04:48:36Z", "author": {"login": "npamudika"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/test/java/org/wso2/carbon/apimgt/impl/dao/test/GatewayArtifactsMgtDAOTest.java", "diffHunk": "@@ -0,0 +1,150 @@\n+package org.wso2.carbon.apimgt.impl.dao.test;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca3a99296eb9ea796869ee228c7e76f0e38123a7"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2585, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}