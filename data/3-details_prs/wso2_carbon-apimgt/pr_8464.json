{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMzE4ODU3", "number": 8464, "title": "Add implementation to addRegistry resource", "bodyText": "This PR adds implementation for adding new endpoint registry.", "createdAt": "2020-05-05T05:48:04Z", "url": "https://github.com/wso2/carbon-apimgt/pull/8464", "merged": true, "mergeCommit": {"oid": "18af5437820789de98c866977a89c48c4ec5ed22"}, "closed": true, "closedAt": "2020-05-05T09:53:15Z", "author": {"login": "vithu30"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceNdgIAH2gAyNDEzMzE4ODU3OmUwNWM1ZDQ4MzE5ZmUwNjhhNDcxYjc0NjlmYjEwNjk1MzEyMjJiZDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclEW07AFqTQxODI3NjgwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e05c5d48319fe068a471b7469fb1069531222bd2", "author": {"user": {"login": "vithu30", "name": "Vithursa"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/e05c5d48319fe068a471b7469fb1069531222bd2", "committedDate": "2020-05-05T05:44:48Z", "message": "Add implementation to addRegistry resource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NTI1NzI2", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#pullrequestreview-405525726", "createdAt": "2020-05-05T06:40:38Z", "commit": {"oid": "e05c5d48319fe068a471b7469fb1069531222bd2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNjo0MDozOFrOGQcSCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNjo0MDozOFrOGQcSCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg5Mzc3MA==", "bodyText": "Shouldn't the instantiation of the EndpointRegistry go inside  the if (rs.next()) { block ? otherwise not found would not return null.", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r419893770", "createdAt": "2020-05-05T06:40:38Z", "author": {"login": "ChamodDamitha"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -14723,4 +14724,87 @@ public String getUserID(String userName) throws APIManagementException {\n         }\n         return list;\n     }\n+\n+    /**\n+     * Add a new endpoint registry\n+     *\n+     * @param endpointRegistry EndpointRegistry\n+     * @param tenantID  ID of the owner's tenant\n+     * @return registryId\n+     */\n+    public String addEndpointRegistry(EndpointRegistry endpointRegistry, int tenantID) throws APIManagementException {\n+        String query = SQLConstants.ADD_ENDPOINT_REGISTRY_SQL;\n+        String uuid = UUID.randomUUID().toString();\n+        try (Connection connection = APIMgtDBUtil.getConnection();\n+             PreparedStatement ps = connection.prepareStatement(query)) {\n+            ps.setString(1, uuid);\n+            ps.setString(2, endpointRegistry.getName());\n+            ps.setString(3, endpointRegistry.getType());\n+            ps.setString(4, endpointRegistry.getMode());\n+            ps.setInt(5, tenantID);\n+            ps.setString(6, endpointRegistry.getOwner());\n+            ps.setString(7, \"\");\n+            ps.setString(8, \"\");\n+            ps.executeUpdate();\n+        } catch (SQLException e) {\n+            handleException(\"Error while adding new endpoint registry: \" + endpointRegistry.getName(), e);\n+        }\n+        return uuid;\n+    }\n+\n+    /**\n+     * Return the details of an Endpoint Registry\n+     *\n+     * @param regsitryId Endpoint Registry Identifier\n+     * @return Endpoint Registry Object\n+     * @throws APIManagementException\n+     */\n+    public EndpointRegistry getEndpointRegistryByUUID(String regsitryId) throws APIManagementException {\n+        String query = SQLConstants.GET_ENDPOINT_REGISTRY_BY_UUID;\n+        EndpointRegistry endpointRegistry = new EndpointRegistry();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05c5d48319fe068a471b7469fb1069531222bd2"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NTMzNTEw", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#pullrequestreview-405533510", "createdAt": "2020-05-05T06:57:31Z", "commit": {"oid": "e05c5d48319fe068a471b7469fb1069531222bd2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNjo1NzozMVrOGQcq_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNjo1NzozMVrOGQcq_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwMDE1Ng==", "bodyText": "Shouldn't we set autoCommit to false as in other places we have done writes?", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r419900156", "createdAt": "2020-05-05T06:57:31Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -14723,4 +14724,87 @@ public String getUserID(String userName) throws APIManagementException {\n         }\n         return list;\n     }\n+\n+    /**\n+     * Add a new endpoint registry\n+     *\n+     * @param endpointRegistry EndpointRegistry\n+     * @param tenantID  ID of the owner's tenant\n+     * @return registryId\n+     */\n+    public String addEndpointRegistry(EndpointRegistry endpointRegistry, int tenantID) throws APIManagementException {\n+        String query = SQLConstants.ADD_ENDPOINT_REGISTRY_SQL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05c5d48319fe068a471b7469fb1069531222bd2"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NTQwNjA0", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#pullrequestreview-405540604", "createdAt": "2020-05-05T07:12:25Z", "commit": {"oid": "e05c5d48319fe068a471b7469fb1069531222bd2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzoxMjoyNlrOGQdByg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzoxMjoyNlrOGQdByg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwNTk5NA==", "bodyText": "why are 38,39 lines the same?", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r419905994", "createdAt": "2020-05-05T07:12:26Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.endpoint.registry/src/main/java/org/wso2/carbon/apimgt/rest/api/endpoint/registry/util/EndpointRegistryMappingUtils.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.wso2.carbon.apimgt.rest.api.endpoint.registry.util;\n+\n+import org.wso2.carbon.apimgt.api.model.EndpointRegistry;\n+import org.wso2.carbon.apimgt.rest.api.endpoint.registry.dto.RegistryDTO;\n+\n+/**\n+ * This class is responsible for mapping APIM core Endpoint Registry related objects into REST API\n+ * Endpoint Registry related DTOs\n+ */\n+public class EndpointRegistryMappingUtils {\n+\n+    /**\n+     * Converts a RegistryDTO object into EndpointRegistry object\n+     *\n+     * @param registryDTO RegistryDTO object\n+     * @return EndpointRegistry corresponds to RegistryDTO object\n+     */\n+    public static EndpointRegistry fromDTOtoEndpointRegistry(RegistryDTO registryDTO, String owner) {\n+        EndpointRegistry registry = new EndpointRegistry();\n+        registry.setName(registryDTO.getName());\n+        registry.setOwner(owner);\n+        registry.setType(registryDTO.getType().toString());\n+        registry.setMode(registryDTO.getType().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05c5d48319fe068a471b7469fb1069531222bd2"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NTQxNTcw", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#pullrequestreview-405541570", "createdAt": "2020-05-05T07:14:23Z", "commit": {"oid": "e05c5d48319fe068a471b7469fb1069531222bd2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzoxNDoyNFrOGQdE2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzoxNDoyNFrOGQdE2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwNjc3OA==", "bodyText": "why empty?", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r419906778", "createdAt": "2020-05-05T07:14:24Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -14723,4 +14724,87 @@ public String getUserID(String userName) throws APIManagementException {\n         }\n         return list;\n     }\n+\n+    /**\n+     * Add a new endpoint registry\n+     *\n+     * @param endpointRegistry EndpointRegistry\n+     * @param tenantID  ID of the owner's tenant\n+     * @return registryId\n+     */\n+    public String addEndpointRegistry(EndpointRegistry endpointRegistry, int tenantID) throws APIManagementException {\n+        String query = SQLConstants.ADD_ENDPOINT_REGISTRY_SQL;\n+        String uuid = UUID.randomUUID().toString();\n+        try (Connection connection = APIMgtDBUtil.getConnection();\n+             PreparedStatement ps = connection.prepareStatement(query)) {\n+            ps.setString(1, uuid);\n+            ps.setString(2, endpointRegistry.getName());\n+            ps.setString(3, endpointRegistry.getType());\n+            ps.setString(4, endpointRegistry.getMode());\n+            ps.setInt(5, tenantID);\n+            ps.setString(6, endpointRegistry.getOwner());\n+            ps.setString(7, \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05c5d48319fe068a471b7469fb1069531222bd2"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NTQzNDE5", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#pullrequestreview-405543419", "createdAt": "2020-05-05T07:17:46Z", "commit": {"oid": "e05c5d48319fe068a471b7469fb1069531222bd2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzoxNzo0NlrOGQdKmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzoxNzo0NlrOGQdKmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwODI1MA==", "bodyText": "I think it's incorrect to user APIProvider interface for this. We should have a separate interface.  EndpointRegistry", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r419908250", "createdAt": "2020-05-05T07:17:46Z", "author": {"login": "fazlan-nazeem"}, "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIProvider.java", "diffHunk": "@@ -1328,4 +1328,22 @@ void addFileToProductDocumentation(APIProductIdentifier prodcutId, Documentation\n      * @return List of removed resources that are reused among API Products\n      */\n     List<APIResource> getRemovedProductResources(Set<URITemplate> updatedUriTemplates, API existingAPI);\n+\n+    /**\n+     * Adds a new Endpoint Registry", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05c5d48319fe068a471b7469fb1069531222bd2"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0c793516a89b1cdc8923e4d9b887a41ed154e6d", "author": {"user": {"login": "vithu30", "name": "Vithursa"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/e0c793516a89b1cdc8923e4d9b887a41ed154e6d", "committedDate": "2020-05-05T07:42:15Z", "message": "Resolve review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NjI2Nzc4", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#pullrequestreview-405626778", "createdAt": "2020-05-05T09:29:13Z", "commit": {"oid": "6de38c7182402ca9705f3fa0658948bea4068667"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e38cceed0e90ed4fdfccd4b3b923ac821c094727", "author": {"user": {"login": "vithu30", "name": "Vithursa"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/e38cceed0e90ed4fdfccd4b3b923ac821c094727", "committedDate": "2020-05-05T09:29:56Z", "message": "Add EndpointRegistry interface and impl"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6de38c7182402ca9705f3fa0658948bea4068667", "author": {"user": {"login": "vithu30", "name": "Vithursa"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/6de38c7182402ca9705f3fa0658948bea4068667", "committedDate": "2020-05-05T09:23:45Z", "message": "Add EndpointRegistry interface and impl"}, "afterCommit": {"oid": "e38cceed0e90ed4fdfccd4b3b923ac821c094727", "author": {"user": {"login": "vithu30", "name": "Vithursa"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/e38cceed0e90ed4fdfccd4b3b923ac821c094727", "committedDate": "2020-05-05T09:29:56Z", "message": "Add EndpointRegistry interface and impl"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4Mjc0MzM1", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#pullrequestreview-418274335", "createdAt": "2020-05-26T13:03:00Z", "commit": {"oid": "e38cceed0e90ed4fdfccd4b3b923ac821c094727"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzowMzowMVrOGadNTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzowMzowMVrOGadNTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM5NDcwMg==", "bodyText": "Can we define a different Exception class like EndpointRegistryException?", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r430394702", "createdAt": "2020-05-26T13:03:01Z", "author": {"login": "jaadds"}, "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/EndpointRegistry.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.apimgt.api;\n+\n+import org.wso2.carbon.apimgt.api.model.EndpointRegistryInfo;\n+\n+/**\n+ * EndpointRegistry Interface\n+ */\n+public interface EndpointRegistry {\n+\n+    /**\n+     * Adds a new Endpoint Registry\n+     *\n+     * @param endpointRegistry EndpointRegistryInfo\n+     * @return registryId UUID of the created Endpoint Registry ID\n+     * @throws APIManagementException if failed to add EndpointRegistryInfo\n+     */\n+    String addEndpointRegistry(EndpointRegistryInfo endpointRegistry) throws APIManagementException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e38cceed0e90ed4fdfccd4b3b923ac821c094727"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4Mjc2ODAz", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#pullrequestreview-418276803", "createdAt": "2020-05-26T13:05:50Z", "commit": {"oid": "e38cceed0e90ed4fdfccd4b3b923ac821c094727"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzowNTo1MFrOGadUKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzowNTo1MFrOGadUKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM5NjQ1Ng==", "bodyText": "How about having these as Enums?", "url": "https://github.com/wso2/carbon-apimgt/pull/8464#discussion_r430396456", "createdAt": "2020-05-26T13:05:50Z", "author": {"login": "jaadds"}, "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/model/EndpointRegistryInfo.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.apimgt.api.model;\n+\n+/**\n+ * Endpoint Registry Info Object.\n+ */\n+public class EndpointRegistryInfo {\n+\n+    private String uuid = null;\n+\n+    private String name = null;\n+\n+    private String type = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e38cceed0e90ed4fdfccd4b3b923ac821c094727"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2822, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}