{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MzA4MTk0", "number": 9156, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNTowMTowOFrOEjbAHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwNjowMTo1MVrOFP3J0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTc4MDEyOnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNTowMTowOFrOHRwwXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNTowOTozOVrOHRw5qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM4NjY1Mg==", "bodyText": "Is this whole segment duplicated with the latter class?", "url": "https://github.com/wso2/carbon-apimgt/pull/9156#discussion_r488386652", "createdAt": "2020-09-15T05:01:08Z", "author": {"login": "malinthaprasan"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "diffHunk": "@@ -1543,4 +1543,50 @@ public API setExtensionsToAPI(String apiDefinition, API api) throws APIManagemen\n         return api;\n     }\n \n+    /**\n+     * This method will extractX-WSO2-disable-security extension provided in API level\n+     * by mgw and inject that extension to all resources in OAS file\n+     *\n+     * @param swaggerContent String\n+     * @return String\n+     * @throws APIManagementException\n+     */\n+    @Override\n+    public String processDisableSecurityExtension(String swaggerContent) throws APIManagementException {\n+        Swagger swagger = getSwagger(swaggerContent);\n+        Map<String, Object> apiExtensions = swagger.getVendorExtensions();\n+        if (apiExtensions == null) {\n+            return swaggerContent;\n+        }\n+        //Check Disable Security is enabled in API level\n+        boolean apiLevelDisableSecurity = OASParserUtil.getDisableSecurity(apiExtensions);\n+        Map<String, Path> paths = swagger.getPaths();\n+        for (String pathKey : paths.keySet()) {\n+            Map<HttpMethod, Operation> operationsMap = paths.get(pathKey).getOperationMap();\n+            for (Map.Entry<HttpMethod, Operation> entry : operationsMap.entrySet()) {\n+                Operation operation = entry.getValue();\n+                Map<String, Object> resourceExtensions = operation.getVendorExtensions();\n+                boolean extensionsAreEmpty = false;\n+                if (apiLevelDisableSecurity) {\n+                    if (resourceExtensions == null) {\n+                        resourceExtensions = new HashMap<>();\n+                        extensionsAreEmpty = true;\n+                    }\n+                    resourceExtensions.put(APIConstants.SWAGGER_X_AUTH_TYPE, \"None\");\n+                    if (extensionsAreEmpty) {\n+                        operation.setVendorExtensions(resourceExtensions);\n+                    }\n+                } else if (resourceExtensions != null && resourceExtensions.containsKey(APIConstants.X_WSO2_DISABLE_SECURITY)) {\n+                    //Check Disable Security is enabled in resource level\n+                    boolean resourceLevelDisableSecurity = Boolean.parseBoolean(String.valueOf(resourceExtensions.get(APIConstants.X_WSO2_DISABLE_SECURITY)));\n+                    if (resourceLevelDisableSecurity) {\n+                        resourceExtensions.put(APIConstants.SWAGGER_X_AUTH_TYPE, \"None\");\n+                    }\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5c5898e04542722059b18b4a566424bb6b19184"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM4OTAzMw==", "bodyText": "No. There are small changes in this method when suing it in these two classes. Such as  in OAS2Parser the method to retrieve extensions is getVendorExtensions(); and in OAS3Parser it  is getExtensions();. And there are changes in the data types between these two classes.", "url": "https://github.com/wso2/carbon-apimgt/pull/9156#discussion_r488389033", "createdAt": "2020-09-15T05:09:39Z", "author": {"login": "Chamindu36"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "diffHunk": "@@ -1543,4 +1543,50 @@ public API setExtensionsToAPI(String apiDefinition, API api) throws APIManagemen\n         return api;\n     }\n \n+    /**\n+     * This method will extractX-WSO2-disable-security extension provided in API level\n+     * by mgw and inject that extension to all resources in OAS file\n+     *\n+     * @param swaggerContent String\n+     * @return String\n+     * @throws APIManagementException\n+     */\n+    @Override\n+    public String processDisableSecurityExtension(String swaggerContent) throws APIManagementException {\n+        Swagger swagger = getSwagger(swaggerContent);\n+        Map<String, Object> apiExtensions = swagger.getVendorExtensions();\n+        if (apiExtensions == null) {\n+            return swaggerContent;\n+        }\n+        //Check Disable Security is enabled in API level\n+        boolean apiLevelDisableSecurity = OASParserUtil.getDisableSecurity(apiExtensions);\n+        Map<String, Path> paths = swagger.getPaths();\n+        for (String pathKey : paths.keySet()) {\n+            Map<HttpMethod, Operation> operationsMap = paths.get(pathKey).getOperationMap();\n+            for (Map.Entry<HttpMethod, Operation> entry : operationsMap.entrySet()) {\n+                Operation operation = entry.getValue();\n+                Map<String, Object> resourceExtensions = operation.getVendorExtensions();\n+                boolean extensionsAreEmpty = false;\n+                if (apiLevelDisableSecurity) {\n+                    if (resourceExtensions == null) {\n+                        resourceExtensions = new HashMap<>();\n+                        extensionsAreEmpty = true;\n+                    }\n+                    resourceExtensions.put(APIConstants.SWAGGER_X_AUTH_TYPE, \"None\");\n+                    if (extensionsAreEmpty) {\n+                        operation.setVendorExtensions(resourceExtensions);\n+                    }\n+                } else if (resourceExtensions != null && resourceExtensions.containsKey(APIConstants.X_WSO2_DISABLE_SECURITY)) {\n+                    //Check Disable Security is enabled in resource level\n+                    boolean resourceLevelDisableSecurity = Boolean.parseBoolean(String.valueOf(resourceExtensions.get(APIConstants.X_WSO2_DISABLE_SECURITY)));\n+                    if (resourceLevelDisableSecurity) {\n+                        resourceExtensions.put(APIConstants.SWAGGER_X_AUTH_TYPE, \"None\");\n+                    }\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM4NjY1Mg=="}, "originalCommit": {"oid": "d5c5898e04542722059b18b4a566424bb6b19184"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUyMTc2NTk0OnYy", "diffSide": "RIGHT", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwNjowMTo1MVrOIVa-bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QxODo0NToyMlrOIbWXAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTMzMjk3NQ==", "bodyText": "Shall we split it into two lines? Seems the length exceeded", "url": "https://github.com/wso2/carbon-apimgt/pull/9156#discussion_r559332975", "createdAt": "2021-01-18T06:01:51Z", "author": {"login": "vithu30"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "diffHunk": "@@ -1568,4 +1568,50 @@ public API setExtensionsToAPI(String apiDefinition, API api) throws APIManagemen\n         return api;\n     }\n \n+    /**\n+     * This method will extractX-WSO2-disable-security extension provided in API level\n+     * by mgw and inject that extension to all resources in OAS file\n+     *\n+     * @param swaggerContent String\n+     * @return String\n+     * @throws APIManagementException\n+     */\n+    @Override\n+    public String processDisableSecurityExtension(String swaggerContent) throws APIManagementException {\n+        Swagger swagger = getSwagger(swaggerContent);\n+        Map<String, Object> apiExtensions = swagger.getVendorExtensions();\n+        if (apiExtensions == null) {\n+            return swaggerContent;\n+        }\n+        //Check Disable Security is enabled in API level\n+        boolean apiLevelDisableSecurity = OASParserUtil.getDisableSecurity(apiExtensions);\n+        Map<String, Path> paths = swagger.getPaths();\n+        for (String pathKey : paths.keySet()) {\n+            Map<HttpMethod, Operation> operationsMap = paths.get(pathKey).getOperationMap();\n+            for (Map.Entry<HttpMethod, Operation> entry : operationsMap.entrySet()) {\n+                Operation operation = entry.getValue();\n+                Map<String, Object> resourceExtensions = operation.getVendorExtensions();\n+                boolean extensionsAreEmpty = false;\n+                if (apiLevelDisableSecurity) {\n+                    if (resourceExtensions == null) {\n+                        resourceExtensions = new HashMap<>();\n+                        extensionsAreEmpty = true;\n+                    }\n+                    resourceExtensions.put(APIConstants.SWAGGER_X_AUTH_TYPE, \"None\");\n+                    if (extensionsAreEmpty) {\n+                        operation.setVendorExtensions(resourceExtensions);\n+                    }\n+                } else if (resourceExtensions != null && resourceExtensions.containsKey(APIConstants.X_WSO2_DISABLE_SECURITY)) {\n+                    //Check Disable Security is enabled in resource level\n+                    boolean resourceLevelDisableSecurity = Boolean.parseBoolean(String.valueOf(resourceExtensions.get(APIConstants.X_WSO2_DISABLE_SECURITY)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "222c0a8afca247cac828fd125bdfbb4ac8a7abda"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTU0ODgwMA==", "bodyText": "Fixed with c1f8462", "url": "https://github.com/wso2/carbon-apimgt/pull/9156#discussion_r565548800", "createdAt": "2021-01-27T18:45:22Z", "author": {"login": "Chamindu36"}, "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "diffHunk": "@@ -1568,4 +1568,50 @@ public API setExtensionsToAPI(String apiDefinition, API api) throws APIManagemen\n         return api;\n     }\n \n+    /**\n+     * This method will extractX-WSO2-disable-security extension provided in API level\n+     * by mgw and inject that extension to all resources in OAS file\n+     *\n+     * @param swaggerContent String\n+     * @return String\n+     * @throws APIManagementException\n+     */\n+    @Override\n+    public String processDisableSecurityExtension(String swaggerContent) throws APIManagementException {\n+        Swagger swagger = getSwagger(swaggerContent);\n+        Map<String, Object> apiExtensions = swagger.getVendorExtensions();\n+        if (apiExtensions == null) {\n+            return swaggerContent;\n+        }\n+        //Check Disable Security is enabled in API level\n+        boolean apiLevelDisableSecurity = OASParserUtil.getDisableSecurity(apiExtensions);\n+        Map<String, Path> paths = swagger.getPaths();\n+        for (String pathKey : paths.keySet()) {\n+            Map<HttpMethod, Operation> operationsMap = paths.get(pathKey).getOperationMap();\n+            for (Map.Entry<HttpMethod, Operation> entry : operationsMap.entrySet()) {\n+                Operation operation = entry.getValue();\n+                Map<String, Object> resourceExtensions = operation.getVendorExtensions();\n+                boolean extensionsAreEmpty = false;\n+                if (apiLevelDisableSecurity) {\n+                    if (resourceExtensions == null) {\n+                        resourceExtensions = new HashMap<>();\n+                        extensionsAreEmpty = true;\n+                    }\n+                    resourceExtensions.put(APIConstants.SWAGGER_X_AUTH_TYPE, \"None\");\n+                    if (extensionsAreEmpty) {\n+                        operation.setVendorExtensions(resourceExtensions);\n+                    }\n+                } else if (resourceExtensions != null && resourceExtensions.containsKey(APIConstants.X_WSO2_DISABLE_SECURITY)) {\n+                    //Check Disable Security is enabled in resource level\n+                    boolean resourceLevelDisableSecurity = Boolean.parseBoolean(String.valueOf(resourceExtensions.get(APIConstants.X_WSO2_DISABLE_SECURITY)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTMzMjk3NQ=="}, "originalCommit": {"oid": "222c0a8afca247cac828fd125bdfbb4ac8a7abda"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3062, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}