{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3NDk0MzA2", "number": 9372, "title": "Rest api client for the Service Catalog Operations", "bodyText": "This PR adds a rest api client implementation for the Service Catalog UI Operations.\nProvides a fix for wso2/product-apim#9471", "createdAt": "2020-11-09T05:57:19Z", "url": "https://github.com/wso2/carbon-apimgt/pull/9372", "merged": true, "mergeCommit": {"oid": "fe93d972f2437004725a9a6c032ec3ec5b062320"}, "closed": true, "closedAt": "2020-11-19T07:55:27Z", "author": {"login": "tharikaGitHub"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdauO7IAH2gAyNTE3NDk0MzA2OjcyNmVhYTdhZjRhZDBhMjIzMjU5YmE5ZGY4MzJmYmI5MmRkYTdjNmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdcT5k6AH2gAyNTE3NDk0MzA2OjAxOGQ1MjEwYWExZTNhYmYxMGRiNjFmOGMwMjJiZmZhNGVjOTE5NjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "726eaa7af4ad0a223259ba9df832fbb92dda7c6b", "author": {"user": {"login": "tharikaGitHub", "name": "Tharika Madurapperuma"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/726eaa7af4ad0a223259ba9df832fbb92dda7c6b", "committedDate": "2020-11-09T05:51:12Z", "message": "Add rest API client for service catalog UI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8435649111f0e9cae13b616031e3addf63256e83", "author": {"user": {"login": "tharikaGitHub", "name": "Tharika Madurapperuma"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/8435649111f0e9cae13b616031e3addf63256e83", "committedDate": "2020-11-09T05:51:13Z", "message": "Add new service catalog rest api def"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c14543f3236e973449082edf9c19664bc272e7a3", "author": {"user": {"login": "tharikaGitHub", "name": "Tharika Madurapperuma"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/c14543f3236e973449082edf9c19664bc272e7a3", "committedDate": "2020-11-09T05:51:13Z", "message": "Add service catalog resources for scope validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec189e33d4d27ce124b4abe550f6d727e2c21ec6", "author": {"user": {"login": "tharikaGitHub", "name": "Tharika Madurapperuma"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/ec189e33d4d27ce124b4abe550f6d727e2c21ec6", "committedDate": "2020-11-09T05:51:13Z", "message": "Remove worker logic for service catalog client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "713567df104c17b4ccde05b91dff31e6e3cfa192", "author": {"user": {"login": "tharikaGitHub", "name": "Tharika Madurapperuma"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/713567df104c17b4ccde05b91dff31e6e3cfa192", "committedDate": "2020-11-09T05:51:13Z", "message": "Refactor api client for service catalog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c9ec38bbaf5d55790b2be309f70f81efce185e6", "author": {"user": {"login": "tharikaGitHub", "name": "Tharika Madurapperuma"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/6c9ec38bbaf5d55790b2be309f70f81efce185e6", "committedDate": "2020-11-09T05:51:13Z", "message": "Add rest api definitions for service catalog js"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d809218c06408eaf067e64e947bfe95d087ce7ac", "author": {"user": {"login": "tharikaGitHub", "name": "Tharika Madurapperuma"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/d809218c06408eaf067e64e947bfe95d087ce7ac", "committedDate": "2020-11-09T05:51:13Z", "message": "Add mock responses for the rest api calls"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e63f60600130a8a8acb7c69b9e9b0ac131391528", "author": {"user": {"login": "tharikaGitHub", "name": "Tharika Madurapperuma"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/e63f60600130a8a8acb7c69b9e9b0ac131391528", "committedDate": "2020-11-09T05:51:13Z", "message": "Add service catalog scopes for auth request"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61362ab348281920d5d15278123e8f2002bf5e78", "author": {"user": {"login": "tharikaGitHub", "name": "Tharika Madurapperuma"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/61362ab348281920d5d15278123e8f2002bf5e78", "committedDate": "2020-11-09T05:55:22Z", "message": "Change license header"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NzY4ODgy", "url": "https://github.com/wso2/carbon-apimgt/pull/9372#pullrequestreview-529768882", "createdAt": "2020-11-13T06:12:07Z", "commit": {"oid": "61362ab348281920d5d15278123e8f2002bf5e78"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNjoxMjowOFrOHydg5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNjoxMjowOFrOHydg5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY3NDQwNA==", "bodyText": "Shall we combine this check and the below check (if conditions)\nif (clientType === Utils.CONST.API_CLIENT) {\n\nand update the _APIClientMap if there is no client afterward", "url": "https://github.com/wso2/carbon-apimgt/pull/9372#discussion_r522674404", "createdAt": "2020-11-13T06:12:08Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/data/APIClientFactory.js", "diffHunk": "@@ -43,22 +45,30 @@ class APIClientFactory {\n      * @param {Object} environment\n      * @returns {APIClient} APIClient object for the environment\n      */\n-    getAPIClient(environment) {\n+    getAPIClient(environment, clientType) {\n         const {\n             label,\n         } = environment;\n         if (label === undefined) {\n             throw new Error('Environment label is undefined, Please provide'\n                 + 'a valid environment object with keys (host,label & loginTokenPath)');\n         }\n-        let apiClient = this._APIClientMap.get(environment.label);\n-\n+        let apiClient;\n+        if (clientType === Utils.CONST.API_CLIENT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61362ab348281920d5d15278123e8f2002bf5e78"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5Nzc5Mjg2", "url": "https://github.com/wso2/carbon-apimgt/pull/9372#pullrequestreview-529779286", "createdAt": "2020-11-13T06:18:32Z", "commit": {"oid": "61362ab348281920d5d15278123e8f2002bf5e78"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNjoxODozMlrOHydnGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNjoxODozMlrOHydnGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY3NTk5Mw==", "bodyText": "IMO it's good if we can dynamically generate mock responses from the open API definition. For example, using prism\nThis would be helpful as a temporary solution to this rest API mocking and testing inn the future", "url": "https://github.com/wso2/carbon-apimgt/pull/9372#discussion_r522675993", "createdAt": "2020-11-13T06:18:32Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/data/MockResponses.js", "diffHunk": "@@ -0,0 +1,201 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+/**\n+  *\n+  * Return sample mocked model data for getSettings\n+  * @export\n+  * @returns {*} Mocked Service Catalog model\n+  */\n+export function getSettings() {\n+    const response = {\n+        scopes: [\n+            'string',\n+        ],\n+    };\n+    return Promise.resolve({ body: response });\n+}\n+\n+/**\n+  *\n+  * Return sample mocked model data for searchServices\n+  * @export\n+  * @returns {*} Mocked Service Catalog model\n+  */\n+export function searchServices() {\n+    const response = {\n+        limit: 0,\n+        offset: 0,\n+        total: 1,\n+        list: [\n+            {\n+                id: '01234567-0123-0123-0123-012345678901',\n+                name: 'Pizzashack-Endpoint',\n+                displayName: 'Pizzashack-Endpoint',\n+                description: 'A Catalog Entry that exposes a REST endpoint',\n+                version: 'v1',\n+                serviceUrl: 'http://localhost/pizzashack',\n+                definitionType: 'OAS3',\n+                securityType: 'BASIC',\n+                mutualSSLEnabled: false,\n+                usage: 1,\n+                createdTime: '2020-02-20T13:57:16.229Z',\n+                lastUpdatedTime: '2020-02-20T13:57:16.229Z',\n+                etag: '32c890312cfadc94a7c1153f65a4f100',\n+            },\n+        ],\n+        pagination: {\n+            offset: 0,\n+            limit: 1,\n+            total: 10,\n+            next: 'string',\n+            previous: 'string',\n+        },\n+    };\n+    return Promise.resolve({ body: response });\n+}\n+\n+/**\n+  *\n+  * Return sample mocked model data for checkServiceExistence\n+  * @export\n+  * @returns {*} Mocked Service Catalog model\n+  */\n+export function checkServiceExistence() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61362ab348281920d5d15278123e8f2002bf5e78"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NzgyNDgz", "url": "https://github.com/wso2/carbon-apimgt/pull/9372#pullrequestreview-529782483", "createdAt": "2020-11-13T06:20:27Z", "commit": {"oid": "61362ab348281920d5d15278123e8f2002bf5e78"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNjoyMDoyOFrOHydpGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNjoyMDoyOFrOHydpGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY3NjUwNQ==", "bodyText": "Shall we move these methods into a class as static methods, So if in the future if we add a new method to mock we don't need to change/update the import statements", "url": "https://github.com/wso2/carbon-apimgt/pull/9372#discussion_r522676505", "createdAt": "2020-11-13T06:20:28Z", "author": {"login": "tmkasun"}, "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/data/ServiceCatalog.js", "diffHunk": "@@ -0,0 +1,277 @@\n+/**\n+ * Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* eslint-disable */\n+import cloneDeep from 'lodash.clonedeep';\n+import Utils from './Utils';\n+import {\n+    getSettings,\n+    searchServices,\n+    checkServiceExistence,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61362ab348281920d5d15278123e8f2002bf5e78"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5ODA5NDIx", "url": "https://github.com/wso2/carbon-apimgt/pull/9372#pullrequestreview-529809421", "createdAt": "2020-11-13T06:48:08Z", "commit": {"oid": "61362ab348281920d5d15278123e8f2002bf5e78"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "929acf282539bdf1dd875f64e98ceec5152609c3", "author": {"user": {"login": "tharikaGitHub", "name": "Tharika Madurapperuma"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/929acf282539bdf1dd875f64e98ceec5152609c3", "committedDate": "2020-11-14T04:11:26Z", "message": "Add review fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "018d5210aa1e3abf10db61f8c022bffa4ec91964", "author": {"user": {"login": "tharikaGitHub", "name": "Tharika Madurapperuma"}}, "url": "https://github.com/wso2/carbon-apimgt/commit/018d5210aa1e3abf10db61f8c022bffa4ec91964", "committedDate": "2020-11-14T04:18:12Z", "message": "Remove search service mock responses"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3091, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}