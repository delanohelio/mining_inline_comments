{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NDQ2NjQ1", "number": 1413, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNjoxNDozMVrOEEjdoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNjozNzowOFrOEE8tFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjEwNzg0OnYy", "diffSide": "RIGHT", "path": "digdag-core/src/main/java/io/digdag/core/workflow/WorkflowCompiler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNjoxNDozMVrOGiP0Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwODoxNDowNVrOGlkeqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU2MzkzOQ==", "bodyText": "Maybe the following is slightly better while it changes how to handle negative figure for limit ?\n    if (pc.isParallel()) {\n        if (pc.getParallelLimit() > 0) {\n            :\n        }\n        else {\n            :\n        }\n    }\n    else {\n        :\n    }", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r438563939", "createdAt": "2020-06-11T06:14:31Z", "author": {"login": "komamitsu"}, "path": "digdag-core/src/main/java/io/digdag/core/workflow/WorkflowCompiler.java", "diffHunk": "@@ -231,22 +232,25 @@ else if (config.has(\"_type\") || config.getKeys().stream().anyMatch(key -> key.en\n                     .map(pair -> collect(Optional.of(tb), fullName, pair.getKey(), pair.getValue(), validator))\n                     .collect(Collectors.toList());\n \n-                if (config.get(\"_parallel\", boolean.class, false)) {\n-                    // _after: is valid only when parallel: is true\n-                    Map<String, TaskBuilder> names = new HashMap<>();\n+                ParallelControl pc = new ParallelControl(config);\n+                Map<String, TaskBuilder> names = new HashMap<>();\n+                if (pc.isParallel() && pc.getParallelLimit() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA0ODE2OQ==", "bodyText": "Good point, updated 3a11951", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r442048169", "createdAt": "2020-06-18T08:14:05Z", "author": {"login": "szyn"}, "path": "digdag-core/src/main/java/io/digdag/core/workflow/WorkflowCompiler.java", "diffHunk": "@@ -231,22 +232,25 @@ else if (config.has(\"_type\") || config.getKeys().stream().anyMatch(key -> key.en\n                     .map(pair -> collect(Optional.of(tb), fullName, pair.getKey(), pair.getValue(), validator))\n                     .collect(Collectors.toList());\n \n-                if (config.get(\"_parallel\", boolean.class, false)) {\n-                    // _after: is valid only when parallel: is true\n-                    Map<String, TaskBuilder> names = new HashMap<>();\n+                ParallelControl pc = new ParallelControl(config);\n+                Map<String, TaskBuilder> names = new HashMap<>();\n+                if (pc.isParallel() && pc.getParallelLimit() == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU2MzkzOQ=="}, "originalCommit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjUwNTA1OnYy", "diffSide": "RIGHT", "path": "digdag-core/src/main/java/io/digdag/core/workflow/WorkflowCompiler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODozNDoxOVrOGiTweQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODozNDoxOVrOGiTweQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyODQ3Mw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r438628473", "createdAt": "2020-06-11T08:34:19Z", "author": {"login": "komamitsu"}, "path": "digdag-core/src/main/java/io/digdag/core/workflow/WorkflowCompiler.java", "diffHunk": "@@ -231,22 +232,25 @@ else if (config.has(\"_type\") || config.getKeys().stream().anyMatch(key -> key.en\n                     .map(pair -> collect(Optional.of(tb), fullName, pair.getKey(), pair.getValue(), validator))\n                     .collect(Collectors.toList());\n \n-                if (config.get(\"_parallel\", boolean.class, false)) {\n-                    // _after: is valid only when parallel: is true\n-                    Map<String, TaskBuilder> names = new HashMap<>();\n+                ParallelControl pc = new ParallelControl(config);\n+                Map<String, TaskBuilder> names = new HashMap<>();\n+                if (pc.isParallel() && pc.getParallelLimit() == 0) {\n                     for (TaskBuilder subtask : subtasks) {\n-                        if (subtask.getConfig().get(\"_background\", boolean.class, false)) {\n-                            throw new ConfigException(\"Setting \\\"_background: true\\\" option is invalid (unnecessary) if its parent task has \\\"_parallel: true\\\" option\");\n-                        }\n-                        for (String upName : subtask.getConfig().getListOrEmpty(\"_after\", String.class)) {\n-                            TaskBuilder up = names.get(upName);\n-                            if (up == null) {\n-                                throw new ConfigException(\"Dependency task '\"+upName+\"' does not exist\");\n+                        parseSubtaskWithParallel(names, subtask);\n+                    }\n+                }\n+                else if (pc.isParallel() && pc.getParallelLimit() > 0) {\n+                    int limit = pc.getParallelLimit();\n+                    List<TaskBuilder> beforeList = new ArrayList<>();\n+                    for (List<TaskBuilder> chunkedSubtasks : Lists.partition(subtasks, limit)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjEwOTIyOnYy", "diffSide": "RIGHT", "path": "digdag-core/src/test/java/io/digdag/core/workflow/TaskDependenciesTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNToyNDozOVrOGi3brw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNToyNDozOVrOGi3brw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxMjk3NQ==", "bodyText": "Could you adjust the alignment of expected column?", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r439212975", "createdAt": "2020-06-12T05:24:39Z", "author": {"login": "komamitsu"}, "path": "digdag-core/src/test/java/io/digdag/core/workflow/TaskDependenciesTest.java", "diffHunk": "@@ -212,4 +214,113 @@ public void testGroupRetryTaskDependencies()\n             return null;\n         });\n     }\n+\n+    @Test\n+    public void testParallelLimitDependencies()\n+            throws Exception {\n+        StoredSessionAttemptWithSession attempt =\n+                runWorkflow(embed, projectPath, \"parallel_limit\", loadYamlResource(\"/io/digdag/core/workflow/parallel_limit.dig\"));\n+        tm.begin(() -> {\n+            assertThat(attempt.getStateFlags().isSuccess(), is(true));\n+            List<ArchivedTask> tasks = localSite.getSessionStore().getTasksOfAttempt(attempt.getId());\n+            // # parallel_limit.dig\n+            // +repeat:\n+            //   loop>: 5\n+            //   _parallel:\n+            //     limit: 2\n+            //   _do:\n+            //     +step1:\n+            //       echo>: '${this.task_name}'\n+            //     +step2:\n+            //       echo>: '${this.task_name}'\n+            //     +step3:\n+            //       echo>: '${this.task_name}'\n+            //\n+            // id | tasks index   | full_name                                 | expected parent_id | expected upstream_id \u3000", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjEyMzkwOnYy", "diffSide": "RIGHT", "path": "digdag-core/src/test/java/io/digdag/core/workflow/TaskDependenciesTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNTozMzowNlrOGi3kZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNTozMzowNlrOGi3kZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxNTIwNg==", "bodyText": "These 2 entries have wrong upstream_id?", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r439215206", "createdAt": "2020-06-12T05:33:06Z", "author": {"login": "komamitsu"}, "path": "digdag-core/src/test/java/io/digdag/core/workflow/TaskDependenciesTest.java", "diffHunk": "@@ -212,4 +214,113 @@ public void testGroupRetryTaskDependencies()\n             return null;\n         });\n     }\n+\n+    @Test\n+    public void testParallelLimitDependencies()\n+            throws Exception {\n+        StoredSessionAttemptWithSession attempt =\n+                runWorkflow(embed, projectPath, \"parallel_limit\", loadYamlResource(\"/io/digdag/core/workflow/parallel_limit.dig\"));\n+        tm.begin(() -> {\n+            assertThat(attempt.getStateFlags().isSuccess(), is(true));\n+            List<ArchivedTask> tasks = localSite.getSessionStore().getTasksOfAttempt(attempt.getId());\n+            // # parallel_limit.dig\n+            // +repeat:\n+            //   loop>: 5\n+            //   _parallel:\n+            //     limit: 2\n+            //   _do:\n+            //     +step1:\n+            //       echo>: '${this.task_name}'\n+            //     +step2:\n+            //       echo>: '${this.task_name}'\n+            //     +step3:\n+            //       echo>: '${this.task_name}'\n+            //\n+            // id | tasks index   | full_name                                 | expected parent_id | expected upstream_id \u3000\n+            // 1  | tasks.get(0)  | +parallel_limit                         |                    |\n+            // 2  | tasks.get(1)  | +parallel_limit+repeat                  | 1                  |\n+            // 3  | tasks.get(2)  | +parallel_limit+repeat^sub              | 2                  |\n+            // 4  | tasks.get(3)  | +parallel_limit+repeat^sub+loop-0       | 3                  |\n+            // 5  | tasks.get(4)  | +parallel_limit+repeat^sub+loop-0+step1 | 4                  |\n+            // 6  | tasks.get(5)  | +parallel_limit+repeat^sub+loop-0+step2 | 4                  | 5\n+            // 7  | tasks.get(6)  | +parallel_limit+repeat^sub+loop-0+step3 | 4                  | 6\n+            // 8  | tasks.get(7)  | +parallel_limit+repeat^sub+loop-1       | 3                  |\n+            // 9  | tasks.get(8)  | +parallel_limit+repeat^sub+loop-1+step1 | 8                  | 9", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjEyOTQ3OnYy", "diffSide": "RIGHT", "path": "digdag-core/src/test/java/io/digdag/core/workflow/TaskDependenciesTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNTozNjo0NlrOGi3n_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwODoxNzo0M1rOGlkm_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxNjEyNg==", "bodyText": "4,8 is correct?", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r439216126", "createdAt": "2020-06-12T05:36:46Z", "author": {"login": "komamitsu"}, "path": "digdag-core/src/test/java/io/digdag/core/workflow/TaskDependenciesTest.java", "diffHunk": "@@ -212,4 +214,113 @@ public void testGroupRetryTaskDependencies()\n             return null;\n         });\n     }\n+\n+    @Test\n+    public void testParallelLimitDependencies()\n+            throws Exception {\n+        StoredSessionAttemptWithSession attempt =\n+                runWorkflow(embed, projectPath, \"parallel_limit\", loadYamlResource(\"/io/digdag/core/workflow/parallel_limit.dig\"));\n+        tm.begin(() -> {\n+            assertThat(attempt.getStateFlags().isSuccess(), is(true));\n+            List<ArchivedTask> tasks = localSite.getSessionStore().getTasksOfAttempt(attempt.getId());\n+            // # parallel_limit.dig\n+            // +repeat:\n+            //   loop>: 5\n+            //   _parallel:\n+            //     limit: 2\n+            //   _do:\n+            //     +step1:\n+            //       echo>: '${this.task_name}'\n+            //     +step2:\n+            //       echo>: '${this.task_name}'\n+            //     +step3:\n+            //       echo>: '${this.task_name}'\n+            //\n+            // id | tasks index   | full_name                                 | expected parent_id | expected upstream_id \u3000\n+            // 1  | tasks.get(0)  | +parallel_limit                         |                    |\n+            // 2  | tasks.get(1)  | +parallel_limit+repeat                  | 1                  |\n+            // 3  | tasks.get(2)  | +parallel_limit+repeat^sub              | 2                  |\n+            // 4  | tasks.get(3)  | +parallel_limit+repeat^sub+loop-0       | 3                  |\n+            // 5  | tasks.get(4)  | +parallel_limit+repeat^sub+loop-0+step1 | 4                  |\n+            // 6  | tasks.get(5)  | +parallel_limit+repeat^sub+loop-0+step2 | 4                  | 5\n+            // 7  | tasks.get(6)  | +parallel_limit+repeat^sub+loop-0+step3 | 4                  | 6\n+            // 8  | tasks.get(7)  | +parallel_limit+repeat^sub+loop-1       | 3                  |\n+            // 9  | tasks.get(8)  | +parallel_limit+repeat^sub+loop-1+step1 | 8                  | 9\n+            // 10 | tasks.get(9)  | +parallel_limit+repeat^sub+loop-1+step2 | 8                  | 10\n+            // 11 | tasks.get(10) | +parallel_limit+repeat^sub+loop-1+step3 | 8                  | 4,8", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA1MDMwMg==", "bodyText": "Thank you! It's wrong. Fixed: 75a87b1", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r442050302", "createdAt": "2020-06-18T08:17:43Z", "author": {"login": "szyn"}, "path": "digdag-core/src/test/java/io/digdag/core/workflow/TaskDependenciesTest.java", "diffHunk": "@@ -212,4 +214,113 @@ public void testGroupRetryTaskDependencies()\n             return null;\n         });\n     }\n+\n+    @Test\n+    public void testParallelLimitDependencies()\n+            throws Exception {\n+        StoredSessionAttemptWithSession attempt =\n+                runWorkflow(embed, projectPath, \"parallel_limit\", loadYamlResource(\"/io/digdag/core/workflow/parallel_limit.dig\"));\n+        tm.begin(() -> {\n+            assertThat(attempt.getStateFlags().isSuccess(), is(true));\n+            List<ArchivedTask> tasks = localSite.getSessionStore().getTasksOfAttempt(attempt.getId());\n+            // # parallel_limit.dig\n+            // +repeat:\n+            //   loop>: 5\n+            //   _parallel:\n+            //     limit: 2\n+            //   _do:\n+            //     +step1:\n+            //       echo>: '${this.task_name}'\n+            //     +step2:\n+            //       echo>: '${this.task_name}'\n+            //     +step3:\n+            //       echo>: '${this.task_name}'\n+            //\n+            // id | tasks index   | full_name                                 | expected parent_id | expected upstream_id \u3000\n+            // 1  | tasks.get(0)  | +parallel_limit                         |                    |\n+            // 2  | tasks.get(1)  | +parallel_limit+repeat                  | 1                  |\n+            // 3  | tasks.get(2)  | +parallel_limit+repeat^sub              | 2                  |\n+            // 4  | tasks.get(3)  | +parallel_limit+repeat^sub+loop-0       | 3                  |\n+            // 5  | tasks.get(4)  | +parallel_limit+repeat^sub+loop-0+step1 | 4                  |\n+            // 6  | tasks.get(5)  | +parallel_limit+repeat^sub+loop-0+step2 | 4                  | 5\n+            // 7  | tasks.get(6)  | +parallel_limit+repeat^sub+loop-0+step3 | 4                  | 6\n+            // 8  | tasks.get(7)  | +parallel_limit+repeat^sub+loop-1       | 3                  |\n+            // 9  | tasks.get(8)  | +parallel_limit+repeat^sub+loop-1+step1 | 8                  | 9\n+            // 10 | tasks.get(9)  | +parallel_limit+repeat^sub+loop-1+step2 | 8                  | 10\n+            // 11 | tasks.get(10) | +parallel_limit+repeat^sub+loop-1+step3 | 8                  | 4,8", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxNjEyNg=="}, "originalCommit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjEzMjkyOnYy", "diffSide": "RIGHT", "path": "digdag-core/src/test/resources/io/digdag/core/workflow/parallel_limit.dig", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNTozOTowOFrOGi3qLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwODoxNTowNVrOGlkg0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxNjY4Ng==", "bodyText": "Please add a newline at the end of the string", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r439216686", "createdAt": "2020-06-12T05:39:08Z", "author": {"login": "komamitsu"}, "path": "digdag-core/src/test/resources/io/digdag/core/workflow/parallel_limit.dig", "diffHunk": "@@ -0,0 +1,11 @@\n++repeat:\n+  loop>: 5\n+  _parallel:\n+    limit: 2\n+  _do:\n+    +step1:\n+      echo>: '${this.task_name}'\n+    +step2:\n+      echo>: '${this.task_name}'\n+    +step3:\n+      echo>: '${this.task_name}'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA0ODcyMw==", "bodyText": "Fixed: cf56b4d", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r442048723", "createdAt": "2020-06-18T08:15:05Z", "author": {"login": "szyn"}, "path": "digdag-core/src/test/resources/io/digdag/core/workflow/parallel_limit.dig", "diffHunk": "@@ -0,0 +1,11 @@\n++repeat:\n+  loop>: 5\n+  _parallel:\n+    limit: 2\n+  _do:\n+    +step1:\n+      echo>: '${this.task_name}'\n+    +step2:\n+      echo>: '${this.task_name}'\n+    +step3:\n+      echo>: '${this.task_name}'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxNjY4Ng=="}, "originalCommit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjI0MzQwOnYy", "diffSide": "RIGHT", "path": "digdag-docs/src/operators/for_each.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNjozNzowOFrOGi4tsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwODoxNDo0NVrOGlkgFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIzMzk3MA==", "bodyText": "the number of tasks running in parallel is a bit clearer?", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r439233970", "createdAt": "2020-06-12T06:37:08Z", "author": {"login": "komamitsu"}, "path": "digdag-docs/src/operators/for_each.md", "diffHunk": "@@ -38,16 +38,26 @@\n   for_each>: {i: '[1, 2, 3]'}\n   ```\n \n-* **\\_parallel**: BOOLEAN\n+* **\\_parallel**: BOOLEAN | OBJECT\n \n   Runs the repeating tasks in parallel.\n+  If ``_parallel: {limit: N}`` (N is an integer: 1, 2, 3, \u2026) parameter is set,\n+  the number of loops running in parallel is limited to N.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA0ODUzNA==", "bodyText": "Fixed: ad5ea45", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r442048534", "createdAt": "2020-06-18T08:14:45Z", "author": {"login": "szyn"}, "path": "digdag-docs/src/operators/for_each.md", "diffHunk": "@@ -38,16 +38,26 @@\n   for_each>: {i: '[1, 2, 3]'}\n   ```\n \n-* **\\_parallel**: BOOLEAN\n+* **\\_parallel**: BOOLEAN | OBJECT\n \n   Runs the repeating tasks in parallel.\n+  If ``_parallel: {limit: N}`` (N is an integer: 1, 2, 3, \u2026) parameter is set,\n+  the number of loops running in parallel is limited to N.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIzMzk3MA=="}, "originalCommit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1134, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}