{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NDQ2NjQ1", "number": 1413, "title": "Limiting the number of tasks/loops in _parallel", "bodyText": "Overview\nIn addition to current _parallel features, this PR will introduce the parallel number limitation.\nIn order to achieve it, this PR makes JSON objects can also be acceptable for _parallel, it's for _parallel: {limit: N} (N is an integer: 1, 2, 3, \u2026) syntax.\nUse Cases\nFor task groups\nIf _parallel: {limit: N} parameter is set to a group, child tasks in the group run in parallel is limited to N.\nNote that grandchildren are not affected, same as current behavior.\nFor loop operators\nIf _parallel: {limit: N} parameter is set, the number of loops running in parallel is limited to N.\nNote that tasks in the loop will be running in serial, same as current behavior.\n\nExamples\nbasic.dig\n_parallel: {limit: N} is set to a task group.\n+prepare:\n  _parallel:\n    limit: 3\n  +step1:\n    sh>: sleep 2 && echo '${this.task_name}'\n  +step2:\n    sh>: sleep 2 && echo '${this.task_name}'\n  +step3:\n    sh>: sleep 2 && echo '${this.task_name}'\n  +step4:\n    sh>: sleep 2 && echo '${this.task_name}'\n  +step5:\n    sh>: sleep 2 && echo '${this.task_name}'\nIn this case, from step1, step2 and step3 run in parallel, then step4 and step5 run in parallel. +data1 and +data2 need to be successful.\n\nExample task log\n\n..snip..\n2020-06-05 18:12:17 +0900 [INFO] (main): Starting a new session project id=1 workflow name=basic session_time=2020-06-05T00:00:00+00:00\n2020-06-05 18:12:18 +0900 [INFO] (0018@[0:default]+basic+prepare+step2): sh>: sleep 2 && echo '+basic+prepare+step2'\n2020-06-05 18:12:18 +0900 [INFO] (0019@[0:default]+basic+prepare+step3): sh>: sleep 2 && echo '+basic+prepare+step3'\n2020-06-05 18:12:18 +0900 [INFO] (0017@[0:default]+basic+prepare+step1): sh>: sleep 2 && echo '+basic+prepare+step1'\n+basic+prepare+step1\n+basic+prepare+step3\n+basic+prepare+step2\n2020-06-05 18:12:20 +0900 [INFO] (0019@[0:default]+basic+prepare+step4): sh>: sleep 2 && echo '+basic+prepare+step4'\n2020-06-05 18:12:20 +0900 [INFO] (0018@[0:default]+basic+prepare+step5): sh>: sleep 2 && echo '+basic+prepare+step5'\n+basic+prepare+step5\n+basic+prepare+step4\nSuccess.\n..snip..\n\n\n\n\nrepeat.dig\n_parallel: {limit: N} is set to loop.\n+repeat:\n  loop>: 3\n  _parallel:\n    limit: 2\n  _do:\n    +step1:\n      sh>: sleep 2 && echo '${this.task_name}'\n    +step2:\n      sh>: sleep 2 && echo '${this.task_name}'\n    +step3:\n      sh>: sleep 2 && echo '${this.task_name}'\nIn this case, generates three loops, thus loop0, loop1 run in parallel, and then loop2. But tasks (steps 1 to 3) in the loop run in series.\n\nExample task log\n\n..snip..\n2020-06-05 18:00:06 +0900 [INFO] (main): Starting a new session project id=1 workflow name=repeat session_time=2020-06-05T00:00:00+00:00\n2020-06-05 18:00:06 +0900 [INFO] (0017@[0:default]+repeat+repeat): loop>: 3\n2020-06-05 18:00:06 +0900 [INFO] (0018@[0:default]+repeat+repeat^sub+loop-1+step1): sh>: sleep 2 && echo '+repeat+repeat^sub+loop-1+step1'\n2020-06-05 18:00:06 +0900 [INFO] (0017@[0:default]+repeat+repeat^sub+loop-0+step1): sh>: sleep 2 && echo '+repeat+repeat^sub+loop-0+step1'\n+repeat+repeat^sub+loop-1+step1\n+repeat+repeat^sub+loop-0+step1\n2020-06-05 18:00:09 +0900 [INFO] (0018@[0:default]+repeat+repeat^sub+loop-1+step2): sh>: sleep 2 && echo '+repeat+repeat^sub+loop-1+step2'\n2020-06-05 18:00:09 +0900 [INFO] (0017@[0:default]+repeat+repeat^sub+loop-0+step2): sh>: sleep 2 && echo '+repeat+repeat^sub+loop-0+step2'\n+repeat+repeat^sub+loop-1+step2\n+repeat+repeat^sub+loop-0+step2\n2020-06-05 18:00:11 +0900 [INFO] (0017@[0:default]+repeat+repeat^sub+loop-0+step3): sh>: sleep 2 && echo '+repeat+repeat^sub+loop-0+step3'\n2020-06-05 18:00:11 +0900 [INFO] (0018@[0:default]+repeat+repeat^sub+loop-1+step3): sh>: sleep 2 && echo '+repeat+repeat^sub+loop-1+step3'\n+repeat+repeat^sub+loop-0+step3\n+repeat+repeat^sub+loop-1+step3\n2020-06-05 18:00:13 +0900 [INFO] (0018@[0:default]+repeat+repeat^sub+loop-2+step1): sh>: sleep 2 && echo '+repeat+repeat^sub+loop-2+step1'\n+repeat+repeat^sub+loop-2+step1\n2020-06-05 18:00:15 +0900 [INFO] (0018@[0:default]+repeat+repeat^sub+loop-2+step2): sh>: sleep 2 && echo '+repeat+repeat^sub+loop-2+step2'\n+repeat+repeat^sub+loop-2+step2\n2020-06-05 18:00:17 +0900 [INFO] (0018@[0:default]+repeat+repeat^sub+loop-2+step3): sh>: sleep 2 && echo '+repeat+repeat^sub+loop-2+step3'\n+repeat+repeat^sub+loop-2+step3\nSuccess.\n..snip..", "createdAt": "2020-06-05T13:23:09Z", "url": "https://github.com/treasure-data/digdag/pull/1413", "merged": true, "mergeCommit": {"oid": "2926cf52741ed3e6b0a19647439c328bb43bbea0"}, "closed": true, "closedAt": "2020-06-18T08:49:36Z", "author": {"login": "szyn"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoJIaLgH2gAyNDI4NDQ2NjQ1OjJlNmM4NjVhOTRkYzFhNDZmYWY4MDI0OWIxNjViMGEwODljMzY4YTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqdzeDAH2gAyNDI4NDQ2NjQ1OjNhMTE5NTEwMWYyZmQwZjcwNmM5ZTQyMGNiNzk0MWY5MTBiYjM3M2M=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2e6c865a94dc1a46faf80249b165b0a089c368a0", "author": {"user": {"login": "szyn", "name": "Shota Suzuki"}}, "url": "https://github.com/treasure-data/digdag/commit/2e6c865a94dc1a46faf80249b165b0a089c368a0", "committedDate": "2020-06-05T02:21:23Z", "message": "Update _parallel parameter to accept more options\n\nCurrently, _parallel: BOOLEAN can be accepted, but this makes JSON objects can also be acceptable."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d6de023cb4d245fbebbf6f18c36405fb55ae108", "author": {"user": {"login": "szyn", "name": "Shota Suzuki"}}, "url": "https://github.com/treasure-data/digdag/commit/6d6de023cb4d245fbebbf6f18c36405fb55ae108", "committedDate": "2020-06-05T02:21:23Z", "message": "Extract method parseSubtaskWithParallel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e34078652da0ba12bc03dd02ad90129ec5ee649", "author": {"user": {"login": "szyn", "name": "Shota Suzuki"}}, "url": "https://github.com/treasure-data/digdag/commit/6e34078652da0ba12bc03dd02ad90129ec5ee649", "committedDate": "2020-06-05T02:21:23Z", "message": "Update to accept _parallel parameter as JsonNode instead of boolean\n\nAdd support for limiting the number of concurrent runs (loops) by using _parallel: {limit: N} parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2b4fb769a132d0604ba099f50c09aec314e2fc8", "author": {"user": {"login": "szyn", "name": "Shota Suzuki"}}, "url": "https://github.com/treasure-data/digdag/commit/f2b4fb769a132d0604ba099f50c09aec314e2fc8", "committedDate": "2020-06-05T02:21:23Z", "message": "Add test cases for _parallel: {limit: N}"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd", "author": {"user": {"login": "szyn", "name": "Shota Suzuki"}}, "url": "https://github.com/treasure-data/digdag/commit/38b8416a3091d2f20e1d8b59f0491662d78fc3bd", "committedDate": "2020-06-05T02:21:23Z", "message": "Update docs of _parallel"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NjE4NzA0", "url": "https://github.com/treasure-data/digdag/pull/1413#pullrequestreview-428618704", "createdAt": "2020-06-11T06:14:31Z", "commit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNjoxNDozMVrOGiP0Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNjoxNDozMVrOGiP0Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU2MzkzOQ==", "bodyText": "Maybe the following is slightly better while it changes how to handle negative figure for limit ?\n    if (pc.isParallel()) {\n        if (pc.getParallelLimit() > 0) {\n            :\n        }\n        else {\n            :\n        }\n    }\n    else {\n        :\n    }", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r438563939", "createdAt": "2020-06-11T06:14:31Z", "author": {"login": "komamitsu"}, "path": "digdag-core/src/main/java/io/digdag/core/workflow/WorkflowCompiler.java", "diffHunk": "@@ -231,22 +232,25 @@ else if (config.has(\"_type\") || config.getKeys().stream().anyMatch(key -> key.en\n                     .map(pair -> collect(Optional.of(tb), fullName, pair.getKey(), pair.getValue(), validator))\n                     .collect(Collectors.toList());\n \n-                if (config.get(\"_parallel\", boolean.class, false)) {\n-                    // _after: is valid only when parallel: is true\n-                    Map<String, TaskBuilder> names = new HashMap<>();\n+                ParallelControl pc = new ParallelControl(config);\n+                Map<String, TaskBuilder> names = new HashMap<>();\n+                if (pc.isParallel() && pc.getParallelLimit() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NzAzMzM1", "url": "https://github.com/treasure-data/digdag/pull/1413#pullrequestreview-428703335", "createdAt": "2020-06-11T08:34:19Z", "commit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODozNDoxOVrOGiTweQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODozNDoxOVrOGiTweQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyODQ3Mw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r438628473", "createdAt": "2020-06-11T08:34:19Z", "author": {"login": "komamitsu"}, "path": "digdag-core/src/main/java/io/digdag/core/workflow/WorkflowCompiler.java", "diffHunk": "@@ -231,22 +232,25 @@ else if (config.has(\"_type\") || config.getKeys().stream().anyMatch(key -> key.en\n                     .map(pair -> collect(Optional.of(tb), fullName, pair.getKey(), pair.getValue(), validator))\n                     .collect(Collectors.toList());\n \n-                if (config.get(\"_parallel\", boolean.class, false)) {\n-                    // _after: is valid only when parallel: is true\n-                    Map<String, TaskBuilder> names = new HashMap<>();\n+                ParallelControl pc = new ParallelControl(config);\n+                Map<String, TaskBuilder> names = new HashMap<>();\n+                if (pc.isParallel() && pc.getParallelLimit() == 0) {\n                     for (TaskBuilder subtask : subtasks) {\n-                        if (subtask.getConfig().get(\"_background\", boolean.class, false)) {\n-                            throw new ConfigException(\"Setting \\\"_background: true\\\" option is invalid (unnecessary) if its parent task has \\\"_parallel: true\\\" option\");\n-                        }\n-                        for (String upName : subtask.getConfig().getListOrEmpty(\"_after\", String.class)) {\n-                            TaskBuilder up = names.get(upName);\n-                            if (up == null) {\n-                                throw new ConfigException(\"Dependency task '\"+upName+\"' does not exist\");\n+                        parseSubtaskWithParallel(names, subtask);\n+                    }\n+                }\n+                else if (pc.isParallel() && pc.getParallelLimit() > 0) {\n+                    int limit = pc.getParallelLimit();\n+                    List<TaskBuilder> beforeList = new ArrayList<>();\n+                    for (List<TaskBuilder> chunkedSubtasks : Lists.partition(subtasks, limit)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NDY4NjQ1", "url": "https://github.com/treasure-data/digdag/pull/1413#pullrequestreview-429468645", "createdAt": "2020-06-12T05:24:39Z", "commit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNToyNDozOVrOGi3brw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNToyNDozOVrOGi3brw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxMjk3NQ==", "bodyText": "Could you adjust the alignment of expected column?", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r439212975", "createdAt": "2020-06-12T05:24:39Z", "author": {"login": "komamitsu"}, "path": "digdag-core/src/test/java/io/digdag/core/workflow/TaskDependenciesTest.java", "diffHunk": "@@ -212,4 +214,113 @@ public void testGroupRetryTaskDependencies()\n             return null;\n         });\n     }\n+\n+    @Test\n+    public void testParallelLimitDependencies()\n+            throws Exception {\n+        StoredSessionAttemptWithSession attempt =\n+                runWorkflow(embed, projectPath, \"parallel_limit\", loadYamlResource(\"/io/digdag/core/workflow/parallel_limit.dig\"));\n+        tm.begin(() -> {\n+            assertThat(attempt.getStateFlags().isSuccess(), is(true));\n+            List<ArchivedTask> tasks = localSite.getSessionStore().getTasksOfAttempt(attempt.getId());\n+            // # parallel_limit.dig\n+            // +repeat:\n+            //   loop>: 5\n+            //   _parallel:\n+            //     limit: 2\n+            //   _do:\n+            //     +step1:\n+            //       echo>: '${this.task_name}'\n+            //     +step2:\n+            //       echo>: '${this.task_name}'\n+            //     +step3:\n+            //       echo>: '${this.task_name}'\n+            //\n+            // id | tasks index   | full_name                                 | expected parent_id | expected upstream_id \u3000", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NDcxMjM4", "url": "https://github.com/treasure-data/digdag/pull/1413#pullrequestreview-429471238", "createdAt": "2020-06-12T05:33:06Z", "commit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNTozMzowNlrOGi3kZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNTozMzowNlrOGi3kZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxNTIwNg==", "bodyText": "These 2 entries have wrong upstream_id?", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r439215206", "createdAt": "2020-06-12T05:33:06Z", "author": {"login": "komamitsu"}, "path": "digdag-core/src/test/java/io/digdag/core/workflow/TaskDependenciesTest.java", "diffHunk": "@@ -212,4 +214,113 @@ public void testGroupRetryTaskDependencies()\n             return null;\n         });\n     }\n+\n+    @Test\n+    public void testParallelLimitDependencies()\n+            throws Exception {\n+        StoredSessionAttemptWithSession attempt =\n+                runWorkflow(embed, projectPath, \"parallel_limit\", loadYamlResource(\"/io/digdag/core/workflow/parallel_limit.dig\"));\n+        tm.begin(() -> {\n+            assertThat(attempt.getStateFlags().isSuccess(), is(true));\n+            List<ArchivedTask> tasks = localSite.getSessionStore().getTasksOfAttempt(attempt.getId());\n+            // # parallel_limit.dig\n+            // +repeat:\n+            //   loop>: 5\n+            //   _parallel:\n+            //     limit: 2\n+            //   _do:\n+            //     +step1:\n+            //       echo>: '${this.task_name}'\n+            //     +step2:\n+            //       echo>: '${this.task_name}'\n+            //     +step3:\n+            //       echo>: '${this.task_name}'\n+            //\n+            // id | tasks index   | full_name                                 | expected parent_id | expected upstream_id \u3000\n+            // 1  | tasks.get(0)  | +parallel_limit                         |                    |\n+            // 2  | tasks.get(1)  | +parallel_limit+repeat                  | 1                  |\n+            // 3  | tasks.get(2)  | +parallel_limit+repeat^sub              | 2                  |\n+            // 4  | tasks.get(3)  | +parallel_limit+repeat^sub+loop-0       | 3                  |\n+            // 5  | tasks.get(4)  | +parallel_limit+repeat^sub+loop-0+step1 | 4                  |\n+            // 6  | tasks.get(5)  | +parallel_limit+repeat^sub+loop-0+step2 | 4                  | 5\n+            // 7  | tasks.get(6)  | +parallel_limit+repeat^sub+loop-0+step3 | 4                  | 6\n+            // 8  | tasks.get(7)  | +parallel_limit+repeat^sub+loop-1       | 3                  |\n+            // 9  | tasks.get(8)  | +parallel_limit+repeat^sub+loop-1+step1 | 8                  | 9", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NDcyMzY3", "url": "https://github.com/treasure-data/digdag/pull/1413#pullrequestreview-429472367", "createdAt": "2020-06-12T05:36:46Z", "commit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNTozNjo0NlrOGi3n_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNTozNjo0NlrOGi3n_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxNjEyNg==", "bodyText": "4,8 is correct?", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r439216126", "createdAt": "2020-06-12T05:36:46Z", "author": {"login": "komamitsu"}, "path": "digdag-core/src/test/java/io/digdag/core/workflow/TaskDependenciesTest.java", "diffHunk": "@@ -212,4 +214,113 @@ public void testGroupRetryTaskDependencies()\n             return null;\n         });\n     }\n+\n+    @Test\n+    public void testParallelLimitDependencies()\n+            throws Exception {\n+        StoredSessionAttemptWithSession attempt =\n+                runWorkflow(embed, projectPath, \"parallel_limit\", loadYamlResource(\"/io/digdag/core/workflow/parallel_limit.dig\"));\n+        tm.begin(() -> {\n+            assertThat(attempt.getStateFlags().isSuccess(), is(true));\n+            List<ArchivedTask> tasks = localSite.getSessionStore().getTasksOfAttempt(attempt.getId());\n+            // # parallel_limit.dig\n+            // +repeat:\n+            //   loop>: 5\n+            //   _parallel:\n+            //     limit: 2\n+            //   _do:\n+            //     +step1:\n+            //       echo>: '${this.task_name}'\n+            //     +step2:\n+            //       echo>: '${this.task_name}'\n+            //     +step3:\n+            //       echo>: '${this.task_name}'\n+            //\n+            // id | tasks index   | full_name                                 | expected parent_id | expected upstream_id \u3000\n+            // 1  | tasks.get(0)  | +parallel_limit                         |                    |\n+            // 2  | tasks.get(1)  | +parallel_limit+repeat                  | 1                  |\n+            // 3  | tasks.get(2)  | +parallel_limit+repeat^sub              | 2                  |\n+            // 4  | tasks.get(3)  | +parallel_limit+repeat^sub+loop-0       | 3                  |\n+            // 5  | tasks.get(4)  | +parallel_limit+repeat^sub+loop-0+step1 | 4                  |\n+            // 6  | tasks.get(5)  | +parallel_limit+repeat^sub+loop-0+step2 | 4                  | 5\n+            // 7  | tasks.get(6)  | +parallel_limit+repeat^sub+loop-0+step3 | 4                  | 6\n+            // 8  | tasks.get(7)  | +parallel_limit+repeat^sub+loop-1       | 3                  |\n+            // 9  | tasks.get(8)  | +parallel_limit+repeat^sub+loop-1+step1 | 8                  | 9\n+            // 10 | tasks.get(9)  | +parallel_limit+repeat^sub+loop-1+step2 | 8                  | 10\n+            // 11 | tasks.get(10) | +parallel_limit+repeat^sub+loop-1+step3 | 8                  | 4,8", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NDczMTE0", "url": "https://github.com/treasure-data/digdag/pull/1413#pullrequestreview-429473114", "createdAt": "2020-06-12T05:39:08Z", "commit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNTozOTowOFrOGi3qLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNTozOTowOFrOGi3qLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxNjY4Ng==", "bodyText": "Please add a newline at the end of the string", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r439216686", "createdAt": "2020-06-12T05:39:08Z", "author": {"login": "komamitsu"}, "path": "digdag-core/src/test/resources/io/digdag/core/workflow/parallel_limit.dig", "diffHunk": "@@ -0,0 +1,11 @@\n++repeat:\n+  loop>: 5\n+  _parallel:\n+    limit: 2\n+  _do:\n+    +step1:\n+      echo>: '${this.task_name}'\n+    +step2:\n+      echo>: '${this.task_name}'\n+    +step3:\n+      echo>: '${this.task_name}'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NDk0Nzg5", "url": "https://github.com/treasure-data/digdag/pull/1413#pullrequestreview-429494789", "createdAt": "2020-06-12T06:37:08Z", "commit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNjozNzowOFrOGi4tsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNjozNzowOFrOGi4tsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIzMzk3MA==", "bodyText": "the number of tasks running in parallel is a bit clearer?", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r439233970", "createdAt": "2020-06-12T06:37:08Z", "author": {"login": "komamitsu"}, "path": "digdag-docs/src/operators/for_each.md", "diffHunk": "@@ -38,16 +38,26 @@\n   for_each>: {i: '[1, 2, 3]'}\n   ```\n \n-* **\\_parallel**: BOOLEAN\n+* **\\_parallel**: BOOLEAN | OBJECT\n \n   Runs the repeating tasks in parallel.\n+  If ``_parallel: {limit: N}`` (N is an integer: 1, 2, 3, \u2026) parameter is set,\n+  the number of loops running in parallel is limited to N.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NTAwMDk5", "url": "https://github.com/treasure-data/digdag/pull/1413#pullrequestreview-429500099", "createdAt": "2020-06-12T06:48:30Z", "commit": {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75a87b1b600c0df324c3e346e39b6f11c5ce2be8", "author": {"user": {"login": "szyn", "name": "Shota Suzuki"}}, "url": "https://github.com/treasure-data/digdag/commit/75a87b1b600c0df324c3e346e39b6f11c5ce2be8", "committedDate": "2020-06-12T06:50:27Z", "message": "Fix the comment on testParallelLimitDependencies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf56b4d7eed4fb082a88ff2a125770d23106463c", "author": {"user": {"login": "szyn", "name": "Shota Suzuki"}}, "url": "https://github.com/treasure-data/digdag/commit/cf56b4d7eed4fb082a88ff2a125770d23106463c", "committedDate": "2020-06-12T07:06:23Z", "message": "Update formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad5ea45c528dd10d50c2e590fdd1286814c50f24", "author": {"user": {"login": "szyn", "name": "Shota Suzuki"}}, "url": "https://github.com/treasure-data/digdag/commit/ad5ea45c528dd10d50c2e590fdd1286814c50f24", "committedDate": "2020-06-12T07:33:33Z", "message": "Follow-up of 38b8416"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a1195101f2fd0f706c9e420cb7941f910bb373c", "author": {"user": {"login": "szyn", "name": "Shota Suzuki"}}, "url": "https://github.com/treasure-data/digdag/commit/3a1195101f2fd0f706c9e420cb7941f910bb373c", "committedDate": "2020-06-12T07:34:22Z", "message": "Update to make it easier to handle a parallel limit number"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4025, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}