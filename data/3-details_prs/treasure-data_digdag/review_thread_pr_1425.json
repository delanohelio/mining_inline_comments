{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5OTExODcw", "number": 1425, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjoyMTowNlrOEKVsPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjozNToyMlrOEKV1WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Mjc2NjA2OnYy", "diffSide": "RIGHT", "path": "digdag-core/src/main/java/io/digdag/core/agent/OperatorManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjoyMTowNlrOGrUlDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjoyMTowNlrOGrUlDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3OTExOA==", "bodyText": "Config.set() just shares the reference to the values without copying data and won't consume memory a lot. Looks good.", "url": "https://github.com/treasure-data/digdag/pull/1425#discussion_r448079118", "createdAt": "2020-07-01T02:21:06Z", "author": {"login": "komamitsu"}, "path": "digdag-core/src/main/java/io/digdag/core/agent/OperatorManager.java", "diffHunk": "@@ -388,4 +387,30 @@ public static void collectExceptionMessage(StringBuilder sb, Throwable ex, Strin\n             collectExceptionMessage(sb, t, used);\n         }\n     }\n+\n+    private static final String[] CONFIG_KEYS_FOR_LOGGING = {\n+            \"project_id\",\n+            \"session_id\",\n+            \"session_time\",\n+            \"attempt_id\",\n+            \"task_name\",\n+            \"last_session_time\",\n+            \"last_executed_session_time\",\n+            \"next_session_time\",\n+            \"session_uuid\",\n+            \"timezone\"\n+    };\n+\n+    @VisibleForTesting\n+    public Config filterConfigForLogging(Config src)\n+    {\n+        Config dst = cf.create();\n+        for (String key : CONFIG_KEYS_FOR_LOGGING) {\n+            Optional<Object> v = src.getOptional(key, Object.class);\n+            if (v.isPresent()) {\n+                dst.set(key, v.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40109ad4e43159567c1e24046809e34c961b0474"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Mjc4OTM2OnYy", "diffSide": "RIGHT", "path": "digdag-core/src/main/java/io/digdag/core/agent/OperatorManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjozNToyMlrOGrUykw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjozNToyMlrOGrUykw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4MjU3OQ==", "bodyText": "How about adding session_unixtime  as well? I think it's good to have it.", "url": "https://github.com/treasure-data/digdag/pull/1425#discussion_r448082579", "createdAt": "2020-07-01T02:35:22Z", "author": {"login": "szyn"}, "path": "digdag-core/src/main/java/io/digdag/core/agent/OperatorManager.java", "diffHunk": "@@ -388,4 +387,30 @@ public static void collectExceptionMessage(StringBuilder sb, Throwable ex, Strin\n             collectExceptionMessage(sb, t, used);\n         }\n     }\n+\n+    private static final String[] CONFIG_KEYS_FOR_LOGGING = {\n+            \"project_id\",\n+            \"session_id\",\n+            \"session_time\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40109ad4e43159567c1e24046809e34c961b0474"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1139, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}