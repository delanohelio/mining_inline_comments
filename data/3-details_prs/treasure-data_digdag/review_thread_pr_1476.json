{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MjAxODkw", "number": 1476, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNDo1MDoxMlrOE1f1XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNToxOTowOFrOE1gIoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NTMxNTQ4OnYy", "diffSide": "RIGHT", "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNDo1MDoxMlrOHtzc7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNTowMToxN1rOHtznrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5MDk1OA==", "bodyText": "[minor] invalidReason sounds a bit weird since this is a just exception here. If you extracted a pure reason-like object from an exception like with Reason invalidReason = ex.getReason(), it would be good.", "url": "https://github.com/treasure-data/digdag/pull/1476#discussion_r517790958", "createdAt": "2020-11-05T04:50:12Z", "author": {"login": "komamitsu"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -530,9 +532,31 @@ RunTaskRequest buildRunTaskRequest(\n         setEcsTaskStartedBy(clientConfig, runTaskRequest);\n         setEcsNetworkConfiguration(clientConfig, runTaskRequest);\n         setCapacityProviderStrategy(clientConfig, runTaskRequest);\n+        setPlacementStrategy(clientConfig, runTaskRequest);\n         return runTaskRequest;\n     }\n \n+    private void setPlacementStrategy(EcsClientConfig clientConfig, RunTaskRequest runTaskRequest) throws ConfigException\n+    {\n+        if (clientConfig.getPlacementStrategyType().isPresent()) {\n+            final PlacementStrategyType placementStrategyType;\n+            try {\n+                placementStrategyType = PlacementStrategyType.fromValue(clientConfig.getPlacementStrategyType().get());\n+            }\n+            catch (IllegalArgumentException invalidReason) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2906e9d8104dcd573f3304bc12ed1dc6f31b076"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5MzcxMQ==", "bodyText": "What I meant was just \"This is an IllegalArgumentException object and the actual reason is stored in this exception object's message\". But surely it is wired a bit. I will rename the exception object and leave a comment to suggest it.", "url": "https://github.com/treasure-data/digdag/pull/1476#discussion_r517793711", "createdAt": "2020-11-05T05:01:17Z", "author": {"login": "serihiro"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -530,9 +532,31 @@ RunTaskRequest buildRunTaskRequest(\n         setEcsTaskStartedBy(clientConfig, runTaskRequest);\n         setEcsNetworkConfiguration(clientConfig, runTaskRequest);\n         setCapacityProviderStrategy(clientConfig, runTaskRequest);\n+        setPlacementStrategy(clientConfig, runTaskRequest);\n         return runTaskRequest;\n     }\n \n+    private void setPlacementStrategy(EcsClientConfig clientConfig, RunTaskRequest runTaskRequest) throws ConfigException\n+    {\n+        if (clientConfig.getPlacementStrategyType().isPresent()) {\n+            final PlacementStrategyType placementStrategyType;\n+            try {\n+                placementStrategyType = PlacementStrategyType.fromValue(clientConfig.getPlacementStrategyType().get());\n+            }\n+            catch (IllegalArgumentException invalidReason) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5MDk1OA=="}, "originalCommit": {"oid": "f2906e9d8104dcd573f3304bc12ed1dc6f31b076"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NTMyMDI1OnYy", "diffSide": "RIGHT", "path": "digdag-standards/src/main/java/io/digdag/standards/command/ecs/EcsClientConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNDo1MzoxNVrOHtzfuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNToxMTo0MFrOHtzxxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5MTY3Mw==", "bodyText": "Don't we need to check the other case like placementStrategyType.isPresent() && !placementStrategyField.isPresent()?", "url": "https://github.com/treasure-data/digdag/pull/1476#discussion_r517791673", "createdAt": "2020-11-05T04:53:15Z", "author": {"login": "komamitsu"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/ecs/EcsClientConfig.java", "diffHunk": "@@ -31,6 +32,12 @@ public EcsClientConfig(EcsClientConfigBuilder builder)\n         this.memory = builder.getMemory();\n         this.startedBy = builder.getStartedBy();\n         this.assignPublicIp = builder.isAssignPublicIp();\n+        this.placementStrategyType = builder.getPlacementStrategyType();\n+        this.placementStrategyField = builder.getPlacementStrategyField();\n+\n+        if (!placementStrategyType.isPresent() && placementStrategyField.isPresent()) {\n+            throw new ConfigException(\"PlacementStrategyField must be set with PlacementStrategyType\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2906e9d8104dcd573f3304bc12ed1dc6f31b076"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5NjI5Mg==", "bodyText": "It depends on what kind of placementStrategyType users use. E.g. random placement strategy does not require any fields.\nIt's complicated a little, some placementStrategyType requires placementStrategyField but others do not.\nhttps://github.com/aws/aws-sdk-java/blob/1.11.686/aws-java-sdk-ecs/src/main/java/com/amazonaws/services/ecs/model/PlacementStrategy.java#L44-L52\nBut at least placementStrategyField only is a clearly invalid usage. That's the reason why I added the validation here.\nRegarding more detail validations, I decided not to implement it here because it is complicated to cover all patterns as I told above. I assume digdag users who use EcsCommandExecutor have the knowledge about ECS placement strategy option.", "url": "https://github.com/treasure-data/digdag/pull/1476#discussion_r517796292", "createdAt": "2020-11-05T05:11:40Z", "author": {"login": "serihiro"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/ecs/EcsClientConfig.java", "diffHunk": "@@ -31,6 +32,12 @@ public EcsClientConfig(EcsClientConfigBuilder builder)\n         this.memory = builder.getMemory();\n         this.startedBy = builder.getStartedBy();\n         this.assignPublicIp = builder.isAssignPublicIp();\n+        this.placementStrategyType = builder.getPlacementStrategyType();\n+        this.placementStrategyField = builder.getPlacementStrategyField();\n+\n+        if (!placementStrategyType.isPresent() && placementStrategyField.isPresent()) {\n+            throw new ConfigException(\"PlacementStrategyField must be set with PlacementStrategyType\");\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5MTY3Mw=="}, "originalCommit": {"oid": "f2906e9d8104dcd573f3304bc12ed1dc6f31b076"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NTM2NDgxOnYy", "diffSide": "RIGHT", "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNToxOTowOFrOHtz4-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNToxOTowOFrOHtz4-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5ODEzNw==", "bodyText": "throws should be at next line", "url": "https://github.com/treasure-data/digdag/pull/1476#discussion_r517798137", "createdAt": "2020-11-05T05:19:08Z", "author": {"login": "komamitsu"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -530,9 +532,31 @@ RunTaskRequest buildRunTaskRequest(\n         setEcsTaskStartedBy(clientConfig, runTaskRequest);\n         setEcsNetworkConfiguration(clientConfig, runTaskRequest);\n         setCapacityProviderStrategy(clientConfig, runTaskRequest);\n+        setPlacementStrategy(clientConfig, runTaskRequest);\n         return runTaskRequest;\n     }\n \n+    private void setPlacementStrategy(EcsClientConfig clientConfig, RunTaskRequest runTaskRequest) throws ConfigException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2906e9d8104dcd573f3304bc12ed1dc6f31b076"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1160, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}