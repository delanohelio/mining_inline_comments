{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyODgzMTAw", "number": 1506, "title": "implemented sessions pagination for workflow page / projects page", "bodyText": "Description\nImplemented pagination for SessionsView.\nI cherry-picked it in v0_10 branch and it also seems to work.\nScreen shots\nNOTE: I changed pageSize in the following screenshots.\n\n\nRelated: #1012", "createdAt": "2020-12-19T06:00:29Z", "url": "https://github.com/treasure-data/digdag/pull/1506", "merged": true, "mergeCommit": {"oid": "258db26fa6780fd39b53de7e713551855a0d52df"}, "closed": true, "closedAt": "2021-06-01T12:03:27Z", "author": {"login": "seiyab"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdooD0ngBqjQxMzk1NzU2OTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABecdw6-gFqTY3Mjk4MjMzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "02aa9650f42a96114ce891074696c1693cf20b27", "author": {"user": {"login": "seiyab", "name": "Seiya"}}, "url": "https://github.com/treasure-data/digdag/commit/02aa9650f42a96114ce891074696c1693cf20b27", "committedDate": "2020-12-19T06:46:36Z", "message": "lint"}, "afterCommit": {"oid": "b0aa0d81c67a7be9e9105c8afe0b92339848d316", "author": {"user": {"login": "seiyab", "name": "Seiya"}}, "url": "https://github.com/treasure-data/digdag/commit/b0aa0d81c67a7be9e9105c8afe0b92339848d316", "committedDate": "2020-12-22T10:24:47Z", "message": "lint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4f2c6c2542ef373e66945125e834f00bdc86312", "author": {"user": {"login": "seiyab", "name": "Seiya"}}, "url": "https://github.com/treasure-data/digdag/commit/c4f2c6c2542ef373e66945125e834f00bdc86312", "committedDate": "2020-12-22T10:39:20Z", "message": "implement sessions paginatin for workflow page / projects page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43e77dcf2542ac81d054a2b3146ac10363a83920", "author": {"user": {"login": "seiyab", "name": "Seiya"}}, "url": "https://github.com/treasure-data/digdag/commit/43e77dcf2542ac81d054a2b3146ac10363a83920", "committedDate": "2020-12-22T10:39:30Z", "message": "lint"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b0aa0d81c67a7be9e9105c8afe0b92339848d316", "author": {"user": {"login": "seiyab", "name": "Seiya"}}, "url": "https://github.com/treasure-data/digdag/commit/b0aa0d81c67a7be9e9105c8afe0b92339848d316", "committedDate": "2020-12-22T10:24:47Z", "message": "lint"}, "afterCommit": {"oid": "43e77dcf2542ac81d054a2b3146ac10363a83920", "author": {"user": {"login": "seiyab", "name": "Seiya"}}, "url": "https://github.com/treasure-data/digdag/commit/43e77dcf2542ac81d054a2b3146ac10363a83920", "committedDate": "2020-12-22T10:39:30Z", "message": "lint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3Njg5Nzk1", "url": "https://github.com/treasure-data/digdag/pull/1506#pullrequestreview-557689795", "createdAt": "2020-12-23T07:33:55Z", "commit": {"oid": "43e77dcf2542ac81d054a2b3146ac10363a83920"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzozMzo1NVrOIKYWAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzozMzo1NVrOIKYWAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzc1NTUyMA==", "bodyText": "I am not familiar with digdag-ui, but it seems you can try to get max page number based on lastId of session.\nBut it is only correct when the num. of targeted sessions record is equal to lastId.\nIf we remove old session records or using with multi tenant, it will not work.", "url": "https://github.com/treasure-data/digdag/pull/1506#discussion_r547755520", "createdAt": "2020-12-23T07:33:55Z", "author": {"login": "yoyama"}, "path": "digdag-ui/console.jsx", "diffHunk": "@@ -716,28 +716,147 @@ class StatusFilter extends React.Component {\n   }\n }\n \n+class SessionsPagination extends React.Component {\n+  props: {\n+    current: number,\n+    max: number,\n+    onSelect: (number) => void,\n+  };\n+\n+  pages (): Array<Array<number>> {\n+    // [1, 2, ..., 10, 11, 12, 13, 14, ..., 20, 21]\n+    //  ^  ^                                 ^   ^ <- edgeN\n+    //              ^   ^       ^   ^              <- sideN\n+    const edgeN = 2\n+    const sideN = 2\n+\n+    const inclusiveRange = (start, end) => _.range(start, end + 1)\n+    const leftRange = inclusiveRange(1, edgeN)\n+    const rightRange = inclusiveRange(this.props.max - edgeN + 1, this.props.max)\n+    const centerRange = inclusiveRange(\n+      this.props.current - sideN,\n+      this.props.current + sideN\n+    )\n+\n+    if (this.props.max <= edgeN * 2 + sideN * 2 + 1) {\n+      return [inclusiveRange(1, this.props.max)]\n+    }\n+\n+    // [1, 2, 3, 4, 5, 6, 7, 8, ..., 20, 21]\n+    //                       ^ jointLeftEnd\n+    const jointLeftEnd = leftRange.length + centerRange.length + 1\n+    if (this.props.current + sideN <= jointLeftEnd) {\n+      return [\n+        inclusiveRange(1, jointLeftEnd),\n+        rightRange\n+      ]\n+    }\n+\n+    // [1, 2, ..., 14, 15, 16, 17, 18, 19, 20, 21]\n+    //              ^ jointRightStart\n+    const jointRightStart = this.props.max - rightRange.length - centerRange.length\n+    if (this.props.current - sideN >= jointRightStart) {\n+      return [\n+        leftRange,\n+        inclusiveRange(jointRightStart, this.props.max)\n+      ]\n+    }\n+\n+    return [\n+      leftRange,\n+      centerRange,\n+      rightRange\n+    ]\n+  }\n+\n+  render () {\n+    const pages = this.pages()\n+    return (\n+      <nav className='d-flex justify-content-center'>\n+        <ul className='pagination'>\n+          {pages.map((ps, i) => (\n+            <React.Fragment>\n+              {i > 0 && (\n+                <li className='page-item disabled'>\n+                  <span className='page-link'>...</span>\n+                </li>\n+              )}\n+              {ps.map((p) => (\n+                <li\n+                  className={\n+                    p === this.props.current ? 'page-item active' : 'page-item'\n+                  }\n+                  key={p}\n+                  onClick={() => this.props.onSelect(p)}\n+                >\n+                  <button className='page-link' type='button'>\n+                    {p}\n+                  </button>\n+                </li>\n+              ))}\n+            </React.Fragment>\n+          ))}\n+        </ul>\n+      </nav>\n+    )\n+  }\n+}\n+\n class SessionsView extends React.Component {\n+  static pageSize = 100;\n+\n   state = {\n-    sessions: []\n+    sessions: [],\n+    page: 1,\n+    latestId: null\n   };\n \n   componentDidMount () {\n     this.fetch()\n   }\n \n+  componentDidUpdate (_, prevState) {\n+    if (this.state.page !== prevState.page) {\n+      this.fetch()\n+    }\n+  }\n+\n   fetch () {\n-    model().fetchSessions().then(({ sessions }) => {\n+    const lastId = this.lastIdAt(this.state.page)\n+    model().fetchSessions(SessionsView.pageSize, lastId).then(({ sessions }) => {\n       this.setState({ sessions })\n+      if (this.state.page === 1 && sessions[0]) {\n+        this.setState({ latestId: sessions[0].id })\n+      }\n     })\n   }\n \n+  switchPage (page: number) {\n+    this.setState({ page })\n+  }\n+\n+  maxPage (): number {\n+    if (!this.state.latestId) {\n+      return 1\n+    }\n+    return Math.floor((this.state.latestId - 1) / SessionsView.pageSize) + 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43e77dcf2542ac81d054a2b3146ac10363a83920"}, "originalPosition": 129}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NjkwNDE3", "url": "https://github.com/treasure-data/digdag/pull/1506#pullrequestreview-557690417", "createdAt": "2020-12-23T07:35:23Z", "commit": {"oid": "43e77dcf2542ac81d054a2b3146ac10363a83920"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzozNToyNFrOIKYaiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzozNToyNFrOIKYaiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzc1NjY4MA==", "bodyText": "This calculation may be also not correct as above comment.", "url": "https://github.com/treasure-data/digdag/pull/1506#discussion_r547756680", "createdAt": "2020-12-23T07:35:24Z", "author": {"login": "yoyama"}, "path": "digdag-ui/console.jsx", "diffHunk": "@@ -716,28 +716,147 @@ class StatusFilter extends React.Component {\n   }\n }\n \n+class SessionsPagination extends React.Component {\n+  props: {\n+    current: number,\n+    max: number,\n+    onSelect: (number) => void,\n+  };\n+\n+  pages (): Array<Array<number>> {\n+    // [1, 2, ..., 10, 11, 12, 13, 14, ..., 20, 21]\n+    //  ^  ^                                 ^   ^ <- edgeN\n+    //              ^   ^       ^   ^              <- sideN\n+    const edgeN = 2\n+    const sideN = 2\n+\n+    const inclusiveRange = (start, end) => _.range(start, end + 1)\n+    const leftRange = inclusiveRange(1, edgeN)\n+    const rightRange = inclusiveRange(this.props.max - edgeN + 1, this.props.max)\n+    const centerRange = inclusiveRange(\n+      this.props.current - sideN,\n+      this.props.current + sideN\n+    )\n+\n+    if (this.props.max <= edgeN * 2 + sideN * 2 + 1) {\n+      return [inclusiveRange(1, this.props.max)]\n+    }\n+\n+    // [1, 2, 3, 4, 5, 6, 7, 8, ..., 20, 21]\n+    //                       ^ jointLeftEnd\n+    const jointLeftEnd = leftRange.length + centerRange.length + 1\n+    if (this.props.current + sideN <= jointLeftEnd) {\n+      return [\n+        inclusiveRange(1, jointLeftEnd),\n+        rightRange\n+      ]\n+    }\n+\n+    // [1, 2, ..., 14, 15, 16, 17, 18, 19, 20, 21]\n+    //              ^ jointRightStart\n+    const jointRightStart = this.props.max - rightRange.length - centerRange.length\n+    if (this.props.current - sideN >= jointRightStart) {\n+      return [\n+        leftRange,\n+        inclusiveRange(jointRightStart, this.props.max)\n+      ]\n+    }\n+\n+    return [\n+      leftRange,\n+      centerRange,\n+      rightRange\n+    ]\n+  }\n+\n+  render () {\n+    const pages = this.pages()\n+    return (\n+      <nav className='d-flex justify-content-center'>\n+        <ul className='pagination'>\n+          {pages.map((ps, i) => (\n+            <React.Fragment>\n+              {i > 0 && (\n+                <li className='page-item disabled'>\n+                  <span className='page-link'>...</span>\n+                </li>\n+              )}\n+              {ps.map((p) => (\n+                <li\n+                  className={\n+                    p === this.props.current ? 'page-item active' : 'page-item'\n+                  }\n+                  key={p}\n+                  onClick={() => this.props.onSelect(p)}\n+                >\n+                  <button className='page-link' type='button'>\n+                    {p}\n+                  </button>\n+                </li>\n+              ))}\n+            </React.Fragment>\n+          ))}\n+        </ul>\n+      </nav>\n+    )\n+  }\n+}\n+\n class SessionsView extends React.Component {\n+  static pageSize = 100;\n+\n   state = {\n-    sessions: []\n+    sessions: [],\n+    page: 1,\n+    latestId: null\n   };\n \n   componentDidMount () {\n     this.fetch()\n   }\n \n+  componentDidUpdate (_, prevState) {\n+    if (this.state.page !== prevState.page) {\n+      this.fetch()\n+    }\n+  }\n+\n   fetch () {\n-    model().fetchSessions().then(({ sessions }) => {\n+    const lastId = this.lastIdAt(this.state.page)\n+    model().fetchSessions(SessionsView.pageSize, lastId).then(({ sessions }) => {\n       this.setState({ sessions })\n+      if (this.state.page === 1 && sessions[0]) {\n+        this.setState({ latestId: sessions[0].id })\n+      }\n     })\n   }\n \n+  switchPage (page: number) {\n+    this.setState({ page })\n+  }\n+\n+  maxPage (): number {\n+    if (!this.state.latestId) {\n+      return 1\n+    }\n+    return Math.floor((this.state.latestId - 1) / SessionsView.pageSize) + 1\n+  }\n+\n+  lastIdAt (page: number): ?number {\n+    if (!this.state.latestId || page === 1) {\n+      return null\n+    }\n+    return this.state.latestId - SessionsView.pageSize * (page - 1) + 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43e77dcf2542ac81d054a2b3146ac10363a83920"}, "originalPosition": 136}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d97ea20b267c72c1f348b61b2356d8d2515f1e4c", "author": {"user": {"login": "seiyab", "name": "Seiya"}}, "url": "https://github.com/treasure-data/digdag/commit/d97ea20b267c72c1f348b61b2356d8d2515f1e4c", "committedDate": "2020-12-27T13:58:14Z", "message": "use 'page' query parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "215d1b571c8351dea0c296353f7bbc567888c53b", "author": {"user": {"login": "seiyab", "name": "Seiya"}}, "url": "https://github.com/treasure-data/digdag/commit/215d1b571c8351dea0c296353f7bbc567888c53b", "committedDate": "2021-05-30T09:51:48Z", "message": "change to lightweight implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c083bd485e5e9b3debd444aeea16936cec3f978", "author": {"user": {"login": "seiyab", "name": "Seiya"}}, "url": "https://github.com/treasure-data/digdag/commit/6c083bd485e5e9b3debd444aeea16936cec3f978", "committedDate": "2021-05-30T09:52:33Z", "message": "forgot to run lint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcyOTgyMzMz", "url": "https://github.com/treasure-data/digdag/pull/1506#pullrequestreview-672982333", "createdAt": "2021-06-01T11:58:57Z", "commit": {"oid": "6c083bd485e5e9b3debd444aeea16936cec3f978"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4095, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}