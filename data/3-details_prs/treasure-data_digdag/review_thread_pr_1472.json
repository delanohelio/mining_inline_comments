{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExOTc2OTU1", "number": 1472, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNTo1ODo0OFrOEzJHWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNTo1OToyMFrOEzJIEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMDYyMTY5OnYy", "diffSide": "RIGHT", "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNTo1ODo0OFrOHqMEKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNjo1NDo1NVrOHqOJ6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzk5OTkxMw==", "bodyText": "why not static method?", "url": "https://github.com/treasure-data/digdag/pull/1472#discussion_r513999913", "createdAt": "2020-10-29T05:58:48Z", "author": {"login": "myui"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -797,4 +799,50 @@ protected void setCapacityProviderStrategy(final EcsClientConfig clientConfig, f\n             request.setCapacityProviderStrategy(Arrays.asList(capacityProviderStrategyItem));\n         }\n     }\n+\n+    private String dumpTaskRequest(final RunTaskRequest request)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27c3ea32c24ac16a67146795bae4e1228f92ce85"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAzMjM1Ng==", "bodyText": "Not particular reasons. I will convert this method to static.", "url": "https://github.com/treasure-data/digdag/pull/1472#discussion_r514032356", "createdAt": "2020-10-29T06:51:35Z", "author": {"login": "serihiro"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -797,4 +799,50 @@ protected void setCapacityProviderStrategy(final EcsClientConfig clientConfig, f\n             request.setCapacityProviderStrategy(Arrays.asList(capacityProviderStrategyItem));\n         }\n     }\n+\n+    private String dumpTaskRequest(final RunTaskRequest request)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzk5OTkxMw=="}, "originalCommit": {"oid": "27c3ea32c24ac16a67146795bae4e1228f92ce85"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAzNDE1NA==", "bodyText": "75ccbff", "url": "https://github.com/treasure-data/digdag/pull/1472#discussion_r514034154", "createdAt": "2020-10-29T06:54:55Z", "author": {"login": "serihiro"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -797,4 +799,50 @@ protected void setCapacityProviderStrategy(final EcsClientConfig clientConfig, f\n             request.setCapacityProviderStrategy(Arrays.asList(capacityProviderStrategyItem));\n         }\n     }\n+\n+    private String dumpTaskRequest(final RunTaskRequest request)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzk5OTkxMw=="}, "originalCommit": {"oid": "27c3ea32c24ac16a67146795bae4e1228f92ce85"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMDYyMzU1OnYy", "diffSide": "RIGHT", "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNTo1OToyMFrOHqMFUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNjo1NDo1N1rOHqOJ_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAwMDIwOA==", "bodyText": "ditto. static method.", "url": "https://github.com/treasure-data/digdag/pull/1472#discussion_r514000208", "createdAt": "2020-10-29T05:59:20Z", "author": {"login": "myui"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -797,4 +799,50 @@ protected void setCapacityProviderStrategy(final EcsClientConfig clientConfig, f\n             request.setCapacityProviderStrategy(Arrays.asList(capacityProviderStrategyItem));\n         }\n     }\n+\n+    private String dumpTaskRequest(final RunTaskRequest request)\n+    {\n+        final StringBuilder sb = new StringBuilder();\n+        sb.append(\"{\");\n+        if (request.getCluster() != null) { sb.append(\"Cluster: \").append(request.getCluster()).append(\",\"); }\n+        if (request.getTaskDefinition() != null) { sb.append(\"TaskDefinition: \").append(request.getTaskDefinition()).append(\",\"); }\n+        if (request.getLaunchType() != null) { sb.append(\"LaunchType: \").append(request.getLaunchType()).append(\",\"); }\n+        if (request.getCapacityProviderStrategy() != null) { sb.append(\"CapacityProviderStrategy: \").append(request.getCapacityProviderStrategy()).append(\",\"); }\n+        if (request.getPlacementConstraints() != null) { sb.append(\"PlacementConstraints: \").append(request.getPlacementConstraints()).append(\",\"); }\n+        if (request.getPlacementStrategy() != null) { sb.append(\"PlacementStrategy: \").append(request.getPlacementStrategy()).append(\",\"); }\n+        if (request.getPlatformVersion() != null) { sb.append(\"PlatformVersion: \").append(request.getPlatformVersion()).append(\",\"); }\n+        TaskOverride overrides = request.getOverrides();\n+        if (overrides != null) {\n+            if (overrides.getCpu() != null) {\n+                sb.append(\"CPU: \").append(overrides.getCpu()).append(\",\");\n+            }\n+\n+            if (overrides.getCpu() != null) {\n+                sb.append(\"Memory: \").append(overrides.getMemory());\n+            }\n+        }\n+        sb.append(\"}\");\n+        return sb.toString();\n+    }\n+\n+    private String dumpTaskResult(final RunTaskResult result)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27c3ea32c24ac16a67146795bae4e1228f92ce85"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAzNDE3Mw==", "bodyText": "75ccbff", "url": "https://github.com/treasure-data/digdag/pull/1472#discussion_r514034173", "createdAt": "2020-10-29T06:54:57Z", "author": {"login": "serihiro"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -797,4 +799,50 @@ protected void setCapacityProviderStrategy(final EcsClientConfig clientConfig, f\n             request.setCapacityProviderStrategy(Arrays.asList(capacityProviderStrategyItem));\n         }\n     }\n+\n+    private String dumpTaskRequest(final RunTaskRequest request)\n+    {\n+        final StringBuilder sb = new StringBuilder();\n+        sb.append(\"{\");\n+        if (request.getCluster() != null) { sb.append(\"Cluster: \").append(request.getCluster()).append(\",\"); }\n+        if (request.getTaskDefinition() != null) { sb.append(\"TaskDefinition: \").append(request.getTaskDefinition()).append(\",\"); }\n+        if (request.getLaunchType() != null) { sb.append(\"LaunchType: \").append(request.getLaunchType()).append(\",\"); }\n+        if (request.getCapacityProviderStrategy() != null) { sb.append(\"CapacityProviderStrategy: \").append(request.getCapacityProviderStrategy()).append(\",\"); }\n+        if (request.getPlacementConstraints() != null) { sb.append(\"PlacementConstraints: \").append(request.getPlacementConstraints()).append(\",\"); }\n+        if (request.getPlacementStrategy() != null) { sb.append(\"PlacementStrategy: \").append(request.getPlacementStrategy()).append(\",\"); }\n+        if (request.getPlatformVersion() != null) { sb.append(\"PlatformVersion: \").append(request.getPlatformVersion()).append(\",\"); }\n+        TaskOverride overrides = request.getOverrides();\n+        if (overrides != null) {\n+            if (overrides.getCpu() != null) {\n+                sb.append(\"CPU: \").append(overrides.getCpu()).append(\",\");\n+            }\n+\n+            if (overrides.getCpu() != null) {\n+                sb.append(\"Memory: \").append(overrides.getMemory());\n+            }\n+        }\n+        sb.append(\"}\");\n+        return sb.toString();\n+    }\n+\n+    private String dumpTaskResult(final RunTaskResult result)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAwMDIwOA=="}, "originalCommit": {"oid": "27c3ea32c24ac16a67146795bae4e1228f92ce85"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1154, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}