{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2NzM4OTQ5", "number": 1468, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMjo1ODoyMVrOExA5hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMjo1ODoyMVrOExA5hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5ODMwNDA2OnYy", "diffSide": "RIGHT", "path": "digdag-core/src/main/java/io/digdag/core/agent/OperatorManager.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMjo1ODoyMVrOHm6g4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNjoyNTowMlrOHnAP-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU2NjYyNw==", "bodyText": "In this implementation, only when cancel is requested, task will finish with failure.\nIf canceling request is not set to the task, the task will continue to run with failure until TTL.\nIs my understanding correct ? If so, is there any reason to wait for TTL ?", "url": "https://github.com/treasure-data/digdag/pull/1468#discussion_r510566627", "createdAt": "2020-10-23T02:58:21Z", "author": {"login": "yoyama"}, "path": "digdag-core/src/main/java/io/digdag/core/agent/OperatorManager.java", "diffHunk": "@@ -177,6 +177,19 @@ protected void runWithHeartbeat(TaskRequest request)\n                     }\n                     callback.taskFailed(request, agentId, buildExceptionErrorConfig(ex).toConfig(cf));  // no retry\n                 }\n+                catch (Throwable ex) {\n+                    logger.error(\n+                            LogMarkers.UNEXPECTED_SERVER_ERROR,\n+                            \"Task failed with unexpected error: {}\", ex.getMessage(), ex);\n+\n+                    // This block catches OutOfMemoryError and its cause can be either deterministic or non-deterministic.\n+                    // So, OperatorManager can't always cancel the failed task.\n+                    if (request.isCancelRequested()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49e8345c9224935dda94e4a808ad3cbada528f59"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY1NzI1MA==", "bodyText": "This catch block can handle non-deterministic retryable error like OutOfMemoryError caused by temporary lack of overall JVM heap not only deterministic error like OOM caused by instantiation of too huge String. So we can't decide to cancel the failed task immediately. But if the failed task has been already running more than 24 hours, we can cancel it without any concern.", "url": "https://github.com/treasure-data/digdag/pull/1468#discussion_r510657250", "createdAt": "2020-10-23T06:16:29Z", "author": {"login": "komamitsu"}, "path": "digdag-core/src/main/java/io/digdag/core/agent/OperatorManager.java", "diffHunk": "@@ -177,6 +177,19 @@ protected void runWithHeartbeat(TaskRequest request)\n                     }\n                     callback.taskFailed(request, agentId, buildExceptionErrorConfig(ex).toConfig(cf));  // no retry\n                 }\n+                catch (Throwable ex) {\n+                    logger.error(\n+                            LogMarkers.UNEXPECTED_SERVER_ERROR,\n+                            \"Task failed with unexpected error: {}\", ex.getMessage(), ex);\n+\n+                    // This block catches OutOfMemoryError and its cause can be either deterministic or non-deterministic.\n+                    // So, OperatorManager can't always cancel the failed task.\n+                    if (request.isCancelRequested()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU2NjYyNw=="}, "originalCommit": {"oid": "49e8345c9224935dda94e4a808ad3cbada528f59"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY2MDYwMQ==", "bodyText": "Make sense.  \ud83d\udc4d", "url": "https://github.com/treasure-data/digdag/pull/1468#discussion_r510660601", "createdAt": "2020-10-23T06:25:02Z", "author": {"login": "yoyama"}, "path": "digdag-core/src/main/java/io/digdag/core/agent/OperatorManager.java", "diffHunk": "@@ -177,6 +177,19 @@ protected void runWithHeartbeat(TaskRequest request)\n                     }\n                     callback.taskFailed(request, agentId, buildExceptionErrorConfig(ex).toConfig(cf));  // no retry\n                 }\n+                catch (Throwable ex) {\n+                    logger.error(\n+                            LogMarkers.UNEXPECTED_SERVER_ERROR,\n+                            \"Task failed with unexpected error: {}\", ex.getMessage(), ex);\n+\n+                    // This block catches OutOfMemoryError and its cause can be either deterministic or non-deterministic.\n+                    // So, OperatorManager can't always cancel the failed task.\n+                    if (request.isCancelRequested()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU2NjYyNw=="}, "originalCommit": {"oid": "49e8345c9224935dda94e4a808ad3cbada528f59"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1151, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}