{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMzUwMTE4", "number": 1316, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo0MTowNFrODanm9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMjowNTo0NVrODan7XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjM4NTE4OnYy", "diffSide": "RIGHT", "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo0MTowNFrOFhrMAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNjowMzo0OFrOFiIIzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1NDkxNA==", "bodyText": "We can make this happen earlier. As soon as a task finishes, right before // always return false to check if ... comment, we can set status_code.", "url": "https://github.com/treasure-data/digdag/pull/1316#discussion_r370854914", "createdAt": "2020-01-24T21:41:04Z", "author": {"login": "frsyuki"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -287,8 +288,39 @@ CommandStatus createNextCommandStatus(\n         }\n \n         final EcsTaskStatus taskStatus = EcsTaskStatus.of(task.getLastStatus());\n-        final ObjectNode previousExecutorStatus = (ObjectNode) previousStatus.get(\"executor_state\");\n-        final ObjectNode nextExecutorStatus;\n+        ObjectNode previousExecutorStatus = (ObjectNode) previousStatus.get(\"executor_state\");\n+        ObjectNode nextExecutorStatus;\n+\n+        // To fetch log until all logs is written in CloudWatch, it should wait until getting finish marker in end of task.\n+        // (finished previous poll once considering risk of crushing while running previous actual poll.)\n+        final Optional<Long> taskFinishedAt = !previousStatus.has(\"task_finished_at\") ?\n+                Optional.absent() : Optional.of(previousStatus.get(\"task_finished_at\").asLong());\n+        if (taskFinishedAt.isPresent()) {\n+            long timeout = taskFinishedAt.get() + 60;\n+            do {\n+                previousExecutorStatus = fetchLogEvents(client, task, previousStatus, previousExecutorStatus);\n+                if (previousExecutorStatus.get(\"logging_finished\") != null) {\n+                    break;\n+                }\n+            } while (Instant.now().getEpochSecond() < timeout);\n+\n+            final String outputArchivePathName = \"archive-output.tar.gz\";\n+            final String outputArchiveKey = createStorageKey(commandContext.getTaskRequest(), outputArchivePathName); // url format\n+            // Download output config archive\n+            final TemporalProjectArchiveStorage temporalStorage = createTemporalProjectArchiveStorage(commandContext.getTaskRequest().getConfig());\n+            try (final InputStream in = temporalStorage.getContentInputStream(outputArchiveKey)) {\n+                ProjectArchives.extractTarArchive(commandContext.getLocalProjectPath(), in); // IOException\n+            }\n+\n+            final ObjectNode nextStatus = previousStatus.deepCopy();\n+            nextStatus.set(\"executor_state\", previousExecutorStatus);\n+\n+            // Set exit code of container finished to nextStatus\n+            nextStatus.put(\"status_code\", task.getContainers().get(0).getExitCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7a04fb48c8febdc8838a8533eba16fb474b0ec4"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMyOTIzMA==", "bodyText": "I moved status_code putting to after task is finished.\n3c6c3dc", "url": "https://github.com/treasure-data/digdag/pull/1316#discussion_r371329230", "createdAt": "2020-01-27T16:03:48Z", "author": {"login": "naritta"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -287,8 +288,39 @@ CommandStatus createNextCommandStatus(\n         }\n \n         final EcsTaskStatus taskStatus = EcsTaskStatus.of(task.getLastStatus());\n-        final ObjectNode previousExecutorStatus = (ObjectNode) previousStatus.get(\"executor_state\");\n-        final ObjectNode nextExecutorStatus;\n+        ObjectNode previousExecutorStatus = (ObjectNode) previousStatus.get(\"executor_state\");\n+        ObjectNode nextExecutorStatus;\n+\n+        // To fetch log until all logs is written in CloudWatch, it should wait until getting finish marker in end of task.\n+        // (finished previous poll once considering risk of crushing while running previous actual poll.)\n+        final Optional<Long> taskFinishedAt = !previousStatus.has(\"task_finished_at\") ?\n+                Optional.absent() : Optional.of(previousStatus.get(\"task_finished_at\").asLong());\n+        if (taskFinishedAt.isPresent()) {\n+            long timeout = taskFinishedAt.get() + 60;\n+            do {\n+                previousExecutorStatus = fetchLogEvents(client, task, previousStatus, previousExecutorStatus);\n+                if (previousExecutorStatus.get(\"logging_finished\") != null) {\n+                    break;\n+                }\n+            } while (Instant.now().getEpochSecond() < timeout);\n+\n+            final String outputArchivePathName = \"archive-output.tar.gz\";\n+            final String outputArchiveKey = createStorageKey(commandContext.getTaskRequest(), outputArchivePathName); // url format\n+            // Download output config archive\n+            final TemporalProjectArchiveStorage temporalStorage = createTemporalProjectArchiveStorage(commandContext.getTaskRequest().getConfig());\n+            try (final InputStream in = temporalStorage.getContentInputStream(outputArchiveKey)) {\n+                ProjectArchives.extractTarArchive(commandContext.getLocalProjectPath(), in); // IOException\n+            }\n+\n+            final ObjectNode nextStatus = previousStatus.deepCopy();\n+            nextStatus.set(\"executor_state\", previousExecutorStatus);\n+\n+            // Set exit code of container finished to nextStatus\n+            nextStatus.put(\"status_code\", task.getContainers().get(0).getExitCode());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1NDkxNA=="}, "originalCommit": {"oid": "e7a04fb48c8febdc8838a8533eba16fb474b0ec4"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjQxODU3OnYy", "diffSide": "RIGHT", "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo1NjoyNlrOFhrhDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNjozNTowNlrOFiJS1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MDMwMQ==", "bodyText": "After 1., if you feel you have energy (meaning it's optional to do), it's better to do a refactoring around execution status data:\n\n\ntoLogStreamName is formatting a string but it's unnecessary if previousStatus includes the pre-built string. As like toLogGroupName is doing. If toLogStreamName simply uses previousStatus.get(\"awslogs\").get(\"awslogs-stream\").asText() then, we can do as following:\nrun calls createCurrentStatus to set awslogs to the status. It's calling getAwsLogsConfiguration(td), which copies all of the logConfig.getOptions().entrySet() to the executor status. This becomes unnecessary. Instead, it simply needs to copy awslogs.awslogs-group and format&set awslogs.awslogs-stream only.\nBecause toLogStreamName gets pre-formatted text from the executor status, it doesn't need TaskDefinition td any more. It also means that fetchLogEvents doesn't need Task task. It means that createNextCommandStatus doesn't have to pass Task task to fetchLogEvents. Therefore, you can move this entire block (if (taskFinishedAt.isPresent()) { ... }) right before client.getTask call. It means that EcsCommandExecutor doesn't have to call ECS API when it's waiting for logs.\n\nThis is helpful to mitigate API call rate limit of ECS API.", "url": "https://github.com/treasure-data/digdag/pull/1316#discussion_r370860301", "createdAt": "2020-01-24T21:56:26Z", "author": {"login": "frsyuki"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -287,8 +288,39 @@ CommandStatus createNextCommandStatus(\n         }\n \n         final EcsTaskStatus taskStatus = EcsTaskStatus.of(task.getLastStatus());\n-        final ObjectNode previousExecutorStatus = (ObjectNode) previousStatus.get(\"executor_state\");\n-        final ObjectNode nextExecutorStatus;\n+        ObjectNode previousExecutorStatus = (ObjectNode) previousStatus.get(\"executor_state\");\n+        ObjectNode nextExecutorStatus;\n+\n+        // To fetch log until all logs is written in CloudWatch, it should wait until getting finish marker in end of task.\n+        // (finished previous poll once considering risk of crushing while running previous actual poll.)\n+        final Optional<Long> taskFinishedAt = !previousStatus.has(\"task_finished_at\") ?\n+                Optional.absent() : Optional.of(previousStatus.get(\"task_finished_at\").asLong());\n+        if (taskFinishedAt.isPresent()) {\n+            long timeout = taskFinishedAt.get() + 60;\n+            do {\n+                previousExecutorStatus = fetchLogEvents(client, task, previousStatus, previousExecutorStatus);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7a04fb48c8febdc8838a8533eba16fb474b0ec4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM0ODE4Mw==", "bodyText": "Thank for teaching, I refactored like that to reduce ECS API call.\nd8de229", "url": "https://github.com/treasure-data/digdag/pull/1316#discussion_r371348183", "createdAt": "2020-01-27T16:35:06Z", "author": {"login": "naritta"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -287,8 +288,39 @@ CommandStatus createNextCommandStatus(\n         }\n \n         final EcsTaskStatus taskStatus = EcsTaskStatus.of(task.getLastStatus());\n-        final ObjectNode previousExecutorStatus = (ObjectNode) previousStatus.get(\"executor_state\");\n-        final ObjectNode nextExecutorStatus;\n+        ObjectNode previousExecutorStatus = (ObjectNode) previousStatus.get(\"executor_state\");\n+        ObjectNode nextExecutorStatus;\n+\n+        // To fetch log until all logs is written in CloudWatch, it should wait until getting finish marker in end of task.\n+        // (finished previous poll once considering risk of crushing while running previous actual poll.)\n+        final Optional<Long> taskFinishedAt = !previousStatus.has(\"task_finished_at\") ?\n+                Optional.absent() : Optional.of(previousStatus.get(\"task_finished_at\").asLong());\n+        if (taskFinishedAt.isPresent()) {\n+            long timeout = taskFinishedAt.get() + 60;\n+            do {\n+                previousExecutorStatus = fetchLogEvents(client, task, previousStatus, previousExecutorStatus);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MDMwMQ=="}, "originalCommit": {"oid": "e7a04fb48c8febdc8838a8533eba16fb474b0ec4"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjQyNDU4OnYy", "diffSide": "RIGHT", "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo1OToyNVrOFhrk9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNjowMTo1MlrOFiIEDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MTMwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            } else {\n          \n          \n            \n                            }\n          \n          \n            \n                            else {", "url": "https://github.com/treasure-data/digdag/pull/1316#discussion_r370861302", "createdAt": "2020-01-24T21:59:25Z", "author": {"login": "frsyuki"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -361,7 +386,12 @@ ObjectNode fetchLogEvents(final EcsClient client,\n         }\n         else {\n             for (final OutputLogEvent logEvent : logEvents) {\n-                log(logEvent.getMessage() + \"\\n\", clog);\n+                String log = logEvent.getMessage();\n+                if (log.contains(ECS_TASK_FINISHED)) {\n+                    nextExecutorStatus.set(\"logging_finished\", JsonNodeFactory.instance.textNode(\"true\"));\n+                } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7a04fb48c8febdc8838a8533eba16fb474b0ec4"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMyODAxMw==", "bodyText": "I fixed here.\nc8a0ac6", "url": "https://github.com/treasure-data/digdag/pull/1316#discussion_r371328013", "createdAt": "2020-01-27T16:01:52Z", "author": {"login": "naritta"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -361,7 +386,12 @@ ObjectNode fetchLogEvents(final EcsClient client,\n         }\n         else {\n             for (final OutputLogEvent logEvent : logEvents) {\n-                log(logEvent.getMessage() + \"\\n\", clog);\n+                String log = logEvent.getMessage();\n+                if (log.contains(ECS_TASK_FINISHED)) {\n+                    nextExecutorStatus.set(\"logging_finished\", JsonNodeFactory.instance.textNode(\"true\"));\n+                } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MTMwMg=="}, "originalCommit": {"oid": "e7a04fb48c8febdc8838a8533eba16fb474b0ec4"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjQyNjI4OnYy", "diffSide": "RIGHT", "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMjowMDoyMFrOFhrmEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNjowMDo0MFrOFiIBEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MTU4Ng==", "bodyText": "It's better to use a self-explaining name:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String ECS_TASK_FINISHED = \"ECS_TASK_FINISHED\";\n          \n          \n            \n                private static final String ECS_END_OF_TASK_LOG_MARK = \"ECS_TASK_FINISHED\";", "url": "https://github.com/treasure-data/digdag/pull/1316#discussion_r370861586", "createdAt": "2020-01-24T22:00:20Z", "author": {"login": "frsyuki"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -66,6 +66,7 @@\n \n     private static final String ECS_COMMAND_EXECUTOR_SYSTEM_CONFIG_PREFIX = \"agent.command_executor.ecs.\";\n     private static final String DEFAULT_COMMAND_TASK_TTL = ECS_COMMAND_EXECUTOR_SYSTEM_CONFIG_PREFIX + \"default_command_task_ttl\";\n+    private static final String ECS_TASK_FINISHED = \"ECS_TASK_FINISHED\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7a04fb48c8febdc8838a8533eba16fb474b0ec4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2NTI5MA==", "bodyText": "I think the value (\"ECS_TASK_FINISHED\") needs to be something more unlike because log stream finishes unexpectedly if a script outputs this message.\nHow about using \"--RWNzQ29tbWFuZEV4ZWN1dG9y--\"  // base64(\"EcsCommandExecutor\") for example? Idea is partially taken from https://www.w3.org/Protocols/rfc1341/7_2_Multipart.html", "url": "https://github.com/treasure-data/digdag/pull/1316#discussion_r370865290", "createdAt": "2020-01-24T22:11:38Z", "author": {"login": "frsyuki"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -66,6 +66,7 @@\n \n     private static final String ECS_COMMAND_EXECUTOR_SYSTEM_CONFIG_PREFIX = \"agent.command_executor.ecs.\";\n     private static final String DEFAULT_COMMAND_TASK_TTL = ECS_COMMAND_EXECUTOR_SYSTEM_CONFIG_PREFIX + \"default_command_task_ttl\";\n+    private static final String ECS_TASK_FINISHED = \"ECS_TASK_FINISHED\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MTU4Ng=="}, "originalCommit": {"oid": "e7a04fb48c8febdc8838a8533eba16fb474b0ec4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMyNzI0OA==", "bodyText": "I changed key to ECS_END_OF_TASK_LOG_MARK  and value to \"--RWNzQ29tbWFuZEV4ZWN1dG9y--\" here.\nc57f438", "url": "https://github.com/treasure-data/digdag/pull/1316#discussion_r371327248", "createdAt": "2020-01-27T16:00:40Z", "author": {"login": "naritta"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -66,6 +66,7 @@\n \n     private static final String ECS_COMMAND_EXECUTOR_SYSTEM_CONFIG_PREFIX = \"agent.command_executor.ecs.\";\n     private static final String DEFAULT_COMMAND_TASK_TTL = ECS_COMMAND_EXECUTOR_SYSTEM_CONFIG_PREFIX + \"default_command_task_ttl\";\n+    private static final String ECS_TASK_FINISHED = \"ECS_TASK_FINISHED\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MTU4Ng=="}, "originalCommit": {"oid": "e7a04fb48c8febdc8838a8533eba16fb474b0ec4"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjQzNDY3OnYy", "diffSide": "RIGHT", "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMjowNDoyNlrOFhrrgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNjowMToyN1rOFiIC_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2Mjk3OA==", "bodyText": "I recommend to use logging_finished_at and set timestamp instead of true because we can know when waiting logging has finished without much overhead. It helps us to investigate problems if some happened.", "url": "https://github.com/treasure-data/digdag/pull/1316#discussion_r370862978", "createdAt": "2020-01-24T22:04:26Z", "author": {"login": "frsyuki"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -361,7 +386,12 @@ ObjectNode fetchLogEvents(final EcsClient client,\n         }\n         else {\n             for (final OutputLogEvent logEvent : logEvents) {\n-                log(logEvent.getMessage() + \"\\n\", clog);\n+                String log = logEvent.getMessage();\n+                if (log.contains(ECS_TASK_FINISHED)) {\n+                    nextExecutorStatus.set(\"logging_finished\", JsonNodeFactory.instance.textNode(\"true\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7a04fb48c8febdc8838a8533eba16fb474b0ec4"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMyNzc0Mg==", "bodyText": "Sorry I forgot to fix, and I fixed to use time here.\nb45c5fb", "url": "https://github.com/treasure-data/digdag/pull/1316#discussion_r371327742", "createdAt": "2020-01-27T16:01:27Z", "author": {"login": "naritta"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -361,7 +386,12 @@ ObjectNode fetchLogEvents(final EcsClient client,\n         }\n         else {\n             for (final OutputLogEvent logEvent : logEvents) {\n-                log(logEvent.getMessage() + \"\\n\", clog);\n+                String log = logEvent.getMessage();\n+                if (log.contains(ECS_TASK_FINISHED)) {\n+                    nextExecutorStatus.set(\"logging_finished\", JsonNodeFactory.instance.textNode(\"true\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2Mjk3OA=="}, "originalCommit": {"oid": "e7a04fb48c8febdc8838a8533eba16fb474b0ec4"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjQzNzQxOnYy", "diffSide": "RIGHT", "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMjowNTo0NVrOFhrtJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNjowMjozMlrOFiIFuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MzM5Nw==", "bodyText": "This needs escaping:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    bashArguments.add(s(\"echo %s\", ECS_TASK_FINISHED));\n          \n          \n            \n                    bashArguments.add(s(\"echo \\\"%s\\\"\", ECS_TASK_FINISHED));", "url": "https://github.com/treasure-data/digdag/pull/1316#discussion_r370863397", "createdAt": "2020-01-24T22:05:45Z", "author": {"login": "frsyuki"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -618,6 +648,7 @@ protected void setEcsContainerOverrideCommand(\n         }\n         bashArguments.add(s(\"tar -zcf %s  --exclude %s --exclude %s .digdag/tmp/\", outputProjectArchivePathName, relativeProjectArchivePath.toString(), outputProjectArchivePathName));\n         bashArguments.add(s(\"curl -s -X PUT -T %s -L \\\"%s\\\"\", outputProjectArchivePathName, outputProjectArchiveDirectUploadUrl));\n+        bashArguments.add(s(\"echo %s\", ECS_TASK_FINISHED));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7a04fb48c8febdc8838a8533eba16fb474b0ec4"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMyODQ0Mw==", "bodyText": "I added escape here.\nec0e18e", "url": "https://github.com/treasure-data/digdag/pull/1316#discussion_r371328443", "createdAt": "2020-01-27T16:02:32Z", "author": {"login": "naritta"}, "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -618,6 +648,7 @@ protected void setEcsContainerOverrideCommand(\n         }\n         bashArguments.add(s(\"tar -zcf %s  --exclude %s --exclude %s .digdag/tmp/\", outputProjectArchivePathName, relativeProjectArchivePath.toString(), outputProjectArchivePathName));\n         bashArguments.add(s(\"curl -s -X PUT -T %s -L \\\"%s\\\"\", outputProjectArchivePathName, outputProjectArchiveDirectUploadUrl));\n+        bashArguments.add(s(\"echo %s\", ECS_TASK_FINISHED));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MzM5Nw=="}, "originalCommit": {"oid": "e7a04fb48c8febdc8838a8533eba16fb474b0ec4"}, "originalPosition": 102}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1178, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}