{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MTUyMDY0", "number": 1475, "title": "Avoid potential deadlock on `tasks` table", "bodyText": "We've observed PostgreSQL used by Digdag detected deadlocks.\n2020-10-26 23:00:55 UTC:xxxx(63248):xxxx@xxxxx:[90713]:ERROR:  deadlock detected\n2020-10-26 23:00:55 UTC:xxxx(63248):xxxx@xxxxx:[90713]:DETAIL:  Process 90713 waits for ShareLock on transaction 1911558785; blocked by process 88119.\n    Process 88119 waits for ShareLock on transaction 1911558683; blocked by process 90713.\n    Process 90713: update tasks set updated_at = now(), retry_at = NULL, state = 1 where state in (2,3) and retry_at <= now()\n    Process 88119: select id from tasks where id = $1 for update\n\nIt looks this happened due to the inconsistent locking orders between\nmultiple select id from tasks where id = $1 for update called by  \n  \n    \n      digdag/digdag-core/src/main/java/io/digdag/core/agent/InProcessTaskServerApi.java\n    \n    \n        Lines 32 to 37\n      in\n      2678bf6\n    \n    \n    \n    \n\n        \n          \n           List<TaskQueueLock> locks = directQueueClient.lockSharedAgentTasks(count, agentId.toString(), lockSeconds, maxSleepMillis); \n        \n\n        \n          \n           if (locks.isEmpty()) { \n        \n\n        \n          \n               return ImmutableList.of(); \n        \n\n        \n          \n           } \n        \n\n        \n          \n           else { \n        \n\n        \n          \n               return workflowExecutor.getTaskRequests(locks); \n        \n    \n  \n\n and update tasks set state = ${TaskStateCode.READY_CODE} where state in (...) and retry_at <= now() called by \n  \n    \n      digdag/digdag-core/src/main/java/io/digdag/core/workflow/WorkflowExecutor.java\n    \n    \n         Line 880\n      in\n      8baa1e7\n    \n    \n    \n    \n\n        \n          \n           return tm.begin(() -> sm.trySetRetryWaitingToReady() > 0); \n        \n    \n  \n\n.\nThis PR makes the 2 update operations take a lock in the same order.\nA slight drawback of this change is that the new UPDATE statement to move tasks status to READY will be slowed down since the new UPDATE statement uses UPDATE ... FROM SELECT ... ORDER BY id FOR UPDATE and I estimate the new version query is a few times slower. But from the metrics of our production environment that executes about 770K tasks per day, the target tasks, in other words \"retryable\" tasks, is only 6 on average and 22 at most. So I think this doesn't matter.", "createdAt": "2020-11-04T05:56:39Z", "url": "https://github.com/treasure-data/digdag/pull/1475", "merged": true, "mergeCommit": {"oid": "79c6d3b7d3056b8c9f3bb90b1e2548a0f7bbb9f1"}, "closed": true, "closedAt": "2020-11-11T06:17:30Z", "author": {"login": "komamitsu"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZHRanAH2gAyNTE1MTUyMDY0Ojc4YzNiZDZmODNjOTllNjk3NzhiYTFhMzBiMmZmNTM1OWNkZWI3MTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbXtnhAFqTUyNzg4NjQ5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "78c3bd6f83c99e69778ba1a30b2ff5359cdeb710", "author": {"user": {"login": "komamitsu", "name": "Mitsunori Komatsu"}}, "url": "https://github.com/treasure-data/digdag/commit/78c3bd6f83c99e69778ba1a30b2ff5359cdeb710", "committedDate": "2020-11-04T05:53:42Z", "message": "Avoid potential deadlock on `tasks` table"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5829764875db51afc942d5158af8fbc4bd304a77", "author": {"user": {"login": "komamitsu", "name": "Mitsunori Komatsu"}}, "url": "https://github.com/treasure-data/digdag/commit/5829764875db51afc942d5158af8fbc4bd304a77", "committedDate": "2020-11-04T06:24:04Z", "message": "Avoid in-place sort on immutable list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c338a4d1b440b00aa8f7443be5e9aa11fd53d91f", "author": {"user": {"login": "komamitsu", "name": "Mitsunori Komatsu"}}, "url": "https://github.com/treasure-data/digdag/commit/c338a4d1b440b00aa8f7443be5e9aa11fd53d91f", "committedDate": "2020-11-04T07:23:46Z", "message": "Fix broken SQL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a669fa1ce2544241fa6e6b84e22893d866192f36", "author": {"user": {"login": "komamitsu", "name": "Mitsunori Komatsu"}}, "url": "https://github.com/treasure-data/digdag/commit/a669fa1ce2544241fa6e6b84e22893d866192f36", "committedDate": "2020-11-04T07:53:01Z", "message": "Use original query for H2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e143465342ee55fb7cd59a4779f0640ec8628c2f", "author": {"user": {"login": "komamitsu", "name": "Mitsunori Komatsu"}}, "url": "https://github.com/treasure-data/digdag/commit/e143465342ee55fb7cd59a4779f0640ec8628c2f", "committedDate": "2020-11-05T08:36:14Z", "message": "Add InProcessTaskServerApiTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbeb97bb17c168d83cb3fc4a593a19cd931b6367", "author": {"user": {"login": "komamitsu", "name": "Mitsunori Komatsu"}}, "url": "https://github.com/treasure-data/digdag/commit/dbeb97bb17c168d83cb3fc4a593a19cd931b6367", "committedDate": "2020-11-06T03:31:11Z", "message": "Implement test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c65c273662c763bd9dbfb226ffc39a2f3abef19", "author": {"user": {"login": "komamitsu", "name": "Mitsunori Komatsu"}}, "url": "https://github.com/treasure-data/digdag/commit/5c65c273662c763bd9dbfb226ffc39a2f3abef19", "committedDate": "2020-11-06T09:30:50Z", "message": "Take care of retry-count-encoded uniqueName"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82717134268a2a4c4bd1b05a439df68cadb20e6d", "author": {"user": {"login": "komamitsu", "name": "Mitsunori Komatsu"}}, "url": "https://github.com/treasure-data/digdag/commit/82717134268a2a4c4bd1b05a439df68cadb20e6d", "committedDate": "2020-11-10T02:51:09Z", "message": "Avoid adding duplicated code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTk0MzEx", "url": "https://github.com/treasure-data/digdag/pull/1475#pullrequestreview-526994311", "createdAt": "2020-11-10T09:11:15Z", "commit": {"oid": "82717134268a2a4c4bd1b05a439df68cadb20e6d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToxMToxNVrOHwSypg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToxMToxNVrOHwSypg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQwMTU3NA==", "bodyText": "InProcessTaskServerApi.class is better ?", "url": "https://github.com/treasure-data/digdag/pull/1475#discussion_r520401574", "createdAt": "2020-11-10T09:11:15Z", "author": {"login": "yoyama"}, "path": "digdag-core/src/main/java/io/digdag/core/agent/InProcessTaskServerApi.java", "diffHunk": "@@ -7,11 +7,28 @@\n import io.digdag.spi.TaskQueueClient;\n import io.digdag.core.queue.TaskQueueServerManager;\n import io.digdag.core.workflow.WorkflowExecutor;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.Comparator;\n import java.util.List;\n+import java.util.function.ToLongFunction;\n+import java.util.stream.Collectors;\n \n public class InProcessTaskServerApi\n     implements TaskServerApi\n {\n+    private static final Logger logger = LoggerFactory.getLogger(WorkflowExecutor.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82717134268a2a4c4bd1b05a439df68cadb20e6d"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTk5NzYz", "url": "https://github.com/treasure-data/digdag/pull/1475#pullrequestreview-526999763", "createdAt": "2020-11-10T09:17:41Z", "commit": {"oid": "82717134268a2a4c4bd1b05a439df68cadb20e6d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToxNzo0MVrOHwTCxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToxNzo0MVrOHwTCxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQwNTcwMg==", "bodyText": "I am curious the naming rule of the function.\nIs there any reference to use capital letter with _ for the var name of function ?", "url": "https://github.com/treasure-data/digdag/pull/1475#discussion_r520405702", "createdAt": "2020-11-10T09:17:41Z", "author": {"login": "yoyama"}, "path": "digdag-core/src/main/java/io/digdag/core/agent/InProcessTaskServerApi.java", "diffHunk": "@@ -7,11 +7,28 @@\n import io.digdag.spi.TaskQueueClient;\n import io.digdag.core.queue.TaskQueueServerManager;\n import io.digdag.core.workflow.WorkflowExecutor;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.Comparator;\n import java.util.List;\n+import java.util.function.ToLongFunction;\n+import java.util.stream.Collectors;\n \n public class InProcessTaskServerApi\n     implements TaskServerApi\n {\n+    private static final Logger logger = LoggerFactory.getLogger(WorkflowExecutor.class);\n+    private final ToLongFunction<TaskQueueLock> CONV_FUNC_FROM_TASK_QUEUE_LOCK_TO_INT = taskQueueLock -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82717134268a2a4c4bd1b05a439df68cadb20e6d"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MDAxNzA5", "url": "https://github.com/treasure-data/digdag/pull/1475#pullrequestreview-527001709", "createdAt": "2020-11-10T09:19:52Z", "commit": {"oid": "82717134268a2a4c4bd1b05a439df68cadb20e6d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToxOTo1M1rOHwTIyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToxOTo1M1rOHwTIyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQwNzI0Mw==", "bodyText": "Is there any possible case to execute this catch(){} code or just in case ?", "url": "https://github.com/treasure-data/digdag/pull/1475#discussion_r520407243", "createdAt": "2020-11-10T09:19:53Z", "author": {"login": "yoyama"}, "path": "digdag-core/src/main/java/io/digdag/core/agent/InProcessTaskServerApi.java", "diffHunk": "@@ -7,11 +7,28 @@\n import io.digdag.spi.TaskQueueClient;\n import io.digdag.core.queue.TaskQueueServerManager;\n import io.digdag.core.workflow.WorkflowExecutor;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.Comparator;\n import java.util.List;\n+import java.util.function.ToLongFunction;\n+import java.util.stream.Collectors;\n \n public class InProcessTaskServerApi\n     implements TaskServerApi\n {\n+    private static final Logger logger = LoggerFactory.getLogger(WorkflowExecutor.class);\n+    private final ToLongFunction<TaskQueueLock> CONV_FUNC_FROM_TASK_QUEUE_LOCK_TO_INT = taskQueueLock -> {\n+        try {\n+            return WorkflowExecutor.parseTaskIdFromEncodedQueuedTaskName(taskQueueLock.getUniqueName());\n+        }\n+        catch (Throwable e) {\n+            logger.warn(\"Failed to convert TaskQueueLock.uniqueName to integer. The `uniqueName` will be handled as 0\", e);\n+            return 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82717134268a2a4c4bd1b05a439df68cadb20e6d"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MDA1ODI5", "url": "https://github.com/treasure-data/digdag/pull/1475#pullrequestreview-527005829", "createdAt": "2020-11-10T09:24:27Z", "commit": {"oid": "82717134268a2a4c4bd1b05a439df68cadb20e6d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToyNDoyN1rOHwTVYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToyNDoyN1rOHwTVYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQxMDQ2NQ==", "bodyText": "IIRC the purpose of the sub query is fixing the order of lock of the rows.\nIf so, is there any formal documentation description on it ?\nI have a minor concern whether it depends on the specific Pg version or undocumented internal behavior or not.", "url": "https://github.com/treasure-data/digdag/pull/1475#discussion_r520410465", "createdAt": "2020-11-10T09:24:27Z", "author": {"login": "yoyama"}, "path": "digdag-core/src/main/java/io/digdag/core/database/DatabaseSessionStoreManager.java", "diffHunk": "@@ -1745,6 +1759,18 @@ StoredSession upsertAndLockSession(@Bind(\"projectId\") int projectId,\n                 \" for update skip locked\")\n         Long lockTaskIfNotLocked(@Bind(\"id\") long taskId);\n \n+        @SqlUpdate(\"update tasks\" +\n+                \" set updated_at = now(), retry_at = NULL, state = \" + TaskStateCode.READY_CODE +\n+                \" from (\" +\n+                  \"select id from tasks\" +\n+                  \" where state in (\" + TaskStateCode.RETRY_WAITING_CODE +\",\" + TaskStateCode.GROUP_RETRY_WAITING_CODE + \")\" +\n+                  \" and retry_at \\\\<= now()\" +\n+                  \" order by id for update\" +\n+                \" ) lck\" +\n+                \" where tasks.id = lck.id\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82717134268a2a4c4bd1b05a439df68cadb20e6d"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55db506ad3aa55a4d511c6e0daf7e48c03f846ad", "author": {"user": {"login": "komamitsu", "name": "Mitsunori Komatsu"}}, "url": "https://github.com/treasure-data/digdag/commit/55db506ad3aa55a4d511c6e0daf7e48c03f846ad", "committedDate": "2020-11-10T10:06:55Z", "message": "Fix a few careless codes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3ODg2NDk1", "url": "https://github.com/treasure-data/digdag/pull/1475#pullrequestreview-527886495", "createdAt": "2020-11-11T06:10:50Z", "commit": {"oid": "55db506ad3aa55a4d511c6e0daf7e48c03f846ad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4073, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}