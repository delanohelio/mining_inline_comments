{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5OTIzODMw", "number": 1438, "title": "Add last_attempt_id idx to sessions", "bodyText": "This index helps to improve performance to get attempts.\n\n  \n    \n      digdag/digdag-core/src/main/java/io/digdag/core/database/DatabaseSessionStoreManager.java\n    \n    \n        Lines 1806 to 1819\n      in\n      cefde0d\n    \n    \n    \n    \n\n        \n          \n           @SqlQuery(\"select sa.*, s.session_uuid, s.workflow_name, s.session_time\" + \n        \n\n        \n          \n                   \" from session_attempts sa\" + \n        \n\n        \n          \n                   \" join sessions s on s.last_attempt_id = sa.id\" + \n        \n\n        \n          \n                   \" join projects proj on proj.id = sa.project_id\" + \n        \n\n        \n          \n                   \" where sa.site_id = :siteId\" + \n        \n\n        \n          \n                   \" and sa.id \\\\< :lastId\" + \n        \n\n        \n          \n                   \" and <acFilter>\" + \n        \n\n        \n          \n                   \" order by sa.id desc\" + \n        \n\n        \n          \n                   \" limit :limit\") \n        \n\n        \n          \n           List<StoredSessionAttemptWithSession> getAttempts( \n        \n\n        \n          \n                   @Bind(\"siteId\") int siteId, \n        \n\n        \n          \n                   @Bind(\"limit\") int limit, \n        \n\n        \n          \n                   @Bind(\"lastId\") long lastId, \n        \n\n        \n          \n                   @Define(\"acFilter\") String acFilter); \n        \n    \n  \n\n\nAs-Is:\ndigdag=# explain select sa.*, s.session_uuid, s.workflow_name, s.session_time from session_attempts sa\njoin sessions s on s.last_attempt_id = sa.id join projects proj on proj.id = sa.project_id\nwhere sa.site_id = 0 and sa.id < 10000000 and true order by sa.id desc limit 100;\n                                                           QUERY PLAN\n---------------------------------------------------------------------------------------------------------------------------------\n Limit  (cost=45.29..80.75 rows=100 width=255)\n   ->  Nested Loop  (cost=45.29..275.77 rows=650 width=255)\n         ->  Merge Join  (cost=45.14..126.56 rows=650 width=255)\n               Merge Cond: (sa.id = s.last_attempt_id)\n               ->  Index Scan Backward using session_attempts_pkey on session_attempts sa  (cost=0.28..70.01 rows=772 width=221)\n                     Index Cond: (id < 10000000)\n                     Filter: (site_id = 0)\n               ->  Sort  (cost=44.87..46.49 rows=650 width=42)\n                     Sort Key: s.last_attempt_id DESC\n                     ->  Seq Scan on sessions s  (cost=0.00..14.50 rows=650 width=42)\n         ->  Index Only Scan using projects_pkey on projects proj  (cost=0.15..0.23 rows=1 width=4)\n               Index Cond: (id = sa.project_id)\n(12 rows)\nTo-Be:\ndigdag=# explain select sa.*, s.session_uuid, s.workflow_name, s.session_time from session_attempts sa\njoin sessions s on s.last_attempt_id = sa.id join projects proj on proj.id = sa.project_id\nwhere sa.site_id = 0 and sa.id < 10000000 and true order by sa.id desc limit 100;\n                                                           QUERY PLAN\n---------------------------------------------------------------------------------------------------------------------------------\n Limit  (cost=0.70..41.58 rows=100 width=255)\n   ->  Nested Loop  (cost=0.70..266.39 rows=650 width=255)\n         ->  Merge Join  (cost=0.55..117.18 rows=650 width=255)\n               Merge Cond: (sa.id = s.last_attempt_id)\n               ->  Index Scan Backward using session_attempts_pkey on session_attempts sa  (cost=0.28..70.01 rows=772 width=221)\n                     Index Cond: (id < 10000000)\n                     Filter: (site_id = 0)\n               ->  Index Scan Backward using sessions_on_last_attempt_id on sessions s  (cost=0.28..37.11 rows=650 width=42)\n         ->  Index Only Scan using projects_pkey on projects proj  (cost=0.15..0.23 rows=1 width=4)\n               Index Cond: (id = sa.project_id)\n(10 rows)", "createdAt": "2020-07-16T06:12:39Z", "url": "https://github.com/treasure-data/digdag/pull/1438", "merged": true, "mergeCommit": {"oid": "e313219317fd276d414b290d717e93eb95745850"}, "closed": true, "closedAt": "2020-08-06T08:05:01Z", "author": {"login": "szyn"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1Y0xjAH2gAyNDQ5OTIzODMwOmQ3YzM5OWZhNWIxNThiNzBkZjU4YzRjMTZiNThmNTAwYjU2MDM5ODE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3CWXCgFqTQ1MjI1ODgzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d7c399fa5b158b70df58c4c16b58f500b5603981", "author": {"user": {"login": "szyn", "name": "Shota Suzuki"}}, "url": "https://github.com/treasure-data/digdag/commit/d7c399fa5b158b70df58c4c16b58f500b5603981", "committedDate": "2020-07-16T05:59:26Z", "message": "Add last_attempt_id idx to sessions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMTY0ODQw", "url": "https://github.com/treasure-data/digdag/pull/1438#pullrequestreview-452164840", "createdAt": "2020-07-21T06:38:31Z", "commit": {"oid": "d7c399fa5b158b70df58c4c16b58f500b5603981"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNjozODozMVrOG0qIwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNjozODozMVrOG0qIwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg2OTUwNg==", "bodyText": "This is needed because create index concurrently fails in a transaction?", "url": "https://github.com/treasure-data/digdag/pull/1438#discussion_r457869506", "createdAt": "2020-07-21T06:38:31Z", "author": {"login": "komamitsu"}, "path": "digdag-core/src/main/java/io/digdag/core/database/migrate/Migration_20200716114008_AddLastAttemptIdIndexToSessions.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package io.digdag.core.database.migrate;\n+\n+import org.skife.jdbi.v2.Handle;\n+\n+public class Migration_20200716114008_AddLastAttemptIdIndexToSessions\n+    implements Migration\n+{\n+    @Override\n+    public void migrate(Handle handle, MigrationContext context)\n+    {\n+        if (context.isPostgres()) {\n+            handle.update(\"create index concurrently sessions_on_last_attempt_id on sessions (last_attempt_id)\");\n+        } else {\n+            handle.update(\"create index sessions_on_last_attempt_id on sessions (last_attempt_id)\");\n+        }\n+    }\n+\n+    @Override\n+    public boolean noTransaction(MigrationContext context)\n+    {\n+        return context.isPostgres();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7c399fa5b158b70df58c4c16b58f500b5603981"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMjU4ODMx", "url": "https://github.com/treasure-data/digdag/pull/1438#pullrequestreview-452258831", "createdAt": "2020-07-21T08:56:09Z", "commit": {"oid": "d7c399fa5b158b70df58c4c16b58f500b5603981"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4042, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}