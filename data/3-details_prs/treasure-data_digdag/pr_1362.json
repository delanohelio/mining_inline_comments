{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MDgzNTI3", "number": 1362, "title": "Fix to retry when TDClient returns 401, 403 and get apikey again", "bodyText": "Currently we have unstable function to get apikey, so sometimes it fails.\nTo avoid this, I want to fix to retry when td client return 4xx.\nTo implement this, I think there are 2 ways like:\n\u30fbFix to retry when 4xx and update apikey before retrying.\n\u30fbcreate TD operator each time before each operation\n\n  \n    \n      digdag/digdag-standards/src/main/java/io/digdag/standards/operator/td/TdDdlOperatorFactory.java\n    \n    \n         Line 95\n      in\n      48939b1\n    \n    \n    \n    \n\n        \n          \n           op.withDatabase(d).ensureDatabaseDeleted(d); \n        \n    \n  \n\n\nlatter is simpler but very redundant because it has to create TD operator for all operation, so I implemented in former way, but I think both has disadvantage. (In current codebase, I think these 2 way is most simple.)", "createdAt": "2020-02-19T10:23:50Z", "url": "https://github.com/treasure-data/digdag/pull/1362", "merged": true, "mergeCommit": {"oid": "e9a1b3f038b859a7eb586ec5b0afbf20be503a34"}, "closed": true, "closedAt": "2020-03-04T06:33:10Z", "author": {"login": "naritta"}, "timelineItems": {"totalCount": 35, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcF1K83AH2gAyMzc3MDgzNTI3OmYwODhhNTA5Mjk0OTIxODZhODkzZTMyZTA3YjA4YTUzNjRjYmE2NzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIsNpGABqjMwODExNDIzNjk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f088a50929492186a893e32e07b08a5364cba671", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/f088a50929492186a893e32e07b08a5364cba671", "committedDate": "2020-02-19T11:52:38Z", "message": "Fix to retry when TDClient returns 4XX and get apikey again"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "079820bb8d8d32febd88c701689076e77629c682", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/079820bb8d8d32febd88c701689076e77629c682", "committedDate": "2020-02-19T11:47:40Z", "message": "Fix to retry when TDClient returns 4XX and get apikey again"}, "afterCommit": {"oid": "f088a50929492186a893e32e07b08a5364cba671", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/f088a50929492186a893e32e07b08a5364cba671", "committedDate": "2020-02-19T11:52:38Z", "message": "Fix to retry when TDClient returns 4XX and get apikey again"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMDUwNjE4", "url": "https://github.com/treasure-data/digdag/pull/1362#pullrequestreview-361050618", "createdAt": "2020-02-19T11:54:09Z", "commit": {"oid": "079820bb8d8d32febd88c701689076e77629c682"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMTo1NjozMlrOFrla7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMTo1NjozMlrOFrla7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI0NjE4OQ==", "bodyText": "Will it be better to use httpstatus code instead of 400 ~ 500 ? because not all 4xx are authentication failure", "url": "https://github.com/treasure-data/digdag/pull/1362#discussion_r381246189", "createdAt": "2020-02-19T11:56:32Z", "author": {"login": "LeenSun"}, "path": "digdag-standards/src/main/java/io/digdag/standards/operator/td/TDOperator.java", "diffHunk": "@@ -408,17 +415,27 @@ private static int exponentialBackoffInterval(DurationInterval pollInterval, int\n     static boolean isDeterministicClientException(Exception ex)\n     {\n         if (ex instanceof TDClientHttpException) {\n-            int statusCode = ((TDClientHttpException) ex).getStatusCode();\n-            switch (statusCode) {\n-                case HttpStatus.TOO_MANY_REQUESTS_429:\n-                case HttpStatus.REQUEST_TIMEOUT_408:\n-                    return false;\n-                default:\n-                    // return true if 4xx\n-                    return statusCode >= 400 && statusCode < 500;\n-            }\n+            return isAuthenticationErrorException((TDClientHttpException)ex);\n         }\n-        else if (ex instanceof TDClientException) {\n+        return isFailedBeforeSendClientException(ex);\n+    }\n+\n+    static boolean isAuthenticationErrorException(TDClientHttpException ex)\n+    {\n+        int statusCode = ex.getStatusCode();\n+        switch (statusCode) {\n+            case HttpStatus.TOO_MANY_REQUESTS_429:\n+            case HttpStatus.REQUEST_TIMEOUT_408:\n+                return false;\n+            default:\n+                // return true if 4xx\n+                return statusCode >= 400 && statusCode < 500;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f088a50929492186a893e32e07b08a5364cba671"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73cdc06b428726998469a599acc253af00472d2e", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/73cdc06b428726998469a599acc253af00472d2e", "committedDate": "2020-02-19T12:17:56Z", "message": "Fix isAuthenticationErrorException to use status code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "34c857b407b250f4f5ba4b49877592e89501c316", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/34c857b407b250f4f5ba4b49877592e89501c316", "committedDate": "2020-02-19T13:21:23Z", "message": "Fix TDOperatorFactory also"}, "afterCommit": {"oid": "f3f4fdde9e910fd68dff9ab2d669d92fa3d04239", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/f3f4fdde9e910fd68dff9ab2d669d92fa3d04239", "committedDate": "2020-02-20T03:44:54Z", "message": "Fix TDOperatorFactory also"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f3f4fdde9e910fd68dff9ab2d669d92fa3d04239", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/f3f4fdde9e910fd68dff9ab2d669d92fa3d04239", "committedDate": "2020-02-20T03:44:54Z", "message": "Fix TDOperatorFactory also"}, "afterCommit": {"oid": "7ca88a8e8ffab2ebb3fcb69b5e4bcd5631bb05b8", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/7ca88a8e8ffab2ebb3fcb69b5e4bcd5631bb05b8", "committedDate": "2020-02-20T03:55:20Z", "message": "Fix TDOperatorFactory also"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7ca88a8e8ffab2ebb3fcb69b5e4bcd5631bb05b8", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/7ca88a8e8ffab2ebb3fcb69b5e4bcd5631bb05b8", "committedDate": "2020-02-20T03:55:20Z", "message": "Fix TDOperatorFactory also"}, "afterCommit": {"oid": "6b7032ddd22d8ed26a0b7980e123729dd7295b98", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/6b7032ddd22d8ed26a0b7980e123729dd7295b98", "committedDate": "2020-02-20T04:58:07Z", "message": "Fix TDOperatorFactory also"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6b7032ddd22d8ed26a0b7980e123729dd7295b98", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/6b7032ddd22d8ed26a0b7980e123729dd7295b98", "committedDate": "2020-02-20T04:58:07Z", "message": "Fix TDOperatorFactory also"}, "afterCommit": {"oid": "ca486ec3e58d8726cfc446a116a670c7c3a4437d", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/ca486ec3e58d8726cfc446a116a670c7c3a4437d", "committedDate": "2020-02-20T07:11:26Z", "message": "Fix TDOperatorFactory also"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ca486ec3e58d8726cfc446a116a670c7c3a4437d", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/ca486ec3e58d8726cfc446a116a670c7c3a4437d", "committedDate": "2020-02-20T07:11:26Z", "message": "Fix TDOperatorFactory also"}, "afterCommit": {"oid": "dd18565836f85b1b5f62e503485a8a9673a0caad", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/dd18565836f85b1b5f62e503485a8a9673a0caad", "committedDate": "2020-02-20T08:21:17Z", "message": "Fix TDOperatorFactory also"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d32c73010cbb87cadac19a3c61eafbbfbff6fb7", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/9d32c73010cbb87cadac19a3c61eafbbfbff6fb7", "committedDate": "2020-02-20T09:03:02Z", "message": "Fix TDOperatorFactory also"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dd18565836f85b1b5f62e503485a8a9673a0caad", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/dd18565836f85b1b5f62e503485a8a9673a0caad", "committedDate": "2020-02-20T08:21:17Z", "message": "Fix TDOperatorFactory also"}, "afterCommit": {"oid": "9d32c73010cbb87cadac19a3c61eafbbfbff6fb7", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/9d32c73010cbb87cadac19a3c61eafbbfbff6fb7", "committedDate": "2020-02-20T09:03:02Z", "message": "Fix TDOperatorFactory also"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f01d62082854883f170d146c6e52e48649c429d", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/1f01d62082854883f170d146c6e52e48649c429d", "committedDate": "2020-02-21T03:46:34Z", "message": "Fix wrong catch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d86d333ab8fc94e806fddeeac11f64064776b4e0", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/d86d333ab8fc94e806fddeeac11f64064776b4e0", "committedDate": "2020-02-21T06:20:00Z", "message": "Fix to retry with defaultRetryExecutor not pollingRetryExecutor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "962cc6e968dae395855fadf7b2c11464aa8541dc", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/962cc6e968dae395855fadf7b2c11464aa8541dc", "committedDate": "2020-02-21T06:26:42Z", "message": "Delete needless change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5773201eee873d74491f2d790a3fd8710157ba9a", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/5773201eee873d74491f2d790a3fd8710157ba9a", "committedDate": "2020-02-21T06:45:07Z", "message": "Fix to use isNeedNotRetryException for fixed version"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNDQ0NTU4", "url": "https://github.com/treasure-data/digdag/pull/1362#pullrequestreview-362444558", "createdAt": "2020-02-21T07:41:02Z", "commit": {"oid": "5773201eee873d74491f2d790a3fd8710157ba9a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzo0MTowM1rOFsuBgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzo0MTowM1rOFsuBgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzNTcxNQ==", "bodyText": "I am not sure 401 and 403 are only authentication errors.\nBut you have investigated it and as result you set condition, it is ok.", "url": "https://github.com/treasure-data/digdag/pull/1362#discussion_r382435715", "createdAt": "2020-02-21T07:41:03Z", "author": {"login": "yoyama"}, "path": "digdag-standards/src/main/java/io/digdag/standards/operator/td/TDOperator.java", "diffHunk": "@@ -418,7 +442,43 @@ static boolean isDeterministicClientException(Exception ex)\n                     return statusCode >= 400 && statusCode < 500;\n             }\n         }\n-        else if (ex instanceof TDClientException) {\n+        return isFailedBeforeSendClientException(ex);\n+    }\n+\n+    static boolean isNeedNotRetryException(Exception ex)\n+    {\n+        if (ex instanceof TDClientHttpException) {\n+            int statusCode = ((TDClientHttpException) ex).getStatusCode();\n+            switch (statusCode) {\n+                case HttpStatus.TOO_MANY_REQUESTS_429:\n+                case HttpStatus.REQUEST_TIMEOUT_408:\n+                case HttpStatus.UNAUTHORIZED_401:\n+                case HttpStatus.FORBIDDEN_403:\n+                    return false;\n+                default:\n+                    // return true if 4xx\n+                    return statusCode >= 400 && statusCode < 500;\n+            }\n+        }\n+        return isFailedBeforeSendClientException(ex);\n+    }\n+\n+    static boolean isAuthenticationErrorException(TDClientHttpException ex)\n+    {\n+        int statusCode = ex.getStatusCode();\n+        switch (statusCode) {\n+            case HttpStatus.UNAUTHORIZED_401:\n+            // This is not for authentication basically, but it may be 403 for auth token error. https://tools.ietf.org/html/rfc6750\n+            case HttpStatus.FORBIDDEN_403:\n+                return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5773201eee873d74491f2d790a3fd8710157ba9a"}, "originalPosition": 164}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNDQ2NDI1", "url": "https://github.com/treasure-data/digdag/pull/1362#pullrequestreview-362446425", "createdAt": "2020-02-21T07:46:01Z", "commit": {"oid": "5773201eee873d74491f2d790a3fd8710157ba9a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzo0NjowMVrOFsuHaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzo0NjowMVrOFsuHaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzNzIyNw==", "bodyText": "Not serious, but method name may be difficult to understand. If possible rename is better.", "url": "https://github.com/treasure-data/digdag/pull/1362#discussion_r382437227", "createdAt": "2020-02-21T07:46:01Z", "author": {"login": "yoyama"}, "path": "digdag-standards/src/main/java/io/digdag/standards/operator/td/TDOperator.java", "diffHunk": "@@ -418,7 +442,43 @@ static boolean isDeterministicClientException(Exception ex)\n                     return statusCode >= 400 && statusCode < 500;\n             }\n         }\n-        else if (ex instanceof TDClientException) {\n+        return isFailedBeforeSendClientException(ex);\n+    }\n+\n+    static boolean isNeedNotRetryException(Exception ex)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5773201eee873d74491f2d790a3fd8710157ba9a"}, "originalPosition": 139}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNDQ3Nzky", "url": "https://github.com/treasure-data/digdag/pull/1362#pullrequestreview-362447792", "createdAt": "2020-02-21T07:49:27Z", "commit": {"oid": "5773201eee873d74491f2d790a3fd8710157ba9a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzo0OToyN1rOFsuLqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzo0OToyN1rOFsuLqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzODMxNA==", "bodyText": "I am not sure this condition is correct or not.\nIf this behavior is different from original, we should clarify the change.", "url": "https://github.com/treasure-data/digdag/pull/1362#discussion_r382438314", "createdAt": "2020-02-21T07:49:27Z", "author": {"login": "yoyama"}, "path": "digdag-standards/src/main/java/io/digdag/standards/operator/td/TDOperator.java", "diffHunk": "@@ -418,7 +442,43 @@ static boolean isDeterministicClientException(Exception ex)\n                     return statusCode >= 400 && statusCode < 500;\n             }\n         }\n-        else if (ex instanceof TDClientException) {\n+        return isFailedBeforeSendClientException(ex);\n+    }\n+\n+    static boolean isNeedNotRetryException(Exception ex)\n+    {\n+        if (ex instanceof TDClientHttpException) {\n+            int statusCode = ((TDClientHttpException) ex).getStatusCode();\n+            switch (statusCode) {\n+                case HttpStatus.TOO_MANY_REQUESTS_429:\n+                case HttpStatus.REQUEST_TIMEOUT_408:\n+                case HttpStatus.UNAUTHORIZED_401:\n+                case HttpStatus.FORBIDDEN_403:\n+                    return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5773201eee873d74491f2d790a3fd8710157ba9a"}, "originalPosition": 148}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e0ad03f10d3582a4b5a1316a85872cfd60d1fd4", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/6e0ad03f10d3582a4b5a1316a85872cfd60d1fd4", "committedDate": "2020-02-21T08:19:46Z", "message": "Add integration tests for td operator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "50381370c9727833287d8a0a932d1a16bb00ad2f", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/50381370c9727833287d8a0a932d1a16bb00ad2f", "committedDate": "2020-02-21T08:18:09Z", "message": "Add integration tests for td operator"}, "afterCommit": {"oid": "6e0ad03f10d3582a4b5a1316a85872cfd60d1fd4", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/6e0ad03f10d3582a4b5a1316a85872cfd60d1fd4", "committedDate": "2020-02-21T08:19:46Z", "message": "Add integration tests for td operator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNDc3Mjcz", "url": "https://github.com/treasure-data/digdag/pull/1362#pullrequestreview-362477273", "createdAt": "2020-02-21T08:53:02Z", "commit": {"oid": "5773201eee873d74491f2d790a3fd8710157ba9a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwODo1MzowMlrOFsvn9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwODo1MzowMlrOFsvn9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ2MTk0MQ==", "bodyText": "This defaultRetryExecutor is still used in TDJobOperator. Is this OK?", "url": "https://github.com/treasure-data/digdag/pull/1362#discussion_r382461941", "createdAt": "2020-02-21T08:53:02Z", "author": {"login": "yoyama"}, "path": "digdag-standards/src/main/java/io/digdag/standards/operator/td/TDOperator.java", "diffHunk": "@@ -67,7 +67,13 @@ public static TDOperator fromConfig(BaseTDClientFactory clientFactory, SystemDef\n \n         TDClient client = clientFactory.createClient(systemDefaultConfig, env, config, secrets);\n \n-        return new TDOperator(client, database);\n+        return new TDOperator(client, database, secrets);\n+    }\n+\n+    public void updateApikey(SecretProvider secrets)\n+    {\n+        String apikey = TDClientFactory.getApikey(secrets);\n+        client = client.withApiKey(apikey);\n     }\n \n     static final RetryExecutor defaultRetryExecutor = retryExecutor()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5773201eee873d74491f2d790a3fd8710157ba9a"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87cf2ba7c7b3232be7228e896d2e0892a03094cf", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/87cf2ba7c7b3232be7228e896d2e0892a03094cf", "committedDate": "2020-02-25T01:50:46Z", "message": "Fix TDJobOperator also to adapt to updating apikey"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "972d0b788f7c0ac101c9f9453472fc4ffbbb6db6", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/972d0b788f7c0ac101c9f9453472fc4ffbbb6db6", "committedDate": "2020-02-25T01:57:03Z", "message": "Fix exception name to isDeterministicException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddd4750b75e6d84cd5e12c5e6d8fb9cb9ccc986a", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/ddd4750b75e6d84cd5e12c5e6d8fb9cb9ccc986a", "committedDate": "2020-02-25T09:00:41Z", "message": "Fix to divide retry executor for auth error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1c0af1001146e3a67e74cef7882d6fb087a2cca", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/c1c0af1001146e3a67e74cef7882d6fb087a2cca", "committedDate": "2020-02-25T09:16:05Z", "message": "Fix TDJobOperator also"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c747496dba7b117c6fd0bbee78bb58cb5fa6798", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/7c747496dba7b117c6fd0bbee78bb58cb5fa6798", "committedDate": "2020-02-25T09:49:44Z", "message": "Fix runWithRetry to use ignoreException as args"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30d6334dd253e238631d5f3ea0c54103fa9a7fc8", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/30d6334dd253e238631d5f3ea0c54103fa9a7fc8", "committedDate": "2020-02-26T03:27:35Z", "message": "Fix auth error logic and refactor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NDMzNzQz", "url": "https://github.com/treasure-data/digdag/pull/1362#pullrequestreview-365433743", "createdAt": "2020-02-27T06:10:01Z", "commit": {"oid": "30d6334dd253e238631d5f3ea0c54103fa9a7fc8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjoxMDowMVrOFvGP0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjoxMDowMVrOFvGP0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkyOTc0NA==", "bodyText": "This method is similar to TDOperator.authenticatinRetryExecutor().\nBut some options are not set.\nCould you explain difference between them ?\nCan't we merge and reuse same logic?", "url": "https://github.com/treasure-data/digdag/pull/1362#discussion_r384929744", "createdAt": "2020-02-27T06:10:01Z", "author": {"login": "yoyama"}, "path": "digdag-standards/src/main/java/io/digdag/standards/operator/td/TDJobOperator.java", "diffHunk": "@@ -7,59 +7,92 @@\n import com.google.common.base.Throwables;\n import com.google.common.collect.ImmutableList;\n import com.treasuredata.client.TDClient;\n+import com.treasuredata.client.TDClientHttpException;\n import com.treasuredata.client.model.TDJob;\n import com.treasuredata.client.model.TDJobSummary;\n import com.treasuredata.client.model.TDResultFormat;\n+import io.digdag.spi.SecretProvider;\n import io.digdag.spi.TaskExecutionException;\n+import io.digdag.util.RetryExecutor;\n import io.digdag.util.RetryExecutor.RetryGiveupException;\n import org.msgpack.core.MessagePack;\n import org.msgpack.core.MessageUnpacker;\n import org.msgpack.value.ArrayValue;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import java.io.IOException;\n import java.io.UncheckedIOException;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.concurrent.Callable;\n import java.util.zip.GZIPInputStream;\n \n+import static io.digdag.standards.operator.td.TDOperator.AUTH_MAX_RETRY_LIMIT;\n import static io.digdag.standards.operator.td.TDOperator.defaultRetryExecutor;\n+import static io.digdag.standards.operator.td.TDOperator.isAuthenticationErrorException;\n+import static io.digdag.util.RetryExecutor.retryExecutor;\n \n class TDJobOperator\n {\n-    private final TDClient client;\n+    private TDClient client;\n     private final String jobId;\n+    private final SecretProvider secrets;\n \n-    TDJobOperator(TDClient client, String jobId)\n+    private static final Logger logger = LoggerFactory.getLogger(TDJobOperator.class);\n+\n+    TDJobOperator(TDClient client, String jobId, SecretProvider secrets)\n     {\n         this.client = client;\n         this.jobId = jobId;\n+        this.secrets = secrets;\n+    }\n+\n+    void updateApikey(SecretProvider secrets)\n+    {\n+        String apikey = TDClientFactory.getApikey(secrets);\n+        client = client.withApiKey(apikey);\n+    }\n+\n+    RetryExecutor authenticatinRetryExecutor() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30d6334dd253e238631d5f3ea0c54103fa9a7fc8"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NDM0MDk4", "url": "https://github.com/treasure-data/digdag/pull/1362#pullrequestreview-365434098", "createdAt": "2020-02-27T06:11:12Z", "commit": {"oid": "30d6334dd253e238631d5f3ea0c54103fa9a7fc8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjoxMToxMlrOFvGRAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjoxMToxMlrOFvGRAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzMDA0OA==", "bodyText": "Ditto. It seems complet same logic in TDOperator.", "url": "https://github.com/treasure-data/digdag/pull/1362#discussion_r384930048", "createdAt": "2020-02-27T06:11:12Z", "author": {"login": "yoyama"}, "path": "digdag-standards/src/main/java/io/digdag/standards/operator/td/TDJobOperator.java", "diffHunk": "@@ -7,59 +7,92 @@\n import com.google.common.base.Throwables;\n import com.google.common.collect.ImmutableList;\n import com.treasuredata.client.TDClient;\n+import com.treasuredata.client.TDClientHttpException;\n import com.treasuredata.client.model.TDJob;\n import com.treasuredata.client.model.TDJobSummary;\n import com.treasuredata.client.model.TDResultFormat;\n+import io.digdag.spi.SecretProvider;\n import io.digdag.spi.TaskExecutionException;\n+import io.digdag.util.RetryExecutor;\n import io.digdag.util.RetryExecutor.RetryGiveupException;\n import org.msgpack.core.MessagePack;\n import org.msgpack.core.MessageUnpacker;\n import org.msgpack.value.ArrayValue;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import java.io.IOException;\n import java.io.UncheckedIOException;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.concurrent.Callable;\n import java.util.zip.GZIPInputStream;\n \n+import static io.digdag.standards.operator.td.TDOperator.AUTH_MAX_RETRY_LIMIT;\n import static io.digdag.standards.operator.td.TDOperator.defaultRetryExecutor;\n+import static io.digdag.standards.operator.td.TDOperator.isAuthenticationErrorException;\n+import static io.digdag.util.RetryExecutor.retryExecutor;\n \n class TDJobOperator\n {\n-    private final TDClient client;\n+    private TDClient client;\n     private final String jobId;\n+    private final SecretProvider secrets;\n \n-    TDJobOperator(TDClient client, String jobId)\n+    private static final Logger logger = LoggerFactory.getLogger(TDJobOperator.class);\n+\n+    TDJobOperator(TDClient client, String jobId, SecretProvider secrets)\n     {\n         this.client = client;\n         this.jobId = jobId;\n+        this.secrets = secrets;\n+    }\n+\n+    void updateApikey(SecretProvider secrets)\n+    {\n+        String apikey = TDClientFactory.getApikey(secrets);\n+        client = client.withApiKey(apikey);\n+    }\n+\n+    RetryExecutor authenticatinRetryExecutor() {\n+        return defaultRetryExecutor\n+            .withRetryLimit(AUTH_MAX_RETRY_LIMIT)\n+            .onRetry((exception, retryCount, retryLimit, retryWait) -> {\n+                logger.warn(\"apikey will be tried to update by retrying\");\n+                updateApikey(secrets);\n+            })\n+            .retryIf((exception) -> isAuthenticationErrorException(exception));\n     }\n \n     String getJobId()\n     {\n         return jobId;\n     }\n \n-    TDJobSummary getJobStatus()\n+    private <T> T callWithRetry(Callable<T> op)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30d6334dd253e238631d5f3ea0c54103fa9a7fc8"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NDM0OTM2", "url": "https://github.com/treasure-data/digdag/pull/1362#pullrequestreview-365434936", "createdAt": "2020-02-27T06:14:08Z", "commit": {"oid": "30d6334dd253e238631d5f3ea0c54103fa9a7fc8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjoxNDowOVrOFvGTwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjoxNDowOVrOFvGTwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzMDc1Mg==", "bodyText": "Logging is good. But warn is the best? In my understand it is not problem so debug or info may be better.", "url": "https://github.com/treasure-data/digdag/pull/1362#discussion_r384930752", "createdAt": "2020-02-27T06:14:09Z", "author": {"login": "yoyama"}, "path": "digdag-standards/src/main/java/io/digdag/standards/operator/td/TDJobOperator.java", "diffHunk": "@@ -7,59 +7,92 @@\n import com.google.common.base.Throwables;\n import com.google.common.collect.ImmutableList;\n import com.treasuredata.client.TDClient;\n+import com.treasuredata.client.TDClientHttpException;\n import com.treasuredata.client.model.TDJob;\n import com.treasuredata.client.model.TDJobSummary;\n import com.treasuredata.client.model.TDResultFormat;\n+import io.digdag.spi.SecretProvider;\n import io.digdag.spi.TaskExecutionException;\n+import io.digdag.util.RetryExecutor;\n import io.digdag.util.RetryExecutor.RetryGiveupException;\n import org.msgpack.core.MessagePack;\n import org.msgpack.core.MessageUnpacker;\n import org.msgpack.value.ArrayValue;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import java.io.IOException;\n import java.io.UncheckedIOException;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.concurrent.Callable;\n import java.util.zip.GZIPInputStream;\n \n+import static io.digdag.standards.operator.td.TDOperator.AUTH_MAX_RETRY_LIMIT;\n import static io.digdag.standards.operator.td.TDOperator.defaultRetryExecutor;\n+import static io.digdag.standards.operator.td.TDOperator.isAuthenticationErrorException;\n+import static io.digdag.util.RetryExecutor.retryExecutor;\n \n class TDJobOperator\n {\n-    private final TDClient client;\n+    private TDClient client;\n     private final String jobId;\n+    private final SecretProvider secrets;\n \n-    TDJobOperator(TDClient client, String jobId)\n+    private static final Logger logger = LoggerFactory.getLogger(TDJobOperator.class);\n+\n+    TDJobOperator(TDClient client, String jobId, SecretProvider secrets)\n     {\n         this.client = client;\n         this.jobId = jobId;\n+        this.secrets = secrets;\n+    }\n+\n+    void updateApikey(SecretProvider secrets)\n+    {\n+        String apikey = TDClientFactory.getApikey(secrets);\n+        client = client.withApiKey(apikey);\n+    }\n+\n+    RetryExecutor authenticatinRetryExecutor() {\n+        return defaultRetryExecutor\n+            .withRetryLimit(AUTH_MAX_RETRY_LIMIT)\n+            .onRetry((exception, retryCount, retryLimit, retryWait) -> {\n+                logger.warn(\"apikey will be tried to update by retrying\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30d6334dd253e238631d5f3ea0c54103fa9a7fc8"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f824f2e8ebed8a9642c28e46caaed67c655b4ae9", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/f824f2e8ebed8a9642c28e46caaed67c655b4ae9", "committedDate": "2020-02-27T06:42:10Z", "message": "Fix logger level to debug"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MTcyOTgx", "url": "https://github.com/treasure-data/digdag/pull/1362#pullrequestreview-366172981", "createdAt": "2020-02-28T05:51:30Z", "commit": {"oid": "8a59c888ef5840f776d8e696c80a39c361c2cf12"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwNTo1MTozMVrOFvqLiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwNTo1MTozMVrOFvqLiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUxODQ3NQ==", "bodyText": "No new line?", "url": "https://github.com/treasure-data/digdag/pull/1362#discussion_r385518475", "createdAt": "2020-02-28T05:51:31Z", "author": {"login": "yoyama"}, "path": "digdag-standards/src/main/java/io/digdag/standards/operator/td/BaseTDOperator.java", "diffHunk": "@@ -0,0 +1,120 @@\n+package io.digdag.standards.operator.td;\n+\n+import com.google.common.base.Throwables;\n+import com.treasuredata.client.TDClient;\n+import com.treasuredata.client.TDClientException;\n+import com.treasuredata.client.TDClientHttpException;\n+import io.digdag.spi.SecretProvider;\n+import io.digdag.util.RetryExecutor;\n+import io.digdag.util.RetryExecutor.RetryGiveupException;\n+import org.eclipse.jetty.http.HttpStatus;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.concurrent.Callable;\n+\n+import static io.digdag.util.RetryExecutor.retryExecutor;\n+\n+public class BaseTDOperator\n+{\n+    private static final Logger logger = LoggerFactory.getLogger(BaseTDOperator.class);\n+\n+    private static final int INITIAL_RETRY_WAIT = 500;\n+    private static final int MAX_RETRY_WAIT = 2000;\n+    private static final int MAX_RETRY_LIMIT = 3;\n+    public static final int AUTH_MAX_RETRY_LIMIT = 1;\n+\n+    TDClient client;\n+    SecretProvider secrets;\n+\n+    static final RetryExecutor defaultRetryExecutor = retryExecutor()\n+            .withInitialRetryWait(INITIAL_RETRY_WAIT)\n+            .withMaxRetryWait(MAX_RETRY_WAIT)\n+            .withRetryLimit(MAX_RETRY_LIMIT)\n+            .retryIf((exception) -> !isDeterministicClientException(exception));\n+\n+    public void updateApikey(SecretProvider secrets)\n+    {\n+        String apikey = TDClientFactory.getApikey(secrets);\n+        client = client.withApiKey(apikey);\n+    }\n+\n+    public RetryExecutor authenticatinRetryExecutor() {\n+        return retryExecutor()\n+                .withInitialRetryWait(INITIAL_RETRY_WAIT)\n+                .withMaxRetryWait(MAX_RETRY_WAIT)\n+                .withRetryLimit(AUTH_MAX_RETRY_LIMIT)\n+                .onRetry((exception, retryCount, retryLimit, retryWait) -> {\n+                    logger.debug(\"apikey will be tried to update by retrying\");\n+                    updateApikey(secrets);\n+                })\n+                .retryIf((exception) -> isAuthenticationErrorException(exception));\n+    }\n+\n+    public <T> T callWithRetry(Callable<T> op)\n+    {\n+        try {\n+            return defaultRetryExecutor.run(() -> {\n+                try {\n+                    return authenticatinRetryExecutor().run(() -> op.call());\n+                } catch (RetryGiveupException ex) {\n+                    throw Throwables.propagate(ex.getCause());\n+                }\n+            });\n+        }\n+        catch (RetryGiveupException ex) {\n+            throw Throwables.propagate(ex.getCause());\n+        }\n+    }\n+\n+    static boolean isDeterministicClientException(Exception ex)\n+    {\n+        if (ex instanceof TDClientHttpException) {\n+            int statusCode = ((TDClientHttpException) ex).getStatusCode();\n+            switch (statusCode) {\n+                case HttpStatus.TOO_MANY_REQUESTS_429:\n+                case HttpStatus.REQUEST_TIMEOUT_408:\n+                    return false;\n+                default:\n+                    // return true if 4xx\n+                    return statusCode >= 400 && statusCode < 500;\n+            }\n+        }\n+        return isFailedBeforeSendClientException(ex);\n+    }\n+\n+    static boolean isFailedBeforeSendClientException(Exception ex)\n+    {\n+        if (ex instanceof TDClientException) {\n+            // failed before sending HTTP request or receiving HTTP response\n+            TDClientException.ErrorType errorType = ((TDClientException) ex).getErrorType();\n+            switch (errorType) {\n+                case INVALID_CONFIGURATION:  // failed to read td.conf, failed to pares integer in properties set to TDClientBuilder, etc.\n+                case INVALID_INPUT:          // early table name validation fails, failed to format request body in json, etc.\n+                    return true;\n+                default:\n+                    // other cases such as PROXY_AUTHENTICATION_FAILURE, SSL_ERROR, REQUEST_TIMEOUT, INTERRUPTED, etc.\n+                    break;  // pass-through\n+            }\n+        }\n+        return false;\n+    }\n+\n+    static boolean isAuthenticationErrorException(Exception ex)\n+    {\n+        if (ex instanceof TDClientHttpException) {\n+            int statusCode = ((TDClientHttpException) ex).getStatusCode();\n+            switch (statusCode) {\n+                case HttpStatus.UNAUTHORIZED_401:\n+                    // This is not for authentication basically, but it may be 403 for auth token error. https://tools.ietf.org/html/rfc6750\n+                case HttpStatus.FORBIDDEN_403:\n+                    return true;\n+                default:\n+                    return false;\n+            }\n+        }\n+        else {\n+            return false;\n+        }\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a59c888ef5840f776d8e696c80a39c361c2cf12"}, "originalPosition": 120}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MTc3MzQ4", "url": "https://github.com/treasure-data/digdag/pull/1362#pullrequestreview-366177348", "createdAt": "2020-02-28T06:08:48Z", "commit": {"oid": "8a59c888ef5840f776d8e696c80a39c361c2cf12"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6afc81b4f4114a71ad9e18df8155e9443fc08b2f", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/6afc81b4f4114a71ad9e18df8155e9443fc08b2f", "committedDate": "2020-02-28T09:08:03Z", "message": "Create BaseTDOperator to extend in each TD operator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8a59c888ef5840f776d8e696c80a39c361c2cf12", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/8a59c888ef5840f776d8e696c80a39c361c2cf12", "committedDate": "2020-02-28T04:00:31Z", "message": "Create BaseTDOperator to extend in each TD operator"}, "afterCommit": {"oid": "6afc81b4f4114a71ad9e18df8155e9443fc08b2f", "author": {"user": {"login": "naritta", "name": "Ritta Narita"}}, "url": "https://github.com/treasure-data/digdag/commit/6afc81b4f4114a71ad9e18df8155e9443fc08b2f", "committedDate": "2020-02-28T09:08:03Z", "message": "Create BaseTDOperator to extend in each TD operator"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4116, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}