{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwOTA0MDQ4", "number": 1503, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNjo1NTowOFrOFIb87Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwODoyNzoyNFrOFIesyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MzkwODkzOnYy", "diffSide": "RIGHT", "path": "digdag-tests/src/test/java/acceptance/RequireIT.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNjo1NTowOFrOIKWipA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzo1NjoyOFrOIKZdzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzcyNTk4OA==", "bodyText": "May be attemptId.toString() or attemptId.get() is enough ?", "url": "https://github.com/treasure-data/digdag/pull/1503#discussion_r547725988", "createdAt": "2020-12-23T06:55:08Z", "author": {"login": "yoyama"}, "path": "digdag-tests/src/test/java/acceptance/RequireIT.java", "diffHunk": "@@ -115,6 +118,27 @@ public void testRequire()\n \n         // Verify that the file created by the child workflow is there\n         assertThat(Files.exists(childOutFile), is(true));\n+\n+        CommandStatus attemptTasks = main(\"tasks\",\n+                \"-c\", config.toString(),\n+                \"-e\", server.endpoint(),\n+                String.valueOf(attemptId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2e73566806a8390c4ff021dd5d38e025bf8eaa0"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzc2NTEzOA==", "bodyText": "Agreed. This code follows the existing style.\n\n  \n    \n      digdag/digdag-tests/src/test/java/acceptance/RequireIT.java\n    \n    \n         Line 107\n      in\n      c978727\n    \n    \n    \n    \n\n        \n          \n           String.valueOf(attemptId)); \n        \n    \n  \n\n\nI'm going to fix my code.", "url": "https://github.com/treasure-data/digdag/pull/1503#discussion_r547765138", "createdAt": "2020-12-23T07:46:03Z", "author": {"login": "hkdnet"}, "path": "digdag-tests/src/test/java/acceptance/RequireIT.java", "diffHunk": "@@ -115,6 +118,27 @@ public void testRequire()\n \n         // Verify that the file created by the child workflow is there\n         assertThat(Files.exists(childOutFile), is(true));\n+\n+        CommandStatus attemptTasks = main(\"tasks\",\n+                \"-c\", config.toString(),\n+                \"-e\", server.endpoint(),\n+                String.valueOf(attemptId));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzcyNTk4OA=="}, "originalCommit": {"oid": "e2e73566806a8390c4ff021dd5d38e025bf8eaa0"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzc3MzkwMg==", "bodyText": "Updated hkdnet@19de2e1", "url": "https://github.com/treasure-data/digdag/pull/1503#discussion_r547773902", "createdAt": "2020-12-23T07:56:28Z", "author": {"login": "hkdnet"}, "path": "digdag-tests/src/test/java/acceptance/RequireIT.java", "diffHunk": "@@ -115,6 +118,27 @@ public void testRequire()\n \n         // Verify that the file created by the child workflow is there\n         assertThat(Files.exists(childOutFile), is(true));\n+\n+        CommandStatus attemptTasks = main(\"tasks\",\n+                \"-c\", config.toString(),\n+                \"-e\", server.endpoint(),\n+                String.valueOf(attemptId));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzcyNTk4OA=="}, "originalCommit": {"oid": "e2e73566806a8390c4ff021dd5d38e025bf8eaa0"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MzkxMDUyOnYy", "diffSide": "RIGHT", "path": "digdag-tests/src/test/java/acceptance/RequireIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNjo1NToyM1rOIKWjtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNjo1NToyM1rOIKWjtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzcyNjI2MQ==", "bodyText": "ditto", "url": "https://github.com/treasure-data/digdag/pull/1503#discussion_r547726261", "createdAt": "2020-12-23T06:55:23Z", "author": {"login": "yoyama"}, "path": "digdag-tests/src/test/java/acceptance/RequireIT.java", "diffHunk": "@@ -115,6 +118,27 @@ public void testRequire()\n \n         // Verify that the file created by the child workflow is there\n         assertThat(Files.exists(childOutFile), is(true));\n+\n+        CommandStatus attemptTasks = main(\"tasks\",\n+                \"-c\", config.toString(),\n+                \"-e\", server.endpoint(),\n+                String.valueOf(attemptId));\n+\n+        List<Config> stateParams = getStateParams(attemptTasks);\n+\n+        // It has 2 tasks, +parent and +parent+require.\n+        assertThat(stateParams.size(), is(2));\n+        Config requireOperatorStateParams = stateParams.get(1);\n+\n+        Id targetAttemptId = requireOperatorStateParams.get(\"target_attempt_id\", Id.class);\n+        CommandStatus targetAttemptStatus = main(\"attempts\",\n+                \"-c\", config.toString(),\n+                \"-e\", server.endpoint(),\n+                String.valueOf(targetAttemptId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2e73566806a8390c4ff021dd5d38e025bf8eaa0"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0Mzk3MzQ0OnYy", "diffSide": "RIGHT", "path": "digdag-tests/src/test/java/acceptance/RequireIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzowODowOFrOIKXLww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzo1NTozNVrOIKZasg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzczNjUxNQ==", "bodyText": "Increase the maximum wait to 60 may be better. We sometimes faces timeout because of CI performance.", "url": "https://github.com/treasure-data/digdag/pull/1503#discussion_r547736515", "createdAt": "2020-12-23T07:08:08Z", "author": {"login": "yoyama"}, "path": "digdag-tests/src/test/java/acceptance/RequireIT.java", "diffHunk": "@@ -425,4 +449,85 @@ private void prepareForChildWF(Path childOutFile)\n             Files.write(projectDir.resolve(\"child.dig\"), child.getBytes(\"UTF-8\"));\n         }\n     }\n+\n+    @Test\n+    public void testRequireHasTargetSessionIdEvenWhenJustWaiting()\n+            throws Exception\n+    {\n+        // Create new project\n+        CommandStatus initStatus = main(\"init\",\n+                \"-c\", config.toString(),\n+                projectDir.toString());\n+        assertThat(initStatus.errUtf8(), initStatus.code(), is(0));\n+\n+        Path childOutFile = projectDir.resolve(\"child.out\").toAbsolutePath().normalize();\n+        prepareForChildWF(childOutFile);\n+        copyResource(\"acceptance/require/parent.dig\", projectDir.resolve(\"parent.dig\"));\n+\n+        // Push the project\n+        CommandStatus pushStatus = main(\"push\",\n+                \"--project\", projectDir.toString(),\n+                \"require\",\n+                \"-c\", config.toString(),\n+                \"-e\", server.endpoint(),\n+                \"-r\", \"4711\");\n+        assertThat(pushStatus.errUtf8(), pushStatus.code(), is(0));\n+\n+        // Start the child workflow first.\n+        String session = \"2016-01-01\";\n+\n+        Id targetAttemptId;\n+        Id targetSessionId;\n+        {\n+            CommandStatus startStatus = main(\"start\",\n+                    \"-c\", config.toString(),\n+                    \"-e\", server.endpoint(),\n+                    \"require\", \"child\",\n+                    \"--session\", session);\n+            assertThat(startStatus.code(), is(0));\n+            targetAttemptId = getAttemptId(startStatus);\n+            targetSessionId = getSessionId(startStatus);\n+        }\n+\n+        // Start the workflow\n+        Id attemptId;\n+        {\n+            CommandStatus startStatus = main(\"start\",\n+                    \"-c\", config.toString(),\n+                    \"-e\", server.endpoint(),\n+                    \"require\", \"parent\",\n+                    \"--session\", session);\n+            assertThat(startStatus.code(), is(0));\n+            attemptId = getAttemptId(startStatus);\n+        }\n+\n+        // Wait for the attempt to complete\n+        boolean success = false;\n+        for (int i = 0; i < 30; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2e73566806a8390c4ff021dd5d38e025bf8eaa0"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzc3MzEwNg==", "bodyText": "Thanks. Updated the limits. hkdnet@f00f700", "url": "https://github.com/treasure-data/digdag/pull/1503#discussion_r547773106", "createdAt": "2020-12-23T07:55:35Z", "author": {"login": "hkdnet"}, "path": "digdag-tests/src/test/java/acceptance/RequireIT.java", "diffHunk": "@@ -425,4 +449,85 @@ private void prepareForChildWF(Path childOutFile)\n             Files.write(projectDir.resolve(\"child.dig\"), child.getBytes(\"UTF-8\"));\n         }\n     }\n+\n+    @Test\n+    public void testRequireHasTargetSessionIdEvenWhenJustWaiting()\n+            throws Exception\n+    {\n+        // Create new project\n+        CommandStatus initStatus = main(\"init\",\n+                \"-c\", config.toString(),\n+                projectDir.toString());\n+        assertThat(initStatus.errUtf8(), initStatus.code(), is(0));\n+\n+        Path childOutFile = projectDir.resolve(\"child.out\").toAbsolutePath().normalize();\n+        prepareForChildWF(childOutFile);\n+        copyResource(\"acceptance/require/parent.dig\", projectDir.resolve(\"parent.dig\"));\n+\n+        // Push the project\n+        CommandStatus pushStatus = main(\"push\",\n+                \"--project\", projectDir.toString(),\n+                \"require\",\n+                \"-c\", config.toString(),\n+                \"-e\", server.endpoint(),\n+                \"-r\", \"4711\");\n+        assertThat(pushStatus.errUtf8(), pushStatus.code(), is(0));\n+\n+        // Start the child workflow first.\n+        String session = \"2016-01-01\";\n+\n+        Id targetAttemptId;\n+        Id targetSessionId;\n+        {\n+            CommandStatus startStatus = main(\"start\",\n+                    \"-c\", config.toString(),\n+                    \"-e\", server.endpoint(),\n+                    \"require\", \"child\",\n+                    \"--session\", session);\n+            assertThat(startStatus.code(), is(0));\n+            targetAttemptId = getAttemptId(startStatus);\n+            targetSessionId = getSessionId(startStatus);\n+        }\n+\n+        // Start the workflow\n+        Id attemptId;\n+        {\n+            CommandStatus startStatus = main(\"start\",\n+                    \"-c\", config.toString(),\n+                    \"-e\", server.endpoint(),\n+                    \"require\", \"parent\",\n+                    \"--session\", session);\n+            assertThat(startStatus.code(), is(0));\n+            attemptId = getAttemptId(startStatus);\n+        }\n+\n+        // Wait for the attempt to complete\n+        boolean success = false;\n+        for (int i = 0; i < 30; i++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzczNjUxNQ=="}, "originalCommit": {"oid": "e2e73566806a8390c4ff021dd5d38e025bf8eaa0"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NDM1OTE1OnYy", "diffSide": "RIGHT", "path": "digdag-tests/src/test/java/acceptance/RequireIT.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwODoyNzoyNFrOIKbFOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwMjoyODoyOVrOILW_CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzgwMDM3OQ==", "bodyText": "I guess the purpose of this test is that we can get correct session_id and attempt_id when the session of the child already exists and require> will not kick by itself. So change the test name may be better.\nIn addition, this implementation does not assure parent will wait for child or not. Because the child workflow is very short and it is not certain whether the status of child is running or stopped when the parent session starts.\nSo 'waiting' is not correct in my understand.", "url": "https://github.com/treasure-data/digdag/pull/1503#discussion_r547800379", "createdAt": "2020-12-23T08:27:24Z", "author": {"login": "yoyama"}, "path": "digdag-tests/src/test/java/acceptance/RequireIT.java", "diffHunk": "@@ -425,4 +449,85 @@ private void prepareForChildWF(Path childOutFile)\n             Files.write(projectDir.resolve(\"child.dig\"), child.getBytes(\"UTF-8\"));\n         }\n     }\n+\n+    @Test\n+    public void testRequireHasTargetSessionIdEvenWhenJustWaiting()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19de2e155de25ddd34f1e45e75c40457567bac36"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc3NDc5Mw==", "bodyText": "I guess the purpose of this test is that we can get correct session_id and attempt_id when the session of the child already exists and require> will not kick by itself\n\nYes \ud83d\udc4d\n\n'waiting' is not correct in my understand\n\nI misunderstood the behavior, sorry. The parent doesn't wait for the child unless the parent actually kicks the child.\nI will rename the test name and delete assertions that are based on the assumption the child finished successfully.", "url": "https://github.com/treasure-data/digdag/pull/1503#discussion_r548774793", "createdAt": "2020-12-25T01:35:42Z", "author": {"login": "hkdnet"}, "path": "digdag-tests/src/test/java/acceptance/RequireIT.java", "diffHunk": "@@ -425,4 +449,85 @@ private void prepareForChildWF(Path childOutFile)\n             Files.write(projectDir.resolve(\"child.dig\"), child.getBytes(\"UTF-8\"));\n         }\n     }\n+\n+    @Test\n+    public void testRequireHasTargetSessionIdEvenWhenJustWaiting()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzgwMDM3OQ=="}, "originalCommit": {"oid": "19de2e155de25ddd34f1e45e75c40457567bac36"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc3NzU4Nw==", "bodyText": "Sorry, I misread your comment... \ud83d\ude48\nThe parent always waits for the child. It's independent of whether the parent kicks the child or not.\nWill just rename the test case.", "url": "https://github.com/treasure-data/digdag/pull/1503#discussion_r548777587", "createdAt": "2020-12-25T01:57:10Z", "author": {"login": "hkdnet"}, "path": "digdag-tests/src/test/java/acceptance/RequireIT.java", "diffHunk": "@@ -425,4 +449,85 @@ private void prepareForChildWF(Path childOutFile)\n             Files.write(projectDir.resolve(\"child.dig\"), child.getBytes(\"UTF-8\"));\n         }\n     }\n+\n+    @Test\n+    public void testRequireHasTargetSessionIdEvenWhenJustWaiting()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzgwMDM3OQ=="}, "originalCommit": {"oid": "19de2e155de25ddd34f1e45e75c40457567bac36"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc4MTgzMw==", "bodyText": "done: hkdnet@1a136ba", "url": "https://github.com/treasure-data/digdag/pull/1503#discussion_r548781833", "createdAt": "2020-12-25T02:28:29Z", "author": {"login": "hkdnet"}, "path": "digdag-tests/src/test/java/acceptance/RequireIT.java", "diffHunk": "@@ -425,4 +449,85 @@ private void prepareForChildWF(Path childOutFile)\n             Files.write(projectDir.resolve(\"child.dig\"), child.getBytes(\"UTF-8\"));\n         }\n     }\n+\n+    @Test\n+    public void testRequireHasTargetSessionIdEvenWhenJustWaiting()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzgwMDM3OQ=="}, "originalCommit": {"oid": "19de2e155de25ddd34f1e45e75c40457567bac36"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1171, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}