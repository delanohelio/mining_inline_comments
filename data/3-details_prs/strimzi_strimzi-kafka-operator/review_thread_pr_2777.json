{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NDE0NjY5", "number": 2777, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwODowMjoxNVrODt1xiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNTowNTowN1rODwCPbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MzkzNTQ0OnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwODowMjoxNVrOF_fr2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMToxNjozNVrOF_mhQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMzczOA==", "bodyText": "It would be good to understand how we can get into this situation. My concern is that maybe it's fine not to roll the pod if it (momentarily) doesn't exist. But does that mean we don't wait for its readiness (I think we would wait for it's readiness, but will an NPE pop up in that code)?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2777#discussion_r402123738", "createdAt": "2020-04-02T08:02:15Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "diffHunk": "@@ -733,7 +733,10 @@ public void checkCustomCaSecret(CertificateAuthority ca, Secret certSecret, Secr\n                         if (Annotations.booleanAnnotation(sts, Annotations.ANNO_STRIMZI_IO_MANUAL_ROLLING_UPDATE,\n                                 false, Annotations.ANNO_OP_STRIMZI_IO_MANUAL_ROLLING_UPDATE)) {\n                             return kafkaSetOperations.maybeRollingUpdate(sts, pod -> {\n-\n+                                if (pod == null) {\n+                                    log.debug(\"Pod not found, no need to roll\");\n+                                    return \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49da61c5a9fe8bc3b2a6fb95806f78d738fe79ff"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyODU0MQ==", "bodyText": "Looking at the affected ST I think we are waiting for the pod readiness correctly.\nThis issue appears if these two STs run in this order: io.strimzi.systemtest.RollingUpdateST#testKafkaWontRollUpBecauseTopic, io.strimzi.systemtest.RollingUpdateST#testExternalLoggingChangeTriggerRollingUpdate", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2777#discussion_r402128541", "createdAt": "2020-04-02T08:11:02Z", "author": {"login": "sknot-rh"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "diffHunk": "@@ -733,7 +733,10 @@ public void checkCustomCaSecret(CertificateAuthority ca, Secret certSecret, Secr\n                         if (Annotations.booleanAnnotation(sts, Annotations.ANNO_STRIMZI_IO_MANUAL_ROLLING_UPDATE,\n                                 false, Annotations.ANNO_OP_STRIMZI_IO_MANUAL_ROLLING_UPDATE)) {\n                             return kafkaSetOperations.maybeRollingUpdate(sts, pod -> {\n-\n+                                if (pod == null) {\n+                                    log.debug(\"Pod not found, no need to roll\");\n+                                    return \"\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMzczOA=="}, "originalCommit": {"oid": "49da61c5a9fe8bc3b2a6fb95806f78d738fe79ff"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE2ODI0Mw==", "bodyText": "That's an observation, not an explanation. What is it about running those tests in that order which causes the failure? Understanding the real reason is important. It could be an issue with the tests. It could be we find out about a much more general problem with the operator. If you never understand the true reason we'll never know.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2777#discussion_r402168243", "createdAt": "2020-04-02T09:15:59Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "diffHunk": "@@ -733,7 +733,10 @@ public void checkCustomCaSecret(CertificateAuthority ca, Secret certSecret, Secr\n                         if (Annotations.booleanAnnotation(sts, Annotations.ANNO_STRIMZI_IO_MANUAL_ROLLING_UPDATE,\n                                 false, Annotations.ANNO_OP_STRIMZI_IO_MANUAL_ROLLING_UPDATE)) {\n                             return kafkaSetOperations.maybeRollingUpdate(sts, pod -> {\n-\n+                                if (pod == null) {\n+                                    log.debug(\"Pod not found, no need to roll\");\n+                                    return \"\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMzczOA=="}, "originalCommit": {"oid": "49da61c5a9fe8bc3b2a6fb95806f78d738fe79ff"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE3NDIxNA==", "bodyText": "I don't think it's problem in the tests since we only delete Kafka CR and waiting for deletion. We do force deletion of pods every 10 seconds (we had issues with an automatic deletion on some environments), it might be caused by it even when CR is no longer available?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2777#discussion_r402174214", "createdAt": "2020-04-02T09:25:34Z", "author": {"login": "Frawless"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "diffHunk": "@@ -733,7 +733,10 @@ public void checkCustomCaSecret(CertificateAuthority ca, Secret certSecret, Secr\n                         if (Annotations.booleanAnnotation(sts, Annotations.ANNO_STRIMZI_IO_MANUAL_ROLLING_UPDATE,\n                                 false, Annotations.ANNO_OP_STRIMZI_IO_MANUAL_ROLLING_UPDATE)) {\n                             return kafkaSetOperations.maybeRollingUpdate(sts, pod -> {\n-\n+                                if (pod == null) {\n+                                    log.debug(\"Pod not found, no need to roll\");\n+                                    return \"\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMzczOA=="}, "originalCommit": {"oid": "49da61c5a9fe8bc3b2a6fb95806f78d738fe79ff"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIzNTcxMg==", "bodyText": "AFAIK these are just race conditions when the Pods are deleted by garbage collection while reconciliation is running?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2777#discussion_r402235712", "createdAt": "2020-04-02T11:16:35Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "diffHunk": "@@ -733,7 +733,10 @@ public void checkCustomCaSecret(CertificateAuthority ca, Secret certSecret, Secr\n                         if (Annotations.booleanAnnotation(sts, Annotations.ANNO_STRIMZI_IO_MANUAL_ROLLING_UPDATE,\n                                 false, Annotations.ANNO_OP_STRIMZI_IO_MANUAL_ROLLING_UPDATE)) {\n                             return kafkaSetOperations.maybeRollingUpdate(sts, pod -> {\n-\n+                                if (pod == null) {\n+                                    log.debug(\"Pod not found, no need to roll\");\n+                                    return \"\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMzczOA=="}, "originalCommit": {"oid": "49da61c5a9fe8bc3b2a6fb95806f78d738fe79ff"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNjk0OTU5OnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNTowNTowN1rOGCzkYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNToxMzoxMFrOGCz7Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU5NTIzMg==", "bodyText": "I think you should adapt the message both here and the log. It does not make sense in relation to the exception which essentially kills the reocnciliation.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2777#discussion_r405595232", "createdAt": "2020-04-08T15:05:07Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "diffHunk": "@@ -733,7 +734,10 @@ public void checkCustomCaSecret(CertificateAuthority ca, Secret certSecret, Secr\n                         if (Annotations.booleanAnnotation(sts, Annotations.ANNO_STRIMZI_IO_MANUAL_ROLLING_UPDATE,\n                                 false, Annotations.ANNO_OP_STRIMZI_IO_MANUAL_ROLLING_UPDATE)) {\n                             return kafkaSetOperations.maybeRollingUpdate(sts, pod -> {\n-\n+                                if (pod == null) {\n+                                    log.debug(\"Pod not found, no need to roll\");\n+                                    throw new ConcurrentDeletionException(\"Pod not found, no need to roll\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7974567ed476440f034b275d61ae1910b64afac0"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYwMTAzOQ==", "bodyText": "@stanlyDoge think of this more like a failed assertion: If we got here it means something relatively unexpected happened, because the pod must have got deleted since we started the reconciliation loop. So something like \"Unexpectedly pod no longer exists during roll of StatefulSet\" would be better.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2777#discussion_r405601039", "createdAt": "2020-04-08T15:13:10Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "diffHunk": "@@ -733,7 +734,10 @@ public void checkCustomCaSecret(CertificateAuthority ca, Secret certSecret, Secr\n                         if (Annotations.booleanAnnotation(sts, Annotations.ANNO_STRIMZI_IO_MANUAL_ROLLING_UPDATE,\n                                 false, Annotations.ANNO_OP_STRIMZI_IO_MANUAL_ROLLING_UPDATE)) {\n                             return kafkaSetOperations.maybeRollingUpdate(sts, pod -> {\n-\n+                                if (pod == null) {\n+                                    log.debug(\"Pod not found, no need to roll\");\n+                                    throw new ConcurrentDeletionException(\"Pod not found, no need to roll\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU5NTIzMg=="}, "originalCommit": {"oid": "7974567ed476440f034b275d61ae1910b64afac0"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 393, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}