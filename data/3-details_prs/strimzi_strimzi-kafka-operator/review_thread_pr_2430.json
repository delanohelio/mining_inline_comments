{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0OTE0ODUz", "number": 2430, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyNDoyNFrODZQ4lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyNDoyNFrODZQ4lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODE3NjIxOnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaConnectS2IUtils.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyNDoyNFrOFfjm1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNTozMjoxM1rOFjvULQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYzMzU1Nw==", "bodyText": "This line is the count of a substring in the log string.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2430#discussion_r368633557", "createdAt": "2020-01-20T16:24:24Z", "author": {"login": "sknot-rh"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaConnectS2IUtils.java", "diffHunk": "@@ -29,4 +29,15 @@ public static void waitForConnectS2IStatus(String name, String status) {\n             () -> Crds.kafkaConnectS2iOperation(kubeClient().getClient()).inNamespace(kubeClient().getNamespace()).withName(name).get().getStatus().getConditions().get(0).getType().equals(status));\n         LOGGER.info(\"Kafka Connect S2I {} is in desired state: {}\", name, status);\n     }\n+\n+    public static void waitForRebalancingDone(String name) {\n+        LOGGER.info(\"Waiting for Kafka Connect S2I {} to rebalance\", name);\n+        TestUtils.waitFor(\"Kafka Connect S2I rebalancing\", Constants.POLL_INTERVAL_FOR_RESOURCE_READINESS, Constants.TIMEOUT_FOR_RESOURCE_READINESS,\n+            () -> {\n+                String connect = kubeClient().listPodNames(\"strimzi.io/kind\", \"KafkaConnectS2I\").get(0);\n+                String log = kubeClient().logs(connect);\n+                return (log.length() - log.replace(\"Finished starting connectors and tasks\", \"\").length()) / \"Finished starting connectors and tasks\".length() == 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "180f798c01ad58091452f0282ba80d1e73ffcf86"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM1NzAwMw==", "bodyText": "You should add a comment in the code to explain that.\nAnd why the magic number 2?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2430#discussion_r372357003", "createdAt": "2020-01-29T12:35:50Z", "author": {"login": "tombentley"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaConnectS2IUtils.java", "diffHunk": "@@ -29,4 +29,15 @@ public static void waitForConnectS2IStatus(String name, String status) {\n             () -> Crds.kafkaConnectS2iOperation(kubeClient().getClient()).inNamespace(kubeClient().getNamespace()).withName(name).get().getStatus().getConditions().get(0).getType().equals(status));\n         LOGGER.info(\"Kafka Connect S2I {} is in desired state: {}\", name, status);\n     }\n+\n+    public static void waitForRebalancingDone(String name) {\n+        LOGGER.info(\"Waiting for Kafka Connect S2I {} to rebalance\", name);\n+        TestUtils.waitFor(\"Kafka Connect S2I rebalancing\", Constants.POLL_INTERVAL_FOR_RESOURCE_READINESS, Constants.TIMEOUT_FOR_RESOURCE_READINESS,\n+            () -> {\n+                String connect = kubeClient().listPodNames(\"strimzi.io/kind\", \"KafkaConnectS2I\").get(0);\n+                String log = kubeClient().logs(connect);\n+                return (log.length() - log.replace(\"Finished starting connectors and tasks\", \"\").length()) / \"Finished starting connectors and tasks\".length() == 2;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYzMzU1Nw=="}, "originalCommit": {"oid": "180f798c01ad58091452f0282ba80d1e73ffcf86"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAxOTY5Mw==", "bodyText": "I do not remember exactly, but when the cluster is started, this message is in the logs. Then we lose one of the replicas and after rebalancing happened, the message is printed again.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2430#discussion_r373019693", "createdAt": "2020-01-30T15:32:13Z", "author": {"login": "sknot-rh"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaConnectS2IUtils.java", "diffHunk": "@@ -29,4 +29,15 @@ public static void waitForConnectS2IStatus(String name, String status) {\n             () -> Crds.kafkaConnectS2iOperation(kubeClient().getClient()).inNamespace(kubeClient().getNamespace()).withName(name).get().getStatus().getConditions().get(0).getType().equals(status));\n         LOGGER.info(\"Kafka Connect S2I {} is in desired state: {}\", name, status);\n     }\n+\n+    public static void waitForRebalancingDone(String name) {\n+        LOGGER.info(\"Waiting for Kafka Connect S2I {} to rebalance\", name);\n+        TestUtils.waitFor(\"Kafka Connect S2I rebalancing\", Constants.POLL_INTERVAL_FOR_RESOURCE_READINESS, Constants.TIMEOUT_FOR_RESOURCE_READINESS,\n+            () -> {\n+                String connect = kubeClient().listPodNames(\"strimzi.io/kind\", \"KafkaConnectS2I\").get(0);\n+                String log = kubeClient().logs(connect);\n+                return (log.length() - log.replace(\"Finished starting connectors and tasks\", \"\").length()) / \"Finished starting connectors and tasks\".length() == 2;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYzMzU1Nw=="}, "originalCommit": {"oid": "180f798c01ad58091452f0282ba80d1e73ffcf86"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 637, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}