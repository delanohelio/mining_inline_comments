{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NTU1MjI4", "number": 2363, "title": "KafkaConnector: Support connector pause/resume and status", "bodyText": "Type of change\n\nEnhancement / new feature\n\nDescription\n\n\nAdd a pause property to the KafkaConnector.spec to control pause/resume\n\n\nAdd a connector property to the KafkaConnector.status to expose\nconnector status. This is the JSON result of the\nGET /connectors//status endpoint. With this change a\ntypical status looks like like this:\n  status:\n    conditions:\n    - lastTransitionTime: \"2020-01-06T13:44:20.031Z\"\n      status: \"True\"\n      type: Ready\n    connector:\n      connector:\n        state: PAUSED\n        worker_id: 172.17.0.11:8083\n      name: my-source-connector\n      tasks:\n      - id: 0\n        state: RUNNING\n        worker_id: 172.17.0.11:8083\n      type: source\n    observedGeneration: 2\n\n\n\nNote that the REST API calls to /pause and /resume are asynchronous and the\noperator doesn't poll waiting for all tasks to stop. This means the\nstatus example above (with a PAUSED connector and a RUNNING task) would\nexist until the next reconciliation (when the status would be updated to\nshow a PAUSED task--assuming the task had indeed stopped) even though the\ntask was actually paused much sooner than that.\n\n\nSome minor changes were needed to the CrdGenerator and DocGenerator to support a JsonNode typed property in the API.\n\n\nSigned-off-by: Tom Bentley tbentley@redhat.com", "createdAt": "2020-01-06T13:59:56Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2363", "merged": true, "mergeCommit": {"oid": "b42cb5bf532d37e8a3720446801eb653fed480c4"}, "closed": true, "closedAt": "2020-01-09T08:35:51Z", "author": {"login": "tombentley"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4A1IHgBqjI5Mjc2MzI5NDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4lv46gBqjI5MzQwMzkwMjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "94bc4c24ce960aff914b8808038f5165eee82df5", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/94bc4c24ce960aff914b8808038f5165eee82df5", "committedDate": "2020-01-06T18:06:27Z", "message": "Update derived resources\n\nSigned-off-by: Tom Bentley <tbentley@redhat.com>"}, "afterCommit": {"oid": "00c98bfd06439207f1606bbf4eff3ea89d45539a", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/00c98bfd06439207f1606bbf4eff3ea89d45539a", "committedDate": "2020-01-07T13:32:35Z", "message": "Update derived resources\n\nSigned-off-by: Tom Bentley <tbentley@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NTU4OTQ1", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2363#pullrequestreview-339558945", "createdAt": "2020-01-07T22:53:13Z", "commit": {"oid": "00c98bfd06439207f1606bbf4eff3ea89d45539a"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjo1MzoxM1rOFbIQkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjo1OTo1NFrOFbIYug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk5MTE4NA==", "bodyText": "What are the usecases for pausing connectors? I'm wondering how well would this work with GitOps models etc. Whether the use case is to pause it in Git or whether it is operational thing in which case GitOps would again unpause it.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2363#discussion_r363991184", "createdAt": "2020-01-07T22:53:13Z", "author": {"login": "scholzj"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaConnectorSpec.java", "diffHunk": "@@ -32,6 +32,7 @@\n \n     private String className;\n     private Integer tasksMax;\n+    private Boolean pause;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00c98bfd06439207f1606bbf4eff3ea89d45539a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk5MTY2OA==", "bodyText": "Since the resource is a single connector, do we need to have this wrapped into the connector field? Would it be better to have these one level higher? (feel free to say no if you are convinced by this)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2363#discussion_r363991668", "createdAt": "2020-01-07T22:54:43Z", "author": {"login": "scholzj"}, "path": "api/src/test/resources/io/strimzi/api/kafka/model/KafkaConnector.out.yaml", "diffHunk": "@@ -10,4 +10,19 @@ spec:\n   tasksMax: 2\n   config:\n     file: \"/home/source/test.source.txt\"\n-    topic: \"test.topic\"\n\\ No newline at end of file\n+    topic: \"test.topic\"\n+status:\n+  observedGeneration: 0\n+  connector:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00c98bfd06439207f1606bbf4eff3ea89d45539a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk5MTgwMg==", "bodyText": "Why do we use JsonNode here? Is it just to safe the APi modeling?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2363#discussion_r363991802", "createdAt": "2020-01-07T22:55:07Z", "author": {"login": "scholzj"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/status/KafkaConnectorStatus.java", "diffHunk": "@@ -22,7 +25,19 @@\n @JsonPropertyOrder({ \"conditions\", \"observedGeneration\", \"url\" })\n @EqualsAndHashCode\n @ToString(callSuper = true)\n+@SuppressFBWarnings(\"SE_BAD_FIELD\")\n public class KafkaConnectorStatus extends Status {\n     private static final long serialVersionUID = 1L;\n \n+    private JsonNode connector;\n+\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    @Description(\"The connector status, as reported by the Kafka Connect REST API.\")\n+    public JsonNode getConnector() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00c98bfd06439207f1606bbf4eff3ea89d45539a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk5MzI3NA==", "bodyText": "Is the FAILED state actually set anywhere in the code? Or is it just here?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2363#discussion_r363993274", "createdAt": "2020-01-07T22:59:54Z", "author": {"login": "scholzj"}, "path": "api/src/test/resources/io/strimzi/api/kafka/model/KafkaConnector.out.yaml", "diffHunk": "@@ -10,4 +10,19 @@ spec:\n   tasksMax: 2\n   config:\n     file: \"/home/source/test.source.txt\"\n-    topic: \"test.topic\"\n\\ No newline at end of file\n+    topic: \"test.topic\"\n+status:\n+  observedGeneration: 0\n+  connector:\n+    name: \"hdfs-sink-connector\"\n+    connector:\n+      state: \"RUNNING\"\n+      worker_id: \"whatever:8083\"\n+    tasks:\n+    - id: 0\n+      state: \"FAILED\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00c98bfd06439207f1606bbf4eff3ea89d45539a"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NzEyMjAz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2363#pullrequestreview-339712203", "createdAt": "2020-01-08T08:41:32Z", "commit": {"oid": "00c98bfd06439207f1606bbf4eff3ea89d45539a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODo0MTozMlrOFbP2PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODo0MTozMlrOFbP2PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDExNTUxNw==", "bodyText": "this is quite related to what I mentioned in the comment on the PR. Why having connector.connector.state (or .worker_id) instead of just connector.state (or .worker_id)?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2363#discussion_r364115517", "createdAt": "2020-01-08T08:41:32Z", "author": {"login": "ppatierno"}, "path": "api/src/test/resources/io/strimzi/api/kafka/model/KafkaConnector.out.yaml", "diffHunk": "@@ -10,4 +10,19 @@ spec:\n   tasksMax: 2\n   config:\n     file: \"/home/source/test.source.txt\"\n-    topic: \"test.topic\"\n\\ No newline at end of file\n+    topic: \"test.topic\"\n+status:\n+  observedGeneration: 0\n+  connector:\n+    name: \"hdfs-sink-connector\"\n+    connector:\n+      state: \"RUNNING\"\n+      worker_id: \"whatever:8083\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00c98bfd06439207f1606bbf4eff3ea89d45539a"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a3440b9fef1f6419939d0f0364604d7db01ee34", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6a3440b9fef1f6419939d0f0364604d7db01ee34", "committedDate": "2020-01-08T12:27:00Z", "message": "    KafkaConnector: Support connector pause/resume\n\n    * Add a `pause` property to the `KafkaConnector.spec` to control pause/resume\n    * Add a `connector` property to the `KafkaConnector.status` to expose\n      connector status. This is the JSON result of the\n      GET /connectors/<connector>/status endpoint. With this change a\n      typical status looks like like this:\n        ```\n          status:\n            conditions:\n            - lastTransitionTime: \"2020-01-06T13:44:20.031Z\"\n              status: \"True\"\n              type: Ready\n            connector:\n              connector:\n                state: PAUSED\n                worker_id: 172.17.0.11:8083\n              name: my-source-connector\n              tasks:\n              - id: 0\n                state: RUNNING\n                worker_id: 172.17.0.11:8083\n              type: source\n            observedGeneration: 2\n        ```\n\nSigned-off-by: Tom Bentley <tbentley@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "00c98bfd06439207f1606bbf4eff3ea89d45539a", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/00c98bfd06439207f1606bbf4eff3ea89d45539a", "committedDate": "2020-01-07T13:32:35Z", "message": "Update derived resources\n\nSigned-off-by: Tom Bentley <tbentley@redhat.com>"}, "afterCommit": {"oid": "6a3440b9fef1f6419939d0f0364604d7db01ee34", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6a3440b9fef1f6419939d0f0364604d7db01ee34", "committedDate": "2020-01-08T12:27:00Z", "message": "    KafkaConnector: Support connector pause/resume\n\n    * Add a `pause` property to the `KafkaConnector.spec` to control pause/resume\n    * Add a `connector` property to the `KafkaConnector.status` to expose\n      connector status. This is the JSON result of the\n      GET /connectors/<connector>/status endpoint. With this change a\n      typical status looks like like this:\n        ```\n          status:\n            conditions:\n            - lastTransitionTime: \"2020-01-06T13:44:20.031Z\"\n              status: \"True\"\n              type: Ready\n            connector:\n              connector:\n                state: PAUSED\n                worker_id: 172.17.0.11:8083\n              name: my-source-connector\n              tasks:\n              - id: 0\n                state: RUNNING\n                worker_id: 172.17.0.11:8083\n              type: source\n            observedGeneration: 2\n        ```\n\nSigned-off-by: Tom Bentley <tbentley@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fd8c231a765b5a307172cde3b4ebb35d9169bb6", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3fd8c231a765b5a307172cde3b4ebb35d9169bb6", "committedDate": "2020-01-08T13:16:46Z", "message": "spotbugs\n\nSigned-off-by: Tom Bentley <tbentley@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6b063112a49bae6ecc22b12cf1888fb8ae766a7", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e6b063112a49bae6ecc22b12cf1888fb8ae766a7", "committedDate": "2020-01-08T14:03:18Z", "message": "import\n\nSigned-off-by: Tom Bentley <tbentley@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMDUyNTQw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2363#pullrequestreview-340052540", "createdAt": "2020-01-08T18:19:48Z", "commit": {"oid": "e6b063112a49bae6ecc22b12cf1888fb8ae766a7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7e639add783767a70c2c94b8d5ffb065a3ab8d54", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7e639add783767a70c2c94b8d5ffb065a3ab8d54", "committedDate": "2020-01-09T08:09:39Z", "message": "apiStatus\n\nSigned-off-by: Tom Bentley <tbentley@redhat.com>"}, "afterCommit": {"oid": "e6b063112a49bae6ecc22b12cf1888fb8ae766a7", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e6b063112a49bae6ecc22b12cf1888fb8ae766a7", "committedDate": "2020-01-08T14:03:18Z", "message": "import\n\nSigned-off-by: Tom Bentley <tbentley@redhat.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1770, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}