{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4Mzk4NDg3", "number": 3228, "title": "ST: add option to deploy CO not jsut via yaml bundle but by OLM for all tests", "bodyText": "Type of change\n\nEnhancement / new feature\n\nDescription\nThis PR adds option to setup CO for most of the test cases not just via yaml bundle format, but via OperatorHub. This change should allow us to catch issues in manifests before releasing them to OperatorHub.\nAfter these changes, we should be able to run for example acceptance groups with CO installed by OLM which should cover most of the basic functionality of Strimzi.\nBefore running the tests, we just need to set CLUSTER_OPERATOR_INSTALL_TYPE to olm (any other value will lead to installing CO via yamls) and other corresponding OLM environment variables specified in TESTING.md.\nWe should also add an option to install CO by helm and run tests against it.\nChecklist\n\n Make sure all tests pass", "createdAt": "2020-06-23T08:13:00Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3228", "merged": true, "mergeCommit": {"oid": "ec88d5323eb2a3613a6a970b845a27c76c7d560a"}, "closed": true, "closedAt": "2020-06-25T18:21:15Z", "author": {"login": "Frawless"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuAzpwgH2gAyNDM4Mzk4NDg3OjNhYTBiNmViZjZhZTY1ZTM4MDQ4ZjRhM2I0MzU5ODZjYTdjYzIxOTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcusAtoAH2gAyNDM4Mzk4NDg3OmZkYTY2YjVkNWJkOTNiOWYwNjg1ZWVmYTIyNGQ0MzFmZDJiODA2YmQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3aa0b6ebf6ae65e38048f4a3b435986ca7cc2193", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3aa0b6ebf6ae65e38048f4a3b435986ca7cc2193", "committedDate": "2020-06-23T08:03:01Z", "message": "Add posibility to run all tests again CO installed by OLM\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8afe06f2bdbbcb5bb55d53675d5cbce9987a7bba", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8afe06f2bdbbcb5bb55d53675d5cbce9987a7bba", "committedDate": "2020-06-23T08:03:12Z", "message": "Minor fixes\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6b91c2685621a7ed41d1c7bd610d6b3b6e66633", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c6b91c2685621a7ed41d1c7bd610d6b3b6e66633", "committedDate": "2020-06-23T08:06:00Z", "message": "Rebase fix\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18c33bbe85d6add7c24517a3ccd9d180357a9d45", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/18c33bbe85d6add7c24517a3ccd9d180357a9d45", "committedDate": "2020-06-23T16:10:36Z", "message": "fixup! Rebase fix\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8461d0716b247db5f1ac64c45bfaeb5d256b8b3d", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8461d0716b247db5f1ac64c45bfaeb5d256b8b3d", "committedDate": "2020-06-24T08:21:55Z", "message": "Cleanup\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NTkxMzI0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3228#pullrequestreview-436591324", "createdAt": "2020-06-24T12:19:55Z", "commit": {"oid": "8461d0716b247db5f1ac64c45bfaeb5d256b8b3d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NzU2NjE1", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3228#pullrequestreview-436756615", "createdAt": "2020-06-24T15:23:05Z", "commit": {"oid": "8461d0716b247db5f1ac64c45bfaeb5d256b8b3d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2OTIxMDU1", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3228#pullrequestreview-436921055", "createdAt": "2020-06-24T18:55:57Z", "commit": {"oid": "8461d0716b247db5f1ac64c45bfaeb5d256b8b3d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxODo1NTo1N1rOGofAxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxODo1NTo1N1rOGofAxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEwNDMyNA==", "bodyText": "Did you mean to leave this commented out?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3228#discussion_r445104324", "createdAt": "2020-06-24T18:55:57Z", "author": {"login": "samuel-hawker"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/BaseST.java", "diffHunk": "@@ -165,36 +197,58 @@ protected void teardownEnvForOperator() {\n         cluster.deleteNamespaces();\n     }\n \n+    /**\n+     * Recreate namespace and CO after test failure\n+     * @param coNamespace namespace where CO will be deployed to\n+     * @param operationTimeout timeout for CO operations\n+     * @param reconciliationInterval CO reconciliation interval\n+     */\n+    protected void recreateTestEnv(String coNamespace, long operationTimeout, long reconciliationInterval) throws Exception {\n+        recreateTestEnv(coNamespace, Collections.singletonList(coNamespace), operationTimeout, reconciliationInterval);\n+    }\n+\n+    /**\n+     * Recreate namespace and CO after test failure\n+     * @param coNamespace namespace where CO will be deployed to\n+     * @param bindingsNamespaces array of namespaces where Bindings should be deployed to.\n+     */\n+    protected void recreateTestEnv(String coNamespace, List<String> bindingsNamespaces) throws Exception {\n+        recreateTestEnv(coNamespace, bindingsNamespaces, Constants.CO_OPERATION_TIMEOUT_DEFAULT, Constants.RECONCILIATION_INTERVAL);\n+    }\n+\n     /**\n      * Recreate namespace and CO after test failure\n      * @param coNamespace namespace where CO will be deployed to\n      * @param bindingsNamespaces array of namespaces where Bindings should be deployed to.\n+     * @param operationTimeout timeout for CO operations\n      */\n-    protected void recreateTestEnv(String coNamespace, List<String> bindingsNamespaces) throws InterruptedException {\n-        recreateTestEnv(coNamespace, bindingsNamespaces, Constants.CO_OPERATION_TIMEOUT_DEFAULT);\n+    protected void recreateTestEnv(String coNamespace, List<String> bindingsNamespaces, long operationTimeout) throws Exception {\n+        recreateTestEnv(coNamespace, bindingsNamespaces, operationTimeout, Constants.RECONCILIATION_INTERVAL);\n     }\n \n     /**\n      * Recreate namespace and CO after test failure\n      * @param coNamespace namespace where CO will be deployed to\n      * @param bindingsNamespaces array of namespaces where Bindings should be deployed to.\n      * @param operationTimeout timeout for CO operations\n+     * @param reconciliationInterval CO reconciliation interval\n      */\n-    protected void recreateTestEnv(String coNamespace, List<String> bindingsNamespaces, long operationTimeout) {\n+    protected void recreateTestEnv(String coNamespace, List<String> bindingsNamespaces, long operationTimeout, long reconciliationInterval) throws Exception {\n         ResourceManager.deleteMethodResources();\n         ResourceManager.deleteClassResources();\n \n         KubeClusterResource.getInstance().deleteClusterOperatorInstallFiles();\n         KubeClusterResource.getInstance().deleteNamespaces();\n \n-        KubeClusterResource.getInstance().createNamespaces(coNamespace, bindingsNamespaces);\n-        KubeClusterResource.getInstance().applyClusterOperatorInstallFiles();\n-\n-        ResourceManager.setClassResources();\n-\n-        applyRoleBindings(coNamespace, bindingsNamespaces);\n-        // 050-Deployment\n-        KubernetesResource.clusterOperator(coNamespace, operationTimeout).done();\n+//        KubeClusterResource.getInstance().createNamespaces(coNamespace, bindingsNamespaces);\n+//        KubeClusterResource.getInstance().applyClusterOperatorInstallFiles();\n+//\n+//        ResourceManager.setClassResources();\n+//\n+//        applyRoleBindings(coNamespace, bindingsNamespaces);\n+//        // 050-Deployment", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8461d0716b247db5f1ac64c45bfaeb5d256b8b3d"}, "originalPosition": 110}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2OTIyMjMw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3228#pullrequestreview-436922230", "createdAt": "2020-06-24T18:57:32Z", "commit": {"oid": "8461d0716b247db5f1ac64c45bfaeb5d256b8b3d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxODo1NzozMlrOGofETA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxODo1NzozMlrOGofETA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEwNTIyOA==", "bodyText": "Isnt the default namespace openshift-operators ?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3228#discussion_r445105228", "createdAt": "2020-06-24T18:57:32Z", "author": {"login": "samuel-hawker"}, "path": "test/src/main/java/io/strimzi/test/k8s/cmdClient/Kubectl.java", "diffHunk": "@@ -32,6 +32,11 @@ public String defaultNamespace() {\n         return \"default\";\n     }\n \n+    @Override\n+    public String defaultOlmNamespace() {\n+        return \"operators\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8461d0716b247db5f1ac64c45bfaeb5d256b8b3d"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2OTIyNjI2", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3228#pullrequestreview-436922626", "createdAt": "2020-06-24T18:58:03Z", "commit": {"oid": "8461d0716b247db5f1ac64c45bfaeb5d256b8b3d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fda66b5d5bd93b9f0685eefa224d431fd2b806bd", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/fda66b5d5bd93b9f0685eefa224d431fd2b806bd", "committedDate": "2020-06-25T10:23:12Z", "message": "Remove forgoten comment\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1588, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}