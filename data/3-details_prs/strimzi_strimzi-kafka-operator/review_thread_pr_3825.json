{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MTk1MzQw", "number": 3825, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTo1MzowOFrOEuD_xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTowNzowNFrOEuImXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzM1NDMxOnYy", "diffSide": "RIGHT", "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTo1MzowOFrOHiOsmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMToyMToxM1rOHibbEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY1NDQyNw==", "bodyText": "Do we really need the regex? Is the prefix not enough? This is something what just ties it too much to changes in other places.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505654427", "createdAt": "2020-10-15T15:53:08Z", "author": {"login": "scholzj"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -72,19 +72,31 @@ create_keystore /tmp/kafka/cluster.keystore.p12 \"$CERTS_STORE_PASSWORD\" \\\n     \"$HOSTNAME\"\n echo \"Preparing keystore for replication and clienttls listener is complete\"\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for tls listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for tls listener is complete\"\n-fi\n+regex=\"^\\/opt\\/kafka\\/certificates\\/custom-([a-z0-9]{1,11})-([0-9]+)-certs$\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b36223ca447f2f827d4ed82be44dcc1d855b2bc"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY3MDI5MA==", "bodyText": "I am going to use it to be more general with the oauth related certificates as well.\nI am testing my changes to update the PR.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505670290", "createdAt": "2020-10-15T16:15:32Z", "author": {"login": "ppatierno"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -72,19 +72,31 @@ create_keystore /tmp/kafka/cluster.keystore.p12 \"$CERTS_STORE_PASSWORD\" \\\n     \"$HOSTNAME\"\n echo \"Preparing keystore for replication and clienttls listener is complete\"\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for tls listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for tls listener is complete\"\n-fi\n+regex=\"^\\/opt\\/kafka\\/certificates\\/custom-([a-z0-9]{1,11})-([0-9]+)-certs$\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY1NDQyNw=="}, "originalCommit": {"oid": "9b36223ca447f2f827d4ed82be44dcc1d855b2bc"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyMDA4Mg==", "bodyText": "Done.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505720082", "createdAt": "2020-10-15T17:34:26Z", "author": {"login": "ppatierno"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -72,19 +72,31 @@ create_keystore /tmp/kafka/cluster.keystore.p12 \"$CERTS_STORE_PASSWORD\" \\\n     \"$HOSTNAME\"\n echo \"Preparing keystore for replication and clienttls listener is complete\"\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for tls listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for tls listener is complete\"\n-fi\n+regex=\"^\\/opt\\/kafka\\/certificates\\/custom-([a-z0-9]{1,11})-([0-9]+)-certs$\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY1NDQyNw=="}, "originalCommit": {"oid": "9b36223ca447f2f827d4ed82be44dcc1d855b2bc"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3Mzk5MA==", "bodyText": "I do not think you addresses my main point. I think having the regex too exact is a risk because if we change for whatever reason the rules for port names we would need to do it on multiple places. So I wonder if using something more general for example such as ^\\/opt\\/kafka\\/certificates\\/(custom|oauth)-(.*+)-(.*+)-certs$ wouldn't work equally well with less dependency on the Java code.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505773990", "createdAt": "2020-10-15T19:02:38Z", "author": {"login": "scholzj"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -72,19 +72,31 @@ create_keystore /tmp/kafka/cluster.keystore.p12 \"$CERTS_STORE_PASSWORD\" \\\n     \"$HOSTNAME\"\n echo \"Preparing keystore for replication and clienttls listener is complete\"\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for tls listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for tls listener is complete\"\n-fi\n+regex=\"^\\/opt\\/kafka\\/certificates\\/custom-([a-z0-9]{1,11})-([0-9]+)-certs$\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY1NDQyNw=="}, "originalCommit": {"oid": "9b36223ca447f2f827d4ed82be44dcc1d855b2bc"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg0NzUwOA==", "bodyText": "wouldn't work equally well with less dependency on the Java code\n\nSo I am confused, is the above statement missing a question mark? Are you suggesting to use the more general grouping or not?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505847508", "createdAt": "2020-10-15T21:02:19Z", "author": {"login": "ppatierno"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -72,19 +72,31 @@ create_keystore /tmp/kafka/cluster.keystore.p12 \"$CERTS_STORE_PASSWORD\" \\\n     \"$HOSTNAME\"\n echo \"Preparing keystore for replication and clienttls listener is complete\"\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for tls listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for tls listener is complete\"\n-fi\n+regex=\"^\\/opt\\/kafka\\/certificates\\/custom-([a-z0-9]{1,11})-([0-9]+)-certs$\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY1NDQyNw=="}, "originalCommit": {"oid": "9b36223ca447f2f827d4ed82be44dcc1d855b2bc"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg2MjkyOA==", "bodyText": "Yeah, there is missing question mark, sorry ... I think more general would be better.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505862928", "createdAt": "2020-10-15T21:21:13Z", "author": {"login": "scholzj"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -72,19 +72,31 @@ create_keystore /tmp/kafka/cluster.keystore.p12 \"$CERTS_STORE_PASSWORD\" \\\n     \"$HOSTNAME\"\n echo \"Preparing keystore for replication and clienttls listener is complete\"\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for tls listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for tls listener is complete\"\n-fi\n+regex=\"^\\/opt\\/kafka\\/certificates\\/custom-([a-z0-9]{1,11})-([0-9]+)-certs$\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY1NDQyNw=="}, "originalCommit": {"oid": "9b36223ca447f2f827d4ed82be44dcc1d855b2bc"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzM1ODcyOnYy", "diffSide": "RIGHT", "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTo1NDowNFrOHiOvVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjoxNTozN1rOHiPqzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY1NTEyNQ==", "bodyText": "I guess this can be deleted (maybe you planned to do it later)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505655125", "createdAt": "2020-10-15T15:54:04Z", "author": {"login": "scholzj"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -72,19 +72,31 @@ create_keystore /tmp/kafka/cluster.keystore.p12 \"$CERTS_STORE_PASSWORD\" \\\n     \"$HOSTNAME\"\n echo \"Preparing keystore for replication and clienttls listener is complete\"\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for tls listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for tls listener is complete\"\n-fi\n+regex=\"^\\/opt\\/kafka\\/certificates\\/custom-([a-z0-9]{1,11})-([0-9]+)-certs$\"\n+for CUSTOM_CERT_DIR in /opt/kafka/certificates/custom-*; do\n+    echo \"dir=$CUSTOM_CERT_DIR\"\n+    if [[ $CUSTOM_CERT_DIR =~ $regex ]];\n+    then\n+      echo \"listener=${BASH_REMATCH[1]}:${BASH_REMATCH[2]}\"\n+      echo \"Preparing custom keystore for ${BASH_REMATCH[1]} listener\"\n+      create_keystore_without_ca_file /tmp/kafka/custom-${BASH_REMATCH[1]}-${BASH_REMATCH[2]}.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n+      echo \"Preparing custom keystore for ${BASH_REMATCH[1]} listener is complete\"  \n+    fi\n+done\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-external-9094-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for external listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-external-9094.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for external listener is complete\"\n-fi\n+#CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n+#if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n+#    echo \"Preparing custom keystore for tls listener\"\n+#    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n+#    echo \"Preparing custom keystore for tls listener is complete\"\n+#fi\n+\n+#CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-external-9094-certs\"\n+#if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n+#    echo \"Preparing custom keystore for external listener\"\n+#    create_keystore_without_ca_file /tmp/kafka/custom-external-9094.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n+#    echo \"Preparing custom keystore for external listener is complete\"\n+#fi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b36223ca447f2f827d4ed82be44dcc1d855b2bc"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY3MDM1MQ==", "bodyText": "Exactly", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505670351", "createdAt": "2020-10-15T16:15:37Z", "author": {"login": "ppatierno"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -72,19 +72,31 @@ create_keystore /tmp/kafka/cluster.keystore.p12 \"$CERTS_STORE_PASSWORD\" \\\n     \"$HOSTNAME\"\n echo \"Preparing keystore for replication and clienttls listener is complete\"\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for tls listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for tls listener is complete\"\n-fi\n+regex=\"^\\/opt\\/kafka\\/certificates\\/custom-([a-z0-9]{1,11})-([0-9]+)-certs$\"\n+for CUSTOM_CERT_DIR in /opt/kafka/certificates/custom-*; do\n+    echo \"dir=$CUSTOM_CERT_DIR\"\n+    if [[ $CUSTOM_CERT_DIR =~ $regex ]];\n+    then\n+      echo \"listener=${BASH_REMATCH[1]}:${BASH_REMATCH[2]}\"\n+      echo \"Preparing custom keystore for ${BASH_REMATCH[1]} listener\"\n+      create_keystore_without_ca_file /tmp/kafka/custom-${BASH_REMATCH[1]}-${BASH_REMATCH[2]}.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n+      echo \"Preparing custom keystore for ${BASH_REMATCH[1]} listener is complete\"  \n+    fi\n+done\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-external-9094-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for external listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-external-9094.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for external listener is complete\"\n-fi\n+#CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n+#if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n+#    echo \"Preparing custom keystore for tls listener\"\n+#    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n+#    echo \"Preparing custom keystore for tls listener is complete\"\n+#fi\n+\n+#CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-external-9094-certs\"\n+#if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n+#    echo \"Preparing custom keystore for external listener\"\n+#    create_keystore_without_ca_file /tmp/kafka/custom-external-9094.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n+#    echo \"Preparing custom keystore for external listener is complete\"\n+#fi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY1NTEyNQ=="}, "originalCommit": {"oid": "9b36223ca447f2f827d4ed82be44dcc1d855b2bc"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2ODA5NjcxOnYy", "diffSide": "RIGHT", "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTowMzozNFrOHiWBmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTowMzozNFrOHiWBmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3NDQ4OA==", "bodyText": "Should this be elif? I think it would make the code more readable as one would need to stop and think whether both can be true or not.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505774488", "createdAt": "2020-10-15T19:03:34Z", "author": {"login": "scholzj"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -72,19 +72,28 @@ create_keystore /tmp/kafka/cluster.keystore.p12 \"$CERTS_STORE_PASSWORD\" \\\n     \"$HOSTNAME\"\n echo \"Preparing keystore for replication and clienttls listener is complete\"\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for tls listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for tls listener is complete\"\n-fi\n-\n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-external-9094-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for external listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-external-9094.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for external listener is complete\"\n-fi\n+regex=\"^\\/opt\\/kafka\\/certificates\\/(custom|oauth)-([a-z0-9]{1,11})-([0-9]+)-certs$\"\n+for CERT_DIR in /opt/kafka/certificates/*; do\n+  if [[ $CERT_DIR =~ $regex ]]; then\n+    echo \"Preparing store for ${BASH_REMATCH[1]} ${BASH_REMATCH[2]} listener\"\n+    if [[ ${BASH_REMATCH[1]} == \"custom\"  ]]; then\n+      echo /tmp/kafka/\"${BASH_REMATCH[1]}\"-\"${BASH_REMATCH[2]}\"-\"${BASH_REMATCH[3]}\".keystore.p12\n+      create_keystore_without_ca_file /tmp/kafka/\"${BASH_REMATCH[1]}\"-\"${BASH_REMATCH[2]}\"-\"${BASH_REMATCH[3]}\".keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CERT_DIR}/tls.crt\" \"${CERT_DIR}/tls.key\" custom-key\n+    fi\n+    if [[ ${BASH_REMATCH[1]} == \"oauth\"  ]]; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c9468424df37910c3551cbbd431e13f8e703ed9"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2ODA5ODg5OnYy", "diffSide": "RIGHT", "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTowNDoxNFrOHiWC6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTowNDoxNFrOHiWC6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3NDgyNA==", "bodyText": "I know the listener name is unique, but should we list also ${BASH_REMATCH[3]} for clarity?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505774824", "createdAt": "2020-10-15T19:04:14Z", "author": {"login": "scholzj"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -72,19 +72,28 @@ create_keystore /tmp/kafka/cluster.keystore.p12 \"$CERTS_STORE_PASSWORD\" \\\n     \"$HOSTNAME\"\n echo \"Preparing keystore for replication and clienttls listener is complete\"\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for tls listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for tls listener is complete\"\n-fi\n-\n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-external-9094-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for external listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-external-9094.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for external listener is complete\"\n-fi\n+regex=\"^\\/opt\\/kafka\\/certificates\\/(custom|oauth)-([a-z0-9]{1,11})-([0-9]+)-certs$\"\n+for CERT_DIR in /opt/kafka/certificates/*; do\n+  if [[ $CERT_DIR =~ $regex ]]; then\n+    echo \"Preparing store for ${BASH_REMATCH[1]} ${BASH_REMATCH[2]} listener\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c9468424df37910c3551cbbd431e13f8e703ed9"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2ODEwNTg1OnYy", "diffSide": "RIGHT", "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTowNjowOFrOHiWHEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTowNjowOFrOHiWHEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3NTg4OQ==", "bodyText": "I know this was here before. But could you fix the message? I think it is supposed to say Preparing truststore for client authentication or something like that.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505775889", "createdAt": "2020-10-15T19:06:08Z", "author": {"login": "scholzj"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -72,19 +72,28 @@ create_keystore /tmp/kafka/cluster.keystore.p12 \"$CERTS_STORE_PASSWORD\" \\\n     \"$HOSTNAME\"\n echo \"Preparing keystore for replication and clienttls listener is complete\"\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for tls listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for tls listener is complete\"\n-fi\n-\n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-external-9094-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for external listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-external-9094.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for external listener is complete\"\n-fi\n+regex=\"^\\/opt\\/kafka\\/certificates\\/(custom|oauth)-([a-z0-9]{1,11})-([0-9]+)-certs$\"\n+for CERT_DIR in /opt/kafka/certificates/*; do\n+  if [[ $CERT_DIR =~ $regex ]]; then\n+    echo \"Preparing store for ${BASH_REMATCH[1]} ${BASH_REMATCH[2]} listener\"\n+    if [[ ${BASH_REMATCH[1]} == \"custom\"  ]]; then\n+      echo /tmp/kafka/\"${BASH_REMATCH[1]}\"-\"${BASH_REMATCH[2]}\"-\"${BASH_REMATCH[3]}\".keystore.p12\n+      create_keystore_without_ca_file /tmp/kafka/\"${BASH_REMATCH[1]}\"-\"${BASH_REMATCH[2]}\"-\"${BASH_REMATCH[3]}\".keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CERT_DIR}/tls.crt\" \"${CERT_DIR}/tls.key\" custom-key\n+    fi\n+    if [[ ${BASH_REMATCH[1]} == \"oauth\"  ]]; then\n+      OAUTH_STORE=\"/tmp/kafka/${BASH_REMATCH[1]}-${BASH_REMATCH[2]}-${BASH_REMATCH[3]}.truststore.p12\"\n+      # Add each certificate to the trust store\n+      declare -i INDEX=0\n+      for CRT in \"$CERT_DIR\"/**/*; do\n+        ALIAS=\"oauth-${INDEX}\"\n+        echo \"Adding $CRT to truststore $OAUTH_STORE with alias $ALIAS\"\n+        create_truststore \"$OAUTH_STORE\" \"$CERTS_STORE_PASSWORD\" \"$CRT\" \"$ALIAS\"\n+        INDEX+=1\n+      done\n+    fi\n+    echo \"Preparing store for ${BASH_REMATCH[1]} ${BASH_REMATCH[2]} listener is complete\"  \n+  fi\n+done\n \n echo \"Preparing truststore for clienttls listener\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c9468424df37910c3551cbbd431e13f8e703ed9"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2ODEwNjI0OnYy", "diffSide": "RIGHT", "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTowNjoxNlrOHiWHRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTowNjoxNlrOHiWHRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3NTk0Mw==", "bodyText": "Same as above.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505775943", "createdAt": "2020-10-15T19:06:16Z", "author": {"login": "scholzj"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -96,54 +105,6 @@ for CRT in /opt/kafka/client-ca-certs/*.crt; do\n done\n echo \"Preparing truststore for clienttls listener is complete\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c9468424df37910c3551cbbd431e13f8e703ed9"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2ODEwODQ0OnYy", "diffSide": "RIGHT", "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTowNzowNFrOHiWIqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOToyNjozN1rOHiWwwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3NjI5OQ==", "bodyText": "Should we improve this message instead of just printing the path? Or is that a debug left overs.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505776299", "createdAt": "2020-10-15T19:07:04Z", "author": {"login": "scholzj"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -72,19 +72,28 @@ create_keystore /tmp/kafka/cluster.keystore.p12 \"$CERTS_STORE_PASSWORD\" \\\n     \"$HOSTNAME\"\n echo \"Preparing keystore for replication and clienttls listener is complete\"\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for tls listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for tls listener is complete\"\n-fi\n-\n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-external-9094-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for external listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-external-9094.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for external listener is complete\"\n-fi\n+regex=\"^\\/opt\\/kafka\\/certificates\\/(custom|oauth)-([a-z0-9]{1,11})-([0-9]+)-certs$\"\n+for CERT_DIR in /opt/kafka/certificates/*; do\n+  if [[ $CERT_DIR =~ $regex ]]; then\n+    echo \"Preparing store for ${BASH_REMATCH[1]} ${BASH_REMATCH[2]} listener\"\n+    if [[ ${BASH_REMATCH[1]} == \"custom\"  ]]; then\n+      echo /tmp/kafka/\"${BASH_REMATCH[1]}\"-\"${BASH_REMATCH[2]}\"-\"${BASH_REMATCH[3]}\".keystore.p12", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c9468424df37910c3551cbbd431e13f8e703ed9"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc4NDIzMw==", "bodyText": "Well I think it's good to have it here, as for oauth in the \"Adding ... \" message it mention the oauth store path, here we are printing the keystore path. We could improve but the line before says \"Preparing store ... \" and then the echo prints the keystore name.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505784233", "createdAt": "2020-10-15T19:22:09Z", "author": {"login": "ppatierno"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -72,19 +72,28 @@ create_keystore /tmp/kafka/cluster.keystore.p12 \"$CERTS_STORE_PASSWORD\" \\\n     \"$HOSTNAME\"\n echo \"Preparing keystore for replication and clienttls listener is complete\"\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for tls listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for tls listener is complete\"\n-fi\n-\n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-external-9094-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for external listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-external-9094.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for external listener is complete\"\n-fi\n+regex=\"^\\/opt\\/kafka\\/certificates\\/(custom|oauth)-([a-z0-9]{1,11})-([0-9]+)-certs$\"\n+for CERT_DIR in /opt/kafka/certificates/*; do\n+  if [[ $CERT_DIR =~ $regex ]]; then\n+    echo \"Preparing store for ${BASH_REMATCH[1]} ${BASH_REMATCH[2]} listener\"\n+    if [[ ${BASH_REMATCH[1]} == \"custom\"  ]]; then\n+      echo /tmp/kafka/\"${BASH_REMATCH[1]}\"-\"${BASH_REMATCH[2]}\"-\"${BASH_REMATCH[3]}\".keystore.p12", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3NjI5OQ=="}, "originalCommit": {"oid": "3c9468424df37910c3551cbbd431e13f8e703ed9"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc4NjU2MQ==", "bodyText": "Yeah, I do not object to the log message ... but we should then improve it to not just print the path but add some explanation text.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505786561", "createdAt": "2020-10-15T19:26:37Z", "author": {"login": "scholzj"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -72,19 +72,28 @@ create_keystore /tmp/kafka/cluster.keystore.p12 \"$CERTS_STORE_PASSWORD\" \\\n     \"$HOSTNAME\"\n echo \"Preparing keystore for replication and clienttls listener is complete\"\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for tls listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for tls listener is complete\"\n-fi\n-\n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-external-9094-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for external listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-external-9094.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for external listener is complete\"\n-fi\n+regex=\"^\\/opt\\/kafka\\/certificates\\/(custom|oauth)-([a-z0-9]{1,11})-([0-9]+)-certs$\"\n+for CERT_DIR in /opt/kafka/certificates/*; do\n+  if [[ $CERT_DIR =~ $regex ]]; then\n+    echo \"Preparing store for ${BASH_REMATCH[1]} ${BASH_REMATCH[2]} listener\"\n+    if [[ ${BASH_REMATCH[1]} == \"custom\"  ]]; then\n+      echo /tmp/kafka/\"${BASH_REMATCH[1]}\"-\"${BASH_REMATCH[2]}\"-\"${BASH_REMATCH[3]}\".keystore.p12", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3NjI5OQ=="}, "originalCommit": {"oid": "3c9468424df37910c3551cbbd431e13f8e703ed9"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 938, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}