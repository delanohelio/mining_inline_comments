{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0MzQzODA5", "number": 2545, "title": "Remove Kafka Connect properties from root of KafkaMirrorMaker2Spec", "bodyText": "Type of change\nSelect the type of your PR\n\nEnhancement / new feature\nRefactoring\n\nDescription\nThis PR refactors KafkaMirrorMaker2Spec to extend a new\nAbstractKafkaConnectSpec that doesn't include the properties that\nshould only apply at the spec.clusters level. It also uses the\nAbstractKafkaConnectSpec as the super class of the KafkaConnectSpec.\nChecklist\nPlease go through this checklist and make sure all applicable tasks have been done\n\n Update/write design documentation in ./design\n Write tests\n Make sure all tests pass\n Update documentation\n Check RBAC rights for Kubernetes / OpenShift roles\n Try your changes from Pod inside your Kubernetes and OpenShift cluster, not just locally\n Reference relevant issue(s) and close them after merging\n Update CHANGELOG.md", "createdAt": "2020-02-12T14:37:51Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2545", "merged": true, "mergeCommit": {"oid": "591a3041fd954cf95bf16797fe8459d3268ea67e"}, "closed": true, "closedAt": "2020-02-18T11:02:47Z", "author": {"login": "ajborley"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDpyHRAFqTM1NzY0NDUzMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcEPXR7gH2gAyMzc0MzQzODA5OmM1YjU0YjgzNzg5ZDc0MjdjN2E4NWVlZDdlMzMzZmI1ZTE2OTY5OGU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NjQ0NTMz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2545#pullrequestreview-357644533", "createdAt": "2020-02-12T17:26:41Z", "commit": {"oid": "5f29861d2620b2e439fb49a819036cdb476d0bdb"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNzoyNjo0MlrOFo3vvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNzoyODowMVrOFo3yeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQwMDcwMA==", "bodyText": "missing .... version, resources and externalConfiguration", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2545#discussion_r378400700", "createdAt": "2020-02-12T17:26:42Z", "author": {"login": "ppatierno"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/AbstractKafkaConnectSpec.java", "diffHunk": "@@ -0,0 +1,218 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.api.kafka.model;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import io.fabric8.kubernetes.api.model.Affinity;\n+import io.fabric8.kubernetes.api.model.ResourceRequirements;\n+import io.fabric8.kubernetes.api.model.Toleration;\n+import io.strimzi.api.annotations.DeprecatedProperty;\n+import io.strimzi.api.kafka.model.connect.ExternalConfiguration;\n+import io.strimzi.api.kafka.model.template.KafkaConnectTemplate;\n+import io.strimzi.api.kafka.model.tracing.Tracing;\n+import io.strimzi.crdgenerator.annotations.Description;\n+import io.strimzi.crdgenerator.annotations.KubeLink;\n+import io.sundr.builder.annotations.Buildable;\n+import io.vertx.core.cli.annotations.DefaultValue;\n+import lombok.EqualsAndHashCode;\n+\n+import java.io.Serializable;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Buildable(\n+        editableEnabled = false,\n+        generateBuilderPackage = false,\n+        builderPackage = \"io.fabric8.kubernetes.api.builder\"\n+)\n+@JsonInclude(JsonInclude.Include.NON_NULL)\n+@JsonPropertyOrder({ \"replicas\", \"image\",\n+        \"livenessProbe\", \"readinessProbe\", \"jvmOptions\",\n+        \"affinity\", \"tolerations\", \"logging\", \"metrics\", \"tracing\", \"template\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f29861d2620b2e439fb49a819036cdb476d0bdb"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQwMTE5Mw==", "bodyText": "please check missing values as comment above.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2545#discussion_r378401193", "createdAt": "2020-02-12T17:27:39Z", "author": {"login": "ppatierno"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaConnectSpec.java", "diffHunk": "@@ -32,11 +21,11 @@\n         builderPackage = \"io.fabric8.kubernetes.api.builder\"\n )\n @JsonInclude(JsonInclude.Include.NON_NULL)\n-@JsonPropertyOrder({ \"replicas\", \"config\", \"image\",\n+@JsonPropertyOrder({ \"replicas\", \"image\", \"bootstrapServers\", \"config\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f29861d2620b2e439fb49a819036cdb476d0bdb"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQwMTQwMg==", "bodyText": "ditto as above", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2545#discussion_r378401402", "createdAt": "2020-02-12T17:28:01Z", "author": {"login": "ppatierno"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaMirrorMaker2Spec.java", "diffHunk": "@@ -22,18 +20,17 @@\n         builderPackage = \"io.fabric8.kubernetes.api.builder\"\n )\n @JsonInclude(JsonInclude.Include.NON_NULL)\n-@JsonPropertyOrder({\"replicas\", \"connectCluster\", \"config\", \"image\",\n+@JsonPropertyOrder({\"replicas\", \"connectCluster\", \"image\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f29861d2620b2e439fb49a819036cdb476d0bdb"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NjU0MDcw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2545#pullrequestreview-357654070", "createdAt": "2020-02-12T17:40:23Z", "commit": {"oid": "5f29861d2620b2e439fb49a819036cdb476d0bdb"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNzo0MDoyNFrOFo4NIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNzo0MDoyNFrOFo4NIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQwODIyNQ==", "bodyText": "Can we reword, since it's requests and limits.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2545#discussion_r378408225", "createdAt": "2020-02-12T17:40:24Z", "author": {"login": "tombentley"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/AbstractKafkaConnectSpec.java", "diffHunk": "@@ -0,0 +1,218 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.api.kafka.model;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import io.fabric8.kubernetes.api.model.Affinity;\n+import io.fabric8.kubernetes.api.model.ResourceRequirements;\n+import io.fabric8.kubernetes.api.model.Toleration;\n+import io.strimzi.api.annotations.DeprecatedProperty;\n+import io.strimzi.api.kafka.model.connect.ExternalConfiguration;\n+import io.strimzi.api.kafka.model.template.KafkaConnectTemplate;\n+import io.strimzi.api.kafka.model.tracing.Tracing;\n+import io.strimzi.crdgenerator.annotations.Description;\n+import io.strimzi.crdgenerator.annotations.KubeLink;\n+import io.sundr.builder.annotations.Buildable;\n+import io.vertx.core.cli.annotations.DefaultValue;\n+import lombok.EqualsAndHashCode;\n+\n+import java.io.Serializable;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Buildable(\n+        editableEnabled = false,\n+        generateBuilderPackage = false,\n+        builderPackage = \"io.fabric8.kubernetes.api.builder\"\n+)\n+@JsonInclude(JsonInclude.Include.NON_NULL)\n+@JsonPropertyOrder({ \"replicas\", \"image\",\n+        \"livenessProbe\", \"readinessProbe\", \"jvmOptions\",\n+        \"affinity\", \"tolerations\", \"logging\", \"metrics\", \"tracing\", \"template\"})\n+@EqualsAndHashCode(doNotUseGetters = true)\n+public abstract class AbstractKafkaConnectSpec implements Serializable, UnknownPropertyPreserving {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private Logging logging;\n+    private Integer replicas;\n+\n+    private String version;\n+    private String image;\n+    private ResourceRequirements resources;\n+    private Probe livenessProbe;\n+    private Probe readinessProbe;\n+    private JvmOptions jvmOptions;\n+    private Map<String, Object> metrics;\n+    private Tracing tracing;\n+    private Affinity affinity;\n+    private List<Toleration> tolerations;\n+    private KafkaConnectTemplate template;\n+    private ExternalConfiguration externalConfiguration;\n+\n+    private Map<String, Object> additionalProperties = new HashMap<>(0);\n+\n+    @Description(\"The number of pods in the Kafka Connect group.\")\n+    @DefaultValue(\"3\")\n+    public Integer getReplicas() {\n+        return replicas;\n+    }\n+\n+    @Description(\"Logging configuration for Kafka Connect\")\n+    @JsonInclude(value = JsonInclude.Include.NON_NULL)\n+    public Logging getLogging() {\n+        return logging == null ? new InlineLogging() : logging;\n+    }\n+\n+    public void setLogging(Logging logging) {\n+        this.logging = logging;\n+    }\n+\n+    public void setReplicas(Integer replicas) {\n+        this.replicas = replicas;\n+    }\n+\n+    @Description(\"The Kafka Connect version. Defaults to {DefaultKafkaVersion}. \" +\n+            \"Consult the user documentation to understand the process required to upgrade or downgrade the version.\")\n+    public String getVersion() {\n+        return version;\n+    }\n+\n+    public void setVersion(String version) {\n+        this.version = version;\n+    }\n+\n+    @Description(\"The docker image for the pods.\")\n+    @JsonInclude(JsonInclude.Include.NON_DEFAULT)\n+    public String getImage() {\n+        return image;\n+    }\n+\n+    public void setImage(String image) {\n+        this.image = image;\n+    }\n+\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    @Description(\"CPU and memory resources to reserve.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f29861d2620b2e439fb49a819036cdb476d0bdb"}, "originalPosition": 100}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "638b011a149095da519bb3a62dbdef414b13c6db", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/638b011a149095da519bb3a62dbdef414b13c6db", "committedDate": "2020-02-14T11:08:05Z", "message": "Remove Kafka Connect properties from root of KafkaMirrorMaker2Spec\n\nThis commit refactors KafkaMirrorMaker2Spec to extend a new\nAbstractKafkaConnectSpec that doesn't include the properties that\nshould only apply at the `spec.clusters` level. It also uses the\nAbstractKafkaConnectSpec as the super class of the KafkaConnectSpec.\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2842de9804b5d488d2124fc9e317456acaef0a7", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b2842de9804b5d488d2124fc9e317456acaef0a7", "committedDate": "2020-02-14T11:08:05Z", "message": "Address review comments\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5f29861d2620b2e439fb49a819036cdb476d0bdb", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/5f29861d2620b2e439fb49a819036cdb476d0bdb", "committedDate": "2020-02-12T14:32:45Z", "message": "Remove Kafka Connect properties from root of KafkaMirrorMaker2Spec\n\nThis commit refactors KafkaMirrorMaker2Spec to extend a new\nAbstractKafkaConnectSpec that doesn't include the properties that\nshould only apply at the `spec.clusters` level. It also uses the\nAbstractKafkaConnectSpec as the super class of the KafkaConnectSpec.\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}, "afterCommit": {"oid": "b2842de9804b5d488d2124fc9e317456acaef0a7", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b2842de9804b5d488d2124fc9e317456acaef0a7", "committedDate": "2020-02-14T11:08:05Z", "message": "Address review comments\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4ODgwNjU4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2545#pullrequestreview-358880658", "createdAt": "2020-02-14T11:32:27Z", "commit": {"oid": "b2842de9804b5d488d2124fc9e317456acaef0a7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5b54b83789d7427c7a85eed7e333fb5e169698e", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c5b54b83789d7427c7a85eed7e333fb5e169698e", "committedDate": "2020-02-14T13:15:47Z", "message": "Add missed helm artifacts\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1715, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}