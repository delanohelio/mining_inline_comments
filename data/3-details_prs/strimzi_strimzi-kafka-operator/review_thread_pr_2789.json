{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5NTEyODQ3", "number": 2789, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTo0NzowMFrODvR3yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMTozNDoyMVrODvhQ4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTAyNDc1OnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaBridgeResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTo0NzowMFrOGBnQ9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTo0NzowMFrOGBnQ9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM0NTA3Ng==", "bodyText": "Are you sure it's set everytime?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404345076", "createdAt": "2020-04-06T19:47:00Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaBridgeResource.java", "diffHunk": "@@ -89,9 +91,14 @@ private static KafkaBridge getKafkaBridgeFromYaml(String yamlPath) {\n     }\n \n     private static KafkaBridge waitFor(KafkaBridge kafkaBridge) {\n-        LOGGER.info(\"Waiting for Kafka Bridge {}\", kafkaBridge.getMetadata().getName());\n-        DeploymentUtils.waitForDeploymentReady(kafkaBridge.getMetadata().getName() + \"-bridge\", kafkaBridge.getSpec().getReplicas());\n-        LOGGER.info(\"Kafka Bridge {} is ready\", kafkaBridge.getMetadata().getName());\n+        String namespace = ResourceManager.kubeClient().getNamespace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb789d6252ba0de9a0a39c853b3a53b609c9648"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTA0MDkxOnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaTopicResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTo1MTo1M1rOGBnbRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTo1MTo1M1rOGBnbRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM0NzcxOQ==", "bodyText": "Why you don't get there CR via client like you do for other cases?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404347719", "createdAt": "2020-04-06T19:51:53Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaTopicResource.java", "diffHunk": "@@ -78,9 +78,13 @@ private static KafkaTopic getKafkaTopicFromYaml(String yamlPath) {\n     }\n \n     private static KafkaTopic waitFor(KafkaTopic kafkaTopic) {\n-        LOGGER.info(\"Waiting for Kafka Topic {}\", kafkaTopic.getMetadata().getName());\n-        KafkaTopicUtils.waitForKafkaTopicCreation(kafkaTopic.getMetadata().getName());\n-        LOGGER.info(\"Kafka Topic {} is ready\", kafkaTopic.getMetadata().getName());\n+        String name = kafkaTopic.getMetadata().getName();\n+\n+        LOGGER.info(\"Waiting for Kafka Topic {}\", name);\n+        KafkaTopicUtils.waitForKafkaTopicCreation(name,\n+            () -> LOGGER.info(kafkaTopic));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb789d6252ba0de9a0a39c853b3a53b609c9648"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTA0MTM2OnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaUserResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTo1MjowNFrOGBnblw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTo1MjowNFrOGBnblw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM0Nzc5OQ==", "bodyText": "Same as above", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404347799", "createdAt": "2020-04-06T19:52:04Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaUserResource.java", "diffHunk": "@@ -77,10 +76,13 @@ private static KafkaUser getKafkaUserFromYaml(String yamlPath) {\n     }\n \n     private static KafkaUser waitFor(KafkaUser kafkaUser) {\n-        LOGGER.info(\"Waiting for Kafka User {}\", kafkaUser.getMetadata().getName());\n-        SecretUtils.waitForSecretReady(kafkaUser.getMetadata().getName());\n-        KafkaUserUtils.waitForKafkaUserCreation(kafkaUser.getMetadata().getName());\n-        LOGGER.info(\"Kafka User {} is ready\", kafkaUser.getMetadata().getName());\n+        String name = kafkaUser.getMetadata().getName();\n+\n+        LOGGER.info(\"Waiting for Kafka User {}\", name);\n+        KafkaUserUtils.waitForKafkaUserCreation(name,\n+            () -> LOGGER.info(kafkaUser));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb789d6252ba0de9a0a39c853b3a53b609c9648"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTQyNTMwOnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kubeUtils/controllers/DeploymentUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMTo0Nzo0MFrOGBrJpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMTo0Nzo0MFrOGBrJpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQwODc0Mg==", "bodyText": "You don't need to have this generic I think. Or maybe update it to accept resources which has status? In that case you should change the naming.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404408742", "createdAt": "2020-04-06T21:47:40Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kubeUtils/controllers/DeploymentUtils.java", "diffHunk": "@@ -240,4 +253,20 @@ public static void waitForNoRollingUpdate(String deploymentName, Map<String, Str\n \n         return depConfigSnapshot(name);\n     }\n+\n+    public static <T extends Deployment, L extends DeploymentStatus> void logCurrentDeploymentStatus(T deployment, L status) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb789d6252ba0de9a0a39c853b3a53b609c9648"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDU4NTk5OnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaConnectorUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzoxNTo0NFrOGB1_cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODo1MjoxOFrOGB5kXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU4NjM1NQ==", "bodyText": "For this and all the other waitFor*() methods, when and why don't you want to have the debug logging on timeout? In other words, what are the callers of waitForConnectorStatus(String name, String state) doing that means they're not needing the debug logging?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404586355", "createdAt": "2020-04-07T07:15:44Z", "author": {"login": "tombentley"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaConnectorUtils.java", "diffHunk": "@@ -44,9 +44,14 @@ public static void waitForConnectorStability(String connectorName, String connec\n     }\n \n     public static void waitForConnectorStatus(String name, String state) {\n+        waitForConnectorStatus(name, state, () -> { });\n+    }\n+\n+    public static void waitForConnectorStatus(String name, String state, Runnable onTimeout) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb789d6252ba0de9a0a39c853b3a53b609c9648"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY0NDk1OQ==", "bodyText": "That's really interesting idea, thanks :)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404644959", "createdAt": "2020-04-07T08:52:18Z", "author": {"login": "im-konge"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaConnectorUtils.java", "diffHunk": "@@ -44,9 +44,14 @@ public static void waitForConnectorStability(String connectorName, String connec\n     }\n \n     public static void waitForConnectorStatus(String name, String state) {\n+        waitForConnectorStatus(name, state, () -> { });\n+    }\n+\n+    public static void waitForConnectorStatus(String name, String state, Runnable onTimeout) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU4NjM1NQ=="}, "originalCommit": {"oid": "8cb789d6252ba0de9a0a39c853b3a53b609c9648"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTUwODcyOnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/KubernetesResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMToyMzozOFrOGB-_Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMToyMzozOFrOGB-_Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczMzc0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String name = deployment.getMetadata().getName();\n          \n          \n            \n                    String deploymentName = deployment.getMetadata().getName();", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404733746", "createdAt": "2020-04-07T11:23:38Z", "author": {"login": "see-quick"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/KubernetesResource.java", "diffHunk": "@@ -417,9 +417,11 @@ private static ClusterRoleBinding getClusterRoleBindingFromYaml(String yamlPath)\n     }\n \n     private static Deployment waitFor(Deployment deployment) {\n-        LOGGER.info(\"Waiting for deployment {}\", deployment.getMetadata().getName());\n-        DeploymentUtils.waitForDeploymentReady(deployment.getMetadata().getName(), deployment.getSpec().getReplicas());\n-        LOGGER.info(\"Deployment {} is ready\", deployment.getMetadata().getName());\n+        String name = deployment.getMetadata().getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45e80e0a9ba10c67b5d89ada7cd805a480b08d6b"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTUxNDIyOnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaBridgeResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMToyNToxOVrOGB_Cng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMToyNToxOVrOGB_Cng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczNDYyMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String name = kafkaBridge.getMetadata().getName();\n          \n          \n            \n                    String kafkaBridgeCrName = kafkaBridge.getMetadata().getName();\n          \n      \n    \n    \n  \n\nand same applied with the others...", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404734622", "createdAt": "2020-04-07T11:25:19Z", "author": {"login": "see-quick"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaBridgeResource.java", "diffHunk": "@@ -89,9 +90,12 @@ private static KafkaBridge getKafkaBridgeFromYaml(String yamlPath) {\n     }\n \n     private static KafkaBridge waitFor(KafkaBridge kafkaBridge) {\n-        LOGGER.info(\"Waiting for Kafka Bridge {}\", kafkaBridge.getMetadata().getName());\n-        DeploymentUtils.waitForDeploymentReady(kafkaBridge.getMetadata().getName() + \"-bridge\", kafkaBridge.getSpec().getReplicas());\n-        LOGGER.info(\"Kafka Bridge {} is ready\", kafkaBridge.getMetadata().getName());\n+        String name = kafkaBridge.getMetadata().getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45e80e0a9ba10c67b5d89ada7cd805a480b08d6b"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTUyNDk4OnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/StUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMToyODoxMlrOGB_JAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMToyODoxMlrOGB_JAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczNjI1Ng==", "bodyText": "nice use of generics :) but please make sure when you  defining it, create some doc, where you explain, which set of types can be contains T type.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404736256", "createdAt": "2020-04-07T11:28:12Z", "author": {"login": "see-quick"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/StUtils.java", "diffHunk": "@@ -229,4 +234,20 @@ public static boolean checkLogForJSONFormat(Map<String, String> pods, String con\n         }\n         return isJSON;\n     }\n+\n+    public static <T extends CustomResource & HasStatus> void logCurrentStatus(T customResource) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45e80e0a9ba10c67b5d89ada7cd805a480b08d6b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTUzMzU5OnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kubeUtils/controllers/DeploymentUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMTozMDozMlrOGB_OBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMTozMDozMlrOGB_OBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczNzU0Mw==", "bodyText": "What else here can be here like Deployment?  Please write some documentation explaining what can be T, it will make more sense for the person who will use it after you :).", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404737543", "createdAt": "2020-04-07T11:30:32Z", "author": {"login": "see-quick"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kubeUtils/controllers/DeploymentUtils.java", "diffHunk": "@@ -240,4 +247,20 @@ public static void waitForNoRollingUpdate(String deploymentName, Map<String, Str\n \n         return depConfigSnapshot(name);\n     }\n+\n+    public static <T extends Deployment> void logCurrentDeploymentStatus(T deployment) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45e80e0a9ba10c67b5d89ada7cd805a480b08d6b"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTU0MzQ3OnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kubeUtils/objects/PodUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMTozMzoyOFrOGB_UCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMTo0MjozOFrOGB_mag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczOTA4Mw==", "bodyText": "What does it mean () -> { } ?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404739083", "createdAt": "2020-04-07T11:33:28Z", "author": {"login": "see-quick"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kubeUtils/objects/PodUtils.java", "diffHunk": "@@ -56,6 +57,10 @@ public static String getInitContainerImageName(String podName) {\n     }\n \n     public static void waitForPodsReady(LabelSelector selector, int expectPods, boolean containers) {\n+        waitForPodsReady(selector, expectPods, containers, () -> { });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45e80e0a9ba10c67b5d89ada7cd805a480b08d6b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc0Mzc4Ng==", "bodyText": "This is used in case you don't want to onTimeout code execution - nothing will happen, just empty lambda - empty runnable - if you have any idea how to do it better - I'm open for any ideas. I think this is good if we don't want to display anything in tests after timeout exception is thrown.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404743786", "createdAt": "2020-04-07T11:42:38Z", "author": {"login": "im-konge"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kubeUtils/objects/PodUtils.java", "diffHunk": "@@ -56,6 +57,10 @@ public static String getInitContainerImageName(String podName) {\n     }\n \n     public static void waitForPodsReady(LabelSelector selector, int expectPods, boolean containers) {\n+        waitForPodsReady(selector, expectPods, containers, () -> { });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczOTA4Mw=="}, "originalCommit": {"oid": "45e80e0a9ba10c67b5d89ada7cd805a480b08d6b"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTU0NjU4OnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kubeUtils/objects/PodUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMTozNDoyMVrOGB_V4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMTozNDoyMVrOGB_V4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczOTU1Mw==", "bodyText": "Again some documentation will be supportive.. )", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404739553", "createdAt": "2020-04-07T11:34:21Z", "author": {"login": "see-quick"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kubeUtils/objects/PodUtils.java", "diffHunk": "@@ -248,4 +253,20 @@ public static void waitUntilPodsStability(List<Pod> pods) {\n                 return false;\n             });\n     }\n+\n+    public static void logCurrentPodStatus(String kind, String name, List<String> log) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45e80e0a9ba10c67b5d89ada7cd805a480b08d6b"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 411, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}