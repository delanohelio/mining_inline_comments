{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MTU4MzQ2", "number": 3660, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODozODowOFrOEkbcsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODozOTowNFrOEkbeLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjMzOTA1OnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/cli/KafkaCmdClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODozODowOFrOHTXjTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTo0MToyNVrOHTaArg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA3MDg2Mw==", "bodyText": "I don't have better solution in mind atm, but in case if creation will fail, the deletion will not be executed. Can we delete topic based on name and maybe move this code before wait of line 37?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3660#discussion_r490070863", "createdAt": "2020-09-17T08:38:08Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/cli/KafkaCmdClient.java", "diffHunk": "@@ -25,9 +30,16 @@ public KafkaCmdClient() { }\n \n     public static String createTopicUsingPodCli(String clusterName, int zkPodId, String topic, int replicationFactor, int partitions) {\n         String podName = KafkaResources.zookeeperPodName(clusterName, zkPodId);\n-        return cmdKubeClient().execInPod(podName, \"/bin/bash\", \"-c\",\n+        String response = cmdKubeClient().execInPod(podName, \"/bin/bash\", \"-c\",\n             \"bin/kafka-topics.sh --zookeeper localhost:\" + PORT + \" --create \" + \" --topic \" + topic +\n                 \" --replication-factor \" + replicationFactor + \" --partitions \" + partitions).out();\n+\n+        KafkaTopicUtils.waitForKafkaTopicCreation(topic);\n+\n+        KafkaTopic kafkaTopic = KafkaTopicResource.kafkaTopicClient().inNamespace(kubeClient().getNamespace()).withName(topic).get();\n+        ResourceManager.getPointerResources().push(() -> ResourceManager.deleteLater(KafkaTopicResource.kafkaTopicClient(), kafkaTopic));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65639cbb7506ffd8ac57f11ff1f132702fda5c71"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA3ODMxOA==", "bodyText": "Sure we can", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3660#discussion_r490078318", "createdAt": "2020-09-17T08:49:59Z", "author": {"login": "im-konge"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/cli/KafkaCmdClient.java", "diffHunk": "@@ -25,9 +30,16 @@ public KafkaCmdClient() { }\n \n     public static String createTopicUsingPodCli(String clusterName, int zkPodId, String topic, int replicationFactor, int partitions) {\n         String podName = KafkaResources.zookeeperPodName(clusterName, zkPodId);\n-        return cmdKubeClient().execInPod(podName, \"/bin/bash\", \"-c\",\n+        String response = cmdKubeClient().execInPod(podName, \"/bin/bash\", \"-c\",\n             \"bin/kafka-topics.sh --zookeeper localhost:\" + PORT + \" --create \" + \" --topic \" + topic +\n                 \" --replication-factor \" + replicationFactor + \" --partitions \" + partitions).out();\n+\n+        KafkaTopicUtils.waitForKafkaTopicCreation(topic);\n+\n+        KafkaTopic kafkaTopic = KafkaTopicResource.kafkaTopicClient().inNamespace(kubeClient().getNamespace()).withName(topic).get();\n+        ResourceManager.getPointerResources().push(() -> ResourceManager.deleteLater(KafkaTopicResource.kafkaTopicClient(), kafkaTopic));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA3MDg2Mw=="}, "originalCommit": {"oid": "65639cbb7506ffd8ac57f11ff1f132702fda5c71"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDExMTE1MA==", "bodyText": "Just thinking about this -> if the creation will fail, so the topic will not be created, we don't need to delete it after test, as it will not be present, right? But it's true that this will prevent from race conditions.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3660#discussion_r490111150", "createdAt": "2020-09-17T09:41:25Z", "author": {"login": "im-konge"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/cli/KafkaCmdClient.java", "diffHunk": "@@ -25,9 +30,16 @@ public KafkaCmdClient() { }\n \n     public static String createTopicUsingPodCli(String clusterName, int zkPodId, String topic, int replicationFactor, int partitions) {\n         String podName = KafkaResources.zookeeperPodName(clusterName, zkPodId);\n-        return cmdKubeClient().execInPod(podName, \"/bin/bash\", \"-c\",\n+        String response = cmdKubeClient().execInPod(podName, \"/bin/bash\", \"-c\",\n             \"bin/kafka-topics.sh --zookeeper localhost:\" + PORT + \" --create \" + \" --topic \" + topic +\n                 \" --replication-factor \" + replicationFactor + \" --partitions \" + partitions).out();\n+\n+        KafkaTopicUtils.waitForKafkaTopicCreation(topic);\n+\n+        KafkaTopic kafkaTopic = KafkaTopicResource.kafkaTopicClient().inNamespace(kubeClient().getNamespace()).withName(topic).get();\n+        ResourceManager.getPointerResources().push(() -> ResourceManager.deleteLater(KafkaTopicResource.kafkaTopicClient(), kafkaTopic));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA3MDg2Mw=="}, "originalCommit": {"oid": "65639cbb7506ffd8ac57f11ff1f132702fda5c71"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjM0MjQzOnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/mirrormaker/MirrorMaker2ST.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODozODo1NlrOHTXlaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODozODo1NlrOHTXlaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA3MTQwMA==", "bodyText": "Did you update the message count for this test? I just want to avoid waiting there 500 seconds for example instead of 5 seconds.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3660#discussion_r490071400", "createdAt": "2020-09-17T08:38:56Z", "author": {"login": "Frawless"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/mirrormaker/MirrorMaker2ST.java", "diffHunk": "@@ -650,11 +650,11 @@ void testMirrorMaker2CorrectlyMirrorsHeaders() {\n         //deploying example clients for checking if mm2 will mirror messages with headers\n \n         KafkaBasicClientResource targetKafkaClientsJob = new KafkaBasicClientResource(\"\", targetConsumerName,\n-            KafkaResources.plainBootstrapAddress(kafkaClusterTargetName), targetExampleTopic, MESSAGE_COUNT, \"\", ClientUtils.generateRandomConsumerGroup(), 0);\n+            KafkaResources.plainBootstrapAddress(kafkaClusterTargetName), targetExampleTopic, MESSAGE_COUNT, \"\", ClientUtils.generateRandomConsumerGroup(), 1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65639cbb7506ffd8ac57f11ff1f132702fda5c71"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjM0Mjg3OnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/mirrormaker/MirrorMaker2ST.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODozOTowNFrOHTXltg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODozOTowNFrOHTXltg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA3MTQ3OA==", "bodyText": "Same as above", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3660#discussion_r490071478", "createdAt": "2020-09-17T08:39:04Z", "author": {"login": "Frawless"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/mirrormaker/MirrorMaker2ST.java", "diffHunk": "@@ -650,11 +650,11 @@ void testMirrorMaker2CorrectlyMirrorsHeaders() {\n         //deploying example clients for checking if mm2 will mirror messages with headers\n \n         KafkaBasicClientResource targetKafkaClientsJob = new KafkaBasicClientResource(\"\", targetConsumerName,\n-            KafkaResources.plainBootstrapAddress(kafkaClusterTargetName), targetExampleTopic, MESSAGE_COUNT, \"\", ClientUtils.generateRandomConsumerGroup(), 0);\n+            KafkaResources.plainBootstrapAddress(kafkaClusterTargetName), targetExampleTopic, MESSAGE_COUNT, \"\", ClientUtils.generateRandomConsumerGroup(), 1000);\n         targetKafkaClientsJob.consumerStrimzi().done();\n \n         KafkaBasicClientResource sourceKafkaClientsJob = new KafkaBasicClientResource(sourceProducerName, \"\",\n-            KafkaResources.plainBootstrapAddress(kafkaClusterSourceName), sourceExampleTopic, MESSAGE_COUNT, \"\", ClientUtils.generateRandomConsumerGroup(), 0);\n+            KafkaResources.plainBootstrapAddress(kafkaClusterSourceName), sourceExampleTopic, MESSAGE_COUNT, \"\", ClientUtils.generateRandomConsumerGroup(), 1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65639cbb7506ffd8ac57f11ff1f132702fda5c71"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1138, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}