{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMDM3NzMy", "number": 2944, "title": "[DOC] update the Using the User Operator section", "bodyText": "Signed-off-by: prmellor pmellor@redhat.com\nDocumentation\nThe presentation of the content in the_Using the User Operator_ section of the Using Guide was a little confusing.\nIn this PR, I've reworked to minimize the content and reflect a logical order.\nThe Operators are introduced earlier in the guide, so this section is just about using the operator to manage users.\nRemoved\n\n4 files\nReplication of 2 files (using x-refs to other locations instead)\nusing -uo context as no longer needed\n\nOld structure\n6. Using the User Operator\n6.1. Mutual TLS authentication\n6.1.1. When to use mutual TLS authentication for clients\n6.2. Creating a Kafka user with mutual TLS authentication\n6.3. SCRAM-SHA authentication\n6.3.1. Supported SCRAM credentials\n6.3.2. When to use SCRAM-SHA authentication for clients\n6.4. Creating a Kafka user with SCRAM SHA authentication\n6.5. Editing a Kafka user\n6.6. Deleting a Kafka user\n6.7. Kafka User resource\n6.7.1. Authentication\n6.7.2. Authorization\n6.7.3. User quotas\nNew structure\n6. Using the User Operator\n6.1. Securing user access to Kafka\n6.1.1. User authentication\n6.1.2. User authorization\n6.1.3. User quotas\n6.2. Configuring a Kafka user\nChecklist\nPlease go through this checklist and make sure all applicable tasks have been done\n\n Update/write design documentation in ./design\n Write tests\n Make sure all tests pass\n Update documentation\n Check RBAC rights for Kubernetes / OpenShift roles\n Try your changes from Pod inside your Kubernetes and OpenShift cluster, not just locally\n Reference relevant issue(s) and close them after merging\n Update CHANGELOG.md", "createdAt": "2020-05-04T15:56:09Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2944", "merged": true, "mergeCommit": {"oid": "e7d200a354361fbf896ed5c658ecd150430d60ca"}, "closed": true, "closedAt": "2020-05-12T13:34:08Z", "author": {"login": "PaulRMellor"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceBatEgH2gAyNDEzMDM3NzMyOjYyZjQzMzg0NDQwZDE1ZjQ1MmExNmY1ODI3YzQ1YzY2NjM2YmZjNGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcghkG_AFqTQwOTkwMDQwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "62f43384440d15f452a16f5827c45c66636bfc4f", "author": {"user": {"login": "PaulRMellor", "name": null}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/62f43384440d15f452a16f5827c45c66636bfc4f", "committedDate": "2020-05-04T15:42:53Z", "message": "update the using the user operator section\n\nSigned-off-by: prmellor <pmellor@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MjM1MjYw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2944#pullrequestreview-405235260", "createdAt": "2020-05-04T18:22:47Z", "commit": {"oid": "62f43384440d15f452a16f5827c45c66636bfc4f"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODoyMjo0N1rOGQMi6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODoyNzozOFrOGQMulg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYzNTk0Nw==", "bodyText": "I think this is confusing and the reader might not understand what he should do. Eben I'm not completely sure what does this refer to. Does it refer to the KAfkaUser authentication section?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2944#discussion_r419635947", "createdAt": "2020-05-04T18:22:47Z", "author": {"login": "scholzj"}, "path": "documentation/modules/proc-configuring-kafka-user.adoc", "diffHunk": "@@ -0,0 +1,68 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-using-the-user-operator.adoc\n+\n+[id='proc-configuring-kafka-user-{context}']\n+= Configuring a Kafka user\n+\n+Use the properties of the `KafkaUser` resource to configure a Kafka user.\n+\n+You can use `kubectl apply` to create or modify users, and `kubectl delete` to delete existing users.\n+\n+* `kubectl apply -f _<user-config-file>_`\n+* `kubectl delete KafkaUser _<user-name>_`\n+\n+When you create a user, you must configure the authentication and authorization mechanisms required when connecting to Kafka brokers using a listener.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62f43384440d15f452a16f5827c45c66636bfc4f"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYzNjM5Ng==", "bodyText": "It does and it doesn't .... the user will not get any error when such authentication is not enabled in the broker. There is no check for that. So this might be a bit confusing.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2944#discussion_r419636396", "createdAt": "2020-05-04T18:23:36Z", "author": {"login": "scholzj"}, "path": "documentation/modules/proc-configuring-kafka-user.adoc", "diffHunk": "@@ -0,0 +1,68 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-using-the-user-operator.adoc\n+\n+[id='proc-configuring-kafka-user-{context}']\n+= Configuring a Kafka user\n+\n+Use the properties of the `KafkaUser` resource to configure a Kafka user.\n+\n+You can use `kubectl apply` to create or modify users, and `kubectl delete` to delete existing users.\n+\n+* `kubectl apply -f _<user-config-file>_`\n+* `kubectl delete KafkaUser _<user-name>_`\n+\n+When you create a user, you must configure the authentication and authorization mechanisms required when connecting to Kafka brokers using a listener.\n+\n+This procedure shows how a user is created with TLS authentication.\n+The authentication required depends on the xref:assembly-kafka-broker-listener-authentication-deployment-configuration-kafka[type of authentication configured for the Kafka broker listener].", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62f43384440d15f452a16f5827c45c66636bfc4f"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYzNzE0Mw==", "bodyText": "I wonder if everyone will understand that this is not the only option.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * A running Kafka cluster xref:con-mutual-tls-authentication-deployment-configuration-kafka[configured with a Kafka broker listener using TLS authentication and encryption].\n          \n          \n            \n            * A running Kafka cluster xref:con-mutual-tls-authentication-deployment-configuration-kafka[configured with a Kafka broker listener using for example TLS authentication and encryption].", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2944#discussion_r419637143", "createdAt": "2020-05-04T18:24:43Z", "author": {"login": "scholzj"}, "path": "documentation/modules/proc-configuring-kafka-user.adoc", "diffHunk": "@@ -0,0 +1,68 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-using-the-user-operator.adoc\n+\n+[id='proc-configuring-kafka-user-{context}']\n+= Configuring a Kafka user\n+\n+Use the properties of the `KafkaUser` resource to configure a Kafka user.\n+\n+You can use `kubectl apply` to create or modify users, and `kubectl delete` to delete existing users.\n+\n+* `kubectl apply -f _<user-config-file>_`\n+* `kubectl delete KafkaUser _<user-name>_`\n+\n+When you create a user, you must configure the authentication and authorization mechanisms required when connecting to Kafka brokers using a listener.\n+\n+This procedure shows how a user is created with TLS authentication.\n+The authentication required depends on the xref:assembly-kafka-broker-listener-authentication-deployment-configuration-kafka[type of authentication configured for the Kafka broker listener].\n+\n+.Prerequisites\n+\n+* A running Kafka cluster xref:con-mutual-tls-authentication-deployment-configuration-kafka[configured with a Kafka broker listener using TLS authentication and encryption].", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62f43384440d15f452a16f5827c45c66636bfc4f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYzODI0Nw==", "bodyText": "I think that the change of the title is misleading since this only one of the ways. It doesn't cover for example OAuth. So I think this should be still abotu the KafkaUser resource.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2944#discussion_r419638247", "createdAt": "2020-05-04T18:26:34Z", "author": {"login": "scholzj"}, "path": "documentation/modules/ref-kafka-user.adoc", "diffHunk": "@@ -3,30 +3,34 @@\n // assembly-using-the-user-operator.adoc\n \n [id='ref-kafka-user-{context}']\n-= Kafka User resource\n+= Securing user access to Kafka", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62f43384440d15f452a16f5827c45c66636bfc4f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYzODkzNA==", "bodyText": "The example seems to be missing the p12 file and password. We should add it. Please let me or @ppatierno know if you need the example.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2944#discussion_r419638934", "createdAt": "2020-05-04T18:27:38Z", "author": {"login": "scholzj"}, "path": "documentation/modules/ref-kafka-user.adoc", "diffHunk": "@@ -41,12 +45,12 @@ spec:\n   # ...\n ----\n \n-When the user is created by the User Operator, it will create a new secret with the same name as the `KafkaUser` resource.\n-The secret will contain a public and private key which should be used for the TLS Client Authentication.\n-Bundled with them will be the public key of the client certification authority which was used to sign the user certificate.\n-All keys will be in X509 format.\n+When the user is created by the User Operator, it creates a new secret with the same name as the `KafkaUser` resource.\n+The secret contains a public and private key to use for TLS client authentication.\n+Bundled with the keys is the public key of the client Certificate Authority (CA) used to sign the user certificate.\n+All keys are in X.509 format.\n \n-.An example of the `Secret` with user credentials\n+.An example `Secret` with user credentials", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62f43384440d15f452a16f5827c45c66636bfc4f"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NTEwMjc5", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2944#pullrequestreview-405510279", "createdAt": "2020-05-05T06:03:01Z", "commit": {"oid": "62f43384440d15f452a16f5827c45c66636bfc4f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNjowMzowMVrOGQbdSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNjowNzoxOFrOGQbiRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg4MDI2Nw==", "bodyText": "The user won't get an error but anyway user authentication depends on the authentication settings in Kafka, of course, you cannot authenticate a user via TLS if it's not enabled in the Kafka configuration. I think that this sentence is appropriate here.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2944#discussion_r419880267", "createdAt": "2020-05-05T06:03:01Z", "author": {"login": "ppatierno"}, "path": "documentation/modules/proc-configuring-kafka-user.adoc", "diffHunk": "@@ -0,0 +1,68 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-using-the-user-operator.adoc\n+\n+[id='proc-configuring-kafka-user-{context}']\n+= Configuring a Kafka user\n+\n+Use the properties of the `KafkaUser` resource to configure a Kafka user.\n+\n+You can use `kubectl apply` to create or modify users, and `kubectl delete` to delete existing users.\n+\n+* `kubectl apply -f _<user-config-file>_`\n+* `kubectl delete KafkaUser _<user-name>_`\n+\n+When you create a user, you must configure the authentication and authorization mechanisms required when connecting to Kafka brokers using a listener.\n+\n+This procedure shows how a user is created with TLS authentication.\n+The authentication required depends on the xref:assembly-kafka-broker-listener-authentication-deployment-configuration-kafka[type of authentication configured for the Kafka broker listener].", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYzNjM5Ng=="}, "originalCommit": {"oid": "62f43384440d15f452a16f5827c45c66636bfc4f"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg4MTU0MA==", "bodyText": "you mention the \"user certificate\" here which is actually the \"public key\" mentioned in the line above.\nWe should always remember that a certificate contains a public key signed by another certificate coming from a CA.\nSo the user certificate is/contains actually the public key which is signed by the client CA certificate (which is itself a public key but self-signed in our case).", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2944#discussion_r419881540", "createdAt": "2020-05-05T06:07:18Z", "author": {"login": "ppatierno"}, "path": "documentation/modules/ref-kafka-user.adoc", "diffHunk": "@@ -41,12 +45,12 @@ spec:\n   # ...\n ----\n \n-When the user is created by the User Operator, it will create a new secret with the same name as the `KafkaUser` resource.\n-The secret will contain a public and private key which should be used for the TLS Client Authentication.\n-Bundled with them will be the public key of the client certification authority which was used to sign the user certificate.\n-All keys will be in X509 format.\n+When the user is created by the User Operator, it creates a new secret with the same name as the `KafkaUser` resource.\n+The secret contains a public and private key to use for TLS client authentication.\n+Bundled with the keys is the public key of the client Certificate Authority (CA) used to sign the user certificate.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62f43384440d15f452a16f5827c45c66636bfc4f"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f214d843cab23a94b6a7423bd364983c73d29bd2", "author": {"user": {"login": "PaulRMellor", "name": null}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f214d843cab23a94b6a7423bd364983c73d29bd2", "committedDate": "2020-05-06T10:22:29Z", "message": "review edits JS\n\nSigned-off-by: prmellor <pmellor@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NzMwNDgz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2944#pullrequestreview-406730483", "createdAt": "2020-05-06T15:29:23Z", "commit": {"oid": "f214d843cab23a94b6a7423bd364983c73d29bd2"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNToyOToyM1rOGRYtYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNToyOToyM1rOGRYtYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg4MzgwOQ==", "bodyText": "I guess one empty line would be enough", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2944#discussion_r420883809", "createdAt": "2020-05-06T15:29:23Z", "author": {"login": "scholzj"}, "path": "documentation/modules/proc-configuring-kafka-user.adoc", "diffHunk": "@@ -0,0 +1,83 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-using-the-user-operator.adoc\n+\n+[id='proc-configuring-kafka-user-{context}']\n+= Configuring a Kafka user\n+\n+Use the properties of the `KafkaUser` resource to configure a Kafka user.\n+\n+You can use `kubectl apply` to create or modify users, and `kubectl delete` to delete existing users.\n+\n+For example:\n+\n+* `kubectl apply -f _<user-config-file>_`\n+* `kubectl delete KafkaUser _<user-name>_`\n+\n+When you configure the `KafkaUser` authentication and authorization mechanisms, ensure they match the equivalent `Kafka` configuration:\n+\n+* `KafkaUser.spec.authentication` matches `Kafka.spec.kafka.listeners.*.authentication`\n+* `KafkaUser.spec.authorization` matches `Kafka.spec.kafka.authorization`\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f214d843cab23a94b6a7423bd364983c73d29bd2"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2ODE4MDc0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2944#pullrequestreview-406818074", "createdAt": "2020-05-06T17:10:10Z", "commit": {"oid": "f214d843cab23a94b6a7423bd364983c73d29bd2"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzoxMDoxMFrOGRc81A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzoxMTozOFrOGRdAkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk1MzMwMA==", "bodyText": "As a KafkaUser...", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2944#discussion_r420953300", "createdAt": "2020-05-06T17:10:10Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/proc-configuring-kafka-user.adoc", "diffHunk": "@@ -0,0 +1,83 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-using-the-user-operator.adoc\n+\n+[id='proc-configuring-kafka-user-{context}']\n+= Configuring a Kafka user\n+\n+Use the properties of the `KafkaUser` resource to configure a Kafka user.\n+\n+You can use `kubectl apply` to create or modify users, and `kubectl delete` to delete existing users.\n+\n+For example:\n+\n+* `kubectl apply -f _<user-config-file>_`\n+* `kubectl delete KafkaUser _<user-name>_`\n+\n+When you configure the `KafkaUser` authentication and authorization mechanisms, ensure they match the equivalent `Kafka` configuration:\n+\n+* `KafkaUser.spec.authentication` matches `Kafka.spec.kafka.listeners.*.authentication`\n+* `KafkaUser.spec.authorization` matches `Kafka.spec.kafka.authorization`\n+\n+\n+a `KafkaUser`, you use the `spec` property to define the `authentication` and `authorization` mechanisms required for the Kafka user to be able to connect to Kafka brokers.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f214d843cab23a94b6a7423bd364983c73d29bd2"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk1NDI1OQ==", "bodyText": "Suggested change:\nfrom the secret my-user > from the my-user secret", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2944#discussion_r420954259", "createdAt": "2020-05-06T17:11:38Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/proc-configuring-kafka-user.adoc", "diffHunk": "@@ -0,0 +1,83 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-using-the-user-operator.adoc\n+\n+[id='proc-configuring-kafka-user-{context}']\n+= Configuring a Kafka user\n+\n+Use the properties of the `KafkaUser` resource to configure a Kafka user.\n+\n+You can use `kubectl apply` to create or modify users, and `kubectl delete` to delete existing users.\n+\n+For example:\n+\n+* `kubectl apply -f _<user-config-file>_`\n+* `kubectl delete KafkaUser _<user-name>_`\n+\n+When you configure the `KafkaUser` authentication and authorization mechanisms, ensure they match the equivalent `Kafka` configuration:\n+\n+* `KafkaUser.spec.authentication` matches `Kafka.spec.kafka.listeners.*.authentication`\n+* `KafkaUser.spec.authorization` matches `Kafka.spec.kafka.authorization`\n+\n+\n+a `KafkaUser`, you use the `spec` property to define the `authentication` and `authorization` mechanisms required for the Kafka user to be able to connect to Kafka brokers.\n+\n+This procedure shows how a user is created with TLS authentication.\n+You can also create a user with SCRAM-SHA authentication.\n+\n+The authentication required depends on the xref:assembly-kafka-broker-listener-authentication-deployment-configuration-kafka[type of authentication configured for the Kafka broker listener].\n+\n+NOTE: Authentication between Kafka users and Kafka brokers depends on the authentication settings for each.\n+For example, it is not possible to authenticate a user with TLS if it is not also enabled in the Kafka configuration.\n+\n+.Prerequisites\n+\n+* A running Kafka cluster xref:con-mutual-tls-authentication-deployment-configuration-kafka[configured with a Kafka broker listener using TLS authentication and encryption].\n+* A running User Operator (typically xref:assembly-kafka-entity-operator-deployment-configuration-kafka[deployed with the Entity Operator]).\n+\n+If you are using SCRAM-SHA authentication, you need a running Kafka cluster xref:con-scram-sha-authentication-deployment-configuration-kafka[configured with a Kafka broker listener using SCRAM-SHA authentication].\n+\n+.Procedure\n+\n+. Prepare a YAML file containing the `KafkaUser` to be created.\n++\n+.An example `KafkaUser`\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaUserApiVersion}\n+kind: KafkaUser\n+metadata:\n+  name: my-user\n+  labels:\n+    strimzi.io/cluster: my-cluster\n+spec:\n+  authentication: <1>\n+    type: tls\n+  authorization:\n+    type: simple <2>\n+    acls:\n+      - resource:\n+          type: topic\n+          name: my-topic\n+          patternType: literal\n+        operation: Read\n+      - resource:\n+          type: topic\n+          name: my-topic\n+          patternType: literal\n+        operation: Describe\n+      - resource:\n+          type: group\n+          name: my-group\n+          patternType: literal\n+        operation: Read\n+----\n+<1> User authentication mechanism, defined as mutual `tls` or `scram-sha-512`.\n+<2> Simple authorization, which requires an accompanying list of ACL rules.\n+\n+. Create the `KafkaUser` resource in Kubernetes.\n++\n+[source,shell,subs=+quotes]\n+kubectl apply -f _<user-config-file>_\n+\n+. Use the credentials from the secret `my-user` in your client application.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f214d843cab23a94b6a7423bd364983c73d29bd2"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1517f15dcab0317669425bb7ea5202da654a161", "author": {"user": {"login": "PaulRMellor", "name": null}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b1517f15dcab0317669425bb7ea5202da654a161", "committedDate": "2020-05-07T09:16:06Z", "message": "review edits DL\n\nSigned-off-by: prmellor <pmellor@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb00bf8a4915538f51ed19ef71829205b7f6244e", "author": {"user": {"login": "PaulRMellor", "name": null}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/bb00bf8a4915538f51ed19ef71829205b7f6244e", "committedDate": "2020-05-11T10:12:05Z", "message": "change order of additional deployment options\n\nSigned-off-by: prmellor <pmellor@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5OTAwNDAy", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2944#pullrequestreview-409900402", "createdAt": "2020-05-12T10:17:58Z", "commit": {"oid": "bb00bf8a4915538f51ed19ef71829205b7f6244e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1595, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}