{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNjU3NDEx", "number": 3793, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMTo1Mjo1NVrOEtPN3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMTo1NTowN1rOEtPQdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODcwNjg2OnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMTo1Mjo1NVrOHg60DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMTo1Mjo1NVrOHg60DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI4MDA3Ng==", "bodyText": "Could you use individual imports instead of this as it was before?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3793#discussion_r504280076", "createdAt": "2020-10-13T21:52:55Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "diffHunk": "@@ -142,9 +143,7 @@\n import static io.strimzi.operator.cluster.model.KafkaConfiguration.INTERBROKER_PROTOCOL_VERSION;\n import static io.strimzi.operator.cluster.model.KafkaConfiguration.LOG_MESSAGE_FORMAT_VERSION;\n import static io.strimzi.operator.cluster.model.KafkaVersion.compareDottedVersions;\n-import static java.util.Collections.emptyList;\n-import static java.util.Collections.singletonList;\n-import static java.util.Collections.singletonMap;\n+import static java.util.Collections.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a995c89e3242a686f2a44be121c9492d4fc926f"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODcxMzQ4OnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperatorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMTo1NTowN1rOHg63_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMTo1NTowN1rOHg63_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI4MTA4NA==", "bodyText": "I'm not sure this works. First, it might run thousand times because of the parametrized test. So it would be better to add this to some of the existing tests and to the parameters. Also, this actually doesn't test the result. You set it up,  but you never compare the annotations and labels on the secrets.\nI will think how to fix the test / or where to run it to make it better.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3793#discussion_r504281084", "createdAt": "2020-10-13T21:55:07Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperatorTest.java", "diffHunk": "@@ -352,6 +354,33 @@ public void testCreateClusterWithJmxEnabled(Params params, VertxTestContext cont\n                 )); //getInitialCertificates(getKafkaAssembly(\"foo\").getMetadata().getName()));\n     }\n \n+    @ParameterizedTest\n+    @MethodSource(\"data\")\n+    public void testCreateClusterWithAnnotationsAndLabelsInCaCertSecret(Params params, VertxTestContext context) {\n+        setFields(params);\n+        Kafka kafka = getKafkaAssembly(\"foo\");\n+        kafka.getSpec()\n+                .getKafka()\n+                .setTemplate(new KafkaClusterTemplateBuilder()\n+                        .withClusterCaCert(\n+                                new ResourceTemplateBuilder()\n+                                        .withNewMetadata()\n+                                        .withLabels(Collections.singletonMap(\"foo\", \"bar\"))\n+                                        .withAnnotations(Collections.singletonMap(\"foo\", \"bar\"))\n+                                        .endMetadata()\n+                                        .build())\n+                        .build());\n+\n+        createCluster(context, kafka, Collections.singletonList(new SecretBuilder()\n+                .withNewMetadata()\n+                .withName(KafkaCluster.jmxSecretName(\"foo\"))\n+                .withNamespace(\"test\")\n+                .endMetadata()\n+                .withData(Collections.singletonMap(\"foo\", \"bar\"))\n+                .build()\n+        ));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a995c89e3242a686f2a44be121c9492d4fc926f"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 913, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}