{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MzM0ODcw", "number": 3314, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODowMjo0MlrOEOJjTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMzo1MDoyM1rOERDfww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjcyMDEyOnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/tracing/assembly-distributed-tracing.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODowMjo0MlrOGxIwaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODowMjo0MlrOGxIwaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3Njg3Mg==", "bodyText": "I wonder if this note should be introduced earlier on in the How Strimzi Supports Tracing?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r454176872", "createdAt": "2020-07-14T08:02:42Z", "author": {"login": "PaulRMellor"}, "path": "documentation/assemblies/tracing/assembly-distributed-tracing.adoc", "diffHunk": "@@ -0,0 +1,61 @@\n+// This assembly is included in the following assemblies:\n+//\n+// master.adoc\n+\n+[id='assembly-distributed-tracing-{context}']\n+= Distributed tracing\n+\n+Distributed tracing allows you to track the progress of transactions between applications in a distributed system. In a microservices architecture, tracing tracks the progress of transactions between services. Trace data is useful for monitoring application performance and investigating issues with target systems and end-user applications.\n+\n+In Strimzi, tracing facilitates the end-to-end tracking of messages: from source systems to Kafka, and then from Kafka to target systems and applications. It complements the metrics that are available to view in link:{BookURLDeploying}#assembly-metrics-setup-{context}[Grafana dashboards], as well as the component loggers. \n+\n+[discrete]\n+== How Strimzi supports tracing\n+\n+Support for tracing is built in to the following components:\n+\n+* Kafka Connect (including Kafka Connect with Source2Image support)\n+* MirrorMaker\n+* Strimzi Kafka Bridge\n+\n+You enable and configure tracing for these components using template configuration properties in their custom resources.\n+\n+To enable tracing in Kafka producers, consumers, and Kafka Streams API applications, you _instrument_ application code using the link:https://github.com/opentracing-contrib/java-kafka-client/blob/master/README.md[OpenTracing Apache Kafka Client Instrumentation^] library (included with Strimzi). When instrumented, clients generate trace data; for example, when producing messages or writing offsets to the log.\n+\n+Traces are sampled according to a sampling strategy and then visualized in the Jaeger user interface.\n+\n+[discrete]\n+== Outline of procedures\n+\n+To set up tracing for Strimzi, follow these procedures in order:\n+\n+* Set up tracing for clients:\n+\n+** xref:proc-configuring-jaeger-tracer-kafka-clients-{context}[Initialize a Jaeger tracer for Kafka clients]\n+\n+* Instrument clients with tracers:\n+\n+** xref:proc-instrumenting-producers-consumers-for-opentracing-{context}[Instrument producers and consumers for tracing]\n+\n+** xref:proc-instrumenting-kafka-streams-with-tracers-{context}[Instrument Kafka Streams applications for tracing]\n+\n+* xref:assembly-setting-up-tracing-mirror-maker-connect-bridge-{context}[Set up tracing for MirrorMaker, Kafka Connect, and the Kafka Bridge]\n+\n+.Prerequisites\n+\n+* The Jaeger backend components are deployed to your Kubernetes cluster. For deployment instructions, see the https://www.jaegertracing.io/docs/1.18/deployment/[Jaeger deployment documentation^].\n+\n+[NOTE]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79f041949c35b419fb3f0ee89676b9453b5536b2"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjcyOTgyOnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/tracing/assembly-instrumenting-kafka-clients-tracers.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODowNTo1MlrOGxI2tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDo0MjowNlrOGxOLzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3ODQ4NA==", "bodyText": "Are we capitalising producer and consumer? I haven't been! Would it be better saying Kafka producer and consumer clients, and...", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r454178484", "createdAt": "2020-07-14T08:05:52Z", "author": {"login": "PaulRMellor"}, "path": "documentation/assemblies/tracing/assembly-instrumenting-kafka-clients-tracers.adoc", "diffHunk": "@@ -0,0 +1,11 @@\n+// This assembly is included in the following assemblies:\n+//\n+// assembly-tracing.adoc\n+[id='assembly-instrumenting-kafka-clients-tracers-{context}']\n+= Instrumenting Kafka clients with tracers\n+\n+Instrument Kafka Producer, Consumer, and Streams API applications for distributed tracing.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79f041949c35b419fb3f0ee89676b9453b5536b2"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI2NTgwNQ==", "bodyText": "Hmm, as part of this PR I removed the caps from Producer and Consumer throughout the section. I agree we should not capitalise.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r454265805", "createdAt": "2020-07-14T10:42:06Z", "author": {"login": "laidan6000"}, "path": "documentation/assemblies/tracing/assembly-instrumenting-kafka-clients-tracers.adoc", "diffHunk": "@@ -0,0 +1,11 @@\n+// This assembly is included in the following assemblies:\n+//\n+// assembly-tracing.adoc\n+[id='assembly-instrumenting-kafka-clients-tracers-{context}']\n+= Instrumenting Kafka clients with tracers\n+\n+Instrument Kafka Producer, Consumer, and Streams API applications for distributed tracing.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3ODQ4NA=="}, "originalCommit": {"oid": "79f041949c35b419fb3f0ee89676b9453b5536b2"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjczNjc5OnYy", "diffSide": "RIGHT", "path": "documentation/modules/tracing/con-overview-opentracing-jaeger.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODowNzo1OVrOGxI7Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDo0Mjo0NVrOGxOM-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3OTYxOA==", "bodyText": "Just a thought. Would a couple of description lists work here?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r454179618", "createdAt": "2020-07-14T08:07:59Z", "author": {"login": "PaulRMellor"}, "path": "documentation/modules/tracing/con-overview-opentracing-jaeger.adoc", "diffHunk": "@@ -0,0 +1,22 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-distributed-tracing.adoc\n+\n+[id='con-overview-opentracing-jaeger-{context}']\n+= Overview of OpenTracing and Jaeger\n+\n+Strimzi uses the OpenTracing and Jaeger projects.\n+\n+The OpenTracing specification defines APIs that developers can use to instrument applications for distributed tracing. It is independent from the tracing system.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79f041949c35b419fb3f0ee89676b9453b5536b2"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI2NjEwNg==", "bodyText": "Nice idea. I'll have a go. We want to avoid overloading the user with info about OpenTracing and Jaeger.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r454266106", "createdAt": "2020-07-14T10:42:45Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/tracing/con-overview-opentracing-jaeger.adoc", "diffHunk": "@@ -0,0 +1,22 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-distributed-tracing.adoc\n+\n+[id='con-overview-opentracing-jaeger-{context}']\n+= Overview of OpenTracing and Jaeger\n+\n+Strimzi uses the OpenTracing and Jaeger projects.\n+\n+The OpenTracing specification defines APIs that developers can use to instrument applications for distributed tracing. It is independent from the tracing system.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3OTYxOA=="}, "originalCommit": {"oid": "79f041949c35b419fb3f0ee89676b9453b5536b2"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjc1NzYxOnYy", "diffSide": "RIGHT", "path": "documentation/modules/tracing/proc-instrumenting-producers-consumers-opentracing.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODoxNDowMFrOGxJIFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDo0MzoxMFrOGxONyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE4MjkzNA==", "bodyText": "We wouldn't shrink as the others? So, In the application code of each Kafka Producer and Consumer application:", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r454182934", "createdAt": "2020-07-14T08:14:00Z", "author": {"login": "PaulRMellor"}, "path": "documentation/modules/tracing/proc-instrumenting-producers-consumers-opentracing.adoc", "diffHunk": "@@ -3,15 +3,15 @@\n // assembly-instrumenting-kafka-clients-tracers.adoc\n \n [id='proc-instrumenting-producers-consumers-for-opentracing-{context}']\n-= Instrumenting Kafka Producers and Consumers for tracing\n+= Instrumenting producers and consumers for tracing\n \n-Use a Decorator pattern or Interceptors to instrument your Java Producer and Consumer application code for distributed tracing.\n+Use a Decorator pattern or Interceptors to instrument your Java producer and consumer application code for tracing.\n \n .Procedure\n \n-Perform these steps in the application code of each Kafka Producer and Consumer application.\n+Perform the following steps in the application code of each producer and consumer application.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79f041949c35b419fb3f0ee89676b9453b5536b2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI2NjMxMw==", "bodyText": "Yes, good spot. This was feedback from the other writers.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r454266313", "createdAt": "2020-07-14T10:43:10Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/tracing/proc-instrumenting-producers-consumers-opentracing.adoc", "diffHunk": "@@ -3,15 +3,15 @@\n // assembly-instrumenting-kafka-clients-tracers.adoc\n \n [id='proc-instrumenting-producers-consumers-for-opentracing-{context}']\n-= Instrumenting Kafka Producers and Consumers for tracing\n+= Instrumenting producers and consumers for tracing\n \n-Use a Decorator pattern or Interceptors to instrument your Java Producer and Consumer application code for distributed tracing.\n+Use a Decorator pattern or Interceptors to instrument your Java producer and consumer application code for tracing.\n \n .Procedure\n \n-Perform these steps in the application code of each Kafka Producer and Consumer application.\n+Perform the following steps in the application code of each producer and consumer application.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE4MjkzNA=="}, "originalCommit": {"oid": "79f041949c35b419fb3f0ee89676b9453b5536b2"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MjY2ODM3OnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/tracing/assembly-distributed-tracing.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMTozMDozNFrOG1eUYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMzo0ODo0NlrOG1jQ7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcyNDQ0OQ==", "bodyText": "I guess we should add MirrorMaker2 as well, @scholzj is working on PR fixing tracing on it.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r458724449", "createdAt": "2020-07-22T11:30:34Z", "author": {"login": "ppatierno"}, "path": "documentation/assemblies/tracing/assembly-distributed-tracing.adoc", "diffHunk": "@@ -0,0 +1,61 @@\n+// This assembly is included in the following assemblies:\n+//\n+// master.adoc\n+\n+[id='assembly-distributed-tracing-{context}']\n+= Distributed tracing\n+\n+Distributed tracing allows you to track the progress of transactions between applications in a distributed system. In a microservices architecture, tracing tracks the progress of transactions between services. Trace data is useful for monitoring application performance and investigating issues with target systems and end-user applications.\n+\n+In Strimzi, tracing facilitates the end-to-end tracking of messages: from source systems to Kafka, and then from Kafka to target systems and applications. It complements the metrics that are available to view in link:{BookURLDeploying}#assembly-metrics-setup-{context}[Grafana dashboards], as well as the component loggers. \n+\n+[discrete]\n+== How Strimzi supports tracing\n+\n+Support for tracing is built in to the following components:\n+\n+* Kafka Connect (including Kafka Connect with Source2Image support)\n+* MirrorMaker", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7476b7d9e3394bc2fa98c4e468cb8643d22fe366"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgwNTQ4Nw==", "bodyText": "Good suggestion, thanks. I've added MirrorMaker 2.0 in a few different places.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r458805487", "createdAt": "2020-07-22T13:48:46Z", "author": {"login": "laidan6000"}, "path": "documentation/assemblies/tracing/assembly-distributed-tracing.adoc", "diffHunk": "@@ -0,0 +1,61 @@\n+// This assembly is included in the following assemblies:\n+//\n+// master.adoc\n+\n+[id='assembly-distributed-tracing-{context}']\n+= Distributed tracing\n+\n+Distributed tracing allows you to track the progress of transactions between applications in a distributed system. In a microservices architecture, tracing tracks the progress of transactions between services. Trace data is useful for monitoring application performance and investigating issues with target systems and end-user applications.\n+\n+In Strimzi, tracing facilitates the end-to-end tracking of messages: from source systems to Kafka, and then from Kafka to target systems and applications. It complements the metrics that are available to view in link:{BookURLDeploying}#assembly-metrics-setup-{context}[Grafana dashboards], as well as the component loggers. \n+\n+[discrete]\n+== How Strimzi supports tracing\n+\n+Support for tracing is built in to the following components:\n+\n+* Kafka Connect (including Kafka Connect with Source2Image support)\n+* MirrorMaker", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcyNDQ0OQ=="}, "originalCommit": {"oid": "7476b7d9e3394bc2fa98c4e468cb8643d22fe366"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MjY3MTQzOnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/tracing/assembly-setting-up-tracing-mirror-maker-connect-bridge.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMTozMTozNlrOG1eWWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMTozMTozNlrOG1eWWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcyNDk1Mg==", "bodyText": "as mentioned above it should be about MirrorMaker 2 as well.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r458724952", "createdAt": "2020-07-22T11:31:36Z", "author": {"login": "ppatierno"}, "path": "documentation/assemblies/tracing/assembly-setting-up-tracing-mirror-maker-connect-bridge.adoc", "diffHunk": "@@ -8,7 +8,7 @@ Distributed tracing is supported for MirrorMaker, Kafka Connect (including Kafka\n \n .Tracing in MirrorMaker\n \n-For MirrorMaker, messages are traced from the source cluster to the target cluster; the trace data records messages entering and leaving the MirrorMaker component.\n+For MirrorMaker, messages are traced from the source cluster to the target cluster. The trace data records messages entering and leaving the MirrorMaker component.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7476b7d9e3394bc2fa98c4e468cb8643d22fe366"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MzE4MzE0OnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/tracing/assembly-distributed-tracing.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMzo0OTo1N1rOG1jUag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMzo0OTo1N1rOG1jUag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgwNjM3OA==", "bodyText": "Decided not to add MM2 to the title to prevent it from becoming too long.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r458806378", "createdAt": "2020-07-22T13:49:57Z", "author": {"login": "laidan6000"}, "path": "documentation/assemblies/tracing/assembly-distributed-tracing.adoc", "diffHunk": "@@ -0,0 +1,62 @@\n+// This assembly is included in the following assemblies:\n+//\n+// master.adoc\n+\n+[id='assembly-distributed-tracing-{context}']\n+= Distributed tracing\n+\n+Distributed tracing allows you to track the progress of transactions between applications in a distributed system. In a microservices architecture, tracing tracks the progress of transactions between services. Trace data is useful for monitoring application performance and investigating issues with target systems and end-user applications.\n+\n+In Strimzi, tracing facilitates the end-to-end tracking of messages: from source systems to Kafka, and then from Kafka to target systems and applications. It complements the metrics that are available to view in link:{BookURLDeploying}#assembly-metrics-setup-{context}[Grafana dashboards], as well as the component loggers. \n+\n+[discrete]\n+== How Strimzi supports tracing\n+\n+Support for tracing is built in to the following components:\n+\n+* Kafka Connect (including Kafka Connect with Source2Image support)\n+* MirrorMaker\n+* MirrorMaker 2.0\n+* Strimzi Kafka Bridge\n+\n+You enable and configure tracing for these components using template configuration properties in their custom resources.\n+\n+To enable tracing in Kafka producers, consumers, and Kafka Streams API applications, you _instrument_ application code using the link:https://github.com/opentracing-contrib/java-kafka-client/blob/master/README.md[OpenTracing Apache Kafka Client Instrumentation^] library (included with Strimzi). When instrumented, clients generate trace data; for example, when producing messages or writing offsets to the log.\n+\n+Traces are sampled according to a sampling strategy and then visualized in the Jaeger user interface.\n+\n+[NOTE]\n+====\n+Tracing is not supported for Kafka brokers.\n+\n+Setting up tracing for applications and systems beyond Strimzi is outside the scope of this chapter. To learn more about this subject, search for \"inject and extract\" in the {OpenTracingDocs}.\n+====\n+\n+[discrete]\n+== Outline of procedures\n+\n+To set up tracing for Strimzi, follow these procedures in order:\n+\n+* Set up tracing for clients:\n+\n+** xref:proc-configuring-jaeger-tracer-kafka-clients-{context}[Initialize a Jaeger tracer for Kafka clients]\n+\n+* Instrument clients with tracers:\n+\n+** xref:proc-instrumenting-producers-consumers-for-opentracing-{context}[Instrument producers and consumers for tracing]\n+\n+** xref:proc-instrumenting-kafka-streams-with-tracers-{context}[Instrument Kafka Streams applications for tracing]\n+\n+* xref:assembly-setting-up-tracing-mirror-maker-connect-bridge-{context}[Set up tracing for MirrorMaker, Kafka Connect, and the Kafka Bridge]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cd3f465d079c2c09a5f6dd9346c4fd90d411c93"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MzE4MzM5OnYy", "diffSide": "RIGHT", "path": "documentation/modules/tracing/proc-enabling-tracing-in-connect-mirror-maker-bridge-resources.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMzo1MDowMlrOG1jUmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMzo1MDowMlrOG1jUmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgwNjQyNw==", "bodyText": "Actually, for MM2 this field is a bit different - that sould be the only difference ...\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                mirrorMakerContainer:\n          \n          \n            \n                connectContainer:", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r458806427", "createdAt": "2020-07-22T13:50:02Z", "author": {"login": "scholzj"}, "path": "documentation/modules/tracing/proc-enabling-tracing-in-connect-mirror-maker-bridge-resources.adoc", "diffHunk": "@@ -64,8 +64,31 @@ spec:\n   tracing:\n     type: jaeger\n #...\n+----\n \n+.Jaeger tracer configuration for MirrorMaker 2.0\n+[source,yaml,subs=attributes+]\n ----\n+apiVersion: kafka.strimzi.io/v1alpha1\n+kind: KafkaMirrorMaker2\n+metadata:\n+  name: my-mm2-cluster\n+spec:\n+  #...\n+  template:\n+    mirrorMakerContainer:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cd3f465d079c2c09a5f6dd9346c4fd90d411c93"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MzE4NTMxOnYy", "diffSide": "RIGHT", "path": "documentation/modules/tracing/proc-enabling-tracing-in-connect-mirror-maker-bridge-resources.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMzo1MDoyM1rOG1jVpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMzo1OTo1OFrOG1jycA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgwNjY5NA==", "bodyText": "@scholzj - Please check the example YAML for MM2\nIs mirrorMakerContainer correct?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r458806694", "createdAt": "2020-07-22T13:50:23Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/tracing/proc-enabling-tracing-in-connect-mirror-maker-bridge-resources.adoc", "diffHunk": "@@ -64,8 +64,31 @@ spec:\n   tracing:\n     type: jaeger\n #...\n+----\n \n+.Jaeger tracer configuration for MirrorMaker 2.0\n+[source,yaml,subs=attributes+]\n ----\n+apiVersion: kafka.strimzi.io/v1alpha1\n+kind: KafkaMirrorMaker2\n+metadata:\n+  name: my-mm2-cluster\n+spec:\n+  #...\n+  template:\n+    mirrorMakerContainer:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cd3f465d079c2c09a5f6dd9346c4fd90d411c93"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgxNDA2NA==", "bodyText": "Already added in another comment in the mean time ;-) ... it should be connectContainer for MM2", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r458814064", "createdAt": "2020-07-22T13:59:58Z", "author": {"login": "scholzj"}, "path": "documentation/modules/tracing/proc-enabling-tracing-in-connect-mirror-maker-bridge-resources.adoc", "diffHunk": "@@ -64,8 +64,31 @@ spec:\n   tracing:\n     type: jaeger\n #...\n+----\n \n+.Jaeger tracer configuration for MirrorMaker 2.0\n+[source,yaml,subs=attributes+]\n ----\n+apiVersion: kafka.strimzi.io/v1alpha1\n+kind: KafkaMirrorMaker2\n+metadata:\n+  name: my-mm2-cluster\n+spec:\n+  #...\n+  template:\n+    mirrorMakerContainer:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgwNjY5NA=="}, "originalCommit": {"oid": "1cd3f465d079c2c09a5f6dd9346c4fd90d411c93"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1452, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}