{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1ODI0ODgy", "number": 2439, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNDowNDoxOVrODZ12tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwOToyOTo1MVrODaGl3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NDIzMzUxOnYy", "diffSide": "RIGHT", "path": "user-operator/src/main/java/io/strimzi/operator/user/operator/KafkaUserQuotasOperator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNDowNDoxOVrOFgdKnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNDowNDoxOVrOFgdKnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU3NjYwNQ==", "bodyText": "Wouldn't configJsonIsEmpty() be a better name?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#discussion_r369576605", "createdAt": "2020-01-22T14:04:19Z", "author": {"login": "tombentley"}, "path": "user-operator/src/main/java/io/strimzi/operator/user/operator/KafkaUserQuotasOperator.java", "diffHunk": "@@ -195,6 +195,14 @@ boolean exists(String username) {\n         return false;\n     }\n \n+    private boolean jsonConfigEmpty(byte[] data) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5a671609b3585553b8558e641b987e424323dbb"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NDI1MjU0OnYy", "diffSide": "RIGHT", "path": "user-operator/src/main/java/io/strimzi/operator/user/operator/KafkaUserQuotasOperator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNDowOTo0NFrOFgdWMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNDowOTo0NFrOFgdWMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU3OTU2OQ==", "bodyText": "So remove removeQuotasFromJsonUser takes a byte[], parses it as JSON, removes something, serializes it and then jsonConfigEmpty() parses it again? That's not ideal. Is there a reason why removeQuotasFromJsonUser() doesn't return the JsonObject and let the caller serialize it if&when they need to? jsonConfigEmpty would then take a JsonObject, but that's better than passing around these byte[] and having each method parse and reparse it.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#discussion_r369579569", "createdAt": "2020-01-22T14:09:44Z", "author": {"login": "tombentley"}, "path": "user-operator/src/main/java/io/strimzi/operator/user/operator/KafkaUserQuotasOperator.java", "diffHunk": "@@ -206,7 +214,13 @@ public void delete(String username) {\n \n         if (data != null)   {\n             log.debug(\"Deleting quotas for user {}\", username);\n-            zkClient.writeData(\"/config/users/\" + username, removeQuotasFromJsonUser(data));\n+            byte[] deleteJson = removeQuotasFromJsonUser(data);\n+            if (jsonConfigEmpty(deleteJson)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5a671609b3585553b8558e641b987e424323dbb"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NDI1Mzc1OnYy", "diffSide": "RIGHT", "path": "user-operator/src/main/java/io/strimzi/operator/user/operator/ScramShaCredentials.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNDoxMDowNFrOFgdXAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNDoxMDowNFrOFgdXAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU3OTc3OQ==", "bodyText": "Again jsonConfigIsEmpty", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#discussion_r369579779", "createdAt": "2020-01-22T14:10:04Z", "author": {"login": "tombentley"}, "path": "user-operator/src/main/java/io/strimzi/operator/user/operator/ScramShaCredentials.java", "diffHunk": "@@ -56,6 +57,14 @@ public void createOrUpdate(String username, String password) {\n         notifyChanges(username);\n     }\n \n+    private boolean jsonConfigEmpty(byte[] data) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5a671609b3585553b8558e641b987e424323dbb"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4Njc1MDc4OnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/UserST.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwODowNzozOFrOFg1g4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwODoxMzo0NFrOFg1o0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk3NTUyMQ==", "bodyText": "Stupid question, but do we test these things also in ITs? Assuming we have ITs for this with a real Zoo and Kafka (I know there are some open issues). That would help to test this already at Travis.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#discussion_r369975521", "createdAt": "2020-01-23T08:07:38Z", "author": {"login": "scholzj"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/UserST.java", "diffHunk": "@@ -171,12 +171,19 @@ void testUserWithQuotas() {\n         assertThat(result.out().contains(\"producer_byte_rate=\" + prodRate), is(true));\n         assertThat(result.out().contains(\"consumer_byte_rate=\" + consRate), is(true));\n \n+        String zkListCommand = \"sh /opt/kafka/bin/zookeeper-shell.sh localhost:21810 <<< 'ls /config/users'\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c34c69d6b340c3aaae10eb1b87af5fa8818041da"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk3NzU1Mg==", "bodyText": "AFAIK no. I can do it.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#discussion_r369977552", "createdAt": "2020-01-23T08:13:44Z", "author": {"login": "sknot-rh"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/UserST.java", "diffHunk": "@@ -171,12 +171,19 @@ void testUserWithQuotas() {\n         assertThat(result.out().contains(\"producer_byte_rate=\" + prodRate), is(true));\n         assertThat(result.out().contains(\"consumer_byte_rate=\" + consRate), is(true));\n \n+        String zkListCommand = \"sh /opt/kafka/bin/zookeeper-shell.sh localhost:21810 <<< 'ls /config/users'\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk3NTUyMQ=="}, "originalCommit": {"oid": "c34c69d6b340c3aaae10eb1b87af5fa8818041da"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4Njk3NTY3OnYy", "diffSide": "RIGHT", "path": "user-operator/src/main/java/io/strimzi/operator/user/operator/ScramShaCredentials.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwOToyOTo1MVrOFg3m8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwOToyMjoxOVrOFhXxcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAwOTg0Mw==", "bodyText": "I think we need to serialize here.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#discussion_r370009843", "createdAt": "2020-01-23T09:29:51Z", "author": {"login": "tombentley"}, "path": "user-operator/src/main/java/io/strimzi/operator/user/operator/ScramShaCredentials.java", "diffHunk": "@@ -76,8 +73,8 @@ public void delete(String username) {\n \n         if (data != null)   {\n             log.debug(\"Deleting {} credentials for user {}\", mechanism.mechanismName(), username);\n-            byte[] deletedJson = deleteUserJson(data);\n-            if (jsonConfigEmpty(deletedJson)) {\n+            JsonObject deletedJson = deleteUserJson(data);\n+            if (configJsonIsEmpty(deletedJson)) {\n                 zkClient.deleteRecursive(\"/config/users/\" + username);\n             } else {\n                 zkClient.writeData(\"/config/users/\" + username, deletedJson);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c34c69d6b340c3aaae10eb1b87af5fa8818041da"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwMDk5Nw==", "bodyText": "WDYM?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#discussion_r370500997", "createdAt": "2020-01-24T07:26:31Z", "author": {"login": "sknot-rh"}, "path": "user-operator/src/main/java/io/strimzi/operator/user/operator/ScramShaCredentials.java", "diffHunk": "@@ -76,8 +73,8 @@ public void delete(String username) {\n \n         if (data != null)   {\n             log.debug(\"Deleting {} credentials for user {}\", mechanism.mechanismName(), username);\n-            byte[] deletedJson = deleteUserJson(data);\n-            if (jsonConfigEmpty(deletedJson)) {\n+            JsonObject deletedJson = deleteUserJson(data);\n+            if (configJsonIsEmpty(deletedJson)) {\n                 zkClient.deleteRecursive(\"/config/users/\" + username);\n             } else {\n                 zkClient.writeData(\"/config/users/\" + username, deletedJson);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAwOTg0Mw=="}, "originalCommit": {"oid": "c34c69d6b340c3aaae10eb1b87af5fa8818041da"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUyNjI3MA==", "bodyText": "Are you telling me that zkClient knows how to write a JsonObject? Maybe it does, by using toString and converting that to UTF-8 bytes. But maybe it doesn't.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#discussion_r370526270", "createdAt": "2020-01-24T08:54:38Z", "author": {"login": "tombentley"}, "path": "user-operator/src/main/java/io/strimzi/operator/user/operator/ScramShaCredentials.java", "diffHunk": "@@ -76,8 +73,8 @@ public void delete(String username) {\n \n         if (data != null)   {\n             log.debug(\"Deleting {} credentials for user {}\", mechanism.mechanismName(), username);\n-            byte[] deletedJson = deleteUserJson(data);\n-            if (jsonConfigEmpty(deletedJson)) {\n+            JsonObject deletedJson = deleteUserJson(data);\n+            if (configJsonIsEmpty(deletedJson)) {\n                 zkClient.deleteRecursive(\"/config/users/\" + username);\n             } else {\n                 zkClient.writeData(\"/config/users/\" + username, deletedJson);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAwOTg0Mw=="}, "originalCommit": {"oid": "c34c69d6b340c3aaae10eb1b87af5fa8818041da"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUzMzYwOA==", "bodyText": "It seems the serialization is happening https://github.com/sgroschupf/zkclient/blob/master/src/main/java/org/I0Itec/zkclient/ZkClient.java#L1147", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#discussion_r370533608", "createdAt": "2020-01-24T09:14:23Z", "author": {"login": "sknot-rh"}, "path": "user-operator/src/main/java/io/strimzi/operator/user/operator/ScramShaCredentials.java", "diffHunk": "@@ -76,8 +73,8 @@ public void delete(String username) {\n \n         if (data != null)   {\n             log.debug(\"Deleting {} credentials for user {}\", mechanism.mechanismName(), username);\n-            byte[] deletedJson = deleteUserJson(data);\n-            if (jsonConfigEmpty(deletedJson)) {\n+            JsonObject deletedJson = deleteUserJson(data);\n+            if (configJsonIsEmpty(deletedJson)) {\n                 zkClient.deleteRecursive(\"/config/users/\" + username);\n             } else {\n                 zkClient.writeData(\"/config/users/\" + username, deletedJson);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAwOTg0Mw=="}, "originalCommit": {"oid": "c34c69d6b340c3aaae10eb1b87af5fa8818041da"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUzNjgxNw==", "bodyText": "But what does that actually do? It would be better to do it ourselves here, that way:\n\nWe know it's doing the right thing, and always will.\nWe potentially avoid a pointless intermediate String being created.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#discussion_r370536817", "createdAt": "2020-01-24T09:22:19Z", "author": {"login": "tombentley"}, "path": "user-operator/src/main/java/io/strimzi/operator/user/operator/ScramShaCredentials.java", "diffHunk": "@@ -76,8 +73,8 @@ public void delete(String username) {\n \n         if (data != null)   {\n             log.debug(\"Deleting {} credentials for user {}\", mechanism.mechanismName(), username);\n-            byte[] deletedJson = deleteUserJson(data);\n-            if (jsonConfigEmpty(deletedJson)) {\n+            JsonObject deletedJson = deleteUserJson(data);\n+            if (configJsonIsEmpty(deletedJson)) {\n                 zkClient.deleteRecursive(\"/config/users/\" + username);\n             } else {\n                 zkClient.writeData(\"/config/users/\" + username, deletedJson);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAwOTg0Mw=="}, "originalCommit": {"oid": "c34c69d6b340c3aaae10eb1b87af5fa8818041da"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 651, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}