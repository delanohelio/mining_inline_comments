{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3Nzg0NDA2", "number": 3656, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOToxNjoxMFrOEj9w3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOToxNzozMFrOEj9zhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTQ3NTQ4OnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/upgrade/ZookeeperUpgradeST.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOToxNjoxMFrOHSn1Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOToxNjoxMFrOHSn1Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI4ODk3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (initialVersion.compareTo(newVersion) < 0) {\n          \n          \n            \n                            // If it is an upgrade test we keep the message format as the lower version number\n          \n          \n            \n                            logMsgFormat = initialVersion.messageVersion();\n          \n          \n            \n                        } else {\n          \n          \n            \n                            // If it is a downgrade then we make sure to use the lower version number for the message format\n          \n          \n            \n                            logMsgFormat = newVersion.messageVersion();\n          \n          \n            \n                       String logMsgFormat = initialVersion.compareTo(newVersion) < 0 ? \n          \n          \n            \n                       // If it is an upgrade test we keep the message format as the lower version number\n          \n          \n            \n                       initialVersion.messageVersion() : \n          \n          \n            \n                       // If it is a downgrade then we make sure to use the lower version number for the message format\n          \n          \n            \n                       newVersion.messageVersion()", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3656#discussion_r489288970", "createdAt": "2020-09-16T09:16:10Z", "author": {"login": "see-quick"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/upgrade/ZookeeperUpgradeST.java", "diffHunk": "@@ -52,7 +52,16 @@ void testKafkaClusterUpgrade(ExtensionContext testContext) {\n             TestKafkaVersion initialVersion = sortedVersions.get(x);\n             TestKafkaVersion newVersion = sortedVersions.get(x + 1);\n \n-            runVersionChange(initialVersion, newVersion, 3, 3, testContext);\n+            String logMsgFormat;\n+            if (initialVersion.compareTo(newVersion) < 0) {\n+                // If it is an upgrade test we keep the message format as the lower version number\n+                logMsgFormat = initialVersion.messageVersion();\n+            } else {\n+                // If it is a downgrade then we make sure to use the lower version number for the message format\n+                logMsgFormat = newVersion.messageVersion();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43bf88ed9d33bac0a2e6fd72d6057abf323f2620"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTQ4MjI5OnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/upgrade/ZookeeperUpgradeST.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOToxNzozMFrOHSn47w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOToxNzozMFrOHSn47w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI4OTk2Nw==", "bodyText": "same with that", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3656#discussion_r489289967", "createdAt": "2020-09-16T09:17:30Z", "author": {"login": "see-quick"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/upgrade/ZookeeperUpgradeST.java", "diffHunk": "@@ -70,7 +79,16 @@ void testKafkaClusterDowngrade(ExtensionContext testContext) {\n             TestKafkaVersion initialVersion = sortedVersions.get(x);\n             TestKafkaVersion newVersion = sortedVersions.get(x - 1);\n \n-            runVersionChange(initialVersion, newVersion, 3, 3, testContext);\n+            String logMsgFormat;\n+            if (initialVersion.compareTo(newVersion) < 0) {\n+                // If it is an upgrade test we keep the message format as the lower version number\n+                logMsgFormat = initialVersion.messageVersion();\n+            } else {\n+                // If it is a downgrade then we make sure to use the lower version number for the message format\n+                logMsgFormat = newVersion.messageVersion();\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43bf88ed9d33bac0a2e6fd72d6057abf323f2620"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1135, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}