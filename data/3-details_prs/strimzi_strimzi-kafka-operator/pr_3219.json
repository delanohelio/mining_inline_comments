{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MjI4Mzkx", "number": 3219, "title": "[systemtest][cruise-control] Change testManuallyCreateMetricsReporterTopic", "bodyText": "Type of change\n\nTest update\n\nDescription\nAfter discussion with @ppatierno we decide to change our test testManuallyCreateMetricsReporterTopic to be more relevant. So now it is testing ability to recreate CC topics after deletion. The main problem here was that if you not set auto.create.topics.enable to false in Kafka, it will continuously create CC topics but with partitions: 1, replication.factor: 1 -> the default setting for all Kafka topics. So I disabled it in both Kafka and CC, then remove this setting from Kafka and after that, I set the auto.create.topics.enable to true for CC. Interesting thing is that CC will create the strimzi.cruisecontrol.modeltrainingsamples and strimzi.cruisecontrol.partitionmetricsamples with settings: partitions: 32, replication.factor: 2 only if the topics are not created yet -> the Kafka sometimes creates the topic even if you remove the auto.create.topics.enable from the config. If the topics are present, CC server will only change the partitions: 32 and replication.factor will leave on 1. That's why the asserts about replication.factor are commented.\nOther than this feature I removed our method for creating CC with this config from KafkaResource -> I don't think it's really needed here, because it's used only in one test. Maybe we can add it in future if it will be worth.\nI added the method for KafkaTopic deletion with wait to KafkaTopicUtils.\nChecklist\n\n Write tests\n Make sure all tests pass", "createdAt": "2020-06-19T17:49:27Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3219", "merged": true, "mergeCommit": {"oid": "5bc04b7a28f63503d304d20c27214a5b5fc03331"}, "closed": true, "closedAt": "2020-06-22T17:10:41Z", "author": {"login": "im-konge"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcs2mzAAH2gAyNDM3MjI4MzkxOmMzYzQxNzAwYWEwMjMxNTZlMzdkNWNjOGQyNmY5OWNhYjk2NzI5YTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABct0CcAAFqTQzNTEyMDM3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c3c41700aa023156e37d5cc8d26f99cab96729a5", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c3c41700aa023156e37d5cc8d26f99cab96729a5", "committedDate": "2020-06-19T17:36:00Z", "message": "change our test to be more relevant\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "895daaace161baa419576f8768a0c1ae9c7a610b", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/895daaace161baa419576f8768a0c1ae9c7a610b", "committedDate": "2020-06-19T17:36:23Z", "message": "remove unnecessary method from kafka resource\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06cb3a50a1fbf44d0e99d2e5a4585f1503bdf6f9", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/06cb3a50a1fbf44d0e99d2e5a4585f1503bdf6f9", "committedDate": "2020-06-19T17:42:08Z", "message": "add method for deletion of topics with wait\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NjM0MTA3", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3219#pullrequestreview-434634107", "createdAt": "2020-06-22T06:28:47Z", "commit": {"oid": "06cb3a50a1fbf44d0e99d2e5a4585f1503bdf6f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNjoyODo0N1rOGmzYyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNjoyODo0N1rOGmzYyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM0MTAwMw==", "bodyText": "this flag doesn't make sense in CC configuration. It's a broker configuration.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3219#discussion_r443341003", "createdAt": "2020-06-22T06:28:47Z", "author": {"login": "ppatierno"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/cruisecontrol/CruiseControlIsolatedST.java", "diffHunk": "@@ -42,47 +42,65 @@\n     private static final String CRUISE_CONTROL_MODEL_TRAINING_SAMPLES_TOPIC = \"strimzi.cruisecontrol.modeltrainingsamples\"; // partitions 32 , rf - 2\n     private static final String CRUISE_CONTROL_PARTITION_METRICS_SAMPLES_TOPIC = \"strimzi.cruisecontrol.partitionmetricsamples\"; // partitions 32 , rf - 2\n \n-\n     @Test\n-    @Disabled\n-    void testManuallyCreateMetricsReporterTopic() {\n-        KafkaResource.kafkaWithCruiseControlWithoutWaitAutoCreateTopicsDisable(CLUSTER_NAME, 3, 3);\n-\n-        PodUtils.verifyThatRunningPodsAreStable(KafkaResources.zookeeperStatefulSetName(CLUSTER_NAME));\n-        PodUtils.verifyThatRunningPodsAreStable(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME));\n-        PodUtils.verifyThatRunningPodsAreStable(KafkaResources.entityOperatorDeploymentName(CLUSTER_NAME));\n-\n-        LOGGER.info(\"Verifying that metrics reporter topic is not present because of selected config 'auto.create.topics.enable=false'\");\n-\n-        assertThrows(WaitException.class, () -> CruiseControlUtils.verifyThatKafkaCruiseControlMetricReporterTopicIsPresent(Constants.GLOBAL_CRUISE_CONTROL_EXCEPT_FAIL_TIMEOUT));\n-\n-        PodUtils.waitUntilPodIsPresent(CruiseControlResources.deploymentName(CLUSTER_NAME));\n-        PodUtils.waitUntilPodIsInCrashLoopBackOff(kubeClient().listPodsByPrefixInName(CruiseControlResources.deploymentName(CLUSTER_NAME)).get(0).getMetadata().getName());\n-\n-        LOGGER.info(\"Verifying that samples topics are not present because of \" +\n-            \"'Cruise Control cannot find partitions for the metrics reporter that topic matches strimzi.cruisecontrol.metrics in the target cluster'\");\n-\n-        assertThrows(WaitException.class, () -> CruiseControlUtils.verifyThatCruiseControlSamplesTopicsArePresent(Constants.GLOBAL_CRUISE_CONTROL_EXCEPT_FAIL_TIMEOUT));\n-\n-        // Since log compaction may remove records needed by Cruise Control, all topics created by Cruise Control must\n-        // be configured with cleanup.policy=delete to disable log compaction.\n-        // More in docs 8.5.2. Topic creation and configuration\n-        KafkaTopicResource.topic(CLUSTER_NAME, CRUISE_CONTROL_METRICS_TOPIC)\n-            .editSpec()\n-                .addToConfig(\"cleanup.policy\", \"delete\")\n+    void testAutoCreationOfCruiseControlTopics() throws InterruptedException {\n+        KafkaResource.kafkaWithCruiseControl(CLUSTER_NAME, 3, 3)\n+            .editOrNewSpec()\n+                .editKafka()\n+                    .addToConfig(\"auto.create.topics.enable\", \"false\")\n+                .endKafka()\n+                .editCruiseControl()\n+                    .addToConfig(\"auto.create.topics.enable\", \"false\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06cb3a50a1fbf44d0e99d2e5a4585f1503bdf6f9"}, "originalPosition": 80}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39506bdbc996462acfca4df111523e2672944726", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/39506bdbc996462acfca4df111523e2672944726", "committedDate": "2020-06-22T10:47:16Z", "message": "change the test\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0ODEzMzU4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3219#pullrequestreview-434813358", "createdAt": "2020-06-22T10:53:46Z", "commit": {"oid": "39506bdbc996462acfca4df111523e2672944726"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMDo1Mzo0NlrOGm7puQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMDo1Mzo0NlrOGm7puQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ3NjQwOQ==", "bodyText": "do we still need this method?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3219#discussion_r443476409", "createdAt": "2020-06-22T10:53:46Z", "author": {"login": "ppatierno"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaTopicUtils.java", "diffHunk": "@@ -73,6 +73,12 @@ public static void waitForKafkaTopicCreationByNamePrefix(String topicNamePrefix)\n         );\n     }\n \n+    public static void deleteKafkaTopicWithWait(String topicName) {\n+        LOGGER.info(\"Deleting topic {} in namespace {}\", topicName, kubeClient().getNamespace());\n+        KafkaTopicResource.kafkaTopicClient().inNamespace(kubeClient().getNamespace()).withName(topicName).delete();\n+        waitForKafkaTopicDeletion(topicName);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39506bdbc996462acfca4df111523e2672944726"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee045369e4161b6ed9097499af3a307130a22236", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ee045369e4161b6ed9097499af3a307130a22236", "committedDate": "2020-06-22T10:54:42Z", "message": "fixup! change the test\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0ODE1Njk5", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3219#pullrequestreview-434815699", "createdAt": "2020-06-22T10:57:34Z", "commit": {"oid": "ee045369e4161b6ed9097499af3a307130a22236"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e5cecf1748104d2403af18aa4dfc3256c3e8dc5", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/0e5cecf1748104d2403af18aa4dfc3256c3e8dc5", "committedDate": "2020-06-22T10:59:29Z", "message": "comment\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0ODE3NDY0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3219#pullrequestreview-434817464", "createdAt": "2020-06-22T11:00:14Z", "commit": {"oid": "0e5cecf1748104d2403af18aa4dfc3256c3e8dc5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0ODQ0MDE3", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3219#pullrequestreview-434844017", "createdAt": "2020-06-22T11:43:37Z", "commit": {"oid": "0e5cecf1748104d2403af18aa4dfc3256c3e8dc5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MTIwMzc0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3219#pullrequestreview-435120374", "createdAt": "2020-06-22T17:10:24Z", "commit": {"oid": "0e5cecf1748104d2403af18aa4dfc3256c3e8dc5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1581, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}