{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNDU4OTUw", "number": 2386, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwOTo0NDowNFrODYcXXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwOTo0NzozMlrODYcbYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2OTU3MTQ5OnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwOTo0NDowNFrOFeTaXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwOTo0NDowNFrOFeTaXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzMxOTY0Nw==", "bodyText": "Yyou can use something like KafkaUserUtils.waitForSecret() or SecretUtils.waitForSecret() instead of this.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2386#discussion_r367319647", "createdAt": "2020-01-16T09:44:04Z", "author": {"login": "Frawless"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java", "diffHunk": "@@ -194,13 +196,24 @@ void autoRenewSomeCaCertsTriggeredByAnno(\n             boolean zkShouldRoll,\n             boolean kafkaShouldRoll,\n             boolean eoShouldRoll) throws Exception {\n-        createClusterWithExternalRoute();\n         String userName = \"alice\";\n-        KafkaUserResource.tlsUser(CLUSTER_NAME, userName).done();\n+        int received = 0;\n+        String topicName = TOPIC_NAME + \"-\" + rng.nextInt(Integer.MAX_VALUE);\n+\n+        createKafkaCluster();\n+\n+        KafkaUser user = KafkaUserResource.tlsUser(CLUSTER_NAME, userName).done();\n+        KafkaTopicResource.topic(CLUSTER_NAME, topicName).done();\n+        KafkaClientsResource.deployKafkaClients(true, CLUSTER_NAME + \"-\" + Constants.KAFKA_CLIENTS, user).done();\n+\n+        String defaultKafkaClientsPodName =\n+                kubeClient().listPodsByPrefixInName(CLUSTER_NAME + \"-\" + Constants.KAFKA_CLIENTS).get(0).getMetadata().getName();\n+\n         waitFor(\"\", Constants.GLOBAL_POLL_INTERVAL, Constants.TIMEOUT_FOR_GET_SECRETS, () -> kubeClient().getSecret(\"alice\") != null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "235546e6bb5e598ed9f548fecc48c5fdb7125ffd"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2OTU4MDUwOnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwOTo0NzowN1rOFeTfxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwOTo0NzowN1rOFeTfxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzMyMTAzMA==", "bodyText": "Same as above", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2386#discussion_r367321030", "createdAt": "2020-01-16T09:47:07Z", "author": {"login": "Frawless"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java", "diffHunk": "@@ -310,14 +328,27 @@ void autoReplaceSomeKeysTriggeredByAnno(final List<String> secrets,\n                                             boolean zkShouldRoll,\n                                             boolean kafkaShouldRoll,\n                                             boolean eoShouldRoll) throws Exception {\n-        createClusterWithExternalRoute();\n+\n+        int received = 0;\n+\n+        createKafkaCluster();\n+\n         String aliceUserName = \"alice\";\n-        KafkaUserResource.tlsUser(CLUSTER_NAME, aliceUserName).done();\n+        KafkaUser user = KafkaUserResource.tlsUser(CLUSTER_NAME, aliceUserName).done();\n+        String topicName = TOPIC_NAME + \"-\" + rng.nextInt(Integer.MAX_VALUE);\n+\n+        KafkaTopicResource.topic(CLUSTER_NAME, topicName).done();\n+        KafkaClientsResource.deployKafkaClients(true, CLUSTER_NAME + \"-\" + Constants.KAFKA_CLIENTS, user).done();\n+\n+        String defaultKafkaClientsPodName =\n+                kubeClient().listPodsByPrefixInName(CLUSTER_NAME + \"-\" + Constants.KAFKA_CLIENTS).get(0).getMetadata().getName();\n+\n         waitFor(\"Alic's secret to exist\", Constants.GLOBAL_POLL_INTERVAL, Constants.TIMEOUT_FOR_GET_SECRETS,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "235546e6bb5e598ed9f548fecc48c5fdb7125ffd"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2OTU4MTc3OnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwOTo0NzozMlrOFeTghA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwOTo0NzozMlrOFeTghA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzMyMTIyMA==", "bodyText": "Same as above", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2386#discussion_r367321220", "createdAt": "2020-01-16T09:47:32Z", "author": {"login": "Frawless"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java", "diffHunk": "@@ -377,16 +408,22 @@ void autoReplaceSomeKeysTriggeredByAnno(final List<String> secrets,\n                     value, is(not(initialCaKeys.get(secretName))));\n         }\n \n-        waitForClusterAvailabilityTls(aliceUserName, NAMESPACE, CLUSTER_NAME);\n-\n         // Finally check a new client (signed by new client key) can consume\n         String bobUserName = \"bob\";\n-        KafkaUserResource.tlsUser(CLUSTER_NAME, bobUserName).done();\n+        user = KafkaUserResource.tlsUser(CLUSTER_NAME, bobUserName).done();\n+        KafkaClientsResource.deployKafkaClients(true, CLUSTER_NAME + \"-\" + Constants.KAFKA_CLIENTS, user).done();\n+\n+        defaultKafkaClientsPodName =\n+                kubeClient().listPodsByPrefixInName(CLUSTER_NAME + \"-\" + Constants.KAFKA_CLIENTS).get(0).getMetadata().getName();\n+\n         waitFor(\"Bob's secret to exist\", Constants.GLOBAL_POLL_INTERVAL, Constants.TIMEOUT_FOR_GET_SECRETS,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "235546e6bb5e598ed9f548fecc48c5fdb7125ffd"}, "originalPosition": 145}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 561, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}