{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwMzQ5NDk2", "number": 2605, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNTo0OTo1NVrODjgalw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwODozNzozM1rODkjl9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTU3ODQ3OnYy", "diffSide": "RIGHT", "path": "topic-operator/scripts/topic_operator_run.sh", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNTo0OTo1NVrOFvWenQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNTo0OTo1NVrOFvWenQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE5NTY3Nw==", "bodyText": "I do not think we should pull the Kafka env var names here. We should use our own.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605#discussion_r385195677", "createdAt": "2020-02-27T15:49:55Z", "author": {"login": "scholzj"}, "path": "topic-operator/scripts/topic_operator_run.sh", "diffHunk": "@@ -22,6 +26,14 @@ if [ \"$STRIMZI_TLS_ENABLED\" = \"true\" ]; then\n     fi\n fi\n \n+if [ -n \"$KAFKA_HEAP_OPTS\" ]; then\n+    export JAVA_OPTS=\"${JAVA_OPTS} ${KAFKA_HEAP_OPTS}\"\n+fi\n+\n+if [ -n \"$KAFKA_JVM_PERFORMANCE_OPTS\" ]; then\n+    export JAVA_OPTS=\"${JAVA_OPTS} ${KAFKA_JVM_PERFORMANCE_OPTS}\"\n+fi\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "395e05482dec10f16e6533de16cb9935d74dabe7"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTU3OTM3OnYy", "diffSide": "RIGHT", "path": "user-operator/scripts/user_operator_run.sh", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNTo1MDowOFrOFvWfKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNTo1MDowOFrOFvWfKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE5NTgxOQ==", "bodyText": "Same as above", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605#discussion_r385195819", "createdAt": "2020-02-27T15:50:08Z", "author": {"login": "scholzj"}, "path": "user-operator/scripts/user_operator_run.sh", "diffHunk": "@@ -3,6 +3,19 @@ if [ -f /opt/user-operator/custom-config/log4j2.properties ];\n then\n     export JAVA_OPTS=\"${JAVA_OPTS} -Dlog4j2.configurationFile=file:/opt/user-operator/custom-config/log4j2.properties\"\n fi\n+\n+if [ -n \"$STRIMZI_JAVA_SYSTEM_PROPERTIES\" ]; then\n+    export JAVA_OPTS=\"${JAVA_OPTS} ${STRIMZI_JAVA_SYSTEM_PROPERTIES}\"\n+fi\n+\n+if [ -n \"$KAFKA_HEAP_OPTS\" ]; then\n+    export JAVA_OPTS=\"${JAVA_OPTS} ${KAFKA_HEAP_OPTS}\"\n+fi\n+\n+if [ -n \"$KAFKA_JVM_PERFORMANCE_OPTS\" ]; then\n+    export JAVA_OPTS=\"${JAVA_OPTS} ${KAFKA_JVM_PERFORMANCE_OPTS}\"\n+fi\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "395e05482dec10f16e6533de16cb9935d74dabe7"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTU4NTIyOnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/EntityTopicOperator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNTo1MTozNVrOFvWi9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNTo1MTozNVrOFvWi9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE5Njc5MQ==", "bodyText": "So if i remember correctly, this tries to calculate the defult -Xmx etc.? I do not hink we want that, I think we want to just pass the options over to the containers / JVM.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605#discussion_r385196791", "createdAt": "2020-02-27T15:51:35Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/EntityTopicOperator.java", "diffHunk": "@@ -259,6 +263,11 @@ public static EntityTopicOperator fromCrd(Kafka kafkaAssembly) {\n         varList.add(buildEnvVar(ENV_VAR_TOPIC_METADATA_MAX_ATTEMPTS, String.valueOf(topicMetadataMaxAttempts)));\n         varList.add(buildEnvVar(ENV_VAR_TLS_ENABLED, Boolean.toString(true)));\n         varList.add(buildEnvVar(ENV_VAR_STRIMZI_GC_LOG_ENABLED, String.valueOf(gcLoggingEnabled)));\n+        if (javaSystemProperties != null) {\n+            varList.add(buildEnvVar(ENV_VAR_STRIMZI_JAVA_SYSTEM_PROPERTIES, ModelUtils.getJavaSystemPropertiesToString(javaSystemProperties)));\n+        }\n+        heapOptions(varList, 0.5, 5L * 1024L * 1024L * 1024L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "395e05482dec10f16e6533de16cb9935d74dabe7"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTU4NTcwOnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/EntityUserOperator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNTo1MTo0MVrOFvWjQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNTo1MTo0MVrOFvWjQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE5Njg2NA==", "bodyText": "same as above", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605#discussion_r385196864", "createdAt": "2020-02-27T15:51:41Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/EntityUserOperator.java", "diffHunk": "@@ -257,6 +261,11 @@ public static EntityUserOperator fromCrd(Kafka kafkaAssembly) {\n         varList.add(buildEnvVar(ENV_VAR_CLIENTS_CA_VALIDITY, Integer.toString(clientsCaValidityDays)));\n         varList.add(buildEnvVar(ENV_VAR_CLIENTS_CA_RENEWAL, Integer.toString(clientsCaRenewalDays)));\n         varList.add(buildEnvVar(ENV_VAR_STRIMZI_GC_LOG_ENABLED, String.valueOf(gcLoggingEnabled)));\n+        if (javaSystemProperties != null) {\n+            varList.add(buildEnvVar(ENV_VAR_STRIMZI_JAVA_SYSTEM_PROPERTIES, ModelUtils.getJavaSystemPropertiesToString(javaSystemProperties)));\n+        }\n+        heapOptions(varList, 0.5, 5L * 1024L * 1024L * 1024L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "395e05482dec10f16e6533de16cb9935d74dabe7"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MzM4NTMzOnYy", "diffSide": "RIGHT", "path": "examples/kafka/kafka-ephemeral.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjozNzoyNVrOFweAEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo0NDo1N1rOFweM2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM2NzUwNg==", "bodyText": "This doesn't look right. I guess you maybe didn't wanted to commit this?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605#discussion_r386367506", "createdAt": "2020-03-02T12:37:25Z", "author": {"login": "scholzj"}, "path": "examples/kafka/kafka-ephemeral.yaml", "diffHunk": "@@ -5,13 +5,13 @@ metadata:\n spec:\n   kafka:\n     version: 2.4.0\n-    replicas: 3\n+    replicas: 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e48c2ead91b5a98e7e3972ab3435880f0c0bb459"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM3MDc3Nw==", "bodyText": "Damn, I was sure I reverted changes in this file. Thanks", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605#discussion_r386370777", "createdAt": "2020-03-02T12:44:57Z", "author": {"login": "sknot-rh"}, "path": "examples/kafka/kafka-ephemeral.yaml", "diffHunk": "@@ -5,13 +5,13 @@ metadata:\n spec:\n   kafka:\n     version: 2.4.0\n-    replicas: 3\n+    replicas: 1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM2NzUwNg=="}, "originalCommit": {"oid": "e48c2ead91b5a98e7e3972ab3435880f0c0bb459"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MzM5MTE4OnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/AbstractModel.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjozOToyMFrOFweDhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjozOToyMFrOFweDhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM2ODM5MQ==", "bodyText": "If it is just for EO, should it be maybe in some EO class and not in the Abstratc Model which is shared for everything?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605#discussion_r386368391", "createdAt": "2020-03-02T12:39:20Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/AbstractModel.java", "diffHunk": "@@ -1190,4 +1194,47 @@ protected void addContainerEnvsToExistingEnvs(List<EnvVar> existingEnvs, List<Co\n             }\n         }\n     }\n+\n+    protected void javaOptionsForEO(List<EnvVar> envVars) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e48c2ead91b5a98e7e3972ab3435880f0c0bb459"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MzM5NjA1OnYy", "diffSide": "RIGHT", "path": "api/src/test/resources/io/strimzi/api/kafka/model/Kafka-with-extra-property.yaml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo0MDo1NlrOFweGRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo1MzoxM1rOFwebtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM2OTA5NA==", "bodyText": "So if this was wrong the whole time, why do the tests not crash? Should there been some failing tests or something?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605#discussion_r386369094", "createdAt": "2020-03-02T12:40:56Z", "author": {"login": "scholzj"}, "path": "api/src/test/resources/io/strimzi/api/kafka/model/Kafka-with-extra-property.yaml", "diffHunk": "@@ -23,7 +23,7 @@ spec:\n       -Xmx: \"4G\"\n       -Xms: \"2G\"\n       -XX:\n-        -foo: bar\n+        foo: bar", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e48c2ead91b5a98e7e3972ab3435880f0c0bb459"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM3MDQ4Nw==", "bodyText": "The test was not wrong... just the property was called -foo not foo (as it was intended I believe)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605#discussion_r386370487", "createdAt": "2020-03-02T12:44:16Z", "author": {"login": "sknot-rh"}, "path": "api/src/test/resources/io/strimzi/api/kafka/model/Kafka-with-extra-property.yaml", "diffHunk": "@@ -23,7 +23,7 @@ spec:\n       -Xmx: \"4G\"\n       -Xms: \"2G\"\n       -XX:\n-        -foo: bar\n+        foo: bar", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM2OTA5NA=="}, "originalCommit": {"oid": "e48c2ead91b5a98e7e3972ab3435880f0c0bb459"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM3NDU4MA==", "bodyText": "Ahh, ok. Uderstand now. Thanks", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605#discussion_r386374580", "createdAt": "2020-03-02T12:53:13Z", "author": {"login": "scholzj"}, "path": "api/src/test/resources/io/strimzi/api/kafka/model/Kafka-with-extra-property.yaml", "diffHunk": "@@ -23,7 +23,7 @@ spec:\n       -Xmx: \"4G\"\n       -Xms: \"2G\"\n       -XX:\n-        -foo: bar\n+        foo: bar", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM2OTA5NA=="}, "originalCommit": {"oid": "e48c2ead91b5a98e7e3972ab3435880f0c0bb459"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjU2NjE0OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwODozMTowNVrOFw8N3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwODozMTowNVrOFw8N3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg2MjU1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Add possibility to set Java System Properties for UO and TO via CR yaml\n          \n          \n            \n            * Add possibility to set Java System Properties for User Operator and Topic Operator via `Kafka` CR.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605#discussion_r386862556", "createdAt": "2020-03-03T08:31:05Z", "author": {"login": "tombentley"}, "path": "CHANGELOG.md", "diffHunk": "@@ -3,6 +3,7 @@\n \n ## 0.18.0\n \n+* Add possibility to set Java System Properties for UO and TO via CR yaml", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4176148395d9ab121d3ee5920c5f4fbe66145031"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjU4NDg2OnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/EntityOperator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwODozNzozM1rOFw8Zfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwOTowNDo0NFrOFw9Q1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg2NTUzNQ==", "bodyText": "The true/false mapping to +/- seems unintuitive to me. Why not have JvmOptions.Xx be a list of XX options. You'd prefix each element  with -XX: and just pass it through.\nI guess I'd also put the code in ModelUtils, alongside ModelUtils.getJavaSystemPropertiesToString. In fact having a jvmOptionsToString method in ModelUtils which computes trim would be better, I think. Then get rid of this method and let the current caller of this method invoke jvmOptionsToString and decide how it gets passed to the container (in particular which env var gets set).", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605#discussion_r386865535", "createdAt": "2020-03-03T08:37:33Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/EntityOperator.java", "diffHunk": "@@ -336,4 +338,47 @@ public ServiceAccount generateServiceAccount() {\n         }\n         return super.generateServiceAccount();\n     }\n+\n+    protected static void javaOptions(List<EnvVar> envVars, JvmOptions jvmOptions, List<SystemProperty> javaSystemProperties) {\n+        StringBuilder strimziJavaOpts = new StringBuilder();\n+        String xms = jvmOptions != null ? jvmOptions.getXms() : null;\n+        if (xms != null) {\n+            strimziJavaOpts.append(\"-Xms\").append(xms);\n+        }\n+\n+        String xmx = jvmOptions != null ? jvmOptions.getXmx() : null;\n+        if (xmx != null) {\n+            strimziJavaOpts.append(\" -Xmx\").append(xmx);\n+        }\n+\n+        Boolean server = jvmOptions != null ? jvmOptions.isServer() : null;\n+\n+        if (server != null && server) {\n+            strimziJavaOpts.append(' ').append(\" -server\");\n+        }\n+\n+        Map<String, String> xx = jvmOptions != null ? jvmOptions.getXx() : null;\n+        if (xx != null) {\n+            xx.forEach((k, v) -> {\n+                strimziJavaOpts.append(' ').append(\"-XX:\");\n+\n+                if (\"true\".equalsIgnoreCase(v))   {\n+                    strimziJavaOpts.append(\"+\").append(k);\n+                } else if (\"false\".equalsIgnoreCase(v)) {\n+                    strimziJavaOpts.append(\"-\").append(k);\n+                } else  {\n+                    strimziJavaOpts.append(k).append(\"=\").append(v);\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4176148395d9ab121d3ee5920c5f4fbe66145031"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3MTQ3Nw==", "bodyText": "The true/false mapping to +/- seems unintuitive to me. Why not have JvmOptions.Xx be a list of XX options. You'd prefix each element with -XX: and just pass it through.\n\nThis already exists for all the Kafka based pods. So we cannot easily change it there. And the whole idea of the PR was to have the same configuration in all places not have different stuff in different pods. So I'm not sure this is worth it.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605#discussion_r386871477", "createdAt": "2020-03-03T08:49:13Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/EntityOperator.java", "diffHunk": "@@ -336,4 +338,47 @@ public ServiceAccount generateServiceAccount() {\n         }\n         return super.generateServiceAccount();\n     }\n+\n+    protected static void javaOptions(List<EnvVar> envVars, JvmOptions jvmOptions, List<SystemProperty> javaSystemProperties) {\n+        StringBuilder strimziJavaOpts = new StringBuilder();\n+        String xms = jvmOptions != null ? jvmOptions.getXms() : null;\n+        if (xms != null) {\n+            strimziJavaOpts.append(\"-Xms\").append(xms);\n+        }\n+\n+        String xmx = jvmOptions != null ? jvmOptions.getXmx() : null;\n+        if (xmx != null) {\n+            strimziJavaOpts.append(\" -Xmx\").append(xmx);\n+        }\n+\n+        Boolean server = jvmOptions != null ? jvmOptions.isServer() : null;\n+\n+        if (server != null && server) {\n+            strimziJavaOpts.append(' ').append(\" -server\");\n+        }\n+\n+        Map<String, String> xx = jvmOptions != null ? jvmOptions.getXx() : null;\n+        if (xx != null) {\n+            xx.forEach((k, v) -> {\n+                strimziJavaOpts.append(' ').append(\"-XX:\");\n+\n+                if (\"true\".equalsIgnoreCase(v))   {\n+                    strimziJavaOpts.append(\"+\").append(k);\n+                } else if (\"false\".equalsIgnoreCase(v)) {\n+                    strimziJavaOpts.append(\"-\").append(k);\n+                } else  {\n+                    strimziJavaOpts.append(k).append(\"=\").append(v);\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg2NTUzNQ=="}, "originalCommit": {"oid": "4176148395d9ab121d3ee5920c5f4fbe66145031"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3OTcwMQ==", "bodyText": "Well if that's the API we've already adopted, I guess we're stuck with it \u2639\ufe0f.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605#discussion_r386879701", "createdAt": "2020-03-03T09:04:44Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/EntityOperator.java", "diffHunk": "@@ -336,4 +338,47 @@ public ServiceAccount generateServiceAccount() {\n         }\n         return super.generateServiceAccount();\n     }\n+\n+    protected static void javaOptions(List<EnvVar> envVars, JvmOptions jvmOptions, List<SystemProperty> javaSystemProperties) {\n+        StringBuilder strimziJavaOpts = new StringBuilder();\n+        String xms = jvmOptions != null ? jvmOptions.getXms() : null;\n+        if (xms != null) {\n+            strimziJavaOpts.append(\"-Xms\").append(xms);\n+        }\n+\n+        String xmx = jvmOptions != null ? jvmOptions.getXmx() : null;\n+        if (xmx != null) {\n+            strimziJavaOpts.append(\" -Xmx\").append(xmx);\n+        }\n+\n+        Boolean server = jvmOptions != null ? jvmOptions.isServer() : null;\n+\n+        if (server != null && server) {\n+            strimziJavaOpts.append(' ').append(\" -server\");\n+        }\n+\n+        Map<String, String> xx = jvmOptions != null ? jvmOptions.getXx() : null;\n+        if (xx != null) {\n+            xx.forEach((k, v) -> {\n+                strimziJavaOpts.append(' ').append(\"-XX:\");\n+\n+                if (\"true\".equalsIgnoreCase(v))   {\n+                    strimziJavaOpts.append(\"+\").append(k);\n+                } else if (\"false\".equalsIgnoreCase(v)) {\n+                    strimziJavaOpts.append(\"-\").append(k);\n+                } else  {\n+                    strimziJavaOpts.append(k).append(\"=\").append(v);\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg2NTUzNQ=="}, "originalCommit": {"oid": "4176148395d9ab121d3ee5920c5f4fbe66145031"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 496, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}