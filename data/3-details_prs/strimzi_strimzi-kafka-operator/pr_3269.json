{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNzAxNzEx", "number": 3269, "title": "[DOC] Update of grafana sections", "bodyText": "Signed-off-by: prmellor pmellor@redhat.com\nDocumentation\nUpdates to the Grafana documentation in the Deploying guide\n\nRemoved 1 file: include::modules/con_metrics-grafana-options.adoc[leveloffset=+1] to consolidate content\nRemoved 4 screen captures that provided little benefit\nMade Grafana and Exporter sections consistent\nListed dashboard artifacts -- this could be used instead of screen captures\nNote on Route option for Openshift\n\nThere were two dashboard screen captures in the guide. Because of their size, it was hard to see what was represented. I've kept the Kafka dashboard to show what they look like, but listed what is shown in the other dashboards. If the lists are too much, we could reduce them.\nMaybe we want more info on how to interpret the charts\nChecklist\nPlease go through this checklist and make sure all applicable tasks have been done\n\n Write tests\n Make sure all tests pass\n Update documentation\n Check RBAC rights for Kubernetes / OpenShift roles\n Try your changes from Pod inside your Kubernetes and OpenShift cluster, not just locally\n Reference relevant issue(s) and close them after merging\n Update CHANGELOG.md", "createdAt": "2020-07-01T13:31:15Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3269", "merged": true, "mergeCommit": {"oid": "95e384a8f8f3292117fd11a50fed805c4585beb0"}, "closed": true, "closedAt": "2020-07-02T20:26:06Z", "author": {"login": "PaulRMellor"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwqKC_AH2gAyNDQyNzAxNzExOmFhYTJkYzcwNWFiYTA0NmYzYjJiNmQyNThlZjRmODU0YmU2ZTJjNGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcw_84hAH2gAyNDQyNzAxNzExOjc2NWVjN2ZhMWJiYWY0Zjk2ZDRlMzQ0ZTg4NjZmZWIwNDMwZTZiZGU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "aaa2dc705aba046f3b2b6d258ef4f854be6e2c4f", "author": {"user": {"login": "PaulRMellor", "name": null}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/aaa2dc705aba046f3b2b6d258ef4f854be6e2c4f", "committedDate": "2020-07-01T13:21:26Z", "message": "update of grafana sections\n\nSigned-off-by: prmellor <pmellor@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c35b6e2582490d3750c3a1e861f45c48dd1fec10", "author": {"user": {"login": "PaulRMellor", "name": null}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c35b6e2582490d3750c3a1e861f45c48dd1fec10", "committedDate": "2020-07-01T14:51:32Z", "message": "Make securitycontext option clearer for prometheus\n\nSigned-off-by: prmellor <pmellor@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwOTc1NDU2", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3269#pullrequestreview-440975456", "createdAt": "2020-07-01T15:26:42Z", "commit": {"oid": "c35b6e2582490d3750c3a1e861f45c48dd1fec10"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNToyNjo0MlrOGrqwwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNTozNzo1NlrOGrrNsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ0MjU2Mg==", "bodyText": "Use bold to refer to a UI element.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3269#discussion_r448442562", "createdAt": "2020-07-01T15:26:42Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/metrics/kafka-exporter/proc_kafka-exporter-enabling-grafana.adoc", "diffHunk": "@@ -23,20 +24,29 @@ If you are accessing the user interface for the first time, see xref:assembly-me\n \n .Procedure\n \n-. Access the Grafana user interface.\n+. xref:proc-metrics-grafana-dashboard-{context}[Access the Grafana user interface].\n \n-. Click *Dashboards*, then *Import* to open the _Import Dashboard_ window and import the example Kafka Exporter dashboard (or paste the JSON).\n+. Select the _Strimzi Kafka Exporter_ dashboard.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c35b6e2582490d3750c3a1e861f45c48dd1fec10"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ0MzA1Mw==", "bodyText": "Is the repeated colon meant to be here?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3269#discussion_r448443053", "createdAt": "2020-07-01T15:27:23Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/metrics/kafka-exporter/proc_kafka-exporter-enabling-grafana.adoc", "diffHunk": "@@ -23,20 +24,29 @@ If you are accessing the user interface for the first time, see xref:assembly-me\n \n .Procedure\n \n-. Access the Grafana user interface.\n+. xref:proc-metrics-grafana-dashboard-{context}[Access the Grafana user interface].\n \n-. Click *Dashboards*, then *Import* to open the _Import Dashboard_ window and import the example Kafka Exporter dashboard (or paste the JSON).\n+. Select the _Strimzi Kafka Exporter_ dashboard.\n +\n When metrics data has been collected for some time, the Kafka Exporter charts are populated.\n \n-.Kafka Exporter Grafana charts\n-\n-From the metrics, you can create charts to display:\n-\n-* Message in per second (from topics)\n-* Message in per minute (from topics)\n+Strimzi Kafka Exporter:: Shows metrics for:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c35b6e2582490d3750c3a1e861f45c48dd1fec10"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ0NzUwNw==", "bodyText": "may > might", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3269#discussion_r448447507", "createdAt": "2020-07-01T15:34:06Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/metrics/proc_metrics-grafana-dashboard.adoc", "diffHunk": "@@ -6,53 +6,159 @@\n \n = Enabling the example Grafana dashboards\n \n-Set up a Prometheus data source and example dashboards to enable Grafana for monitoring.\n+Strimzi provides xref:ref-metrics-config-files-{context}[example dashboard configuration files for Grafana].\n+Example dashboards are provided in the `examples/metrics` directory as JSON files:\n \n-NOTE: No alert notification rules are defined.\n+* `strimzi-kafka.json`\n+* `strimzi-zookeeper.json`\n+* `strimzi-kafka-connect.json`\n+* `strimzi-kafka-mirror-maker-2.json`\n+* `strimzi-operators.json`\n \n-When accessing a dashboard, you can use the `port-forward` command to forward traffic from the Grafana pod to the host.\n+The example dashboards are a good starting point for monitoring key metrics, but they do not represent all available metrics.\n+You may need to modify the example dashboards or add other metrics, depending on your infrastructure.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c35b6e2582490d3750c3a1e861f45c48dd1fec10"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ0OTk3MQ==", "bodyText": "Are the menu and btn tags definitely rendered in the Strimzi docs?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3269#discussion_r448449971", "createdAt": "2020-07-01T15:37:56Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/metrics/proc_metrics-grafana-dashboard.adoc", "diffHunk": "@@ -6,53 +6,159 @@\n \n = Enabling the example Grafana dashboards\n \n-Set up a Prometheus data source and example dashboards to enable Grafana for monitoring.\n+Strimzi provides xref:ref-metrics-config-files-{context}[example dashboard configuration files for Grafana].\n+Example dashboards are provided in the `examples/metrics` directory as JSON files:\n \n-NOTE: No alert notification rules are defined.\n+* `strimzi-kafka.json`\n+* `strimzi-zookeeper.json`\n+* `strimzi-kafka-connect.json`\n+* `strimzi-kafka-mirror-maker-2.json`\n+* `strimzi-operators.json`\n \n-When accessing a dashboard, you can use the `port-forward` command to forward traffic from the Grafana pod to the host.\n+The example dashboards are a good starting point for monitoring key metrics, but they do not represent all available metrics.\n+You may need to modify the example dashboards or add other metrics, depending on your infrastructure.\n \n-For example, you can access the Grafana user interface by:\n+After setting up Prometheus and Grafana, you can visualize the Strimzi data on the Grafana dashboards.\n \n-. Running `kubectl port-forward svc/grafana 3000:3000`\n-. Pointing a browser to `http://localhost:3000`\n+NOTE: No alert notification rules are defined.\n+\n+When accessing a dashboard, you can use the `port-forward` command to forward traffic from the Grafana pod to the host.\n \n NOTE: The name of the Grafana pod is different for each user.\n \n .Procedure\n \n-. Access the Grafana user interface using `admin/admin` credentials.\n+. Get the details of the Grafana service:\n++\n+[source,shell]\n+----\n+kubectl get service grafana\n+----\n+\n++\n+For example:\n++\n+[table,stripes=none]\n+|===\n+|NAME     |TYPE      |CLUSTER-IP    |PORT(S)\n+\n+|grafana  |ClusterIP |172.30.123.40 |80/TCP\n+|===\n++\n+Note the port number for port forwarding.\n+\n+. Use `port-forward` to redirect the Grafana user interface to `localhost:3000`:\n++\n+[source,shell]\n+----\n+kubectl port-forward svc/grafana 3000:80\n+----\n +\n-On the initial view choose to reset the password.\n+NOTE: If using the OpenShift web console, you can switch to menu:Networking[Routes], and click the URL for the `grafana` Route.\n+\n+. Point a web browser to `http://localhost:3000`.\n +\n-image::grafana_login.png[Grafana login]\n+The Grafana Log In page appears.\n \n-. Click the *Add data source* button.\n+. Enter your user name and password, and then click btn:[Log In].\n +\n-image::grafana_home.png[Grafana home]\n+The default Grafana user name and password are both `admin`. After logging in for the first time, you can change the password.\n \n-. Add Prometheus as a data source.\n+. Add Prometheus as a _data source_.\n +\n * Specify a name\n * Add _Prometheus_ as the type\n-* Specify the connection string to the Prometheus server (http://prometheus-operated:9090) in the URL field\n-\n-. Click *Add* to test the connection to the data source.\n+* Specify a Prometheus server URL (http://prometheus-operated:9090)\n++\n+Save and test the connection when you have added the details.\n +\n image::grafana_prometheus_data_source.png[Add Prometheus data source]\n \n-. Click *Dashboards*, then *Import* to open the _Import Dashboard_ window and import the example dashboards (or paste the JSON).\n+. From menu:Dashboards[Import], upload the example dashboards or paste the JSON directly.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c35b6e2582490d3750c3a1e861f45c48dd1fec10"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMTE3MzAz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3269#pullrequestreview-441117303", "createdAt": "2020-07-01T18:49:32Z", "commit": {"oid": "c35b6e2582490d3750c3a1e861f45c48dd1fec10"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxODo0OTozMlrOGrxjhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxODo1MDo1N1rOGrxmHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU1Mzg2Mg==", "bodyText": "Maybe we should make it more clear that this is just one of the options and users should feel free to use their own Grafana installations?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3269#discussion_r448553862", "createdAt": "2020-07-01T18:49:32Z", "author": {"login": "scholzj"}, "path": "documentation/modules/metrics/proc_metrics-deploying-grafana.adoc", "diffHunk": "@@ -6,7 +6,7 @@\n \n = Deploying Grafana\n \n-To deploy Grafana to provide visualizations of Prometheus metrics, apply the xref:ref-metrics-config-files-{context}[example configuration file].\n+To deploy Grafana to provide visualizations of Prometheus metrics, apply the `grafana.yaml` file provided in the `examples/metrics` directory.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c35b6e2582490d3750c3a1e861f45c48dd1fec10"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU1NDUyNw==", "bodyText": "I would probably remove this. There are several other options how to do this on different platforms. Not sure it is worth to pick only one of them. Exposing it using routes is also questionable from security perspective.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3269#discussion_r448554527", "createdAt": "2020-07-01T18:50:57Z", "author": {"login": "scholzj"}, "path": "documentation/modules/metrics/proc_metrics-grafana-dashboard.adoc", "diffHunk": "@@ -6,53 +6,159 @@\n \n = Enabling the example Grafana dashboards\n \n-Set up a Prometheus data source and example dashboards to enable Grafana for monitoring.\n+Strimzi provides xref:ref-metrics-config-files-{context}[example dashboard configuration files for Grafana].\n+Example dashboards are provided in the `examples/metrics` directory as JSON files:\n \n-NOTE: No alert notification rules are defined.\n+* `strimzi-kafka.json`\n+* `strimzi-zookeeper.json`\n+* `strimzi-kafka-connect.json`\n+* `strimzi-kafka-mirror-maker-2.json`\n+* `strimzi-operators.json`\n \n-When accessing a dashboard, you can use the `port-forward` command to forward traffic from the Grafana pod to the host.\n+The example dashboards are a good starting point for monitoring key metrics, but they do not represent all available metrics.\n+You may need to modify the example dashboards or add other metrics, depending on your infrastructure.\n \n-For example, you can access the Grafana user interface by:\n+After setting up Prometheus and Grafana, you can visualize the Strimzi data on the Grafana dashboards.\n \n-. Running `kubectl port-forward svc/grafana 3000:3000`\n-. Pointing a browser to `http://localhost:3000`\n+NOTE: No alert notification rules are defined.\n+\n+When accessing a dashboard, you can use the `port-forward` command to forward traffic from the Grafana pod to the host.\n \n NOTE: The name of the Grafana pod is different for each user.\n \n .Procedure\n \n-. Access the Grafana user interface using `admin/admin` credentials.\n+. Get the details of the Grafana service:\n++\n+[source,shell]\n+----\n+kubectl get service grafana\n+----\n+\n++\n+For example:\n++\n+[table,stripes=none]\n+|===\n+|NAME     |TYPE      |CLUSTER-IP    |PORT(S)\n+\n+|grafana  |ClusterIP |172.30.123.40 |80/TCP\n+|===\n++\n+Note the port number for port forwarding.\n+\n+. Use `port-forward` to redirect the Grafana user interface to `localhost:3000`:\n++\n+[source,shell]\n+----\n+kubectl port-forward svc/grafana 3000:80\n+----\n +\n-On the initial view choose to reset the password.\n+NOTE: If using the OpenShift web console, you can switch to menu:Networking[Routes], and click the URL for the `grafana` Route.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c35b6e2582490d3750c3a1e861f45c48dd1fec10"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNTIzMjIy", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3269#pullrequestreview-441523222", "createdAt": "2020-07-02T09:49:00Z", "commit": {"oid": "c35b6e2582490d3750c3a1e861f45c48dd1fec10"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOTo0OTowMFrOGsFtMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOTo0OTowMFrOGsFtMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg4NDAxOA==", "bodyText": "Which should be the same for the Prometheus installation as well.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3269#discussion_r448884018", "createdAt": "2020-07-02T09:49:00Z", "author": {"login": "ppatierno"}, "path": "documentation/modules/metrics/proc_metrics-deploying-grafana.adoc", "diffHunk": "@@ -6,7 +6,7 @@\n \n = Deploying Grafana\n \n-To deploy Grafana to provide visualizations of Prometheus metrics, apply the xref:ref-metrics-config-files-{context}[example configuration file].\n+To deploy Grafana to provide visualizations of Prometheus metrics, apply the `grafana.yaml` file provided in the `examples/metrics` directory.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU1Mzg2Mg=="}, "originalCommit": {"oid": "c35b6e2582490d3750c3a1e861f45c48dd1fec10"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1c775bb32e5af43292e67d4b820c51eab041615", "author": {"user": {"login": "PaulRMellor", "name": null}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c1c775bb32e5af43292e67d4b820c51eab041615", "committedDate": "2020-07-02T10:35:56Z", "message": "review edit PM\n\nSigned-off-by: prmellor <pmellor@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9e1fbb4a159fd4bff13526d1a6afec4ed8a031b", "author": {"user": {"login": "PaulRMellor", "name": null}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f9e1fbb4a159fd4bff13526d1a6afec4ed8a031b", "committedDate": "2020-07-02T12:07:50Z", "message": "review edit DL\n\nSigned-off-by: prmellor <pmellor@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjYwMTkx", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3269#pullrequestreview-441660191", "createdAt": "2020-07-02T13:07:56Z", "commit": {"oid": "f9e1fbb4a159fd4bff13526d1a6afec4ed8a031b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "765ec7fa1bbaf4f96d4e344e8866feb0430e6bde", "author": {"user": {"login": "PaulRMellor", "name": null}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/765ec7fa1bbaf4f96d4e344e8866feb0430e6bde", "committedDate": "2020-07-02T14:44:58Z", "message": "Review edits PP, JS, DL\n\nSigned-off-by: prmellor <pmellor@redhat.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1272, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}