{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NTkyNzAy", "number": 3031, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDozMDowN1rOD-vXCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwODoyNjowOVrOEBpSdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTE0MjQ4OnYy", "diffSide": "RIGHT", "path": "topic-operator/src/main/java/io/strimzi/operator/topic/TopicOperator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDozMDowN1rOGZByNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDowNjowN1rOGbL1wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5NjgyMw==", "bodyText": "Isn't this a setKafkaTopics?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3031#discussion_r428896823", "createdAt": "2020-05-21T20:30:07Z", "author": {"login": "samuel-hawker"}, "path": "topic-operator/src/main/java/io/strimzi/operator/topic/TopicOperator.java", "diffHunk": "@@ -1202,6 +1203,7 @@ public ReconcileState(Set<TopicName> succeeded, Set<TopicName> undetermined, Map\n             this.succeeded = succeeded;\n             this.undetermined = undetermined;\n             this.failed = failed;\n+            this.ktList = emptyList();\n         }\n \n         public void addKafkaTopics(List<KafkaTopic> ktList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41d32c768eef69703e428b2c58bf4aed4fb18907"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE4MTcxOA==", "bodyText": "What do you mean? It is just patching Spotbugs violation of dereferencing field which was not initialized in the constructor.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3031#discussion_r429181718", "createdAt": "2020-05-22T11:00:19Z", "author": {"login": "sknot-rh"}, "path": "topic-operator/src/main/java/io/strimzi/operator/topic/TopicOperator.java", "diffHunk": "@@ -1202,6 +1203,7 @@ public ReconcileState(Set<TopicName> succeeded, Set<TopicName> undetermined, Map\n             this.succeeded = succeeded;\n             this.undetermined = undetermined;\n             this.failed = failed;\n+            this.ktList = emptyList();\n         }\n \n         public void addKafkaTopics(List<KafkaTopic> ktList) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5NjgyMw=="}, "originalCommit": {"oid": "41d32c768eef69703e428b2c58bf4aed4fb18907"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE1ODcyMg==", "bodyText": "He's asking why the method is called addKafkaTopics and not setKafkaTopics().", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3031#discussion_r431158722", "createdAt": "2020-05-27T14:06:07Z", "author": {"login": "tombentley"}, "path": "topic-operator/src/main/java/io/strimzi/operator/topic/TopicOperator.java", "diffHunk": "@@ -1202,6 +1203,7 @@ public ReconcileState(Set<TopicName> succeeded, Set<TopicName> undetermined, Map\n             this.succeeded = succeeded;\n             this.undetermined = undetermined;\n             this.failed = failed;\n+            this.ktList = emptyList();\n         }\n \n         public void addKafkaTopics(List<KafkaTopic> ktList) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5NjgyMw=="}, "originalCommit": {"oid": "41d32c768eef69703e428b2c58bf4aed4fb18907"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjM2MTg3OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile-pr", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzozMzo1OFrOGZNgxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo0OToyOVrOGZ5wng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA4ODk2NA==", "bodyText": "shouldn't we keep this on version 1.8 until the migration to java11 ?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3031#discussion_r429088964", "createdAt": "2020-05-22T07:33:58Z", "author": {"login": "Frawless"}, "path": "Jenkinsfile-pr", "diffHunk": "@@ -37,6 +37,7 @@ pipeline {\n         TEST_CLUSTER_ADMIN = \"admin\"\n         OPERATOR_IMAGE_PULL_POLICY = \"IfNotPresent\"\n         COMPONENTS_IMAGE_PULL_POLICY = \"IfNotPresent\"\n+        JAVA_VERSION = \"11\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41d32c768eef69703e428b2c58bf4aed4fb18907"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE4MTkwOA==", "bodyText": "Is this question or suggestion? :)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3031#discussion_r429181908", "createdAt": "2020-05-22T11:00:47Z", "author": {"login": "sknot-rh"}, "path": "Jenkinsfile-pr", "diffHunk": "@@ -37,6 +37,7 @@ pipeline {\n         TEST_CLUSTER_ADMIN = \"admin\"\n         OPERATOR_IMAGE_PULL_POLICY = \"IfNotPresent\"\n         COMPONENTS_IMAGE_PULL_POLICY = \"IfNotPresent\"\n+        JAVA_VERSION = \"11\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA4ODk2NA=="}, "originalCommit": {"oid": "41d32c768eef69703e428b2c58bf4aed4fb18907"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxMzkxOA==", "bodyText": "Kinda both :)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3031#discussion_r429813918", "createdAt": "2020-05-25T08:49:29Z", "author": {"login": "Frawless"}, "path": "Jenkinsfile-pr", "diffHunk": "@@ -37,6 +37,7 @@ pipeline {\n         TEST_CLUSTER_ADMIN = \"admin\"\n         OPERATOR_IMAGE_PULL_POLICY = \"IfNotPresent\"\n         COMPONENTS_IMAGE_PULL_POLICY = \"IfNotPresent\"\n+        JAVA_VERSION = \"11\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA4ODk2NA=="}, "originalCommit": {"oid": "41d32c768eef69703e428b2c58bf4aed4fb18907"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTQ4MjM3OnYy", "diffSide": "RIGHT", "path": ".azure/build-pipeline.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDowMDo0NVrOGbLmPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNDo1NDo0NlrOGblmQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE1NDc1MQ==", "bodyText": "Is this still necessary?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3031#discussion_r431154751", "createdAt": "2020-05-27T14:00:45Z", "author": {"login": "tombentley"}, "path": ".azure/build-pipeline.yaml", "diffHunk": "@@ -64,7 +64,7 @@ jobs:\n         env:\n           DOCKER_USER: $(DOCKER_USER)\n           DOCKER_PASS: $(DOCKER_PASS_SECRET)\n-          MVN_ARGS: '-B'\n+          MVN_ARGS: '-B -X -e'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb5484c253981c7fa31863a868a2f1970a402ffa"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU4MDczOA==", "bodyText": "No, not really. I was trying to debug ClusterOperatorTest which is failing in most cases. There is some race condition with vertx I think.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3031#discussion_r431580738", "createdAt": "2020-05-28T04:54:46Z", "author": {"login": "sknot-rh"}, "path": ".azure/build-pipeline.yaml", "diffHunk": "@@ -64,7 +64,7 @@ jobs:\n         env:\n           DOCKER_USER: $(DOCKER_USER)\n           DOCKER_PASS: $(DOCKER_PASS_SECRET)\n-          MVN_ARGS: '-B'\n+          MVN_ARGS: '-B -X -e'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE1NDc1MQ=="}, "originalCommit": {"oid": "bb5484c253981c7fa31863a868a2f1970a402ffa"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTQ5NTU5OnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/ClusterOperatorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDowMzo0NFrOGbLuzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDowMzo0NFrOGbLuzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE1Njk0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        log.warn(\"Failed to close vertx instance. \", e);\n          \n          \n            \n                        log.warn(\"Failed to close vertx instance.\", e);", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3031#discussion_r431156940", "createdAt": "2020-05-27T14:03:44Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/ClusterOperatorTest.java", "diffHunk": "@@ -76,7 +79,11 @@ public static void before() {\n \n     @AfterAll\n     public static void after() {\n-        vertx.close();\n+        try {\n+            vertx.close();\n+        } catch (Exception e) {\n+            log.warn(\"Failed to close vertx instance. \", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb5484c253981c7fa31863a868a2f1970a402ffa"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTUwMTQ3OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDowNDo1OFrOGbLylA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNTowNjo0MlrOGblxTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE1NzkwOA==", "bodyText": "Why this this needed?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3031#discussion_r431157908", "createdAt": "2020-05-27T14:04:58Z", "author": {"login": "tombentley"}, "path": "pom.xml", "diffHunk": "@@ -784,6 +784,8 @@\n                         <ENV_VAR_EXISTS_BOOLEAN>true</ENV_VAR_EXISTS_BOOLEAN>\n                     </environmentVariables>\n                     <trimStackTrace>false</trimStackTrace>\n+                    <argLine>-Xmx1024m</argLine>\n+                    <forkedProcessExitTimeoutInSeconds>120</forkedProcessExitTimeoutInSeconds>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb5484c253981c7fa31863a868a2f1970a402ffa"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU4MzU2Nw==", "bodyText": "ClusterOperatorTest is flaky and I was trying to find out whether it is env issue or some bug in this tests. You can check the log for example there: https://dev.azure.com/cncf/strimzi/_build/results?buildId=40416&view=logs&j=66711cbf-ca69-5603-44b4-df4438498017&t=b249c5e2-84b8-5b78-6f19-55caa3f2c635", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3031#discussion_r431583567", "createdAt": "2020-05-28T05:06:42Z", "author": {"login": "sknot-rh"}, "path": "pom.xml", "diffHunk": "@@ -784,6 +784,8 @@\n                         <ENV_VAR_EXISTS_BOOLEAN>true</ENV_VAR_EXISTS_BOOLEAN>\n                     </environmentVariables>\n                     <trimStackTrace>false</trimStackTrace>\n+                    <argLine>-Xmx1024m</argLine>\n+                    <forkedProcessExitTimeoutInSeconds>120</forkedProcessExitTimeoutInSeconds>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE1NzkwOA=="}, "originalCommit": {"oid": "bb5484c253981c7fa31863a868a2f1970a402ffa"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMTUzODYwOnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/ClusterOperatorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwODowNzozMVrOGdmpWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwODowNzozMVrOGdmpWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY5NTA2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final Logger log = LogManager.getLogger(ClusterOperatorTest.class.getName());\n          \n          \n            \n                private static final Logger log = LogManager.getLogger(ClusterOperatorTest.class);", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3031#discussion_r433695067", "createdAt": "2020-06-02T08:07:31Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/ClusterOperatorTest.java", "diffHunk": "@@ -52,6 +55,7 @@\n @ExtendWith(VertxExtension.class)\n public class ClusterOperatorTest {\n     private static Vertx vertx;\n+    private static final Logger log = LogManager.getLogger(ClusterOperatorTest.class.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51a6bcdac29b831efce9f92e0783f4094eb6060d"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMTU5MjQwOnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/ClusterOperatorTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwODoyMjo0MlrOGdnLuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMDozMDoyMlrOGdrrmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcwMzg2NA==", "bodyText": "I don't really understand why this had to change due to a simple change in JDK. If this is just trying to remove a flaky test perhaps that should be done in a separate PR, or at least the PR description should mention that you've fixed a flaky test in addition to changing the JDK.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3031#discussion_r433703864", "createdAt": "2020-06-02T08:22:42Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/ClusterOperatorTest.java", "diffHunk": "@@ -165,29 +169,37 @@ private void startStop(VertxTestContext context, String namespaces, boolean open\n \n         Map<String, String> env = buildEnv(namespaces);\n \n-        Checkpoint async = context.checkpoint();\n+        CountDownLatch latch = new CountDownLatch(namespaceList.size() + 1);\n+\n         Main.run(vertx, client, new PlatformFeaturesAvailability(openShift, KubernetesVersion.V1_9),\n                     ClusterOperatorConfig.fromMap(env, KafkaVersionTestUtils.getKafkaVersionLookup()))\n             .onComplete(context.succeeding(v -> context.verify(() -> {\n                 assertThat(\"A verticle per namespace\", vertx.deploymentIDs(), hasSize(namespaceList.size()));\n-\n                 for (String deploymentId: vertx.deploymentIDs()) {\n-                    vertx.undeploy(deploymentId, context.succeeding());\n+                    vertx.undeploy(deploymentId, asyncResult -> {\n+                        if (asyncResult.failed()) {\n+                            log.error(\"Failed to undeploy {}\", deploymentId);\n+                            context.failNow(asyncResult.cause());\n+                        }\n+                        latch.countDown();\n+                    });\n                 }\n \n                 int maximumExpectedNumberOfWatchers = (openShift ? 9 : 7) * namespaceList.size(); // we do not have connectS2I on k8s\n                 assertThat(\"Looks like there were more watchers than namespaces\",\n                         numWatchers.get(), lessThanOrEqualTo(maximumExpectedNumberOfWatchers));\n-                async.flag();\n+                latch.countDown();\n             })));\n+        latch.await(10, TimeUnit.SECONDS);\n+        context.completeNow();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51a6bcdac29b831efce9f92e0783f4094eb6060d"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc3NzU2MQ==", "bodyText": "With java11 it started failing more often so most of the java11 builds failed. I wanted to make the build green. I can split it into another PR if you wish.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3031#discussion_r433777561", "createdAt": "2020-06-02T10:30:22Z", "author": {"login": "sknot-rh"}, "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/ClusterOperatorTest.java", "diffHunk": "@@ -165,29 +169,37 @@ private void startStop(VertxTestContext context, String namespaces, boolean open\n \n         Map<String, String> env = buildEnv(namespaces);\n \n-        Checkpoint async = context.checkpoint();\n+        CountDownLatch latch = new CountDownLatch(namespaceList.size() + 1);\n+\n         Main.run(vertx, client, new PlatformFeaturesAvailability(openShift, KubernetesVersion.V1_9),\n                     ClusterOperatorConfig.fromMap(env, KafkaVersionTestUtils.getKafkaVersionLookup()))\n             .onComplete(context.succeeding(v -> context.verify(() -> {\n                 assertThat(\"A verticle per namespace\", vertx.deploymentIDs(), hasSize(namespaceList.size()));\n-\n                 for (String deploymentId: vertx.deploymentIDs()) {\n-                    vertx.undeploy(deploymentId, context.succeeding());\n+                    vertx.undeploy(deploymentId, asyncResult -> {\n+                        if (asyncResult.failed()) {\n+                            log.error(\"Failed to undeploy {}\", deploymentId);\n+                            context.failNow(asyncResult.cause());\n+                        }\n+                        latch.countDown();\n+                    });\n                 }\n \n                 int maximumExpectedNumberOfWatchers = (openShift ? 9 : 7) * namespaceList.size(); // we do not have connectS2I on k8s\n                 assertThat(\"Looks like there were more watchers than namespaces\",\n                         numWatchers.get(), lessThanOrEqualTo(maximumExpectedNumberOfWatchers));\n-                async.flag();\n+                latch.countDown();\n             })));\n+        latch.await(10, TimeUnit.SECONDS);\n+        context.completeNow();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcwMzg2NA=="}, "originalCommit": {"oid": "51a6bcdac29b831efce9f92e0783f4094eb6060d"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMTYwNTAyOnYy", "diffSide": "RIGHT", "path": "topic-operator/src/main/java/io/strimzi/operator/topic/TopicOperator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwODoyNjowOVrOGdnTww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMDoyNDozM1rOGdrgFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcwNTkyMw==", "bodyText": "Again, I don't understand why this needed to change. Presumably because you saw an NPE, right? But the question is not \"How do I get rid of the NPE as quickly as possible\" it's \"what race means we're not seeing this NPE, and was that an NPE the original author thought could never happen?\" The answer to that question might reveal some defect in the logic which using an emptyList() is just hiding.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3031#discussion_r433705923", "createdAt": "2020-06-02T08:26:09Z", "author": {"login": "tombentley"}, "path": "topic-operator/src/main/java/io/strimzi/operator/topic/TopicOperator.java", "diffHunk": "@@ -1202,9 +1203,10 @@ public ReconcileState(Set<TopicName> succeeded, Set<TopicName> undetermined, Map\n             this.succeeded = succeeded;\n             this.undetermined = undetermined;\n             this.failed = failed;\n+            this.ktList = emptyList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51a6bcdac29b831efce9f92e0783f4094eb6060d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc3NDYxMw==", "bodyText": "I did not see the NPE. Spotbugs with java 11 started complaining about dereferencing ktList which has not been initialized in constructor.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3031#discussion_r433774613", "createdAt": "2020-06-02T10:24:33Z", "author": {"login": "sknot-rh"}, "path": "topic-operator/src/main/java/io/strimzi/operator/topic/TopicOperator.java", "diffHunk": "@@ -1202,9 +1203,10 @@ public ReconcileState(Set<TopicName> succeeded, Set<TopicName> undetermined, Map\n             this.succeeded = succeeded;\n             this.undetermined = undetermined;\n             this.failed = failed;\n+            this.ktList = emptyList();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcwNTkyMw=="}, "originalCommit": {"oid": "51a6bcdac29b831efce9f92e0783f4094eb6060d"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 70, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}