{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxODQ0Mjk3", "number": 2512, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNDoyMzoxMVrODdsvjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjo1MTozNlrODeh1GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNDY4MzY0OnYy", "diffSide": "RIGHT", "path": "documentation/modules/overview/con-configuration-points-broker.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNDoyMzoxMVrOFmcxDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNDoyMzoxMVrOFmcxDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg2MTUxOQ==", "bodyText": "This is a bit weird ... configure listeners to connect to. I think we should try to find something better. MAybe to use the authentication server?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2512#discussion_r375861519", "createdAt": "2020-02-06T14:23:11Z", "author": {"login": "scholzj"}, "path": "documentation/modules/overview/con-configuration-points-broker.adoc", "diffHunk": "@@ -43,6 +43,8 @@ External listeners expose Kafka by specifying a `type`:\n * `ingress` to use Kubernetes _Ingress_ and the {NginxIngressController}.\n --\n \n+If you are using xref:security-configuration-authentication_{context}[{oauth} for token-based authentication], you can configure listeners to connect to the authorization server.  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bf9a9fe5cdbd9bf6cb47d0f23c7cd4c321b2b31"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNDY5MTU0OnYy", "diffSide": "RIGHT", "path": "documentation/modules/overview/con-configuration-points-common.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNDoyNToyNFrOFmc2HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNDoyNToyNFrOFmc2HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg2MjgxMw==", "bodyText": "Thsi sounds a bit weird. Can't we just say Resource requests and limits for TO and UO can be set in the Kafka CR?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2512#discussion_r375862813", "createdAt": "2020-02-06T14:25:24Z", "author": {"login": "scholzj"}, "path": "documentation/modules/overview/con-configuration-points-common.adoc", "diffHunk": "@@ -14,6 +14,8 @@ Bootstrap servers:: Bootstrap servers are used for host/port connection to a Kaf\n * Kafka Bridge\n * Kafka MirrorMaker producers and consumers\n CPU and memory resources:: You request CPU and memory resources for components. Limits specify the maximum resources that can be consumed by a given container.\n++\n+When you define the specification for your Kafka cluster using the `Kafka` resource, you can set resource usage limits for the Topic Operator and User Operator. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bf9a9fe5cdbd9bf6cb47d0f23c7cd4c321b2b31"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzIyMTk5OnYy", "diffSide": "RIGHT", "path": "documentation/modules/overview/con-configuration-points-connect.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjoxMTozN1rOFnsF0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjoxMTozN1rOFnsF0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE2MTE3MQ==", "bodyText": "^\ncertain type of external system > certain types of external systems", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2512#discussion_r377161171", "createdAt": "2020-02-10T16:11:37Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/overview/con-configuration-points-connect.adoc", "diffHunk": "@@ -56,3 +56,45 @@ To create the image, you can use:\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bf9a9fe5cdbd9bf6cb47d0f23c7cd4c321b2b31"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzIyODk3OnYy", "diffSide": "RIGHT", "path": "documentation/modules/overview/con-configuration-points-connect.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjoxMzoyM1rOFnsKMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjoxMzoyM1rOFnsKMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE2MjI5MQ==", "bodyText": "KafkaConnector > KafkaConnectors", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2512#discussion_r377162291", "createdAt": "2020-02-10T16:13:23Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/overview/con-configuration-points-connect.adoc", "diffHunk": "@@ -56,3 +56,45 @@ To create the image, you can use:\n \n * A Kafka container image on {DockerRepository} as a base image\n * OpenShift {docs-okd} and the {docs-okd-s2i} framework to create new container images\n+\n+[discrete]\n+== Managing connectors\n+\n+You can use the `KafkaConnector` resource or the link:https://kafka.apache.org/documentation/#connect_rest[Kafka Connect API] to create and manage connector instances in a Kafka Connect cluster.\n+The `KafkaConnector` resource offers a Kubernetes-native approach, and is managed by the Cluster Operator.\n+\n+The `spec` for the `KafkaConnector` resource specifies the connector class and configuration settings, as well as the maximum number of connector _tasks_ to handle the data.\n+\n+[discrete]\n+== Example YAML showing KafkaConnector configuration\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: kafka.strimzi.io/v1alpha1\n+kind: KafkaConnector\n+metadata:\n+  name: my-source-connector\n+  labels:\n+    strimzi.io/cluster: my-connect-cluster\n+spec:\n+  class: org.apache.kafka.connect.file.FileStreamSourceConnector\n+  tasksMax: 2\n+  config:\n+    file: \"/opt/kafka/LICENSE\"\n+    topic: my-topic\n+    # ...\n+----\n+\n+You enable `KafkaConnector` by adding an annotation to the `KafkaConnect` resource.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bf9a9fe5cdbd9bf6cb47d0f23c7cd4c321b2b31"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzI0NTUwOnYy", "diffSide": "RIGHT", "path": "documentation/modules/overview/con-configuration-points-connect.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjoxNzoyM1rOFnsUmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjoxNzoyM1rOFnsUmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE2NDk1NQ==", "bodyText": "Please change to \"Kafka Connect REST API\" for consistency with the Using guide.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2512#discussion_r377164955", "createdAt": "2020-02-10T16:17:23Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/overview/con-configuration-points-connect.adoc", "diffHunk": "@@ -56,3 +56,45 @@ To create the image, you can use:\n \n * A Kafka container image on {DockerRepository} as a base image\n * OpenShift {docs-okd} and the {docs-okd-s2i} framework to create new container images\n+\n+[discrete]\n+== Managing connectors\n+\n+You can use the `KafkaConnector` resource or the link:https://kafka.apache.org/documentation/#connect_rest[Kafka Connect API] to create and manage connector instances in a Kafka Connect cluster.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bf9a9fe5cdbd9bf6cb47d0f23c7cd4c321b2b31"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzI1MjY1OnYy", "diffSide": "RIGHT", "path": "documentation/modules/overview/con-configuration-points-connect.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjoxOToxMlrOFnsZGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjoxOToxMlrOFnsZGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE2NjEwNg==", "bodyText": "{KafkaApiVersion} attribute as below?\n(Not sure I've been using this attribute consistently either.)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2512#discussion_r377166106", "createdAt": "2020-02-10T16:19:12Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/overview/con-configuration-points-connect.adoc", "diffHunk": "@@ -56,3 +56,45 @@ To create the image, you can use:\n \n * A Kafka container image on {DockerRepository} as a base image\n * OpenShift {docs-okd} and the {docs-okd-s2i} framework to create new container images\n+\n+[discrete]\n+== Managing connectors\n+\n+You can use the `KafkaConnector` resource or the link:https://kafka.apache.org/documentation/#connect_rest[Kafka Connect API] to create and manage connector instances in a Kafka Connect cluster.\n+The `KafkaConnector` resource offers a Kubernetes-native approach, and is managed by the Cluster Operator.\n+\n+The `spec` for the `KafkaConnector` resource specifies the connector class and configuration settings, as well as the maximum number of connector _tasks_ to handle the data.\n+\n+[discrete]\n+== Example YAML showing KafkaConnector configuration\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: kafka.strimzi.io/v1alpha1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bf9a9fe5cdbd9bf6cb47d0f23c7cd4c321b2b31"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzM4MTM2OnYy", "diffSide": "RIGHT", "path": "documentation/modules/ref-kafka-user.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjo1MTozNlrOFnto0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjo1MTozNlrOFnto0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE4NjUxNA==", "bodyText": "spec > the spec", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2512#discussion_r377186514", "createdAt": "2020-02-10T16:51:36Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/ref-kafka-user.adoc", "diffHunk": "@@ -213,8 +220,28 @@ If a user is added to a list of super users in a Kafka broker configuration, the\n \n For more information on configuring super users, see xref:assembly-kafka-authentication-and-authorization-deployment-configuration-kafka[authentication and authorization] of Kafka brokers.\n \n-== Additional resources\n+== User quotas\n+\n+You can configure `spec` for the `KafkaUser` resource to enforce quotas so that a user does not exceed access to Kafka brokers based on a byte threshold or a time limit of CPU utilization.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bf9a9fe5cdbd9bf6cb47d0f23c7cd4c321b2b31"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 425, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}