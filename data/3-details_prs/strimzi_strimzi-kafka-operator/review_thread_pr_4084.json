{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1OTI0MzM5", "number": 4084, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjo0ODoxNVrOFDuG_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMzo1MTozOFrOFER3Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDQ1NTAxOnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaBridgeAssemblyOperator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjo0ODoxNVrOIDg0rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjo0ODoxNVrOIDg0rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU1NDQxNQ==", "bodyText": "I wonder if the code would look nicer and easier to read if you wrap lines 81-83 into a method and call the method here.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4084#discussion_r540554415", "createdAt": "2020-12-10T22:48:15Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaBridgeAssemblyOperator.java", "diffHunk": "@@ -91,7 +89,8 @@ public KafkaBridgeAssemblyOperator(Vertx vertx, PlatformFeaturesAvailability pfa\n         kafkaBridgeServiceAccount(namespace, bridge)\n             .compose(i -> deploymentOperations.scaleDown(namespace, bridge.getName(), bridge.getReplicas()))\n             .compose(scale -> serviceOperations.reconcile(namespace, bridge.getServiceName(), bridge.generateService()))\n-            .compose(i -> configMapOperations.reconcile(namespace, bridge.getAncillaryConfigMapName(), logAndMetricsConfigMap))\n+            .compose(i -> loggingCmFut)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef74b5bed7b214c539948535024b6e029b36c5eb"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjI1NDg4OnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/AbstractConnectOperator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwOToyMToxNVrOIDwCLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwOToyMToxNVrOIDwCLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgwMzYzMA==", "bodyText": "Using CompositeFuture in the return type is not very nice, because it means callers of this method need to know what the elements of the composite are, and CompositeFuture is not type safe. I think it would be much nicer to declare a class which holds the metrics cm and the logging cm, like this:\npublic class MetricsAndLoggingCm {\n    public ConfigMap metricsCm;\n    public ConfigMap loggingCm;\n    MetricsAndLoggingCm(ConfigMap metricsCm, ConfigMap loggingCm) {\n        // ...\n    }\n}\nand have this method return a Future<MetricsAndLoggingCm> (by doing map on the result of the join). That way it's all much more self-describing.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4084#discussion_r540803630", "createdAt": "2020-12-11T09:21:15Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/AbstractConnectOperator.java", "diffHunk": "@@ -698,15 +699,22 @@ protected JsonObject asJson(KafkaConnectorSpec spec) {\n         return updateStatusPromise.future();\n     }\n \n-    protected Future<ConfigMap> connectMetricsConfigMap(String namespace, KafkaConnectCluster connect) {\n+    protected CompositeFuture connectMetricsAndLoggingConfigMap(String namespace, KafkaConnectCluster connect) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78159229295122077031d96d0c0117705c9e010c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjI2Nzc5OnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaConnectAssemblyOperator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwOToyNDoxOVrOIDwJyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwOToyNDoxOVrOIDwJyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgwNTU3Ng==", "bodyText": "Wrt previous comment, is means that here you don't need to know which indices correspond to which CM, the field or accessor method tell you. You could also, perhaps, change generateMetricsAndLogConfigMap to take an instance of the new class.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4084#discussion_r540805576", "createdAt": "2020-12-11T09:24:19Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaConnectAssemblyOperator.java", "diffHunk": "@@ -137,9 +132,9 @@ public KafkaConnectAssemblyOperator(Vertx vertx, PlatformFeaturesAvailability pf\n                 .compose(i -> networkPolicyOperator.reconcile(namespace, connect.getName(), connect.generateNetworkPolicy(pfa.isNamespaceAndPodSelectorNetworkPolicySupported(), isUseResources(kafkaConnect), operatorNamespace, operatorNamespaceLabels)))\n                 .compose(i -> deploymentOperations.scaleDown(namespace, connect.getName(), connect.getReplicas()))\n                 .compose(scale -> serviceOperations.reconcile(namespace, connect.getServiceName(), connect.generateService()))\n-                .compose(i -> connectMetricsConfigMap(namespace, connect))\n-                .compose(metricsCm -> {\n-                    ConfigMap logAndMetricsConfigMap = connect.generateMetricsAndLogConfigMap(loggingCm, metricsCm);\n+                .compose(i -> connectMetricsAndLoggingConfigMap(namespace, connect))\n+                .compose(metricsAndLoggingCm -> {\n+                    ConfigMap logAndMetricsConfigMap = connect.generateMetricsAndLogConfigMap(metricsAndLoggingCm.resultAt(1), metricsAndLoggingCm.resultAt(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78159229295122077031d96d0c0117705c9e010c"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMDMxMjk5OnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/MetricsAndLoggingCm.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMzo1MTozOFrOIEWH2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMzo1MTozOFrOIEWH2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQyNzY3Mw==", "bodyText": "This seems to be used exclusively by assembly operators. So why is it in resource operators package? Should it be moved to the assembly package?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4084#discussion_r541427673", "createdAt": "2020-12-11T23:51:38Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/MetricsAndLoggingCm.java", "diffHunk": "@@ -0,0 +1,16 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.operator.cluster.operator.resource;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "927473d926b5ae43fb5c4f2ac751a17477d4cbcc"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 848, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}