{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NjkzNDky", "number": 2353, "title": "ST: Improve Kafka cluster rolling tests", "bodyText": "Type of change\n\nEnhancement / new feature\n\nDescription\nThis PR add tests, which check behaviour of Kafka Cluster when manual CB is needed:\n\nDeploy kafka cluster with 3 pods\nCreate topic with 4 replicas\nScale kafka cluster to 7 replicas and wait, until all pods are ready\nScale down kafka cluster to 3 replicas\nTrigger rolling update for Kafka cluster\nRolling update will not be performed, because topic which we created had some replicas on deleted pods - manual intervention is needed in that case\n\nChecklist\n\n Write tests\n Make sure all tests pass", "createdAt": "2020-01-02T15:20:19Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2353", "merged": true, "mergeCommit": {"oid": "b9f40e0dc6096387c4304f32fbdaae262cd439f8"}, "closed": true, "closedAt": "2020-01-09T10:16:19Z", "author": {"login": "Frawless"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb2xE5OAFqTMzODE2NTQ1NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4Xrf6gBqjI5MzE4MTU0ODc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4MTY1NDU1", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2353#pullrequestreview-338165455", "createdAt": "2020-01-03T16:37:32Z", "commit": {"oid": "38724841a2300de21dbdcee6186baa68e0935bfb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4NDE3NjI3", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2353#pullrequestreview-338417627", "createdAt": "2020-01-05T19:40:49Z", "commit": {"oid": "38724841a2300de21dbdcee6186baa68e0935bfb"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxOTo0MDo1MFrOFaSpZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxOTo1NTozOFrOFaSsZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExMjgwNw==", "bodyText": "Is this comment still valid? You seem to have a cluster with 3 topics and topic with 3 replicas?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2353#discussion_r363112807", "createdAt": "2020-01-05T19:40:50Z", "author": {"login": "scholzj"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/RollingUpdateST.java", "diffHunk": "@@ -218,11 +219,7 @@ void testKafkaAndZookeeperScaleUpScaleDown() throws Exception {\n         assertEquals(3, initialReplicas);\n \n         // Create topic before scale up to ensure no partitions created on last broker (which will mess up scale down)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38724841a2300de21dbdcee6186baa68e0935bfb"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExMjk3NA==", "bodyText": "You don't seem to be doing anything between scale-up and the initial deployment. So why not just deploy the cluster with 4 nodes?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2353#discussion_r363112974", "createdAt": "2020-01-05T19:44:17Z", "author": {"login": "scholzj"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/RollingUpdateST.java", "diffHunk": "@@ -269,6 +266,73 @@ void testKafkaAndZookeeperScaleUpScaleDown() throws Exception {\n         receiveMessagesExternal(NAMESPACE, topicName, messageCount);\n     }\n \n+    /**\n+     * This test cover case, when KafkaRoller will not roll Kafka pods, because created topic doesn't meet requirements for roll remaining pods\n+     * 1. Deploy kafka cluster with 3 pods\n+     * 2. Create topic with 4 replicas\n+     * 3. Scale kafka cluster to 7 replicas and wait, until all pods are ready\n+     * 4. Scale down kafka cluster to 3 replicas\n+     * 5. Trigger rolling update for Kafka cluster\n+     * 6. Rolling update will not be performed, because topic which we created had some replicas on deleted pods - manual fix is needed in that case\n+     */\n+    @Test\n+    void testKafkaWontRollUp() throws Exception {\n+        String topicName = \"test-topic-\" + new Random().nextInt(Integer.MAX_VALUE);\n+        timeMeasuringSystem.setOperationID(timeMeasuringSystem.startTimeMeasuring(Operation.CLUSTER_RECOVERY));\n+\n+        KafkaResource.kafkaPersistent(CLUSTER_NAME, 3)\n+            .editSpec()\n+                .editKafka()\n+                    .addToConfig(\"auto.create.topics.enable\", \"false\")\n+                .endKafka()\n+            .endSpec().done();\n+\n+        LOGGER.info(\"Running kafkaScaleUpScaleDown {}\", CLUSTER_NAME);\n+        final int initialReplicas = kubeClient().getStatefulSet(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME)).getStatus().getReplicas();\n+        assertEquals(3, initialReplicas);\n+\n+        // scale up", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38724841a2300de21dbdcee6186baa68e0935bfb"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExMjk5NA==", "bodyText": "The comment does not seem to match with what is going on?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2353#discussion_r363112994", "createdAt": "2020-01-05T19:44:36Z", "author": {"login": "scholzj"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/RollingUpdateST.java", "diffHunk": "@@ -269,6 +266,73 @@ void testKafkaAndZookeeperScaleUpScaleDown() throws Exception {\n         receiveMessagesExternal(NAMESPACE, topicName, messageCount);\n     }\n \n+    /**\n+     * This test cover case, when KafkaRoller will not roll Kafka pods, because created topic doesn't meet requirements for roll remaining pods\n+     * 1. Deploy kafka cluster with 3 pods\n+     * 2. Create topic with 4 replicas\n+     * 3. Scale kafka cluster to 7 replicas and wait, until all pods are ready\n+     * 4. Scale down kafka cluster to 3 replicas\n+     * 5. Trigger rolling update for Kafka cluster\n+     * 6. Rolling update will not be performed, because topic which we created had some replicas on deleted pods - manual fix is needed in that case\n+     */\n+    @Test\n+    void testKafkaWontRollUp() throws Exception {\n+        String topicName = \"test-topic-\" + new Random().nextInt(Integer.MAX_VALUE);\n+        timeMeasuringSystem.setOperationID(timeMeasuringSystem.startTimeMeasuring(Operation.CLUSTER_RECOVERY));\n+\n+        KafkaResource.kafkaPersistent(CLUSTER_NAME, 3)\n+            .editSpec()\n+                .editKafka()\n+                    .addToConfig(\"auto.create.topics.enable\", \"false\")\n+                .endKafka()\n+            .endSpec().done();\n+\n+        LOGGER.info(\"Running kafkaScaleUpScaleDown {}\", CLUSTER_NAME);\n+        final int initialReplicas = kubeClient().getStatefulSet(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME)).getStatus().getReplicas();\n+        assertEquals(3, initialReplicas);\n+\n+        // scale up\n+        final int scaleTo = initialReplicas + 4;\n+        final int newPodId = initialReplicas;\n+        final String newPodName = KafkaResources.kafkaPodName(CLUSTER_NAME,  newPodId);\n+        LOGGER.info(\"Scaling up to {}\", scaleTo);\n+        // Create snapshot of current cluster\n+        String kafkaStsName = kafkaStatefulSetName(CLUSTER_NAME);\n+        KafkaResource.replaceKafkaResource(CLUSTER_NAME, k -> k.getSpec().getKafka().setReplicas(scaleTo));\n+        // No need to roll kafka cluster during scale up (no external listeners in Kafka)\n+        StatefulSetUtils.waitForAllStatefulSetPodsReady(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME), scaleTo);\n+        Map<String, String> kafkaPods = StatefulSetUtils.ssSnapshot(kafkaStsName);\n+        LOGGER.info(\"Scaling to {} finished\", scaleTo);\n+\n+        // Create topic before scale up to ensure no partitions created on last broker (which will mess up scale down)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38724841a2300de21dbdcee6186baa68e0935bfb"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExMzU3NQ==", "bodyText": "What is expected to triger the rolling update here? And how do you check the 6.?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2353#discussion_r363113575", "createdAt": "2020-01-05T19:55:38Z", "author": {"login": "scholzj"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/RollingUpdateST.java", "diffHunk": "@@ -269,6 +266,73 @@ void testKafkaAndZookeeperScaleUpScaleDown() throws Exception {\n         receiveMessagesExternal(NAMESPACE, topicName, messageCount);\n     }\n \n+    /**\n+     * This test cover case, when KafkaRoller will not roll Kafka pods, because created topic doesn't meet requirements for roll remaining pods\n+     * 1. Deploy kafka cluster with 3 pods\n+     * 2. Create topic with 4 replicas\n+     * 3. Scale kafka cluster to 7 replicas and wait, until all pods are ready\n+     * 4. Scale down kafka cluster to 3 replicas\n+     * 5. Trigger rolling update for Kafka cluster\n+     * 6. Rolling update will not be performed, because topic which we created had some replicas on deleted pods - manual fix is needed in that case\n+     */\n+    @Test\n+    void testKafkaWontRollUp() throws Exception {\n+        String topicName = \"test-topic-\" + new Random().nextInt(Integer.MAX_VALUE);\n+        timeMeasuringSystem.setOperationID(timeMeasuringSystem.startTimeMeasuring(Operation.CLUSTER_RECOVERY));\n+\n+        KafkaResource.kafkaPersistent(CLUSTER_NAME, 3)\n+            .editSpec()\n+                .editKafka()\n+                    .addToConfig(\"auto.create.topics.enable\", \"false\")\n+                .endKafka()\n+            .endSpec().done();\n+\n+        LOGGER.info(\"Running kafkaScaleUpScaleDown {}\", CLUSTER_NAME);\n+        final int initialReplicas = kubeClient().getStatefulSet(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME)).getStatus().getReplicas();\n+        assertEquals(3, initialReplicas);\n+\n+        // scale up\n+        final int scaleTo = initialReplicas + 4;\n+        final int newPodId = initialReplicas;\n+        final String newPodName = KafkaResources.kafkaPodName(CLUSTER_NAME,  newPodId);\n+        LOGGER.info(\"Scaling up to {}\", scaleTo);\n+        // Create snapshot of current cluster\n+        String kafkaStsName = kafkaStatefulSetName(CLUSTER_NAME);\n+        KafkaResource.replaceKafkaResource(CLUSTER_NAME, k -> k.getSpec().getKafka().setReplicas(scaleTo));\n+        // No need to roll kafka cluster during scale up (no external listeners in Kafka)\n+        StatefulSetUtils.waitForAllStatefulSetPodsReady(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME), scaleTo);\n+        Map<String, String> kafkaPods = StatefulSetUtils.ssSnapshot(kafkaStsName);\n+        LOGGER.info(\"Scaling to {} finished\", scaleTo);\n+\n+        // Create topic before scale up to ensure no partitions created on last broker (which will mess up scale down)\n+        KafkaTopicResource.topic(CLUSTER_NAME, topicName, 4, 4, 4).done();\n+\n+        //Test that the new pod does not have errors or failures in events\n+        String uid = kubeClient().getPodUid(newPodName);\n+        List<Event> events = kubeClient().listEvents(uid);\n+        assertThat(events, hasAllOfReasons(Scheduled, Pulled, Created, Started));\n+\n+        //Test that CO doesn't have any exceptions in log\n+        timeMeasuringSystem.stopOperation(timeMeasuringSystem.getOperationID());\n+        assertNoCoErrorsLogged(timeMeasuringSystem.getDurationInSecconds(testClass, testName, timeMeasuringSystem.getOperationID()));\n+\n+        // scale down\n+        LOGGER.info(\"Scaling down to {}\", initialReplicas);\n+        timeMeasuringSystem.setOperationID(timeMeasuringSystem.startTimeMeasuring(Operation.SCALE_DOWN));\n+        KafkaResource.replaceKafkaResource(CLUSTER_NAME, k -> k.getSpec().getKafka().setReplicas(initialReplicas));\n+\n+        PodUtils.waitUntilPodsCountIsPresent(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME), 3);\n+        // Wait for first reconciliation\n+        StUtils.waitForReconciliation(testClass, testName, NAMESPACE);\n+        // Wait for second reconciliation and check that pods are not rollable\n+        StUtils.waitForReconciliation(testClass, testName, NAMESPACE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38724841a2300de21dbdcee6186baa68e0935bfb"}, "originalPosition": 104}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NDUzOTU5", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2353#pullrequestreview-339453959", "createdAt": "2020-01-07T19:26:26Z", "commit": {"oid": "fb145ba7ba8a3c857d425fc79af488d01c5f375d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b706d4a6a8ad915d5fb4ddaba6a685c1a54b731b", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b706d4a6a8ad915d5fb4ddaba6a685c1a54b731b", "committedDate": "2020-01-08T14:20:45Z", "message": "WIP: add new test case fow rolling\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3697242419af655f2b6ed09f4725ad8db09dc2db", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3697242419af655f2b6ed09f4725ad8db09dc2db", "committedDate": "2020-01-08T14:20:45Z", "message": "Add comments to test\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "826f80d03f6d78028ecb0ab3d53b5886b1a4fb5b", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/826f80d03f6d78028ecb0ab3d53b5886b1a4fb5b", "committedDate": "2020-01-08T14:20:45Z", "message": "fixup! Add comments to test\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "393e3d21200c45b98760de6fb408e4c686b116e2", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/393e3d21200c45b98760de6fb408e4c686b116e2", "committedDate": "2020-01-08T14:20:45Z", "message": "Work in some github comments and fix KafkaWontRollUp test\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6c2264f0448d579bc41fe252442c7e4ee7fdd0a", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c6c2264f0448d579bc41fe252442c7e4ee7fdd0a", "committedDate": "2020-01-08T14:20:45Z", "message": "Extend timeout for annotation removal in case of manual rolling update\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3390f148a2d14a30bba274bb5c4e198f8e9b745e", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3390f148a2d14a30bba274bb5c4e198f8e9b745e", "committedDate": "2020-01-08T14:20:45Z", "message": "fixup! Extend timeout for annotation removal in case of manual rolling update\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ff8f7f4088496865c075795d8cf29f4cbdb023e", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7ff8f7f4088496865c075795d8cf29f4cbdb023e", "committedDate": "2020-01-08T16:09:51Z", "message": "fixup! fixup! Extend timeout for annotation removal in case of manual rolling update\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8568c444af4a8a477a10a5b28e7a6bbf6a35ca2", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a8568c444af4a8a477a10a5b28e7a6bbf6a35ca2", "committedDate": "2020-01-08T12:11:40Z", "message": "fixup! Extend timeout for annotation removal in case of manual rolling update\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}, "afterCommit": {"oid": "7ff8f7f4088496865c075795d8cf29f4cbdb023e", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7ff8f7f4088496865c075795d8cf29f4cbdb023e", "committedDate": "2020-01-08T16:09:51Z", "message": "fixup! fixup! Extend timeout for annotation removal in case of manual rolling update\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1762, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}