{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MzEwOTg1", "number": 2694, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNTo0NDozM1rODnhO_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMzo0MjowMFrODnq6_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNzY1NTY3OnYy", "diffSide": "RIGHT", "path": "Makefile", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNTo0NDozM1rOF1kMmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjo1NDo1NlrOF1nBuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcxMTg5Ng==", "bodyText": "How does it work when your bash in /bin/bash is ages old ... typically on MacOS?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2694#discussion_r391711896", "createdAt": "2020-03-12T15:44:33Z", "author": {"login": "scholzj"}, "path": "Makefile", "diffHunk": "@@ -161,7 +161,7 @@ RED=\\033[0;31m\n NO_COLOUR=\\033[0m\n YQ_VERSION = $(shell yq --version | $(SED) 's/^.* //g')\n \n-yq_check:\n+yq_check: $(eval SHELL:=/bin/bash)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed3f62d37c0f5ea74492942f066b2449093bbb08"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczOTI0OA==", "bodyText": "In the DEV_QUICK_START_MAC_OS.md it specifically says:\n#### Install latest Bash\n`brew install bash`\n\nSo having version 4+ is already a per-requisite for building the project I believe.\nIn the case where bash is not stored in /bin\nI could change it to something like:\nSHELL=$(eval which bash)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2694#discussion_r391739248", "createdAt": "2020-03-12T16:25:49Z", "author": {"login": "samuel-hawker"}, "path": "Makefile", "diffHunk": "@@ -161,7 +161,7 @@ RED=\\033[0;31m\n NO_COLOUR=\\033[0m\n YQ_VERSION = $(shell yq --version | $(SED) 's/^.* //g')\n \n-yq_check:\n+yq_check: $(eval SHELL:=/bin/bash)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcxMTg5Ng=="}, "originalCommit": {"oid": "ed3f62d37c0f5ea74492942f066b2449093bbb08"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczOTk4OA==", "bodyText": "So to answer, if your bash is ages old you can't even build Strimzi, hence why the instructions say to update it.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2694#discussion_r391739988", "createdAt": "2020-03-12T16:26:54Z", "author": {"login": "samuel-hawker"}, "path": "Makefile", "diffHunk": "@@ -161,7 +161,7 @@ RED=\\033[0;31m\n NO_COLOUR=\\033[0m\n YQ_VERSION = $(shell yq --version | $(SED) 's/^.* //g')\n \n-yq_check:\n+yq_check: $(eval SHELL:=/bin/bash)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcxMTg5Ng=="}, "originalCommit": {"oid": "ed3f62d37c0f5ea74492942f066b2449093bbb08"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc1MTcxNw==", "bodyText": "That is and isn't true. Yes, you need to have bash4. But there is no requirement to have bash4 in /bin/bash. On MacOs it is common that the system wide bash2 is /bin/bash but you actually use some other bash installed for example in /usr/local/bin/bash. But while it is common on MAcOS, it can be on other platforms as well. That is why scripts always should use /usr/bin/env bash in the shebang and not /bin/bash. So I think it is ok to expect bash4+, but we need smarter way to find it.\nIf $(eval which bash) works it would be an option (which bash in my case certainly points to the right bash). I guess other option might be to create some bash script prerequisites-check.sh for example in tools and put all the checks which might be needed there and just call it from the Makefile?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2694#discussion_r391751717", "createdAt": "2020-03-12T16:44:59Z", "author": {"login": "scholzj"}, "path": "Makefile", "diffHunk": "@@ -161,7 +161,7 @@ RED=\\033[0;31m\n NO_COLOUR=\\033[0m\n YQ_VERSION = $(shell yq --version | $(SED) 's/^.* //g')\n \n-yq_check:\n+yq_check: $(eval SHELL:=/bin/bash)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcxMTg5Ng=="}, "originalCommit": {"oid": "ed3f62d37c0f5ea74492942f066b2449093bbb08"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc1ODI2Nw==", "bodyText": "I think that is a wholly reasonable suggestion. I will re-work this and create a script. I think having such a script would be useful for first time developers to the repo to ensure all their pre-reqs are installed.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2694#discussion_r391758267", "createdAt": "2020-03-12T16:54:56Z", "author": {"login": "samuel-hawker"}, "path": "Makefile", "diffHunk": "@@ -161,7 +161,7 @@ RED=\\033[0;31m\n NO_COLOUR=\\033[0m\n YQ_VERSION = $(shell yq --version | $(SED) 's/^.* //g')\n \n-yq_check:\n+yq_check: $(eval SHELL:=/bin/bash)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcxMTg5Ng=="}, "originalCommit": {"oid": "ed3f62d37c0f5ea74492942f066b2449093bbb08"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTI0Mjg2OnYy", "diffSide": "RIGHT", "path": "prerequisites-check.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMzo0MjowMFrOF1zZAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMzo0MjowMFrOF1zZAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk2MDgzMg==", "bodyText": "commend => command? Is it typo?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2694#discussion_r391960832", "createdAt": "2020-03-12T23:42:00Z", "author": {"login": "scholzj"}, "path": "prerequisites-check.sh", "diffHunk": "@@ -0,0 +1,19 @@\n+#!/usr/bin/env bash\n+\n+RED=\"\\033[0;31m\"\n+NO_COLOUR=\"\\033[0m\"\n+\n+function check_commend_present() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7db123d715203f28f767cf4a1cfae4a720405a"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 300, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}