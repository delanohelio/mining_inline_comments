{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMTcyOTg1", "number": 2904, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTowODoxMVrOD3PcqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODo0ODo1NlrOD3VWaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjUxMzY4OnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTowODoxMVrOGNY1YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTowODoxMVrOGNY1YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5MTU1Mw==", "bodyText": "I don't think that's really needed to wait for secret is ready here - also it's not needed after user creation, because we check this when we are creating the KafkaUser", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2904#discussion_r416691553", "createdAt": "2020-04-28T15:08:11Z", "author": {"login": "im-konge"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java", "diffHunk": "@@ -424,7 +422,7 @@ void autoReplaceSomeKeysTriggeredByAnno(final List<String> secrets,\n             internalKafkaClient.receiveMessagesPlain()\n         );\n \n-        SecretUtils.waitForSecretReady(bobUserName);\n+        SecretUtils.waitForSecretReady(user.getMetadata().getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9ab13e2c15ce4c4c8f762348a15dfb87b29258"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjUyMjU2OnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/bridge/HttpBridgeScramShaST.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNToxMDowMlrOGNY7FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNToxMDowMlrOGNY7FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5MzAxMw==", "bodyText": "Same as above", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2904#discussion_r416693013", "createdAt": "2020-04-28T15:10:02Z", "author": {"login": "im-konge"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/bridge/HttpBridgeScramShaST.java", "diffHunk": "@@ -207,12 +203,12 @@ void setup() throws InterruptedException {\n             .endSpec().done();\n \n         // Create Kafka user\n-        KafkaUserResource.scramShaUser(CLUSTER_NAME, userName).done();\n-        SecretUtils.waitForSecretReady(userName);\n+        KafkaUserResource.scramShaUser(CLUSTER_NAME, USER_NAME).done();\n+        SecretUtils.waitForSecretReady(USER_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9ab13e2c15ce4c4c8f762348a15dfb87b29258"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MzQ4MDczOnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/AbstractKafkaClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODo0ODo1NlrOGNiKZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo0MjoxMVrOGNzOzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg0NDM5MQ==", "bodyText": "wrong Javadoc", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2904#discussion_r416844391", "createdAt": "2020-04-28T18:48:56Z", "author": {"login": "ppatierno"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/AbstractKafkaClient.java", "diffHunk": "@@ -167,6 +172,16 @@ protected static String getExternalBootstrapConnect(String namespace, String clu\n         }\n     }\n \n+    /**\n+     * Generated random name for the KafkaUser resource", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9ab13e2c15ce4c4c8f762348a15dfb87b29258"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNDA0Ng==", "bodyText": "Thanks :)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2904#discussion_r417124046", "createdAt": "2020-04-29T07:42:11Z", "author": {"login": "see-quick"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/AbstractKafkaClient.java", "diffHunk": "@@ -167,6 +172,16 @@ protected static String getExternalBootstrapConnect(String namespace, String clu\n         }\n     }\n \n+    /**\n+     * Generated random name for the KafkaUser resource", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg0NDM5MQ=="}, "originalCommit": {"oid": "2e9ab13e2c15ce4c4c8f762348a15dfb87b29258"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 242, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}