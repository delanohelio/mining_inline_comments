{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MjEyNDEy", "number": 2568, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMTowMTo0MFrODgpszg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMTozNjo1NFrODg3JNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NTY0MjM4OnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/RollingUpdateST.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMTowMTo0MFrOFq-INg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMTozNzozNlrOFrTVbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYwMjQyMg==", "bodyText": "Why do you use JBOD instead of classic persistent storage?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2568#discussion_r380602422", "createdAt": "2020-02-18T11:01:40Z", "author": {"login": "Frawless"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/RollingUpdateST.java", "diffHunk": "@@ -229,15 +232,36 @@ void testKafkaAndZookeeperScaleUpScaleDown() throws Exception {\n         LOGGER.info(\"Scaling up to {}\", scaleTo);\n         // Create snapshot of current cluster\n         String kafkaStsName = kafkaStatefulSetName(CLUSTER_NAME);\n-        KafkaResource.replaceKafkaResource(CLUSTER_NAME, k -> k.getSpec().getKafka().setReplicas(scaleTo));\n+\n+        KafkaResource.replaceKafkaResource(CLUSTER_NAME, kafka -> {\n+            kafka.getSpec().getKafka().setReplicas(scaleTo);\n+\n+            JbodStorage jbodStorage =  new JbodStorageBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ccf8f9085272eafec2ccb1ef04ad80596ee830b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcwOTI1MQ==", "bodyText": "So as far as i know, we do not have a persistent storage. We have only persistent claim storage and with that JBOD can consist list of EphemeralStorage or PersistentClaimStorage  = https://strimzi.io/docs/master/#type-PersistentClaimStorageOverride-reference. But i am not sure about it. Does it make sense?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2568#discussion_r380709251", "createdAt": "2020-02-18T14:34:38Z", "author": {"login": "see-quick"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/RollingUpdateST.java", "diffHunk": "@@ -229,15 +232,36 @@ void testKafkaAndZookeeperScaleUpScaleDown() throws Exception {\n         LOGGER.info(\"Scaling up to {}\", scaleTo);\n         // Create snapshot of current cluster\n         String kafkaStsName = kafkaStatefulSetName(CLUSTER_NAME);\n-        KafkaResource.replaceKafkaResource(CLUSTER_NAME, k -> k.getSpec().getKafka().setReplicas(scaleTo));\n+\n+        KafkaResource.replaceKafkaResource(CLUSTER_NAME, kafka -> {\n+            kafka.getSpec().getKafka().setReplicas(scaleTo);\n+\n+            JbodStorage jbodStorage =  new JbodStorageBuilder()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYwMjQyMg=="}, "originalCommit": {"oid": "9ccf8f9085272eafec2ccb1ef04ad80596ee830b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk0OTg3MQ==", "bodyText": "Using Jbod alone would be ok. But I suspect you are using it wrongly. Please see my comment.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2568#discussion_r380949871", "createdAt": "2020-02-18T21:37:36Z", "author": {"login": "scholzj"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/RollingUpdateST.java", "diffHunk": "@@ -229,15 +232,36 @@ void testKafkaAndZookeeperScaleUpScaleDown() throws Exception {\n         LOGGER.info(\"Scaling up to {}\", scaleTo);\n         // Create snapshot of current cluster\n         String kafkaStsName = kafkaStatefulSetName(CLUSTER_NAME);\n-        KafkaResource.replaceKafkaResource(CLUSTER_NAME, k -> k.getSpec().getKafka().setReplicas(scaleTo));\n+\n+        KafkaResource.replaceKafkaResource(CLUSTER_NAME, kafka -> {\n+            kafka.getSpec().getKafka().setReplicas(scaleTo);\n+\n+            JbodStorage jbodStorage =  new JbodStorageBuilder()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYwMjQyMg=="}, "originalCommit": {"oid": "9ccf8f9085272eafec2ccb1ef04ad80596ee830b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1Nzg0NTAwOnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/RollingUpdateST.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMTozNjo1NFrOFrTUHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMTozNjo1NFrOFrTUHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk0OTUzNQ==", "bodyText": "I don't get it. This adds JbodStorage with 7 volumes for each broker:\n\ni.e. 49 disks in total. So as a result, the counting later will not work because you expect only 7 / 3 volumes.\nYou actually need to have similar storage configuration when you deploy the cluster, otherwise the CO will just ignore this change (which I guess is what happens because I guess you tried it and it is passing?)\n\nI think this whole block can be easily removed.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2568#discussion_r380949535", "createdAt": "2020-02-18T21:36:54Z", "author": {"login": "scholzj"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/RollingUpdateST.java", "diffHunk": "@@ -229,15 +232,36 @@ void testKafkaAndZookeeperScaleUpScaleDown() throws Exception {\n         LOGGER.info(\"Scaling up to {}\", scaleTo);\n         // Create snapshot of current cluster\n         String kafkaStsName = kafkaStatefulSetName(CLUSTER_NAME);\n-        KafkaResource.replaceKafkaResource(CLUSTER_NAME, k -> k.getSpec().getKafka().setReplicas(scaleTo));\n+\n+        KafkaResource.replaceKafkaResource(CLUSTER_NAME, kafka -> {\n+            kafka.getSpec().getKafka().setReplicas(scaleTo);\n+\n+            JbodStorage jbodStorage =  new JbodStorageBuilder()\n+                    .withVolumes(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ccf8f9085272eafec2ccb1ef04ad80596ee830b"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 478, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}