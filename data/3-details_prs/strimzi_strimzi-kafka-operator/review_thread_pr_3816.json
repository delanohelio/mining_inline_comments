{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MDkwODMz", "number": 3816, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTozMzo1NFrOEuDd2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTozNTo1OFrOEuDhpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzI2NzQ2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/strimzi/api/kafka/model/CruiseControlSpec.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTozMzo1NFrOHiN2iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTo0MzoyMlrOHiORaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MDU4Nw==", "bodyText": "Missing a comma after webserver.http.cors.enabled", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3816#discussion_r505640587", "createdAt": "2020-10-15T15:33:54Z", "author": {"login": "kyguy"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/CruiseControlSpec.java", "diffHunk": "@@ -38,7 +38,8 @@\n         + \"webserver.http., webserver.api.urlprefix, webserver.session.path, webserver.accesslog., two.step., request.reason.required,\"\n         + \"metric.reporter.sampler.bootstrap.servers, metric.reporter.topic, partition.metric.sample.store.topic, broker.metric.sample.store.topic,\"\n         + \"capacity.config.file, self.healing., anomaly.detection., ssl.\";\n-    public static final String FORBIDDEN_PREFIX_EXCEPTIONS = \"ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols\";\n+    public static final String FORBIDDEN_PREFIX_EXCEPTIONS = \"ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols, webserver.http.cors.enabled\" +\n+            \"webserver.http.cors.origin, webserver.http.cors.exposeheaders\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e241061cfcba4ff70255dd18de3f781bc0988064"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0NzQ2NQ==", "bodyText": "Fixed", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3816#discussion_r505647465", "createdAt": "2020-10-15T15:43:22Z", "author": {"login": "EmilMichalczewski"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/CruiseControlSpec.java", "diffHunk": "@@ -38,7 +38,8 @@\n         + \"webserver.http., webserver.api.urlprefix, webserver.session.path, webserver.accesslog., two.step., request.reason.required,\"\n         + \"metric.reporter.sampler.bootstrap.servers, metric.reporter.topic, partition.metric.sample.store.topic, broker.metric.sample.store.topic,\"\n         + \"capacity.config.file, self.healing., anomaly.detection., ssl.\";\n-    public static final String FORBIDDEN_PREFIX_EXCEPTIONS = \"ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols\";\n+    public static final String FORBIDDEN_PREFIX_EXCEPTIONS = \"ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols, webserver.http.cors.enabled\" +\n+            \"webserver.http.cors.origin, webserver.http.cors.exposeheaders\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MDU4Nw=="}, "originalCommit": {"oid": "e241061cfcba4ff70255dd18de3f781bc0988064"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzI3NzE4OnYy", "diffSide": "RIGHT", "path": "docker-images/kafka/cruise-control-scripts/cruise_control_config_generator.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTozNTo1OFrOHiN8bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjoxNToyOFrOHiPqbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MjA5Mw==", "bodyText": "Why does this need to be there by default? How does CC handle it when the users configure the same?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3816#discussion_r505642093", "createdAt": "2020-10-15T15:35:58Z", "author": {"login": "scholzj"}, "path": "docker-images/kafka/cruise-control-scripts/cruise_control_config_generator.sh", "diffHunk": "@@ -42,6 +42,7 @@ capacity.config.file=$CC_CAPACITY_FILE\n cluster.configs.file=$CC_CLUSTER_CONFIG_FILE\n webserver.accesslog.path=$CC_ACCESS_LOG\n webserver.http.address=0.0.0.0\n+webserver.http.cors.allowmethods=OPTIONS,GET", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e241061cfcba4ff70255dd18de3f781bc0988064"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY3MDI1Mw==", "bodyText": "We want to grant read-only access to the CC API from other origins but only read-only access. This configuration option is forbidden so users cannot give themselves write access to the CC API by adding the \"POST\" value to this configuration option. It will be ignored if a user tries to configure this option", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3816#discussion_r505670253", "createdAt": "2020-10-15T16:15:28Z", "author": {"login": "kyguy"}, "path": "docker-images/kafka/cruise-control-scripts/cruise_control_config_generator.sh", "diffHunk": "@@ -42,6 +42,7 @@ capacity.config.file=$CC_CAPACITY_FILE\n cluster.configs.file=$CC_CLUSTER_CONFIG_FILE\n webserver.accesslog.path=$CC_ACCESS_LOG\n webserver.http.address=0.0.0.0\n+webserver.http.cors.allowmethods=OPTIONS,GET", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MjA5Mw=="}, "originalCommit": {"oid": "e241061cfcba4ff70255dd18de3f781bc0988064"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 932, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}