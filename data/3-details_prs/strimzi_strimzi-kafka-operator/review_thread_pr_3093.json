{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMDgwNTc4", "number": 3093, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOTo1NjoxNVrOD_mr0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOTo1NjozMlrOD_msKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDIwNjkwOnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Consumer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOTo1NjoxNVrOGaXHxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOTo1NjoxNVrOGaXHxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI5NDk4Mw==", "bodyText": "Could you please add here client name/id ?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3093#discussion_r430294983", "createdAt": "2020-05-26T09:56:15Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Consumer.java", "diffHunk": "@@ -65,8 +65,11 @@ protected void handleClient() {\n \n     @Override\n     public void close() {\n-        LOGGER.info(\"Closing Vert.x instance for the client {}\", this.getClass().getName());\n         if (vertx != null) {\n+            LOGGER.info(\"Closing Consumer instance {}\", consumer.getClass().getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "686c79c34a31975692347c4df687585f608847ca"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDIwNzM5OnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Producer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOTo1NjoyNVrOGaXIEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOTo1NjoyNVrOGaXIEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI5NTA1OA==", "bodyText": "Same as above", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3093#discussion_r430295058", "createdAt": "2020-05-26T09:56:25Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Producer.java", "diffHunk": "@@ -50,30 +53,34 @@ protected void handleClient() {\n \n         LOGGER.info(\"Producer is starting with following properties: {}\", properties.getProperties().toString());\n \n-        KafkaProducer<String, String> producer = KafkaProducer.create(vertx, properties.getProperties());\n-\n         if (msgCntPredicate.test(-1)) {\n             vertx.eventBus().consumer(clientName, msg -> {\n                 if (msg.body().equals(\"stop\")) {\n                     LOGGER.debug(\"Received stop command! Produced messages: {}\", numSent.get());\n                     resultPromise.complete(numSent.get());\n                 }\n             });\n-            vertx.setPeriodic(1000, id -> sendNext(producer, topic));\n+            vertx.setPeriodic(1000, id -> sendNext(topic));\n         } else {\n-            sendNext(producer, topic);\n+            sendNext(topic);\n         }\n     }\n \n     @Override\n     public void close() {\n-        LOGGER.info(\"Closing Vert.x instance for the client {}\", this.getClass().getName());\n         if (vertx != null) {\n+\n+            LOGGER.info(\"Closing Producer instance {}\", producer.getClass().getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "686c79c34a31975692347c4df687585f608847ca"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDIwNzc2OnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Producer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOTo1NjozMlrOGaXIUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOTo1NjozMlrOGaXIUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI5NTEyMg==", "bodyText": "Same as above", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3093#discussion_r430295122", "createdAt": "2020-05-26T09:56:32Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Producer.java", "diffHunk": "@@ -50,30 +53,34 @@ protected void handleClient() {\n \n         LOGGER.info(\"Producer is starting with following properties: {}\", properties.getProperties().toString());\n \n-        KafkaProducer<String, String> producer = KafkaProducer.create(vertx, properties.getProperties());\n-\n         if (msgCntPredicate.test(-1)) {\n             vertx.eventBus().consumer(clientName, msg -> {\n                 if (msg.body().equals(\"stop\")) {\n                     LOGGER.debug(\"Received stop command! Produced messages: {}\", numSent.get());\n                     resultPromise.complete(numSent.get());\n                 }\n             });\n-            vertx.setPeriodic(1000, id -> sendNext(producer, topic));\n+            vertx.setPeriodic(1000, id -> sendNext(topic));\n         } else {\n-            sendNext(producer, topic);\n+            sendNext(topic);\n         }\n     }\n \n     @Override\n     public void close() {\n-        LOGGER.info(\"Closing Vert.x instance for the client {}\", this.getClass().getName());\n         if (vertx != null) {\n+\n+            LOGGER.info(\"Closing Producer instance {}\", producer.getClass().getName());\n+            if (producer != null) {\n+                producer.close();\n+            }\n+\n+            LOGGER.info(\"Closing Vert.x instance for the client {}\", this.getClass().getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "686c79c34a31975692347c4df687585f608847ca"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 116, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}