{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MjM3MTUx", "number": 3843, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODoxMToyNlrOEwpefA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMDoyMToxNFrOEx1eqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NDQ2NjUyOnYy", "diffSide": "RIGHT", "path": "docker-images/development/Dockerfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODoxMToyNlrOHmVtrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODoyMDozOVrOHmWFaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk2MzY5Mg==", "bodyText": "Does this file belong here?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3843#discussion_r509963692", "createdAt": "2020-10-22T08:11:26Z", "author": {"login": "scholzj"}, "path": "docker-images/development/Dockerfile", "diffHunk": "@@ -0,0 +1,43 @@\n+FROM strimzi/base:latest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ff3a21b5c741538e70dcae1e9fa0a1294880414"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk2OTc3MQ==", "bodyText": "Sorry, leftover from my work with strimzi-cli image. Going to remove it.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3843#discussion_r509969771", "createdAt": "2020-10-22T08:20:39Z", "author": {"login": "Frawless"}, "path": "docker-images/development/Dockerfile", "diffHunk": "@@ -0,0 +1,43 @@\n+FROM strimzi/base:latest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk2MzY5Mg=="}, "originalCommit": {"oid": "5ff3a21b5c741538e70dcae1e9fa0a1294880414"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NDUyNzQ2OnYy", "diffSide": "RIGHT", "path": "docker-images/development/Dockerfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODoyNjoxMFrOHmWUFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODoyNjoxMFrOHmWUFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk3MzUyNw==", "bodyText": "Just reminder -> leftover.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3843#discussion_r509973527", "createdAt": "2020-10-22T08:26:10Z", "author": {"login": "im-konge"}, "path": "docker-images/development/Dockerfile", "diffHunk": "@@ -0,0 +1,43 @@\n+FROM strimzi/base:latest\n+\n+ARG DOCKER_URL=https://download.docker.com/linux/centos/7/x86_64/stable/Packages/docker-ce-19.03.9-3.el7.x86_64.rpm\n+\n+RUN yum install -y ${DOCKER_URL}\n+\n+\n+RUN yum update -y \\\n+  && yum install -y https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm \\\n+  && yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo \\\n+  && yum install -y which java-1.8.0-openjdk-devel make git unzip ruby yum-utils device-mapper-persistent-data lvm2 openssl docker-ce \\\n+  && gem install asciidoctor \\\n+  && echo \"export JAVA_HOME=/etc/alternatives/java_sdk_openjdk\" >> /root/.bash_profile \\\n+  && echo \"Build 2020-04-28T09:02:00\" > /root/VERSION\n+RUN echo $'[kubernetes]\\n\\\n+name=Kubernetes\\n\\\n+baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64\\n\\\n+enabled=1\\n\\\n+gpgcheck=1\\n\\\n+repo_gpgcheck=1\\n\\\n+gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg'\\\n+  >> /etc/yum.repos.d/kubernetes.repo \\\n+  && yum install -y kubectl\n+RUN curl -Lo yq \"https://github.com/mikefarah/yq/releases/download/3.2.1/yq_linux_amd64\" \\\n+  && mv yq /usr/local/bin/yq \\\n+  && echo \"11a830ffb72aad0eaa7640ef69637068f36469be4f68a93da822fbe454e998f8 /usr/local/bin/yq\" | sha256sum -c - \\\n+  && chmod +x /usr/local/bin/yq\n+RUN curl -Lo kind \"https://github.com/kubernetes-sigs/kind/releases/download/v0.7.0/kind-linux-amd64\" \\\n+  && mv kind /usr/local/bin/kind \\\n+  && echo \"0e07d5a9d5b8bf410a1ad8a7c8c9c2ea2a4b19eda50f1c629f1afadb7c80fae7 /usr/local/bin/kind\" | sha256sum -c - \\\n+  && chmod +x /usr/local/bin/kind\n+RUN curl -LO \"https://get.helm.sh/helm-v3.1.1-linux-amd64.tar.gz\" \\\n+  && echo \"cdd7ad304e2615c583dde0ffb0cb38fc1336cd7ce8ff3b5f237434dcadb28c98  helm-v3.1.1-linux-amd64.tar.gz\" | sha256sum -c - \\\n+  && tar -zxvf helm-v3.1.1-linux-amd64.tar.gz \\\n+  && mv linux-amd64/helm /usr/local/bin/helm \\\n+  && rm -rf linux-amd64 helm-v3.1.1-linux-amd64.tar.gz\n+RUN curl -LO \"https://downloads.apache.org/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz\" \\\n+  && echo \"26ad91d751b3a9a53087aefa743f4e16a17741d3915b219cf74112bf87a438c5 apache-maven-3.6.3-bin.tar.gz\" | sha256sum -c - \\\n+  && cd /opt \\\n+  && tar -zxvf /apache-maven-3.6.3-bin.tar.gz \\\n+  && ln -s -t /usr/local/bin /opt/apache-maven-3.6.3/bin/{mvn,mvnDebug} \\\n+  && cd / && rm apache-maven-3.6.3-bin.tar.gz\n+ENV PS1=\"strimzi-cli:\\W\\\\$ \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ff3a21b5c741538e70dcae1e9fa0a1294880414"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NDU0NTUwOnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/StUtils.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODozMDozNlrOHmWfnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMTozMjowNFrOHmdRDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk3NjQ3OQ==", "bodyText": "This looks little bit weird for me -> if you have plainAuth, you can simply just add the false and you don't have to add another boolean ... same for the tls.. and if you want to keep it like this the names are bit confusing plainTls and tlsTls..", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3843#discussion_r509976479", "createdAt": "2020-10-22T08:30:36Z", "author": {"login": "im-konge"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/StUtils.java", "diffHunk": "@@ -202,10 +202,10 @@ public static JsonArray expectedServiceDiscoveryInfo(int port, String protocol,\n         return jsonArray;\n     }\n \n-    public static JsonArray expectedServiceDiscoveryInfo(String plainAuth, String tlsAuth) {\n+    public static JsonArray expectedServiceDiscoveryInfo(String plainAuth, String tlsAuth, boolean plainTls, boolean tlsTls) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ff3a21b5c741538e70dcae1e9fa0a1294880414"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk4OTE4OA==", "bodyText": "it makes sense for plain, but how do you want to determine form one value, that you have tls encryption on the listener without authentication?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3843#discussion_r509989188", "createdAt": "2020-10-22T08:49:28Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/StUtils.java", "diffHunk": "@@ -202,10 +202,10 @@ public static JsonArray expectedServiceDiscoveryInfo(int port, String protocol,\n         return jsonArray;\n     }\n \n-    public static JsonArray expectedServiceDiscoveryInfo(String plainAuth, String tlsAuth) {\n+    public static JsonArray expectedServiceDiscoveryInfo(String plainAuth, String tlsAuth, boolean plainTls, boolean tlsTls) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk3NjQ3OQ=="}, "originalCommit": {"oid": "5ff3a21b5c741538e70dcae1e9fa0a1294880414"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA0OTA4Mg==", "bodyText": "hmm okay, that makes sense, so maybe add some javadoc explaining the plainTls and tlsTls -> that it's for auth and encryption?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3843#discussion_r510049082", "createdAt": "2020-10-22T10:22:05Z", "author": {"login": "im-konge"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/StUtils.java", "diffHunk": "@@ -202,10 +202,10 @@ public static JsonArray expectedServiceDiscoveryInfo(int port, String protocol,\n         return jsonArray;\n     }\n \n-    public static JsonArray expectedServiceDiscoveryInfo(String plainAuth, String tlsAuth) {\n+    public static JsonArray expectedServiceDiscoveryInfo(String plainAuth, String tlsAuth, boolean plainTls, boolean tlsTls) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk3NjQ3OQ=="}, "originalCommit": {"oid": "5ff3a21b5c741538e70dcae1e9fa0a1294880414"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA1MDAzNg==", "bodyText": "sorry, I didn't figured it out just by the names :D but I guess that's problem on my side", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3843#discussion_r510050036", "createdAt": "2020-10-22T10:23:54Z", "author": {"login": "im-konge"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/StUtils.java", "diffHunk": "@@ -202,10 +202,10 @@ public static JsonArray expectedServiceDiscoveryInfo(int port, String protocol,\n         return jsonArray;\n     }\n \n-    public static JsonArray expectedServiceDiscoveryInfo(String plainAuth, String tlsAuth) {\n+    public static JsonArray expectedServiceDiscoveryInfo(String plainAuth, String tlsAuth, boolean plainTls, boolean tlsTls) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk3NjQ3OQ=="}, "originalCommit": {"oid": "5ff3a21b5c741538e70dcae1e9fa0a1294880414"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA4NzQzOA==", "bodyText": "Ye, make sense.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3843#discussion_r510087438", "createdAt": "2020-10-22T11:32:04Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/StUtils.java", "diffHunk": "@@ -202,10 +202,10 @@ public static JsonArray expectedServiceDiscoveryInfo(int port, String protocol,\n         return jsonArray;\n     }\n \n-    public static JsonArray expectedServiceDiscoveryInfo(String plainAuth, String tlsAuth) {\n+    public static JsonArray expectedServiceDiscoveryInfo(String plainAuth, String tlsAuth, boolean plainTls, boolean tlsTls) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk3NjQ3OQ=="}, "originalCommit": {"oid": "5ff3a21b5c741538e70dcae1e9fa0a1294880414"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNjkxODgzOnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/kafka/listeners/ListenersST.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMDoyMToxNFrOHoJESg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNTo1MjoxOFrOHoWPAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg1MzY0Mg==", "bodyText": "Is this intention? Just asking..", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3843#discussion_r511853642", "createdAt": "2020-10-26T10:21:14Z", "author": {"login": "im-konge"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/kafka/listeners/ListenersST.java", "diffHunk": "@@ -68,14 +68,15 @@\n public class ListenersST extends AbstractST {\n     private static final Logger LOGGER = LogManager.getLogger(ListenersST.class);\n \n-    public static final String NAMESPACE = \"kafka-listeners-cluster-test\";\n+    public static final String NAMESPACE = \"listeners\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9797813436ed5f8a5a345a1d2d918a5c85f14819"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA1NDQwMA==", "bodyText": "Yes, the previous name was problematic, because route name was too long.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3843#discussion_r512054400", "createdAt": "2020-10-26T15:33:18Z", "author": {"login": "Frawless"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/kafka/listeners/ListenersST.java", "diffHunk": "@@ -68,14 +68,15 @@\n public class ListenersST extends AbstractST {\n     private static final Logger LOGGER = LogManager.getLogger(ListenersST.class);\n \n-    public static final String NAMESPACE = \"kafka-listeners-cluster-test\";\n+    public static final String NAMESPACE = \"listeners\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg1MzY0Mg=="}, "originalCommit": {"oid": "9797813436ed5f8a5a345a1d2d918a5c85f14819"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA2OTM3OQ==", "bodyText": "Yep okay, thanks.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3843#discussion_r512069379", "createdAt": "2020-10-26T15:52:18Z", "author": {"login": "im-konge"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/kafka/listeners/ListenersST.java", "diffHunk": "@@ -68,14 +68,15 @@\n public class ListenersST extends AbstractST {\n     private static final Logger LOGGER = LogManager.getLogger(ListenersST.class);\n \n-    public static final String NAMESPACE = \"kafka-listeners-cluster-test\";\n+    public static final String NAMESPACE = \"listeners\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg1MzY0Mg=="}, "originalCommit": {"oid": "9797813436ed5f8a5a345a1d2d918a5c85f14819"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 946, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}