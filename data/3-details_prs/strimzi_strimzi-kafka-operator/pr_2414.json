{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNzI2NzUx", "number": 2414, "title": "[DOC] Configure broker certificates per listener", "bodyText": "Type of change\n\nDocumentation\n\nDescription\nThis pull request adds documentation on installing certificates on a per-listener basis (for TLS and external listeners). It updates the Kafka cluster configuration section and the Security chapter.\nIt also reinstates the following procedure that was hidden (commented out) from the documentation:\n\"Renewing your own CA certificates\"\nIt also includes a minor fix to an unrelated procedure:\n\"Deploying a KafkaConnector resource to Kafka Connect\"\nChecklist\nPlease go through this checklist and make sure all applicable tasks have been done\n\n Update/write design documentation in ./design\n Write tests\n Make sure all tests pass\n Update documentation\n Check RBAC rights for Kubernetes / OpenShift roles\n Try your changes from Pod inside your Kubernetes and OpenShift cluster, not just locally\n Reference relevant issue(s) and close them after merging\n Update CHANGELOG.md", "createdAt": "2020-01-16T16:12:06Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414", "merged": true, "mergeCommit": {"oid": "5a79f630826d811207e614c7521038e311fbe4d2"}, "closed": true, "closedAt": "2020-01-27T16:13:05Z", "author": {"login": "laidan6000"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6knD3gH2gAyMzYzNzI2NzUxOmE1MGU3YmYzN2ZkMDJiNWE3MTc1NjkwOTA4NjdhMTQxYWYxZDhhZDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-ZtzCgH2gAyMzYzNzI2NzUxOjA3YWYyMTg4NmJkMzU2MWE2Mzk2YzMzMWY3OTdkODU2YTQ5OTk2YjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a50e7bf37fd02b5a717569090867a141af1d8ad5", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a50e7bf37fd02b5a717569090867a141af1d8ad5", "committedDate": "2020-01-15T12:21:47Z", "message": "Initial edits.\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa02bba7831f1fed73df84925f97a20e1dff5de9", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/fa02bba7831f1fed73df84925f97a20e1dff5de9", "committedDate": "2020-01-15T17:44:06Z", "message": "New procedure - installing per-listener certs\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7035bd06f54c41ceccb24025ad1239a5c509448f", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7035bd06f54c41ceccb24025ad1239a5c509448f", "committedDate": "2020-01-16T15:53:32Z", "message": "Further updates\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "789e6416a33b6cbb87f44a797c8ff10d531a0f3e", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/789e6416a33b6cbb87f44a797c8ff10d531a0f3e", "committedDate": "2020-01-16T16:12:57Z", "message": "Minor change to wording\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0Mzk2NjEw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#pullrequestreview-344396610", "createdAt": "2020-01-17T07:14:53Z", "commit": {"oid": "789e6416a33b6cbb87f44a797c8ff10d531a0f3e"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNzoxNDo1M1rOFewgjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNzoxNDo1M1rOFewgjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc5NjM2NA==", "bodyText": "I am not sure about mentioning Strimzi here. Should we use {ProductName}?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r367796364", "createdAt": "2020-01-17T07:14:53Z", "author": {"login": "sknot-rh"}, "path": "documentation/modules/security/proc-installing-certs-per-listener.adoc", "diffHunk": "@@ -0,0 +1,83 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='proc-installing-certs-per-listener-{context}']\n+= Installing your own CA certificates for listeners\n+\n+You can install your own certificates and public keys for Kafka brokers on a per-listener basis. These certificates can be signed by an external Certificate Authority (CA), such as your company's internal CA or a public CA, rather than the cluster or clients CAs (which are internal to Strimzi). Installing per-listener certificates is supported for two types of listeners:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "789e6416a33b6cbb87f44a797c8ff10d531a0f3e"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NTE5OTM5", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#pullrequestreview-344519939", "createdAt": "2020-01-17T11:29:50Z", "commit": {"oid": "789e6416a33b6cbb87f44a797c8ff10d531a0f3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMToyOTo1MFrOFe2WEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMToyOTo1MFrOFe2WEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5MTk4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * At a cluster level--see xref:installing-your-own-ca-certificates-{context}[].\n          \n          \n            \n            * At the cluster level--see xref:installing-your-own-ca-certificates-{context}[].", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r367891984", "createdAt": "2020-01-17T11:29:50Z", "author": {"login": "PaulRMellor"}, "path": "documentation/modules/security/con-certificate-authorities.adoc", "diffHunk": "@@ -26,3 +26,15 @@ You can configure the validity period of:\n \n * Cluster CA certificates in `Kafka.spec.clusterCa.validityDays`\n * Client CA certificates in `Kafka.spec.clientsCa.validityDays`\n+\n+== Options for installing your own CA certificates\n+\n+In your security model, client applications might need to trust certificates that were issued by an external CA, such as your company's internal CA or a public CA, in order to connect to external systems. {ProductName} provides two methods for configuring your Kafka client applications to connect to the brokers in your Kafka cluster using your own certificates.\n+\n+You can install your own certificates at two levels:\n+\n+* At a cluster level--see xref:installing-your-own-ca-certificates-{context}[].", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "789e6416a33b6cbb87f44a797c8ff10d531a0f3e"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NTIwNzMw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#pullrequestreview-344520730", "createdAt": "2020-01-17T11:31:28Z", "commit": {"oid": "789e6416a33b6cbb87f44a797c8ff10d531a0f3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMTozMToyOFrOFe2YfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMTozMToyOFrOFe2YfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5MjYwNA==", "bodyText": "TLS and external or TLS or external?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r367892604", "createdAt": "2020-01-17T11:31:28Z", "author": {"login": "PaulRMellor"}, "path": "documentation/modules/security/con-certificate-authorities.adoc", "diffHunk": "@@ -26,3 +26,15 @@ You can configure the validity period of:\n \n * Cluster CA certificates in `Kafka.spec.clusterCa.validityDays`\n * Client CA certificates in `Kafka.spec.clientsCa.validityDays`\n+\n+== Options for installing your own CA certificates\n+\n+In your security model, client applications might need to trust certificates that were issued by an external CA, such as your company's internal CA or a public CA, in order to connect to external systems. {ProductName} provides two methods for configuring your Kafka client applications to connect to the brokers in your Kafka cluster using your own certificates.\n+\n+You can install your own certificates at two levels:\n+\n+* At a cluster level--see xref:installing-your-own-ca-certificates-{context}[].\n+\n+* For each listener (TLS and external) in a Kafka broker--see xref:proc-installing-certs-per-listener-{context}[].", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "789e6416a33b6cbb87f44a797c8ff10d531a0f3e"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NTIyMDgz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#pullrequestreview-344522083", "createdAt": "2020-01-17T11:34:29Z", "commit": {"oid": "789e6416a33b6cbb87f44a797c8ff10d531a0f3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMTozNDozMFrOFe2cuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMTozNDozMFrOFe2cuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5MzY4OQ==", "bodyText": "Couple of mentions of security model. Would that be understood? How might it reflect on the manual renewal? Maybe we can drop and just say you need to manually renew the certs.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r367893689", "createdAt": "2020-01-17T11:34:30Z", "author": {"login": "PaulRMellor"}, "path": "documentation/modules/security/con-certificate-authorities.adoc", "diffHunk": "@@ -26,3 +26,15 @@ You can configure the validity period of:\n \n * Cluster CA certificates in `Kafka.spec.clusterCa.validityDays`\n * Client CA certificates in `Kafka.spec.clientsCa.validityDays`\n+\n+== Options for installing your own CA certificates\n+\n+In your security model, client applications might need to trust certificates that were issued by an external CA, such as your company's internal CA or a public CA, in order to connect to external systems. {ProductName} provides two methods for configuring your Kafka client applications to connect to the brokers in your Kafka cluster using your own certificates.\n+\n+You can install your own certificates at two levels:\n+\n+* At a cluster level--see xref:installing-your-own-ca-certificates-{context}[].\n+\n+* For each listener (TLS and external) in a Kafka broker--see xref:proc-installing-certs-per-listener-{context}[].\n+\n+If you install your own certificates using one or both of these methods, they are not automatically renewed by the Cluster Operator. You must manually renew certificates according to your security model.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "789e6416a33b6cbb87f44a797c8ff10d531a0f3e"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NTIyNDg2", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#pullrequestreview-344522486", "createdAt": "2020-01-17T11:35:26Z", "commit": {"oid": "789e6416a33b6cbb87f44a797c8ff10d531a0f3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMTozNToyN1rOFe2d4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMTozNToyN1rOFe2d4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5Mzk4Nw==", "bodyText": "Not sure this needs to be in brackets: (which are internal to Strimzi)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r367893987", "createdAt": "2020-01-17T11:35:27Z", "author": {"login": "PaulRMellor"}, "path": "documentation/modules/security/proc-installing-certs-per-listener.adoc", "diffHunk": "@@ -0,0 +1,83 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='proc-installing-certs-per-listener-{context}']\n+= Installing your own CA certificates for listeners\n+\n+You can install your own certificates and public keys for Kafka brokers on a per-listener basis. These certificates can be signed by an external Certificate Authority (CA), such as your company's internal CA or a public CA, rather than the cluster or clients CAs (which are internal to Strimzi). Installing per-listener certificates is supported for two types of listeners:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "789e6416a33b6cbb87f44a797c8ff10d531a0f3e"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NTI0NDEx", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#pullrequestreview-344524411", "createdAt": "2020-01-17T11:39:38Z", "commit": {"oid": "789e6416a33b6cbb87f44a797c8ff10d531a0f3e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c39fe0461f71379d2efa9e4cdb408efefd8f266", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/4c39fe0461f71379d2efa9e4cdb408efefd8f266", "committedDate": "2020-01-17T12:29:19Z", "message": "Missing ProductName attribute\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTM0MzU4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#pullrequestreview-344934358", "createdAt": "2020-01-18T09:14:43Z", "commit": {"oid": "4c39fe0461f71379d2efa9e4cdb408efefd8f266"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwOToxNDo0M1rOFfKKiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwOToyNDoxN1rOFfKMZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxNjcxMg==", "bodyText": "I think this part is misleading. This section talks about broker specific config properties that you find in the official Apache Kafka documentation. There is no parameter for specifying \"per-broker certificates\" which is something that Strimzi adds. The sentece in parenthesis let me think that I can, in this config section, set \"per-broker certificates\" as the only listener configuration part. It's not clear that this happens in a different way and not here.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r368216712", "createdAt": "2020-01-18T09:14:43Z", "author": {"login": "ppatierno"}, "path": "documentation/assemblies/assembly-kafka-broker-configuration.adoc", "diffHunk": "@@ -14,7 +14,7 @@\n You can specify and configure most of the options listed in the \"Broker Configs\" section of the {ApacheKafkaBrokerConfig}. You cannot configure options that are related to the following areas:\n \n * Security (Encryption, Authentication, and Authorization)\n-* Listener configuration\n+* Listener configuration (apart from installing per-broker certificates)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c39fe0461f71379d2efa9e4cdb408efefd8f266"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxNjc3Ng==", "bodyText": "why these two changes in this PR. I am for avoiding stuff not related to the PR but opening a new one.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r368216776", "createdAt": "2020-01-18T09:16:06Z", "author": {"login": "ppatierno"}, "path": "documentation/modules/kafkaconnectors/proc-deploying-kafkaconnector.adoc", "diffHunk": "@@ -43,12 +43,12 @@ spec:\n +\n [source,shell,subs=\"+quotes\"]\n ----\n-oc apply -f examples/connector/source-connector.yaml\n+kubectl apply -f examples/connector/source-connector.yaml\n ----\n \n . Check that the resource was created:\n +\n [source,shell,subs=\"+quotes\"]\n ----\n-oc get all --selector strimzi.io/cluster: my-connect-cluster -o name\n+kubectl get all --selector strimzi.io/cluster: my-connect-cluster -o name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c39fe0461f71379d2efa9e4cdb408efefd8f266"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxNjk1Mw==", "bodyText": "\"Client applications that perform mutual TLS authentication must trust the certificates signed by the cluster CA.\".\nMutual TLS authentication is about having the TLS encryption (so somehow trusting the server) but even using TLS client authentication. The client applications must trust the certificates signed by the cluster CA not necessarily for mutual authentication, it's enough you want TLS encryption for having the need of trusting certificates signed by the cluster CA.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r368216953", "createdAt": "2020-01-18T09:19:53Z", "author": {"login": "ppatierno"}, "path": "documentation/modules/security/con-certificate-authorities.adoc", "diffHunk": "@@ -6,16 +6,16 @@\n = Certificate Authorities\n \n To support encryption, each {ProductName} component needs its own private keys and public key certificates.\n-All component certificates are signed by a Certificate Authority (CA) called the _cluster CA_.\n+All component certificates are signed by an internal Certificate Authority (CA) called the _cluster CA_.\n \n-Similarly, each Kafka client application connecting using TLS client authentication needs private keys and certificates.\n-The _clients CA_ is used to sign the certificates for the Kafka clients.\n+Similarly, each Kafka client application connecting to {ProductName} using TLS client authentication needs to provide private keys and certificates.\n+A second internal CA, named the _clients CA_, is used to sign certificates for the Kafka clients. \n \n == CA certificates\n \n-Each CA has a self-signed public key certificate.\n+Both the cluster CA and the clients CA have a self-signed public key certificate.\n \n-Kafka brokers are configured to trust certificates signed by either the clients CA or the cluster CA. Components to which clients do not need to connect, such as ZooKeeper, only trust certificates signed by the cluster CA. Client applications that perform mutual TLS authentication have to trust the certificates signed by the cluster CA.\n+Kafka brokers are configured to trust certificates signed by either the clients CA or the cluster CA. Components that clients do not need to connect to, such as ZooKeeper, only trust certificates signed by the cluster CA. Client applications that perform mutual TLS authentication must trust the certificates signed by the cluster CA.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c39fe0461f71379d2efa9e4cdb408efefd8f266"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxNzA3Nw==", "bodyText": "I don't think this sentence is needed. Plain listeners aren't encrypted ... they are plain so TLS isn't in place, so having certificates don't make sense.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r368217077", "createdAt": "2020-01-18T09:21:54Z", "author": {"login": "ppatierno"}, "path": "documentation/modules/security/proc-installing-certs-per-listener.adoc", "diffHunk": "@@ -0,0 +1,83 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='proc-installing-certs-per-listener-{context}']\n+= Installing your own CA certificates for listeners\n+\n+You can install your own certificates and public keys for Kafka brokers on a per-listener basis. These certificates can be signed by an external Certificate Authority (CA), such as your company's internal CA or a public CA, rather than the cluster or clients CAs (which are internal to {ProductName}). Installing per-listener certificates is supported for two types of listeners:\n+\n+* TLS listeners for inter-cluster communication\n+\n+* External listeners (including `route`, `loadbalancer`, and `nodeport` types) for communication between Kafka clients and Kafka brokers\n+\n+Installing your own certificates and keys for plain listeners is not supported.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c39fe0461f71379d2efa9e4cdb408efefd8f266"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxNzE5MQ==", "bodyText": "CRT is not a format. It's just a possible file extension for a certificate formatted with PEM. Just fyi, other formats are DER, PKCS12, etc etc. In this guess it's enough saying \"...in PEM format\".", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r368217191", "createdAt": "2020-01-18T09:24:17Z", "author": {"login": "ppatierno"}, "path": "documentation/modules/security/proc-installing-certs-per-listener.adoc", "diffHunk": "@@ -0,0 +1,83 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='proc-installing-certs-per-listener-{context}']\n+= Installing your own CA certificates for listeners\n+\n+You can install your own certificates and public keys for Kafka brokers on a per-listener basis. These certificates can be signed by an external Certificate Authority (CA), such as your company's internal CA or a public CA, rather than the cluster or clients CAs (which are internal to {ProductName}). Installing per-listener certificates is supported for two types of listeners:\n+\n+* TLS listeners for inter-cluster communication\n+\n+* External listeners (including `route`, `loadbalancer`, and `nodeport` types) for communication between Kafka clients and Kafka brokers\n+\n+Installing your own certificates and keys for plain listeners is not supported.\n+\n+.Prerequisites\n+\n+* A Kubernetes cluster.\n+* The Cluster Operator is running.\n+* Public key of the external CA.  \n+* Your own X.509 certificate in CRT or PEM format.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c39fe0461f71379d2efa9e4cdb408efefd8f266"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTQ1MTM1", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#pullrequestreview-344945135", "createdAt": "2020-01-18T14:09:20Z", "commit": {"oid": "4c39fe0461f71379d2efa9e4cdb408efefd8f266"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxNDowOToyMFrOFfK5rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxNDoyNDoxN1rOFfK8VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyODc4MA==", "bodyText": "Agree with Paolo, his think this should remain unchanged - ntohing really changed to this and you cannot configure the custom certificates in the config section anyway.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r368228780", "createdAt": "2020-01-18T14:09:20Z", "author": {"login": "scholzj"}, "path": "documentation/assemblies/assembly-kafka-broker-configuration.adoc", "diffHunk": "@@ -14,7 +14,7 @@\n You can specify and configure most of the options listed in the \"Broker Configs\" section of the {ApacheKafkaBrokerConfig}. You cannot configure options that are related to the following areas:\n \n * Security (Encryption, Authentication, and Authorization)\n-* Listener configuration\n+* Listener configuration (apart from installing per-broker certificates)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxNjcxMg=="}, "originalCommit": {"oid": "4c39fe0461f71379d2efa9e4cdb408efefd8f266"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyODgxNQ==", "bodyText": "I wonder if we should call it your own Kafka listener certificates instead. Broker certificates might be confusing since they are not per-broker but per-listener.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r368228815", "createdAt": "2020-01-18T14:10:27Z", "author": {"login": "scholzj"}, "path": "documentation/assemblies/security/assembly-security.adoc", "diffHunk": "@@ -10,9 +10,11 @@ Communication between Kafka brokers (interbroker communication), between ZooKeep\n Communication between Kafka clients and Kafka brokers is encrypted according to how the cluster is configured.\n For the Kafka and {ProductName} components, TLS certificates are also used for authentication.\n \n-The Cluster Operator automatically sets up TLS certificates to enable encryption and authentication within your cluster.\n+The Cluster Operator automatically sets up and renews TLS certificates to enable encryption and authentication within your cluster.\n It also sets up other TLS certificates if you want to enable encryption or TLS authentication between Kafka brokers and clients.\n \n+You can install your own Kafka broker certificates on a per-listener basis.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c39fe0461f71379d2efa9e4cdb408efefd8f266"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyODk2MA==", "bodyText": "I think this mixes two things which are separate concepts:\n\nSuplying your own CA certificates\nSuplying server certficates for the TLS and External listeners.\nThey should either no be mixed into the same chapter named after nly one of these or we need to find new name.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r368228960", "createdAt": "2020-01-18T14:13:34Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/con-certificate-authorities.adoc", "diffHunk": "@@ -26,3 +26,15 @@ You can configure the validity period of:\n \n * Cluster CA certificates in `Kafka.spec.clusterCa.validityDays`\n * Client CA certificates in `Kafka.spec.clientsCa.validityDays`\n+\n+== Options for installing your own CA certificates", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c39fe0461f71379d2efa9e4cdb408efefd8f266"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyODk5OQ==", "bodyText": "I'm not sure the cluster level make sense as a name for it. I would call it Providing your own CA or something.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r368228999", "createdAt": "2020-01-18T14:14:28Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/con-certificate-authorities.adoc", "diffHunk": "@@ -26,3 +26,15 @@ You can configure the validity period of:\n \n * Cluster CA certificates in `Kafka.spec.clusterCa.validityDays`\n * Client CA certificates in `Kafka.spec.clientsCa.validityDays`\n+\n+== Options for installing your own CA certificates\n+\n+In your security model, client applications might need to trust certificates that were issued by an external CA, such as your company's internal CA or a public CA, in order to connect to external systems. {ProductName} provides two methods for configuring your Kafka client applications to connect to the brokers in your Kafka cluster using your own certificates.\n+\n+You can install your own certificates at two levels:\n+\n+* At a cluster level--see xref:installing-your-own-ca-certificates-{context}[].", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c39fe0461f71379d2efa9e4cdb408efefd8f266"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyOTA1Mg==", "bodyText": "I perosnally would probably leave out the in a Kafka broker part.\nAlso - and I'm not sure we need to mention it here - it applies to external listeners using TLS only. But I guess that migth be obvious and does nto need to be mentioned here, or?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r368229052", "createdAt": "2020-01-18T14:15:42Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/con-certificate-authorities.adoc", "diffHunk": "@@ -26,3 +26,15 @@ You can configure the validity period of:\n \n * Cluster CA certificates in `Kafka.spec.clusterCa.validityDays`\n * Client CA certificates in `Kafka.spec.clientsCa.validityDays`\n+\n+== Options for installing your own CA certificates\n+\n+In your security model, client applications might need to trust certificates that were issued by an external CA, such as your company's internal CA or a public CA, in order to connect to external systems. {ProductName} provides two methods for configuring your Kafka client applications to connect to the brokers in your Kafka cluster using your own certificates.\n+\n+You can install your own certificates at two levels:\n+\n+* At a cluster level--see xref:installing-your-own-ca-certificates-{context}[].\n+\n+* For each listener (TLS and external) in a Kafka broker--see xref:proc-installing-certs-per-listener-{context}[].", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c39fe0461f71379d2efa9e4cdb408efefd8f266"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyOTEwNQ==", "bodyText": "I would probably just say You must manually renew certificates when needed. Which could be expiration or whatever security policy the user follows. I would be a bit worried that security model might not have clear meaning and understanding for everyone.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r368229105", "createdAt": "2020-01-18T14:16:42Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/con-certificate-authorities.adoc", "diffHunk": "@@ -26,3 +26,15 @@ You can configure the validity period of:\n \n * Cluster CA certificates in `Kafka.spec.clusterCa.validityDays`\n * Client CA certificates in `Kafka.spec.clientsCa.validityDays`\n+\n+== Options for installing your own CA certificates\n+\n+In your security model, client applications might need to trust certificates that were issued by an external CA, such as your company's internal CA or a public CA, in order to connect to external systems. {ProductName} provides two methods for configuring your Kafka client applications to connect to the brokers in your Kafka cluster using your own certificates.\n+\n+You can install your own certificates at two levels:\n+\n+* At a cluster level--see xref:installing-your-own-ca-certificates-{context}[].\n+\n+* For each listener (TLS and external) in a Kafka broker--see xref:proc-installing-certs-per-listener-{context}[].\n+\n+If you install your own certificates using one or both of these methods, they are not automatically renewed by the Cluster Operator. You must manually renew certificates according to your security model.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5MzY4OQ=="}, "originalCommit": {"oid": "789e6416a33b6cbb87f44a797c8ff10d531a0f3e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyOTE4NA==", "bodyText": "These would be server certificates, not CA certificates. We need to distinguish the two options properly.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r368229184", "createdAt": "2020-01-18T14:18:20Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/proc-installing-certs-per-listener.adoc", "diffHunk": "@@ -0,0 +1,83 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='proc-installing-certs-per-listener-{context}']\n+= Installing your own CA certificates for listeners", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c39fe0461f71379d2efa9e4cdb408efefd8f266"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyOTIxNA==", "bodyText": "Should we use configure instead of install? The install doesn't sound right here, I would say the operator installs them,m the user just configures them.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r368229214", "createdAt": "2020-01-18T14:18:58Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/proc-installing-certs-per-listener.adoc", "diffHunk": "@@ -0,0 +1,83 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='proc-installing-certs-per-listener-{context}']\n+= Installing your own CA certificates for listeners\n+\n+You can install your own certificates and public keys for Kafka brokers on a per-listener basis. These certificates can be signed by an external Certificate Authority (CA), such as your company's internal CA or a public CA, rather than the cluster or clients CAs (which are internal to {ProductName}). Installing per-listener certificates is supported for two types of listeners:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c39fe0461f71379d2efa9e4cdb408efefd8f266"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyOTMxMQ==", "bodyText": "Thsi would be much easier to comment on if you followed the one sentence per line policy. We should mention somewhere here that the certificates should be either wildcard certificates with appropriatte subject or have SANs matching all possibl broker names. We should possibly include some examples of how the addresses would look like so that the user knows what should be used.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r368229311", "createdAt": "2020-01-18T14:21:06Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/proc-installing-certs-per-listener.adoc", "diffHunk": "@@ -0,0 +1,83 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='proc-installing-certs-per-listener-{context}']\n+= Installing your own CA certificates for listeners\n+\n+You can install your own certificates and public keys for Kafka brokers on a per-listener basis. These certificates can be signed by an external Certificate Authority (CA), such as your company's internal CA or a public CA, rather than the cluster or clients CAs (which are internal to {ProductName}). Installing per-listener certificates is supported for two types of listeners:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c39fe0461f71379d2efa9e4cdb408efefd8f266"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyOTM0MQ==", "bodyText": "Maybe we can add here that the external listeners only as long as they use TLS. It is also missing ingress type.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r368229341", "createdAt": "2020-01-18T14:21:37Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/proc-installing-certs-per-listener.adoc", "diffHunk": "@@ -0,0 +1,83 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='proc-installing-certs-per-listener-{context}']\n+= Installing your own CA certificates for listeners\n+\n+You can install your own certificates and public keys for Kafka brokers on a per-listener basis. These certificates can be signed by an external Certificate Authority (CA), such as your company's internal CA or a public CA, rather than the cluster or clients CAs (which are internal to {ProductName}). Installing per-listener certificates is supported for two types of listeners:\n+\n+* TLS listeners for inter-cluster communication\n+\n+* External listeners (including `route`, `loadbalancer`, and `nodeport` types) for communication between Kafka clients and Kafka brokers", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c39fe0461f71379d2efa9e4cdb408efefd8f266"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyOTM3NQ==", "bodyText": "You should clarify that Your own certificate has to be signed by the CA maybe.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r368229375", "createdAt": "2020-01-18T14:22:32Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/proc-installing-certs-per-listener.adoc", "diffHunk": "@@ -0,0 +1,83 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='proc-installing-certs-per-listener-{context}']\n+= Installing your own CA certificates for listeners\n+\n+You can install your own certificates and public keys for Kafka brokers on a per-listener basis. These certificates can be signed by an external Certificate Authority (CA), such as your company's internal CA or a public CA, rather than the cluster or clients CAs (which are internal to {ProductName}). Installing per-listener certificates is supported for two types of listeners:\n+\n+* TLS listeners for inter-cluster communication\n+\n+* External listeners (including `route`, `loadbalancer`, and `nodeport` types) for communication between Kafka clients and Kafka brokers\n+\n+Installing your own certificates and keys for plain listeners is not supported.\n+\n+.Prerequisites\n+\n+* A Kubernetes cluster.\n+* The Cluster Operator is running.\n+* Public key of the external CA.  \n+* Your own X.509 certificate in CRT or PEM format.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c39fe0461f71379d2efa9e4cdb408efefd8f266"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyOTQwOQ==", "bodyText": "So do we need to clarify how the CA public key should be used? You listed it as prerequisite so it probably should be explained.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r368229409", "createdAt": "2020-01-18T14:23:18Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/proc-installing-certs-per-listener.adoc", "diffHunk": "@@ -0,0 +1,83 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='proc-installing-certs-per-listener-{context}']\n+= Installing your own CA certificates for listeners\n+\n+You can install your own certificates and public keys for Kafka brokers on a per-listener basis. These certificates can be signed by an external Certificate Authority (CA), such as your company's internal CA or a public CA, rather than the cluster or clients CAs (which are internal to {ProductName}). Installing per-listener certificates is supported for two types of listeners:\n+\n+* TLS listeners for inter-cluster communication\n+\n+* External listeners (including `route`, `loadbalancer`, and `nodeport` types) for communication between Kafka clients and Kafka brokers\n+\n+Installing your own certificates and keys for plain listeners is not supported.\n+\n+.Prerequisites\n+\n+* A Kubernetes cluster.\n+* The Cluster Operator is running.\n+* Public key of the external CA.  \n+* Your own X.509 certificate in CRT or PEM format.\n+\n+.Procedure\n+\n+. Create a `Secret` containing your public key and certificate:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl create secret generic _my-secret_ --from-file=_my-listener-key.key_ --from-file=_my-listener-certificate.crt_", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c39fe0461f71379d2efa9e4cdb408efefd8f266"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyOTQ2MA==", "bodyText": "Again, I would probably leave out the cluster level. I do not think it is understandable what it means but people not really familiar with Strimzi.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r368229460", "createdAt": "2020-01-18T14:24:17Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/proc-installing-your-own-ca-certificates.adoc", "diffHunk": "@@ -3,9 +3,9 @@\n // assembly-security.adoc\n \n [id='installing-your-own-ca-certificates-{context}']\n-= Installing your own CA certificates\n+= Installing your own CA certificates for a Kafka cluster\n \n-This procedure describes how to install your own CA certificates and private keys instead of using CA certificates and private keys generated by the Cluster Operator.\n+This procedure describes how to install your own CA certificates and private keys at the cluster level instead of using CA certificates and private keys generated by the Cluster Operator.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c39fe0461f71379d2efa9e4cdb408efefd8f266"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "022ac4f36d06e98cbe455f902f0dd4f87b257d50", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/022ac4f36d06e98cbe455f902f0dd4f87b257d50", "committedDate": "2020-01-20T11:21:27Z", "message": "Review comments PM\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a189b9e4df0f77a22b89d1fcabd4e9e30bbc130", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3a189b9e4df0f77a22b89d1fcabd4e9e30bbc130", "committedDate": "2020-01-20T12:07:28Z", "message": "Review comments PP\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a896215989c196301293a5d2496fc33d2d9a9c50", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a896215989c196301293a5d2496fc33d2d9a9c50", "committedDate": "2020-01-20T16:58:12Z", "message": "1st batch of review comments JS\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a469fd3b5b33e910dbbb4597c88cef1a09bdd18c", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a469fd3b5b33e910dbbb4597c88cef1a09bdd18c", "committedDate": "2020-01-21T14:10:33Z", "message": "2nd batch of review comments JS\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2150fa2c9002a12771ee9ef6cf11c90354d4326f", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/2150fa2c9002a12771ee9ef6cf11c90354d4326f", "committedDate": "2020-01-22T11:50:23Z", "message": "3rd batch of review comments JS - SAN certs\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32bead545ea562e18b4d917b1b6e7d3b202f9773", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/32bead545ea562e18b4d917b1b6e7d3b202f9773", "committedDate": "2020-01-22T12:11:14Z", "message": "Added info on public key\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NTcxMzEw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#pullrequestreview-346571310", "createdAt": "2020-01-22T13:06:59Z", "commit": {"oid": "32bead545ea562e18b4d917b1b6e7d3b202f9773"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMzowNzowMFrOFgbZnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMzowNzoxN1rOFgbaHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0NzY3Nw==", "bodyText": "why we added \"CA\" ... so starting to use \"CA certificates\" instead of \"certificates\". A client should trust a broker certificates (which is not a CA certificate) signed by the cluster CA.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r369547677", "createdAt": "2020-01-22T13:07:00Z", "author": {"login": "ppatierno"}, "path": "documentation/modules/security/con-certificate-authorities.adoc", "diffHunk": "@@ -6,20 +6,28 @@\n = Certificate Authorities\n \n To support encryption, each {ProductName} component needs its own private keys and public key certificates.\n-All component certificates are signed by a Certificate Authority (CA) called the _cluster CA_.\n+All component certificates are signed by an internal Certificate Authority (CA) called the _cluster CA_.\n \n-Similarly, each Kafka client application connecting using TLS client authentication needs private keys and certificates.\n-The _clients CA_ is used to sign the certificates for the Kafka clients.\n+Similarly, each Kafka client application connecting to {ProductName} using TLS client authentication needs to provide private keys and certificates.\n+A second internal CA, named the _clients CA_, is used to sign certificates for the Kafka clients. \n \n == CA certificates\n \n-Each CA has a self-signed public key certificate.\n+Both the cluster CA and clients CA have a self-signed public key certificate.\n \n-Kafka brokers are configured to trust certificates signed by either the clients CA or the cluster CA. Components to which clients do not need to connect, such as ZooKeeper, only trust certificates signed by the cluster CA. Client applications that perform mutual TLS authentication have to trust the certificates signed by the cluster CA.\n+Kafka brokers are configured to trust CA certificates signed by either the cluster CA or clients CA.\n+Components that clients do not need to connect to, such as ZooKeeper, only trust CA certificates signed by the cluster CA.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32bead545ea562e18b4d917b1b6e7d3b202f9773"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0NzgwNQ==", "bodyText": "I am fine with this one but still this usage of \"CA certificates\".", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r369547805", "createdAt": "2020-01-22T13:07:17Z", "author": {"login": "ppatierno"}, "path": "documentation/modules/security/con-certificate-authorities.adoc", "diffHunk": "@@ -6,20 +6,28 @@\n = Certificate Authorities\n \n To support encryption, each {ProductName} component needs its own private keys and public key certificates.\n-All component certificates are signed by a Certificate Authority (CA) called the _cluster CA_.\n+All component certificates are signed by an internal Certificate Authority (CA) called the _cluster CA_.\n \n-Similarly, each Kafka client application connecting using TLS client authentication needs private keys and certificates.\n-The _clients CA_ is used to sign the certificates for the Kafka clients.\n+Similarly, each Kafka client application connecting to {ProductName} using TLS client authentication needs to provide private keys and certificates.\n+A second internal CA, named the _clients CA_, is used to sign certificates for the Kafka clients. \n \n == CA certificates\n \n-Each CA has a self-signed public key certificate.\n+Both the cluster CA and clients CA have a self-signed public key certificate.\n \n-Kafka brokers are configured to trust certificates signed by either the clients CA or the cluster CA. Components to which clients do not need to connect, such as ZooKeeper, only trust certificates signed by the cluster CA. Client applications that perform mutual TLS authentication have to trust the certificates signed by the cluster CA.\n+Kafka brokers are configured to trust CA certificates signed by either the cluster CA or clients CA.\n+Components that clients do not need to connect to, such as ZooKeeper, only trust CA certificates signed by the cluster CA.\n+Unless TLS encryption for external listeners is disabled, client applications must trust CA certificates signed by the cluster CA.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32bead545ea562e18b4d917b1b6e7d3b202f9773"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MTE1NTQx", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#pullrequestreview-347115541", "createdAt": "2020-01-23T08:11:55Z", "commit": {"oid": "32bead545ea562e18b4d917b1b6e7d3b202f9773"}, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwODoxMTo1NVrOFg1mgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwODoyNTozMlrOFg15JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk3Njk2MA==", "bodyText": "Do we need to clarify that it renews only its own certificates? Not any supplied by the user?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r369976960", "createdAt": "2020-01-23T08:11:55Z", "author": {"login": "scholzj"}, "path": "documentation/assemblies/security/assembly-security.adoc", "diffHunk": "@@ -10,9 +10,12 @@ Communication between Kafka brokers (interbroker communication), between ZooKeep\n Communication between Kafka clients and Kafka brokers is encrypted according to how the cluster is configured.\n For the Kafka and {ProductName} components, TLS certificates are also used for authentication.\n \n-The Cluster Operator automatically sets up TLS certificates to enable encryption and authentication within your cluster.\n+The Cluster Operator automatically sets up and renews TLS certificates to enable encryption and authentication within your cluster.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32bead545ea562e18b4d917b1b6e7d3b202f9773"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk3ODUxMA==", "bodyText": "I do not think this sentence makes sense. I think it should say something like this:\nSometimes, you might want to use {ProductName} with your own CA such as  your company's private CA or a public CA.\nor maybe:\nSometimes you want to leverage your existing security infrastructure such as your company's private CA or a public CA.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r369978510", "createdAt": "2020-01-23T08:16:30Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/con-kafka-listener-certificates.adoc", "diffHunk": "@@ -0,0 +1,15 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='kafka-listener-certificates-{context}']\n+\n+= Kafka listener certificates\n+\n+In order to connect to external systems such as {ProductName}, your client applications might need to trust server certificates that were issued by an external CA, such as your company's private CA or a public CA.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32bead545ea562e18b4d917b1b6e7d3b202f9773"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk3OTE4Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            = SAN certificates for Kafka listeners\n          \n          \n            \n            = Alternative subjects in server certificates for Kafka listeners", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r369979183", "createdAt": "2020-01-23T08:18:28Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/ref-formats-kafka-listener-certificates.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='ref-formats-kafka-listener-certificates-{context}']\n+\n+= SAN certificates for Kafka listeners", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32bead545ea562e18b4d917b1b6e7d3b202f9773"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk3OTk1Mg==", "bodyText": "Sorry if I confused you about this. The SANs are a feature/configuration  of the certificate. It is not certificate type. So I think it should sound something like this:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If you provide your own xref:kafka-listener-certificates-{context}[Kafka listener certificates], you must use a Subject Alternative Name (SAN) certificate for each listener. The SAN certificate must specify hostnames for:\n          \n          \n            \n            In order to use TLS hostname verification with your own xref:kafka-listener-certificates-{context}[Kafka listener certificates], you must use the correct Subject Alternative Names (SAN) for each listener. The certificate SANs must specify hostnames for:", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r369979952", "createdAt": "2020-01-23T08:20:42Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/ref-formats-kafka-listener-certificates.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='ref-formats-kafka-listener-certificates-{context}']\n+\n+= SAN certificates for Kafka listeners\n+\n+If you provide your own xref:kafka-listener-certificates-{context}[Kafka listener certificates], you must use a Subject Alternative Name (SAN) certificate for each listener. The SAN certificate must specify hostnames for:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32bead545ea562e18b4d917b1b6e7d3b202f9773"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk4MDU0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The Kafka broker hostnames can contain wildcard names.\n          \n          \n            \n            You can use wildcsard certificates if supported by your CA.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r369980540", "createdAt": "2020-01-23T08:22:22Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/ref-formats-kafka-listener-certificates.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='ref-formats-kafka-listener-certificates-{context}']\n+\n+= SAN certificates for Kafka listeners\n+\n+If you provide your own xref:kafka-listener-certificates-{context}[Kafka listener certificates], you must use a Subject Alternative Name (SAN) certificate for each listener. The SAN certificate must specify hostnames for:\n+\n+* All of the Kafka brokers in your cluster\n+\n+* The Kafka cluster bootstrap service\n+\n+The Kafka broker hostnames can contain wildcard names.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32bead545ea562e18b4d917b1b6e7d3b202f9773"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk4MDcxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Using SAN certificates is required for TLS hostname verification.\n          \n          \n            \n            Using certificates with the coorrect SANs is required for TLS hostname verification.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r369980714", "createdAt": "2020-01-23T08:22:50Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/ref-formats-kafka-listener-certificates.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='ref-formats-kafka-listener-certificates-{context}']\n+\n+= SAN certificates for Kafka listeners\n+\n+If you provide your own xref:kafka-listener-certificates-{context}[Kafka listener certificates], you must use a Subject Alternative Name (SAN) certificate for each listener. The SAN certificate must specify hostnames for:\n+\n+* All of the Kafka brokers in your cluster\n+\n+* The Kafka cluster bootstrap service\n+\n+The Kafka broker hostnames can contain wildcard names.\n+\n+Using SAN certificates is required for TLS hostname verification.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32bead545ea562e18b4d917b1b6e7d3b202f9773"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk4MDgzMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            == TLS listener SAN certificate examples\n          \n          \n            \n            == TLS listener SAN examples", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r369980832", "createdAt": "2020-01-23T08:23:08Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/ref-formats-kafka-listener-certificates.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='ref-formats-kafka-listener-certificates-{context}']\n+\n+= SAN certificates for Kafka listeners\n+\n+If you provide your own xref:kafka-listener-certificates-{context}[Kafka listener certificates], you must use a Subject Alternative Name (SAN) certificate for each listener. The SAN certificate must specify hostnames for:\n+\n+* All of the Kafka brokers in your cluster\n+\n+* The Kafka cluster bootstrap service\n+\n+The Kafka broker hostnames can contain wildcard names.\n+\n+Using SAN certificates is required for TLS hostname verification.\n+\n+== TLS listener SAN certificate examples", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32bead545ea562e18b4d917b1b6e7d3b202f9773"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk4MDk1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Use the following examples to help you specify hostnames in SAN certificates for TLS listeners.\n          \n          \n            \n            Use the following examples to help you specify hostnames the SANs in your certificates for TLS listeners.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r369980953", "createdAt": "2020-01-23T08:23:27Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/ref-formats-kafka-listener-certificates.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='ref-formats-kafka-listener-certificates-{context}']\n+\n+= SAN certificates for Kafka listeners\n+\n+If you provide your own xref:kafka-listener-certificates-{context}[Kafka listener certificates], you must use a Subject Alternative Name (SAN) certificate for each listener. The SAN certificate must specify hostnames for:\n+\n+* All of the Kafka brokers in your cluster\n+\n+* The Kafka cluster bootstrap service\n+\n+The Kafka broker hostnames can contain wildcard names.\n+\n+Using SAN certificates is required for TLS hostname verification.\n+\n+== TLS listener SAN certificate examples\n+\n+Use the following examples to help you specify hostnames in SAN certificates for TLS listeners.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32bead545ea562e18b4d917b1b6e7d3b202f9773"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk4MTE2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            == External listener SAN certificate examples\n          \n          \n            \n            == External listener SAN examples", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r369981160", "createdAt": "2020-01-23T08:23:58Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/ref-formats-kafka-listener-certificates.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='ref-formats-kafka-listener-certificates-{context}']\n+\n+= SAN certificates for Kafka listeners\n+\n+If you provide your own xref:kafka-listener-certificates-{context}[Kafka listener certificates], you must use a Subject Alternative Name (SAN) certificate for each listener. The SAN certificate must specify hostnames for:\n+\n+* All of the Kafka brokers in your cluster\n+\n+* The Kafka cluster bootstrap service\n+\n+The Kafka broker hostnames can contain wildcard names.\n+\n+Using SAN certificates is required for TLS hostname verification.\n+\n+== TLS listener SAN certificate examples\n+\n+Use the following examples to help you specify hostnames in SAN certificates for TLS listeners.\n+\n+.Wildcards example\n+\n+[source,shell,subs=\"+quotes,attributes+\"]\n+----\n+//Kafka brokers\n+*._<cluster-name>_-kafka-brokers\n+*._<cluster-name>_-kafka-brokers._<namespace>_.svc\n+\n+// Bootstrap service\n+_<cluster-name>_-kafka-bootstrap\n+_<cluster-name>_-kafka-bootstrap._<namespace>_.svc\n+----\n+\n+.Non-wildcards example\n+\n+[source,shell,subs=\"+quotes,attributes+\"]\n+----\n+// Kafka brokers\n+_<cluster-name>_-kafka-0._<cluster-name>_-kafka-brokers\n+_<cluster-name>_-kafka-0._<cluster-name>_-kafka-brokers._<namespace>_.svc\n+_<cluster-name>_-kafka-1._<cluster-name>_-kafka-brokers\n+_<cluster-name>_-kafka-1._<cluster-name>_-kafka-brokers._<namespace>_.svc\n+# ...\n+\n+// Bootstrap service\n+_<cluster-name>_-kafka-bootstrap\n+_<cluster-name>_-kafka-bootstrap._<namespace>_.svc\n+----\n+\n+== External listener SAN certificate examples", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32bead545ea562e18b4d917b1b6e7d3b202f9773"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk4MTMyNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For external listeners which have TLS encryption enabled, the hostnames you need to specify in SAN certificates depends on the external listener `type`.\n          \n          \n            \n            For external listeners which have TLS encryption enabled, the hostnames you need to specify in certificates depends on the external listener `type`.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r369981325", "createdAt": "2020-01-23T08:24:23Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/ref-formats-kafka-listener-certificates.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='ref-formats-kafka-listener-certificates-{context}']\n+\n+= SAN certificates for Kafka listeners\n+\n+If you provide your own xref:kafka-listener-certificates-{context}[Kafka listener certificates], you must use a Subject Alternative Name (SAN) certificate for each listener. The SAN certificate must specify hostnames for:\n+\n+* All of the Kafka brokers in your cluster\n+\n+* The Kafka cluster bootstrap service\n+\n+The Kafka broker hostnames can contain wildcard names.\n+\n+Using SAN certificates is required for TLS hostname verification.\n+\n+== TLS listener SAN certificate examples\n+\n+Use the following examples to help you specify hostnames in SAN certificates for TLS listeners.\n+\n+.Wildcards example\n+\n+[source,shell,subs=\"+quotes,attributes+\"]\n+----\n+//Kafka brokers\n+*._<cluster-name>_-kafka-brokers\n+*._<cluster-name>_-kafka-brokers._<namespace>_.svc\n+\n+// Bootstrap service\n+_<cluster-name>_-kafka-bootstrap\n+_<cluster-name>_-kafka-bootstrap._<namespace>_.svc\n+----\n+\n+.Non-wildcards example\n+\n+[source,shell,subs=\"+quotes,attributes+\"]\n+----\n+// Kafka brokers\n+_<cluster-name>_-kafka-0._<cluster-name>_-kafka-brokers\n+_<cluster-name>_-kafka-0._<cluster-name>_-kafka-brokers._<namespace>_.svc\n+_<cluster-name>_-kafka-1._<cluster-name>_-kafka-brokers\n+_<cluster-name>_-kafka-1._<cluster-name>_-kafka-brokers._<namespace>_.svc\n+# ...\n+\n+// Bootstrap service\n+_<cluster-name>_-kafka-bootstrap\n+_<cluster-name>_-kafka-bootstrap._<namespace>_.svc\n+----\n+\n+== External listener SAN certificate examples\n+\n+For external listeners which have TLS encryption enabled, the hostnames you need to specify in SAN certificates depends on the external listener `type`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32bead545ea562e18b4d917b1b6e7d3b202f9773"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk4MTQ0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u00a6In the SAN certificate, specify...\n          \n          \n            \n            \u00a6In the SANs, specify...", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r369981445", "createdAt": "2020-01-23T08:24:44Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/ref-formats-kafka-listener-certificates.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='ref-formats-kafka-listener-certificates-{context}']\n+\n+= SAN certificates for Kafka listeners\n+\n+If you provide your own xref:kafka-listener-certificates-{context}[Kafka listener certificates], you must use a Subject Alternative Name (SAN) certificate for each listener. The SAN certificate must specify hostnames for:\n+\n+* All of the Kafka brokers in your cluster\n+\n+* The Kafka cluster bootstrap service\n+\n+The Kafka broker hostnames can contain wildcard names.\n+\n+Using SAN certificates is required for TLS hostname verification.\n+\n+== TLS listener SAN certificate examples\n+\n+Use the following examples to help you specify hostnames in SAN certificates for TLS listeners.\n+\n+.Wildcards example\n+\n+[source,shell,subs=\"+quotes,attributes+\"]\n+----\n+//Kafka brokers\n+*._<cluster-name>_-kafka-brokers\n+*._<cluster-name>_-kafka-brokers._<namespace>_.svc\n+\n+// Bootstrap service\n+_<cluster-name>_-kafka-bootstrap\n+_<cluster-name>_-kafka-bootstrap._<namespace>_.svc\n+----\n+\n+.Non-wildcards example\n+\n+[source,shell,subs=\"+quotes,attributes+\"]\n+----\n+// Kafka brokers\n+_<cluster-name>_-kafka-0._<cluster-name>_-kafka-brokers\n+_<cluster-name>_-kafka-0._<cluster-name>_-kafka-brokers._<namespace>_.svc\n+_<cluster-name>_-kafka-1._<cluster-name>_-kafka-brokers\n+_<cluster-name>_-kafka-1._<cluster-name>_-kafka-brokers._<namespace>_.svc\n+# ...\n+\n+// Bootstrap service\n+_<cluster-name>_-kafka-bootstrap\n+_<cluster-name>_-kafka-bootstrap._<namespace>_.svc\n+----\n+\n+== External listener SAN certificate examples\n+\n+For external listeners which have TLS encryption enabled, the hostnames you need to specify in SAN certificates depends on the external listener `type`.\n+\n+[cols=\"2*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+\u00a6External listener type\n+\u00a6In the SAN certificate, specify...", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32bead545ea562e18b4d917b1b6e7d3b202f9773"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk4MTYyNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u00a6Addresses of all Kafka broker `Routes` and the address of the bootstrap service `Route`.\n          \n          \n            \n            \u00a6Addresses of all Kafka broker `Routes` and the address of the bootstrap `Route`.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r369981627", "createdAt": "2020-01-23T08:25:15Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/ref-formats-kafka-listener-certificates.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='ref-formats-kafka-listener-certificates-{context}']\n+\n+= SAN certificates for Kafka listeners\n+\n+If you provide your own xref:kafka-listener-certificates-{context}[Kafka listener certificates], you must use a Subject Alternative Name (SAN) certificate for each listener. The SAN certificate must specify hostnames for:\n+\n+* All of the Kafka brokers in your cluster\n+\n+* The Kafka cluster bootstrap service\n+\n+The Kafka broker hostnames can contain wildcard names.\n+\n+Using SAN certificates is required for TLS hostname verification.\n+\n+== TLS listener SAN certificate examples\n+\n+Use the following examples to help you specify hostnames in SAN certificates for TLS listeners.\n+\n+.Wildcards example\n+\n+[source,shell,subs=\"+quotes,attributes+\"]\n+----\n+//Kafka brokers\n+*._<cluster-name>_-kafka-brokers\n+*._<cluster-name>_-kafka-brokers._<namespace>_.svc\n+\n+// Bootstrap service\n+_<cluster-name>_-kafka-bootstrap\n+_<cluster-name>_-kafka-bootstrap._<namespace>_.svc\n+----\n+\n+.Non-wildcards example\n+\n+[source,shell,subs=\"+quotes,attributes+\"]\n+----\n+// Kafka brokers\n+_<cluster-name>_-kafka-0._<cluster-name>_-kafka-brokers\n+_<cluster-name>_-kafka-0._<cluster-name>_-kafka-brokers._<namespace>_.svc\n+_<cluster-name>_-kafka-1._<cluster-name>_-kafka-brokers\n+_<cluster-name>_-kafka-1._<cluster-name>_-kafka-brokers._<namespace>_.svc\n+# ...\n+\n+// Bootstrap service\n+_<cluster-name>_-kafka-bootstrap\n+_<cluster-name>_-kafka-bootstrap._<namespace>_.svc\n+----\n+\n+== External listener SAN certificate examples\n+\n+For external listeners which have TLS encryption enabled, the hostnames you need to specify in SAN certificates depends on the external listener `type`.\n+\n+[cols=\"2*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+\u00a6External listener type\n+\u00a6In the SAN certificate, specify...\n+\n+m\u00a6Route\n+\u00a6Addresses of all Kafka broker `Routes` and the address of the bootstrap service `Route`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32bead545ea562e18b4d917b1b6e7d3b202f9773"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk4MTczMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u00a6Addresses of all Kafka broker `loadbalancers` and the `loadbalancer` bootstrap address.\n          \n          \n            \n            \u00a6Addresses of all Kafka broker `loadbalancers` and the bootstrap `loadbalancer` address.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r369981733", "createdAt": "2020-01-23T08:25:32Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/ref-formats-kafka-listener-certificates.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-security.adoc\n+\n+[id='ref-formats-kafka-listener-certificates-{context}']\n+\n+= SAN certificates for Kafka listeners\n+\n+If you provide your own xref:kafka-listener-certificates-{context}[Kafka listener certificates], you must use a Subject Alternative Name (SAN) certificate for each listener. The SAN certificate must specify hostnames for:\n+\n+* All of the Kafka brokers in your cluster\n+\n+* The Kafka cluster bootstrap service\n+\n+The Kafka broker hostnames can contain wildcard names.\n+\n+Using SAN certificates is required for TLS hostname verification.\n+\n+== TLS listener SAN certificate examples\n+\n+Use the following examples to help you specify hostnames in SAN certificates for TLS listeners.\n+\n+.Wildcards example\n+\n+[source,shell,subs=\"+quotes,attributes+\"]\n+----\n+//Kafka brokers\n+*._<cluster-name>_-kafka-brokers\n+*._<cluster-name>_-kafka-brokers._<namespace>_.svc\n+\n+// Bootstrap service\n+_<cluster-name>_-kafka-bootstrap\n+_<cluster-name>_-kafka-bootstrap._<namespace>_.svc\n+----\n+\n+.Non-wildcards example\n+\n+[source,shell,subs=\"+quotes,attributes+\"]\n+----\n+// Kafka brokers\n+_<cluster-name>_-kafka-0._<cluster-name>_-kafka-brokers\n+_<cluster-name>_-kafka-0._<cluster-name>_-kafka-brokers._<namespace>_.svc\n+_<cluster-name>_-kafka-1._<cluster-name>_-kafka-brokers\n+_<cluster-name>_-kafka-1._<cluster-name>_-kafka-brokers._<namespace>_.svc\n+# ...\n+\n+// Bootstrap service\n+_<cluster-name>_-kafka-bootstrap\n+_<cluster-name>_-kafka-bootstrap._<namespace>_.svc\n+----\n+\n+== External listener SAN certificate examples\n+\n+For external listeners which have TLS encryption enabled, the hostnames you need to specify in SAN certificates depends on the external listener `type`.\n+\n+[cols=\"2*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+\u00a6External listener type\n+\u00a6In the SAN certificate, specify...\n+\n+m\u00a6Route\n+\u00a6Addresses of all Kafka broker `Routes` and the address of the bootstrap service `Route`.\n+\n+You can use a matching wildcard name.\n+\n+m\u00a6loadbalancer\n+\u00a6Addresses of all Kafka broker `loadbalancers` and the `loadbalancer` bootstrap address.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32bead545ea562e18b4d917b1b6e7d3b202f9773"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e8b8d2d87f11bd6998f86e924a6a516cec3ae51", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6e8b8d2d87f11bd6998f86e924a6a516cec3ae51", "committedDate": "2020-01-23T10:19:13Z", "message": "Additional comments from JS and PP\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f1241f5ba82490c78787ea6b3dba095d97dede0", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/0f1241f5ba82490c78787ea6b3dba095d97dede0", "committedDate": "2020-01-23T10:56:17Z", "message": "Changes cross-ref in procedure\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NjQ5MjAz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#pullrequestreview-347649203", "createdAt": "2020-01-23T22:23:27Z", "commit": {"oid": "0f1241f5ba82490c78787ea6b3dba095d97dede0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0915d1aee6b9a6703637e158fb212f939c341a6", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f0915d1aee6b9a6703637e158fb212f939c341a6", "committedDate": "2020-01-24T11:28:38Z", "message": "Changes to support mininimalism principles\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3ODk5NjMx", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#pullrequestreview-347899631", "createdAt": "2020-01-24T11:38:22Z", "commit": {"oid": "f0915d1aee6b9a6703637e158fb212f939c341a6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4Mzc0Mzk3", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#pullrequestreview-348374397", "createdAt": "2020-01-26T11:53:21Z", "commit": {"oid": "f0915d1aee6b9a6703637e158fb212f939c341a6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQxMTo1MzoyMlrOFhznOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQxMTo1MzoyMlrOFhznOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk5Mjk1NQ==", "bodyText": "Sorry, I had to get back to this. I do not think the CA belongs here.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You can provide your own server certificates and CA public keys for the following types of listeners:\n          \n          \n            \n            You can provide your own server certificates and public keys for the following types of listeners:", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2414#discussion_r370992955", "createdAt": "2020-01-26T11:53:22Z", "author": {"login": "scholzj"}, "path": "documentation/modules/security/con-kafka-listener-certificates.adoc", "diffHunk": "@@ -6,10 +6,15 @@\n \n = Kafka listener certificates\n \n-Sometimes you might want to leverage your existing security infrastructure, such as your company's private CA or a public CA, when integrating your client applications with {ProductName}. \n-To support this requirement, {ProductName} allows you to provide your own _Kafka listener certificates_ and public keys for external listeners which have TLS encryption enabled.\n-Your Kafka client applications will connect to Kafka brokers using Kafka listener certificates rather than CA certificates signed by the cluster CA or clients CA.\n+You can provide your own server certificates and CA public keys for the following types of listeners:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0915d1aee6b9a6703637e158fb212f939c341a6"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07af21886bd3561a6396c331f797d856a49996b1", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/07af21886bd3561a6396c331f797d856a49996b1", "committedDate": "2020-01-27T09:55:53Z", "message": "Public keys not CA public keys\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1811, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}