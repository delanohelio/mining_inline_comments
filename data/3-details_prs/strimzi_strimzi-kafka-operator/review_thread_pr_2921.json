{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExMDA0Mjgz", "number": 2921, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMTozMTo0MVrOD4NtTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDo1NzozOFrOD70qrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMjcxNDM4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaClusterSpec.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMTozMTo0MVrOGO7Epg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMDoyMjozMVrOGPUuSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMwMTA5NA==", "bodyText": "I was wondering if we should not allow to do this configuration directly in the spec.kafka.config of the Kafka resource but exposing these fields in a more user friendly way in the cruiseControl field. The problem I see is that if we start in this way, then we could come up to do the same for a tons of cruise control related parameter in Kafka broker (so more related to the metrics reporter) and we fill the cruiseControl too much but maybe I am wrong.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r418301094", "createdAt": "2020-04-30T21:31:41Z", "author": {"login": "ppatierno"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaClusterSpec.java", "diffHunk": "@@ -51,7 +51,8 @@\n             + \"zookeeper.connect, zookeeper.set.acl, authorizer., super.user\"\n             + \"cruise.control.metrics.topic, cruise.control.metrics.reporter.bootstrap.servers\";\n \n-    public static final String FORBIDDEN_PREFIX_EXCEPTIONS = \"zookeeper.connection.timeout.ms, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols\";\n+    public static final String FORBIDDEN_PREFIX_EXCEPTIONS = \"zookeeper.connection.timeout.ms, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols, \"\n+            + \"cruise.control.metrics.topic.num.partitions, cruise.control.metrics.topic.replication.factor\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08187d53006b40e224fe6701a40d0b01bed19aeb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcyMTM1NQ==", "bodyText": "I do like the idea of keeping the cruise control configurations, including the cruise control metric reporter in one place but I think it may be be better to stay consistent with upstream Cruise Control (at least for now). Diverting from the upstream Cruise Control documentation would add overhead to our code and documentation and there shouldn't be much(if any) tweaking needed on the metric reporter side (avoiding the metric reporter configuration bloat in the Kafka broker configuration!)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r418721355", "createdAt": "2020-05-01T20:22:31Z", "author": {"login": "kyguy"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaClusterSpec.java", "diffHunk": "@@ -51,7 +51,8 @@\n             + \"zookeeper.connect, zookeeper.set.acl, authorizer., super.user\"\n             + \"cruise.control.metrics.topic, cruise.control.metrics.reporter.bootstrap.servers\";\n \n-    public static final String FORBIDDEN_PREFIX_EXCEPTIONS = \"zookeeper.connection.timeout.ms, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols\";\n+    public static final String FORBIDDEN_PREFIX_EXCEPTIONS = \"zookeeper.connection.timeout.ms, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols, \"\n+            + \"cruise.control.metrics.topic.num.partitions, cruise.control.metrics.topic.replication.factor\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMwMTA5NA=="}, "originalCommit": {"oid": "08187d53006b40e224fe6701a40d0b01bed19aeb"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTc0NjE4OnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/model/KafkaBrokerConfigurationBuilderTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMjo0NDoyMVrOGPXkgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwMToxMTo1M1rOGQXhMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc2ODAwMA==", "bodyText": "Are we sure this is the right default setting?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r418768000", "createdAt": "2020-05-01T22:44:21Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/model/KafkaBrokerConfigurationBuilderTest.java", "diffHunk": "@@ -79,7 +79,10 @@ public void testCruiseControl()  {\n                 \"cruise.control.metrics.reporter.ssl.keystore.password=${CERTS_STORE_PASSWORD}\\n\" +\n                 \"cruise.control.metrics.reporter.ssl.truststore.type=PKCS12\\n\" +\n                 \"cruise.control.metrics.reporter.ssl.truststore.location=/tmp/kafka/cluster.truststore.p12\\n\" +\n-                \"cruise.control.metrics.reporter.ssl.truststore.password=${CERTS_STORE_PASSWORD}\"));\n+                \"cruise.control.metrics.reporter.ssl.truststore.password=${CERTS_STORE_PASSWORD}\\n\" +\n+                \"cruise.control.metrics.topic.auto.create=true\\n\" +\n+                \"cruise.control.metrics.topic.num.partitions=1\\n\" +\n+                \"cruise.control.metrics.topic.replication.factor=1\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec1f30583431cadceb7bea0bc20be272561fdecb"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMzMTA3NA==", "bodyText": "other than that I don't see it working. I tried but the AdminClient times out 3 times fetching metadata before creating the topic and it gives up. I will investigate more.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r419331074", "createdAt": "2020-05-04T10:03:15Z", "author": {"login": "ppatierno"}, "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/model/KafkaBrokerConfigurationBuilderTest.java", "diffHunk": "@@ -79,7 +79,10 @@ public void testCruiseControl()  {\n                 \"cruise.control.metrics.reporter.ssl.keystore.password=${CERTS_STORE_PASSWORD}\\n\" +\n                 \"cruise.control.metrics.reporter.ssl.truststore.type=PKCS12\\n\" +\n                 \"cruise.control.metrics.reporter.ssl.truststore.location=/tmp/kafka/cluster.truststore.p12\\n\" +\n-                \"cruise.control.metrics.reporter.ssl.truststore.password=${CERTS_STORE_PASSWORD}\"));\n+                \"cruise.control.metrics.reporter.ssl.truststore.password=${CERTS_STORE_PASSWORD}\\n\" +\n+                \"cruise.control.metrics.topic.auto.create=true\\n\" +\n+                \"cruise.control.metrics.topic.num.partitions=1\\n\" +\n+                \"cruise.control.metrics.topic.replication.factor=1\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc2ODAwMA=="}, "originalCommit": {"oid": "ec1f30583431cadceb7bea0bc20be272561fdecb"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTgxNTczMA==", "bodyText": "Updated these to match the Kafka configuration default; CC doesn't specify a default for these parameters", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r419815730", "createdAt": "2020-05-05T01:11:53Z", "author": {"login": "kyguy"}, "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/model/KafkaBrokerConfigurationBuilderTest.java", "diffHunk": "@@ -79,7 +79,10 @@ public void testCruiseControl()  {\n                 \"cruise.control.metrics.reporter.ssl.keystore.password=${CERTS_STORE_PASSWORD}\\n\" +\n                 \"cruise.control.metrics.reporter.ssl.truststore.type=PKCS12\\n\" +\n                 \"cruise.control.metrics.reporter.ssl.truststore.location=/tmp/kafka/cluster.truststore.p12\\n\" +\n-                \"cruise.control.metrics.reporter.ssl.truststore.password=${CERTS_STORE_PASSWORD}\"));\n+                \"cruise.control.metrics.reporter.ssl.truststore.password=${CERTS_STORE_PASSWORD}\\n\" +\n+                \"cruise.control.metrics.topic.auto.create=true\\n\" +\n+                \"cruise.control.metrics.topic.num.partitions=1\\n\" +\n+                \"cruise.control.metrics.topic.replication.factor=1\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc2ODAwMA=="}, "originalCommit": {"oid": "ec1f30583431cadceb7bea0bc20be272561fdecb"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTc1MjIzOnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/ref-cruise-control-configuration.adoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMjo0Nzo1N1rOGPXoAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwMToxMzoxMFrOGQXiNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc2ODg5Ng==", "bodyText": "This is confusing. auto.create.topics.enable controls whether the broker creates a topic when a client attempts to read or write from it. So if it cannot create the topic when auto.create.topics.enable: false, it sounds like CC will not really attempt to create the topic and relies only on the auto creation. So the first sentence is wrong.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r418768896", "createdAt": "2020-05-01T22:47:57Z", "author": {"login": "scholzj"}, "path": "documentation/modules/cruise-control/ref-cruise-control-configuration.adoc", "diffHunk": "@@ -96,6 +96,41 @@ spec:\n .Additional resources\n For more information, refer to the xref:type-BrokerCapacity-reference[].\n \n+== Topic creation and configuration\n+\n+Cruise Control requires the following three topics to be created in order to function properly:\n+\n+* `strimzi.cruisecontrol.partitionmetricsamples`\n+* `strimzi.cruisecontrol.modeltrainingsamples`\n+* `strimzi.cruisecontrol.metrics`\n+\n+Cruise Control will attempt to create these topics automatically.\n+However, if automatic topic creation is disabled in Kafka with a configuration of `auto.create.topics.enable: false` in `spec.kafka.config`, Cruise Control will be unable to create these topics.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec1f30583431cadceb7bea0bc20be272561fdecb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTgxNTk5MQ==", "bodyText": "Updated the wording", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r419815991", "createdAt": "2020-05-05T01:13:10Z", "author": {"login": "kyguy"}, "path": "documentation/modules/cruise-control/ref-cruise-control-configuration.adoc", "diffHunk": "@@ -96,6 +96,41 @@ spec:\n .Additional resources\n For more information, refer to the xref:type-BrokerCapacity-reference[].\n \n+== Topic creation and configuration\n+\n+Cruise Control requires the following three topics to be created in order to function properly:\n+\n+* `strimzi.cruisecontrol.partitionmetricsamples`\n+* `strimzi.cruisecontrol.modeltrainingsamples`\n+* `strimzi.cruisecontrol.metrics`\n+\n+Cruise Control will attempt to create these topics automatically.\n+However, if automatic topic creation is disabled in Kafka with a configuration of `auto.create.topics.enable: false` in `spec.kafka.config`, Cruise Control will be unable to create these topics.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc2ODg5Ng=="}, "originalCommit": {"oid": "ec1f30583431cadceb7bea0bc20be272561fdecb"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTc1NTc0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaClusterSpec.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMjo0OTo0M1rOGPXp4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMToyMzoxNlrOGQ8FRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc2OTM3OQ==", "bodyText": "What about other settings? Retention? Segment size? etc.? If we assume the user configures these topics, there are many options which migght make sense. So shouldn't the whole cruise.control.metrics.topic. segment be user-configurable?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r418769379", "createdAt": "2020-05-01T22:49:43Z", "author": {"login": "scholzj"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaClusterSpec.java", "diffHunk": "@@ -51,7 +51,8 @@\n             + \"zookeeper.connect, zookeeper.set.acl, authorizer., super.user\"\n             + \"cruise.control.metrics.topic, cruise.control.metrics.reporter.bootstrap.servers\";\n \n-    public static final String FORBIDDEN_PREFIX_EXCEPTIONS = \"zookeeper.connection.timeout.ms, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols\";\n+    public static final String FORBIDDEN_PREFIX_EXCEPTIONS = \"zookeeper.connection.timeout.ms, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols, \"\n+            + \"cruise.control.metrics.topic.num.partitions, cruise.control.metrics.topic.replication.factor\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec1f30583431cadceb7bea0bc20be272561fdecb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTgxNjA2Nw==", "bodyText": "Updated so the user is free to configure these things", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r419816067", "createdAt": "2020-05-05T01:13:29Z", "author": {"login": "kyguy"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaClusterSpec.java", "diffHunk": "@@ -51,7 +51,8 @@\n             + \"zookeeper.connect, zookeeper.set.acl, authorizer., super.user\"\n             + \"cruise.control.metrics.topic, cruise.control.metrics.reporter.bootstrap.servers\";\n \n-    public static final String FORBIDDEN_PREFIX_EXCEPTIONS = \"zookeeper.connection.timeout.ms, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols\";\n+    public static final String FORBIDDEN_PREFIX_EXCEPTIONS = \"zookeeper.connection.timeout.ms, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols, \"\n+            + \"cruise.control.metrics.topic.num.partitions, cruise.control.metrics.topic.replication.factor\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc2OTM3OQ=="}, "originalCommit": {"oid": "ec1f30583431cadceb7bea0bc20be272561fdecb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQxNDc5MA==", "bodyText": "I had to double back and forbid cruise.control.metrics.topic as it is used to change the name of the CC metric topic. I have added all of the other cruise.control.metrics.topic options to the exception list, there are only three of them: cruise.control.metrics.topic.num.partitions, cruise.control.metrics.topic.replication.factor, cruise.control.metrics.topic.retention.ms", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r420414790", "createdAt": "2020-05-05T21:23:16Z", "author": {"login": "kyguy"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaClusterSpec.java", "diffHunk": "@@ -51,7 +51,8 @@\n             + \"zookeeper.connect, zookeeper.set.acl, authorizer., super.user\"\n             + \"cruise.control.metrics.topic, cruise.control.metrics.reporter.bootstrap.servers\";\n \n-    public static final String FORBIDDEN_PREFIX_EXCEPTIONS = \"zookeeper.connection.timeout.ms, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols\";\n+    public static final String FORBIDDEN_PREFIX_EXCEPTIONS = \"zookeeper.connection.timeout.ms, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols, \"\n+            + \"cruise.control.metrics.topic.num.partitions, cruise.control.metrics.topic.replication.factor\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc2OTM3OQ=="}, "originalCommit": {"oid": "ec1f30583431cadceb7bea0bc20be272561fdecb"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTc1NzEwOnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/ref-cruise-control-configuration.adoc", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMjo1MDozOVrOGPXqtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwMToxNToxNlrOGQXkVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc2OTU4OA==", "bodyText": "Stupid question - but CO already uses the AdminClient and has access to the brokers. So why not manage the topic form the operator using AdminClient our self?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r418769588", "createdAt": "2020-05-01T22:50:39Z", "author": {"login": "scholzj"}, "path": "documentation/modules/cruise-control/ref-cruise-control-configuration.adoc", "diffHunk": "@@ -96,6 +96,41 @@ spec:\n .Additional resources\n For more information, refer to the xref:type-BrokerCapacity-reference[].\n \n+== Topic creation and configuration\n+\n+Cruise Control requires the following three topics to be created in order to function properly:\n+\n+* `strimzi.cruisecontrol.partitionmetricsamples`\n+* `strimzi.cruisecontrol.modeltrainingsamples`\n+* `strimzi.cruisecontrol.metrics`\n+\n+Cruise Control will attempt to create these topics automatically.\n+However, if automatic topic creation is disabled in Kafka with a configuration of `auto.create.topics.enable: false` in `spec.kafka.config`, Cruise Control will be unable to create these topics.\n+In this situation, the Cruise Control topics will need to be created manually using the `example/topic/cruise-control-topics.yaml` file.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec1f30583431cadceb7bea0bc20be272561fdecb"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIyMzk3NA==", "bodyText": "I agree with Jakub. As we discussed offline, it could be a metrics reporter bug not able to keep trying to create the needed topics while the Kafka cluster is starting up. It needs a little bit more investigation in the CC codebase. Anyway, if fixing the CC is a long way, doing the creation of the topics in the CO could be a better idea than document and asking users to do so.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r419223974", "createdAt": "2020-05-04T05:53:11Z", "author": {"login": "ppatierno"}, "path": "documentation/modules/cruise-control/ref-cruise-control-configuration.adoc", "diffHunk": "@@ -96,6 +96,41 @@ spec:\n .Additional resources\n For more information, refer to the xref:type-BrokerCapacity-reference[].\n \n+== Topic creation and configuration\n+\n+Cruise Control requires the following three topics to be created in order to function properly:\n+\n+* `strimzi.cruisecontrol.partitionmetricsamples`\n+* `strimzi.cruisecontrol.modeltrainingsamples`\n+* `strimzi.cruisecontrol.metrics`\n+\n+Cruise Control will attempt to create these topics automatically.\n+However, if automatic topic creation is disabled in Kafka with a configuration of `auto.create.topics.enable: false` in `spec.kafka.config`, Cruise Control will be unable to create these topics.\n+In this situation, the Cruise Control topics will need to be created manually using the `example/topic/cruise-control-topics.yaml` file.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc2OTU4OA=="}, "originalCommit": {"oid": "ec1f30583431cadceb7bea0bc20be272561fdecb"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTgxNjUzNQ==", "bodyText": "Paolo and I found that this can be fixed upstream by making the CC metric reporter AdminClient timeout configurable. We could also add logic to the CO that would take care of this for us", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r419816535", "createdAt": "2020-05-05T01:15:16Z", "author": {"login": "kyguy"}, "path": "documentation/modules/cruise-control/ref-cruise-control-configuration.adoc", "diffHunk": "@@ -96,6 +96,41 @@ spec:\n .Additional resources\n For more information, refer to the xref:type-BrokerCapacity-reference[].\n \n+== Topic creation and configuration\n+\n+Cruise Control requires the following three topics to be created in order to function properly:\n+\n+* `strimzi.cruisecontrol.partitionmetricsamples`\n+* `strimzi.cruisecontrol.modeltrainingsamples`\n+* `strimzi.cruisecontrol.metrics`\n+\n+Cruise Control will attempt to create these topics automatically.\n+However, if automatic topic creation is disabled in Kafka with a configuration of `auto.create.topics.enable: false` in `spec.kafka.config`, Cruise Control will be unable to create these topics.\n+In this situation, the Cruise Control topics will need to be created manually using the `example/topic/cruise-control-topics.yaml` file.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc2OTU4OA=="}, "originalCommit": {"oid": "ec1f30583431cadceb7bea0bc20be272561fdecb"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjY4NzM2OnYy", "diffSide": "RIGHT", "path": "examples/topic/cruise-control-topics.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMTowNzoyNFrOGQSO3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwMToxMjoyN1rOGQXhpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcyOTExNw==", "bodyText": "If providing the KafkaTopic resource is a workaround for the bug in the CC metrics reporter I think that only this strimzi.cruisecontrol.metrics is needed here to be created. The other ones should be created by the CC not the metrics reporter. Can you double check @kyguy?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r419729117", "createdAt": "2020-05-04T21:07:24Z", "author": {"login": "ppatierno"}, "path": "examples/topic/cruise-control-topics.yaml", "diffHunk": "@@ -0,0 +1,37 @@\n+apiVersion: kafka.strimzi.io/v1beta1\n+kind: KafkaTopic\n+metadata:\n+  name: strimzi.cruisecontrol.partitionmetricsamples\n+  labels:\n+    strimzi.io/cluster: my-cluster\n+spec:\n+  partitions: 32\n+  replicas: 2\n+  config:\n+    cleanup.policy: delete\n+    retention.ms: \"3600000\"\n+---\n+apiVersion: kafka.strimzi.io/v1beta1\n+kind: KafkaTopic\n+metadata:\n+  name: strimzi.cruisecontrol.modeltrainingsamples\n+  labels:\n+    strimzi.io/cluster: my-cluster\n+spec:\n+  partitions: 32\n+  replicas: 2\n+  config:\n+    cleanup.policy: delete\n+    retention.ms: \"12000000\"\n+---\n+apiVersion: kafka.strimzi.io/v1beta1\n+kind: KafkaTopic\n+metadata:\n+  name: strimzi.cruisecontrol.metrics\n+  labels:\n+    strimzi.io/cluster: my-cluster\n+spec:\n+  partitions: 1\n+  replicas: 1\n+  config:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec1f30583431cadceb7bea0bc20be272561fdecb"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTgxNTg0Ng==", "bodyText": "You are correct; I have just updated the template file accordingly", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r419815846", "createdAt": "2020-05-05T01:12:27Z", "author": {"login": "kyguy"}, "path": "examples/topic/cruise-control-topics.yaml", "diffHunk": "@@ -0,0 +1,37 @@\n+apiVersion: kafka.strimzi.io/v1beta1\n+kind: KafkaTopic\n+metadata:\n+  name: strimzi.cruisecontrol.partitionmetricsamples\n+  labels:\n+    strimzi.io/cluster: my-cluster\n+spec:\n+  partitions: 32\n+  replicas: 2\n+  config:\n+    cleanup.policy: delete\n+    retention.ms: \"3600000\"\n+---\n+apiVersion: kafka.strimzi.io/v1beta1\n+kind: KafkaTopic\n+metadata:\n+  name: strimzi.cruisecontrol.modeltrainingsamples\n+  labels:\n+    strimzi.io/cluster: my-cluster\n+spec:\n+  partitions: 32\n+  replicas: 2\n+  config:\n+    cleanup.policy: delete\n+    retention.ms: \"12000000\"\n+---\n+apiVersion: kafka.strimzi.io/v1beta1\n+kind: KafkaTopic\n+metadata:\n+  name: strimzi.cruisecontrol.metrics\n+  labels:\n+    strimzi.io/cluster: my-cluster\n+spec:\n+  partitions: 1\n+  replicas: 1\n+  config:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcyOTExNw=="}, "originalCommit": {"oid": "ec1f30583431cadceb7bea0bc20be272561fdecb"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzM0MTk5OnYy", "diffSide": "RIGHT", "path": "helm-charts/strimzi-kafka-operator/templates/040-Crd-kafka.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwMjowMjo0N1rOGQYOZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwMjowMjo0N1rOGQYOZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTgyNzMwMg==", "bodyText": "Just found a typo here, I'll fix this tomorrow", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r419827302", "createdAt": "2020-05-05T02:02:47Z", "author": {"login": "kyguy"}, "path": "helm-charts/strimzi-kafka-operator/templates/040-Crd-kafka.yaml", "diffHunk": "@@ -923,10 +923,9 @@ spec:\n                     prefixes cannot be set: listeners, advertised., broker., listener.,\n                     host.name, port, inter.broker.listener.name, sasl., ssl., security.,\n                     password., principal.builder.class, log.dir, zookeeper.connect,\n-                    zookeeper.set.acl, authorizer., super.usercruise.control.metrics.topic,\n-                    cruise.control.metrics.reporter.bootstrap.servers (with the exception\n-                    of: zookeeper.connection.timeout.ms, ssl.cipher.suites, ssl.protocol,\n-                    ssl.enabled.protocols).'\n+                    zookeeper.set.acl, authorizer., super.usercruise.control.metrics.reporter.bootstrap.servers", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1279e6cc99e348f12c0a4c1912b12e5aec47bd6e"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzM0MjQ2OnYy", "diffSide": "RIGHT", "path": "install/cluster-operator/040-Crd-kafka.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwMjowMzoxN1rOGQYOtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwMjowMzoxN1rOGQYOtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTgyNzM4Mw==", "bodyText": "Typo is here as well", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r419827383", "createdAt": "2020-05-05T02:03:17Z", "author": {"login": "kyguy"}, "path": "install/cluster-operator/040-Crd-kafka.yaml", "diffHunk": "@@ -918,10 +918,9 @@ spec:\n                     prefixes cannot be set: listeners, advertised., broker., listener.,\n                     host.name, port, inter.broker.listener.name, sasl., ssl., security.,\n                     password., principal.builder.class, log.dir, zookeeper.connect,\n-                    zookeeper.set.acl, authorizer., super.usercruise.control.metrics.topic,\n-                    cruise.control.metrics.reporter.bootstrap.servers (with the exception\n-                    of: zookeeper.connection.timeout.ms, ssl.cipher.suites, ssl.protocol,\n-                    ssl.enabled.protocols).'\n+                    zookeeper.set.acl, authorizer., super.usercruise.control.metrics.reporter.bootstrap.servers", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1279e6cc99e348f12c0a4c1912b12e5aec47bd6e"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzc4NTgxOnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/KafkaBrokerConfigurationBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNjozMTo1OFrOGQcEnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzoyMTo0OVrOGQzwhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg5MDMzMw==", "bodyText": "I am a little bit confused here. We are enabling the metrics reporter topic auto-creation but we actually know that it's not going to work when Kafka broker auto topic creation is disabled.\nRegarding the num of partitions and replication factor, I see that these parameters are coming from the KafkaCluster model where the defaults are \"1\". It sounds weird because they should be some defaults for specific metrics reporter topic creation not related to Kafka itself (which has these values by default to 1 anyway when the auto topic creation is enabled).\nWe are also enabling this stuff by default, is really what we want? It means that user cannot disable metrics reporter auto topic creation, or?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r419890333", "createdAt": "2020-05-05T06:31:58Z", "author": {"login": "ppatierno"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/KafkaBrokerConfigurationBuilder.java", "diffHunk": "@@ -84,6 +86,9 @@ public KafkaBrokerConfigurationBuilder withCruiseControl(String clusterName, Cru\n             writer.println(\"cruise.control.metrics.reporter.ssl.truststore.type=PKCS12\");\n             writer.println(\"cruise.control.metrics.reporter.ssl.truststore.location=/tmp/kafka/cluster.truststore.p12\");\n             writer.println(\"cruise.control.metrics.reporter.ssl.truststore.password=${CERTS_STORE_PASSWORD}\");\n+            writer.println(\"cruise.control.metrics.topic.auto.create=true\");\n+            writer.println(\"cruise.control.metrics.topic.num.partitions=\" + defaultNumPartitions);\n+            writer.println(\"cruise.control.metrics.topic.replication.factor=\" + defaultReplicationFactor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1279e6cc99e348f12c0a4c1912b12e5aec47bd6e"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI3ODQwNA==", "bodyText": "I am a little bit confused here. We are enabling the metrics reporter topic auto-creation but we actually know that it's not going to work when Kafka broker auto topic creation is disabled.\n\nAs discussed earlier today, the metrics reporter topic auto-creation will work in all situations except when being started with a new Kafka cluster, so we enable by default and forbid the user from setting it. This way, the topic creation/configuration will work correctly for all other situations\n\nRegarding the num of partitions and replication factor, I see that these parameters are coming from the KafkaCluster model where the defaults are \"1\". It sounds weird because they should be some defaults for specific metrics reporter topic creation not related to Kafka itself (which has these values by default to 1 anyway when the auto topic creation is enabled).\n\nAh yes, those values should be coming from CC metric reporter config first and the Kafka config  second if the CC metric reporter config are not set for these fields. I'll update that in the next commit, nice catch!\n\nWe are also enabling this stuff by default, is really what we want? It means that user cannot disable metrics reporter auto topic creation, or?\n\nYes definitely, we only gain by having this setting locked in as enabled, plus we will this enabled anyway for the metric reporter patch will commit upstream.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r420278404", "createdAt": "2020-05-05T17:21:49Z", "author": {"login": "kyguy"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/KafkaBrokerConfigurationBuilder.java", "diffHunk": "@@ -84,6 +86,9 @@ public KafkaBrokerConfigurationBuilder withCruiseControl(String clusterName, Cru\n             writer.println(\"cruise.control.metrics.reporter.ssl.truststore.type=PKCS12\");\n             writer.println(\"cruise.control.metrics.reporter.ssl.truststore.location=/tmp/kafka/cluster.truststore.p12\");\n             writer.println(\"cruise.control.metrics.reporter.ssl.truststore.password=${CERTS_STORE_PASSWORD}\");\n+            writer.println(\"cruise.control.metrics.topic.auto.create=true\");\n+            writer.println(\"cruise.control.metrics.topic.num.partitions=\" + defaultNumPartitions);\n+            writer.println(\"cruise.control.metrics.topic.replication.factor=\" + defaultReplicationFactor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg5MDMzMw=="}, "originalCommit": {"oid": "1279e6cc99e348f12c0a4c1912b12e5aec47bd6e"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTg5NTIwOnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/proc-deploying-cruise-control.adoc", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjowMjozMFrOGQwdrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMTozMDoxM1rOGQ8S4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIyNDQyOQ==", "bodyText": "in your Kafka cluster?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r420224429", "createdAt": "2020-05-05T16:02:30Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/proc-deploying-cruise-control.adoc", "diffHunk": "@@ -13,13 +13,24 @@ For an overview of the `Kafka` resource, see the xref:ref-sample-kafka-resource-\n You can configure `cruiseControl` properties as part of a deployment or redeployment of a Kafka cluster.\n Deploy one instance of Cruise Control per Kafka cluster.\n \n+In this procedure, we use the example file provided with {ProductName}:\n+\n+* `examples/topic/cruise-control-topics.yaml`\n+\n .Prerequisites\n \n * A Kubernetes cluster\n * A running Cluster Operator\n \n .Procedure\n \n+. Create Cruise Control topics in your Kubernetes cluster:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1279e6cc99e348f12c0a4c1912b12e5aec47bd6e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIzNTEyMA==", "bodyText": "Is topics plural correct?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r420235120", "createdAt": "2020-05-05T16:17:51Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/proc-deploying-cruise-control.adoc", "diffHunk": "@@ -13,13 +13,24 @@ For an overview of the `Kafka` resource, see the xref:ref-sample-kafka-resource-\n You can configure `cruiseControl` properties as part of a deployment or redeployment of a Kafka cluster.\n Deploy one instance of Cruise Control per Kafka cluster.\n \n+In this procedure, we use the example file provided with {ProductName}:\n+\n+* `examples/topic/cruise-control-topics.yaml`\n+\n .Prerequisites\n \n * A Kubernetes cluster\n * A running Cluster Operator\n \n .Procedure\n \n+. Create Cruise Control topics in your Kubernetes cluster:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIyNDQyOQ=="}, "originalCommit": {"oid": "1279e6cc99e348f12c0a4c1912b12e5aec47bd6e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQxODI3NQ==", "bodyText": "Fixed", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r420418275", "createdAt": "2020-05-05T21:30:13Z", "author": {"login": "kyguy"}, "path": "documentation/modules/cruise-control/proc-deploying-cruise-control.adoc", "diffHunk": "@@ -13,13 +13,24 @@ For an overview of the `Kafka` resource, see the xref:ref-sample-kafka-resource-\n You can configure `cruiseControl` properties as part of a deployment or redeployment of a Kafka cluster.\n Deploy one instance of Cruise Control per Kafka cluster.\n \n+In this procedure, we use the example file provided with {ProductName}:\n+\n+* `examples/topic/cruise-control-topics.yaml`\n+\n .Prerequisites\n \n * A Kubernetes cluster\n * A running Cluster Operator\n \n .Procedure\n \n+. Create Cruise Control topics in your Kubernetes cluster:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIyNDQyOQ=="}, "originalCommit": {"oid": "1279e6cc99e348f12c0a4c1912b12e5aec47bd6e"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTk1OTIyOnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/proc-deploying-cruise-control.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjoxNzozMlrOGQxGmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjoxNzozMlrOGQxGmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIzNDkwNg==", "bodyText": "I think you need a sentence or two on the purpose of the topics file. Also, \"we use\" sounds like this method of deploying Cruise Control is optional.\nSomething like this might work:\nThis procedure uses the following example file provided with {ProductName}:\nexamples/topic/cruise-control-topics.yaml\nThis creates a  strimzi.cruisecontrol.metrics topic in your Kafka cluster, which collects information from the Cruise Control Metrics Reporter for use in generating rebalance proposals. You do not need to interact with this topic after Cruise Control is deployed.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r420234906", "createdAt": "2020-05-05T16:17:32Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/proc-deploying-cruise-control.adoc", "diffHunk": "@@ -13,13 +13,24 @@ For an overview of the `Kafka` resource, see the xref:ref-sample-kafka-resource-\n You can configure `cruiseControl` properties as part of a deployment or redeployment of a Kafka cluster.\n Deploy one instance of Cruise Control per Kafka cluster.\n \n+In this procedure, we use the example file provided with {ProductName}:\n+\n+* `examples/topic/cruise-control-topics.yaml`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1279e6cc99e348f12c0a4c1912b12e5aec47bd6e"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNzQxNDUyOnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/ref-cruise-control-configuration.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMzoyMzoxNlrOGQ_KJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMzoyMzoxNlrOGQ_KJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ2NTE5MQ==", "bodyText": "This should have a metadata section or a placeholder #... ... the same for partitions and replicas.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r420465191", "createdAt": "2020-05-05T23:23:16Z", "author": {"login": "scholzj"}, "path": "documentation/modules/cruise-control/ref-cruise-control-configuration.adoc", "diffHunk": "@@ -96,6 +96,41 @@ spec:\n .Additional resources\n For more information, refer to the xref:type-BrokerCapacity-reference[].\n \n+== Topic creation and configuration\n+\n+Cruise Control requires the following three topics to be created in order to function properly:\n+\n+* `strimzi.cruisecontrol.partitionmetricsamples`\n+* `strimzi.cruisecontrol.modeltrainingsamples`\n+* `strimzi.cruisecontrol.metrics`\n+\n+Cruise Control will create the `strimzi.cruisecontrol.partitionmetricsamples` and `strimzi.cruisecontrol.modeltrainingsamples` topics after the Cruise Control metric reporters create the `strimzi.cruisecontrol.metrics` topic.\n+However, if automatic topic creation is disabled in Kafka with a configuration of `auto.create.topics.enable: false` in `spec.kafka.config` when starting a new Kafka cluster, the Cruise Control metric reporters will be unable to create the `strimzi.cruisecontrol.metrics` topic.\n+In this situation, the the strimzi.cruisecontrol.metrics` topic will need to be created manually using the `example/topic/cruise-control-topics.yaml` file.\n+\n+To manually create the `strimzi.cruisecontrol.metrics` Cruise Control topic in your Kubernetes cluster:\n+[source,shell,subs=\"attributes+\"]\n+----\n+kubectl apply -f examples/cruise-control/cruise-control-topic.yaml\n+----\n+\n+Since log compaction may remove records needed by Cruise Control, all topics created by Cruise Control must be configured with `cleanup.policy=delete` to disable log compaction.\n+Cruise Control will automatically disable log compaction for the `strimzi.cruisecontrol.partitionmetricsamples` and `strimzi.cruisecontrol.modeltrainingsamples` topics.\n+The Cruise Control metric reporters will attempt to disable log compaction for the `strimzi.cruisecontrol.metrics` topic but will fail when being started with a new Kafka cluster.\n+This will only become a problem when log compaction is enabled in Kafka with the setting `log.cleanup.policy=compact` in the `spec.kafka.config`.\n+In this situation, log compaction will be enabled for `strimzi.cruisecontrol.metrics` topic and will need to be overridden with a `cleanup.policy=delete` in the `strimzi.cruisecontrol.metrics` KafkaTopic.\n+\n+Here we see an example of log compaction being disabled in a Cruise Control KafkaTopic.\n+\n+[source,yaml,subs=\"+quotes,attributes\"]\n+----\n+apiVersion: kafka.strimzi.io/v1beta1\n+kind: KafkaTopic\n+spec:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b320e9a16481cc45ab94b7f7fe719d491c66bc"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODQ4MzMwOnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/proc-deploying-cruise-control.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODoyOToyMVrOGRI5mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODoyOToyMVrOGRI5mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYyNDc5Mw==", "bodyText": "Add backticks around the topic name.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r420624793", "createdAt": "2020-05-06T08:29:21Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/proc-deploying-cruise-control.adoc", "diffHunk": "@@ -13,13 +13,27 @@ For an overview of the `Kafka` resource, see the xref:ref-sample-kafka-resource-\n You can configure `cruiseControl` properties as part of a deployment or redeployment of a Kafka cluster.\n Deploy one instance of Cruise Control per Kafka cluster.\n \n+This procedure uses the following example file provided with {ProductName}:\n+\n+* `examples/cruise-control/cruise-control-topic.yaml`\n+\n+This creates a strimzi.cruisecontrol.metrics topic in your Kafka cluster, which collects information from the Cruise Control Metrics Reporter for use in generating rebalance proposals.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9193409904b9a965b06e8a54f0648e534e9e72"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODU1NzQ0OnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/ref-cruise-control-configuration.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODo1MToxNFrOGRJpqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODo1MToxNFrOGRJpqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYzNzA5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            In this situation, the the strimzi.cruisecontrol.metrics` topic will need to be created manually using the `example/topic/cruise-control-topics.yaml` file.\n          \n          \n            \n            In this situation, the `strimzi.cruisecontrol.metrics` topic will need to be created manually using the `example/topic/cruise-control-topics.yaml` file.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r420637099", "createdAt": "2020-05-06T08:51:14Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/ref-cruise-control-configuration.adoc", "diffHunk": "@@ -96,6 +96,45 @@ spec:\n .Additional resources\n For more information, refer to the xref:type-BrokerCapacity-reference[].\n \n+== Topic creation and configuration\n+\n+Cruise Control requires the following three topics to be created in order to function properly:\n+\n+* `strimzi.cruisecontrol.partitionmetricsamples`\n+* `strimzi.cruisecontrol.modeltrainingsamples`\n+* `strimzi.cruisecontrol.metrics`\n+\n+Cruise Control will create the `strimzi.cruisecontrol.partitionmetricsamples` and `strimzi.cruisecontrol.modeltrainingsamples` topics after the Cruise Control metric reporters create the `strimzi.cruisecontrol.metrics` topic.\n+However, if automatic topic creation is disabled in Kafka with a configuration of `auto.create.topics.enable: false` in `spec.kafka.config` when starting a new Kafka cluster, the Cruise Control metric reporters will be unable to create the `strimzi.cruisecontrol.metrics` topic.\n+In this situation, the the strimzi.cruisecontrol.metrics` topic will need to be created manually using the `example/topic/cruise-control-topics.yaml` file.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9193409904b9a965b06e8a54f0648e534e9e72"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDUzODAxOnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/KafkaCluster.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDo1Mjo0N1rOGUYhJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDo1Mjo0N1rOGUYhJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAyNjQwNw==", "bodyText": "I think the names here are confusing. If I read the code right ... the kafkaDefault* are the defaults which will be used when user doesn't specify anything specific size? And the ccDefault* are the actual value either user configured of default? In which case they should not be named default because that is confusing and when you see default you expect there to be some other non-default value. So IMHO you should rename it (including the KafkaBrokerConfiguration etc.)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r424026407", "createdAt": "2020-05-12T20:52:47Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/KafkaCluster.java", "diffHunk": "@@ -221,6 +225,10 @@\n     private KafkaAuthorization authorization;\n     private KafkaVersion kafkaVersion;\n     private CruiseControlSpec cruiseControlSpec;\n+    private String kafkaDefaultNumPartitions = \"1\";\n+    private String kafkaDefaultReplicationFactor = \"1\";\n+    private String ccDefaultNumPartitions = null;\n+    private String ccDefaultReplicationFactor = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a441eb0d9ece5350e54c33f9a34dcb0f284fb42"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDU1NDcxOnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/KafkaCluster.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDo1NzozOFrOGUYrpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzowNjowOVrOGUb_xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAyOTA5NA==", "bodyText": "If I read this section right, the flow is that:\n\nThe user specifies these topions in Kafka.spec.kafka.config\nYou read them from there\nYou pass them to the KafkaBrokerConfigurationBuilder which puts them into the broker configuration file\n\nBut at the same time, they will be put into the KAfka broker configuration as part of withUserConfiguration so they will be there twice, or?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r424029094", "createdAt": "2020-05-12T20:57:38Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/KafkaCluster.java", "diffHunk": "@@ -457,6 +465,13 @@ public static KafkaCluster fromCrd(Kafka kafkaAssembly, KafkaVersion.Lookup vers\n         }\n \n         KafkaConfiguration configuration = new KafkaConfiguration(kafkaClusterSpec.getConfig().entrySet());\n+        // If  required Cruise Control metric reporter configurations are missing set them using Kafka defaults\n+        if (configuration.getConfigOption(CC_NUM_PARTITIONS_CONFIG_FIELD) == null) {\n+            result.ccDefaultNumPartitions = configuration.getConfigOption(KAFKA_NUM_PARTITIONS_CONFIG_FIELD, result.kafkaDefaultNumPartitions);\n+        }\n+        if (configuration.getConfigOption(CC_REPLICATION_FACTOR_CONFIG_FIELD) == null) {\n+            result.ccDefaultReplicationFactor = configuration.getConfigOption(KAFKA_REPLICATION_FACTOR_CONFIG_FIELD, result.kafkaDefaultReplicationFactor);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a441eb0d9ece5350e54c33f9a34dcb0f284fb42"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MzM5OA==", "bodyText": "This is the intended logic flow:\n\nThe user specifies options, cruise.control.metrics.topic.num.partitions and/or cruise.control.metrics.topic.replication.factor in the Kafka.spec.kafka.config\nThese options are read\nThe if-statements highlighted above will not execute since they are found in the map with getConfigOption(), so the fields ccNumPartitions and ccReplicationFactor will remain null\nThe ccNumPartitions and ccReplicationFactor fields are passed to  KafkaBrokerConfigurationBuilder, but will not be added to the broker configuration since they are null. This way these options are only added once to the broker configuration.\n\n  \n    \n      strimzi-kafka-operator/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/KafkaBrokerConfigurationBuilder.java\n    \n    \n        Lines 90 to 95\n      in\n      2a441eb\n    \n    \n    \n    \n\n        \n          \n           if (defaultNumPartitions != null) { \n        \n\n        \n          \n               writer.println(\"cruise.control.metrics.topic.num.partitions=\" + defaultNumPartitions); \n        \n\n        \n          \n           } \n        \n\n        \n          \n           if (defaultReplicationFactor != null) { \n        \n\n        \n          \n               writer.println(\"cruise.control.metrics.topic.replication.factor=\" + defaultReplicationFactor); \n        \n\n        \n          \n           }", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2921#discussion_r424083398", "createdAt": "2020-05-12T23:06:09Z", "author": {"login": "kyguy"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/KafkaCluster.java", "diffHunk": "@@ -457,6 +465,13 @@ public static KafkaCluster fromCrd(Kafka kafkaAssembly, KafkaVersion.Lookup vers\n         }\n \n         KafkaConfiguration configuration = new KafkaConfiguration(kafkaClusterSpec.getConfig().entrySet());\n+        // If  required Cruise Control metric reporter configurations are missing set them using Kafka defaults\n+        if (configuration.getConfigOption(CC_NUM_PARTITIONS_CONFIG_FIELD) == null) {\n+            result.ccDefaultNumPartitions = configuration.getConfigOption(KAFKA_NUM_PARTITIONS_CONFIG_FIELD, result.kafkaDefaultNumPartitions);\n+        }\n+        if (configuration.getConfigOption(CC_REPLICATION_FACTOR_CONFIG_FIELD) == null) {\n+            result.ccDefaultReplicationFactor = configuration.getConfigOption(KAFKA_REPLICATION_FACTOR_CONFIG_FIELD, result.kafkaDefaultReplicationFactor);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAyOTA5NA=="}, "originalCommit": {"oid": "2a441eb0d9ece5350e54c33f9a34dcb0f284fb42"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 263, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}