{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MTc0MzI4", "number": 2969, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODoyNzozM1rOD8L7Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNjoxNzoxMFrOD930YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDM2NTMwOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODoyNzozM1rOGU-RWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNzozMzozNFrOGVPi1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0NDk1Mg==", "bodyText": "Should we name it testcontainer? The strimzi seems unnecessary to me and only continer is not enough to differentiate it from the regular containers.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2969#discussion_r424644952", "createdAt": "2020-05-13T18:27:33Z", "author": {"login": "scholzj"}, "path": "pom.xml", "diffHunk": "@@ -130,6 +131,7 @@\n         <module>mirror-maker-agent</module>\n         <module>tracing-agent</module>\n         <module>test</module>\n+        <module>strimzi-container</module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "626fe6cc3b7e1b81ccb3045ff6f1d897c2112773"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkyNzk1Nw==", "bodyText": "Sure thing", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2969#discussion_r424927957", "createdAt": "2020-05-14T07:33:34Z", "author": {"login": "see-quick"}, "path": "pom.xml", "diffHunk": "@@ -130,6 +131,7 @@\n         <module>mirror-maker-agent</module>\n         <module>tracing-agent</module>\n         <module>test</module>\n+        <module>strimzi-container</module>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0NDk1Mg=="}, "originalCommit": {"oid": "626fe6cc3b7e1b81ccb3045ff6f1d897c2112773"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDM4NTYwOnYy", "diffSide": "RIGHT", "path": "strimzi-container/src/main/java/io/strimzi/StrimziContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODozMjo0MFrOGU-duw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODozMjo0MFrOGU-duw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0ODEyMw==", "bodyText": "Why 9093? And not 9092?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2969#discussion_r424648123", "createdAt": "2020-05-13T18:32:40Z", "author": {"login": "scholzj"}, "path": "strimzi-container/src/main/java/io/strimzi/StrimziContainer.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi;\n+\n+import com.github.dockerjava.api.command.ExecCreateCmdResponse;\n+import com.github.dockerjava.api.command.InspectContainerResponse;\n+import com.github.dockerjava.api.model.ContainerNetwork;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.Network;\n+\n+import java.util.Collection;\n+import java.util.concurrent.TimeUnit;\n+\n+public class StrimziContainer extends GenericContainer<StrimziContainer> {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(StrimziContainer.class);\n+\n+    private static final String STARTER_SCRIPT = \"/testcontainers_start.sh\";\n+    private static final int KAFKA_PORT = 9093;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "626fe6cc3b7e1b81ccb3045ff6f1d897c2112773"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDM4OTE1OnYy", "diffSide": "RIGHT", "path": "strimzi-container/src/main/java/io/strimzi/StrimziContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODozMzo0NFrOGU-gFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODozMzo0NFrOGU-gFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0ODcyNg==", "bodyText": "How is the version here managed? Also - assuming this is an user interface ... should it be there as strimziVersion and kafkaVersion and the tag generated out of that?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2969#discussion_r424648726", "createdAt": "2020-05-13T18:33:44Z", "author": {"login": "scholzj"}, "path": "strimzi-container/src/main/java/io/strimzi/StrimziContainer.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi;\n+\n+import com.github.dockerjava.api.command.ExecCreateCmdResponse;\n+import com.github.dockerjava.api.command.InspectContainerResponse;\n+import com.github.dockerjava.api.model.ContainerNetwork;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.Network;\n+\n+import java.util.Collection;\n+import java.util.concurrent.TimeUnit;\n+\n+public class StrimziContainer extends GenericContainer<StrimziContainer> {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(StrimziContainer.class);\n+\n+    private static final String STARTER_SCRIPT = \"/testcontainers_start.sh\";\n+    private static final int KAFKA_PORT = 9093;\n+    private static final int ZOOKEEPER_PORT = 2181;\n+\n+    private int kafkaExposedPort;\n+    private StringBuilder advertisedListeners;\n+\n+    public StrimziContainer(final String version) {\n+        super(\"strimzi/kafka:\" + version);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "626fe6cc3b7e1b81ccb3045ff6f1d897c2112773"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDM5MTMxOnYy", "diffSide": "RIGHT", "path": "strimzi-container/src/main/java/io/strimzi/StrimziContainer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODozNDoyM1rOGU-hcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDowNToxM1rOGVd6AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0OTA3NA==", "bodyText": "This is tricky and would need to be maintained maually in releases etc. So I think this needs to be generated from make release or something like that.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2969#discussion_r424649074", "createdAt": "2020-05-13T18:34:23Z", "author": {"login": "scholzj"}, "path": "strimzi-container/src/main/java/io/strimzi/StrimziContainer.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi;\n+\n+import com.github.dockerjava.api.command.ExecCreateCmdResponse;\n+import com.github.dockerjava.api.command.InspectContainerResponse;\n+import com.github.dockerjava.api.model.ContainerNetwork;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.Network;\n+\n+import java.util.Collection;\n+import java.util.concurrent.TimeUnit;\n+\n+public class StrimziContainer extends GenericContainer<StrimziContainer> {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(StrimziContainer.class);\n+\n+    private static final String STARTER_SCRIPT = \"/testcontainers_start.sh\";\n+    private static final int KAFKA_PORT = 9093;\n+    private static final int ZOOKEEPER_PORT = 2181;\n+\n+    private int kafkaExposedPort;\n+    private StringBuilder advertisedListeners;\n+\n+    public StrimziContainer(final String version) {\n+        super(\"strimzi/kafka:\" + version);\n+        super.withNetwork(Network.SHARED);\n+\n+        // exposing kafka port from the container\n+        withExposedPorts(KAFKA_PORT);\n+    }\n+\n+    public StrimziContainer() {\n+        this(\"latest-kafka-2.5.0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "626fe6cc3b7e1b81ccb3045ff6f1d897c2112773"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE2MzI2NQ==", "bodyText": "updated", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2969#discussion_r425163265", "createdAt": "2020-05-14T14:05:13Z", "author": {"login": "see-quick"}, "path": "strimzi-container/src/main/java/io/strimzi/StrimziContainer.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi;\n+\n+import com.github.dockerjava.api.command.ExecCreateCmdResponse;\n+import com.github.dockerjava.api.command.InspectContainerResponse;\n+import com.github.dockerjava.api.model.ContainerNetwork;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.Network;\n+\n+import java.util.Collection;\n+import java.util.concurrent.TimeUnit;\n+\n+public class StrimziContainer extends GenericContainer<StrimziContainer> {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(StrimziContainer.class);\n+\n+    private static final String STARTER_SCRIPT = \"/testcontainers_start.sh\";\n+    private static final int KAFKA_PORT = 9093;\n+    private static final int ZOOKEEPER_PORT = 2181;\n+\n+    private int kafkaExposedPort;\n+    private StringBuilder advertisedListeners;\n+\n+    public StrimziContainer(final String version) {\n+        super(\"strimzi/kafka:\" + version);\n+        super.withNetwork(Network.SHARED);\n+\n+        // exposing kafka port from the container\n+        withExposedPorts(KAFKA_PORT);\n+    }\n+\n+    public StrimziContainer() {\n+        this(\"latest-kafka-2.5.0\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0OTA3NA=="}, "originalCommit": {"oid": "626fe6cc3b7e1b81ccb3045ff6f1d897c2112773"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0Njk4MDIwOnYy", "diffSide": "RIGHT", "path": "systemtest/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMToyNDo0MFrOGVX0xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMzoxNjozNFrOGVburw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA2MzYyMA==", "bodyText": "Is the version needed here in this place?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2969#discussion_r425063620", "createdAt": "2020-05-14T11:24:40Z", "author": {"login": "scholzj"}, "path": "systemtest/pom.xml", "diffHunk": "@@ -222,6 +222,12 @@\n             <artifactId>jackson-databind</artifactId>\n             <version>${fasterxml.jackson-databind.version}</version>\n         </dependency>\n+        <dependency>\n+            <groupId>io.strimzi</groupId>\n+            <artifactId>test-containers</artifactId>\n+            <version>0.18.0-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a287d533133317bb7d6d638916a5c6a07322638e"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTEyNzU5OQ==", "bodyText": "this should be there...${project.version} updated", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2969#discussion_r425127599", "createdAt": "2020-05-14T13:16:34Z", "author": {"login": "see-quick"}, "path": "systemtest/pom.xml", "diffHunk": "@@ -222,6 +222,12 @@\n             <artifactId>jackson-databind</artifactId>\n             <version>${fasterxml.jackson-databind.version}</version>\n         </dependency>\n+        <dependency>\n+            <groupId>io.strimzi</groupId>\n+            <artifactId>test-containers</artifactId>\n+            <version>0.18.0-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA2MzYyMA=="}, "originalCommit": {"oid": "a287d533133317bb7d6d638916a5c6a07322638e"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NzU2NjQ1OnYy", "diffSide": "RIGHT", "path": "test-container/src/main/java/io/strimzi/StrimziContainer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMzo1OTozMlrOGVdp3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDowMTo0NFrOGVdwUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE1OTEzNA==", "bodyText": "Shouldn't we name it as StrimziKafkaContainer since it's not contain strimzi, but only our Kafka image?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2969#discussion_r425159134", "createdAt": "2020-05-14T13:59:32Z", "author": {"login": "Frawless"}, "path": "test-container/src/main/java/io/strimzi/StrimziContainer.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi;\n+\n+import com.github.dockerjava.api.command.ExecCreateCmdResponse;\n+import com.github.dockerjava.api.command.InspectContainerResponse;\n+import com.github.dockerjava.api.model.ContainerNetwork;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.Network;\n+import org.yaml.snakeyaml.Yaml;\n+\n+import java.io.FileNotFoundException;\n+import java.io.FileReader;\n+import java.io.Reader;\n+import java.util.Collection;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+\n+public class StrimziContainer extends GenericContainer<StrimziContainer> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3eeaac797eecf349f9e94756bbb68800aa916e5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE2MDc4Ng==", "bodyText": "I agree :)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2969#discussion_r425160786", "createdAt": "2020-05-14T14:01:44Z", "author": {"login": "see-quick"}, "path": "test-container/src/main/java/io/strimzi/StrimziContainer.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi;\n+\n+import com.github.dockerjava.api.command.ExecCreateCmdResponse;\n+import com.github.dockerjava.api.command.InspectContainerResponse;\n+import com.github.dockerjava.api.model.ContainerNetwork;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.Network;\n+import org.yaml.snakeyaml.Yaml;\n+\n+import java.io.FileNotFoundException;\n+import java.io.FileReader;\n+import java.io.Reader;\n+import java.util.Collection;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+\n+public class StrimziContainer extends GenericContainer<StrimziContainer> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE1OTEzNA=="}, "originalCommit": {"oid": "b3eeaac797eecf349f9e94756bbb68800aa916e5"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MDE3OTA2OnYy", "diffSide": "RIGHT", "path": "test-container/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNTo1MToyNFrOGV3W6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNTo1MToyNFrOGV3W6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU4MDI2NA==", "bodyText": "Maybe put it into root pom?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2969#discussion_r425580264", "createdAt": "2020-05-15T05:51:24Z", "author": {"login": "Frawless"}, "path": "test-container/pom.xml", "diffHunk": "@@ -0,0 +1,45 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <parent>\n+        <artifactId>strimzi</artifactId>\n+        <groupId>io.strimzi</groupId>\n+        <version>0.18.0-SNAPSHOT</version>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>test-container</artifactId>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.testcontainers</groupId>\n+            <artifactId>testcontainers</artifactId>\n+            <version>${test-containers.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.logging.log4j</groupId>\n+            <artifactId>log4j-api</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.yaml</groupId>\n+            <artifactId>snakeyaml</artifactId>\n+            <version>1.24</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d26230945a38c785727952fcaf532795a863112d"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDcyODk4OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMTowMTo0NFrOGXbHNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzo0OTo0MlrOGXhXtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIxNDY0NQ==", "bodyText": "I think this should be added to the dependencyManagement section as well.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2969#discussion_r427214645", "createdAt": "2020-05-19T11:01:44Z", "author": {"login": "scholzj"}, "path": "pom.xml", "diffHunk": "@@ -102,6 +102,7 @@\n         <strimzi-oauth.version>0.5.0</strimzi-oauth.version>\n \n         <junit-json-params.version>5.5.1-r0</junit-json-params.version>\n+        <test-containers.version>1.14.0</test-containers.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe6f998d2d4d6e7a53a94a80af16f466126af892"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxNzE3NA==", "bodyText": "Added", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2969#discussion_r427317174", "createdAt": "2020-05-19T13:49:42Z", "author": {"login": "see-quick"}, "path": "pom.xml", "diffHunk": "@@ -102,6 +102,7 @@\n         <strimzi-oauth.version>0.5.0</strimzi-oauth.version>\n \n         <junit-json-params.version>5.5.1-r0</junit-json-params.version>\n+        <test-containers.version>1.14.0</test-containers.version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIxNDY0NQ=="}, "originalCommit": {"oid": "fe6f998d2d4d6e7a53a94a80af16f466126af892"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDczMTI1OnYy", "diffSide": "RIGHT", "path": "test-container/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMTowMjoyMlrOGXbImA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzo0OTo1MlrOGXhYGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIxNTAwMA==", "bodyText": "The version should not be needed once you add it to dependencyManagement in the main pom.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2969#discussion_r427215000", "createdAt": "2020-05-19T11:02:22Z", "author": {"login": "scholzj"}, "path": "test-container/pom.xml", "diffHunk": "@@ -0,0 +1,78 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <parent>\n+        <artifactId>strimzi</artifactId>\n+        <groupId>io.strimzi</groupId>\n+        <version>0.19.0-SNAPSHOT</version>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>test-container</artifactId>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.testcontainers</groupId>\n+            <artifactId>testcontainers</artifactId>\n+            <version>${test-containers.version}</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe6f998d2d4d6e7a53a94a80af16f466126af892"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxNzI3NQ==", "bodyText": "good done", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2969#discussion_r427317275", "createdAt": "2020-05-19T13:49:52Z", "author": {"login": "see-quick"}, "path": "test-container/pom.xml", "diffHunk": "@@ -0,0 +1,78 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <parent>\n+        <artifactId>strimzi</artifactId>\n+        <groupId>io.strimzi</groupId>\n+        <version>0.19.0-SNAPSHOT</version>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>test-container</artifactId>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.testcontainers</groupId>\n+            <artifactId>testcontainers</artifactId>\n+            <version>${test-containers.version}</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIxNTAwMA=="}, "originalCommit": {"oid": "fe6f998d2d4d6e7a53a94a80af16f466126af892"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjA0MjU2OnYy", "diffSide": "RIGHT", "path": "test-container/src/main/resources/kafka-versions.txt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNjoxNzoxMFrOGXoLrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNzozMjo1N1rOGX-xtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQyODc4Mg==", "bodyText": "why do we need this file?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2969#discussion_r427428782", "createdAt": "2020-05-19T16:17:10Z", "author": {"login": "Frawless"}, "path": "test-container/src/main/resources/kafka-versions.txt", "diffHunk": "@@ -0,0 +1,3 @@\n+2.4.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cfa009415f4b839aed0f183004befa35c27acd0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5ODk2NQ==", "bodyText": "This is the file generated in the build phase of the whole project. So by that, we are avoiding problem when we use this dependency in the different project. For instance, if I use it inside Bridge.\nPreviously, I had implementation with parsing the kafka-versions.yaml in Runtime by this is not possible because that file kafka-versions.yaml will not be inside another repository.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2969#discussion_r427798965", "createdAt": "2020-05-20T07:32:57Z", "author": {"login": "see-quick"}, "path": "test-container/src/main/resources/kafka-versions.txt", "diffHunk": "@@ -0,0 +1,3 @@\n+2.4.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQyODc4Mg=="}, "originalCommit": {"oid": "0cfa009415f4b839aed0f183004befa35c27acd0"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4987, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}