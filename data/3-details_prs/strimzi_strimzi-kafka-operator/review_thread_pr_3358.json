{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NzkxODQ5", "number": 3358, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwODoxOTowMlrOERWYCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwODoxOTozMVrOERWYpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NjI3ODUxOnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/tracing/TracingST.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwODoxOTowMlrOG2Amcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwODoxOTowMlrOG2Amcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI4NjEzMQ==", "bodyText": "I think that these explicit deletions are not needed it should be deleted by ResourceManager.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3358#discussion_r459286131", "createdAt": "2020-07-23T08:19:02Z", "author": {"login": "see-quick"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/tracing/TracingST.java", "diffHunk": "@@ -648,6 +787,14 @@ void testProducerConsumerMirrorMakerConnectStreamsService() {\n         LOGGER.info(\"Deleting topic {} from CR\", TOPIC_TARGET_NAME);\n         cmdKubeClient().deleteByName(\"kafkatopic\", TOPIC_TARGET_NAME);\n         KafkaTopicUtils.waitForKafkaTopicDeletion(TOPIC_TARGET_NAME);\n+\n+        LOGGER.info(\"Deleting topic {} from CR\", TOPIC_NAME + \"-target\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7498b990ae10d2c704bacfe70999a4489d93f657"}, "originalPosition": 368}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NjI4MDA1OnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/tracing/TracingST.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwODoxOTozMVrOG2AnZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwODoyNDoxMVrOG2AwyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI4NjM3Mw==", "bodyText": "Is this specific configuration really needed?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3358#discussion_r459286373", "createdAt": "2020-07-23T08:19:31Z", "author": {"login": "see-quick"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/tracing/TracingST.java", "diffHunk": "@@ -553,17 +608,65 @@ void testProducerConsumerMirrorMakerConnectStreamsService() {\n                 .endSpec()\n                 .done();\n \n+        TracingUtils.verify(JAEGER_PRODUCER_SERVICE, kafkaClientsPodName, \"To_\" + TOPIC_NAME);\n+        TracingUtils.verify(JAEGER_CONSUMER_SERVICE, kafkaClientsPodName, \"From_\" + TOPIC_NAME);\n+        TracingUtils.verify(JAEGER_MIRROR_MAKER_SERVICE, kafkaClientsPodName, \"From_\" + TOPIC_NAME);\n+        TracingUtils.verify(JAEGER_MIRROR_MAKER_SERVICE, kafkaClientsPodName, \"To_\" + TOPIC_NAME);\n+\n+        LOGGER.info(\"Deleting topic {} from CR\", TOPIC_NAME);\n+        cmdKubeClient().deleteByName(\"kafkatopic\", TOPIC_NAME);\n+        KafkaTopicUtils.waitForKafkaTopicDeletion(TOPIC_NAME);\n+\n+        LOGGER.info(\"Deleting topic {} from CR\", TOPIC_NAME + \"-target\");\n+        cmdKubeClient().deleteByName(\"kafkatopic\", TOPIC_NAME + \"-target\");\n+        KafkaTopicUtils.waitForKafkaTopicDeletion(TOPIC_NAME + \"-target\");\n+    }\n+\n+    @Test\n+    @Tag(CONNECT)\n+    @Tag(MIRROR_MAKER)\n+    @Tag(CONNECT_COMPONENTS)\n+    @SuppressWarnings({\"checkstyle:MethodLength\"})\n+    void testProducerConsumerMirrorMakerConnectStreamsService() {\n+        Map<String, Object> configOfKafka = new HashMap<>();\n+        configOfKafka.put(\"offsets.topic.replication.factor\", \"1\");\n+        configOfKafka.put(\"transaction.state.log.replication.factor\", \"1\");\n+        configOfKafka.put(\"transaction.state.log.min.isr\", \"1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7498b990ae10d2c704bacfe70999a4489d93f657"}, "originalPosition": 256}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI4ODc3Ng==", "bodyText": "The GitHub diff might be confusing, but this is your code :-D. I can remove it and see if it still works.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3358#discussion_r459288776", "createdAt": "2020-07-23T08:24:11Z", "author": {"login": "scholzj"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/tracing/TracingST.java", "diffHunk": "@@ -553,17 +608,65 @@ void testProducerConsumerMirrorMakerConnectStreamsService() {\n                 .endSpec()\n                 .done();\n \n+        TracingUtils.verify(JAEGER_PRODUCER_SERVICE, kafkaClientsPodName, \"To_\" + TOPIC_NAME);\n+        TracingUtils.verify(JAEGER_CONSUMER_SERVICE, kafkaClientsPodName, \"From_\" + TOPIC_NAME);\n+        TracingUtils.verify(JAEGER_MIRROR_MAKER_SERVICE, kafkaClientsPodName, \"From_\" + TOPIC_NAME);\n+        TracingUtils.verify(JAEGER_MIRROR_MAKER_SERVICE, kafkaClientsPodName, \"To_\" + TOPIC_NAME);\n+\n+        LOGGER.info(\"Deleting topic {} from CR\", TOPIC_NAME);\n+        cmdKubeClient().deleteByName(\"kafkatopic\", TOPIC_NAME);\n+        KafkaTopicUtils.waitForKafkaTopicDeletion(TOPIC_NAME);\n+\n+        LOGGER.info(\"Deleting topic {} from CR\", TOPIC_NAME + \"-target\");\n+        cmdKubeClient().deleteByName(\"kafkatopic\", TOPIC_NAME + \"-target\");\n+        KafkaTopicUtils.waitForKafkaTopicDeletion(TOPIC_NAME + \"-target\");\n+    }\n+\n+    @Test\n+    @Tag(CONNECT)\n+    @Tag(MIRROR_MAKER)\n+    @Tag(CONNECT_COMPONENTS)\n+    @SuppressWarnings({\"checkstyle:MethodLength\"})\n+    void testProducerConsumerMirrorMakerConnectStreamsService() {\n+        Map<String, Object> configOfKafka = new HashMap<>();\n+        configOfKafka.put(\"offsets.topic.replication.factor\", \"1\");\n+        configOfKafka.put(\"transaction.state.log.replication.factor\", \"1\");\n+        configOfKafka.put(\"transaction.state.log.min.isr\", \"1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI4NjM3Mw=="}, "originalCommit": {"oid": "7498b990ae10d2c704bacfe70999a4489d93f657"}, "originalPosition": 256}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1506, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}