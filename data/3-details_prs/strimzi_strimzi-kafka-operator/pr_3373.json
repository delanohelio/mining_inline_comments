{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1OTUxNjM1", "number": 3373, "title": "[systemtest][mm2] Add checks for mirroring right headers in messages", "bodyText": "Signed-off-by: Lukas Kral lukywill16@gmail.com\nType of change\n\nNew checks\n\nDescription\nAfter #3346 should mm2 mirror all messages with correct headers. This PR will add checks for headers in log of consumer pod. This check needs only one occurrence of desired headers.\nFor now I changed the timeout for jobs/continuous clients finish, we will change it after discussion with @Frawless and @see-quick -> the messagesCount * 1000 is not enough for send and immediate receive, because consumer/producer have some timeout for operation finish and setting the status to successful. This approach is sufficient for continuous clients in upgrade tests, as sending is happening all the time and finishing of both jobs are quicker.\nChecklist\n\n Update test\n Make sure all tests pass", "createdAt": "2020-07-23T21:05:20Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373", "merged": true, "mergeCommit": {"oid": "d0eec8e978c3dcf8156222b97786c355edef1f44"}, "closed": true, "closedAt": "2020-07-24T15:58:54Z", "author": {"login": "im-konge"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc30wT-gH2gAyNDU1OTUxNjM1OjQ5MDEyZTMzMGMwYzkxMGZhZDdiZjg5MDRjMTEyZTk1NGNmZWRjZDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4FMXCAFqTQ1NDk0OTgyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "49012e330c0c910fad7bf8904c112e954cfedcd4", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/49012e330c0c910fad7bf8904c112e954cfedcd4", "committedDate": "2020-07-23T19:39:45Z", "message": "add checks for headers in mm2\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "910a368ce5fb3851bbc983eb86c7464821d5a4d8", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/910a368ce5fb3851bbc983eb86c7464821d5a4d8", "committedDate": "2020-07-23T22:11:45Z", "message": "fixup! add checks for headers in mm2\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6da4b7e8e5ffc1a807f15f84114e0c72a7a58f2", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f6da4b7e8e5ffc1a807f15f84114e0c72a7a58f2", "committedDate": "2020-07-23T22:24:00Z", "message": "fixup! fixup! add checks for headers in mm2\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "07283671092edfb2bb36150c680443130a07e06f", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/07283671092edfb2bb36150c680443130a07e06f", "committedDate": "2020-07-23T22:17:35Z", "message": "fixup! fixup! add checks for headers in mm2\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}, "afterCommit": {"oid": "f6da4b7e8e5ffc1a807f15f84114e0c72a7a58f2", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f6da4b7e8e5ffc1a807f15f84114e0c72a7a58f2", "committedDate": "2020-07-23T22:24:00Z", "message": "fixup! fixup! add checks for headers in mm2\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NTM1NDQz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#pullrequestreview-454535443", "createdAt": "2020-07-23T22:22:46Z", "commit": {"oid": "07283671092edfb2bb36150c680443130a07e06f"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjoyMjo0NlrOG2dlHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjoyOTo0MFrOG2dvNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MDkyNw==", "bodyText": "Don't forget to set it back to our examples.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459760927", "createdAt": "2020-07-23T22:22:46Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaClientsResource.java", "diffHunk": "@@ -510,7 +510,7 @@ public static DoneableJob producerStrimzi(String producerName, String bootstrapS\n                         .withContainers()\n                             .addNewContainer()\n                             .withName(producerName)\n-                                .withImage(\"strimzi/hello-world-producer:latest\")\n+                                .withImage(\"imkonge/hello-world-producer:latest\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07283671092edfb2bb36150c680443130a07e06f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MTAzMg==", "bodyText": "Same as above", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459761032", "createdAt": "2020-07-23T22:23:01Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaClientsResource.java", "diffHunk": "@@ -571,7 +571,7 @@ public static DoneableJob consumerStrimzi(String consumerName, String bootstrapS\n                         .withContainers()\n                             .addNewContainer()\n                             .withName(consumerName)\n-                                .withImage(\"strimzi/hello-world-consumer:latest\")\n+                                .withImage(\"imkonge/hello-world-consumer:latest\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07283671092edfb2bb36150c680443130a07e06f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MTI2Nw==", "bodyText": "Why do you change this ? I don't see usage in your changes. Does it cause problems in nightly builds?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459761267", "createdAt": "2020-07-23T22:23:42Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/ClientUtils.java", "diffHunk": "@@ -43,11 +43,18 @@ public static void waitUntilClientReceivedMessagesTls(KafkaClientOperations kafk\n     }\n \n     public static void waitTillContinuousClientsFinish(String producerName, String consumerName, String namespace, int messageCount) {\n-        long timeout = (long) messageCount * 1000;\n+        long timeout = (long) messageCount * 3000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07283671092edfb2bb36150c680443130a07e06f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MjU0Mg==", "bodyText": "It's quite strange method name. Do you wait for producer or consumer in the test? I think you should name it like waitTillClientFinish instead of this.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459762542", "createdAt": "2020-07-23T22:27:02Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/ClientUtils.java", "diffHunk": "@@ -43,11 +43,18 @@ public static void waitUntilClientReceivedMessagesTls(KafkaClientOperations kafk\n     }\n \n     public static void waitTillContinuousClientsFinish(String producerName, String consumerName, String namespace, int messageCount) {\n-        long timeout = (long) messageCount * 1000;\n+        long timeout = (long) messageCount * 3000;\n         LOGGER.info(\"Waiting till producer {} and consumer {} finish for the following {} ms\", producerName, consumerName, timeout);\n         TestUtils.waitFor(\"continuous clients finished\", Constants.GLOBAL_POLL_INTERVAL, timeout,\n             () -> kubeClient().getClient().batch().jobs().inNamespace(namespace).withName(producerName).get().getStatus().getSucceeded().equals(1) &&\n                     kubeClient().getClient().batch().jobs().inNamespace(namespace).withName(consumerName).get().getStatus().getSucceeded().equals(1));\n     }\n+\n+    public static void waitTillProducerOrConsumerFinish(String jobName, String namespace, int messageCount) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6da4b7e8e5ffc1a807f15f84114e0c72a7a58f2"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MzUwOA==", "bodyText": "I think default config for delay between messages is 1000ms, maybe this is the problem why you want to increase the timeout? You can set it to 0ms to get max throughput.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459763508", "createdAt": "2020-07-23T22:29:40Z", "author": {"login": "Frawless"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/mirrormaker/MirrorMaker2ST.java", "diffHunk": "@@ -144,6 +152,25 @@ void testMirrorMaker2() {\n                 .done();\n         LOGGER.info(\"Looks like the mirrormaker2 cluster my-cluster deployed OK\");\n \n+        //deploying example clients for checking if mm2 will mirror messages with headers\n+        KafkaClientsResource.consumerStrimzi(targetConsumerName, KafkaResources.plainBootstrapAddress(kafkaClusterTargetName), targetExampleTopic, MESSAGE_COUNT).done();\n+        KafkaClientsResource.producerStrimzi(sourceProducerName, KafkaResources.plainBootstrapAddress(kafkaClusterSourceName), sourceExampleTopic, MESSAGE_COUNT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6da4b7e8e5ffc1a807f15f84114e0c72a7a58f2"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a987921b7ac8d73ce1f2242e6168e52cce4f1ed0", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a987921b7ac8d73ce1f2242e6168e52cce4f1ed0", "committedDate": "2020-07-23T22:58:34Z", "message": "review comments\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d072e92f8d3575c3ec12f2e7470f87736725a72", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9d072e92f8d3575c3ec12f2e7470f87736725a72", "committedDate": "2020-07-24T00:51:28Z", "message": "docker image back to strimzi\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NTM1NDI2", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#pullrequestreview-454535426", "createdAt": "2020-07-23T22:22:43Z", "commit": {"oid": "07283671092edfb2bb36150c680443130a07e06f"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjoyMjo0NFrOG2dlBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwODoyMjozNlrOG2nFCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MDkwMw==", "bodyText": "Dont think we want to check this in?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459760903", "createdAt": "2020-07-23T22:22:44Z", "author": {"login": "samuel-hawker"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaClientsResource.java", "diffHunk": "@@ -510,7 +510,7 @@ public static DoneableJob producerStrimzi(String producerName, String bootstrapS\n                         .withContainers()\n                             .addNewContainer()\n                             .withName(producerName)\n-                                .withImage(\"strimzi/hello-world-producer:latest\")\n+                                .withImage(\"imkonge/hello-world-producer:latest\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07283671092edfb2bb36150c680443130a07e06f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MTg5MA==", "bodyText": "assertThat(log, containsString(headerSomething));\nIs slightly better as if the strings dont match it will print the expected vs actual to the maven logs", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459761890", "createdAt": "2020-07-23T22:25:12Z", "author": {"login": "samuel-hawker"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/mirrormaker/MirrorMaker2ST.java", "diffHunk": "@@ -186,6 +213,16 @@ void testMirrorMaker2() {\n             internalKafkaClient.receiveMessagesPlain()\n         );\n \n+        LOGGER.info(\"Checking if messages with headers are correctly mirrored\");\n+        ClientUtils.waitTillProducerOrConsumerFinish(targetConsumerName, NAMESPACE, MESSAGE_COUNT);\n+\n+        LOGGER.info(\"Checking log of {} job if the headers are correct\", targetConsumerName);\n+        String headerFoo = \"key: foo, value: bar\";\n+        String headerSomething = \"key: something, value: more\";\n+        String log = StUtils.getLogFromPodByTime(kubeClient().listPodsByPrefixInName(targetConsumerName).get(0).getMetadata().getName(), \"\", MESSAGE_COUNT + \"s\");\n+        assertThat(log.contains(headerFoo), is(true));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6da4b7e8e5ffc1a807f15f84114e0c72a7a58f2"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkxMzMwNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static void waitTillClientFinish(String jobName, String namespace, int messageCount) {\n          \n          \n            \n                public static void waitForClientSuccess(String jobName, String namespace, int messageCount) {\n          \n      \n    \n    \n  \n\nJust to match syntax of the calling function\nAlso it only passes on success, not finish", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459913304", "createdAt": "2020-07-24T08:15:49Z", "author": {"login": "samuel-hawker"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/ClientUtils.java", "diffHunk": "@@ -49,5 +49,12 @@ public static void waitTillContinuousClientsFinish(String producerName, String c\n             () -> kubeClient().getClient().batch().jobs().inNamespace(namespace).withName(producerName).get().getStatus().getSucceeded().equals(1) &&\n                     kubeClient().getClient().batch().jobs().inNamespace(namespace).withName(consumerName).get().getStatus().getSucceeded().equals(1));\n     }\n+\n+    public static void waitTillClientFinish(String jobName, String namespace, int messageCount) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d072e92f8d3575c3ec12f2e7470f87736725a72"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkxNjU1Mw==", "bodyText": "think the naming of these strings + the header key val pairs is just a tad confusing, I would just call them header1 header2\nWith key vals header_key_one header_value_one etc...\nBut just a suggestion.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459916553", "createdAt": "2020-07-24T08:22:36Z", "author": {"login": "samuel-hawker"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/mirrormaker/MirrorMaker2ST.java", "diffHunk": "@@ -186,6 +213,16 @@ void testMirrorMaker2() {\n             internalKafkaClient.receiveMessagesPlain()\n         );\n \n+        LOGGER.info(\"Checking if messages with headers are correctly mirrored\");\n+        ClientUtils.waitTillClientFinish(targetConsumerName, NAMESPACE, MESSAGE_COUNT);\n+\n+        LOGGER.info(\"Checking log of {} job if the headers are correct\", targetConsumerName);\n+        String headerFoo = \"key: foo, value: bar\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d072e92f8d3575c3ec12f2e7470f87736725a72"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99ea40797b1ad2d1b4e3e2171a36b5ffcca2cd5c", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/99ea40797b1ad2d1b4e3e2171a36b5ffcca2cd5c", "committedDate": "2020-07-24T10:26:34Z", "message": "comments\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NzkyNTM4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#pullrequestreview-454792538", "createdAt": "2020-07-24T10:46:23Z", "commit": {"oid": "99ea40797b1ad2d1b4e3e2171a36b5ffcca2cd5c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0ODAzMjc5", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#pullrequestreview-454803279", "createdAt": "2020-07-24T11:07:33Z", "commit": {"oid": "99ea40797b1ad2d1b4e3e2171a36b5ffcca2cd5c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0OTQwMjcz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#pullrequestreview-454940273", "createdAt": "2020-07-24T14:37:10Z", "commit": {"oid": "99ea40797b1ad2d1b4e3e2171a36b5ffcca2cd5c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0OTQ5ODIw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#pullrequestreview-454949820", "createdAt": "2020-07-24T14:48:52Z", "commit": {"oid": "99ea40797b1ad2d1b4e3e2171a36b5ffcca2cd5c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1376, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}