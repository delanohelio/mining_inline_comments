{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxOTM0NjMw", "number": 4045, "title": "[systemtest] Tests for deploying Kafka and KafkaConnect without CRBs and enabled/disabled RackAware", "bodyText": "Signed-off-by: Lukas Kral lukywill16@gmail.com\nType of change\n\nNew tests\n\nDescription\nBefore #4019 we weren't able to deploy KafkaConnect when CRBs were missing -> even when rack awareness wasn't enabled. After this fix, if the rack awareness is disabled and the CRBs are missing, we are still able to deploy the Kafka and KafkaConnect with proper \"warning\" or \"information\" in log of ClusterOperator.\nThis PR adds tests for this fix and also adding variable for allowing or forbid creation of network policies for KafkaConnect. This comes really handy when we just want to test some functionality of KafkaConnect and don't want to send messages or do some requests on Connect's API -> in that cases we need allow NPs.\nChecklist\n\n Write tests\n Make sure all tests pass", "createdAt": "2020-12-03T17:02:25Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4045", "merged": true, "mergeCommit": {"oid": "a92e668df8728b9792595d2fb9a0bc31db76a783"}, "closed": true, "closedAt": "2020-12-09T19:25:42Z", "author": {"login": "im-konge"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdilnwFAH2gAyNTMxOTM0NjMwOjIxYzIyM2I5ZGEzYWQ1NDM3MTZkZDI5ODg3NTM1NWVjNzRiZjA0M2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkhzkPAFqTU0ODM5OTM0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "21c223b9da3ad543716dd298875355ec74bf043e", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/21c223b9da3ad543716dd298875355ec74bf043e", "committedDate": "2020-12-03T16:20:34Z", "message": "add tests for missing CRBs and some improvements to KafkaConnectResource and utils\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66765ee328ffc111d5d1e6e9ad14b6be99cc123a", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/66765ee328ffc111d5d1e6e9ad14b6be99cc123a", "committedDate": "2020-12-03T17:28:25Z", "message": "fixup! add tests for missing CRBs and some improvements to KafkaConnectResource and utils\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MjcwMDIy", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4045#pullrequestreview-544270022", "createdAt": "2020-12-03T18:46:02Z", "commit": {"oid": "66765ee328ffc111d5d1e6e9ad14b6be99cc123a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NDMzMTM4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4045#pullrequestreview-544433138", "createdAt": "2020-12-03T20:50:00Z", "commit": {"oid": "66765ee328ffc111d5d1e6e9ad14b6be99cc123a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDo1MDowMFrOH-yKLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDo1MToyNFrOH-yQIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU5NTU2NQ==", "bodyText": "ClusterOpratorRBAC is better name from my POV", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4045#discussion_r535595565", "createdAt": "2020-12-03T20:50:00Z", "author": {"login": "Frawless"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/operators/ClusterOperatorST.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.operators;\n+\n+import io.strimzi.api.kafka.model.status.Condition;\n+import io.strimzi.systemtest.AbstractST;\n+import io.strimzi.systemtest.resources.KubernetesResource;\n+import io.strimzi.systemtest.resources.ResourceManager;\n+import io.strimzi.systemtest.resources.crd.KafkaConnectResource;\n+import io.strimzi.systemtest.resources.crd.KafkaResource;\n+import io.strimzi.systemtest.resources.operator.BundleResource;\n+import io.strimzi.systemtest.utils.kafkaUtils.KafkaConnectUtils;\n+import io.strimzi.systemtest.utils.kafkaUtils.KafkaUtils;\n+import io.strimzi.test.TestUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.Test;\n+\n+import static io.strimzi.systemtest.Constants.CONNECT;\n+import static io.strimzi.systemtest.Constants.REGRESSION;\n+import static io.strimzi.systemtest.enums.CustomResourceStatus.NotReady;\n+import static io.strimzi.systemtest.resources.ResourceManager.cmdKubeClient;\n+import static io.strimzi.systemtest.resources.ResourceManager.kubeClient;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+@Tag(REGRESSION)\n+public class ClusterOperatorST extends AbstractST {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66765ee328ffc111d5d1e6e9ad14b6be99cc123a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU5NzA4OQ==", "bodyText": "Shouldn't be allowNP based on env variable for NetowkrPolicies?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4045#discussion_r535597089", "createdAt": "2020-12-03T20:51:24Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaConnectResource.java", "diffHunk": "@@ -87,8 +91,8 @@ private static KafkaConnectBuilder defaultKafkaConnect(KafkaConnect kafkaConnect\n             .endSpec();\n     }\n \n-    private static DoneableKafkaConnect deployKafkaConnect(KafkaConnect kafkaConnect) {\n-        if (Environment.DEFAULT_TO_DENY_NETWORK_POLICIES) {\n+    private static DoneableKafkaConnect deployKafkaConnect(KafkaConnect kafkaConnect, boolean allowNP) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66765ee328ffc111d5d1e6e9ad14b6be99cc123a"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0ODYzMzgx", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4045#pullrequestreview-544863381", "createdAt": "2020-12-04T11:07:33Z", "commit": {"oid": "66765ee328ffc111d5d1e6e9ad14b6be99cc123a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MDM5MDM3", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4045#pullrequestreview-546039037", "createdAt": "2020-12-07T11:00:00Z", "commit": {"oid": "66765ee328ffc111d5d1e6e9ad14b6be99cc123a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMTowMDowMFrOIAhOSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMTowMToyMFrOIAhRmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQxNTI0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static DoneableKafkaConnect deployKafkaConnect(KafkaConnect kafkaConnect, boolean allowNP) {\n          \n          \n            \n                    if (Environment.DEFAULT_TO_DENY_NETWORK_POLICIES && allowNP) {\n          \n          \n            \n                        KubernetesResource.allowNetworkPolicySettingsForResource(kafkaConnect, KafkaConnectResources.deploymentName(kafkaConnect.getMetadata().getName()));\n          \n          \n            \n                    }\n          \n          \n            \n                    return new DoneableKafkaConnect(kafkaConnect, kC -> {\n          \n          \n            \n                private static DoneableKafkaConnect deployKafkaConnectWithNetworkPolicy(KafkaConnect kafkaConnect) {\n          \n          \n            \n                    if (Environment.DEFAULT_TO_DENY_NETWORK_POLICIES && allowNP) {\n          \n          \n            \n                        KubernetesResource.allowNetworkPolicySettingsForResource(kafkaConnect, KafkaConnectResources.deploymentName(kafkaConnect.getMetadata().getName()));\n          \n          \n            \n                    }\n          \n          \n            \n                    return deployKafkaConnect(kafkaConnect)\n          \n          \n            \n                  }\n          \n          \n            \n            \n          \n          \n            \n                private static DoneableKafkaConnect deployKafkaConnect(KafkaConnect kafkaConnect) {\n          \n          \n            \n                    return new DoneableKafkaConnect(kafkaConnect, kC -> {\n          \n      \n    \n    \n  \n\nThis is cleaner in my opinion, boolean arguments are the devil", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4045#discussion_r537415242", "createdAt": "2020-12-07T11:00:00Z", "author": {"login": "samuel-hawker"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaConnectResource.java", "diffHunk": "@@ -87,8 +91,8 @@ private static KafkaConnectBuilder defaultKafkaConnect(KafkaConnect kafkaConnect\n             .endSpec();\n     }\n \n-    private static DoneableKafkaConnect deployKafkaConnect(KafkaConnect kafkaConnect) {\n-        if (Environment.DEFAULT_TO_DENY_NETWORK_POLICIES) {\n+    private static DoneableKafkaConnect deployKafkaConnect(KafkaConnect kafkaConnect, boolean allowNP) {\n+        if (Environment.DEFAULT_TO_DENY_NETWORK_POLICIES && allowNP) {\n             KubernetesResource.allowNetworkPolicySettingsForResource(kafkaConnect, KafkaConnectResources.deploymentName(kafkaConnect.getMetadata().getName()));\n         }\n         return new DoneableKafkaConnect(kafkaConnect, kC -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66765ee328ffc111d5d1e6e9ad14b6be99cc123a"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQxNTQ0OQ==", "bodyText": "A different method signature is preferable to passing true/false", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4045#discussion_r537415449", "createdAt": "2020-12-07T11:00:19Z", "author": {"login": "samuel-hawker"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaConnectResource.java", "diffHunk": "@@ -87,8 +91,8 @@ private static KafkaConnectBuilder defaultKafkaConnect(KafkaConnect kafkaConnect\n             .endSpec();\n     }\n \n-    private static DoneableKafkaConnect deployKafkaConnect(KafkaConnect kafkaConnect) {\n-        if (Environment.DEFAULT_TO_DENY_NETWORK_POLICIES) {\n+    private static DoneableKafkaConnect deployKafkaConnect(KafkaConnect kafkaConnect, boolean allowNP) {\n+        if (Environment.DEFAULT_TO_DENY_NETWORK_POLICIES && allowNP) {\n             KubernetesResource.allowNetworkPolicySettingsForResource(kafkaConnect, KafkaConnectResources.deploymentName(kafkaConnect.getMetadata().getName()));\n         }\n         return new DoneableKafkaConnect(kafkaConnect, kC -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQxNTI0Mg=="}, "originalCommit": {"oid": "66765ee328ffc111d5d1e6e9ad14b6be99cc123a"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQxNjA5MQ==", "bodyText": "Agreed with Jakub here, ClusterOpratorRbac is better here", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4045#discussion_r537416091", "createdAt": "2020-12-07T11:01:20Z", "author": {"login": "samuel-hawker"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/operators/ClusterOperatorST.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.operators;\n+\n+import io.strimzi.api.kafka.model.status.Condition;\n+import io.strimzi.systemtest.AbstractST;\n+import io.strimzi.systemtest.resources.KubernetesResource;\n+import io.strimzi.systemtest.resources.ResourceManager;\n+import io.strimzi.systemtest.resources.crd.KafkaConnectResource;\n+import io.strimzi.systemtest.resources.crd.KafkaResource;\n+import io.strimzi.systemtest.resources.operator.BundleResource;\n+import io.strimzi.systemtest.utils.kafkaUtils.KafkaConnectUtils;\n+import io.strimzi.systemtest.utils.kafkaUtils.KafkaUtils;\n+import io.strimzi.test.TestUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.Test;\n+\n+import static io.strimzi.systemtest.Constants.CONNECT;\n+import static io.strimzi.systemtest.Constants.REGRESSION;\n+import static io.strimzi.systemtest.enums.CustomResourceStatus.NotReady;\n+import static io.strimzi.systemtest.resources.ResourceManager.cmdKubeClient;\n+import static io.strimzi.systemtest.resources.ResourceManager.kubeClient;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+@Tag(REGRESSION)\n+public class ClusterOperatorST extends AbstractST {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU5NTU2NQ=="}, "originalCommit": {"oid": "66765ee328ffc111d5d1e6e9ad14b6be99cc123a"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6dd55281800d1fe94e48880b0b4c80925a888d2", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f6dd55281800d1fe94e48880b0b4c80925a888d2", "committedDate": "2020-12-07T17:13:20Z", "message": "change name of ST, do some cleanup in KafkaConnectResource (addressing Sam's comments)\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2OTgwMDI2", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4045#pullrequestreview-546980026", "createdAt": "2020-12-08T09:54:37Z", "commit": {"oid": "f6dd55281800d1fe94e48880b0b4c80925a888d2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2OTk5MDQ0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4045#pullrequestreview-546999044", "createdAt": "2020-12-08T10:03:41Z", "commit": {"oid": "f6dd55281800d1fe94e48880b0b4c80925a888d2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMDowMzo0MVrOIBRNMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMDowMzo0MVrOIBRNMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODIwMTM5Mw==", "bodyText": "You can remove the booleans similarly from here and line 45", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4045#discussion_r538201393", "createdAt": "2020-12-08T10:03:41Z", "author": {"login": "samuel-hawker"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaConnectResource.java", "diffHunk": "@@ -39,12 +39,17 @@\n     }\n \n     public static DoneableKafkaConnect kafkaConnect(String name, int kafkaConnectReplicas) {\n-        return kafkaConnect(name, name, kafkaConnectReplicas);\n+        return kafkaConnect(name, name, kafkaConnectReplicas, true);\n     }\n \n-    public static DoneableKafkaConnect kafkaConnect(String name, String clusterName, int kafkaConnectReplicas) {\n+    public static DoneableKafkaConnect kafkaConnect(String name, int kafkaConnectReplicas, boolean allowNP) {\n+        return kafkaConnect(name, name, kafkaConnectReplicas, allowNP);\n+    }\n+\n+    public static DoneableKafkaConnect kafkaConnect(String name, String clusterName, int kafkaConnectReplicas, boolean allowNP) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6dd55281800d1fe94e48880b0b4c80925a888d2"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6595839fad7e992fc187843ffdb3dc4047d10e12", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6595839fad7e992fc187843ffdb3dc4047d10e12", "committedDate": "2020-12-08T21:06:38Z", "message": "fixes for failing tests after my changes\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc4cc8b6fc01c2523e20ca25f771e280c31281d6", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/cc4cc8b6fc01c2523e20ca25f771e280c31281d6", "committedDate": "2020-12-09T11:19:15Z", "message": "fixup! fixes for failing tests after my changes\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4Mzk5MzQz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4045#pullrequestreview-548399343", "createdAt": "2020-12-09T17:01:42Z", "commit": {"oid": "cc4cc8b6fc01c2523e20ca25f771e280c31281d6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 701, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}