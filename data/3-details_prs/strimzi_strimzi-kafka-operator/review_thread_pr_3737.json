{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2MzQxMzY0", "number": 3737, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxODowNzozNlrOEplODQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMDo1NDo1MlrOEpoK5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMDM2ODc3OnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/bridge/HttpBridgeST.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxODowNzozNlrOHbVlCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxODowNzozNlrOHbVlCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyNzE0Nw==", "bodyText": "Should these be in some abstract class or somewhere once instead of being in any file?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3737#discussion_r498427147", "createdAt": "2020-10-01T18:07:36Z", "author": {"login": "scholzj"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/bridge/HttpBridgeST.java", "diffHunk": "@@ -259,9 +259,11 @@ void testScaleBridgeSubresource() {\n     void testHostAliases() {\n         String bridgeName = \"bridge-with-hosts\";\n \n+        String aliasIp = \"34.89.152.196\";\n+        String aliasHostname = \"strimzi\";\n         HostAlias hostAlias = new HostAliasBuilder()\n-            .withIp(\"34.89.152.196\")\n-            .withHostnames(\"strimzi\")\n+            .withIp(aliasIp)\n+            .withHostnames(aliasHostname)\n             .build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8fff7b5a55c20f9e1adf2d867ef1fda1a6d3b23"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMDM2OTY3OnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/bridge/HttpBridgeST.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxODowNzo1NFrOHbVlpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxODowNzo1NFrOHbVlpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyNzMwMQ==", "bodyText": "Should the string you look for e defined next to the alias IP and hostname?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3737#discussion_r498427301", "createdAt": "2020-10-01T18:07:54Z", "author": {"login": "scholzj"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/bridge/HttpBridgeST.java", "diffHunk": "@@ -276,16 +278,9 @@ void testHostAliases() {\n \n         String bridgePodName = kubeClient().listPods(Labels.STRIMZI_CLUSTER_LABEL, bridgeName).get(0).getMetadata().getName();\n \n-        LOGGER.info(\"Trying to ping strimzi.io by ping strimzi command\");\n-        String output = cmdKubeClient().execInPod(bridgePodName, \"ping\", \"-c\", \"5\", \"strimzi\").out();\n-\n-        LOGGER.info(\"Checking output of ping\");\n-        assertThat(output, containsString(\"PING strimzi (34.89.152.196)\"));\n-        assertThat(output, containsString(\"5 packets transmitted, 5 received\"));\n-\n         LOGGER.info(\"Checking the /etc/hosts file\");\n-        output = cmdKubeClient().execInPod(bridgePodName, \"cat\", \"/etc/hosts\").out();\n-        assertThat(output, containsString(\"# Entries added by HostAliases.\\n34.89.152.196\\tstrimzi\"));\n+        String output = cmdKubeClient().execInPod(bridgePodName, \"cat\", \"/etc/hosts\").out();\n+        assertThat(output, containsString(\"# Entries added by HostAliases.\\n\" + aliasIp + \"\\t\" + aliasHostname));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8fff7b5a55c20f9e1adf2d867ef1fda1a6d3b23"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMDg1MjIyOnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/mirrormaker/MirrorMakerST.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMDo1NDo1MlrOHbagPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMDo1NDo1MlrOHbagPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUwNzgzNw==", "bodyText": "Sorry that I'm reviewing this, but can you please remove the Matchers? It's leftover from my PR...", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3737#discussion_r498507837", "createdAt": "2020-10-01T20:54:52Z", "author": {"login": "im-konge"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/mirrormaker/MirrorMakerST.java", "diffHunk": "@@ -737,16 +737,9 @@ void testHostAliases() {\n \n         String mmPodName = kubeClient().listPods(Labels.STRIMZI_KIND_LABEL, KafkaMirrorMaker.RESOURCE_KIND).get(0).getMetadata().getName();\n \n-        LOGGER.info(\"Trying to ping strimzi.io by ping strimzi command\");\n-        String output = cmdKubeClient().execInPod(mmPodName, \"ping\", \"-c\", \"5\", \"strimzi\").out();\n-\n-        LOGGER.info(\"Checking output of ping\");\n-        assertThat(output, Matchers.containsString(\"PING strimzi (34.89.152.196)\"));\n-        assertThat(output, Matchers.containsString(\"5 packets transmitted, 5 received\"));\n-\n         LOGGER.info(\"Checking the /etc/hosts file\");\n-        output = cmdKubeClient().execInPod(mmPodName, \"cat\", \"/etc/hosts\").out();\n-        assertThat(output, Matchers.containsString(\"# Entries added by HostAliases.\\n34.89.152.196\\tstrimzi\"));\n+        String output = cmdKubeClient().execInPod(mmPodName, \"cat\", \"/etc/hosts\").out();\n+        assertThat(output, Matchers.containsString(etcHostsData));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "314738441563a19a89481095b26dcc9b2378bafe"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1175, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}