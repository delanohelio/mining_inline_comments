{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MTAwMjkx", "number": 2760, "title": "feat: Context succeeding - Part 6 - topic-operator mockkube kafka-init api", "bodyText": "For this Pull request I have continued the context\nsucceeding work, and taken the opportunity to remove\nunneeded concurrency based dependencies.\nminor test renames, hamcrest additions and variable\nrenames to improve clarity.\nThis contains improvements to the topic-operator,\nmockkube, kafka-init and api sub-modules.\nI put some work into removing the passing of Exceptions\nin test code and instead to error immediately out of tests\non fatal throws.\nContributes to: #2647\nSigned-off-by: Samuel Hawker samuel.hawker@ibm.com\nType of change\nSelect the type of your PR\n\nBugfix\nEnhancement / new feature\nRefactoring\nDocumentation\n\nDescription\nPlease describe your pull request\nChecklist\nPlease go through this checklist and make sure all applicable tasks have been done\n\n Update/write design documentation in ./design\n Write tests\n Make sure all tests pass\n Update documentation\n Check RBAC rights for Kubernetes / OpenShift roles\n Try your changes from Pod inside your Kubernetes and OpenShift cluster, not just locally\n Reference relevant issue(s) and close them after merging\n Update CHANGELOG.md", "createdAt": "2020-03-28T14:05:51Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2760", "merged": true, "mergeCommit": {"oid": "77e1325981a3cca910347dd1a93da19ce879634a"}, "closed": true, "closedAt": "2020-03-30T15:48:11Z", "author": {"login": "samuel-hawker"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPm8qgAH2gAyMzk1MTAwMjkxOjEwMzcwN2I1M2YxYzI3M2Y3ZjQzYjE4YzE2OGYyNjJhYzEyYWI4MmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSYe4JAFqTM4MzQwMTg5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "103707b53f1c273f7f43b18c168f262ac12ab82c", "author": {"user": {"login": "samuel-hawker", "name": "Samuel Hawker"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/103707b53f1c273f7f43b18c168f262ac12ab82c", "committedDate": "2020-03-20T20:57:36Z", "message": "feat: context-succeeding topic-operator\n\nSigned-off-by: Samuel Hawker <samuel.hawker@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e579783f75917d49e2c63d83469e5d246194b6c3", "author": {"user": {"login": "samuel-hawker", "name": "Samuel Hawker"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e579783f75917d49e2c63d83469e5d246194b6c3", "committedDate": "2020-03-20T21:58:59Z", "message": "feat: Mockkube and user-operator\n\nSigned-off-by: Samuel Hawker <samuel.hawker@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40e2398d2b05a664e3f1d0917ad1b7a6561ff8c4", "author": {"user": {"login": "samuel-hawker", "name": "Samuel Hawker"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/40e2398d2b05a664e3f1d0917ad1b7a6561ff8c4", "committedDate": "2020-03-20T22:23:18Z", "message": "feat: Clean up kafka-init tests\n\nSigned-off-by: Samuel Hawker <samuel.hawker@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abb757cf33c430e8925152f77c5c78102534735d", "author": {"user": {"login": "samuel-hawker", "name": "Samuel Hawker"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/abb757cf33c430e8925152f77c5c78102534735d", "committedDate": "2020-03-21T11:24:17Z", "message": "feat: Api tests\n\nSigned-off-by: Samuel Hawker <samuel.hawker@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMzM0MTQ1", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2760#pullrequestreview-383334145", "createdAt": "2020-03-28T17:48:52Z", "commit": {"oid": "abb757cf33c430e8925152f77c5c78102534735d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNzo0ODo1MlrOF9LIQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNzo0ODo1MlrOF9LIQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY4OTc5Mg==", "bodyText": "I know you didn't changed it, but should this be commented out?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2760#discussion_r399689792", "createdAt": "2020-03-28T17:48:52Z", "author": {"login": "scholzj"}, "path": "mockkube/src/test/java/io/strimzi/test/io/strimzi/test/mockkube/MockKubeTest.java", "diffHunk": "@@ -182,55 +179,51 @@ public void podNameScopedCreateListGetDelete(Class<RT> cls,\n         mixedOp.apply(client).withName(pod.getMetadata().getName()).create(pod);\n         assertThat(w.lastEvent().action, is(Watcher.Action.ADDED));\n         assertThat(w.lastEvent().resource, is(pod));\n-        try {\n-            mixedOp.apply(client).create(pod);\n-            fail();\n-        } catch (KubernetesClientException e) {\n-            assertThat(e.getMessage(), is(expectedResourceExistsMessage(pod)));\n-        }\n+        KubernetesClientException e = assertThrows(KubernetesClientException.class, () ->  mixedOp.apply(client).create(pod));\n+        assertThat(e.getMessage(), is(expectedResourceExistsMessage(pod)));\n \n         // List\n         List<RT> items = mixedOp.apply(client).list().getItems();\n-        assertThat(items.size(), is(1));\n+        assertThat(items, hasSize(1));\n         RT item = items.get(0);\n         item.getMetadata().setResourceVersion(null);\n         item.getMetadata().setGeneration(null);\n         assertThat(item, is(pod));\n \n         // List with namespace\n         items = mixedOp.apply(client).inNamespace(\"other\").list().getItems();\n-        // TODO assertEquals(0, items.size());\n+        // TODO assertThat(items.size(), is(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abb757cf33c430e8925152f77c5c78102534735d"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNDAxODkx", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2760#pullrequestreview-383401891", "createdAt": "2020-03-29T11:48:10Z", "commit": {"oid": "abb757cf33c430e8925152f77c5c78102534735d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2150, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}