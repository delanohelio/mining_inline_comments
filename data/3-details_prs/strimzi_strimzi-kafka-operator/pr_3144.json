{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MDc0NzUy", "number": 3144, "title": "feat: Cleanup AbstractModel", "bodyText": "Cleanup includes, argument renaming, documenting some methods\norganizing fields into more logical groupings\nSigned-off-by: Samuel Hawker samuel.hawker@ibm.com\nType of change\nSelect the type of your PR\n\nBugfix\nEnhancement / new feature\nRefactoring\nDocumentation\n\nDescription\nPlease describe your pull request\nChecklist\nPlease go through this checklist and make sure all applicable tasks have been done\n\n Update/write design documentation in ./design\n Write tests\n Make sure all tests pass\n Update documentation\n Check RBAC rights for Kubernetes / OpenShift roles\n Try your changes from Pod inside your Kubernetes and OpenShift cluster, not just locally\n Reference relevant issue(s) and close them after merging\n Update CHANGELOG.md", "createdAt": "2020-06-03T09:21:44Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3144", "merged": true, "mergeCommit": {"oid": "4c5ac0f7db1811bded645471a142c5cab19ecd9b"}, "closed": true, "closedAt": "2020-06-03T13:31:16Z", "author": {"login": "samuel-hawker"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnl6r5gH2gAyNDI3MDc0NzUyOjlkNDYxNDc3Mzk3NDRiMGRmNjJmZWI1NTFkNDg2ZmY3MDc1MTA5YmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnoRLvAFqTQyMzQ4MzU3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9d46147739744b0df62feb551d486ff7075109bd", "author": {"user": {"login": "samuel-hawker", "name": "Samuel Hawker"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9d46147739744b0df62feb551d486ff7075109bd", "committedDate": "2020-06-03T09:19:43Z", "message": "feat: Cleanup AbstractModel\n\nCleanup includes, argument renaming, documenting some methods\norganizing fields into more logical groupings\n\nSigned-off-by: Samuel Hawker <samuel.hawker@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNDE3NTgy", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3144#pullrequestreview-423417582", "createdAt": "2020-06-03T10:22:31Z", "commit": {"oid": "9d46147739744b0df62feb551d486ff7075109bd"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDoyMjozMVrOGeVnGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDoyNzoxNVrOGeVwwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ2NDUzNg==", "bodyText": "Do you think this is really needed? I originally had it. But it seemed wasteful to have 3 static Strings which are used only in the static initilizer below. So I decided to remove them and use the env var names directly.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3144#discussion_r434464536", "createdAt": "2020-06-03T10:22:31Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/AbstractModel.java", "diffHunk": "@@ -88,40 +88,50 @@\n \n     public static final String ANCILLARY_CM_KEY_METRICS = \"metrics-config.yml\";\n     public static final String ANCILLARY_CM_KEY_LOG_CONFIG = \"log4j.properties\";\n+\n+    public static final String NETWORK_POLICY_KEY_SUFFIX = \"-network-policy\";\n+\n     public static final String ENV_VAR_DYNAMIC_HEAP_FRACTION = \"DYNAMIC_HEAP_FRACTION\";\n     public static final String ENV_VAR_KAFKA_HEAP_OPTS = \"KAFKA_HEAP_OPTS\";\n     public static final String ENV_VAR_KAFKA_JVM_PERFORMANCE_OPTS = \"KAFKA_JVM_PERFORMANCE_OPTS\";\n     public static final String ENV_VAR_DYNAMIC_HEAP_MAX = \"DYNAMIC_HEAP_MAX\";\n-    public static final String NETWORK_POLICY_KEY_SUFFIX = \"-network-policy\";\n     public static final String ENV_VAR_STRIMZI_KAFKA_GC_LOG_ENABLED = \"STRIMZI_KAFKA_GC_LOG_ENABLED\";\n     public static final String ENV_VAR_STRIMZI_JAVA_SYSTEM_PROPERTIES = \"STRIMZI_JAVA_SYSTEM_PROPERTIES\";\n     public static final String ENV_VAR_STRIMZI_JAVA_OPTS = \"STRIMZI_JAVA_OPTS\";\n     public static final String ENV_VAR_STRIMZI_GC_LOG_ENABLED = \"STRIMZI_GC_LOG_ENABLED\";\n \n-    public static final String ANNO_STRIMZI_IO_DELETE_CLAIM = Annotations.STRIMZI_DOMAIN + \"delete-claim\";\n-    /** Annotation on PVCs storing the original configuration (so we can revert changes). */\n+    /**\n+     * Annotation on PVCs storing the original configuration\n+     * Used to revert changes\n+     */\n     public static final String ANNO_STRIMZI_IO_STORAGE = Annotations.STRIMZI_DOMAIN + \"storage\";\n+    public static final String ANNO_STRIMZI_IO_DELETE_CLAIM = Annotations.STRIMZI_DOMAIN + \"delete-claim\";\n+    public static final String ANNO_STRIMZI_LOGGING_HASH = Annotations.STRIMZI_DOMAIN + \"logging-hash\";\n+\n     @Deprecated\n     public static final String ANNO_CO_STRIMZI_IO_DELETE_CLAIM = ClusterOperator.STRIMZI_CLUSTER_OPERATOR_DOMAIN + \"/delete-claim\";\n \n-    public static final String ANNO_STRIMZI_CM_GENERATION = Annotations.STRIMZI_DOMAIN + \"cm-generation\";\n-    public static final String ANNO_STRIMZI_LOGGING_HASH = Annotations.STRIMZI_DOMAIN + \"logging-hash\";\n-\n+    private static final String ENV_VAR_HTTP_PROXY = \"HTTP_PROXY\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d46147739744b0df62feb551d486ff7075109bd"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ2NTc5NQ==", "bodyText": "Should we put empty line between the sentence and the @param? TBH I do not really mind, but it seems you did that in other Javadoc comments around.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3144#discussion_r434465795", "createdAt": "2020-06-03T10:24:56Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/AbstractModel.java", "diffHunk": "@@ -518,57 +556,59 @@ protected void setConfiguration(AbstractConfiguration configuration) {\n      * @return The image name.\n      */\n     public String getImage() {\n-        return this.image;\n+        return image;\n     }\n \n     /**\n-     * @return the service account used by the deployed cluster for Kubernetes/OpenShift API operations\n+     * @return the name of the service account used by the deployed cluster for Kubernetes/OpenShift API operations.\n      */\n     protected String getServiceAccountName() {\n         return null;\n     }\n \n     /**\n-     * @return the cluster name\n+     * @return the cluster name.\n      */\n     public String getCluster() {\n         return cluster;\n     }\n \n     /**\n      * Gets the name of a given pod in a StatefulSet.\n-     * @param podId The Id of the pod.\n+     *\n+     * @param podId The Id (ordinal) of the pod.\n      * @return The name of the pod with the given name.\n      */\n     public String getPodName(int podId) {\n         return name + \"-\" + podId;\n     }\n \n     /**\n-     * Sets the affinity as configured by the user in the cluster CR\n+     * Sets the affinity as configured by the user in the cluster CR.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d46147739744b0df62feb551d486ff7075109bd"}, "originalPosition": 431}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ2NzAwOA==", "bodyText": "I do not think there is a real rule for this or anything like that, so feel free to leave it like this ... But I usually prefer to have the && at the next line - it seems to me more readable.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                .filter(broker -> broker != null &&\n          \n          \n            \n                                        broker.getBroker() != null &&\n          \n          \n            \n                                        broker.getBroker() == ordinalId &&\n          \n          \n            \n                                        broker.getStorageClass() != null)\n          \n          \n            \n                                .filter(broker -> broker != null \n          \n          \n            \n                                        && broker.getBroker() != null \n          \n          \n            \n                                        && broker.getBroker() == ordinalId \n          \n          \n            \n                                        && broker.getStorageClass() != null)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3144#discussion_r434467008", "createdAt": "2020-06-03T10:27:15Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/AbstractModel.java", "diffHunk": "@@ -638,17 +693,22 @@ protected PersistentVolumeClaim createPersistentVolumeClaim(int podNumber, Strin\n \n         String storageClass = storage.getStorageClass();\n         if (storage.getOverrides() != null) {\n-            storageClass = storage.getOverrides().stream().filter(broker -> broker != null && broker.getBroker() != null && broker.getBroker() == podNumber && broker.getStorageClass() != null)\n+            storageClass = storage.getOverrides().stream()\n+                    .filter(broker -> broker != null &&\n+                            broker.getBroker() != null &&\n+                            broker.getBroker() == ordinalId &&\n+                            broker.getStorageClass() != null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d46147739744b0df62feb551d486ff7075109bd"}, "originalPosition": 519}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a284975e1a59b52e1c62a0851e0d16571e401a9a", "author": {"user": {"login": "samuel-hawker", "name": "Samuel Hawker"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a284975e1a59b52e1c62a0851e0d16571e401a9a", "committedDate": "2020-06-03T10:46:29Z", "message": "fix: Review comments\n\nSigned-off-by: Samuel Hawker <samuel.hawker@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNDMzNzAz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3144#pullrequestreview-423433703", "createdAt": "2020-06-03T10:47:14Z", "commit": {"oid": "9d46147739744b0df62feb551d486ff7075109bd"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDo0NzoxNFrOGeWYng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDo1NDo1NlrOGeWnXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ3NzIxNA==", "bodyText": "I would leave just Kubernetes.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3144#discussion_r434477214", "createdAt": "2020-06-03T10:47:14Z", "author": {"login": "ppatierno"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/AbstractModel.java", "diffHunk": "@@ -349,12 +373,13 @@ public static OrderedProperties getOrderedProperties(String configFileName) {\n     }\n \n     /**\n-     * Transforms map to log4j properties file format\n-     * @param properties map with properties\n-     * @return\n+     * Transforms map to log4j properties file format.\n+     *\n+     * @param properties map of log4j properties.\n+     * @return log4j properties as a String.\n      */\n     protected static String createPropertiesString(OrderedProperties properties) {\n-        return properties.asPairsWithComment(\"Do not change this generated file. Logging can be configured in the corresponding kubernetes/openshift resource.\");\n+        return properties.asPairsWithComment(\"Do not change this generated file. Logging can be configured in the corresponding Kubernetes/OpenShift resource.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d46147739744b0df62feb551d486ff7075109bd"}, "originalPosition": 239}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ4MDk5MQ==", "bodyText": "As before I would say just Kubernetes. The same for the others following this one.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3144#discussion_r434480991", "createdAt": "2020-06-03T10:54:56Z", "author": {"login": "ppatierno"}, "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaBridgeAssemblyOperatorTest.java", "diffHunk": "@@ -80,7 +80,7 @@\n     protected static Vertx vertx;\n     private static final String METRICS_CONFIG = \"{\\\"foo\\\":\\\"bar\\\"}\";\n     private static final String LOGGING_CONFIG = AbstractModel.getOrderedProperties(\"kafkaBridgeDefaultLoggingProperties\")\n-            .asPairsWithComment(\"Do not change this generated file. Logging can be configured in the corresponding kubernetes/openshift resource.\");\n+            .asPairsWithComment(\"Do not change this generated file. Logging can be configured in the corresponding Kubernetes/OpenShift resource.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d46147739744b0df62feb551d486ff7075109bd"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f11c788a100ac616f140aab1d89f3a79f387dadd", "author": {"user": {"login": "samuel-hawker", "name": "Samuel Hawker"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f11c788a100ac616f140aab1d89f3a79f387dadd", "committedDate": "2020-06-03T11:53:49Z", "message": "fix: Remove unneeded OpenShift references\n\nSigned-off-by: Samuel Hawker <samuel.hawker@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNDgzNTc0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3144#pullrequestreview-423483574", "createdAt": "2020-06-03T12:04:06Z", "commit": {"oid": "f11c788a100ac616f140aab1d89f3a79f387dadd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1472, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}