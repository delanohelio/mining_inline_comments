{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNTI1NDQ4", "number": 2728, "title": "[MO] - [system test] -> Fix race-condition for mirroring topics", "bodyText": "Signed-off-by: morsak xorsak02@stud.fit.vutbr.cz\nType of change\n\nBugfix\n\nDescription\nThis PR solving race-condition for mirroring topics and also changing name of the mirrored topics.\nChecklist\n\n Make sure all tests pass", "createdAt": "2020-03-20T13:14:47Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2728", "merged": true, "mergeCommit": {"oid": "40b24bfcf390d1f75e9e74fa2136450353455161"}, "closed": true, "closedAt": "2020-03-24T15:35:55Z", "author": {"login": "see-quick"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPgPvVAH2gAyMzkxNTI1NDQ4OjU0N2VhNzM4ZmE5NWZlOWU4ZTllMmVhZWE4ZjJmZTFmZWJmZjJkODk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQx2KrgFqTM4MDI0OTkxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "547ea738fa95fe9e8e9e2eaea8f2fe1febff2d89", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/547ea738fa95fe9e8e9e2eaea8f2fe1febff2d89", "committedDate": "2020-03-20T13:09:06Z", "message": "[MO] - [system test] -> fixes\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MDEzMTE0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2728#pullrequestreview-379013114", "createdAt": "2020-03-22T14:55:27Z", "commit": {"oid": "547ea738fa95fe9e8e9e2eaea8f2fe1febff2d89"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTYxMTQ4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2728#pullrequestreview-379161148", "createdAt": "2020-03-23T06:36:40Z", "commit": {"oid": "547ea738fa95fe9e8e9e2eaea8f2fe1febff2d89"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjozNjo0MFrOF54Vww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjozNzoxMVrOF54WSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzNjIyNw==", "bodyText": "out of curiosity, why an exception is logged as INFO and not as ERROR printing the stack trace? Is it the pattern that you are using everywhere?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2728#discussion_r396236227", "createdAt": "2020-03-23T06:36:40Z", "author": {"login": "ppatierno"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/oauth/OauthPlainST.java", "diffHunk": "@@ -193,10 +195,18 @@ void testProducerConsumerMirrorMaker() throws IOException, InterruptedException,\n                 .endSpec()\n                 .done();\n \n-        consumer = oauthKafkaClient.receiveMessages(TOPIC_NAME, NAMESPACE, targetKafkaCluster, MESSAGE_COUNT,\n-                CONSUMER_GROUP_NAME + \"-\" + rng.nextInt(Integer.MAX_VALUE));\n-\n-        assertThat(consumer.get(Constants.GLOBAL_CLIENTS_TIMEOUT, TimeUnit.MILLISECONDS), is(MESSAGE_COUNT));\n+        TestUtils.waitFor(\"Waiting for Mirror Maker will copy messages from \" + CLUSTER_NAME + \" to \" + targetKafkaCluster,\n+            Duration.ofSeconds(30).toMillis(), Constants.TIMEOUT_FOR_MIRROR_MAKER_COPY_MESSAGES_BETWEEN_BROKERS,\n+            () -> {\n+                try {\n+                    Future<Integer> oauthConsumer = oauthKafkaClient.receiveMessages(TOPIC_NAME, NAMESPACE, targetKafkaCluster,\n+                            MESSAGE_COUNT, CONSUMER_GROUP_NAME + \"-\" + rng.nextInt(Integer.MAX_VALUE));\n+                    return MESSAGE_COUNT == oauthConsumer.get(Constants.GLOBAL_CLIENTS_TIMEOUT, TimeUnit.MILLISECONDS);\n+                } catch (IOException | InterruptedException | ExecutionException | TimeoutException e) {\n+                    LOGGER.info(\"Consumer doesn't received messages {}\", e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "547ea738fa95fe9e8e9e2eaea8f2fe1febff2d89"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzNjM2MQ==", "bodyText": "Make it clear it's Mirror Maker 2 in the log message.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2728#discussion_r396236361", "createdAt": "2020-03-23T06:37:11Z", "author": {"login": "ppatierno"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/oauth/OauthPlainST.java", "diffHunk": "@@ -276,8 +287,18 @@ void testProducerConsumerMirrorMaker2() throws IOException, InterruptedException\n                 .endSpec()\n                 .done();\n \n-        consumer = oauthKafkaClient.receiveMessages(TOPIC_NAME, NAMESPACE, kafkaTargetClusterName, MESSAGE_COUNT,\n-                CONSUMER_GROUP_NAME + \"-\" + rng.nextInt(Integer.MAX_VALUE));\n+        TestUtils.waitFor(\"Waiting for Mirror Maker will copy messages from \" + kafkaSourceClusterName + \" to \" + kafkaTargetClusterName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "547ea738fa95fe9e8e9e2eaea8f2fe1febff2d89"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ff521bce6e153d3347fcb4740f8e6aada5ff2a5", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8ff521bce6e153d3347fcb4740f8e6aada5ff2a5", "committedDate": "2020-03-24T12:06:18Z", "message": "[MO] - [commends] -> done\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMjQ5OTE0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2728#pullrequestreview-380249914", "createdAt": "2020-03-24T12:13:23Z", "commit": {"oid": "8ff521bce6e153d3347fcb4740f8e6aada5ff2a5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2097, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}